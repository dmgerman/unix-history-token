begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $OpenBSD: schnorr.h,v 1.1 2009/03/05 07:18:19 djm Exp $ */
end_comment

begin_comment
comment|/*  * Copyright (c) 2009 Damien Miller.  All rights reserved.  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SCHNORR_H
end_ifndef

begin_define
define|#
directive|define
name|SCHNORR_H
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<openssl/bn.h>
end_include

begin_struct
struct|struct
name|modp_group
block|{
name|BIGNUM
modifier|*
name|p
decl_stmt|,
modifier|*
name|q
decl_stmt|,
modifier|*
name|g
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|BIGNUM
modifier|*
name|bn_rand_range_gt_one
parameter_list|(
specifier|const
name|BIGNUM
modifier|*
name|high
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hash_buffer
parameter_list|(
specifier|const
name|u_char
modifier|*
parameter_list|,
name|u_int
parameter_list|,
specifier|const
name|EVP_MD
modifier|*
parameter_list|,
name|u_char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|debug3_bn
parameter_list|(
specifier|const
name|BIGNUM
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|__attribute__
parameter_list|(
function_decl|(__nonnull__
parameter_list|(
function_decl|2
end_function_decl

begin_expr_stmt
unit|)))
name|__attribute__
argument_list|(
operator|(
name|format
argument_list|(
name|printf
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function_decl
name|void
name|debug3_buf
parameter_list|(
specifier|const
name|u_char
modifier|*
parameter_list|,
name|u_int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|__attribute__
parameter_list|(
function_decl|(__nonnull__
parameter_list|(
function_decl|3
end_function_decl

begin_expr_stmt
unit|)))
name|__attribute__
argument_list|(
operator|(
name|format
argument_list|(
name|printf
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function_decl
name|struct
name|modp_group
modifier|*
name|modp_group_from_g_and_safe_p
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|modp_group_free
parameter_list|(
name|struct
name|modp_group
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Signature and verification functions */
end_comment

begin_function_decl
name|int
name|schnorr_sign
parameter_list|(
specifier|const
name|BIGNUM
modifier|*
name|grp_p
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|grp_q
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|grp_g
parameter_list|,
specifier|const
name|EVP_MD
modifier|*
name|evp_md
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|x
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|g_x
parameter_list|,
specifier|const
name|u_char
modifier|*
name|id
parameter_list|,
name|u_int
name|idlen
parameter_list|,
name|BIGNUM
modifier|*
modifier|*
name|r_p
parameter_list|,
name|BIGNUM
modifier|*
modifier|*
name|e_p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|schnorr_sign_buf
parameter_list|(
specifier|const
name|BIGNUM
modifier|*
name|grp_p
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|grp_q
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|grp_g
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|x
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|g_x
parameter_list|,
specifier|const
name|u_char
modifier|*
name|id
parameter_list|,
name|u_int
name|idlen
parameter_list|,
name|u_char
modifier|*
modifier|*
name|sig
parameter_list|,
name|u_int
modifier|*
name|siglen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|schnorr_verify
parameter_list|(
specifier|const
name|BIGNUM
modifier|*
name|grp_p
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|grp_q
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|grp_g
parameter_list|,
specifier|const
name|EVP_MD
modifier|*
name|evp_md
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|g_x
parameter_list|,
specifier|const
name|u_char
modifier|*
name|id
parameter_list|,
name|u_int
name|idlen
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|r
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|e
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|schnorr_verify_buf
parameter_list|(
specifier|const
name|BIGNUM
modifier|*
name|grp_p
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|grp_q
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|grp_g
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|g_x
parameter_list|,
specifier|const
name|u_char
modifier|*
name|id
parameter_list|,
name|u_int
name|idlen
parameter_list|,
specifier|const
name|u_char
modifier|*
name|sig
parameter_list|,
name|u_int
name|siglen
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* JPAKE_H */
end_comment

end_unit

