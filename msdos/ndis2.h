begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*   * Copyright (c) 1993,1994  *      Texas A&M University.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *      This product includes software developed by Texas A&M University  *      and its contributors.  * 4. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE UNIVERSITY OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * Developers:  *             David K. Hess, Douglas Lee Schales, David R. Safford  *  * Heavily modified for Metaware HighC + GNU C 2.8+  *             Gisle Vanem 1998  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__PCAP_NDIS_H
end_ifndef

begin_define
define|#
directive|define
name|__PCAP_NDIS_H
end_define

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__HIGHC__
argument_list|)
end_if

begin_define
define|#
directive|define
name|pascal
value|_CC(_CALLEE_POPS_STACK& ~_REVERSE_PARMS)
end_define

begin_comment
comment|/* calling convention */
end_comment

begin_define
define|#
directive|define
name|CALLBACK
parameter_list|(
name|foo
parameter_list|)
value|pascal WORD foo
end_define

begin_define
define|#
directive|define
name|PAS_PTR
parameter_list|(
name|x
parameter_list|,
name|arg
parameter_list|)
value|typedef FAR WORD pascal (*x) arg
end_define

begin_define
define|#
directive|define
name|GUARD
parameter_list|()
value|_inline (0x9C,0xFA)
end_define

begin_comment
comment|/* pushfd, cli */
end_comment

begin_define
define|#
directive|define
name|UNGUARD
parameter_list|()
value|_inline (0x9D)
end_define

begin_comment
comment|/* popfd */
end_comment

begin_define
define|#
directive|define
name|FAR
value|_far
end_define

begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|__GNUC__
argument_list|)
end_elif

begin_define
define|#
directive|define
name|CALLBACK
parameter_list|(
name|foo
parameter_list|)
value|WORD foo __attribute__((stdcall))
end_define

begin_define
define|#
directive|define
name|PAS_PTR
parameter_list|(
name|x
parameter_list|,
name|arg
parameter_list|)
value|typedef WORD (*x) arg __attribute__((stdcall))
end_define

begin_define
define|#
directive|define
name|GUARD
parameter_list|()
value|__asm__ __volatile__ ("pushfd; cli")
end_define

begin_define
define|#
directive|define
name|UNGUARD
parameter_list|()
value|__asm__ __volatile__ ("popfd")
end_define

begin_define
define|#
directive|define
name|FAR
end_define

begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|__TURBOC__
argument_list|)
end_elif

begin_define
define|#
directive|define
name|CALLBACK
parameter_list|(
name|foo
parameter_list|)
value|WORD pascal foo
end_define

begin_define
define|#
directive|define
name|PAS_PTR
parameter_list|(
name|x
parameter_list|,
name|arg
parameter_list|)
value|typedef WORD pascal (_far *x) arg
end_define

begin_define
define|#
directive|define
name|GUARD
parameter_list|()
value|_asm { pushf; cli }
end_define

begin_define
define|#
directive|define
name|UNGUARD
parameter_list|()
value|_asm { popf }
end_define

begin_define
define|#
directive|define
name|FAR
value|_far
end_define

begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|__WATCOMC__
argument_list|)
end_elif

begin_define
define|#
directive|define
name|CALLBACK
parameter_list|(
name|foo
parameter_list|)
value|WORD pascal foo
end_define

begin_define
define|#
directive|define
name|PAS_PTR
parameter_list|(
name|x
parameter_list|,
name|arg
parameter_list|)
value|typedef WORD pascal (_far *x) arg
end_define

begin_define
define|#
directive|define
name|GUARD
parameter_list|()
value|_disable()
end_define

begin_define
define|#
directive|define
name|UNGUARD
parameter_list|()
value|_enable()
end_define

begin_define
define|#
directive|define
name|FAR
value|_far
end_define

begin_else
else|#
directive|else
end_else

begin_error
error|#
directive|error
error|Unsupported compiler
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  *  Forwards  */
end_comment

begin_struct_decl
struct_decl|struct
name|_ReqBlock
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|_TxBufDescr
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|_TDBufDescr
struct_decl|;
end_struct_decl

begin_comment
comment|/*  * Protocol Manager API  */
end_comment

begin_expr_stmt
name|PAS_PTR
argument_list|(
name|ProtMan
argument_list|,
operator|(
expr|struct
name|_ReqBlock
name|FAR
operator|*
operator|,
name|WORD
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/*  * System request  */
end_comment

begin_expr_stmt
name|PAS_PTR
argument_list|(
name|SystemRequest
argument_list|,
operator|(
name|DWORD
operator|,
name|DWORD
operator|,
name|WORD
operator|,
name|WORD
operator|,
name|WORD
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/*  * MAC API  */
end_comment

begin_expr_stmt
name|PAS_PTR
argument_list|(
name|TransmitChain
argument_list|,
operator|(
name|WORD
operator|,
name|WORD
operator|,
expr|struct
name|_TxBufDescr
name|FAR
operator|*
operator|,
name|WORD
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|PAS_PTR
argument_list|(
name|TransferData
argument_list|,
operator|(
name|WORD
operator|*
operator|,
name|WORD
operator|,
expr|struct
name|_TDBufDescr
name|FAR
operator|*
operator|,
name|WORD
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|PAS_PTR
argument_list|(
name|Request
argument_list|,
operator|(
name|WORD
operator|,
name|WORD
operator|,
name|WORD
operator|,
name|DWORD
operator|,
name|WORD
operator|,
name|WORD
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|PAS_PTR
argument_list|(
name|ReceiveRelease
argument_list|,
operator|(
name|WORD
operator|,
name|WORD
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|PAS_PTR
argument_list|(
name|IndicationOn
argument_list|,
operator|(
name|WORD
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|PAS_PTR
argument_list|(
name|IndicationOff
argument_list|,
operator|(
name|WORD
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_typedef
typedef|typedef
enum|enum
block|{
name|HARDWARE_NOT_INSTALLED
init|=
literal|0
block|,
name|HARDWARE_FAILED_DIAG
init|=
literal|1
block|,
name|HARDWARE_FAILED_CONFIG
init|=
literal|2
block|,
name|HARDWARE_HARD_FAULT
init|=
literal|3
block|,
name|HARDWARE_SOFT_FAULT
init|=
literal|4
block|,
name|HARDWARE_OK
init|=
literal|7
block|,
name|HARDWARE_MASK
init|=
literal|0x0007
block|,
name|MAC_BOUND
init|=
literal|0x0008
block|,
name|MAC_OPEN
init|=
literal|0x0010
block|,
name|DIAG_IN_PROGRESS
init|=
literal|0x0020
block|}
name|NdisMacStatus
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|STATUS_RING_STATUS
init|=
literal|1
block|,
name|STATUS_ADAPTER_CHECK
init|=
literal|2
block|,
name|STATUS_START_RESET
init|=
literal|3
block|,
name|STATUS_INTERRUPT
init|=
literal|4
block|,
name|STATUS_END_RESET
init|=
literal|5
block|}
name|NdisStatus
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|FILTER_DIRECTED
init|=
literal|1
block|,
name|FILTER_BROADCAST
init|=
literal|2
block|,
name|FILTER_PROMISCUOUS
init|=
literal|4
block|,
name|FILTER_SOURCE_ROUTE
init|=
literal|8
block|}
name|NdisPacketFilter
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|REQ_INITIATE_DIAGNOSTICS
init|=
literal|1
block|,
name|REQ_READ_ERROR_LOG
init|=
literal|2
block|,
name|REQ_SET_STATION_ADDRESS
init|=
literal|3
block|,
name|REQ_OPEN_ADAPTER
init|=
literal|4
block|,
name|REQ_CLOSE_ADAPTER
init|=
literal|5
block|,
name|REQ_RESET_MAC
init|=
literal|6
block|,
name|REQ_SET_PACKET_FILTER
init|=
literal|7
block|,
name|REQ_ADD_MULTICAST_ADDRESS
init|=
literal|8
block|,
name|REQ_DELETE_MULTICAST_ADDRESS
init|=
literal|9
block|,
name|REQ_UPDATE_STATISTICS
init|=
literal|10
block|,
name|REQ_CLEAR_STATISTICS
init|=
literal|11
block|,
name|REQ_INTERRUPT_REQUEST
init|=
literal|12
block|,
name|REQ_SET_FUNCTIONAL_ADDRESS
init|=
literal|13
block|,
name|REQ_SET_LOOKAHEAD
init|=
literal|14
block|}
name|NdisGeneralRequest
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|SF_BROADCAST
init|=
literal|0x00000001L
block|,
name|SF_MULTICAST
init|=
literal|0x00000002L
block|,
name|SF_FUNCTIONAL
init|=
literal|0x00000004L
block|,
name|SF_PROMISCUOUS
init|=
literal|0x00000008L
block|,
name|SF_SOFT_ADDRESS
init|=
literal|0x00000010L
block|,
name|SF_STATS_CURRENT
init|=
literal|0x00000020L
block|,
name|SF_INITIATE_DIAGS
init|=
literal|0x00000040L
block|,
name|SF_LOOPBACK
init|=
literal|0x00000080L
block|,
name|SF_RECEIVE_CHAIN
init|=
literal|0x00000100L
block|,
name|SF_SOURCE_ROUTING
init|=
literal|0x00000200L
block|,
name|SF_RESET_MAC
init|=
literal|0x00000400L
block|,
name|SF_OPEN_CLOSE
init|=
literal|0x00000800L
block|,
name|SF_INTERRUPT_REQUEST
init|=
literal|0x00001000L
block|,
name|SF_SOURCE_ROUTING_BRIDGE
init|=
literal|0x00002000L
block|,
name|SF_VIRTUAL_ADDRESSES
init|=
literal|0x00004000L
block|}
name|NdisMacServiceFlags
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|REQ_INITIATE_BIND
init|=
literal|1
block|,
name|REQ_BIND
init|=
literal|2
block|,
name|REQ_INITIATE_PREBIND
init|=
literal|3
block|,
name|REQ_INITIATE_UNBIND
init|=
literal|4
block|,
name|REQ_UNBIND
init|=
literal|5
block|}
name|NdisSysRequest
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|PM_GET_PROTOCOL_MANAGER_INFO
init|=
literal|1
block|,
name|PM_REGISTER_MODULE
init|=
literal|2
block|,
name|PM_BIND_AND_START
init|=
literal|3
block|,
name|PM_GET_PROTOCOL_MANAGER_LINKAGE
init|=
literal|4
block|,
name|PM_GET_PROTOCOL_INI_PATH
init|=
literal|5
block|,
name|PM_REGISTER_PROTOCOL_MANAGER_INFO
init|=
literal|6
block|,
name|PM_INIT_AND_REGISTER
init|=
literal|7
block|,
name|PM_UNBIND_AND_STOP
init|=
literal|8
block|,
name|PM_BIND_STATUS
init|=
literal|9
block|,
name|PM_REGISTER_STATUS
init|=
literal|10
block|}
name|NdisProtManager
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|ERR_SUCCESS
init|=
literal|0x00
block|,
name|ERR_WAIT_FOR_RELEASE
init|=
literal|0x01
block|,
name|ERR_REQUEST_QUEUED
init|=
literal|0x02
block|,
name|ERR_FRAME_NOT_RECOGNIZED
init|=
literal|0x03
block|,
name|ERR_FRAME_REJECTED
init|=
literal|0x04
block|,
name|ERR_FORWARD_FRAME
init|=
literal|0x05
block|,
name|ERR_OUT_OF_RESOURCE
init|=
literal|0x06
block|,
name|ERR_INVALID_PARAMETER
init|=
literal|0x07
block|,
name|ERR_INVALID_FUNCTION
init|=
literal|0x08
block|,
name|ERR_NOT_SUPPORTED
init|=
literal|0x09
block|,
name|ERR_HARDWARE_ERROR
init|=
literal|0x0A
block|,
name|ERR_TRANSMIT_ERROR
init|=
literal|0x0B
block|,
name|ERR_NO_SUCH_DESTINATION
init|=
literal|0x0C
block|,
name|ERR_BUFFER_TOO_SMALL
init|=
literal|0x0D
block|,
name|ERR_ALREADY_STARTED
init|=
literal|0x20
block|,
name|ERR_INCOMPLETE_BINDING
init|=
literal|0x21
block|,
name|ERR_DRIVER_NOT_INITIALIZED
init|=
literal|0x22
block|,
name|ERR_HARDWARE_NOT_FOUND
init|=
literal|0x23
block|,
name|ERR_HARDWARE_FAILURE
init|=
literal|0x24
block|,
name|ERR_CONFIGURATION_FAILURE
init|=
literal|0x25
block|,
name|ERR_INTERRUPT_CONFLICT
init|=
literal|0x26
block|,
name|ERR_INCOMPATIBLE_MAC
init|=
literal|0x27
block|,
name|ERR_INITIALIZATION_FAILED
init|=
literal|0x28
block|,
name|ERR_NO_BINDING
init|=
literal|0x29
block|,
name|ERR_NETWORK_MAY_NOT_BE_CONNECTED
init|=
literal|0x2A
block|,
name|ERR_INCOMPATIBLE_OS_VERSION
init|=
literal|0x2B
block|,
name|ERR_ALREADY_REGISTERED
init|=
literal|0x2C
block|,
name|ERR_PATH_NOT_FOUND
init|=
literal|0x2D
block|,
name|ERR_INSUFFICIENT_MEMORY
init|=
literal|0x2E
block|,
name|ERR_INFO_NOT_FOUND
init|=
literal|0x2F
block|,
name|ERR_GENERAL_FAILURE
init|=
literal|0xFF
block|}
name|NdisError
typedef|;
end_typedef

begin_define
define|#
directive|define
name|NDIS_PARAM_INTEGER
value|0
end_define

begin_define
define|#
directive|define
name|NDIS_PARAM_STRING
value|1
end_define

begin_define
define|#
directive|define
name|NDIS_TX_BUF_LENGTH
value|8
end_define

begin_define
define|#
directive|define
name|NDIS_TD_BUF_LENGTH
value|1
end_define

begin_define
define|#
directive|define
name|NDIS_RX_BUF_LENGTH
value|8
end_define

begin_define
define|#
directive|define
name|NDIS_PTR_PHYSICAL
value|0
end_define

begin_define
define|#
directive|define
name|NDIS_PTR_VIRTUAL
value|2
end_define

begin_define
define|#
directive|define
name|NDIS_PATH
value|"PROTMAN$"
end_define

begin_typedef
typedef|typedef
struct|struct
name|_CommonChars
block|{
name|WORD
name|tableSize
decl_stmt|;
name|BYTE
name|majorNdisVersion
decl_stmt|;
comment|/* 2 - Latest version */
name|BYTE
name|minorNdisVersion
decl_stmt|;
comment|/* 0                  */
name|WORD
name|reserved1
decl_stmt|;
name|BYTE
name|majorModuleVersion
decl_stmt|;
name|BYTE
name|minorModuleVersion
decl_stmt|;
name|DWORD
name|moduleFlags
decl_stmt|;
comment|/* 0 - Binding at upper boundary supported          * 1 - Binding at lower boundary supported          * 2 - Dynamically bound.          * 3-31 - Reserved, must be zero.          */
name|BYTE
name|moduleName
index|[
literal|16
index|]
decl_stmt|;
name|BYTE
name|protocolLevelUpper
decl_stmt|;
comment|/* 1 - MAC          * 2 - Data Link          * 3 - Network          * 4 - Transport          * 5 - Session          * -1 - Not specified          */
name|BYTE
name|interfaceUpper
decl_stmt|;
name|BYTE
name|protocolLevelLower
decl_stmt|;
comment|/* 0 - Physical          * 1 - MAC          * 2 - Data Link          * 3 - Network          * 4 - Transport          * 5 - Session          * -1 - Not specified          */
name|BYTE
name|interfaceLower
decl_stmt|;
name|WORD
name|moduleId
decl_stmt|;
name|WORD
name|moduleDS
decl_stmt|;
name|SystemRequest
name|systemRequest
decl_stmt|;
name|BYTE
modifier|*
name|serviceChars
decl_stmt|;
name|BYTE
modifier|*
name|serviceStatus
decl_stmt|;
name|BYTE
modifier|*
name|upperDispatchTable
decl_stmt|;
name|BYTE
modifier|*
name|lowerDispatchTable
decl_stmt|;
name|BYTE
modifier|*
name|reserved2
decl_stmt|;
comment|/* Must be NULL */
name|BYTE
modifier|*
name|reserved3
decl_stmt|;
comment|/* Must be NULL */
block|}
name|CommonChars
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_MulticastList
block|{
name|WORD
name|maxMulticastAddresses
decl_stmt|;
name|WORD
name|numberMulticastAddresses
decl_stmt|;
name|BYTE
name|multicastAddress
index|[
literal|16
index|]
index|[
literal|16
index|]
decl_stmt|;
block|}
name|MulticastList
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_MacChars
block|{
name|WORD
name|tableSize
decl_stmt|;
name|BYTE
name|macName
index|[
literal|16
index|]
decl_stmt|;
name|WORD
name|addressLength
decl_stmt|;
name|BYTE
name|permanentAddress
index|[
literal|16
index|]
decl_stmt|;
name|BYTE
name|currentAddress
index|[
literal|16
index|]
decl_stmt|;
name|DWORD
name|currentFunctionalAddress
decl_stmt|;
name|MulticastList
modifier|*
name|multicastList
decl_stmt|;
name|DWORD
name|linkSpeed
decl_stmt|;
name|DWORD
name|serviceFlags
decl_stmt|;
name|WORD
name|maxFrameSize
decl_stmt|;
name|DWORD
name|txBufferSize
decl_stmt|;
name|WORD
name|txBufferAllocSize
decl_stmt|;
name|DWORD
name|rxBufferSize
decl_stmt|;
name|WORD
name|rxBufferAllocSize
decl_stmt|;
name|BYTE
name|ieeeVendor
index|[
literal|3
index|]
decl_stmt|;
name|BYTE
name|vendorAdapter
decl_stmt|;
name|BYTE
modifier|*
name|vendorAdapterDescription
decl_stmt|;
name|WORD
name|interruptLevel
decl_stmt|;
name|WORD
name|txQueueDepth
decl_stmt|;
name|WORD
name|maxDataBlocks
decl_stmt|;
block|}
name|MacChars
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_ProtocolChars
block|{
name|WORD
name|length
decl_stmt|;
name|BYTE
name|name
index|[
literal|16
index|]
decl_stmt|;
name|WORD
name|type
decl_stmt|;
block|}
name|ProtocolChars
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_MacUpperDispatch
block|{
name|CommonChars
modifier|*
name|backPointer
decl_stmt|;
name|Request
name|request
decl_stmt|;
name|TransmitChain
name|transmitChain
decl_stmt|;
name|TransferData
name|transferData
decl_stmt|;
name|ReceiveRelease
name|receiveRelease
decl_stmt|;
name|IndicationOn
name|indicationOn
decl_stmt|;
name|IndicationOff
name|indicationOff
decl_stmt|;
block|}
name|MacUpperDispatch
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_MacStatusTable
block|{
name|WORD
name|tableSize
decl_stmt|;
name|DWORD
name|lastDiag
decl_stmt|;
name|DWORD
name|macStatus
decl_stmt|;
name|WORD
name|packetFilter
decl_stmt|;
name|BYTE
modifier|*
name|mediaSpecificStats
decl_stmt|;
name|DWORD
name|lastClear
decl_stmt|;
name|DWORD
name|totalFramesRx
decl_stmt|;
name|DWORD
name|totalFramesCrc
decl_stmt|;
name|DWORD
name|totalBytesRx
decl_stmt|;
name|DWORD
name|totalDiscardBufSpaceRx
decl_stmt|;
name|DWORD
name|totalMulticastRx
decl_stmt|;
name|DWORD
name|totalBroadcastRx
decl_stmt|;
name|DWORD
name|obsolete1
index|[
literal|5
index|]
decl_stmt|;
name|DWORD
name|totalDiscardHwErrorRx
decl_stmt|;
name|DWORD
name|totalFramesTx
decl_stmt|;
name|DWORD
name|totalBytesTx
decl_stmt|;
name|DWORD
name|totalMulticastTx
decl_stmt|;
name|DWORD
name|totalBroadcastTx
decl_stmt|;
name|DWORD
name|obsolete2
index|[
literal|2
index|]
decl_stmt|;
name|DWORD
name|totalDiscardTimeoutTx
decl_stmt|;
name|DWORD
name|totalDiscardHwErrorTx
decl_stmt|;
block|}
name|MacStatusTable
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_ProtDispatch
block|{
name|CommonChars
modifier|*
name|backPointer
decl_stmt|;
name|DWORD
name|flags
decl_stmt|;
comment|/* 0 - handles non-LLC frames          * 1 - handles specific-LSAP LLC frames          * 2 - handles specific-LSAP LLC frames          * 3-31 - reserved must be 0          */
name|void
function_decl|(
modifier|*
name|requestConfirm
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|transmitConfirm
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|receiveLookahead
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|indicationComplete
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|receiveChain
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|status
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
block|}
name|ProtDispatch
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_ReqBlock
block|{
name|WORD
name|opcode
decl_stmt|;
name|WORD
name|status
decl_stmt|;
name|BYTE
name|FAR
modifier|*
name|pointer1
decl_stmt|;
name|BYTE
name|FAR
modifier|*
name|pointer2
decl_stmt|;
name|WORD
name|word1
decl_stmt|;
block|}
name|ReqBlock
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_TxBufDescrRec
block|{
name|BYTE
name|txPtrType
decl_stmt|;
name|BYTE
name|dummy
decl_stmt|;
name|WORD
name|txDataLen
decl_stmt|;
name|BYTE
modifier|*
name|txDataPtr
decl_stmt|;
block|}
name|TxBufDescrRec
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_TxBufDescr
block|{
name|WORD
name|txImmedLen
decl_stmt|;
name|BYTE
modifier|*
name|txImmedPtr
decl_stmt|;
name|WORD
name|txDataCount
decl_stmt|;
name|TxBufDescrRec
name|txBufDescrRec
index|[
name|NDIS_TX_BUF_LENGTH
index|]
decl_stmt|;
block|}
name|TxBufDescr
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_TDBufDescrRec
block|{
name|BYTE
name|tDPtrType
decl_stmt|;
name|BYTE
name|dummy
decl_stmt|;
name|WORD
name|tDDataLen
decl_stmt|;
name|BYTE
modifier|*
name|tDDataPtr
decl_stmt|;
block|}
name|TDBufDescrRec
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_TDBufDescr
block|{
name|WORD
name|tDDataCount
decl_stmt|;
name|TDBufDescrRec
name|tDBufDescrRec
index|[
name|NDIS_TD_BUF_LENGTH
index|]
decl_stmt|;
block|}
name|TDBufDescr
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_RxBufDescrRec
block|{
name|WORD
name|rxDataLen
decl_stmt|;
name|BYTE
modifier|*
name|rxDataPtr
decl_stmt|;
block|}
name|RxBufDescrRec
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_RxBufDescr
block|{
name|WORD
name|rxDataCount
decl_stmt|;
name|RxBufDescrRec
name|rxBufDescrRec
index|[
name|NDIS_RX_BUF_LENGTH
index|]
decl_stmt|;
block|}
name|RxBufDescr
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_PktBuf
block|{
name|struct
name|_PktBuf
modifier|*
name|nextLink
decl_stmt|;
name|struct
name|_PktBuf
modifier|*
name|prevLink
decl_stmt|;
name|int
name|handle
decl_stmt|;
name|int
name|length
decl_stmt|;
name|int
name|packetLength
decl_stmt|;
name|DWORD
name|sequence
decl_stmt|;
name|BYTE
modifier|*
name|buffer
decl_stmt|;
block|}
name|PktBuf
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_CardHandle
block|{
name|BYTE
name|moduleName
index|[
literal|16
index|]
decl_stmt|;
name|CommonChars
modifier|*
name|common
decl_stmt|;
block|}
name|CardHandle
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_BindingsList
block|{
name|WORD
name|numBindings
decl_stmt|;
name|BYTE
name|moduleName
index|[
literal|2
index|]
index|[
literal|16
index|]
decl_stmt|;
block|}
name|BindingsList
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_FailingModules
block|{
name|BYTE
name|upperModuleName
index|[
literal|16
index|]
decl_stmt|;
name|BYTE
name|lowerModuleName
index|[
literal|16
index|]
decl_stmt|;
block|}
name|FailingModules
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
name|_HardwareAddress
block|{
name|BYTE
name|bytes
index|[
literal|6
index|]
decl_stmt|;
name|WORD
name|words
index|[
literal|3
index|]
decl_stmt|;
struct|struct
block|{
name|BYTE
name|bytes
index|[
literal|6
index|]
decl_stmt|;
block|}
name|addr
struct|;
block|}
name|HardwareAddress
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_FddiHeader
block|{
name|BYTE
name|frameControl
decl_stmt|;
name|HardwareAddress
name|etherDestHost
decl_stmt|;
name|HardwareAddress
name|etherSrcHost
decl_stmt|;
block|}
name|FddiHeader
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_EthernetIIHeader
block|{
name|HardwareAddress
name|etherDestHost
decl_stmt|;
name|HardwareAddress
name|etherSrcHost
decl_stmt|;
name|WORD
name|etherType
decl_stmt|;
block|}
name|EthernetIIHeader
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_Ieee802Dot5Header
block|{
name|HardwareAddress
name|etherDestHost
decl_stmt|;
name|HardwareAddress
name|etherSrcHost
decl_stmt|;
name|BYTE
name|routeInfo
index|[
literal|30
index|]
decl_stmt|;
block|}
name|Ieee802Dot5Header
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_Ieee802Dot2SnapHeader
block|{
name|BYTE
name|dsap
decl_stmt|;
comment|/* 0xAA */
name|BYTE
name|ssap
decl_stmt|;
comment|/* 0xAA */
name|BYTE
name|control
decl_stmt|;
comment|/* 3    */
name|BYTE
name|protocolId
index|[
literal|5
index|]
decl_stmt|;
block|}
name|Ieee802Dot2SnapHeader
typedef|;
end_typedef

begin_comment
comment|/*  *  Prototypes  */
end_comment

begin_function_decl
specifier|extern
name|char
modifier|*
name|NdisLastError
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|NdisOpen
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|NdisInit
parameter_list|(
name|int
name|promis
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|NdisRegisterAndBind
parameter_list|(
name|int
name|promis
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|NdisShutdown
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|NdisCheckMacFeatures
parameter_list|(
name|struct
name|_CardHandle
modifier|*
name|card
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|NdisSendPacket
parameter_list|(
name|struct
name|_PktBuf
modifier|*
name|pktBuf
parameter_list|,
name|int
name|macId
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  *  Assembly "glue" functions  */
end_comment

begin_function_decl
specifier|extern
name|int
name|systemRequestGlue
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|requestConfirmGlue
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|transmitConfirmGlue
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|receiveLookaheadGlue
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|indicationCompleteGlue
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|receiveChainGlue
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|statusGlue
parameter_list|()
function_decl|;
end_function_decl

begin_comment
comment|/*  *  IOCTL function  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__SMALL__
end_ifdef

begin_function_decl
specifier|extern
name|int
name|_far
name|NdisGetLinkage
parameter_list|(
name|int
name|handle
parameter_list|,
name|char
modifier|*
name|data
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_function_decl
specifier|extern
name|int
name|NdisGetLinkage
parameter_list|(
name|int
name|handle
parameter_list|,
name|char
modifier|*
name|data
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  *  NDIS callback handlers  */
end_comment

begin_expr_stmt
name|CALLBACK
argument_list|(
name|NdisSystemRequest
argument_list|(
name|DWORD
argument_list|,
name|DWORD
argument_list|,
name|WORD
argument_list|,
name|WORD
argument_list|,
name|WORD
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|CALLBACK
argument_list|(
name|NdisRequestConfirm
argument_list|(
name|WORD
argument_list|,
name|WORD
argument_list|,
name|WORD
argument_list|,
name|WORD
argument_list|,
name|WORD
argument_list|,
name|WORD
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|CALLBACK
argument_list|(
name|NdisTransmitConfirm
argument_list|(
name|WORD
argument_list|,
name|WORD
argument_list|,
name|WORD
argument_list|,
name|WORD
argument_list|,
name|WORD
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|CALLBACK
argument_list|(
name|NdisReceiveLookahead
argument_list|(
name|WORD
argument_list|,
name|WORD
argument_list|,
name|WORD
argument_list|,
name|BYTE
operator|*
argument_list|,
name|BYTE
operator|*
argument_list|,
name|WORD
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|CALLBACK
argument_list|(
name|NdisReceiveChain
argument_list|(
name|WORD
argument_list|,
name|WORD
argument_list|,
name|WORD
argument_list|,
expr|struct
name|_RxBufDescr
operator|*
argument_list|,
name|BYTE
operator|*
argument_list|,
name|WORD
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|CALLBACK
argument_list|(
name|NdisStatusProc
argument_list|(
name|WORD
argument_list|,
name|WORD
argument_list|,
name|BYTE
operator|*
argument_list|,
name|WORD
argument_list|,
name|WORD
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|CALLBACK
argument_list|(
name|NdisIndicationComplete
argument_list|(
name|WORD
argument_list|,
name|WORD
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function_decl
name|BYTE
modifier|*
name|NdisAllocStack
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|NdisFreeStack
parameter_list|(
name|BYTE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|__HIGHC__
end_ifdef

begin_define
define|#
directive|define
name|RENAME_ASM_SYM
parameter_list|(
name|x
parameter_list|)
value|pragma Alias(x,"@" #x "")
end_define

begin_comment
comment|/* prepend `@' */
end_comment

begin_define
define|#
directive|define
name|RENAME_C_SYM
parameter_list|(
name|x
parameter_list|)
value|pragma Alias(x,"_" #x "")
end_define

begin_comment
comment|/* prepend `_' */
end_comment

begin_expr_stmt
name|RENAME_ASM_SYM
argument_list|(
name|systemRequestGlue
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_ASM_SYM
argument_list|(
name|requestConfirmGlue
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_ASM_SYM
argument_list|(
name|transmitConfirmGlue
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_ASM_SYM
argument_list|(
name|receiveLookaheadGlue
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_ASM_SYM
argument_list|(
name|indicationCompleteGlue
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_ASM_SYM
argument_list|(
name|receiveChainGlue
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_ASM_SYM
argument_list|(
name|statusGlue
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_ASM_SYM
argument_list|(
name|NdisGetLinkage
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_C_SYM
argument_list|(
name|NdisSystemRequest
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_C_SYM
argument_list|(
name|NdisRequestConfirm
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_C_SYM
argument_list|(
name|NdisTransmitConfirm
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_C_SYM
argument_list|(
name|NdisReceiveLookahead
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_C_SYM
argument_list|(
name|NdisIndicationComplete
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_C_SYM
argument_list|(
name|NdisReceiveChain
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_C_SYM
argument_list|(
name|NdisStatusProc
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_C_SYM
argument_list|(
name|NdisAllocStack
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RENAME_C_SYM
argument_list|(
name|NdisFreeStack
argument_list|)
expr_stmt|;
end_expr_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

