begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1991, 1993  *	The Regents of the University of California.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by the University of  *	California, Berkeley and its contributors.  * 4. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	@(#)extern.h	8.1 (Berkeley) 5/31/93  * $FreeBSD$  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_comment
comment|/*  * csh.c  */
end_comment

begin_decl_stmt
name|int
name|gethdir
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dosource
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|exitstat
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|goodbye
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|importpath
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|initdesc
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pintr
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pintr1
name|__P
argument_list|(
operator|(
name|bool
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|printprompt
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|process
name|__P
argument_list|(
operator|(
name|bool
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|rechist
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|untty
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|vis_fputc
name|__P
argument_list|(
operator|(
name|int
operator|,
name|FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|PROF
end_ifdef

begin_decl_stmt
name|void
name|done
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
name|void
name|xexit
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * dir.c  */
end_comment

begin_decl_stmt
name|void
name|dinit
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dodirs
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|dcanon
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dtildepr
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dtilde
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dochngd
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|dnormalize
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dopushd
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dopopd
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_struct_decl
struct_decl|struct
name|directory
struct_decl|;
end_struct_decl

begin_decl_stmt
name|void
name|dfree
name|__P
argument_list|(
operator|(
expr|struct
name|directory
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * dol.c  */
end_comment

begin_decl_stmt
name|void
name|Dfix
name|__P
argument_list|(
operator|(
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|Dfix1
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|heredoc
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * err.c  */
end_comment

begin_decl_stmt
name|void
name|seterror
name|__P
argument_list|(
operator|(
name|int
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|stderror
name|__P
argument_list|(
operator|(
name|int
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * exec.c  */
end_comment

begin_decl_stmt
name|void
name|doexec
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dohash
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dounhash
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dowhich
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|execash
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|hashstat
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|xechoit
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * exp.c  */
end_comment

begin_decl_stmt
name|int
name|expr
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|exp0
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|*
operator|,
name|bool
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * file.c  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|FILEC
end_ifdef

begin_decl_stmt
name|int
name|tenex
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * func.c  */
end_comment

begin_decl_stmt
name|void
name|Setenv
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doalias
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dobreak
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|docontin
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doecho
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doelse
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doend
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doeval
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doexit
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doforeach
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doglob
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dogoto
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doif
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dolimit
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dologin
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dologout
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|donohup
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doonintr
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doprintf
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dorepeat
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dosetenv
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dosuspend
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doswbrk
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doswitch
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doumask
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dounlimit
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dounsetenv
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dowhile
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dozip
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|func
name|__P
argument_list|(
operator|(
expr|struct
name|command
operator|*
operator|,
expr|struct
name|biltins
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|biltins
modifier|*
name|isbfunc
name|__P
argument_list|(
operator|(
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|prvars
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|gotolab
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|srchx
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|unalias
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|wfree
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * glob.c  */
end_comment

begin_decl_stmt
name|Char
modifier|*
modifier|*
name|dobackp
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|bool
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|Gcat
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|globone
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|Gmatch
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ginit
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
modifier|*
name|globall
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|rscan
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
name|void
argument_list|(
operator|*
argument_list|)
argument_list|()
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|tglob
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|trim
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|FILEC
end_ifdef

begin_decl_stmt
name|int
name|sortscmp
name|__P
argument_list|(
operator|(
specifier|const
name|ptr_t
operator|,
specifier|const
name|ptr_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* FILEC */
end_comment

begin_comment
comment|/*  * hist.c  */
end_comment

begin_decl_stmt
name|void
name|dohist
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|Hist
modifier|*
name|enthist
name|__P
argument_list|(
operator|(
name|int
operator|,
expr|struct
name|wordent
operator|*
operator|,
name|bool
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|savehist
name|__P
argument_list|(
operator|(
expr|struct
name|wordent
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * lex.c  */
end_comment

begin_decl_stmt
name|void
name|addla
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bseek
name|__P
argument_list|(
operator|(
expr|struct
name|Ain
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|btell
name|__P
argument_list|(
operator|(
expr|struct
name|Ain
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|btoeof
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|copylex
name|__P
argument_list|(
operator|(
expr|struct
name|wordent
operator|*
operator|,
expr|struct
name|wordent
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|domod
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|freelex
name|__P
argument_list|(
operator|(
expr|struct
name|wordent
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|lex
name|__P
argument_list|(
operator|(
expr|struct
name|wordent
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|prlex
name|__P
argument_list|(
operator|(
name|FILE
operator|*
operator|,
expr|struct
name|wordent
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|readc
name|__P
argument_list|(
operator|(
name|bool
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|settell
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|unreadc
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * misc.c  */
end_comment

begin_decl_stmt
name|int
name|any
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
modifier|*
name|blkcat
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
modifier|*
name|blkcpy
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
modifier|*
name|blkend
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|blkfree
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|blklen
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|blkpr
name|__P
argument_list|(
operator|(
name|FILE
operator|*
operator|,
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
modifier|*
name|blkspl
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|closem
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
modifier|*
name|copyblk
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|dcopy
name|__P
argument_list|(
operator|(
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|dmove
name|__P
argument_list|(
operator|(
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|donefds
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
name|lastchr
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|lshift
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|number
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|prefix
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
modifier|*
name|saveblk
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|setzero
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|strip
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|strsave
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|strspl
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|,
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|udvar
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|SHORT_STRINGS
end_ifndef

begin_ifdef
ifdef|#
directive|ifdef
name|NOTUSED
end_ifdef

begin_decl_stmt
name|char
modifier|*
name|strstr
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* NOTUSED */
end_comment

begin_decl_stmt
name|char
modifier|*
name|strend
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * parse.c  */
end_comment

begin_decl_stmt
name|void
name|alias
name|__P
argument_list|(
operator|(
expr|struct
name|wordent
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|freesyn
name|__P
argument_list|(
operator|(
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|command
modifier|*
name|syntax
name|__P
argument_list|(
operator|(
expr|struct
name|wordent
operator|*
operator|,
expr|struct
name|wordent
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * proc.c  */
end_comment

begin_decl_stmt
name|void
name|dobg
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dobg1
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dofg
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dofg1
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dojobs
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dokill
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|donotify
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dostop
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dowait
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|palloc
name|__P
argument_list|(
operator|(
name|int
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|panystop
name|__P
argument_list|(
operator|(
name|bool
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pchild
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pendjob
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|process
modifier|*
name|pfind
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|pfork
name|__P
argument_list|(
operator|(
expr|struct
name|command
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pgetty
name|__P
argument_list|(
operator|(
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pjwait
name|__P
argument_list|(
operator|(
expr|struct
name|process
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pnote
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|prestjob
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|psavejob
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pstart
name|__P
argument_list|(
operator|(
expr|struct
name|process
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pwait
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * sem.c  */
end_comment

begin_decl_stmt
name|void
name|execute
name|__P
argument_list|(
operator|(
expr|struct
name|command
operator|*
operator|,
name|int
operator|,
name|int
operator|*
operator|,
name|int
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|mypipe
name|__P
argument_list|(
operator|(
name|int
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * set.c  */
end_comment

begin_decl_stmt
name|struct
name|varent
modifier|*
name|adrof1
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
expr|struct
name|varent
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doset
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dolet
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|putn
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|getn
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|value1
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
expr|struct
name|varent
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|set
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|set1
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|*
operator|,
expr|struct
name|varent
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|setq
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|*
operator|,
expr|struct
name|varent
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|unset
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|unset1
name|__P
argument_list|(
operator|(
name|Char
operator|*
index|[]
operator|,
expr|struct
name|varent
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|unsetv
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|setNS
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|shift
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|plist
name|__P
argument_list|(
operator|(
expr|struct
name|varent
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * time.c  */
end_comment

begin_decl_stmt
name|void
name|donice
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dotime
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|prusage
name|__P
argument_list|(
operator|(
expr|struct
name|rusage
operator|*
operator|,
expr|struct
name|rusage
operator|*
operator|,
expr|struct
name|timeval
operator|*
operator|,
expr|struct
name|timeval
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ruadd
name|__P
argument_list|(
operator|(
expr|struct
name|rusage
operator|*
operator|,
expr|struct
name|rusage
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|settimes
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|tvadd
name|__P
argument_list|(
operator|(
expr|struct
name|timeval
operator|*
operator|,
expr|struct
name|timeval
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|tvsub
name|__P
argument_list|(
operator|(
expr|struct
name|timeval
operator|*
operator|,
expr|struct
name|timeval
operator|*
operator|,
expr|struct
name|timeval
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pcsecs
name|__P
argument_list|(
operator|(
name|long
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|psecs
name|__P
argument_list|(
operator|(
name|long
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * alloc.c  */
end_comment

begin_decl_stmt
name|void
name|Free
name|__P
argument_list|(
operator|(
name|ptr_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|ptr_t
name|Malloc
name|__P
argument_list|(
operator|(
name|size_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|ptr_t
name|Realloc
name|__P
argument_list|(
operator|(
name|ptr_t
operator|,
name|size_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|ptr_t
name|Calloc
name|__P
argument_list|(
operator|(
name|size_t
operator|,
name|size_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|showall
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|,
expr|struct
name|command
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * str.c:  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|SHORT_STRINGS
end_ifdef

begin_decl_stmt
name|Char
modifier|*
name|s_strchr
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|s_strrchr
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|s_strcat
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|NOTUSED
end_ifdef

begin_decl_stmt
name|Char
modifier|*
name|s_strncat
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|,
name|size_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|Char
modifier|*
name|s_strcpy
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|s_strncpy
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|,
name|size_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|s_strspl
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|size_t
name|s_strlen
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|s_strcmp
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|s_strncmp
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|,
name|size_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|s_strsave
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|s_strend
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|s_strstr
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|,
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
name|str2short
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Char
modifier|*
modifier|*
name|blk2short
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|short2str
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
modifier|*
name|short2blk
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|char
modifier|*
name|short2qstr
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|vis_str
name|__P
argument_list|(
operator|(
name|Char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

end_unit

