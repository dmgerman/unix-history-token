begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1991, 1993, 1994  *	The Regents of the University of California.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by the University of  *	California, Berkeley and its contributors.  * 4. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	@(#)extern.h	8.3 (Berkeley) 4/2/94  * $FreeBSD$  */
end_comment

begin_struct_decl
struct_decl|struct
name|kinfo
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|nlist
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|var
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|varent
struct_decl|;
end_struct_decl

begin_decl_stmt
specifier|extern
name|fixpt_t
name|ccpu
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|eval
decl_stmt|,
name|fscale
decl_stmt|,
name|mempages
decl_stmt|,
name|nlistread
decl_stmt|,
name|rawcpu
decl_stmt|,
name|cflag
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|sumrusage
decl_stmt|,
name|termwidth
decl_stmt|,
name|totwidth
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|VAR
name|var
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|VARENT
modifier|*
name|vhead
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|__BEGIN_DECLS
name|void
name|command
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|cputime
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|donlist
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|evar
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|fmt_argv
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|*
operator|,
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|double
name|getpcpu
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|double
name|getpmem
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|logname
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|longtname
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|lstarted
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|maxrss
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|nlisterr
name|__P
argument_list|(
operator|(
expr|struct
name|nlist
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|p_rssize
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pagein
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|parsefmt
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pcpu
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pmem
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pri
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|rtprior
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|printheader
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|pvar
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|rssize
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|runame
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|s_runame
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|rvar
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|showkey
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|started
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|state
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|tdev
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|tname
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|tsize
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ucomm
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|uname
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|s_uname
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|uvar
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|vsize
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|wchan
name|__P
argument_list|(
operator|(
name|KINFO
operator|*
operator|,
name|VARENT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_macro
name|__END_DECLS
end_macro

end_unit

