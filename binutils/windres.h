begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* windres.h -- header file for windres program.    Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005, 2007    Free Software Foundation, Inc.    Written by Ian Lance Taylor, Cygnus Support.    Rewritten by Kai Tietz, Onevision.     This file is part of GNU Binutils.     This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2 of the License, or    (at your option) any later version.     This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA    02110-1301, USA.  */
end_comment

begin_include
include|#
directive|include
file|"ansidecl.h"
end_include

begin_comment
comment|/* This is the header file for the windres program.  It defines    structures and declares functions used within the program.  */
end_comment

begin_include
include|#
directive|include
file|"winduni.h"
end_include

begin_include
include|#
directive|include
file|"windint.h"
end_include

begin_decl_stmt
specifier|extern
name|int
name|verbose
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Function declarations.  */
end_comment

begin_function_decl
specifier|extern
name|rc_res_directory
modifier|*
name|read_rc_file
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_res_directory
modifier|*
name|read_res_file
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_res_directory
modifier|*
name|read_coff_rsrc
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|write_rc_file
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|rc_res_directory
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|write_res_file
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|rc_res_directory
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|write_coff_file
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|rc_res_directory
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_res_resource
modifier|*
name|bin_to_res
parameter_list|(
name|windres_bfd
modifier|*
parameter_list|,
name|rc_res_id
parameter_list|,
specifier|const
name|bfd_byte
modifier|*
parameter_list|,
name|rc_uint_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_uint_type
name|res_to_bin
parameter_list|(
name|windres_bfd
modifier|*
parameter_list|,
name|rc_uint_type
parameter_list|,
specifier|const
name|rc_res_resource
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|FILE
modifier|*
name|open_file_search
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
modifier|*
name|res_alloc
parameter_list|(
name|rc_uint_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
modifier|*
name|reswr_alloc
parameter_list|(
name|rc_uint_type
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Resource ID handling.  */
end_comment

begin_function_decl
specifier|extern
name|int
name|res_id_cmp
parameter_list|(
name|rc_res_id
parameter_list|,
name|rc_res_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|res_id_print
parameter_list|(
name|FILE
modifier|*
parameter_list|,
name|rc_res_id
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|res_ids_print
parameter_list|(
name|FILE
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|rc_res_id
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|res_string_to_id
parameter_list|(
name|rc_res_id
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|res_unistring_to_id
parameter_list|(
name|rc_res_id
modifier|*
parameter_list|,
specifier|const
name|unichar
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Manipulation of the resource tree.  */
end_comment

begin_function_decl
specifier|extern
name|rc_res_resource
modifier|*
name|define_resource
parameter_list|(
name|rc_res_directory
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|rc_res_id
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_res_resource
modifier|*
name|define_standard_resource
parameter_list|(
name|rc_res_directory
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
name|rc_res_id
parameter_list|,
name|rc_uint_type
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|extended_dialog
parameter_list|(
specifier|const
name|rc_dialog
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|extended_menu
parameter_list|(
specifier|const
name|rc_menu
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Communication between the rc file support and the parser and lexer.  */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|yydebug
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|rc_filename
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|rc_lineno
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|int
name|yyparse
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|yylex
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|yyerror
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|rcparse_warning
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|rcparse_set_language
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|rcparse_discard_strings
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|rcparse_rcdata
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|rcparse_normal
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_accelerator
parameter_list|(
name|rc_res_id
parameter_list|,
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
name|rc_accelerator
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_bitmap
parameter_list|(
name|rc_res_id
parameter_list|,
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_cursor
parameter_list|(
name|rc_res_id
parameter_list|,
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_dialog
parameter_list|(
name|rc_res_id
parameter_list|,
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
specifier|const
name|rc_dialog
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_dialog_control
modifier|*
name|define_control
parameter_list|(
specifier|const
name|rc_res_id
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
specifier|const
name|rc_res_id
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_dialog_control
modifier|*
name|define_icon_control
parameter_list|(
name|rc_res_id
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_rcdata_item
modifier|*
parameter_list|,
name|rc_dialog_ex
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_font
parameter_list|(
name|rc_res_id
parameter_list|,
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_icon
parameter_list|(
name|rc_res_id
parameter_list|,
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_menu
parameter_list|(
name|rc_res_id
parameter_list|,
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
name|rc_menuitem
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_menuitem
modifier|*
name|define_menuitem
parameter_list|(
specifier|const
name|unichar
modifier|*
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_menuitem
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_messagetable
parameter_list|(
name|rc_res_id
parameter_list|,
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_rcdata
parameter_list|(
name|rc_res_id
parameter_list|,
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
name|rc_rcdata_item
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_rcdata_file
parameter_list|(
name|rc_res_id
parameter_list|,
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_rcdata_item
modifier|*
name|define_rcdata_string
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|rc_uint_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_rcdata_item
modifier|*
name|define_rcdata_unistring
parameter_list|(
specifier|const
name|unichar
modifier|*
parameter_list|,
name|rc_uint_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_rcdata_item
modifier|*
name|define_rcdata_number
parameter_list|(
name|rc_uint_type
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_stringtable
parameter_list|(
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
name|rc_uint_type
parameter_list|,
specifier|const
name|unichar
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_user_data
parameter_list|(
name|rc_res_id
parameter_list|,
name|rc_res_id
parameter_list|,
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
name|rc_rcdata_item
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_toolbar
parameter_list|(
name|rc_res_id
parameter_list|,
name|rc_res_res_info
modifier|*
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_toolbar_item
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_user_file
parameter_list|(
name|rc_res_id
parameter_list|,
name|rc_res_id
parameter_list|,
specifier|const
name|rc_res_res_info
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|define_versioninfo
parameter_list|(
name|rc_res_id
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_fixed_versioninfo
modifier|*
parameter_list|,
name|rc_ver_info
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_ver_info
modifier|*
name|append_ver_stringfileinfo
parameter_list|(
name|rc_ver_info
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|rc_ver_stringinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_ver_info
modifier|*
name|append_ver_varfileinfo
parameter_list|(
name|rc_ver_info
modifier|*
parameter_list|,
specifier|const
name|unichar
modifier|*
parameter_list|,
name|rc_ver_varinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_ver_stringinfo
modifier|*
name|append_verval
parameter_list|(
name|rc_ver_stringinfo
modifier|*
parameter_list|,
specifier|const
name|unichar
modifier|*
parameter_list|,
specifier|const
name|unichar
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|rc_ver_varinfo
modifier|*
name|append_vertrans
parameter_list|(
name|rc_ver_varinfo
modifier|*
parameter_list|,
name|rc_uint_type
parameter_list|,
name|rc_uint_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|bfd
modifier|*
name|windres_open_as_binary
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|wr_printcomment
parameter_list|(
name|FILE
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|wr_print
parameter_list|(
name|FILE
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|wr_print_flush
parameter_list|(
name|FP
parameter_list|)
value|wr_print ((FP),NULL)
end_define

end_unit

