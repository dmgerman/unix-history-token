begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Assembler instructions for Motorola's Mcore processor    Copyright 1999, 2000 Free Software Foundation, Inc.      This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_include
include|#
directive|include
file|"ansidecl.h"
end_include

begin_typedef
typedef|typedef
enum|enum
block|{
name|O0
block|,
name|OT
block|,
name|O1
block|,
name|OC
block|,
name|O2
block|,
name|X1
block|,
name|OI
block|,
name|OB
block|,
name|OMa
block|,
name|SI
block|,
name|I7
block|,
name|LS
block|,
name|BR
block|,
name|BL
block|,
name|LR
block|,
name|LJ
block|,
name|RM
block|,
name|RQ
block|,
name|JSR
block|,
name|JMP
block|,
name|OBRa
block|,
name|OBRb
block|,
name|OBRc
block|,
name|OBR2
block|,
name|O1R1
block|,
name|OMb
block|,
name|OMc
block|,
name|SIa
block|,
name|MULSH
block|,
name|OPSR
block|,
name|JC
block|,
name|JU
block|,
name|JL
block|,
name|RSI
block|,
name|DO21
block|,
name|OB2
block|}
name|mcore_opclass
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|inst
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|mcore_opclass
name|opclass
decl_stmt|;
name|unsigned
name|char
name|transfer
decl_stmt|;
name|unsigned
name|short
name|inst
decl_stmt|;
block|}
name|mcore_opcode_info
typedef|;
end_typedef

begin_ifdef
ifdef|#
directive|ifdef
name|DEFINE_TABLE
end_ifdef

begin_decl_stmt
specifier|const
name|mcore_opcode_info
name|mcore_table
index|[]
init|=
block|{
block|{
literal|"bkpt"
block|,
name|O0
block|,
literal|0
block|,
literal|0x0000
block|}
block|,
block|{
literal|"sync"
block|,
name|O0
block|,
literal|0
block|,
literal|0x0001
block|}
block|,
block|{
literal|"rte"
block|,
name|O0
block|,
literal|1
block|,
literal|0x0002
block|}
block|,
block|{
literal|"rfe"
block|,
name|O0
block|,
literal|1
block|,
literal|0x0002
block|}
block|,
block|{
literal|"rfi"
block|,
name|O0
block|,
literal|1
block|,
literal|0x0003
block|}
block|,
block|{
literal|"stop"
block|,
name|O0
block|,
literal|0
block|,
literal|0x0004
block|}
block|,
block|{
literal|"wait"
block|,
name|O0
block|,
literal|0
block|,
literal|0x0005
block|}
block|,
block|{
literal|"doze"
block|,
name|O0
block|,
literal|0
block|,
literal|0x0006
block|}
block|,
block|{
literal|"idly4"
block|,
name|O0
block|,
literal|0
block|,
literal|0x0007
block|}
block|,
block|{
literal|"trap"
block|,
name|OT
block|,
literal|0
block|,
literal|0x0008
block|}
block|,
comment|/* SPACE:                       0x000C - 0x000F */
comment|/* SPACE:                       0x0010 - 0x001F */
block|{
literal|"mvc"
block|,
name|O1
block|,
literal|0
block|,
literal|0x0020
block|}
block|,
block|{
literal|"mvcv"
block|,
name|O1
block|,
literal|0
block|,
literal|0x0030
block|}
block|,
block|{
literal|"ldq"
block|,
name|RQ
block|,
literal|0
block|,
literal|0x0040
block|}
block|,
block|{
literal|"stq"
block|,
name|RQ
block|,
literal|0
block|,
literal|0x0050
block|}
block|,
block|{
literal|"ldm"
block|,
name|RM
block|,
literal|0
block|,
literal|0x0060
block|}
block|,
block|{
literal|"stm"
block|,
name|RM
block|,
literal|0
block|,
literal|0x0070
block|}
block|,
block|{
literal|"dect"
block|,
name|O1
block|,
literal|0
block|,
literal|0x0080
block|}
block|,
block|{
literal|"decf"
block|,
name|O1
block|,
literal|0
block|,
literal|0x0090
block|}
block|,
block|{
literal|"inct"
block|,
name|O1
block|,
literal|0
block|,
literal|0x00A0
block|}
block|,
block|{
literal|"incf"
block|,
name|O1
block|,
literal|0
block|,
literal|0x00B0
block|}
block|,
block|{
literal|"jmp"
block|,
name|JMP
block|,
literal|2
block|,
literal|0x00C0
block|}
block|,
define|#
directive|define
name|MCORE_INST_JMP
value|0x00C0
block|{
literal|"jsr"
block|,
name|JSR
block|,
literal|0
block|,
literal|0x00D0
block|}
block|,
define|#
directive|define
name|MCORE_INST_JSR
value|0x00E0
block|{
literal|"ff1"
block|,
name|O1
block|,
literal|0
block|,
literal|0x00E0
block|}
block|,
block|{
literal|"brev"
block|,
name|O1
block|,
literal|0
block|,
literal|0x00F0
block|}
block|,
block|{
literal|"xtrb3"
block|,
name|X1
block|,
literal|0
block|,
literal|0x0100
block|}
block|,
block|{
literal|"xtrb2"
block|,
name|X1
block|,
literal|0
block|,
literal|0x0110
block|}
block|,
block|{
literal|"xtrb1"
block|,
name|X1
block|,
literal|0
block|,
literal|0x0120
block|}
block|,
block|{
literal|"xtrb0"
block|,
name|X1
block|,
literal|0
block|,
literal|0x0130
block|}
block|,
block|{
literal|"zextb"
block|,
name|O1
block|,
literal|0
block|,
literal|0x0140
block|}
block|,
block|{
literal|"sextb"
block|,
name|O1
block|,
literal|0
block|,
literal|0x0150
block|}
block|,
block|{
literal|"zexth"
block|,
name|O1
block|,
literal|0
block|,
literal|0x0160
block|}
block|,
block|{
literal|"sexth"
block|,
name|O1
block|,
literal|0
block|,
literal|0x0170
block|}
block|,
block|{
literal|"declt"
block|,
name|O1
block|,
literal|0
block|,
literal|0x0180
block|}
block|,
block|{
literal|"tstnbz"
block|,
name|O1
block|,
literal|0
block|,
literal|0x0190
block|}
block|,
block|{
literal|"decgt"
block|,
name|O1
block|,
literal|0
block|,
literal|0x01A0
block|}
block|,
block|{
literal|"decne"
block|,
name|O1
block|,
literal|0
block|,
literal|0x01B0
block|}
block|,
block|{
literal|"clrt"
block|,
name|O1
block|,
literal|0
block|,
literal|0x01C0
block|}
block|,
block|{
literal|"clrf"
block|,
name|O1
block|,
literal|0
block|,
literal|0x01D0
block|}
block|,
block|{
literal|"abs"
block|,
name|O1
block|,
literal|0
block|,
literal|0x01E0
block|}
block|,
block|{
literal|"not"
block|,
name|O1
block|,
literal|0
block|,
literal|0x01F0
block|}
block|,
block|{
literal|"movt"
block|,
name|O2
block|,
literal|0
block|,
literal|0x0200
block|}
block|,
block|{
literal|"mult"
block|,
name|O2
block|,
literal|0
block|,
literal|0x0300
block|}
block|,
block|{
literal|"loopt"
block|,
name|BL
block|,
literal|0
block|,
literal|0x0400
block|}
block|,
block|{
literal|"subu"
block|,
name|O2
block|,
literal|0
block|,
literal|0x0500
block|}
block|,
block|{
literal|"sub"
block|,
name|O2
block|,
literal|0
block|,
literal|0x0500
block|}
block|,
comment|/* Official alias.  */
block|{
literal|"addc"
block|,
name|O2
block|,
literal|0
block|,
literal|0x0600
block|}
block|,
block|{
literal|"subc"
block|,
name|O2
block|,
literal|0
block|,
literal|0x0700
block|}
block|,
comment|/* SPACE: 0x0800-0x08ff for a diadic operation */
comment|/* SPACE: 0x0900-0x09ff for a diadic operation */
block|{
literal|"movf"
block|,
name|O2
block|,
literal|0
block|,
literal|0x0A00
block|}
block|,
block|{
literal|"lsr"
block|,
name|O2
block|,
literal|0
block|,
literal|0x0B00
block|}
block|,
block|{
literal|"cmphs"
block|,
name|O2
block|,
literal|0
block|,
literal|0x0C00
block|}
block|,
block|{
literal|"cmplt"
block|,
name|O2
block|,
literal|0
block|,
literal|0x0D00
block|}
block|,
block|{
literal|"tst"
block|,
name|O2
block|,
literal|0
block|,
literal|0x0E00
block|}
block|,
block|{
literal|"cmpne"
block|,
name|O2
block|,
literal|0
block|,
literal|0x0F00
block|}
block|,
block|{
literal|"mfcr"
block|,
name|OC
block|,
literal|0
block|,
literal|0x1000
block|}
block|,
block|{
literal|"psrclr"
block|,
name|OPSR
block|,
literal|0
block|,
literal|0x11F0
block|}
block|,
block|{
literal|"psrset"
block|,
name|OPSR
block|,
literal|0
block|,
literal|0x11F8
block|}
block|,
block|{
literal|"mov"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1200
block|}
block|,
block|{
literal|"bgenr"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1300
block|}
block|,
block|{
literal|"rsub"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1400
block|}
block|,
block|{
literal|"ixw"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1500
block|}
block|,
block|{
literal|"and"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1600
block|}
block|,
block|{
literal|"xor"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1700
block|}
block|,
block|{
literal|"mtcr"
block|,
name|OC
block|,
literal|0
block|,
literal|0x1800
block|}
block|,
block|{
literal|"asr"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1A00
block|}
block|,
block|{
literal|"lsl"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1B00
block|}
block|,
block|{
literal|"addu"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1C00
block|}
block|,
block|{
literal|"add"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1C00
block|}
block|,
comment|/* Official alias.  */
block|{
literal|"ixh"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1D00
block|}
block|,
block|{
literal|"or"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1E00
block|}
block|,
block|{
literal|"andn"
block|,
name|O2
block|,
literal|0
block|,
literal|0x1F00
block|}
block|,
block|{
literal|"addi"
block|,
name|OI
block|,
literal|0
block|,
literal|0x2000
block|}
block|,
define|#
directive|define
name|MCORE_INST_ADDI
value|0x2000
block|{
literal|"cmplti"
block|,
name|OI
block|,
literal|0
block|,
literal|0x2200
block|}
block|,
block|{
literal|"subi"
block|,
name|OI
block|,
literal|0
block|,
literal|0x2400
block|}
block|,
comment|/* SPACE: 0x2600-0x27ff open for a register+immediate  operation */
block|{
literal|"rsubi"
block|,
name|OB
block|,
literal|0
block|,
literal|0x2800
block|}
block|,
block|{
literal|"cmpnei"
block|,
name|OB
block|,
literal|0
block|,
literal|0x2A00
block|}
block|,
block|{
literal|"bmaski"
block|,
name|OMa
block|,
literal|0
block|,
literal|0x2C00
block|}
block|,
block|{
literal|"divu"
block|,
name|O1R1
block|,
literal|0
block|,
literal|0x2C10
block|}
block|,
comment|/* SPACE:                       0x2c20 - 0x2c7f */
block|{
literal|"bmaski"
block|,
name|OMb
block|,
literal|0
block|,
literal|0x2C80
block|}
block|,
block|{
literal|"bmaski"
block|,
name|OMc
block|,
literal|0
block|,
literal|0x2D00
block|}
block|,
block|{
literal|"andi"
block|,
name|OB
block|,
literal|0
block|,
literal|0x2E00
block|}
block|,
block|{
literal|"bclri"
block|,
name|OB
block|,
literal|0
block|,
literal|0x3000
block|}
block|,
comment|/* SPACE:                       0x3200 - 0x320f */
block|{
literal|"divs"
block|,
name|O1R1
block|,
literal|0
block|,
literal|0x3210
block|}
block|,
comment|/* SPACE:                       0x3220 - 0x326f */
block|{
literal|"bgeni"
block|,
name|OBRa
block|,
literal|0
block|,
literal|0x3270
block|}
block|,
block|{
literal|"bgeni"
block|,
name|OBRb
block|,
literal|0
block|,
literal|0x3280
block|}
block|,
block|{
literal|"bgeni"
block|,
name|OBRc
block|,
literal|0
block|,
literal|0x3300
block|}
block|,
block|{
literal|"bseti"
block|,
name|OB
block|,
literal|0
block|,
literal|0x3400
block|}
block|,
block|{
literal|"btsti"
block|,
name|OB
block|,
literal|0
block|,
literal|0x3600
block|}
block|,
block|{
literal|"xsr"
block|,
name|O1
block|,
literal|0
block|,
literal|0x3800
block|}
block|,
block|{
literal|"rotli"
block|,
name|SIa
block|,
literal|0
block|,
literal|0x3800
block|}
block|,
block|{
literal|"asrc"
block|,
name|O1
block|,
literal|0
block|,
literal|0x3A00
block|}
block|,
block|{
literal|"asri"
block|,
name|SIa
block|,
literal|0
block|,
literal|0x3A00
block|}
block|,
block|{
literal|"lslc"
block|,
name|O1
block|,
literal|0
block|,
literal|0x3C00
block|}
block|,
block|{
literal|"lsli"
block|,
name|SIa
block|,
literal|0
block|,
literal|0x3C00
block|}
block|,
block|{
literal|"lsrc"
block|,
name|O1
block|,
literal|0
block|,
literal|0x3E00
block|}
block|,
block|{
literal|"lsri"
block|,
name|SIa
block|,
literal|0
block|,
literal|0x3E00
block|}
block|,
comment|/* SPACE:                       0x4000 - 0x5fff */
block|{
literal|"movi"
block|,
name|I7
block|,
literal|0
block|,
literal|0x6000
block|}
block|,
define|#
directive|define
name|MCORE_INST_BMASKI_ALT
value|0x6000
define|#
directive|define
name|MCORE_INST_BGENI_ALT
value|0x6000
block|{
literal|"mulsh"
block|,
name|MULSH
block|,
literal|0
block|,
literal|0x6800
block|}
block|,
block|{
literal|"muls.h"
block|,
name|MULSH
block|,
literal|0
block|,
literal|0x6800
block|}
block|,
comment|/* SPACE:                       0x6900 - 0x6FFF */
block|{
literal|"jmpi"
block|,
name|LJ
block|,
literal|1
block|,
literal|0x7000
block|}
block|,
block|{
literal|"jsri"
block|,
name|LJ
block|,
literal|0
block|,
literal|0x7F00
block|}
block|,
define|#
directive|define
name|MCORE_INST_JMPI
value|0x7000
block|{
literal|"lrw"
block|,
name|LR
block|,
literal|0
block|,
literal|0x7000
block|}
block|,
define|#
directive|define
name|MCORE_INST_JSRI
value|0x7F00
block|{
literal|"ld"
block|,
name|LS
block|,
literal|0
block|,
literal|0x8000
block|}
block|,
block|{
literal|"ldw"
block|,
name|LS
block|,
literal|0
block|,
literal|0x8000
block|}
block|,
block|{
literal|"ld.w"
block|,
name|LS
block|,
literal|0
block|,
literal|0x8000
block|}
block|,
block|{
literal|"st"
block|,
name|LS
block|,
literal|0
block|,
literal|0x9000
block|}
block|,
block|{
literal|"stw"
block|,
name|LS
block|,
literal|0
block|,
literal|0x9000
block|}
block|,
block|{
literal|"st.w"
block|,
name|LS
block|,
literal|0
block|,
literal|0x9000
block|}
block|,
block|{
literal|"ldb"
block|,
name|LS
block|,
literal|0
block|,
literal|0xA000
block|}
block|,
block|{
literal|"ld.b"
block|,
name|LS
block|,
literal|0
block|,
literal|0xA000
block|}
block|,
block|{
literal|"stb"
block|,
name|LS
block|,
literal|0
block|,
literal|0xB000
block|}
block|,
block|{
literal|"st.b"
block|,
name|LS
block|,
literal|0
block|,
literal|0xB000
block|}
block|,
block|{
literal|"ldh"
block|,
name|LS
block|,
literal|0
block|,
literal|0xC000
block|}
block|,
block|{
literal|"ld.h"
block|,
name|LS
block|,
literal|0
block|,
literal|0xC000
block|}
block|,
block|{
literal|"sth"
block|,
name|LS
block|,
literal|0
block|,
literal|0xD000
block|}
block|,
block|{
literal|"st.h"
block|,
name|LS
block|,
literal|0
block|,
literal|0xD000
block|}
block|,
block|{
literal|"bt"
block|,
name|BR
block|,
literal|0
block|,
literal|0xE000
block|}
block|,
block|{
literal|"bf"
block|,
name|BR
block|,
literal|0
block|,
literal|0xE800
block|}
block|,
block|{
literal|"br"
block|,
name|BR
block|,
literal|1
block|,
literal|0xF000
block|}
block|,
define|#
directive|define
name|MCORE_INST_BR
value|0xF000
block|{
literal|"bsr"
block|,
name|BR
block|,
literal|0
block|,
literal|0xF800
block|}
block|,
define|#
directive|define
name|MCORE_INST_BSR
value|0xF800
comment|/* The following are relaxable branches */
block|{
literal|"jbt"
block|,
name|JC
block|,
literal|0
block|,
literal|0xE000
block|}
block|,
block|{
literal|"jbf"
block|,
name|JC
block|,
literal|0
block|,
literal|0xE800
block|}
block|,
block|{
literal|"jbr"
block|,
name|JU
block|,
literal|1
block|,
literal|0xF000
block|}
block|,
block|{
literal|"jbsr"
block|,
name|JL
block|,
literal|0
block|,
literal|0xF800
block|}
block|,
comment|/* The following are aliases for other instructions */
block|{
literal|"rts"
block|,
name|O0
block|,
literal|2
block|,
literal|0x00CF
block|}
block|,
comment|/* jmp r15 */
block|{
literal|"rolc"
block|,
name|DO21
block|,
literal|0
block|,
literal|0x0600
block|}
block|,
comment|/* addc rd,rd */
block|{
literal|"rotlc"
block|,
name|DO21
block|,
literal|0
block|,
literal|0x0600
block|}
block|,
comment|/* addc rd,rd */
block|{
literal|"setc"
block|,
name|O0
block|,
literal|0
block|,
literal|0x0C00
block|}
block|,
comment|/* cmphs r0,r0 */
block|{
literal|"clrc"
block|,
name|O0
block|,
literal|0
block|,
literal|0x0F00
block|}
block|,
comment|/* cmpne r0,r0 */
block|{
literal|"tstle"
block|,
name|O1
block|,
literal|0
block|,
literal|0x2200
block|}
block|,
comment|/* cmplti rd,1 */
block|{
literal|"cmplei"
block|,
name|OB
block|,
literal|0
block|,
literal|0x2200
block|}
block|,
comment|/* cmplei rd,X -> cmplti rd,X+1 */
block|{
literal|"neg"
block|,
name|O1
block|,
literal|0
block|,
literal|0x2800
block|}
block|,
comment|/* rsubi rd,0 */
block|{
literal|"tstne"
block|,
name|O1
block|,
literal|0
block|,
literal|0x2A00
block|}
block|,
comment|/* cmpnei rd,0 */
block|{
literal|"tstlt"
block|,
name|O1
block|,
literal|0
block|,
literal|0x37F0
block|}
block|,
comment|/* btsti rx,31 */
block|{
literal|"mclri"
block|,
name|OB2
block|,
literal|0
block|,
literal|0x3000
block|}
block|,
comment|/* bclri rx,log2(imm) */
block|{
literal|"mgeni"
block|,
name|OBR2
block|,
literal|0
block|,
literal|0x3200
block|}
block|,
comment|/* bgeni rx,log2(imm) */
block|{
literal|"mseti"
block|,
name|OB2
block|,
literal|0
block|,
literal|0x3400
block|}
block|,
comment|/* bseti rx,log2(imm) */
block|{
literal|"mtsti"
block|,
name|OB2
block|,
literal|0
block|,
literal|0x3600
block|}
block|,
comment|/* btsti rx,log2(imm) */
block|{
literal|"rori"
block|,
name|RSI
block|,
literal|0
block|,
literal|0x3800
block|}
block|,
block|{
literal|"rotri"
block|,
name|RSI
block|,
literal|0
block|,
literal|0x3800
block|}
block|,
block|{
literal|"nop"
block|,
name|O0
block|,
literal|0
block|,
literal|0x1200
block|}
block|,
comment|/* mov r0, r0 */
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

