begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* CPU data header for m32c.  THIS FILE IS MACHINE GENERATED WITH CGEN.  Copyright 1996-2005 Free Software Foundation, Inc.  This file is part of the GNU Binutils and/or GDB, the GNU debugger.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|M32C_CPU_H
end_ifndef

begin_define
define|#
directive|define
name|M32C_CPU_H
end_define

begin_include
include|#
directive|include
file|"opcode/cgen-bitset.h"
end_include

begin_define
define|#
directive|define
name|CGEN_ARCH
value|m32c
end_define

begin_comment
comment|/* Given symbol S, return m32c_cgen_<S>.  */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__STDC__
argument_list|)
operator|||
name|defined
argument_list|(
name|ALMOST_STDC
argument_list|)
operator|||
name|defined
argument_list|(
name|HAVE_STRINGIZE
argument_list|)
end_if

begin_define
define|#
directive|define
name|CGEN_SYM
parameter_list|(
name|s
parameter_list|)
value|m32c##_cgen_##s
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|CGEN_SYM
parameter_list|(
name|s
parameter_list|)
value|m32c
comment|/**/
value|_cgen_
comment|/**/
value|s
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Selected cpu families.  */
end_comment

begin_define
define|#
directive|define
name|HAVE_CPU_M16CBF
end_define

begin_define
define|#
directive|define
name|HAVE_CPU_M32CBF
end_define

begin_define
define|#
directive|define
name|CGEN_INSN_LSB0_P
value|0
end_define

begin_comment
comment|/* Minimum size of any insn (in bytes).  */
end_comment

begin_define
define|#
directive|define
name|CGEN_MIN_INSN_SIZE
value|1
end_define

begin_comment
comment|/* Maximum size of any insn (in bytes).  */
end_comment

begin_define
define|#
directive|define
name|CGEN_MAX_INSN_SIZE
value|10
end_define

begin_define
define|#
directive|define
name|CGEN_INT_INSN_P
value|0
end_define

begin_comment
comment|/* Maximum number of syntax elements in an instruction.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_ACTUAL_MAX_SYNTAX_ELEMENTS
value|21
end_define

begin_comment
comment|/* CGEN_MNEMONIC_OPERANDS is defined if mnemonics have operands.    e.g. In "b,a foo" the ",a" is an operand.  If mnemonics have operands    we can't hash on everything up to the space.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_MNEMONIC_OPERANDS
end_define

begin_comment
comment|/* Maximum number of fields in an instruction.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_ACTUAL_MAX_IFMT_OPERANDS
value|13
end_define

begin_comment
comment|/* Enums.  */
end_comment

begin_comment
comment|/* Attributes.  */
end_comment

begin_comment
comment|/* Enum declaration for machine type selection.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|mach_attr
block|{
name|MACH_BASE
block|,
name|MACH_M16C
block|,
name|MACH_M32C
block|,
name|MACH_MAX
block|}
name|MACH_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for instruction set selection.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|isa_attr
block|{
name|ISA_M16C
block|,
name|ISA_M32C
block|,
name|ISA_MAX
block|}
name|ISA_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for .  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|rl_type_attr
block|{
name|RL_TYPE_NONE
block|,
name|RL_TYPE_JUMP
block|,
name|RL_TYPE_1ADDR
block|,
name|RL_TYPE_2ADDR
block|}
name|RL_TYPE_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Number of architecture variants.  */
end_comment

begin_define
define|#
directive|define
name|MAX_ISAS
value|((int) ISA_MAX)
end_define

begin_define
define|#
directive|define
name|MAX_MACHS
value|((int) MACH_MAX)
end_define

begin_comment
comment|/* Ifield support.  */
end_comment

begin_comment
comment|/* Ifield attribute indices.  */
end_comment

begin_comment
comment|/* Enum declaration for cgen_ifld attrs.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_ifld_attr
block|{
name|CGEN_IFLD_VIRTUAL
block|,
name|CGEN_IFLD_PCREL_ADDR
block|,
name|CGEN_IFLD_ABS_ADDR
block|,
name|CGEN_IFLD_RESERVED
block|,
name|CGEN_IFLD_SIGN_OPT
block|,
name|CGEN_IFLD_SIGNED
block|,
name|CGEN_IFLD_END_BOOLS
block|,
name|CGEN_IFLD_START_NBOOLS
init|=
literal|31
block|,
name|CGEN_IFLD_MACH
block|,
name|CGEN_IFLD_ISA
block|,
name|CGEN_IFLD_RL_TYPE
block|,
name|CGEN_IFLD_END_NBOOLS
block|}
name|CGEN_IFLD_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Number of non-boolean elements in cgen_ifld_attr.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_IFLD_NBOOL_ATTRS
value|(CGEN_IFLD_END_NBOOLS - CGEN_IFLD_START_NBOOLS - 1)
end_define

begin_comment
comment|/* cgen_ifld attribute accessor macros.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_IFLD_MACH_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|((attrs)->nonbool[CGEN_IFLD_MACH-CGEN_IFLD_START_NBOOLS-1].nonbitset)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_IFLD_ISA_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|((attrs)->nonbool[CGEN_IFLD_ISA-CGEN_IFLD_START_NBOOLS-1].bitset)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_IFLD_RL_TYPE_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|((attrs)->nonbool[CGEN_IFLD_RL_TYPE-CGEN_IFLD_START_NBOOLS-1].nonbitset)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_IFLD_VIRTUAL_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_IFLD_VIRTUAL)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_IFLD_PCREL_ADDR_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_IFLD_PCREL_ADDR)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_IFLD_ABS_ADDR_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_IFLD_ABS_ADDR)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_IFLD_RESERVED_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_IFLD_RESERVED)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_IFLD_SIGN_OPT_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_IFLD_SIGN_OPT)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_IFLD_SIGNED_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_IFLD_SIGNED)) != 0)
end_define

begin_comment
comment|/* Enum declaration for m32c ifield types.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|ifield_type
block|{
name|M32C_F_NIL
block|,
name|M32C_F_ANYOF
block|,
name|M32C_F_0_1
block|,
name|M32C_F_0_2
block|,
name|M32C_F_0_3
block|,
name|M32C_F_0_4
block|,
name|M32C_F_1_3
block|,
name|M32C_F_2_2
block|,
name|M32C_F_3_4
block|,
name|M32C_F_3_1
block|,
name|M32C_F_4_1
block|,
name|M32C_F_4_3
block|,
name|M32C_F_4_4
block|,
name|M32C_F_4_6
block|,
name|M32C_F_5_1
block|,
name|M32C_F_5_3
block|,
name|M32C_F_6_2
block|,
name|M32C_F_7_1
block|,
name|M32C_F_8_1
block|,
name|M32C_F_8_2
block|,
name|M32C_F_8_3
block|,
name|M32C_F_8_4
block|,
name|M32C_F_8_8
block|,
name|M32C_F_9_3
block|,
name|M32C_F_9_1
block|,
name|M32C_F_10_1
block|,
name|M32C_F_10_2
block|,
name|M32C_F_10_3
block|,
name|M32C_F_11_1
block|,
name|M32C_F_12_1
block|,
name|M32C_F_12_2
block|,
name|M32C_F_12_3
block|,
name|M32C_F_12_4
block|,
name|M32C_F_12_6
block|,
name|M32C_F_13_3
block|,
name|M32C_F_14_1
block|,
name|M32C_F_14_2
block|,
name|M32C_F_15_1
block|,
name|M32C_F_16_1
block|,
name|M32C_F_16_2
block|,
name|M32C_F_16_4
block|,
name|M32C_F_16_8
block|,
name|M32C_F_18_1
block|,
name|M32C_F_18_2
block|,
name|M32C_F_18_3
block|,
name|M32C_F_20_1
block|,
name|M32C_F_20_3
block|,
name|M32C_F_20_2
block|,
name|M32C_F_20_4
block|,
name|M32C_F_21_3
block|,
name|M32C_F_24_2
block|,
name|M32C_F_24_8
block|,
name|M32C_F_32_16
block|,
name|M32C_F_SRC16_RN
block|,
name|M32C_F_SRC16_AN
block|,
name|M32C_F_SRC32_AN_UNPREFIXED
block|,
name|M32C_F_SRC32_AN_PREFIXED
block|,
name|M32C_F_SRC32_RN_UNPREFIXED_QI
block|,
name|M32C_F_SRC32_RN_PREFIXED_QI
block|,
name|M32C_F_SRC32_RN_UNPREFIXED_HI
block|,
name|M32C_F_SRC32_RN_PREFIXED_HI
block|,
name|M32C_F_SRC32_RN_UNPREFIXED_SI
block|,
name|M32C_F_SRC32_RN_PREFIXED_SI
block|,
name|M32C_F_DST32_RN_EXT_UNPREFIXED
block|,
name|M32C_F_DST16_RN
block|,
name|M32C_F_DST16_RN_EXT
block|,
name|M32C_F_DST16_RN_QI_S
block|,
name|M32C_F_DST16_AN
block|,
name|M32C_F_DST16_AN_S
block|,
name|M32C_F_DST32_AN_UNPREFIXED
block|,
name|M32C_F_DST32_AN_PREFIXED
block|,
name|M32C_F_DST32_RN_UNPREFIXED_QI
block|,
name|M32C_F_DST32_RN_PREFIXED_QI
block|,
name|M32C_F_DST32_RN_UNPREFIXED_HI
block|,
name|M32C_F_DST32_RN_PREFIXED_HI
block|,
name|M32C_F_DST32_RN_UNPREFIXED_SI
block|,
name|M32C_F_DST32_RN_PREFIXED_SI
block|,
name|M32C_F_DST16_1_S
block|,
name|M32C_F_IMM_8_S4
block|,
name|M32C_F_IMM_12_S4
block|,
name|M32C_F_IMM_13_U3
block|,
name|M32C_F_IMM_20_S4
block|,
name|M32C_F_IMM1_S
block|,
name|M32C_F_IMM3_S
block|,
name|M32C_F_DSP_8_U6
block|,
name|M32C_F_DSP_8_U8
block|,
name|M32C_F_DSP_8_S8
block|,
name|M32C_F_DSP_10_U6
block|,
name|M32C_F_DSP_16_U8
block|,
name|M32C_F_DSP_16_S8
block|,
name|M32C_F_DSP_24_U8
block|,
name|M32C_F_DSP_24_S8
block|,
name|M32C_F_DSP_32_U8
block|,
name|M32C_F_DSP_32_S8
block|,
name|M32C_F_DSP_40_U8
block|,
name|M32C_F_DSP_40_S8
block|,
name|M32C_F_DSP_48_U8
block|,
name|M32C_F_DSP_48_S8
block|,
name|M32C_F_DSP_56_U8
block|,
name|M32C_F_DSP_56_S8
block|,
name|M32C_F_DSP_64_U8
block|,
name|M32C_F_DSP_64_S8
block|,
name|M32C_F_DSP_8_U16
block|,
name|M32C_F_DSP_8_S16
block|,
name|M32C_F_DSP_16_U16
block|,
name|M32C_F_DSP_16_S16
block|,
name|M32C_F_DSP_24_U16
block|,
name|M32C_F_DSP_24_S16
block|,
name|M32C_F_DSP_32_U16
block|,
name|M32C_F_DSP_32_S16
block|,
name|M32C_F_DSP_40_U16
block|,
name|M32C_F_DSP_40_S16
block|,
name|M32C_F_DSP_48_U16
block|,
name|M32C_F_DSP_48_S16
block|,
name|M32C_F_DSP_64_U16
block|,
name|M32C_F_DSP_8_S24
block|,
name|M32C_F_DSP_8_U24
block|,
name|M32C_F_DSP_16_U24
block|,
name|M32C_F_DSP_24_U24
block|,
name|M32C_F_DSP_32_U24
block|,
name|M32C_F_DSP_40_U20
block|,
name|M32C_F_DSP_40_U24
block|,
name|M32C_F_DSP_40_S32
block|,
name|M32C_F_DSP_48_U20
block|,
name|M32C_F_DSP_48_U24
block|,
name|M32C_F_DSP_16_S32
block|,
name|M32C_F_DSP_24_S32
block|,
name|M32C_F_DSP_32_S32
block|,
name|M32C_F_DSP_48_U32
block|,
name|M32C_F_DSP_48_S32
block|,
name|M32C_F_DSP_56_S16
block|,
name|M32C_F_DSP_64_S16
block|,
name|M32C_F_BITNO16_S
block|,
name|M32C_F_BITNO32_PREFIXED
block|,
name|M32C_F_BITNO32_UNPREFIXED
block|,
name|M32C_F_BITBASE16_U11_S
block|,
name|M32C_F_BITBASE32_16_U11_UNPREFIXED
block|,
name|M32C_F_BITBASE32_16_S11_UNPREFIXED
block|,
name|M32C_F_BITBASE32_16_U19_UNPREFIXED
block|,
name|M32C_F_BITBASE32_16_S19_UNPREFIXED
block|,
name|M32C_F_BITBASE32_16_U27_UNPREFIXED
block|,
name|M32C_F_BITBASE32_24_U11_PREFIXED
block|,
name|M32C_F_BITBASE32_24_S11_PREFIXED
block|,
name|M32C_F_BITBASE32_24_U19_PREFIXED
block|,
name|M32C_F_BITBASE32_24_S19_PREFIXED
block|,
name|M32C_F_BITBASE32_24_U27_PREFIXED
block|,
name|M32C_F_LAB_5_3
block|,
name|M32C_F_LAB32_JMP_S
block|,
name|M32C_F_LAB_8_8
block|,
name|M32C_F_LAB_8_16
block|,
name|M32C_F_LAB_8_24
block|,
name|M32C_F_LAB_16_8
block|,
name|M32C_F_LAB_24_8
block|,
name|M32C_F_LAB_32_8
block|,
name|M32C_F_LAB_40_8
block|,
name|M32C_F_COND16
block|,
name|M32C_F_COND16J_5
block|,
name|M32C_F_COND32
block|,
name|M32C_F_COND32J
block|,
name|M32C_F_MAX
block|}
name|IFIELD_TYPE
typedef|;
end_typedef

begin_define
define|#
directive|define
name|MAX_IFLD
value|((int) M32C_F_MAX)
end_define

begin_comment
comment|/* Hardware attribute indices.  */
end_comment

begin_comment
comment|/* Enum declaration for cgen_hw attrs.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_hw_attr
block|{
name|CGEN_HW_VIRTUAL
block|,
name|CGEN_HW_CACHE_ADDR
block|,
name|CGEN_HW_PC
block|,
name|CGEN_HW_PROFILE
block|,
name|CGEN_HW_END_BOOLS
block|,
name|CGEN_HW_START_NBOOLS
init|=
literal|31
block|,
name|CGEN_HW_MACH
block|,
name|CGEN_HW_ISA
block|,
name|CGEN_HW_RL_TYPE
block|,
name|CGEN_HW_END_NBOOLS
block|}
name|CGEN_HW_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Number of non-boolean elements in cgen_hw_attr.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_HW_NBOOL_ATTRS
value|(CGEN_HW_END_NBOOLS - CGEN_HW_START_NBOOLS - 1)
end_define

begin_comment
comment|/* cgen_hw attribute accessor macros.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_HW_MACH_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|((attrs)->nonbool[CGEN_HW_MACH-CGEN_HW_START_NBOOLS-1].nonbitset)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_HW_ISA_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|((attrs)->nonbool[CGEN_HW_ISA-CGEN_HW_START_NBOOLS-1].bitset)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_HW_RL_TYPE_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|((attrs)->nonbool[CGEN_HW_RL_TYPE-CGEN_HW_START_NBOOLS-1].nonbitset)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_HW_VIRTUAL_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_HW_VIRTUAL)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_HW_CACHE_ADDR_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_HW_CACHE_ADDR)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_HW_PC_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_HW_PC)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_HW_PROFILE_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_HW_PROFILE)) != 0)
end_define

begin_comment
comment|/* Enum declaration for m32c hardware types.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_hw_type
block|{
name|HW_H_MEMORY
block|,
name|HW_H_SINT
block|,
name|HW_H_UINT
block|,
name|HW_H_ADDR
block|,
name|HW_H_IADDR
block|,
name|HW_H_PC
block|,
name|HW_H_GR
block|,
name|HW_H_GR_QI
block|,
name|HW_H_GR_HI
block|,
name|HW_H_GR_SI
block|,
name|HW_H_GR_EXT_QI
block|,
name|HW_H_GR_EXT_HI
block|,
name|HW_H_R0L
block|,
name|HW_H_R0H
block|,
name|HW_H_R1L
block|,
name|HW_H_R1H
block|,
name|HW_H_R0
block|,
name|HW_H_R1
block|,
name|HW_H_R2
block|,
name|HW_H_R3
block|,
name|HW_H_R0L_R0H
block|,
name|HW_H_R2R0
block|,
name|HW_H_R3R1
block|,
name|HW_H_R1R2R0
block|,
name|HW_H_AR
block|,
name|HW_H_AR_QI
block|,
name|HW_H_AR_HI
block|,
name|HW_H_AR_SI
block|,
name|HW_H_A0
block|,
name|HW_H_A1
block|,
name|HW_H_SB
block|,
name|HW_H_FB
block|,
name|HW_H_SP
block|,
name|HW_H_SBIT
block|,
name|HW_H_ZBIT
block|,
name|HW_H_OBIT
block|,
name|HW_H_CBIT
block|,
name|HW_H_UBIT
block|,
name|HW_H_IBIT
block|,
name|HW_H_BBIT
block|,
name|HW_H_DBIT
block|,
name|HW_H_DCT0
block|,
name|HW_H_DCT1
block|,
name|HW_H_SVF
block|,
name|HW_H_DRC0
block|,
name|HW_H_DRC1
block|,
name|HW_H_DMD0
block|,
name|HW_H_DMD1
block|,
name|HW_H_INTB
block|,
name|HW_H_SVP
block|,
name|HW_H_VCT
block|,
name|HW_H_ISP
block|,
name|HW_H_DMA0
block|,
name|HW_H_DMA1
block|,
name|HW_H_DRA0
block|,
name|HW_H_DRA1
block|,
name|HW_H_DSA0
block|,
name|HW_H_DSA1
block|,
name|HW_H_COND16
block|,
name|HW_H_COND16C
block|,
name|HW_H_COND16J
block|,
name|HW_H_COND16J_5
block|,
name|HW_H_COND32
block|,
name|HW_H_CR1_32
block|,
name|HW_H_CR2_32
block|,
name|HW_H_CR3_32
block|,
name|HW_H_CR_16
block|,
name|HW_H_FLAGS
block|,
name|HW_H_SHIMM
block|,
name|HW_H_BIT_INDEX
block|,
name|HW_H_SRC_INDEX
block|,
name|HW_H_DST_INDEX
block|,
name|HW_H_SRC_INDIRECT
block|,
name|HW_H_DST_INDIRECT
block|,
name|HW_H_NONE
block|,
name|HW_MAX
block|}
name|CGEN_HW_TYPE
typedef|;
end_typedef

begin_define
define|#
directive|define
name|MAX_HW
value|((int) HW_MAX)
end_define

begin_comment
comment|/* Operand attribute indices.  */
end_comment

begin_comment
comment|/* Enum declaration for cgen_operand attrs.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_operand_attr
block|{
name|CGEN_OPERAND_VIRTUAL
block|,
name|CGEN_OPERAND_PCREL_ADDR
block|,
name|CGEN_OPERAND_ABS_ADDR
block|,
name|CGEN_OPERAND_SIGN_OPT
block|,
name|CGEN_OPERAND_SIGNED
block|,
name|CGEN_OPERAND_NEGATIVE
block|,
name|CGEN_OPERAND_RELAX
block|,
name|CGEN_OPERAND_SEM_ONLY
block|,
name|CGEN_OPERAND_END_BOOLS
block|,
name|CGEN_OPERAND_START_NBOOLS
init|=
literal|31
block|,
name|CGEN_OPERAND_MACH
block|,
name|CGEN_OPERAND_ISA
block|,
name|CGEN_OPERAND_RL_TYPE
block|,
name|CGEN_OPERAND_END_NBOOLS
block|}
name|CGEN_OPERAND_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Number of non-boolean elements in cgen_operand_attr.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_OPERAND_NBOOL_ATTRS
value|(CGEN_OPERAND_END_NBOOLS - CGEN_OPERAND_START_NBOOLS - 1)
end_define

begin_comment
comment|/* cgen_operand attribute accessor macros.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_OPERAND_MACH_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|((attrs)->nonbool[CGEN_OPERAND_MACH-CGEN_OPERAND_START_NBOOLS-1].nonbitset)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_OPERAND_ISA_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|((attrs)->nonbool[CGEN_OPERAND_ISA-CGEN_OPERAND_START_NBOOLS-1].bitset)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_OPERAND_RL_TYPE_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|((attrs)->nonbool[CGEN_OPERAND_RL_TYPE-CGEN_OPERAND_START_NBOOLS-1].nonbitset)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_OPERAND_VIRTUAL_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_OPERAND_VIRTUAL)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_OPERAND_PCREL_ADDR_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_OPERAND_PCREL_ADDR)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_OPERAND_ABS_ADDR_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_OPERAND_ABS_ADDR)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_OPERAND_SIGN_OPT_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_OPERAND_SIGN_OPT)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_OPERAND_SIGNED_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_OPERAND_SIGNED)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_OPERAND_NEGATIVE_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_OPERAND_NEGATIVE)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_OPERAND_RELAX_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_OPERAND_RELAX)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_OPERAND_SEM_ONLY_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_OPERAND_SEM_ONLY)) != 0)
end_define

begin_comment
comment|/* Enum declaration for m32c operand types.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_operand_type
block|{
name|M32C_OPERAND_PC
block|,
name|M32C_OPERAND_SRC16RNQI
block|,
name|M32C_OPERAND_SRC16RNHI
block|,
name|M32C_OPERAND_SRC32RNUNPREFIXEDQI
block|,
name|M32C_OPERAND_SRC32RNUNPREFIXEDHI
block|,
name|M32C_OPERAND_SRC32RNUNPREFIXEDSI
block|,
name|M32C_OPERAND_SRC32RNPREFIXEDQI
block|,
name|M32C_OPERAND_SRC32RNPREFIXEDHI
block|,
name|M32C_OPERAND_SRC32RNPREFIXEDSI
block|,
name|M32C_OPERAND_SRC16AN
block|,
name|M32C_OPERAND_SRC16ANQI
block|,
name|M32C_OPERAND_SRC16ANHI
block|,
name|M32C_OPERAND_SRC32ANUNPREFIXED
block|,
name|M32C_OPERAND_SRC32ANUNPREFIXEDQI
block|,
name|M32C_OPERAND_SRC32ANUNPREFIXEDHI
block|,
name|M32C_OPERAND_SRC32ANUNPREFIXEDSI
block|,
name|M32C_OPERAND_SRC32ANPREFIXED
block|,
name|M32C_OPERAND_SRC32ANPREFIXEDQI
block|,
name|M32C_OPERAND_SRC32ANPREFIXEDHI
block|,
name|M32C_OPERAND_SRC32ANPREFIXEDSI
block|,
name|M32C_OPERAND_DST16RNQI
block|,
name|M32C_OPERAND_DST16RNHI
block|,
name|M32C_OPERAND_DST16RNSI
block|,
name|M32C_OPERAND_DST16RNEXTQI
block|,
name|M32C_OPERAND_DST32R0QI_S
block|,
name|M32C_OPERAND_DST32R0HI_S
block|,
name|M32C_OPERAND_DST32RNUNPREFIXEDQI
block|,
name|M32C_OPERAND_DST32RNUNPREFIXEDHI
block|,
name|M32C_OPERAND_DST32RNUNPREFIXEDSI
block|,
name|M32C_OPERAND_DST32RNEXTUNPREFIXEDQI
block|,
name|M32C_OPERAND_DST32RNEXTUNPREFIXEDHI
block|,
name|M32C_OPERAND_DST32RNPREFIXEDQI
block|,
name|M32C_OPERAND_DST32RNPREFIXEDHI
block|,
name|M32C_OPERAND_DST32RNPREFIXEDSI
block|,
name|M32C_OPERAND_DST16RNQI_S
block|,
name|M32C_OPERAND_DST16ANQI_S
block|,
name|M32C_OPERAND_BIT16RN
block|,
name|M32C_OPERAND_BIT32RNPREFIXED
block|,
name|M32C_OPERAND_BIT32RNUNPREFIXED
block|,
name|M32C_OPERAND_R0
block|,
name|M32C_OPERAND_R1
block|,
name|M32C_OPERAND_R2
block|,
name|M32C_OPERAND_R3
block|,
name|M32C_OPERAND_R0L
block|,
name|M32C_OPERAND_R0H
block|,
name|M32C_OPERAND_R2R0
block|,
name|M32C_OPERAND_R3R1
block|,
name|M32C_OPERAND_R1R2R0
block|,
name|M32C_OPERAND_DST16AN
block|,
name|M32C_OPERAND_DST16ANQI
block|,
name|M32C_OPERAND_DST16ANHI
block|,
name|M32C_OPERAND_DST16ANSI
block|,
name|M32C_OPERAND_DST16AN_S
block|,
name|M32C_OPERAND_DST32ANUNPREFIXED
block|,
name|M32C_OPERAND_DST32ANUNPREFIXEDQI
block|,
name|M32C_OPERAND_DST32ANUNPREFIXEDHI
block|,
name|M32C_OPERAND_DST32ANUNPREFIXEDSI
block|,
name|M32C_OPERAND_DST32ANEXTUNPREFIXED
block|,
name|M32C_OPERAND_DST32ANPREFIXED
block|,
name|M32C_OPERAND_DST32ANPREFIXEDQI
block|,
name|M32C_OPERAND_DST32ANPREFIXEDHI
block|,
name|M32C_OPERAND_DST32ANPREFIXEDSI
block|,
name|M32C_OPERAND_BIT16AN
block|,
name|M32C_OPERAND_BIT32ANPREFIXED
block|,
name|M32C_OPERAND_BIT32ANUNPREFIXED
block|,
name|M32C_OPERAND_A0
block|,
name|M32C_OPERAND_A1
block|,
name|M32C_OPERAND_SB
block|,
name|M32C_OPERAND_FB
block|,
name|M32C_OPERAND_SP
block|,
name|M32C_OPERAND_SRCDST16_R0L_R0H_S_NORMAL
block|,
name|M32C_OPERAND_REGSETPOP
block|,
name|M32C_OPERAND_REGSETPUSH
block|,
name|M32C_OPERAND_RN16_PUSH_S
block|,
name|M32C_OPERAND_AN16_PUSH_S
block|,
name|M32C_OPERAND_DSP_8_U6
block|,
name|M32C_OPERAND_DSP_8_U8
block|,
name|M32C_OPERAND_DSP_8_U16
block|,
name|M32C_OPERAND_DSP_8_S8
block|,
name|M32C_OPERAND_DSP_8_S24
block|,
name|M32C_OPERAND_DSP_8_U24
block|,
name|M32C_OPERAND_DSP_10_U6
block|,
name|M32C_OPERAND_DSP_16_U8
block|,
name|M32C_OPERAND_DSP_16_U16
block|,
name|M32C_OPERAND_DSP_16_U20
block|,
name|M32C_OPERAND_DSP_16_U24
block|,
name|M32C_OPERAND_DSP_16_S8
block|,
name|M32C_OPERAND_DSP_16_S16
block|,
name|M32C_OPERAND_DSP_24_U8
block|,
name|M32C_OPERAND_DSP_24_U16
block|,
name|M32C_OPERAND_DSP_24_U20
block|,
name|M32C_OPERAND_DSP_24_U24
block|,
name|M32C_OPERAND_DSP_24_S8
block|,
name|M32C_OPERAND_DSP_24_S16
block|,
name|M32C_OPERAND_DSP_32_U8
block|,
name|M32C_OPERAND_DSP_32_U16
block|,
name|M32C_OPERAND_DSP_32_U24
block|,
name|M32C_OPERAND_DSP_32_U20
block|,
name|M32C_OPERAND_DSP_32_S8
block|,
name|M32C_OPERAND_DSP_32_S16
block|,
name|M32C_OPERAND_DSP_40_U8
block|,
name|M32C_OPERAND_DSP_40_S8
block|,
name|M32C_OPERAND_DSP_40_U16
block|,
name|M32C_OPERAND_DSP_40_S16
block|,
name|M32C_OPERAND_DSP_40_U20
block|,
name|M32C_OPERAND_DSP_40_U24
block|,
name|M32C_OPERAND_DSP_48_U8
block|,
name|M32C_OPERAND_DSP_48_S8
block|,
name|M32C_OPERAND_DSP_48_U16
block|,
name|M32C_OPERAND_DSP_48_S16
block|,
name|M32C_OPERAND_DSP_48_U20
block|,
name|M32C_OPERAND_DSP_48_U24
block|,
name|M32C_OPERAND_IMM_8_S4
block|,
name|M32C_OPERAND_IMM_8_S4N
block|,
name|M32C_OPERAND_IMM_SH_8_S4
block|,
name|M32C_OPERAND_IMM_8_QI
block|,
name|M32C_OPERAND_IMM_8_HI
block|,
name|M32C_OPERAND_IMM_12_S4
block|,
name|M32C_OPERAND_IMM_12_S4N
block|,
name|M32C_OPERAND_IMM_SH_12_S4
block|,
name|M32C_OPERAND_IMM_13_U3
block|,
name|M32C_OPERAND_IMM_20_S4
block|,
name|M32C_OPERAND_IMM_SH_20_S4
block|,
name|M32C_OPERAND_IMM_16_QI
block|,
name|M32C_OPERAND_IMM_16_HI
block|,
name|M32C_OPERAND_IMM_16_SI
block|,
name|M32C_OPERAND_IMM_24_QI
block|,
name|M32C_OPERAND_IMM_24_HI
block|,
name|M32C_OPERAND_IMM_24_SI
block|,
name|M32C_OPERAND_IMM_32_QI
block|,
name|M32C_OPERAND_IMM_32_SI
block|,
name|M32C_OPERAND_IMM_32_HI
block|,
name|M32C_OPERAND_IMM_40_QI
block|,
name|M32C_OPERAND_IMM_40_HI
block|,
name|M32C_OPERAND_IMM_40_SI
block|,
name|M32C_OPERAND_IMM_48_QI
block|,
name|M32C_OPERAND_IMM_48_HI
block|,
name|M32C_OPERAND_IMM_48_SI
block|,
name|M32C_OPERAND_IMM_56_QI
block|,
name|M32C_OPERAND_IMM_56_HI
block|,
name|M32C_OPERAND_IMM_64_HI
block|,
name|M32C_OPERAND_IMM1_S
block|,
name|M32C_OPERAND_IMM3_S
block|,
name|M32C_OPERAND_BIT3_S
block|,
name|M32C_OPERAND_BITNO16R
block|,
name|M32C_OPERAND_BITNO32PREFIXED
block|,
name|M32C_OPERAND_BITNO32UNPREFIXED
block|,
name|M32C_OPERAND_BITBASE16_16_U8
block|,
name|M32C_OPERAND_BITBASE16_16_S8
block|,
name|M32C_OPERAND_BITBASE16_16_U16
block|,
name|M32C_OPERAND_BITBASE16_8_U11_S
block|,
name|M32C_OPERAND_BITBASE32_16_U11_UNPREFIXED
block|,
name|M32C_OPERAND_BITBASE32_16_S11_UNPREFIXED
block|,
name|M32C_OPERAND_BITBASE32_16_U19_UNPREFIXED
block|,
name|M32C_OPERAND_BITBASE32_16_S19_UNPREFIXED
block|,
name|M32C_OPERAND_BITBASE32_16_U27_UNPREFIXED
block|,
name|M32C_OPERAND_BITBASE32_24_U11_PREFIXED
block|,
name|M32C_OPERAND_BITBASE32_24_S11_PREFIXED
block|,
name|M32C_OPERAND_BITBASE32_24_U19_PREFIXED
block|,
name|M32C_OPERAND_BITBASE32_24_S19_PREFIXED
block|,
name|M32C_OPERAND_BITBASE32_24_U27_PREFIXED
block|,
name|M32C_OPERAND_LAB_5_3
block|,
name|M32C_OPERAND_LAB32_JMP_S
block|,
name|M32C_OPERAND_LAB_8_8
block|,
name|M32C_OPERAND_LAB_8_16
block|,
name|M32C_OPERAND_LAB_8_24
block|,
name|M32C_OPERAND_LAB_16_8
block|,
name|M32C_OPERAND_LAB_24_8
block|,
name|M32C_OPERAND_LAB_32_8
block|,
name|M32C_OPERAND_LAB_40_8
block|,
name|M32C_OPERAND_SBIT
block|,
name|M32C_OPERAND_OBIT
block|,
name|M32C_OPERAND_ZBIT
block|,
name|M32C_OPERAND_CBIT
block|,
name|M32C_OPERAND_UBIT
block|,
name|M32C_OPERAND_IBIT
block|,
name|M32C_OPERAND_BBIT
block|,
name|M32C_OPERAND_DBIT
block|,
name|M32C_OPERAND_COND16_16
block|,
name|M32C_OPERAND_COND16_24
block|,
name|M32C_OPERAND_COND16_32
block|,
name|M32C_OPERAND_COND32_16
block|,
name|M32C_OPERAND_COND32_24
block|,
name|M32C_OPERAND_COND32_32
block|,
name|M32C_OPERAND_COND32_40
block|,
name|M32C_OPERAND_COND16C
block|,
name|M32C_OPERAND_COND16J
block|,
name|M32C_OPERAND_COND16J5
block|,
name|M32C_OPERAND_COND32
block|,
name|M32C_OPERAND_COND32J
block|,
name|M32C_OPERAND_SCCOND32
block|,
name|M32C_OPERAND_FLAGS16
block|,
name|M32C_OPERAND_FLAGS32
block|,
name|M32C_OPERAND_CR16
block|,
name|M32C_OPERAND_CR1_UNPREFIXED_32
block|,
name|M32C_OPERAND_CR1_PREFIXED_32
block|,
name|M32C_OPERAND_CR2_32
block|,
name|M32C_OPERAND_CR3_UNPREFIXED_32
block|,
name|M32C_OPERAND_CR3_PREFIXED_32
block|,
name|M32C_OPERAND_Z
block|,
name|M32C_OPERAND_S
block|,
name|M32C_OPERAND_Q
block|,
name|M32C_OPERAND_G
block|,
name|M32C_OPERAND_X
block|,
name|M32C_OPERAND_SIZE
block|,
name|M32C_OPERAND_BITINDEX
block|,
name|M32C_OPERAND_SRCINDEX
block|,
name|M32C_OPERAND_DSTINDEX
block|,
name|M32C_OPERAND_NOREMAINDER
block|,
name|M32C_OPERAND_SRC16_RN_DIRECT_QI
block|,
name|M32C_OPERAND_SRC16_RN_DIRECT_HI
block|,
name|M32C_OPERAND_SRC32_RN_DIRECT_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_RN_DIRECT_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_RN_DIRECT_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_RN_DIRECT_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_RN_DIRECT_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_RN_DIRECT_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC16_AN_DIRECT_QI
block|,
name|M32C_OPERAND_SRC16_AN_DIRECT_HI
block|,
name|M32C_OPERAND_SRC32_AN_DIRECT_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_AN_DIRECT_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_AN_DIRECT_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_AN_DIRECT_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_AN_DIRECT_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_AN_DIRECT_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC16_AN_INDIRECT_QI
block|,
name|M32C_OPERAND_SRC16_AN_INDIRECT_HI
block|,
name|M32C_OPERAND_SRC32_AN_INDIRECT_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_AN_INDIRECT_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_AN_INDIRECT_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_AN_INDIRECT_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_AN_INDIRECT_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_AN_INDIRECT_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC16_16_8_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_SRC16_16_16_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_SRC16_16_8_FB_RELATIVE_QI
block|,
name|M32C_OPERAND_SRC16_16_8_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_SRC16_16_16_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_SRC16_16_20_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_SRC16_16_8_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_SRC16_16_16_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_SRC16_16_8_FB_RELATIVE_HI
block|,
name|M32C_OPERAND_SRC16_16_8_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_SRC16_16_16_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_SRC16_16_20_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_SRC32_16_8_SB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_16_16_SB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_16_8_FB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_16_16_FB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_16_8_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_16_16_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_16_24_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_16_8_SB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_16_16_SB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_16_8_FB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_16_16_FB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_16_8_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_16_16_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_16_24_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_16_8_SB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_16_16_SB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_16_8_FB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_16_16_FB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_16_8_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_16_16_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_16_24_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_24_8_SB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_24_16_SB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_24_8_FB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_24_16_FB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_24_8_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_24_16_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_24_24_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_24_8_SB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_24_16_SB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_24_8_FB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_24_16_FB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_24_8_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_24_16_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_24_24_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_24_8_SB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_24_16_SB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_24_8_FB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_24_16_FB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_24_8_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_24_16_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_24_24_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC16_16_16_ABSOLUTE_QI
block|,
name|M32C_OPERAND_SRC16_16_16_ABSOLUTE_HI
block|,
name|M32C_OPERAND_SRC32_16_16_ABSOLUTE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_16_24_ABSOLUTE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_16_16_ABSOLUTE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_16_24_ABSOLUTE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_16_16_ABSOLUTE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_16_24_ABSOLUTE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_24_16_ABSOLUTE_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_24_24_ABSOLUTE_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_24_16_ABSOLUTE_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_24_24_ABSOLUTE_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_24_16_ABSOLUTE_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_24_24_ABSOLUTE_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC16_2_S_8_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_SRC16_2_S_8_FB_RELATIVE_QI
block|,
name|M32C_OPERAND_SRC16_2_S_16_ABSOLUTE_QI
block|,
name|M32C_OPERAND_SRC32_2_S_8_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_SRC32_2_S_8_FB_RELATIVE_QI
block|,
name|M32C_OPERAND_SRC32_2_S_16_ABSOLUTE_QI
block|,
name|M32C_OPERAND_SRC32_2_S_8_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_SRC32_2_S_8_FB_RELATIVE_HI
block|,
name|M32C_OPERAND_SRC32_2_S_16_ABSOLUTE_HI
block|,
name|M32C_OPERAND_DST16_RN_DIRECT_QI
block|,
name|M32C_OPERAND_DST16_RN_DIRECT_HI
block|,
name|M32C_OPERAND_DST16_RN_DIRECT_SI
block|,
name|M32C_OPERAND_DST16_RN_DIRECT_EXT_QI
block|,
name|M32C_OPERAND_DST32_RN_DIRECT_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_RN_DIRECT_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_RN_DIRECT_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_RN_DIRECT_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_RN_DIRECT_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_RN_DIRECT_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_RN_DIRECT_EXTUNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_RN_DIRECT_EXTUNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_R3_DIRECT_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST16_AN_DIRECT_QI
block|,
name|M32C_OPERAND_DST16_AN_DIRECT_HI
block|,
name|M32C_OPERAND_DST16_AN_DIRECT_SI
block|,
name|M32C_OPERAND_DST32_AN_DIRECT_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_AN_DIRECT_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_AN_DIRECT_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_AN_DIRECT_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_AN_DIRECT_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_AN_DIRECT_PREFIXED_SI
block|,
name|M32C_OPERAND_DST16_AN_INDIRECT_QI
block|,
name|M32C_OPERAND_DST16_AN_INDIRECT_HI
block|,
name|M32C_OPERAND_DST16_AN_INDIRECT_SI
block|,
name|M32C_OPERAND_DST16_AN_INDIRECT_EXT_QI
block|,
name|M32C_OPERAND_DST32_AN_INDIRECT_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_AN_INDIRECT_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_AN_INDIRECT_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_AN_INDIRECT_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_AN_INDIRECT_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_AN_INDIRECT_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_AN_INDIRECT_EXTUNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_AN_INDIRECT_EXTUNPREFIXED_HI
block|,
name|M32C_OPERAND_DST16_16_8_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_16_16_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_16_8_FB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_16_8_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_16_16_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_16_20_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_24_8_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_24_16_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_24_8_FB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_24_8_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_24_16_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_24_20_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_32_8_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_32_16_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_32_8_FB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_32_8_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_32_16_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_32_20_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_40_8_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_40_16_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_40_8_FB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_40_8_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_40_16_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_40_20_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_48_8_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_48_16_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_48_8_FB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_48_8_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_48_16_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_48_20_AN_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_16_8_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_16_16_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_16_8_FB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_16_8_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_16_16_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_16_20_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_24_8_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_24_16_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_24_8_FB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_24_8_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_24_16_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_24_20_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_32_8_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_32_16_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_32_8_FB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_32_8_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_32_16_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_32_20_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_40_8_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_40_16_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_40_8_FB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_40_8_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_40_16_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_40_20_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_48_8_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_48_16_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_48_8_FB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_48_8_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_48_16_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_48_20_AN_RELATIVE_HI
block|,
name|M32C_OPERAND_DST16_16_8_SB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_16_16_SB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_16_8_FB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_16_8_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_16_16_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_16_20_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_24_8_SB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_24_16_SB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_24_8_FB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_24_8_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_24_16_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_24_20_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_32_8_SB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_32_16_SB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_32_8_FB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_32_8_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_32_16_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_32_20_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_40_8_SB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_40_16_SB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_40_8_FB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_40_8_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_40_16_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_40_20_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_48_8_SB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_48_16_SB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_48_8_FB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_48_8_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_48_16_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_48_20_AN_RELATIVE_SI
block|,
name|M32C_OPERAND_DST16_16_8_SB_RELATIVE_EXT_QI
block|,
name|M32C_OPERAND_DST16_16_16_SB_RELATIVE_EXT_QI
block|,
name|M32C_OPERAND_DST16_16_8_FB_RELATIVE_EXT_QI
block|,
name|M32C_OPERAND_DST16_16_8_AN_RELATIVE_EXT_QI
block|,
name|M32C_OPERAND_DST16_16_16_AN_RELATIVE_EXT_QI
block|,
name|M32C_OPERAND_DST32_16_8_SB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_16_SB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_8_FB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_16_FB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_8_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_16_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_24_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_8_SB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_16_SB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_8_FB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_16_FB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_8_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_16_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_24_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_8_SB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_16_SB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_8_FB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_16_FB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_8_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_16_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_24_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_8_SB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_16_SB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_8_FB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_16_FB_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_8_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_16_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_24_AN_RELATIVE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_8_SB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_16_SB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_8_FB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_16_FB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_8_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_16_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_24_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_8_SB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_16_SB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_8_FB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_16_FB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_8_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_16_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_24_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_8_SB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_16_SB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_8_FB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_16_FB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_8_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_16_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_24_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_8_SB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_16_SB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_8_FB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_16_FB_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_8_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_16_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_24_AN_RELATIVE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_8_SB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_16_SB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_8_FB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_16_FB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_8_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_16_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_24_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_8_SB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_16_SB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_8_FB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_16_FB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_8_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_16_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_24_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_8_SB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_16_SB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_8_FB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_16_FB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_8_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_16_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_24_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_8_SB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_16_SB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_8_FB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_16_FB_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_8_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_16_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_24_AN_RELATIVE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_8_SB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_16_SB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_8_FB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_16_FB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_8_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_16_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_24_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_8_SB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_16_SB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_8_FB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_16_FB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_8_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_16_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_24_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_8_SB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_16_SB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_8_FB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_16_FB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_8_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_16_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_24_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_48_8_SB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_48_16_SB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_48_8_FB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_48_16_FB_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_48_8_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_48_16_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_48_24_AN_RELATIVE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_8_SB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_16_SB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_8_FB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_16_FB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_8_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_16_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_24_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_8_SB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_16_SB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_8_FB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_16_FB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_8_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_16_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_24_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_8_SB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_16_SB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_8_FB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_16_FB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_8_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_16_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_24_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_48_8_SB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_48_16_SB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_48_8_FB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_48_16_FB_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_48_8_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_48_16_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_48_24_AN_RELATIVE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_8_SB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_16_SB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_8_FB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_16_FB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_8_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_16_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_24_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_8_SB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_16_SB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_8_FB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_16_FB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_8_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_16_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_24_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_8_SB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_16_SB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_8_FB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_16_FB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_8_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_16_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_24_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_48_8_SB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_48_16_SB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_48_8_FB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_48_16_FB_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_48_8_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_48_16_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_48_24_AN_RELATIVE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_8_SB_RELATIVE_EXTUNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_16_SB_RELATIVE_EXTUNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_8_FB_RELATIVE_EXTUNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_16_FB_RELATIVE_EXTUNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_8_AN_RELATIVE_EXTUNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_16_AN_RELATIVE_EXTUNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_24_AN_RELATIVE_EXTUNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_8_SB_RELATIVE_EXTUNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_16_SB_RELATIVE_EXTUNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_8_FB_RELATIVE_EXTUNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_16_FB_RELATIVE_EXTUNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_8_AN_RELATIVE_EXTUNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_16_AN_RELATIVE_EXTUNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_24_AN_RELATIVE_EXTUNPREFIXED_HI
block|,
name|M32C_OPERAND_DST16_16_16_ABSOLUTE_QI
block|,
name|M32C_OPERAND_DST16_24_16_ABSOLUTE_QI
block|,
name|M32C_OPERAND_DST16_32_16_ABSOLUTE_QI
block|,
name|M32C_OPERAND_DST16_40_16_ABSOLUTE_QI
block|,
name|M32C_OPERAND_DST16_48_16_ABSOLUTE_QI
block|,
name|M32C_OPERAND_DST16_16_16_ABSOLUTE_HI
block|,
name|M32C_OPERAND_DST16_24_16_ABSOLUTE_HI
block|,
name|M32C_OPERAND_DST16_32_16_ABSOLUTE_HI
block|,
name|M32C_OPERAND_DST16_40_16_ABSOLUTE_HI
block|,
name|M32C_OPERAND_DST16_48_16_ABSOLUTE_HI
block|,
name|M32C_OPERAND_DST16_16_16_ABSOLUTE_SI
block|,
name|M32C_OPERAND_DST16_24_16_ABSOLUTE_SI
block|,
name|M32C_OPERAND_DST16_32_16_ABSOLUTE_SI
block|,
name|M32C_OPERAND_DST16_40_16_ABSOLUTE_SI
block|,
name|M32C_OPERAND_DST16_48_16_ABSOLUTE_SI
block|,
name|M32C_OPERAND_DST16_16_16_ABSOLUTE_EXT_QI
block|,
name|M32C_OPERAND_DST32_16_16_ABSOLUTE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_24_ABSOLUTE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_16_ABSOLUTE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_24_ABSOLUTE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_16_ABSOLUTE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_24_ABSOLUTE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_16_ABSOLUTE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_24_ABSOLUTE_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_16_ABSOLUTE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_24_ABSOLUTE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_16_ABSOLUTE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_24_ABSOLUTE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_16_ABSOLUTE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_24_ABSOLUTE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_16_ABSOLUTE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_24_ABSOLUTE_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_16_ABSOLUTE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_24_ABSOLUTE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_16_ABSOLUTE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_24_ABSOLUTE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_16_ABSOLUTE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_24_ABSOLUTE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_16_ABSOLUTE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_24_ABSOLUTE_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_16_ABSOLUTE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_24_ABSOLUTE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_16_ABSOLUTE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_24_ABSOLUTE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_16_ABSOLUTE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_24_ABSOLUTE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_48_16_ABSOLUTE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_48_24_ABSOLUTE_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_16_ABSOLUTE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_24_ABSOLUTE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_16_ABSOLUTE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_24_ABSOLUTE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_16_ABSOLUTE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_24_ABSOLUTE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_48_16_ABSOLUTE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_48_24_ABSOLUTE_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_16_ABSOLUTE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_24_ABSOLUTE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_16_ABSOLUTE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_24_ABSOLUTE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_16_ABSOLUTE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_24_ABSOLUTE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_48_16_ABSOLUTE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_48_24_ABSOLUTE_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_16_ABSOLUTE_EXTUNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_24_ABSOLUTE_EXTUNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_16_ABSOLUTE_EXTUNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_24_ABSOLUTE_EXTUNPREFIXED_HI
block|,
name|M32C_OPERAND_BIT16_RN_DIRECT
block|,
name|M32C_OPERAND_BIT32_RN_DIRECT_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_RN_DIRECT_PREFIXED
block|,
name|M32C_OPERAND_BIT16_AN_DIRECT
block|,
name|M32C_OPERAND_BIT32_AN_DIRECT_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_AN_DIRECT_PREFIXED
block|,
name|M32C_OPERAND_BIT16_AN_INDIRECT
block|,
name|M32C_OPERAND_BIT32_AN_INDIRECT_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_AN_INDIRECT_PREFIXED
block|,
name|M32C_OPERAND_BIT16_16_8_SB_RELATIVE
block|,
name|M32C_OPERAND_BIT16_16_16_SB_RELATIVE
block|,
name|M32C_OPERAND_BIT16_16_8_FB_RELATIVE
block|,
name|M32C_OPERAND_BIT16_16_8_AN_RELATIVE
block|,
name|M32C_OPERAND_BIT16_16_16_AN_RELATIVE
block|,
name|M32C_OPERAND_BIT32_16_11_SB_RELATIVE_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_16_19_SB_RELATIVE_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_16_11_FB_RELATIVE_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_16_19_FB_RELATIVE_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_16_11_AN_RELATIVE_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_16_19_AN_RELATIVE_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_16_27_AN_RELATIVE_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_24_11_SB_RELATIVE_PREFIXED
block|,
name|M32C_OPERAND_BIT32_24_19_SB_RELATIVE_PREFIXED
block|,
name|M32C_OPERAND_BIT32_24_11_FB_RELATIVE_PREFIXED
block|,
name|M32C_OPERAND_BIT32_24_19_FB_RELATIVE_PREFIXED
block|,
name|M32C_OPERAND_BIT32_24_11_AN_RELATIVE_PREFIXED
block|,
name|M32C_OPERAND_BIT32_24_19_AN_RELATIVE_PREFIXED
block|,
name|M32C_OPERAND_BIT32_24_27_AN_RELATIVE_PREFIXED
block|,
name|M32C_OPERAND_BIT16_11_SB_RELATIVE_S
block|,
name|M32C_OPERAND_RN16_PUSH_S_DERIVED
block|,
name|M32C_OPERAND_AN16_PUSH_S_DERIVED
block|,
name|M32C_OPERAND_BIT16_16_16_ABSOLUTE
block|,
name|M32C_OPERAND_BIT32_16_19_ABSOLUTE_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_16_27_ABSOLUTE_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_24_19_ABSOLUTE_PREFIXED
block|,
name|M32C_OPERAND_BIT32_24_27_ABSOLUTE_PREFIXED
block|,
name|M32C_OPERAND_DST16_3_S_R0L_DIRECT_QI
block|,
name|M32C_OPERAND_DST16_3_S_R0H_DIRECT_QI
block|,
name|M32C_OPERAND_DST16_3_S_8_8_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_3_S_8_8_FB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_3_S_8_16_ABSOLUTE_QI
block|,
name|M32C_OPERAND_DST16_3_S_16_8_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_3_S_16_8_FB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST16_3_S_16_16_ABSOLUTE_QI
block|,
name|M32C_OPERAND_SRCDST16_R0L_R0H_S_DERIVED
block|,
name|M32C_OPERAND_DST32_2_S_R0L_DIRECT_QI
block|,
name|M32C_OPERAND_DST32_2_S_R0_DIRECT_HI
block|,
name|M32C_OPERAND_DST32_1_S_A0_DIRECT_HI
block|,
name|M32C_OPERAND_DST32_1_S_A1_DIRECT_HI
block|,
name|M32C_OPERAND_DST32_2_S_8_SB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST32_2_S_8_FB_RELATIVE_QI
block|,
name|M32C_OPERAND_DST32_2_S_16_ABSOLUTE_QI
block|,
name|M32C_OPERAND_DST32_2_S_8_SB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST32_2_S_8_FB_RELATIVE_HI
block|,
name|M32C_OPERAND_DST32_2_S_16_ABSOLUTE_HI
block|,
name|M32C_OPERAND_DST32_2_S_8_SB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST32_2_S_8_FB_RELATIVE_SI
block|,
name|M32C_OPERAND_DST32_2_S_16_ABSOLUTE_SI
block|,
name|M32C_OPERAND_SRC16_BASIC_QI
block|,
name|M32C_OPERAND_SRC16_BASIC_HI
block|,
name|M32C_OPERAND_SRC32_BASIC_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_BASIC_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_BASIC_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_BASIC_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_BASIC_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_BASIC_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_BASIC_EXTPREFIXED_QI
block|,
name|M32C_OPERAND_SRC16_16_8_QI
block|,
name|M32C_OPERAND_SRC16_16_16_QI
block|,
name|M32C_OPERAND_SRC16_16_8_HI
block|,
name|M32C_OPERAND_SRC16_16_16_HI
block|,
name|M32C_OPERAND_SRC32_16_8_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_16_16_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_16_24_UNPREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_16_8_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_16_16_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_16_24_UNPREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_16_8_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_16_16_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_16_24_UNPREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_24_8_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_24_16_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_24_24_PREFIXED_QI
block|,
name|M32C_OPERAND_SRC32_24_8_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_24_16_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_24_24_PREFIXED_HI
block|,
name|M32C_OPERAND_SRC32_24_8_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_24_16_PREFIXED_SI
block|,
name|M32C_OPERAND_SRC32_24_24_PREFIXED_SI
block|,
name|M32C_OPERAND_DST16_BASIC_QI
block|,
name|M32C_OPERAND_DST16_BASIC_HI
block|,
name|M32C_OPERAND_DST16_BASIC_SI
block|,
name|M32C_OPERAND_DST32_BASIC_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_BASIC_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_BASIC_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_BASIC_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_BASIC_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_BASIC_PREFIXED_SI
block|,
name|M32C_OPERAND_DST16_16_QI
block|,
name|M32C_OPERAND_DST16_16_8_QI
block|,
name|M32C_OPERAND_DST16_16_16_QI
block|,
name|M32C_OPERAND_DST16_16_16SA_QI
block|,
name|M32C_OPERAND_DST16_16_20AR_QI
block|,
name|M32C_OPERAND_DST16_16_HI
block|,
name|M32C_OPERAND_DST16_16_8_HI
block|,
name|M32C_OPERAND_DST16_16_16_HI
block|,
name|M32C_OPERAND_DST16_16_16SA_HI
block|,
name|M32C_OPERAND_DST16_16_20AR_HI
block|,
name|M32C_OPERAND_DST16_16_SI
block|,
name|M32C_OPERAND_DST16_16_8_SI
block|,
name|M32C_OPERAND_DST16_16_16_SI
block|,
name|M32C_OPERAND_DST16_16_16SA_SI
block|,
name|M32C_OPERAND_DST16_16_20AR_SI
block|,
name|M32C_OPERAND_DST16_16_EXT_QI
block|,
name|M32C_OPERAND_DST16_AN_INDIRECT_MOVA_HI
block|,
name|M32C_OPERAND_DST16_16_8_AN_RELATIVE_MOVA_HI
block|,
name|M32C_OPERAND_DST16_16_16_AN_RELATIVE_MOVA_HI
block|,
name|M32C_OPERAND_DST16_16_8_SB_RELATIVE_MOVA_HI
block|,
name|M32C_OPERAND_DST16_16_16_SB_RELATIVE_MOVA_HI
block|,
name|M32C_OPERAND_DST16_16_8_FB_RELATIVE_MOVA_HI
block|,
name|M32C_OPERAND_DST16_16_16_ABSOLUTE_MOVA_HI
block|,
name|M32C_OPERAND_DST16_16_MOVA_HI
block|,
name|M32C_OPERAND_DST32_AN_INDIRECT_UNPREFIXED_MOVA_SI
block|,
name|M32C_OPERAND_DST32_16_8_AN_RELATIVE_UNPREFIXED_MOVA_SI
block|,
name|M32C_OPERAND_DST32_16_16_AN_RELATIVE_UNPREFIXED_MOVA_SI
block|,
name|M32C_OPERAND_DST32_16_24_AN_RELATIVE_UNPREFIXED_MOVA_SI
block|,
name|M32C_OPERAND_DST32_16_8_SB_RELATIVE_UNPREFIXED_MOVA_SI
block|,
name|M32C_OPERAND_DST32_16_16_SB_RELATIVE_UNPREFIXED_MOVA_SI
block|,
name|M32C_OPERAND_DST32_16_8_FB_RELATIVE_UNPREFIXED_MOVA_SI
block|,
name|M32C_OPERAND_DST32_16_16_FB_RELATIVE_UNPREFIXED_MOVA_SI
block|,
name|M32C_OPERAND_DST32_16_16_ABSOLUTE_UNPREFIXED_MOVA_SI
block|,
name|M32C_OPERAND_DST32_16_24_ABSOLUTE_UNPREFIXED_MOVA_SI
block|,
name|M32C_OPERAND_DST32_16_UNPREFIXED_MOVA_SI
block|,
name|M32C_OPERAND_DST32_16_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_8_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_16_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_16SA_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_24_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_8_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_16_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_16SA_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_24_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_8_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_16_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_16SA_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_24_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_16_EXTUNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_16_EXTUNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_16_UNPREFIXED_MULEX_HI
block|,
name|M32C_OPERAND_DST16_24_QI
block|,
name|M32C_OPERAND_DST16_24_HI
block|,
name|M32C_OPERAND_DST32_24_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_8_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_16_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_24_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_24_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_8_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_16_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_24_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_24_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_8_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_16_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_24_24_PREFIXED_SI
block|,
name|M32C_OPERAND_DST16_32_QI
block|,
name|M32C_OPERAND_DST16_32_HI
block|,
name|M32C_OPERAND_DST32_32_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_32_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_32_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_32_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_UNPREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_40_UNPREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_40_UNPREFIXED_SI
block|,
name|M32C_OPERAND_DST32_40_PREFIXED_SI
block|,
name|M32C_OPERAND_DST32_48_PREFIXED_QI
block|,
name|M32C_OPERAND_DST32_48_PREFIXED_HI
block|,
name|M32C_OPERAND_DST32_48_PREFIXED_SI
block|,
name|M32C_OPERAND_BIT16_16
block|,
name|M32C_OPERAND_BIT16_16_BASIC
block|,
name|M32C_OPERAND_BIT16_16_8
block|,
name|M32C_OPERAND_BIT16_16_16
block|,
name|M32C_OPERAND_BIT32_16_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_24_PREFIXED
block|,
name|M32C_OPERAND_BIT32_BASIC_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_16_8_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_16_16_UNPREFIXED
block|,
name|M32C_OPERAND_BIT32_16_24_UNPREFIXED
block|,
name|M32C_OPERAND_SRC16_2_S
block|,
name|M32C_OPERAND_SRC32_2_S_QI
block|,
name|M32C_OPERAND_SRC32_2_S_HI
block|,
name|M32C_OPERAND_DST16_3_S_8
block|,
name|M32C_OPERAND_DST16_3_S_16
block|,
name|M32C_OPERAND_SRCDST16_R0L_R0H_S
block|,
name|M32C_OPERAND_DST32_2_S_BASIC_QI
block|,
name|M32C_OPERAND_DST32_2_S_BASIC_HI
block|,
name|M32C_OPERAND_DST32_2_S_8_QI
block|,
name|M32C_OPERAND_DST32_2_S_16_QI
block|,
name|M32C_OPERAND_DST32_2_S_8_HI
block|,
name|M32C_OPERAND_DST32_2_S_16_HI
block|,
name|M32C_OPERAND_DST32_2_S_8_SI
block|,
name|M32C_OPERAND_DST32_2_S_16_SI
block|,
name|M32C_OPERAND_DST32_AN_S
block|,
name|M32C_OPERAND_BIT16_11_S
block|,
name|M32C_OPERAND_RN16_PUSH_S_ANYOF
block|,
name|M32C_OPERAND_AN16_PUSH_S_ANYOF
block|,
name|M32C_OPERAND_MAX
block|}
name|CGEN_OPERAND_TYPE
typedef|;
end_typedef

begin_comment
comment|/* Number of operands types.  */
end_comment

begin_define
define|#
directive|define
name|MAX_OPERANDS
value|902
end_define

begin_comment
comment|/* Maximum number of operands referenced by any insn.  */
end_comment

begin_define
define|#
directive|define
name|MAX_OPERAND_INSTANCES
value|8
end_define

begin_comment
comment|/* Insn attribute indices.  */
end_comment

begin_comment
comment|/* Enum declaration for cgen_insn attrs.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_insn_attr
block|{
name|CGEN_INSN_ALIAS
block|,
name|CGEN_INSN_VIRTUAL
block|,
name|CGEN_INSN_UNCOND_CTI
block|,
name|CGEN_INSN_COND_CTI
block|,
name|CGEN_INSN_SKIP_CTI
block|,
name|CGEN_INSN_DELAY_SLOT
block|,
name|CGEN_INSN_RELAXABLE
block|,
name|CGEN_INSN_RELAXED
block|,
name|CGEN_INSN_NO_DIS
block|,
name|CGEN_INSN_PBB
block|,
name|CGEN_INSN_END_BOOLS
block|,
name|CGEN_INSN_START_NBOOLS
init|=
literal|31
block|,
name|CGEN_INSN_MACH
block|,
name|CGEN_INSN_ISA
block|,
name|CGEN_INSN_RL_TYPE
block|,
name|CGEN_INSN_END_NBOOLS
block|}
name|CGEN_INSN_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Number of non-boolean elements in cgen_insn_attr.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_INSN_NBOOL_ATTRS
value|(CGEN_INSN_END_NBOOLS - CGEN_INSN_START_NBOOLS - 1)
end_define

begin_comment
comment|/* cgen_insn attribute accessor macros.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_MACH_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|((attrs)->nonbool[CGEN_INSN_MACH-CGEN_INSN_START_NBOOLS-1].nonbitset)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_ISA_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|((attrs)->nonbool[CGEN_INSN_ISA-CGEN_INSN_START_NBOOLS-1].bitset)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_RL_TYPE_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|((attrs)->nonbool[CGEN_INSN_RL_TYPE-CGEN_INSN_START_NBOOLS-1].nonbitset)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_ALIAS_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_INSN_ALIAS)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_VIRTUAL_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_INSN_VIRTUAL)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_UNCOND_CTI_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_INSN_UNCOND_CTI)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_COND_CTI_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_INSN_COND_CTI)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_SKIP_CTI_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_INSN_SKIP_CTI)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_DELAY_SLOT_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_INSN_DELAY_SLOT)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_RELAXABLE_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_INSN_RELAXABLE)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_RELAXED_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_INSN_RELAXED)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_NO_DIS_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_INSN_NO_DIS)) != 0)
end_define

begin_define
define|#
directive|define
name|CGEN_ATTR_CGEN_INSN_PBB_VALUE
parameter_list|(
name|attrs
parameter_list|)
value|(((attrs)->bool& (1<< CGEN_INSN_PBB)) != 0)
end_define

begin_comment
comment|/* cgen.h uses things we just defined.  */
end_comment

begin_include
include|#
directive|include
file|"opcode/cgen.h"
end_include

begin_decl_stmt
specifier|extern
specifier|const
name|struct
name|cgen_ifld
name|m32c_cgen_ifld_table
index|[]
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Attributes.  */
end_comment

begin_decl_stmt
specifier|extern
specifier|const
name|CGEN_ATTR_TABLE
name|m32c_cgen_hardware_attr_table
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|CGEN_ATTR_TABLE
name|m32c_cgen_ifield_attr_table
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|CGEN_ATTR_TABLE
name|m32c_cgen_operand_attr_table
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|CGEN_ATTR_TABLE
name|m32c_cgen_insn_attr_table
index|[]
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Hardware decls.  */
end_comment

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_gr
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_gr_QI
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_gr_HI
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_gr_SI
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_gr_ext_QI
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_gr_ext_HI
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_r0l
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_r0h
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_r1l
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_r1h
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_r0
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_r1
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_r2
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_r3
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_r0l_r0h
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_r2r0
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_r3r1
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_r1r2r0
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_ar
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_ar_QI
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_ar_HI
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_ar_SI
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_a0
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_a1
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_cond16
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_cond16c
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_cond16j
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_cond16j_5
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_cond32
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_cr1_32
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_cr2_32
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_cr3_32
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_cr_16
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_flags
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|m32c_cgen_opval_h_shimm
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|CGEN_HW_ENTRY
name|m32c_cgen_hw_table
index|[]
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* M32C_CPU_H */
end_comment

end_unit

