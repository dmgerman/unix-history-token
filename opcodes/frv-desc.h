begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* CPU data header for frv.  THIS FILE IS MACHINE GENERATED WITH CGEN.  Copyright 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.  This file is part of the GNU Binutils and/or GDB, the GNU debugger.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|FRV_CPU_H
end_ifndef

begin_define
define|#
directive|define
name|FRV_CPU_H
end_define

begin_define
define|#
directive|define
name|CGEN_ARCH
value|frv
end_define

begin_comment
comment|/* Given symbol S, return frv_cgen_<S>.  */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__STDC__
argument_list|)
operator|||
name|defined
argument_list|(
name|ALMOST_STDC
argument_list|)
operator|||
name|defined
argument_list|(
name|HAVE_STRINGIZE
argument_list|)
end_if

begin_define
define|#
directive|define
name|CGEN_SYM
parameter_list|(
name|s
parameter_list|)
value|frv##_cgen_##s
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|CGEN_SYM
parameter_list|(
name|s
parameter_list|)
value|frv
comment|/**/
value|_cgen_
comment|/**/
value|s
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Selected cpu families.  */
end_comment

begin_define
define|#
directive|define
name|HAVE_CPU_FRVBF
end_define

begin_define
define|#
directive|define
name|CGEN_INSN_LSB0_P
value|1
end_define

begin_comment
comment|/* Minimum size of any insn (in bytes).  */
end_comment

begin_define
define|#
directive|define
name|CGEN_MIN_INSN_SIZE
value|4
end_define

begin_comment
comment|/* Maximum size of any insn (in bytes).  */
end_comment

begin_define
define|#
directive|define
name|CGEN_MAX_INSN_SIZE
value|4
end_define

begin_define
define|#
directive|define
name|CGEN_INT_INSN_P
value|1
end_define

begin_comment
comment|/* Maximum number of syntax elements in an instruction.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_ACTUAL_MAX_SYNTAX_ELEMENTS
value|22
end_define

begin_comment
comment|/* CGEN_MNEMONIC_OPERANDS is defined if mnemonics have operands.    e.g. In "b,a foo" the ",a" is an operand.  If mnemonics have operands    we can't hash on everything up to the space.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_MNEMONIC_OPERANDS
end_define

begin_comment
comment|/* Maximum number of fields in an instruction.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_ACTUAL_MAX_IFMT_OPERANDS
value|10
end_define

begin_comment
comment|/* Enums.  */
end_comment

begin_comment
comment|/* Enum declaration for insn op enums.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|insn_op
block|{
name|OP_00
block|,
name|OP_01
block|,
name|OP_02
block|,
name|OP_03
block|,
name|OP_04
block|,
name|OP_05
block|,
name|OP_06
block|,
name|OP_07
block|,
name|OP_08
block|,
name|OP_09
block|,
name|OP_0A
block|,
name|OP_0B
block|,
name|OP_0C
block|,
name|OP_0D
block|,
name|OP_0E
block|,
name|OP_0F
block|,
name|OP_10
block|,
name|OP_11
block|,
name|OP_12
block|,
name|OP_13
block|,
name|OP_14
block|,
name|OP_15
block|,
name|OP_16
block|,
name|OP_17
block|,
name|OP_18
block|,
name|OP_19
block|,
name|OP_1A
block|,
name|OP_1B
block|,
name|OP_1C
block|,
name|OP_1D
block|,
name|OP_1E
block|,
name|OP_1F
block|,
name|OP_20
block|,
name|OP_21
block|,
name|OP_22
block|,
name|OP_23
block|,
name|OP_24
block|,
name|OP_25
block|,
name|OP_26
block|,
name|OP_27
block|,
name|OP_28
block|,
name|OP_29
block|,
name|OP_2A
block|,
name|OP_2B
block|,
name|OP_2C
block|,
name|OP_2D
block|,
name|OP_2E
block|,
name|OP_2F
block|,
name|OP_30
block|,
name|OP_31
block|,
name|OP_32
block|,
name|OP_33
block|,
name|OP_34
block|,
name|OP_35
block|,
name|OP_36
block|,
name|OP_37
block|,
name|OP_38
block|,
name|OP_39
block|,
name|OP_3A
block|,
name|OP_3B
block|,
name|OP_3C
block|,
name|OP_3D
block|,
name|OP_3E
block|,
name|OP_3F
block|,
name|OP_40
block|,
name|OP_41
block|,
name|OP_42
block|,
name|OP_43
block|,
name|OP_44
block|,
name|OP_45
block|,
name|OP_46
block|,
name|OP_47
block|,
name|OP_48
block|,
name|OP_49
block|,
name|OP_4A
block|,
name|OP_4B
block|,
name|OP_4C
block|,
name|OP_4D
block|,
name|OP_4E
block|,
name|OP_4F
block|,
name|OP_50
block|,
name|OP_51
block|,
name|OP_52
block|,
name|OP_53
block|,
name|OP_54
block|,
name|OP_55
block|,
name|OP_56
block|,
name|OP_57
block|,
name|OP_58
block|,
name|OP_59
block|,
name|OP_5A
block|,
name|OP_5B
block|,
name|OP_5C
block|,
name|OP_5D
block|,
name|OP_5E
block|,
name|OP_5F
block|,
name|OP_60
block|,
name|OP_61
block|,
name|OP_62
block|,
name|OP_63
block|,
name|OP_64
block|,
name|OP_65
block|,
name|OP_66
block|,
name|OP_67
block|,
name|OP_68
block|,
name|OP_69
block|,
name|OP_6A
block|,
name|OP_6B
block|,
name|OP_6C
block|,
name|OP_6D
block|,
name|OP_6E
block|,
name|OP_6F
block|,
name|OP_70
block|,
name|OP_71
block|,
name|OP_72
block|,
name|OP_73
block|,
name|OP_74
block|,
name|OP_75
block|,
name|OP_76
block|,
name|OP_77
block|,
name|OP_78
block|,
name|OP_79
block|,
name|OP_7A
block|,
name|OP_7B
block|,
name|OP_7C
block|,
name|OP_7D
block|,
name|OP_7E
block|,
name|OP_7F
block|}
name|INSN_OP
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for insn ope enums.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|insn_ope1
block|{
name|OPE1_00
block|,
name|OPE1_01
block|,
name|OPE1_02
block|,
name|OPE1_03
block|,
name|OPE1_04
block|,
name|OPE1_05
block|,
name|OPE1_06
block|,
name|OPE1_07
block|,
name|OPE1_08
block|,
name|OPE1_09
block|,
name|OPE1_0A
block|,
name|OPE1_0B
block|,
name|OPE1_0C
block|,
name|OPE1_0D
block|,
name|OPE1_0E
block|,
name|OPE1_0F
block|,
name|OPE1_10
block|,
name|OPE1_11
block|,
name|OPE1_12
block|,
name|OPE1_13
block|,
name|OPE1_14
block|,
name|OPE1_15
block|,
name|OPE1_16
block|,
name|OPE1_17
block|,
name|OPE1_18
block|,
name|OPE1_19
block|,
name|OPE1_1A
block|,
name|OPE1_1B
block|,
name|OPE1_1C
block|,
name|OPE1_1D
block|,
name|OPE1_1E
block|,
name|OPE1_1F
block|,
name|OPE1_20
block|,
name|OPE1_21
block|,
name|OPE1_22
block|,
name|OPE1_23
block|,
name|OPE1_24
block|,
name|OPE1_25
block|,
name|OPE1_26
block|,
name|OPE1_27
block|,
name|OPE1_28
block|,
name|OPE1_29
block|,
name|OPE1_2A
block|,
name|OPE1_2B
block|,
name|OPE1_2C
block|,
name|OPE1_2D
block|,
name|OPE1_2E
block|,
name|OPE1_2F
block|,
name|OPE1_30
block|,
name|OPE1_31
block|,
name|OPE1_32
block|,
name|OPE1_33
block|,
name|OPE1_34
block|,
name|OPE1_35
block|,
name|OPE1_36
block|,
name|OPE1_37
block|,
name|OPE1_38
block|,
name|OPE1_39
block|,
name|OPE1_3A
block|,
name|OPE1_3B
block|,
name|OPE1_3C
block|,
name|OPE1_3D
block|,
name|OPE1_3E
block|,
name|OPE1_3F
block|}
name|INSN_OPE1
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for insn ope enums.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|insn_ope2
block|{
name|OPE2_00
block|,
name|OPE2_01
block|,
name|OPE2_02
block|,
name|OPE2_03
block|,
name|OPE2_04
block|,
name|OPE2_05
block|,
name|OPE2_06
block|,
name|OPE2_07
block|,
name|OPE2_08
block|,
name|OPE2_09
block|,
name|OPE2_0A
block|,
name|OPE2_0B
block|,
name|OPE2_0C
block|,
name|OPE2_0D
block|,
name|OPE2_0E
block|,
name|OPE2_0F
block|}
name|INSN_OPE2
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for insn ope enums.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|insn_ope3
block|{
name|OPE3_00
block|,
name|OPE3_01
block|,
name|OPE3_02
block|,
name|OPE3_03
block|,
name|OPE3_04
block|,
name|OPE3_05
block|,
name|OPE3_06
block|,
name|OPE3_07
block|}
name|INSN_OPE3
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for insn ope enums.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|insn_ope4
block|{
name|OPE4_0
block|,
name|OPE4_1
block|,
name|OPE4_2
block|,
name|OPE4_3
block|}
name|INSN_OPE4
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for integer branch cond enums.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|int_cc
block|{
name|ICC_NEV
block|,
name|ICC_C
block|,
name|ICC_V
block|,
name|ICC_LT
block|,
name|ICC_EQ
block|,
name|ICC_LS
block|,
name|ICC_N
block|,
name|ICC_LE
block|,
name|ICC_RA
block|,
name|ICC_NC
block|,
name|ICC_NV
block|,
name|ICC_GE
block|,
name|ICC_NE
block|,
name|ICC_HI
block|,
name|ICC_P
block|,
name|ICC_GT
block|}
name|INT_CC
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for float branch cond enums.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|flt_cc
block|{
name|FCC_NEV
block|,
name|FCC_U
block|,
name|FCC_GT
block|,
name|FCC_UG
block|,
name|FCC_LT
block|,
name|FCC_UL
block|,
name|FCC_LG
block|,
name|FCC_NE
block|,
name|FCC_EQ
block|,
name|FCC_UE
block|,
name|FCC_GE
block|,
name|FCC_UGE
block|,
name|FCC_LE
block|,
name|FCC_ULE
block|,
name|FCC_O
block|,
name|FCC_RA
block|}
name|FLT_CC
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for .  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|gr_names
block|{
name|H_GR_SP
init|=
literal|1
block|,
name|H_GR_FP
init|=
literal|2
block|,
name|H_GR_GR0
init|=
literal|0
block|,
name|H_GR_GR1
init|=
literal|1
block|,
name|H_GR_GR2
init|=
literal|2
block|,
name|H_GR_GR3
init|=
literal|3
block|,
name|H_GR_GR4
init|=
literal|4
block|,
name|H_GR_GR5
init|=
literal|5
block|,
name|H_GR_GR6
init|=
literal|6
block|,
name|H_GR_GR7
init|=
literal|7
block|,
name|H_GR_GR8
init|=
literal|8
block|,
name|H_GR_GR9
init|=
literal|9
block|,
name|H_GR_GR10
init|=
literal|10
block|,
name|H_GR_GR11
init|=
literal|11
block|,
name|H_GR_GR12
init|=
literal|12
block|,
name|H_GR_GR13
init|=
literal|13
block|,
name|H_GR_GR14
init|=
literal|14
block|,
name|H_GR_GR15
init|=
literal|15
block|,
name|H_GR_GR16
init|=
literal|16
block|,
name|H_GR_GR17
init|=
literal|17
block|,
name|H_GR_GR18
init|=
literal|18
block|,
name|H_GR_GR19
init|=
literal|19
block|,
name|H_GR_GR20
init|=
literal|20
block|,
name|H_GR_GR21
init|=
literal|21
block|,
name|H_GR_GR22
init|=
literal|22
block|,
name|H_GR_GR23
init|=
literal|23
block|,
name|H_GR_GR24
init|=
literal|24
block|,
name|H_GR_GR25
init|=
literal|25
block|,
name|H_GR_GR26
init|=
literal|26
block|,
name|H_GR_GR27
init|=
literal|27
block|,
name|H_GR_GR28
init|=
literal|28
block|,
name|H_GR_GR29
init|=
literal|29
block|,
name|H_GR_GR30
init|=
literal|30
block|,
name|H_GR_GR31
init|=
literal|31
block|,
name|H_GR_GR32
init|=
literal|32
block|,
name|H_GR_GR33
init|=
literal|33
block|,
name|H_GR_GR34
init|=
literal|34
block|,
name|H_GR_GR35
init|=
literal|35
block|,
name|H_GR_GR36
init|=
literal|36
block|,
name|H_GR_GR37
init|=
literal|37
block|,
name|H_GR_GR38
init|=
literal|38
block|,
name|H_GR_GR39
init|=
literal|39
block|,
name|H_GR_GR40
init|=
literal|40
block|,
name|H_GR_GR41
init|=
literal|41
block|,
name|H_GR_GR42
init|=
literal|42
block|,
name|H_GR_GR43
init|=
literal|43
block|,
name|H_GR_GR44
init|=
literal|44
block|,
name|H_GR_GR45
init|=
literal|45
block|,
name|H_GR_GR46
init|=
literal|46
block|,
name|H_GR_GR47
init|=
literal|47
block|,
name|H_GR_GR48
init|=
literal|48
block|,
name|H_GR_GR49
init|=
literal|49
block|,
name|H_GR_GR50
init|=
literal|50
block|,
name|H_GR_GR51
init|=
literal|51
block|,
name|H_GR_GR52
init|=
literal|52
block|,
name|H_GR_GR53
init|=
literal|53
block|,
name|H_GR_GR54
init|=
literal|54
block|,
name|H_GR_GR55
init|=
literal|55
block|,
name|H_GR_GR56
init|=
literal|56
block|,
name|H_GR_GR57
init|=
literal|57
block|,
name|H_GR_GR58
init|=
literal|58
block|,
name|H_GR_GR59
init|=
literal|59
block|,
name|H_GR_GR60
init|=
literal|60
block|,
name|H_GR_GR61
init|=
literal|61
block|,
name|H_GR_GR62
init|=
literal|62
block|,
name|H_GR_GR63
init|=
literal|63
block|}
name|GR_NAMES
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for .  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|fr_names
block|{
name|H_FR_FR0
block|,
name|H_FR_FR1
block|,
name|H_FR_FR2
block|,
name|H_FR_FR3
block|,
name|H_FR_FR4
block|,
name|H_FR_FR5
block|,
name|H_FR_FR6
block|,
name|H_FR_FR7
block|,
name|H_FR_FR8
block|,
name|H_FR_FR9
block|,
name|H_FR_FR10
block|,
name|H_FR_FR11
block|,
name|H_FR_FR12
block|,
name|H_FR_FR13
block|,
name|H_FR_FR14
block|,
name|H_FR_FR15
block|,
name|H_FR_FR16
block|,
name|H_FR_FR17
block|,
name|H_FR_FR18
block|,
name|H_FR_FR19
block|,
name|H_FR_FR20
block|,
name|H_FR_FR21
block|,
name|H_FR_FR22
block|,
name|H_FR_FR23
block|,
name|H_FR_FR24
block|,
name|H_FR_FR25
block|,
name|H_FR_FR26
block|,
name|H_FR_FR27
block|,
name|H_FR_FR28
block|,
name|H_FR_FR29
block|,
name|H_FR_FR30
block|,
name|H_FR_FR31
block|,
name|H_FR_FR32
block|,
name|H_FR_FR33
block|,
name|H_FR_FR34
block|,
name|H_FR_FR35
block|,
name|H_FR_FR36
block|,
name|H_FR_FR37
block|,
name|H_FR_FR38
block|,
name|H_FR_FR39
block|,
name|H_FR_FR40
block|,
name|H_FR_FR41
block|,
name|H_FR_FR42
block|,
name|H_FR_FR43
block|,
name|H_FR_FR44
block|,
name|H_FR_FR45
block|,
name|H_FR_FR46
block|,
name|H_FR_FR47
block|,
name|H_FR_FR48
block|,
name|H_FR_FR49
block|,
name|H_FR_FR50
block|,
name|H_FR_FR51
block|,
name|H_FR_FR52
block|,
name|H_FR_FR53
block|,
name|H_FR_FR54
block|,
name|H_FR_FR55
block|,
name|H_FR_FR56
block|,
name|H_FR_FR57
block|,
name|H_FR_FR58
block|,
name|H_FR_FR59
block|,
name|H_FR_FR60
block|,
name|H_FR_FR61
block|,
name|H_FR_FR62
block|,
name|H_FR_FR63
block|}
name|FR_NAMES
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for .  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cpr_names
block|{
name|H_CPR_CPR0
block|,
name|H_CPR_CPR1
block|,
name|H_CPR_CPR2
block|,
name|H_CPR_CPR3
block|,
name|H_CPR_CPR4
block|,
name|H_CPR_CPR5
block|,
name|H_CPR_CPR6
block|,
name|H_CPR_CPR7
block|,
name|H_CPR_CPR8
block|,
name|H_CPR_CPR9
block|,
name|H_CPR_CPR10
block|,
name|H_CPR_CPR11
block|,
name|H_CPR_CPR12
block|,
name|H_CPR_CPR13
block|,
name|H_CPR_CPR14
block|,
name|H_CPR_CPR15
block|,
name|H_CPR_CPR16
block|,
name|H_CPR_CPR17
block|,
name|H_CPR_CPR18
block|,
name|H_CPR_CPR19
block|,
name|H_CPR_CPR20
block|,
name|H_CPR_CPR21
block|,
name|H_CPR_CPR22
block|,
name|H_CPR_CPR23
block|,
name|H_CPR_CPR24
block|,
name|H_CPR_CPR25
block|,
name|H_CPR_CPR26
block|,
name|H_CPR_CPR27
block|,
name|H_CPR_CPR28
block|,
name|H_CPR_CPR29
block|,
name|H_CPR_CPR30
block|,
name|H_CPR_CPR31
block|,
name|H_CPR_CPR32
block|,
name|H_CPR_CPR33
block|,
name|H_CPR_CPR34
block|,
name|H_CPR_CPR35
block|,
name|H_CPR_CPR36
block|,
name|H_CPR_CPR37
block|,
name|H_CPR_CPR38
block|,
name|H_CPR_CPR39
block|,
name|H_CPR_CPR40
block|,
name|H_CPR_CPR41
block|,
name|H_CPR_CPR42
block|,
name|H_CPR_CPR43
block|,
name|H_CPR_CPR44
block|,
name|H_CPR_CPR45
block|,
name|H_CPR_CPR46
block|,
name|H_CPR_CPR47
block|,
name|H_CPR_CPR48
block|,
name|H_CPR_CPR49
block|,
name|H_CPR_CPR50
block|,
name|H_CPR_CPR51
block|,
name|H_CPR_CPR52
block|,
name|H_CPR_CPR53
block|,
name|H_CPR_CPR54
block|,
name|H_CPR_CPR55
block|,
name|H_CPR_CPR56
block|,
name|H_CPR_CPR57
block|,
name|H_CPR_CPR58
block|,
name|H_CPR_CPR59
block|,
name|H_CPR_CPR60
block|,
name|H_CPR_CPR61
block|,
name|H_CPR_CPR62
block|,
name|H_CPR_CPR63
block|}
name|CPR_NAMES
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for .  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|spr_names
block|{
name|H_SPR_PSR
init|=
literal|0
block|,
name|H_SPR_PCSR
init|=
literal|1
block|,
name|H_SPR_BPCSR
init|=
literal|2
block|,
name|H_SPR_TBR
init|=
literal|3
block|,
name|H_SPR_BPSR
init|=
literal|4
block|,
name|H_SPR_HSR0
init|=
literal|16
block|,
name|H_SPR_HSR1
init|=
literal|17
block|,
name|H_SPR_HSR2
init|=
literal|18
block|,
name|H_SPR_HSR3
init|=
literal|19
block|,
name|H_SPR_HSR4
init|=
literal|20
block|,
name|H_SPR_HSR5
init|=
literal|21
block|,
name|H_SPR_HSR6
init|=
literal|22
block|,
name|H_SPR_HSR7
init|=
literal|23
block|,
name|H_SPR_HSR8
init|=
literal|24
block|,
name|H_SPR_HSR9
init|=
literal|25
block|,
name|H_SPR_HSR10
init|=
literal|26
block|,
name|H_SPR_HSR11
init|=
literal|27
block|,
name|H_SPR_HSR12
init|=
literal|28
block|,
name|H_SPR_HSR13
init|=
literal|29
block|,
name|H_SPR_HSR14
init|=
literal|30
block|,
name|H_SPR_HSR15
init|=
literal|31
block|,
name|H_SPR_HSR16
init|=
literal|32
block|,
name|H_SPR_HSR17
init|=
literal|33
block|,
name|H_SPR_HSR18
init|=
literal|34
block|,
name|H_SPR_HSR19
init|=
literal|35
block|,
name|H_SPR_HSR20
init|=
literal|36
block|,
name|H_SPR_HSR21
init|=
literal|37
block|,
name|H_SPR_HSR22
init|=
literal|38
block|,
name|H_SPR_HSR23
init|=
literal|39
block|,
name|H_SPR_HSR24
init|=
literal|40
block|,
name|H_SPR_HSR25
init|=
literal|41
block|,
name|H_SPR_HSR26
init|=
literal|42
block|,
name|H_SPR_HSR27
init|=
literal|43
block|,
name|H_SPR_HSR28
init|=
literal|44
block|,
name|H_SPR_HSR29
init|=
literal|45
block|,
name|H_SPR_HSR30
init|=
literal|46
block|,
name|H_SPR_HSR31
init|=
literal|47
block|,
name|H_SPR_HSR32
init|=
literal|48
block|,
name|H_SPR_HSR33
init|=
literal|49
block|,
name|H_SPR_HSR34
init|=
literal|50
block|,
name|H_SPR_HSR35
init|=
literal|51
block|,
name|H_SPR_HSR36
init|=
literal|52
block|,
name|H_SPR_HSR37
init|=
literal|53
block|,
name|H_SPR_HSR38
init|=
literal|54
block|,
name|H_SPR_HSR39
init|=
literal|55
block|,
name|H_SPR_HSR40
init|=
literal|56
block|,
name|H_SPR_HSR41
init|=
literal|57
block|,
name|H_SPR_HSR42
init|=
literal|58
block|,
name|H_SPR_HSR43
init|=
literal|59
block|,
name|H_SPR_HSR44
init|=
literal|60
block|,
name|H_SPR_HSR45
init|=
literal|61
block|,
name|H_SPR_HSR46
init|=
literal|62
block|,
name|H_SPR_HSR47
init|=
literal|63
block|,
name|H_SPR_HSR48
init|=
literal|64
block|,
name|H_SPR_HSR49
init|=
literal|65
block|,
name|H_SPR_HSR50
init|=
literal|66
block|,
name|H_SPR_HSR51
init|=
literal|67
block|,
name|H_SPR_HSR52
init|=
literal|68
block|,
name|H_SPR_HSR53
init|=
literal|69
block|,
name|H_SPR_HSR54
init|=
literal|70
block|,
name|H_SPR_HSR55
init|=
literal|71
block|,
name|H_SPR_HSR56
init|=
literal|72
block|,
name|H_SPR_HSR57
init|=
literal|73
block|,
name|H_SPR_HSR58
init|=
literal|74
block|,
name|H_SPR_HSR59
init|=
literal|75
block|,
name|H_SPR_HSR60
init|=
literal|76
block|,
name|H_SPR_HSR61
init|=
literal|77
block|,
name|H_SPR_HSR62
init|=
literal|78
block|,
name|H_SPR_HSR63
init|=
literal|79
block|,
name|H_SPR_CCR
init|=
literal|256
block|,
name|H_SPR_CCCR
init|=
literal|263
block|,
name|H_SPR_LR
init|=
literal|272
block|,
name|H_SPR_LCR
init|=
literal|273
block|,
name|H_SPR_IACC0H
init|=
literal|280
block|,
name|H_SPR_IACC0L
init|=
literal|281
block|,
name|H_SPR_ISR
init|=
literal|288
block|,
name|H_SPR_NEEAR0
init|=
literal|352
block|,
name|H_SPR_NEEAR1
init|=
literal|353
block|,
name|H_SPR_NEEAR2
init|=
literal|354
block|,
name|H_SPR_NEEAR3
init|=
literal|355
block|,
name|H_SPR_NEEAR4
init|=
literal|356
block|,
name|H_SPR_NEEAR5
init|=
literal|357
block|,
name|H_SPR_NEEAR6
init|=
literal|358
block|,
name|H_SPR_NEEAR7
init|=
literal|359
block|,
name|H_SPR_NEEAR8
init|=
literal|360
block|,
name|H_SPR_NEEAR9
init|=
literal|361
block|,
name|H_SPR_NEEAR10
init|=
literal|362
block|,
name|H_SPR_NEEAR11
init|=
literal|363
block|,
name|H_SPR_NEEAR12
init|=
literal|364
block|,
name|H_SPR_NEEAR13
init|=
literal|365
block|,
name|H_SPR_NEEAR14
init|=
literal|366
block|,
name|H_SPR_NEEAR15
init|=
literal|367
block|,
name|H_SPR_NEEAR16
init|=
literal|368
block|,
name|H_SPR_NEEAR17
init|=
literal|369
block|,
name|H_SPR_NEEAR18
init|=
literal|370
block|,
name|H_SPR_NEEAR19
init|=
literal|371
block|,
name|H_SPR_NEEAR20
init|=
literal|372
block|,
name|H_SPR_NEEAR21
init|=
literal|373
block|,
name|H_SPR_NEEAR22
init|=
literal|374
block|,
name|H_SPR_NEEAR23
init|=
literal|375
block|,
name|H_SPR_NEEAR24
init|=
literal|376
block|,
name|H_SPR_NEEAR25
init|=
literal|377
block|,
name|H_SPR_NEEAR26
init|=
literal|378
block|,
name|H_SPR_NEEAR27
init|=
literal|379
block|,
name|H_SPR_NEEAR28
init|=
literal|380
block|,
name|H_SPR_NEEAR29
init|=
literal|381
block|,
name|H_SPR_NEEAR30
init|=
literal|382
block|,
name|H_SPR_NEEAR31
init|=
literal|383
block|,
name|H_SPR_NESR0
init|=
literal|384
block|,
name|H_SPR_NESR1
init|=
literal|385
block|,
name|H_SPR_NESR2
init|=
literal|386
block|,
name|H_SPR_NESR3
init|=
literal|387
block|,
name|H_SPR_NESR4
init|=
literal|388
block|,
name|H_SPR_NESR5
init|=
literal|389
block|,
name|H_SPR_NESR6
init|=
literal|390
block|,
name|H_SPR_NESR7
init|=
literal|391
block|,
name|H_SPR_NESR8
init|=
literal|392
block|,
name|H_SPR_NESR9
init|=
literal|393
block|,
name|H_SPR_NESR10
init|=
literal|394
block|,
name|H_SPR_NESR11
init|=
literal|395
block|,
name|H_SPR_NESR12
init|=
literal|396
block|,
name|H_SPR_NESR13
init|=
literal|397
block|,
name|H_SPR_NESR14
init|=
literal|398
block|,
name|H_SPR_NESR15
init|=
literal|399
block|,
name|H_SPR_NESR16
init|=
literal|400
block|,
name|H_SPR_NESR17
init|=
literal|401
block|,
name|H_SPR_NESR18
init|=
literal|402
block|,
name|H_SPR_NESR19
init|=
literal|403
block|,
name|H_SPR_NESR20
init|=
literal|404
block|,
name|H_SPR_NESR21
init|=
literal|405
block|,
name|H_SPR_NESR22
init|=
literal|406
block|,
name|H_SPR_NESR23
init|=
literal|407
block|,
name|H_SPR_NESR24
init|=
literal|408
block|,
name|H_SPR_NESR25
init|=
literal|409
block|,
name|H_SPR_NESR26
init|=
literal|410
block|,
name|H_SPR_NESR27
init|=
literal|411
block|,
name|H_SPR_NESR28
init|=
literal|412
block|,
name|H_SPR_NESR29
init|=
literal|413
block|,
name|H_SPR_NESR30
init|=
literal|414
block|,
name|H_SPR_NESR31
init|=
literal|415
block|,
name|H_SPR_NECR
init|=
literal|416
block|,
name|H_SPR_GNER0
init|=
literal|432
block|,
name|H_SPR_GNER1
init|=
literal|433
block|,
name|H_SPR_FNER0
init|=
literal|434
block|,
name|H_SPR_FNER1
init|=
literal|435
block|,
name|H_SPR_EPCR0
init|=
literal|512
block|,
name|H_SPR_EPCR1
init|=
literal|513
block|,
name|H_SPR_EPCR2
init|=
literal|514
block|,
name|H_SPR_EPCR3
init|=
literal|515
block|,
name|H_SPR_EPCR4
init|=
literal|516
block|,
name|H_SPR_EPCR5
init|=
literal|517
block|,
name|H_SPR_EPCR6
init|=
literal|518
block|,
name|H_SPR_EPCR7
init|=
literal|519
block|,
name|H_SPR_EPCR8
init|=
literal|520
block|,
name|H_SPR_EPCR9
init|=
literal|521
block|,
name|H_SPR_EPCR10
init|=
literal|522
block|,
name|H_SPR_EPCR11
init|=
literal|523
block|,
name|H_SPR_EPCR12
init|=
literal|524
block|,
name|H_SPR_EPCR13
init|=
literal|525
block|,
name|H_SPR_EPCR14
init|=
literal|526
block|,
name|H_SPR_EPCR15
init|=
literal|527
block|,
name|H_SPR_EPCR16
init|=
literal|528
block|,
name|H_SPR_EPCR17
init|=
literal|529
block|,
name|H_SPR_EPCR18
init|=
literal|530
block|,
name|H_SPR_EPCR19
init|=
literal|531
block|,
name|H_SPR_EPCR20
init|=
literal|532
block|,
name|H_SPR_EPCR21
init|=
literal|533
block|,
name|H_SPR_EPCR22
init|=
literal|534
block|,
name|H_SPR_EPCR23
init|=
literal|535
block|,
name|H_SPR_EPCR24
init|=
literal|536
block|,
name|H_SPR_EPCR25
init|=
literal|537
block|,
name|H_SPR_EPCR26
init|=
literal|538
block|,
name|H_SPR_EPCR27
init|=
literal|539
block|,
name|H_SPR_EPCR28
init|=
literal|540
block|,
name|H_SPR_EPCR29
init|=
literal|541
block|,
name|H_SPR_EPCR30
init|=
literal|542
block|,
name|H_SPR_EPCR31
init|=
literal|543
block|,
name|H_SPR_EPCR32
init|=
literal|544
block|,
name|H_SPR_EPCR33
init|=
literal|545
block|,
name|H_SPR_EPCR34
init|=
literal|546
block|,
name|H_SPR_EPCR35
init|=
literal|547
block|,
name|H_SPR_EPCR36
init|=
literal|548
block|,
name|H_SPR_EPCR37
init|=
literal|549
block|,
name|H_SPR_EPCR38
init|=
literal|550
block|,
name|H_SPR_EPCR39
init|=
literal|551
block|,
name|H_SPR_EPCR40
init|=
literal|552
block|,
name|H_SPR_EPCR41
init|=
literal|553
block|,
name|H_SPR_EPCR42
init|=
literal|554
block|,
name|H_SPR_EPCR43
init|=
literal|555
block|,
name|H_SPR_EPCR44
init|=
literal|556
block|,
name|H_SPR_EPCR45
init|=
literal|557
block|,
name|H_SPR_EPCR46
init|=
literal|558
block|,
name|H_SPR_EPCR47
init|=
literal|559
block|,
name|H_SPR_EPCR48
init|=
literal|560
block|,
name|H_SPR_EPCR49
init|=
literal|561
block|,
name|H_SPR_EPCR50
init|=
literal|562
block|,
name|H_SPR_EPCR51
init|=
literal|563
block|,
name|H_SPR_EPCR52
init|=
literal|564
block|,
name|H_SPR_EPCR53
init|=
literal|565
block|,
name|H_SPR_EPCR54
init|=
literal|566
block|,
name|H_SPR_EPCR55
init|=
literal|567
block|,
name|H_SPR_EPCR56
init|=
literal|568
block|,
name|H_SPR_EPCR57
init|=
literal|569
block|,
name|H_SPR_EPCR58
init|=
literal|570
block|,
name|H_SPR_EPCR59
init|=
literal|571
block|,
name|H_SPR_EPCR60
init|=
literal|572
block|,
name|H_SPR_EPCR61
init|=
literal|573
block|,
name|H_SPR_EPCR62
init|=
literal|574
block|,
name|H_SPR_EPCR63
init|=
literal|575
block|,
name|H_SPR_ESR0
init|=
literal|576
block|,
name|H_SPR_ESR1
init|=
literal|577
block|,
name|H_SPR_ESR2
init|=
literal|578
block|,
name|H_SPR_ESR3
init|=
literal|579
block|,
name|H_SPR_ESR4
init|=
literal|580
block|,
name|H_SPR_ESR5
init|=
literal|581
block|,
name|H_SPR_ESR6
init|=
literal|582
block|,
name|H_SPR_ESR7
init|=
literal|583
block|,
name|H_SPR_ESR8
init|=
literal|584
block|,
name|H_SPR_ESR9
init|=
literal|585
block|,
name|H_SPR_ESR10
init|=
literal|586
block|,
name|H_SPR_ESR11
init|=
literal|587
block|,
name|H_SPR_ESR12
init|=
literal|588
block|,
name|H_SPR_ESR13
init|=
literal|589
block|,
name|H_SPR_ESR14
init|=
literal|590
block|,
name|H_SPR_ESR15
init|=
literal|591
block|,
name|H_SPR_ESR16
init|=
literal|592
block|,
name|H_SPR_ESR17
init|=
literal|593
block|,
name|H_SPR_ESR18
init|=
literal|594
block|,
name|H_SPR_ESR19
init|=
literal|595
block|,
name|H_SPR_ESR20
init|=
literal|596
block|,
name|H_SPR_ESR21
init|=
literal|597
block|,
name|H_SPR_ESR22
init|=
literal|598
block|,
name|H_SPR_ESR23
init|=
literal|599
block|,
name|H_SPR_ESR24
init|=
literal|600
block|,
name|H_SPR_ESR25
init|=
literal|601
block|,
name|H_SPR_ESR26
init|=
literal|602
block|,
name|H_SPR_ESR27
init|=
literal|603
block|,
name|H_SPR_ESR28
init|=
literal|604
block|,
name|H_SPR_ESR29
init|=
literal|605
block|,
name|H_SPR_ESR30
init|=
literal|606
block|,
name|H_SPR_ESR31
init|=
literal|607
block|,
name|H_SPR_ESR32
init|=
literal|608
block|,
name|H_SPR_ESR33
init|=
literal|609
block|,
name|H_SPR_ESR34
init|=
literal|610
block|,
name|H_SPR_ESR35
init|=
literal|611
block|,
name|H_SPR_ESR36
init|=
literal|612
block|,
name|H_SPR_ESR37
init|=
literal|613
block|,
name|H_SPR_ESR38
init|=
literal|614
block|,
name|H_SPR_ESR39
init|=
literal|615
block|,
name|H_SPR_ESR40
init|=
literal|616
block|,
name|H_SPR_ESR41
init|=
literal|617
block|,
name|H_SPR_ESR42
init|=
literal|618
block|,
name|H_SPR_ESR43
init|=
literal|619
block|,
name|H_SPR_ESR44
init|=
literal|620
block|,
name|H_SPR_ESR45
init|=
literal|621
block|,
name|H_SPR_ESR46
init|=
literal|622
block|,
name|H_SPR_ESR47
init|=
literal|623
block|,
name|H_SPR_ESR48
init|=
literal|624
block|,
name|H_SPR_ESR49
init|=
literal|625
block|,
name|H_SPR_ESR50
init|=
literal|626
block|,
name|H_SPR_ESR51
init|=
literal|627
block|,
name|H_SPR_ESR52
init|=
literal|628
block|,
name|H_SPR_ESR53
init|=
literal|629
block|,
name|H_SPR_ESR54
init|=
literal|630
block|,
name|H_SPR_ESR55
init|=
literal|631
block|,
name|H_SPR_ESR56
init|=
literal|632
block|,
name|H_SPR_ESR57
init|=
literal|633
block|,
name|H_SPR_ESR58
init|=
literal|634
block|,
name|H_SPR_ESR59
init|=
literal|635
block|,
name|H_SPR_ESR60
init|=
literal|636
block|,
name|H_SPR_ESR61
init|=
literal|637
block|,
name|H_SPR_ESR62
init|=
literal|638
block|,
name|H_SPR_ESR63
init|=
literal|639
block|,
name|H_SPR_EIR0
init|=
literal|640
block|,
name|H_SPR_EIR1
init|=
literal|641
block|,
name|H_SPR_EIR2
init|=
literal|642
block|,
name|H_SPR_EIR3
init|=
literal|643
block|,
name|H_SPR_EIR4
init|=
literal|644
block|,
name|H_SPR_EIR5
init|=
literal|645
block|,
name|H_SPR_EIR6
init|=
literal|646
block|,
name|H_SPR_EIR7
init|=
literal|647
block|,
name|H_SPR_EIR8
init|=
literal|648
block|,
name|H_SPR_EIR9
init|=
literal|649
block|,
name|H_SPR_EIR10
init|=
literal|650
block|,
name|H_SPR_EIR11
init|=
literal|651
block|,
name|H_SPR_EIR12
init|=
literal|652
block|,
name|H_SPR_EIR13
init|=
literal|653
block|,
name|H_SPR_EIR14
init|=
literal|654
block|,
name|H_SPR_EIR15
init|=
literal|655
block|,
name|H_SPR_EIR16
init|=
literal|656
block|,
name|H_SPR_EIR17
init|=
literal|657
block|,
name|H_SPR_EIR18
init|=
literal|658
block|,
name|H_SPR_EIR19
init|=
literal|659
block|,
name|H_SPR_EIR20
init|=
literal|660
block|,
name|H_SPR_EIR21
init|=
literal|661
block|,
name|H_SPR_EIR22
init|=
literal|662
block|,
name|H_SPR_EIR23
init|=
literal|663
block|,
name|H_SPR_EIR24
init|=
literal|664
block|,
name|H_SPR_EIR25
init|=
literal|665
block|,
name|H_SPR_EIR26
init|=
literal|666
block|,
name|H_SPR_EIR27
init|=
literal|667
block|,
name|H_SPR_EIR28
init|=
literal|668
block|,
name|H_SPR_EIR29
init|=
literal|669
block|,
name|H_SPR_EIR30
init|=
literal|670
block|,
name|H_SPR_EIR31
init|=
literal|671
block|,
name|H_SPR_ESFR0
init|=
literal|672
block|,
name|H_SPR_ESFR1
init|=
literal|673
block|,
name|H_SPR_SR0
init|=
literal|768
block|,
name|H_SPR_SR1
init|=
literal|769
block|,
name|H_SPR_SR2
init|=
literal|770
block|,
name|H_SPR_SR3
init|=
literal|771
block|,
name|H_SPR_FSR0
init|=
literal|1024
block|,
name|H_SPR_FSR1
init|=
literal|1025
block|,
name|H_SPR_FSR2
init|=
literal|1026
block|,
name|H_SPR_FSR3
init|=
literal|1027
block|,
name|H_SPR_FSR4
init|=
literal|1028
block|,
name|H_SPR_FSR5
init|=
literal|1029
block|,
name|H_SPR_FSR6
init|=
literal|1030
block|,
name|H_SPR_FSR7
init|=
literal|1031
block|,
name|H_SPR_FSR8
init|=
literal|1032
block|,
name|H_SPR_FSR9
init|=
literal|1033
block|,
name|H_SPR_FSR10
init|=
literal|1034
block|,
name|H_SPR_FSR11
init|=
literal|1035
block|,
name|H_SPR_FSR12
init|=
literal|1036
block|,
name|H_SPR_FSR13
init|=
literal|1037
block|,
name|H_SPR_FSR14
init|=
literal|1038
block|,
name|H_SPR_FSR15
init|=
literal|1039
block|,
name|H_SPR_FSR16
init|=
literal|1040
block|,
name|H_SPR_FSR17
init|=
literal|1041
block|,
name|H_SPR_FSR18
init|=
literal|1042
block|,
name|H_SPR_FSR19
init|=
literal|1043
block|,
name|H_SPR_FSR20
init|=
literal|1044
block|,
name|H_SPR_FSR21
init|=
literal|1045
block|,
name|H_SPR_FSR22
init|=
literal|1046
block|,
name|H_SPR_FSR23
init|=
literal|1047
block|,
name|H_SPR_FSR24
init|=
literal|1048
block|,
name|H_SPR_FSR25
init|=
literal|1049
block|,
name|H_SPR_FSR26
init|=
literal|1050
block|,
name|H_SPR_FSR27
init|=
literal|1051
block|,
name|H_SPR_FSR28
init|=
literal|1052
block|,
name|H_SPR_FSR29
init|=
literal|1053
block|,
name|H_SPR_FSR30
init|=
literal|1054
block|,
name|H_SPR_FSR31
init|=
literal|1055
block|,
name|H_SPR_FSR32
init|=
literal|1056
block|,
name|H_SPR_FSR33
init|=
literal|1057
block|,
name|H_SPR_FSR34
init|=
literal|1058
block|,
name|H_SPR_FSR35
init|=
literal|1059
block|,
name|H_SPR_FSR36
init|=
literal|1060
block|,
name|H_SPR_FSR37
init|=
literal|1061
block|,
name|H_SPR_FSR38
init|=
literal|1062
block|,
name|H_SPR_FSR39
init|=
literal|1063
block|,
name|H_SPR_FSR40
init|=
literal|1064
block|,
name|H_SPR_FSR41
init|=
literal|1065
block|,
name|H_SPR_FSR42
init|=
literal|1066
block|,
name|H_SPR_FSR43
init|=
literal|1067
block|,
name|H_SPR_FSR44
init|=
literal|1068
block|,
name|H_SPR_FSR45
init|=
literal|1069
block|,
name|H_SPR_FSR46
init|=
literal|1070
block|,
name|H_SPR_FSR47
init|=
literal|1071
block|,
name|H_SPR_FSR48
init|=
literal|1072
block|,
name|H_SPR_FSR49
init|=
literal|1073
block|,
name|H_SPR_FSR50
init|=
literal|1074
block|,
name|H_SPR_FSR51
init|=
literal|1075
block|,
name|H_SPR_FSR52
init|=
literal|1076
block|,
name|H_SPR_FSR53
init|=
literal|1077
block|,
name|H_SPR_FSR54
init|=
literal|1078
block|,
name|H_SPR_FSR55
init|=
literal|1079
block|,
name|H_SPR_FSR56
init|=
literal|1080
block|,
name|H_SPR_FSR57
init|=
literal|1081
block|,
name|H_SPR_FSR58
init|=
literal|1082
block|,
name|H_SPR_FSR59
init|=
literal|1083
block|,
name|H_SPR_FSR60
init|=
literal|1084
block|,
name|H_SPR_FSR61
init|=
literal|1085
block|,
name|H_SPR_FSR62
init|=
literal|1086
block|,
name|H_SPR_FSR63
init|=
literal|1087
block|,
name|H_SPR_FQOP0
init|=
literal|1088
block|,
name|H_SPR_FQOP1
init|=
literal|1090
block|,
name|H_SPR_FQOP2
init|=
literal|1092
block|,
name|H_SPR_FQOP3
init|=
literal|1094
block|,
name|H_SPR_FQOP4
init|=
literal|1096
block|,
name|H_SPR_FQOP5
init|=
literal|1098
block|,
name|H_SPR_FQOP6
init|=
literal|1100
block|,
name|H_SPR_FQOP7
init|=
literal|1102
block|,
name|H_SPR_FQOP8
init|=
literal|1104
block|,
name|H_SPR_FQOP9
init|=
literal|1106
block|,
name|H_SPR_FQOP10
init|=
literal|1108
block|,
name|H_SPR_FQOP11
init|=
literal|1110
block|,
name|H_SPR_FQOP12
init|=
literal|1112
block|,
name|H_SPR_FQOP13
init|=
literal|1114
block|,
name|H_SPR_FQOP14
init|=
literal|1116
block|,
name|H_SPR_FQOP15
init|=
literal|1118
block|,
name|H_SPR_FQOP16
init|=
literal|1120
block|,
name|H_SPR_FQOP17
init|=
literal|1122
block|,
name|H_SPR_FQOP18
init|=
literal|1124
block|,
name|H_SPR_FQOP19
init|=
literal|1126
block|,
name|H_SPR_FQOP20
init|=
literal|1128
block|,
name|H_SPR_FQOP21
init|=
literal|1130
block|,
name|H_SPR_FQOP22
init|=
literal|1132
block|,
name|H_SPR_FQOP23
init|=
literal|1134
block|,
name|H_SPR_FQOP24
init|=
literal|1136
block|,
name|H_SPR_FQOP25
init|=
literal|1138
block|,
name|H_SPR_FQOP26
init|=
literal|1140
block|,
name|H_SPR_FQOP27
init|=
literal|1142
block|,
name|H_SPR_FQOP28
init|=
literal|1144
block|,
name|H_SPR_FQOP29
init|=
literal|1146
block|,
name|H_SPR_FQOP30
init|=
literal|1148
block|,
name|H_SPR_FQOP31
init|=
literal|1150
block|,
name|H_SPR_FQST0
init|=
literal|1089
block|,
name|H_SPR_FQST1
init|=
literal|1091
block|,
name|H_SPR_FQST2
init|=
literal|1093
block|,
name|H_SPR_FQST3
init|=
literal|1095
block|,
name|H_SPR_FQST4
init|=
literal|1097
block|,
name|H_SPR_FQST5
init|=
literal|1099
block|,
name|H_SPR_FQST6
init|=
literal|1101
block|,
name|H_SPR_FQST7
init|=
literal|1103
block|,
name|H_SPR_FQST8
init|=
literal|1105
block|,
name|H_SPR_FQST9
init|=
literal|1107
block|,
name|H_SPR_FQST10
init|=
literal|1109
block|,
name|H_SPR_FQST11
init|=
literal|1111
block|,
name|H_SPR_FQST12
init|=
literal|1113
block|,
name|H_SPR_FQST13
init|=
literal|1115
block|,
name|H_SPR_FQST14
init|=
literal|1117
block|,
name|H_SPR_FQST15
init|=
literal|1119
block|,
name|H_SPR_FQST16
init|=
literal|1121
block|,
name|H_SPR_FQST17
init|=
literal|1123
block|,
name|H_SPR_FQST18
init|=
literal|1125
block|,
name|H_SPR_FQST19
init|=
literal|1127
block|,
name|H_SPR_FQST20
init|=
literal|1129
block|,
name|H_SPR_FQST21
init|=
literal|1131
block|,
name|H_SPR_FQST22
init|=
literal|1133
block|,
name|H_SPR_FQST23
init|=
literal|1135
block|,
name|H_SPR_FQST24
init|=
literal|1137
block|,
name|H_SPR_FQST25
init|=
literal|1139
block|,
name|H_SPR_FQST26
init|=
literal|1141
block|,
name|H_SPR_FQST27
init|=
literal|1143
block|,
name|H_SPR_FQST28
init|=
literal|1145
block|,
name|H_SPR_FQST29
init|=
literal|1147
block|,
name|H_SPR_FQST30
init|=
literal|1149
block|,
name|H_SPR_FQST31
init|=
literal|1151
block|,
name|H_SPR_MCILR0
init|=
literal|1272
block|,
name|H_SPR_MCILR1
init|=
literal|1273
block|,
name|H_SPR_MSR0
init|=
literal|1280
block|,
name|H_SPR_MSR1
init|=
literal|1281
block|,
name|H_SPR_MSR2
init|=
literal|1282
block|,
name|H_SPR_MSR3
init|=
literal|1283
block|,
name|H_SPR_MSR4
init|=
literal|1284
block|,
name|H_SPR_MSR5
init|=
literal|1285
block|,
name|H_SPR_MSR6
init|=
literal|1286
block|,
name|H_SPR_MSR7
init|=
literal|1287
block|,
name|H_SPR_MSR8
init|=
literal|1288
block|,
name|H_SPR_MSR9
init|=
literal|1289
block|,
name|H_SPR_MSR10
init|=
literal|1290
block|,
name|H_SPR_MSR11
init|=
literal|1291
block|,
name|H_SPR_MSR12
init|=
literal|1292
block|,
name|H_SPR_MSR13
init|=
literal|1293
block|,
name|H_SPR_MSR14
init|=
literal|1294
block|,
name|H_SPR_MSR15
init|=
literal|1295
block|,
name|H_SPR_MSR16
init|=
literal|1296
block|,
name|H_SPR_MSR17
init|=
literal|1297
block|,
name|H_SPR_MSR18
init|=
literal|1298
block|,
name|H_SPR_MSR19
init|=
literal|1299
block|,
name|H_SPR_MSR20
init|=
literal|1300
block|,
name|H_SPR_MSR21
init|=
literal|1301
block|,
name|H_SPR_MSR22
init|=
literal|1302
block|,
name|H_SPR_MSR23
init|=
literal|1303
block|,
name|H_SPR_MSR24
init|=
literal|1304
block|,
name|H_SPR_MSR25
init|=
literal|1305
block|,
name|H_SPR_MSR26
init|=
literal|1306
block|,
name|H_SPR_MSR27
init|=
literal|1307
block|,
name|H_SPR_MSR28
init|=
literal|1308
block|,
name|H_SPR_MSR29
init|=
literal|1309
block|,
name|H_SPR_MSR30
init|=
literal|1310
block|,
name|H_SPR_MSR31
init|=
literal|1311
block|,
name|H_SPR_MSR32
init|=
literal|1312
block|,
name|H_SPR_MSR33
init|=
literal|1313
block|,
name|H_SPR_MSR34
init|=
literal|1314
block|,
name|H_SPR_MSR35
init|=
literal|1315
block|,
name|H_SPR_MSR36
init|=
literal|1316
block|,
name|H_SPR_MSR37
init|=
literal|1317
block|,
name|H_SPR_MSR38
init|=
literal|1318
block|,
name|H_SPR_MSR39
init|=
literal|1319
block|,
name|H_SPR_MSR40
init|=
literal|1320
block|,
name|H_SPR_MSR41
init|=
literal|1321
block|,
name|H_SPR_MSR42
init|=
literal|1322
block|,
name|H_SPR_MSR43
init|=
literal|1323
block|,
name|H_SPR_MSR44
init|=
literal|1324
block|,
name|H_SPR_MSR45
init|=
literal|1325
block|,
name|H_SPR_MSR46
init|=
literal|1326
block|,
name|H_SPR_MSR47
init|=
literal|1327
block|,
name|H_SPR_MSR48
init|=
literal|1328
block|,
name|H_SPR_MSR49
init|=
literal|1329
block|,
name|H_SPR_MSR50
init|=
literal|1330
block|,
name|H_SPR_MSR51
init|=
literal|1331
block|,
name|H_SPR_MSR52
init|=
literal|1332
block|,
name|H_SPR_MSR53
init|=
literal|1333
block|,
name|H_SPR_MSR54
init|=
literal|1334
block|,
name|H_SPR_MSR55
init|=
literal|1335
block|,
name|H_SPR_MSR56
init|=
literal|1336
block|,
name|H_SPR_MSR57
init|=
literal|1337
block|,
name|H_SPR_MSR58
init|=
literal|1338
block|,
name|H_SPR_MSR59
init|=
literal|1339
block|,
name|H_SPR_MSR60
init|=
literal|1340
block|,
name|H_SPR_MSR61
init|=
literal|1341
block|,
name|H_SPR_MSR62
init|=
literal|1342
block|,
name|H_SPR_MSR63
init|=
literal|1343
block|,
name|H_SPR_MQOP0
init|=
literal|1344
block|,
name|H_SPR_MQOP1
init|=
literal|1346
block|,
name|H_SPR_MQOP2
init|=
literal|1348
block|,
name|H_SPR_MQOP3
init|=
literal|1350
block|,
name|H_SPR_MQOP4
init|=
literal|1352
block|,
name|H_SPR_MQOP5
init|=
literal|1354
block|,
name|H_SPR_MQOP6
init|=
literal|1356
block|,
name|H_SPR_MQOP7
init|=
literal|1358
block|,
name|H_SPR_MQOP8
init|=
literal|1360
block|,
name|H_SPR_MQOP9
init|=
literal|1362
block|,
name|H_SPR_MQOP10
init|=
literal|1364
block|,
name|H_SPR_MQOP11
init|=
literal|1366
block|,
name|H_SPR_MQOP12
init|=
literal|1368
block|,
name|H_SPR_MQOP13
init|=
literal|1370
block|,
name|H_SPR_MQOP14
init|=
literal|1372
block|,
name|H_SPR_MQOP15
init|=
literal|1374
block|,
name|H_SPR_MQOP16
init|=
literal|1376
block|,
name|H_SPR_MQOP17
init|=
literal|1378
block|,
name|H_SPR_MQOP18
init|=
literal|1380
block|,
name|H_SPR_MQOP19
init|=
literal|1382
block|,
name|H_SPR_MQOP20
init|=
literal|1384
block|,
name|H_SPR_MQOP21
init|=
literal|1386
block|,
name|H_SPR_MQOP22
init|=
literal|1388
block|,
name|H_SPR_MQOP23
init|=
literal|1390
block|,
name|H_SPR_MQOP24
init|=
literal|1392
block|,
name|H_SPR_MQOP25
init|=
literal|1394
block|,
name|H_SPR_MQOP26
init|=
literal|1396
block|,
name|H_SPR_MQOP27
init|=
literal|1398
block|,
name|H_SPR_MQOP28
init|=
literal|1400
block|,
name|H_SPR_MQOP29
init|=
literal|1402
block|,
name|H_SPR_MQOP30
init|=
literal|1404
block|,
name|H_SPR_MQOP31
init|=
literal|1406
block|,
name|H_SPR_MQST0
init|=
literal|1345
block|,
name|H_SPR_MQST1
init|=
literal|1347
block|,
name|H_SPR_MQST2
init|=
literal|1349
block|,
name|H_SPR_MQST3
init|=
literal|1351
block|,
name|H_SPR_MQST4
init|=
literal|1353
block|,
name|H_SPR_MQST5
init|=
literal|1355
block|,
name|H_SPR_MQST6
init|=
literal|1357
block|,
name|H_SPR_MQST7
init|=
literal|1359
block|,
name|H_SPR_MQST8
init|=
literal|1361
block|,
name|H_SPR_MQST9
init|=
literal|1363
block|,
name|H_SPR_MQST10
init|=
literal|1365
block|,
name|H_SPR_MQST11
init|=
literal|1367
block|,
name|H_SPR_MQST12
init|=
literal|1369
block|,
name|H_SPR_MQST13
init|=
literal|1371
block|,
name|H_SPR_MQST14
init|=
literal|1373
block|,
name|H_SPR_MQST15
init|=
literal|1375
block|,
name|H_SPR_MQST16
init|=
literal|1377
block|,
name|H_SPR_MQST17
init|=
literal|1379
block|,
name|H_SPR_MQST18
init|=
literal|1381
block|,
name|H_SPR_MQST19
init|=
literal|1383
block|,
name|H_SPR_MQST20
init|=
literal|1385
block|,
name|H_SPR_MQST21
init|=
literal|1387
block|,
name|H_SPR_MQST22
init|=
literal|1389
block|,
name|H_SPR_MQST23
init|=
literal|1391
block|,
name|H_SPR_MQST24
init|=
literal|1393
block|,
name|H_SPR_MQST25
init|=
literal|1395
block|,
name|H_SPR_MQST26
init|=
literal|1397
block|,
name|H_SPR_MQST27
init|=
literal|1399
block|,
name|H_SPR_MQST28
init|=
literal|1401
block|,
name|H_SPR_MQST29
init|=
literal|1403
block|,
name|H_SPR_MQST30
init|=
literal|1405
block|,
name|H_SPR_MQST31
init|=
literal|1407
block|,
name|H_SPR_EAR0
init|=
literal|1536
block|,
name|H_SPR_EAR1
init|=
literal|1537
block|,
name|H_SPR_EAR2
init|=
literal|1538
block|,
name|H_SPR_EAR3
init|=
literal|1539
block|,
name|H_SPR_EAR4
init|=
literal|1540
block|,
name|H_SPR_EAR5
init|=
literal|1541
block|,
name|H_SPR_EAR6
init|=
literal|1542
block|,
name|H_SPR_EAR7
init|=
literal|1543
block|,
name|H_SPR_EAR8
init|=
literal|1544
block|,
name|H_SPR_EAR9
init|=
literal|1545
block|,
name|H_SPR_EAR10
init|=
literal|1546
block|,
name|H_SPR_EAR11
init|=
literal|1547
block|,
name|H_SPR_EAR12
init|=
literal|1548
block|,
name|H_SPR_EAR13
init|=
literal|1549
block|,
name|H_SPR_EAR14
init|=
literal|1550
block|,
name|H_SPR_EAR15
init|=
literal|1551
block|,
name|H_SPR_EAR16
init|=
literal|1552
block|,
name|H_SPR_EAR17
init|=
literal|1553
block|,
name|H_SPR_EAR18
init|=
literal|1554
block|,
name|H_SPR_EAR19
init|=
literal|1555
block|,
name|H_SPR_EAR20
init|=
literal|1556
block|,
name|H_SPR_EAR21
init|=
literal|1557
block|,
name|H_SPR_EAR22
init|=
literal|1558
block|,
name|H_SPR_EAR23
init|=
literal|1559
block|,
name|H_SPR_EAR24
init|=
literal|1560
block|,
name|H_SPR_EAR25
init|=
literal|1561
block|,
name|H_SPR_EAR26
init|=
literal|1562
block|,
name|H_SPR_EAR27
init|=
literal|1563
block|,
name|H_SPR_EAR28
init|=
literal|1564
block|,
name|H_SPR_EAR29
init|=
literal|1565
block|,
name|H_SPR_EAR30
init|=
literal|1566
block|,
name|H_SPR_EAR31
init|=
literal|1567
block|,
name|H_SPR_EAR32
init|=
literal|1568
block|,
name|H_SPR_EAR33
init|=
literal|1569
block|,
name|H_SPR_EAR34
init|=
literal|1570
block|,
name|H_SPR_EAR35
init|=
literal|1571
block|,
name|H_SPR_EAR36
init|=
literal|1572
block|,
name|H_SPR_EAR37
init|=
literal|1573
block|,
name|H_SPR_EAR38
init|=
literal|1574
block|,
name|H_SPR_EAR39
init|=
literal|1575
block|,
name|H_SPR_EAR40
init|=
literal|1576
block|,
name|H_SPR_EAR41
init|=
literal|1577
block|,
name|H_SPR_EAR42
init|=
literal|1578
block|,
name|H_SPR_EAR43
init|=
literal|1579
block|,
name|H_SPR_EAR44
init|=
literal|1580
block|,
name|H_SPR_EAR45
init|=
literal|1581
block|,
name|H_SPR_EAR46
init|=
literal|1582
block|,
name|H_SPR_EAR47
init|=
literal|1583
block|,
name|H_SPR_EAR48
init|=
literal|1584
block|,
name|H_SPR_EAR49
init|=
literal|1585
block|,
name|H_SPR_EAR50
init|=
literal|1586
block|,
name|H_SPR_EAR51
init|=
literal|1587
block|,
name|H_SPR_EAR52
init|=
literal|1588
block|,
name|H_SPR_EAR53
init|=
literal|1589
block|,
name|H_SPR_EAR54
init|=
literal|1590
block|,
name|H_SPR_EAR55
init|=
literal|1591
block|,
name|H_SPR_EAR56
init|=
literal|1592
block|,
name|H_SPR_EAR57
init|=
literal|1593
block|,
name|H_SPR_EAR58
init|=
literal|1594
block|,
name|H_SPR_EAR59
init|=
literal|1595
block|,
name|H_SPR_EAR60
init|=
literal|1596
block|,
name|H_SPR_EAR61
init|=
literal|1597
block|,
name|H_SPR_EAR62
init|=
literal|1598
block|,
name|H_SPR_EAR63
init|=
literal|1599
block|,
name|H_SPR_EDR0
init|=
literal|1600
block|,
name|H_SPR_EDR1
init|=
literal|1601
block|,
name|H_SPR_EDR2
init|=
literal|1602
block|,
name|H_SPR_EDR3
init|=
literal|1603
block|,
name|H_SPR_EDR4
init|=
literal|1604
block|,
name|H_SPR_EDR5
init|=
literal|1605
block|,
name|H_SPR_EDR6
init|=
literal|1606
block|,
name|H_SPR_EDR7
init|=
literal|1607
block|,
name|H_SPR_EDR8
init|=
literal|1608
block|,
name|H_SPR_EDR9
init|=
literal|1609
block|,
name|H_SPR_EDR10
init|=
literal|1610
block|,
name|H_SPR_EDR11
init|=
literal|1611
block|,
name|H_SPR_EDR12
init|=
literal|1612
block|,
name|H_SPR_EDR13
init|=
literal|1613
block|,
name|H_SPR_EDR14
init|=
literal|1614
block|,
name|H_SPR_EDR15
init|=
literal|1615
block|,
name|H_SPR_EDR16
init|=
literal|1616
block|,
name|H_SPR_EDR17
init|=
literal|1617
block|,
name|H_SPR_EDR18
init|=
literal|1618
block|,
name|H_SPR_EDR19
init|=
literal|1619
block|,
name|H_SPR_EDR20
init|=
literal|1620
block|,
name|H_SPR_EDR21
init|=
literal|1621
block|,
name|H_SPR_EDR22
init|=
literal|1622
block|,
name|H_SPR_EDR23
init|=
literal|1623
block|,
name|H_SPR_EDR24
init|=
literal|1624
block|,
name|H_SPR_EDR25
init|=
literal|1625
block|,
name|H_SPR_EDR26
init|=
literal|1626
block|,
name|H_SPR_EDR27
init|=
literal|1627
block|,
name|H_SPR_EDR28
init|=
literal|1628
block|,
name|H_SPR_EDR29
init|=
literal|1629
block|,
name|H_SPR_EDR30
init|=
literal|1630
block|,
name|H_SPR_EDR31
init|=
literal|1631
block|,
name|H_SPR_EDR32
init|=
literal|1632
block|,
name|H_SPR_EDR33
init|=
literal|1636
block|,
name|H_SPR_EDR34
init|=
literal|1634
block|,
name|H_SPR_EDR35
init|=
literal|1635
block|,
name|H_SPR_EDR36
init|=
literal|1636
block|,
name|H_SPR_EDR37
init|=
literal|1637
block|,
name|H_SPR_EDR38
init|=
literal|1638
block|,
name|H_SPR_EDR39
init|=
literal|1639
block|,
name|H_SPR_EDR40
init|=
literal|1640
block|,
name|H_SPR_EDR41
init|=
literal|1641
block|,
name|H_SPR_EDR42
init|=
literal|1642
block|,
name|H_SPR_EDR43
init|=
literal|1643
block|,
name|H_SPR_EDR44
init|=
literal|1644
block|,
name|H_SPR_EDR45
init|=
literal|1645
block|,
name|H_SPR_EDR46
init|=
literal|1646
block|,
name|H_SPR_EDR47
init|=
literal|1647
block|,
name|H_SPR_EDR48
init|=
literal|1648
block|,
name|H_SPR_EDR49
init|=
literal|1649
block|,
name|H_SPR_EDR50
init|=
literal|1650
block|,
name|H_SPR_EDR51
init|=
literal|1651
block|,
name|H_SPR_EDR52
init|=
literal|1652
block|,
name|H_SPR_EDR53
init|=
literal|1653
block|,
name|H_SPR_EDR54
init|=
literal|1654
block|,
name|H_SPR_EDR55
init|=
literal|1655
block|,
name|H_SPR_EDR56
init|=
literal|1656
block|,
name|H_SPR_EDR57
init|=
literal|1657
block|,
name|H_SPR_EDR58
init|=
literal|1658
block|,
name|H_SPR_EDR59
init|=
literal|1659
block|,
name|H_SPR_EDR60
init|=
literal|1660
block|,
name|H_SPR_EDR61
init|=
literal|1661
block|,
name|H_SPR_EDR62
init|=
literal|1662
block|,
name|H_SPR_EDR63
init|=
literal|1663
block|,
name|H_SPR_IAMLR0
init|=
literal|1664
block|,
name|H_SPR_IAMLR1
init|=
literal|1665
block|,
name|H_SPR_IAMLR2
init|=
literal|1666
block|,
name|H_SPR_IAMLR3
init|=
literal|1667
block|,
name|H_SPR_IAMLR4
init|=
literal|1668
block|,
name|H_SPR_IAMLR5
init|=
literal|1669
block|,
name|H_SPR_IAMLR6
init|=
literal|1670
block|,
name|H_SPR_IAMLR7
init|=
literal|1671
block|,
name|H_SPR_IAMLR8
init|=
literal|1672
block|,
name|H_SPR_IAMLR9
init|=
literal|1673
block|,
name|H_SPR_IAMLR10
init|=
literal|1674
block|,
name|H_SPR_IAMLR11
init|=
literal|1675
block|,
name|H_SPR_IAMLR12
init|=
literal|1676
block|,
name|H_SPR_IAMLR13
init|=
literal|1677
block|,
name|H_SPR_IAMLR14
init|=
literal|1678
block|,
name|H_SPR_IAMLR15
init|=
literal|1679
block|,
name|H_SPR_IAMLR16
init|=
literal|1680
block|,
name|H_SPR_IAMLR17
init|=
literal|1681
block|,
name|H_SPR_IAMLR18
init|=
literal|1682
block|,
name|H_SPR_IAMLR19
init|=
literal|1683
block|,
name|H_SPR_IAMLR20
init|=
literal|1684
block|,
name|H_SPR_IAMLR21
init|=
literal|1685
block|,
name|H_SPR_IAMLR22
init|=
literal|1686
block|,
name|H_SPR_IAMLR23
init|=
literal|1687
block|,
name|H_SPR_IAMLR24
init|=
literal|1688
block|,
name|H_SPR_IAMLR25
init|=
literal|1689
block|,
name|H_SPR_IAMLR26
init|=
literal|1690
block|,
name|H_SPR_IAMLR27
init|=
literal|1691
block|,
name|H_SPR_IAMLR28
init|=
literal|1692
block|,
name|H_SPR_IAMLR29
init|=
literal|1693
block|,
name|H_SPR_IAMLR30
init|=
literal|1694
block|,
name|H_SPR_IAMLR31
init|=
literal|1695
block|,
name|H_SPR_IAMLR32
init|=
literal|1696
block|,
name|H_SPR_IAMLR33
init|=
literal|1697
block|,
name|H_SPR_IAMLR34
init|=
literal|1698
block|,
name|H_SPR_IAMLR35
init|=
literal|1699
block|,
name|H_SPR_IAMLR36
init|=
literal|1700
block|,
name|H_SPR_IAMLR37
init|=
literal|1701
block|,
name|H_SPR_IAMLR38
init|=
literal|1702
block|,
name|H_SPR_IAMLR39
init|=
literal|1703
block|,
name|H_SPR_IAMLR40
init|=
literal|1704
block|,
name|H_SPR_IAMLR41
init|=
literal|1705
block|,
name|H_SPR_IAMLR42
init|=
literal|1706
block|,
name|H_SPR_IAMLR43
init|=
literal|1707
block|,
name|H_SPR_IAMLR44
init|=
literal|1708
block|,
name|H_SPR_IAMLR45
init|=
literal|1709
block|,
name|H_SPR_IAMLR46
init|=
literal|1710
block|,
name|H_SPR_IAMLR47
init|=
literal|1711
block|,
name|H_SPR_IAMLR48
init|=
literal|1712
block|,
name|H_SPR_IAMLR49
init|=
literal|1713
block|,
name|H_SPR_IAMLR50
init|=
literal|1714
block|,
name|H_SPR_IAMLR51
init|=
literal|1715
block|,
name|H_SPR_IAMLR52
init|=
literal|1716
block|,
name|H_SPR_IAMLR53
init|=
literal|1717
block|,
name|H_SPR_IAMLR54
init|=
literal|1718
block|,
name|H_SPR_IAMLR55
init|=
literal|1719
block|,
name|H_SPR_IAMLR56
init|=
literal|1720
block|,
name|H_SPR_IAMLR57
init|=
literal|1721
block|,
name|H_SPR_IAMLR58
init|=
literal|1722
block|,
name|H_SPR_IAMLR59
init|=
literal|1723
block|,
name|H_SPR_IAMLR60
init|=
literal|1724
block|,
name|H_SPR_IAMLR61
init|=
literal|1725
block|,
name|H_SPR_IAMLR62
init|=
literal|1726
block|,
name|H_SPR_IAMLR63
init|=
literal|1727
block|,
name|H_SPR_IAMPR0
init|=
literal|1728
block|,
name|H_SPR_IAMPR1
init|=
literal|1729
block|,
name|H_SPR_IAMPR2
init|=
literal|1730
block|,
name|H_SPR_IAMPR3
init|=
literal|1731
block|,
name|H_SPR_IAMPR4
init|=
literal|1732
block|,
name|H_SPR_IAMPR5
init|=
literal|1733
block|,
name|H_SPR_IAMPR6
init|=
literal|1734
block|,
name|H_SPR_IAMPR7
init|=
literal|1735
block|,
name|H_SPR_IAMPR8
init|=
literal|1736
block|,
name|H_SPR_IAMPR9
init|=
literal|1737
block|,
name|H_SPR_IAMPR10
init|=
literal|1738
block|,
name|H_SPR_IAMPR11
init|=
literal|1739
block|,
name|H_SPR_IAMPR12
init|=
literal|1740
block|,
name|H_SPR_IAMPR13
init|=
literal|1741
block|,
name|H_SPR_IAMPR14
init|=
literal|1742
block|,
name|H_SPR_IAMPR15
init|=
literal|1743
block|,
name|H_SPR_IAMPR16
init|=
literal|1744
block|,
name|H_SPR_IAMPR17
init|=
literal|1745
block|,
name|H_SPR_IAMPR18
init|=
literal|1746
block|,
name|H_SPR_IAMPR19
init|=
literal|1747
block|,
name|H_SPR_IAMPR20
init|=
literal|1748
block|,
name|H_SPR_IAMPR21
init|=
literal|1749
block|,
name|H_SPR_IAMPR22
init|=
literal|1750
block|,
name|H_SPR_IAMPR23
init|=
literal|1751
block|,
name|H_SPR_IAMPR24
init|=
literal|1752
block|,
name|H_SPR_IAMPR25
init|=
literal|1753
block|,
name|H_SPR_IAMPR26
init|=
literal|1754
block|,
name|H_SPR_IAMPR27
init|=
literal|1755
block|,
name|H_SPR_IAMPR28
init|=
literal|1756
block|,
name|H_SPR_IAMPR29
init|=
literal|1757
block|,
name|H_SPR_IAMPR30
init|=
literal|1758
block|,
name|H_SPR_IAMPR31
init|=
literal|1759
block|,
name|H_SPR_IAMPR32
init|=
literal|1760
block|,
name|H_SPR_IAMPR33
init|=
literal|1761
block|,
name|H_SPR_IAMPR34
init|=
literal|1762
block|,
name|H_SPR_IAMPR35
init|=
literal|1763
block|,
name|H_SPR_IAMPR36
init|=
literal|1764
block|,
name|H_SPR_IAMPR37
init|=
literal|1765
block|,
name|H_SPR_IAMPR38
init|=
literal|1766
block|,
name|H_SPR_IAMPR39
init|=
literal|1767
block|,
name|H_SPR_IAMPR40
init|=
literal|1768
block|,
name|H_SPR_IAMPR41
init|=
literal|1769
block|,
name|H_SPR_IAMPR42
init|=
literal|1770
block|,
name|H_SPR_IAMPR43
init|=
literal|1771
block|,
name|H_SPR_IAMPR44
init|=
literal|1772
block|,
name|H_SPR_IAMPR45
init|=
literal|1773
block|,
name|H_SPR_IAMPR46
init|=
literal|1774
block|,
name|H_SPR_IAMPR47
init|=
literal|1775
block|,
name|H_SPR_IAMPR48
init|=
literal|1776
block|,
name|H_SPR_IAMPR49
init|=
literal|1777
block|,
name|H_SPR_IAMPR50
init|=
literal|1778
block|,
name|H_SPR_IAMPR51
init|=
literal|1779
block|,
name|H_SPR_IAMPR52
init|=
literal|1780
block|,
name|H_SPR_IAMPR53
init|=
literal|1781
block|,
name|H_SPR_IAMPR54
init|=
literal|1782
block|,
name|H_SPR_IAMPR55
init|=
literal|1783
block|,
name|H_SPR_IAMPR56
init|=
literal|1784
block|,
name|H_SPR_IAMPR57
init|=
literal|1785
block|,
name|H_SPR_IAMPR58
init|=
literal|1786
block|,
name|H_SPR_IAMPR59
init|=
literal|1787
block|,
name|H_SPR_IAMPR60
init|=
literal|1788
block|,
name|H_SPR_IAMPR61
init|=
literal|1789
block|,
name|H_SPR_IAMPR62
init|=
literal|1790
block|,
name|H_SPR_IAMPR63
init|=
literal|1791
block|,
name|H_SPR_DAMLR0
init|=
literal|1792
block|,
name|H_SPR_DAMLR1
init|=
literal|1793
block|,
name|H_SPR_DAMLR2
init|=
literal|1794
block|,
name|H_SPR_DAMLR3
init|=
literal|1795
block|,
name|H_SPR_DAMLR4
init|=
literal|1796
block|,
name|H_SPR_DAMLR5
init|=
literal|1797
block|,
name|H_SPR_DAMLR6
init|=
literal|1798
block|,
name|H_SPR_DAMLR7
init|=
literal|1799
block|,
name|H_SPR_DAMLR8
init|=
literal|1800
block|,
name|H_SPR_DAMLR9
init|=
literal|1801
block|,
name|H_SPR_DAMLR10
init|=
literal|1802
block|,
name|H_SPR_DAMLR11
init|=
literal|1803
block|,
name|H_SPR_DAMLR12
init|=
literal|1804
block|,
name|H_SPR_DAMLR13
init|=
literal|1805
block|,
name|H_SPR_DAMLR14
init|=
literal|1806
block|,
name|H_SPR_DAMLR15
init|=
literal|1807
block|,
name|H_SPR_DAMLR16
init|=
literal|1808
block|,
name|H_SPR_DAMLR17
init|=
literal|1809
block|,
name|H_SPR_DAMLR18
init|=
literal|1810
block|,
name|H_SPR_DAMLR19
init|=
literal|1811
block|,
name|H_SPR_DAMLR20
init|=
literal|1812
block|,
name|H_SPR_DAMLR21
init|=
literal|1813
block|,
name|H_SPR_DAMLR22
init|=
literal|1814
block|,
name|H_SPR_DAMLR23
init|=
literal|1815
block|,
name|H_SPR_DAMLR24
init|=
literal|1816
block|,
name|H_SPR_DAMLR25
init|=
literal|1817
block|,
name|H_SPR_DAMLR26
init|=
literal|1818
block|,
name|H_SPR_DAMLR27
init|=
literal|1819
block|,
name|H_SPR_DAMLR28
init|=
literal|1820
block|,
name|H_SPR_DAMLR29
init|=
literal|1821
block|,
name|H_SPR_DAMLR30
init|=
literal|1822
block|,
name|H_SPR_DAMLR31
init|=
literal|1823
block|,
name|H_SPR_DAMLR32
init|=
literal|1824
block|,
name|H_SPR_DAMLR33
init|=
literal|1825
block|,
name|H_SPR_DAMLR34
init|=
literal|1826
block|,
name|H_SPR_DAMLR35
init|=
literal|1827
block|,
name|H_SPR_DAMLR36
init|=
literal|1828
block|,
name|H_SPR_DAMLR37
init|=
literal|1829
block|,
name|H_SPR_DAMLR38
init|=
literal|1830
block|,
name|H_SPR_DAMLR39
init|=
literal|1831
block|,
name|H_SPR_DAMLR40
init|=
literal|1832
block|,
name|H_SPR_DAMLR41
init|=
literal|1833
block|,
name|H_SPR_DAMLR42
init|=
literal|1834
block|,
name|H_SPR_DAMLR43
init|=
literal|1835
block|,
name|H_SPR_DAMLR44
init|=
literal|1836
block|,
name|H_SPR_DAMLR45
init|=
literal|1837
block|,
name|H_SPR_DAMLR46
init|=
literal|1838
block|,
name|H_SPR_DAMLR47
init|=
literal|1839
block|,
name|H_SPR_DAMLR48
init|=
literal|1840
block|,
name|H_SPR_DAMLR49
init|=
literal|1841
block|,
name|H_SPR_DAMLR50
init|=
literal|1842
block|,
name|H_SPR_DAMLR51
init|=
literal|1843
block|,
name|H_SPR_DAMLR52
init|=
literal|1844
block|,
name|H_SPR_DAMLR53
init|=
literal|1845
block|,
name|H_SPR_DAMLR54
init|=
literal|1846
block|,
name|H_SPR_DAMLR55
init|=
literal|1847
block|,
name|H_SPR_DAMLR56
init|=
literal|1848
block|,
name|H_SPR_DAMLR57
init|=
literal|1849
block|,
name|H_SPR_DAMLR58
init|=
literal|1850
block|,
name|H_SPR_DAMLR59
init|=
literal|1851
block|,
name|H_SPR_DAMLR60
init|=
literal|1852
block|,
name|H_SPR_DAMLR61
init|=
literal|1853
block|,
name|H_SPR_DAMLR62
init|=
literal|1854
block|,
name|H_SPR_DAMLR63
init|=
literal|1855
block|,
name|H_SPR_DAMPR0
init|=
literal|1856
block|,
name|H_SPR_DAMPR1
init|=
literal|1857
block|,
name|H_SPR_DAMPR2
init|=
literal|1858
block|,
name|H_SPR_DAMPR3
init|=
literal|1859
block|,
name|H_SPR_DAMPR4
init|=
literal|1860
block|,
name|H_SPR_DAMPR5
init|=
literal|1861
block|,
name|H_SPR_DAMPR6
init|=
literal|1862
block|,
name|H_SPR_DAMPR7
init|=
literal|1863
block|,
name|H_SPR_DAMPR8
init|=
literal|1864
block|,
name|H_SPR_DAMPR9
init|=
literal|1865
block|,
name|H_SPR_DAMPR10
init|=
literal|1866
block|,
name|H_SPR_DAMPR11
init|=
literal|1867
block|,
name|H_SPR_DAMPR12
init|=
literal|1868
block|,
name|H_SPR_DAMPR13
init|=
literal|1869
block|,
name|H_SPR_DAMPR14
init|=
literal|1870
block|,
name|H_SPR_DAMPR15
init|=
literal|1871
block|,
name|H_SPR_DAMPR16
init|=
literal|1872
block|,
name|H_SPR_DAMPR17
init|=
literal|1873
block|,
name|H_SPR_DAMPR18
init|=
literal|1874
block|,
name|H_SPR_DAMPR19
init|=
literal|1875
block|,
name|H_SPR_DAMPR20
init|=
literal|1876
block|,
name|H_SPR_DAMPR21
init|=
literal|1877
block|,
name|H_SPR_DAMPR22
init|=
literal|1878
block|,
name|H_SPR_DAMPR23
init|=
literal|1879
block|,
name|H_SPR_DAMPR24
init|=
literal|1880
block|,
name|H_SPR_DAMPR25
init|=
literal|1881
block|,
name|H_SPR_DAMPR26
init|=
literal|1882
block|,
name|H_SPR_DAMPR27
init|=
literal|1883
block|,
name|H_SPR_DAMPR28
init|=
literal|1884
block|,
name|H_SPR_DAMPR29
init|=
literal|1885
block|,
name|H_SPR_DAMPR30
init|=
literal|1886
block|,
name|H_SPR_DAMPR31
init|=
literal|1887
block|,
name|H_SPR_DAMPR32
init|=
literal|1888
block|,
name|H_SPR_DAMPR33
init|=
literal|1889
block|,
name|H_SPR_DAMPR34
init|=
literal|1890
block|,
name|H_SPR_DAMPR35
init|=
literal|1891
block|,
name|H_SPR_DAMPR36
init|=
literal|1892
block|,
name|H_SPR_DAMPR37
init|=
literal|1893
block|,
name|H_SPR_DAMPR38
init|=
literal|1894
block|,
name|H_SPR_DAMPR39
init|=
literal|1895
block|,
name|H_SPR_DAMPR40
init|=
literal|1896
block|,
name|H_SPR_DAMPR41
init|=
literal|1897
block|,
name|H_SPR_DAMPR42
init|=
literal|1898
block|,
name|H_SPR_DAMPR43
init|=
literal|1899
block|,
name|H_SPR_DAMPR44
init|=
literal|1900
block|,
name|H_SPR_DAMPR45
init|=
literal|1901
block|,
name|H_SPR_DAMPR46
init|=
literal|1902
block|,
name|H_SPR_DAMPR47
init|=
literal|1903
block|,
name|H_SPR_DAMPR48
init|=
literal|1904
block|,
name|H_SPR_DAMPR49
init|=
literal|1905
block|,
name|H_SPR_DAMPR50
init|=
literal|1906
block|,
name|H_SPR_DAMPR51
init|=
literal|1907
block|,
name|H_SPR_DAMPR52
init|=
literal|1908
block|,
name|H_SPR_DAMPR53
init|=
literal|1909
block|,
name|H_SPR_DAMPR54
init|=
literal|1910
block|,
name|H_SPR_DAMPR55
init|=
literal|1911
block|,
name|H_SPR_DAMPR56
init|=
literal|1912
block|,
name|H_SPR_DAMPR57
init|=
literal|1913
block|,
name|H_SPR_DAMPR58
init|=
literal|1914
block|,
name|H_SPR_DAMPR59
init|=
literal|1915
block|,
name|H_SPR_DAMPR60
init|=
literal|1916
block|,
name|H_SPR_DAMPR61
init|=
literal|1917
block|,
name|H_SPR_DAMPR62
init|=
literal|1918
block|,
name|H_SPR_DAMPR63
init|=
literal|1919
block|,
name|H_SPR_AMCR
init|=
literal|1920
block|,
name|H_SPR_STBAR
init|=
literal|1921
block|,
name|H_SPR_MMCR
init|=
literal|1922
block|,
name|H_SPR_DCR
init|=
literal|2048
block|,
name|H_SPR_BRR
init|=
literal|2049
block|,
name|H_SPR_NMAR
init|=
literal|2050
block|,
name|H_SPR_IBAR0
init|=
literal|2052
block|,
name|H_SPR_IBAR1
init|=
literal|2053
block|,
name|H_SPR_IBAR2
init|=
literal|2054
block|,
name|H_SPR_IBAR3
init|=
literal|2055
block|,
name|H_SPR_DBAR0
init|=
literal|2056
block|,
name|H_SPR_DBAR1
init|=
literal|2057
block|,
name|H_SPR_DBAR2
init|=
literal|2058
block|,
name|H_SPR_DBAR3
init|=
literal|2059
block|,
name|H_SPR_DBDR00
init|=
literal|2060
block|,
name|H_SPR_DBDR01
init|=
literal|2061
block|,
name|H_SPR_DBDR02
init|=
literal|2062
block|,
name|H_SPR_DBDR03
init|=
literal|2063
block|,
name|H_SPR_DBDR10
init|=
literal|2064
block|,
name|H_SPR_DBDR11
init|=
literal|2065
block|,
name|H_SPR_DBDR12
init|=
literal|2066
block|,
name|H_SPR_DBDR13
init|=
literal|2067
block|,
name|H_SPR_DBDR20
init|=
literal|2068
block|,
name|H_SPR_DBDR21
init|=
literal|2069
block|,
name|H_SPR_DBDR22
init|=
literal|2070
block|,
name|H_SPR_DBDR23
init|=
literal|2071
block|,
name|H_SPR_DBDR30
init|=
literal|2072
block|,
name|H_SPR_DBDR31
init|=
literal|2073
block|,
name|H_SPR_DBDR32
init|=
literal|2074
block|,
name|H_SPR_DBDR33
init|=
literal|2075
block|,
name|H_SPR_DBMR00
init|=
literal|2076
block|,
name|H_SPR_DBMR01
init|=
literal|2077
block|,
name|H_SPR_DBMR02
init|=
literal|2078
block|,
name|H_SPR_DBMR03
init|=
literal|2079
block|,
name|H_SPR_DBMR10
init|=
literal|2080
block|,
name|H_SPR_DBMR11
init|=
literal|2081
block|,
name|H_SPR_DBMR12
init|=
literal|2082
block|,
name|H_SPR_DBMR13
init|=
literal|2083
block|,
name|H_SPR_DBMR20
init|=
literal|2084
block|,
name|H_SPR_DBMR21
init|=
literal|2085
block|,
name|H_SPR_DBMR22
init|=
literal|2086
block|,
name|H_SPR_DBMR23
init|=
literal|2087
block|,
name|H_SPR_DBMR30
init|=
literal|2088
block|,
name|H_SPR_DBMR31
init|=
literal|2089
block|,
name|H_SPR_DBMR32
init|=
literal|2090
block|,
name|H_SPR_DBMR33
init|=
literal|2091
block|,
name|H_SPR_CPCFR
init|=
literal|2092
block|,
name|H_SPR_CPCR
init|=
literal|2093
block|,
name|H_SPR_CPSR
init|=
literal|2094
block|,
name|H_SPR_CPESR0
init|=
literal|2096
block|,
name|H_SPR_CPESR1
init|=
literal|2097
block|,
name|H_SPR_CPEMR0
init|=
literal|2098
block|,
name|H_SPR_CPEMR1
init|=
literal|2099
block|,
name|H_SPR_IHSR8
init|=
literal|3848
block|}
name|SPR_NAMES
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for .  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|accg_names
block|{
name|H_ACCG_ACCG0
block|,
name|H_ACCG_ACCG1
block|,
name|H_ACCG_ACCG2
block|,
name|H_ACCG_ACCG3
block|,
name|H_ACCG_ACCG4
block|,
name|H_ACCG_ACCG5
block|,
name|H_ACCG_ACCG6
block|,
name|H_ACCG_ACCG7
block|,
name|H_ACCG_ACCG8
block|,
name|H_ACCG_ACCG9
block|,
name|H_ACCG_ACCG10
block|,
name|H_ACCG_ACCG11
block|,
name|H_ACCG_ACCG12
block|,
name|H_ACCG_ACCG13
block|,
name|H_ACCG_ACCG14
block|,
name|H_ACCG_ACCG15
block|,
name|H_ACCG_ACCG16
block|,
name|H_ACCG_ACCG17
block|,
name|H_ACCG_ACCG18
block|,
name|H_ACCG_ACCG19
block|,
name|H_ACCG_ACCG20
block|,
name|H_ACCG_ACCG21
block|,
name|H_ACCG_ACCG22
block|,
name|H_ACCG_ACCG23
block|,
name|H_ACCG_ACCG24
block|,
name|H_ACCG_ACCG25
block|,
name|H_ACCG_ACCG26
block|,
name|H_ACCG_ACCG27
block|,
name|H_ACCG_ACCG28
block|,
name|H_ACCG_ACCG29
block|,
name|H_ACCG_ACCG30
block|,
name|H_ACCG_ACCG31
block|,
name|H_ACCG_ACCG32
block|,
name|H_ACCG_ACCG33
block|,
name|H_ACCG_ACCG34
block|,
name|H_ACCG_ACCG35
block|,
name|H_ACCG_ACCG36
block|,
name|H_ACCG_ACCG37
block|,
name|H_ACCG_ACCG38
block|,
name|H_ACCG_ACCG39
block|,
name|H_ACCG_ACCG40
block|,
name|H_ACCG_ACCG41
block|,
name|H_ACCG_ACCG42
block|,
name|H_ACCG_ACCG43
block|,
name|H_ACCG_ACCG44
block|,
name|H_ACCG_ACCG45
block|,
name|H_ACCG_ACCG46
block|,
name|H_ACCG_ACCG47
block|,
name|H_ACCG_ACCG48
block|,
name|H_ACCG_ACCG49
block|,
name|H_ACCG_ACCG50
block|,
name|H_ACCG_ACCG51
block|,
name|H_ACCG_ACCG52
block|,
name|H_ACCG_ACCG53
block|,
name|H_ACCG_ACCG54
block|,
name|H_ACCG_ACCG55
block|,
name|H_ACCG_ACCG56
block|,
name|H_ACCG_ACCG57
block|,
name|H_ACCG_ACCG58
block|,
name|H_ACCG_ACCG59
block|,
name|H_ACCG_ACCG60
block|,
name|H_ACCG_ACCG61
block|,
name|H_ACCG_ACCG62
block|,
name|H_ACCG_ACCG63
block|}
name|ACCG_NAMES
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for .  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|acc_names
block|{
name|H_ACC40_ACC0
block|,
name|H_ACC40_ACC1
block|,
name|H_ACC40_ACC2
block|,
name|H_ACC40_ACC3
block|,
name|H_ACC40_ACC4
block|,
name|H_ACC40_ACC5
block|,
name|H_ACC40_ACC6
block|,
name|H_ACC40_ACC7
block|,
name|H_ACC40_ACC8
block|,
name|H_ACC40_ACC9
block|,
name|H_ACC40_ACC10
block|,
name|H_ACC40_ACC11
block|,
name|H_ACC40_ACC12
block|,
name|H_ACC40_ACC13
block|,
name|H_ACC40_ACC14
block|,
name|H_ACC40_ACC15
block|,
name|H_ACC40_ACC16
block|,
name|H_ACC40_ACC17
block|,
name|H_ACC40_ACC18
block|,
name|H_ACC40_ACC19
block|,
name|H_ACC40_ACC20
block|,
name|H_ACC40_ACC21
block|,
name|H_ACC40_ACC22
block|,
name|H_ACC40_ACC23
block|,
name|H_ACC40_ACC24
block|,
name|H_ACC40_ACC25
block|,
name|H_ACC40_ACC26
block|,
name|H_ACC40_ACC27
block|,
name|H_ACC40_ACC28
block|,
name|H_ACC40_ACC29
block|,
name|H_ACC40_ACC30
block|,
name|H_ACC40_ACC31
block|,
name|H_ACC40_ACC32
block|,
name|H_ACC40_ACC33
block|,
name|H_ACC40_ACC34
block|,
name|H_ACC40_ACC35
block|,
name|H_ACC40_ACC36
block|,
name|H_ACC40_ACC37
block|,
name|H_ACC40_ACC38
block|,
name|H_ACC40_ACC39
block|,
name|H_ACC40_ACC40
block|,
name|H_ACC40_ACC41
block|,
name|H_ACC40_ACC42
block|,
name|H_ACC40_ACC43
block|,
name|H_ACC40_ACC44
block|,
name|H_ACC40_ACC45
block|,
name|H_ACC40_ACC46
block|,
name|H_ACC40_ACC47
block|,
name|H_ACC40_ACC48
block|,
name|H_ACC40_ACC49
block|,
name|H_ACC40_ACC50
block|,
name|H_ACC40_ACC51
block|,
name|H_ACC40_ACC52
block|,
name|H_ACC40_ACC53
block|,
name|H_ACC40_ACC54
block|,
name|H_ACC40_ACC55
block|,
name|H_ACC40_ACC56
block|,
name|H_ACC40_ACC57
block|,
name|H_ACC40_ACC58
block|,
name|H_ACC40_ACC59
block|,
name|H_ACC40_ACC60
block|,
name|H_ACC40_ACC61
block|,
name|H_ACC40_ACC62
block|,
name|H_ACC40_ACC63
block|}
name|ACC_NAMES
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for .  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|iacc0_names
block|{
name|H_IACC0_IACC0
block|}
name|IACC0_NAMES
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for .  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|iccr_names
block|{
name|H_ICCR_ICC0
block|,
name|H_ICCR_ICC1
block|,
name|H_ICCR_ICC2
block|,
name|H_ICCR_ICC3
block|}
name|ICCR_NAMES
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for .  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|fccr_names
block|{
name|H_FCCR_FCC0
block|,
name|H_FCCR_FCC1
block|,
name|H_FCCR_FCC2
block|,
name|H_FCCR_FCC3
block|}
name|FCCR_NAMES
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for .  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cccr_names
block|{
name|H_CCCR_CC0
block|,
name|H_CCCR_CC1
block|,
name|H_CCCR_CC2
block|,
name|H_CCCR_CC3
block|,
name|H_CCCR_CC4
block|,
name|H_CCCR_CC5
block|,
name|H_CCCR_CC6
block|,
name|H_CCCR_CC7
block|}
name|CCCR_NAMES
typedef|;
end_typedef

begin_comment
comment|/* Attributes.  */
end_comment

begin_comment
comment|/* Enum declaration for machine type selection.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|mach_attr
block|{
name|MACH_BASE
block|,
name|MACH_FRV
block|,
name|MACH_FR550
block|,
name|MACH_FR500
block|,
name|MACH_FR400
block|,
name|MACH_TOMCAT
block|,
name|MACH_SIMPLE
block|,
name|MACH_MAX
block|}
name|MACH_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for instruction set selection.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|isa_attr
block|{
name|ISA_FRV
block|,
name|ISA_MAX
block|}
name|ISA_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for parallel execution pipeline selection.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|unit_attr
block|{
name|UNIT_NIL
block|,
name|UNIT_I0
block|,
name|UNIT_I1
block|,
name|UNIT_I01
block|,
name|UNIT_I2
block|,
name|UNIT_I3
block|,
name|UNIT_IALL
block|,
name|UNIT_FM0
block|,
name|UNIT_FM1
block|,
name|UNIT_FM01
block|,
name|UNIT_FM2
block|,
name|UNIT_FM3
block|,
name|UNIT_FMALL
block|,
name|UNIT_FMLOW
block|,
name|UNIT_B0
block|,
name|UNIT_B1
block|,
name|UNIT_B01
block|,
name|UNIT_C
block|,
name|UNIT_MULT_DIV
block|,
name|UNIT_IACC
block|,
name|UNIT_LOAD
block|,
name|UNIT_STORE
block|,
name|UNIT_SCAN
block|,
name|UNIT_DCPL
block|,
name|UNIT_MDUALACC
block|,
name|UNIT_MCLRACC_1
block|,
name|UNIT_NUM_UNITS
block|}
name|UNIT_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for fr400 major insn categories.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|fr400_major_attr
block|{
name|FR400_MAJOR_NONE
block|,
name|FR400_MAJOR_I_1
block|,
name|FR400_MAJOR_I_2
block|,
name|FR400_MAJOR_I_3
block|,
name|FR400_MAJOR_I_4
block|,
name|FR400_MAJOR_I_5
block|,
name|FR400_MAJOR_B_1
block|,
name|FR400_MAJOR_B_2
block|,
name|FR400_MAJOR_B_3
block|,
name|FR400_MAJOR_B_4
block|,
name|FR400_MAJOR_B_5
block|,
name|FR400_MAJOR_B_6
block|,
name|FR400_MAJOR_C_1
block|,
name|FR400_MAJOR_C_2
block|,
name|FR400_MAJOR_M_1
block|,
name|FR400_MAJOR_M_2
block|}
name|FR400_MAJOR_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for fr500 major insn categories.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|fr500_major_attr
block|{
name|FR500_MAJOR_NONE
block|,
name|FR500_MAJOR_I_1
block|,
name|FR500_MAJOR_I_2
block|,
name|FR500_MAJOR_I_3
block|,
name|FR500_MAJOR_I_4
block|,
name|FR500_MAJOR_I_5
block|,
name|FR500_MAJOR_I_6
block|,
name|FR500_MAJOR_B_1
block|,
name|FR500_MAJOR_B_2
block|,
name|FR500_MAJOR_B_3
block|,
name|FR500_MAJOR_B_4
block|,
name|FR500_MAJOR_B_5
block|,
name|FR500_MAJOR_B_6
block|,
name|FR500_MAJOR_C_1
block|,
name|FR500_MAJOR_C_2
block|,
name|FR500_MAJOR_F_1
block|,
name|FR500_MAJOR_F_2
block|,
name|FR500_MAJOR_F_3
block|,
name|FR500_MAJOR_F_4
block|,
name|FR500_MAJOR_F_5
block|,
name|FR500_MAJOR_F_6
block|,
name|FR500_MAJOR_F_7
block|,
name|FR500_MAJOR_F_8
block|,
name|FR500_MAJOR_M_1
block|,
name|FR500_MAJOR_M_2
block|,
name|FR500_MAJOR_M_3
block|,
name|FR500_MAJOR_M_4
block|,
name|FR500_MAJOR_M_5
block|,
name|FR500_MAJOR_M_6
block|,
name|FR500_MAJOR_M_7
block|,
name|FR500_MAJOR_M_8
block|}
name|FR500_MAJOR_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Enum declaration for fr550 major insn categories.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|fr550_major_attr
block|{
name|FR550_MAJOR_NONE
block|,
name|FR550_MAJOR_I_1
block|,
name|FR550_MAJOR_I_2
block|,
name|FR550_MAJOR_I_3
block|,
name|FR550_MAJOR_I_4
block|,
name|FR550_MAJOR_I_5
block|,
name|FR550_MAJOR_I_6
block|,
name|FR550_MAJOR_I_7
block|,
name|FR550_MAJOR_I_8
block|,
name|FR550_MAJOR_B_1
block|,
name|FR550_MAJOR_B_2
block|,
name|FR550_MAJOR_B_3
block|,
name|FR550_MAJOR_B_4
block|,
name|FR550_MAJOR_B_5
block|,
name|FR550_MAJOR_B_6
block|,
name|FR550_MAJOR_C_1
block|,
name|FR550_MAJOR_C_2
block|,
name|FR550_MAJOR_F_1
block|,
name|FR550_MAJOR_F_2
block|,
name|FR550_MAJOR_F_3
block|,
name|FR550_MAJOR_F_4
block|,
name|FR550_MAJOR_M_1
block|,
name|FR550_MAJOR_M_2
block|,
name|FR550_MAJOR_M_3
block|,
name|FR550_MAJOR_M_4
block|,
name|FR550_MAJOR_M_5
block|}
name|FR550_MAJOR_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Number of architecture variants.  */
end_comment

begin_define
define|#
directive|define
name|MAX_ISAS
value|1
end_define

begin_define
define|#
directive|define
name|MAX_MACHS
value|((int) MACH_MAX)
end_define

begin_comment
comment|/* Ifield support.  */
end_comment

begin_decl_stmt
specifier|extern
specifier|const
name|struct
name|cgen_ifld
name|frv_cgen_ifld_table
index|[]
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Ifield attribute indices.  */
end_comment

begin_comment
comment|/* Enum declaration for cgen_ifld attrs.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_ifld_attr
block|{
name|CGEN_IFLD_VIRTUAL
block|,
name|CGEN_IFLD_PCREL_ADDR
block|,
name|CGEN_IFLD_ABS_ADDR
block|,
name|CGEN_IFLD_RESERVED
block|,
name|CGEN_IFLD_SIGN_OPT
block|,
name|CGEN_IFLD_SIGNED
block|,
name|CGEN_IFLD_END_BOOLS
block|,
name|CGEN_IFLD_START_NBOOLS
init|=
literal|31
block|,
name|CGEN_IFLD_MACH
block|,
name|CGEN_IFLD_END_NBOOLS
block|}
name|CGEN_IFLD_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Number of non-boolean elements in cgen_ifld_attr.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_IFLD_NBOOL_ATTRS
value|(CGEN_IFLD_END_NBOOLS - CGEN_IFLD_START_NBOOLS - 1)
end_define

begin_comment
comment|/* Enum declaration for frv ifield types.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|ifield_type
block|{
name|FRV_F_NIL
block|,
name|FRV_F_ANYOF
block|,
name|FRV_F_PACK
block|,
name|FRV_F_OP
block|,
name|FRV_F_OPE1
block|,
name|FRV_F_OPE2
block|,
name|FRV_F_OPE3
block|,
name|FRV_F_OPE4
block|,
name|FRV_F_GRI
block|,
name|FRV_F_GRJ
block|,
name|FRV_F_GRK
block|,
name|FRV_F_FRI
block|,
name|FRV_F_FRJ
block|,
name|FRV_F_FRK
block|,
name|FRV_F_CPRI
block|,
name|FRV_F_CPRJ
block|,
name|FRV_F_CPRK
block|,
name|FRV_F_ACCGI
block|,
name|FRV_F_ACCGK
block|,
name|FRV_F_ACC40SI
block|,
name|FRV_F_ACC40UI
block|,
name|FRV_F_ACC40SK
block|,
name|FRV_F_ACC40UK
block|,
name|FRV_F_CRI
block|,
name|FRV_F_CRJ
block|,
name|FRV_F_CRK
block|,
name|FRV_F_CCI
block|,
name|FRV_F_CRJ_INT
block|,
name|FRV_F_CRJ_FLOAT
block|,
name|FRV_F_ICCI_1
block|,
name|FRV_F_ICCI_2
block|,
name|FRV_F_ICCI_3
block|,
name|FRV_F_FCCI_1
block|,
name|FRV_F_FCCI_2
block|,
name|FRV_F_FCCI_3
block|,
name|FRV_F_FCCK
block|,
name|FRV_F_EIR
block|,
name|FRV_F_S10
block|,
name|FRV_F_S12
block|,
name|FRV_F_D12
block|,
name|FRV_F_U16
block|,
name|FRV_F_S16
block|,
name|FRV_F_S6
block|,
name|FRV_F_S6_1
block|,
name|FRV_F_U6
block|,
name|FRV_F_S5
block|,
name|FRV_F_U12_H
block|,
name|FRV_F_U12_L
block|,
name|FRV_F_U12
block|,
name|FRV_F_INT_CC
block|,
name|FRV_F_FLT_CC
block|,
name|FRV_F_COND
block|,
name|FRV_F_CCOND
block|,
name|FRV_F_HINT
block|,
name|FRV_F_LI
block|,
name|FRV_F_LOCK
block|,
name|FRV_F_DEBUG
block|,
name|FRV_F_A
block|,
name|FRV_F_AE
block|,
name|FRV_F_SPR_H
block|,
name|FRV_F_SPR_L
block|,
name|FRV_F_SPR
block|,
name|FRV_F_LABEL16
block|,
name|FRV_F_LABELH6
block|,
name|FRV_F_LABELL18
block|,
name|FRV_F_LABEL24
block|,
name|FRV_F_ICCI_1_NULL
block|,
name|FRV_F_ICCI_2_NULL
block|,
name|FRV_F_ICCI_3_NULL
block|,
name|FRV_F_FCCI_1_NULL
block|,
name|FRV_F_FCCI_2_NULL
block|,
name|FRV_F_FCCI_3_NULL
block|,
name|FRV_F_RS_NULL
block|,
name|FRV_F_GRI_NULL
block|,
name|FRV_F_GRJ_NULL
block|,
name|FRV_F_GRK_NULL
block|,
name|FRV_F_FRI_NULL
block|,
name|FRV_F_FRJ_NULL
block|,
name|FRV_F_ACCJ_NULL
block|,
name|FRV_F_RD_NULL
block|,
name|FRV_F_COND_NULL
block|,
name|FRV_F_CCOND_NULL
block|,
name|FRV_F_S12_NULL
block|,
name|FRV_F_LABEL16_NULL
block|,
name|FRV_F_MISC_NULL_1
block|,
name|FRV_F_MISC_NULL_2
block|,
name|FRV_F_MISC_NULL_3
block|,
name|FRV_F_MISC_NULL_4
block|,
name|FRV_F_MISC_NULL_5
block|,
name|FRV_F_MISC_NULL_6
block|,
name|FRV_F_MISC_NULL_7
block|,
name|FRV_F_MISC_NULL_8
block|,
name|FRV_F_MISC_NULL_9
block|,
name|FRV_F_MISC_NULL_10
block|,
name|FRV_F_MISC_NULL_11
block|,
name|FRV_F_LI_OFF
block|,
name|FRV_F_LI_ON
block|,
name|FRV_F_MAX
block|}
name|IFIELD_TYPE
typedef|;
end_typedef

begin_define
define|#
directive|define
name|MAX_IFLD
value|((int) FRV_F_MAX)
end_define

begin_comment
comment|/* Hardware attribute indices.  */
end_comment

begin_comment
comment|/* Enum declaration for cgen_hw attrs.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_hw_attr
block|{
name|CGEN_HW_VIRTUAL
block|,
name|CGEN_HW_CACHE_ADDR
block|,
name|CGEN_HW_PC
block|,
name|CGEN_HW_PROFILE
block|,
name|CGEN_HW_END_BOOLS
block|,
name|CGEN_HW_START_NBOOLS
init|=
literal|31
block|,
name|CGEN_HW_MACH
block|,
name|CGEN_HW_END_NBOOLS
block|}
name|CGEN_HW_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Number of non-boolean elements in cgen_hw_attr.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_HW_NBOOL_ATTRS
value|(CGEN_HW_END_NBOOLS - CGEN_HW_START_NBOOLS - 1)
end_define

begin_comment
comment|/* Enum declaration for frv hardware types.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_hw_type
block|{
name|HW_H_MEMORY
block|,
name|HW_H_SINT
block|,
name|HW_H_UINT
block|,
name|HW_H_ADDR
block|,
name|HW_H_IADDR
block|,
name|HW_H_PC
block|,
name|HW_H_PSR_IMPLE
block|,
name|HW_H_PSR_VER
block|,
name|HW_H_PSR_ICE
block|,
name|HW_H_PSR_NEM
block|,
name|HW_H_PSR_CM
block|,
name|HW_H_PSR_BE
block|,
name|HW_H_PSR_ESR
block|,
name|HW_H_PSR_EF
block|,
name|HW_H_PSR_EM
block|,
name|HW_H_PSR_PIL
block|,
name|HW_H_PSR_PS
block|,
name|HW_H_PSR_ET
block|,
name|HW_H_PSR_S
block|,
name|HW_H_TBR_TBA
block|,
name|HW_H_TBR_TT
block|,
name|HW_H_BPSR_BS
block|,
name|HW_H_BPSR_BET
block|,
name|HW_H_GR
block|,
name|HW_H_GR_DOUBLE
block|,
name|HW_H_GR_HI
block|,
name|HW_H_GR_LO
block|,
name|HW_H_FR
block|,
name|HW_H_FR_DOUBLE
block|,
name|HW_H_FR_INT
block|,
name|HW_H_FR_HI
block|,
name|HW_H_FR_LO
block|,
name|HW_H_FR_0
block|,
name|HW_H_FR_1
block|,
name|HW_H_FR_2
block|,
name|HW_H_FR_3
block|,
name|HW_H_CPR
block|,
name|HW_H_CPR_DOUBLE
block|,
name|HW_H_SPR
block|,
name|HW_H_ACCG
block|,
name|HW_H_ACC40S
block|,
name|HW_H_ACC40U
block|,
name|HW_H_IACC0
block|,
name|HW_H_ICCR
block|,
name|HW_H_FCCR
block|,
name|HW_H_CCCR
block|,
name|HW_H_PACK
block|,
name|HW_H_HINT_TAKEN
block|,
name|HW_H_HINT_NOT_TAKEN
block|,
name|HW_MAX
block|}
name|CGEN_HW_TYPE
typedef|;
end_typedef

begin_define
define|#
directive|define
name|MAX_HW
value|((int) HW_MAX)
end_define

begin_comment
comment|/* Operand attribute indices.  */
end_comment

begin_comment
comment|/* Enum declaration for cgen_operand attrs.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_operand_attr
block|{
name|CGEN_OPERAND_VIRTUAL
block|,
name|CGEN_OPERAND_PCREL_ADDR
block|,
name|CGEN_OPERAND_ABS_ADDR
block|,
name|CGEN_OPERAND_SIGN_OPT
block|,
name|CGEN_OPERAND_SIGNED
block|,
name|CGEN_OPERAND_NEGATIVE
block|,
name|CGEN_OPERAND_RELAX
block|,
name|CGEN_OPERAND_SEM_ONLY
block|,
name|CGEN_OPERAND_HASH_PREFIX
block|,
name|CGEN_OPERAND_END_BOOLS
block|,
name|CGEN_OPERAND_START_NBOOLS
init|=
literal|31
block|,
name|CGEN_OPERAND_MACH
block|,
name|CGEN_OPERAND_END_NBOOLS
block|}
name|CGEN_OPERAND_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Number of non-boolean elements in cgen_operand_attr.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_OPERAND_NBOOL_ATTRS
value|(CGEN_OPERAND_END_NBOOLS - CGEN_OPERAND_START_NBOOLS - 1)
end_define

begin_comment
comment|/* Enum declaration for frv operand types.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_operand_type
block|{
name|FRV_OPERAND_PC
block|,
name|FRV_OPERAND_PACK
block|,
name|FRV_OPERAND_GRI
block|,
name|FRV_OPERAND_GRJ
block|,
name|FRV_OPERAND_GRK
block|,
name|FRV_OPERAND_GRKHI
block|,
name|FRV_OPERAND_GRKLO
block|,
name|FRV_OPERAND_GRDOUBLEK
block|,
name|FRV_OPERAND_ACC40SI
block|,
name|FRV_OPERAND_ACC40UI
block|,
name|FRV_OPERAND_ACC40SK
block|,
name|FRV_OPERAND_ACC40UK
block|,
name|FRV_OPERAND_ACCGI
block|,
name|FRV_OPERAND_ACCGK
block|,
name|FRV_OPERAND_CPRI
block|,
name|FRV_OPERAND_CPRJ
block|,
name|FRV_OPERAND_CPRK
block|,
name|FRV_OPERAND_CPRDOUBLEK
block|,
name|FRV_OPERAND_FRINTI
block|,
name|FRV_OPERAND_FRINTJ
block|,
name|FRV_OPERAND_FRINTK
block|,
name|FRV_OPERAND_FRI
block|,
name|FRV_OPERAND_FRJ
block|,
name|FRV_OPERAND_FRK
block|,
name|FRV_OPERAND_FRKHI
block|,
name|FRV_OPERAND_FRKLO
block|,
name|FRV_OPERAND_FRDOUBLEI
block|,
name|FRV_OPERAND_FRDOUBLEJ
block|,
name|FRV_OPERAND_FRDOUBLEK
block|,
name|FRV_OPERAND_CRI
block|,
name|FRV_OPERAND_CRJ
block|,
name|FRV_OPERAND_CRJ_INT
block|,
name|FRV_OPERAND_CRJ_FLOAT
block|,
name|FRV_OPERAND_CRK
block|,
name|FRV_OPERAND_CCI
block|,
name|FRV_OPERAND_ICCI_1
block|,
name|FRV_OPERAND_ICCI_2
block|,
name|FRV_OPERAND_ICCI_3
block|,
name|FRV_OPERAND_FCCI_1
block|,
name|FRV_OPERAND_FCCI_2
block|,
name|FRV_OPERAND_FCCI_3
block|,
name|FRV_OPERAND_FCCK
block|,
name|FRV_OPERAND_EIR
block|,
name|FRV_OPERAND_S10
block|,
name|FRV_OPERAND_U16
block|,
name|FRV_OPERAND_S16
block|,
name|FRV_OPERAND_S6
block|,
name|FRV_OPERAND_S6_1
block|,
name|FRV_OPERAND_U6
block|,
name|FRV_OPERAND_S5
block|,
name|FRV_OPERAND_COND
block|,
name|FRV_OPERAND_CCOND
block|,
name|FRV_OPERAND_HINT
block|,
name|FRV_OPERAND_HINT_TAKEN
block|,
name|FRV_OPERAND_HINT_NOT_TAKEN
block|,
name|FRV_OPERAND_LI
block|,
name|FRV_OPERAND_LOCK
block|,
name|FRV_OPERAND_DEBUG
block|,
name|FRV_OPERAND_AE
block|,
name|FRV_OPERAND_LABEL16
block|,
name|FRV_OPERAND_LABEL24
block|,
name|FRV_OPERAND_A0
block|,
name|FRV_OPERAND_A1
block|,
name|FRV_OPERAND_FRINTIEVEN
block|,
name|FRV_OPERAND_FRINTJEVEN
block|,
name|FRV_OPERAND_FRINTKEVEN
block|,
name|FRV_OPERAND_D12
block|,
name|FRV_OPERAND_S12
block|,
name|FRV_OPERAND_U12
block|,
name|FRV_OPERAND_SPR
block|,
name|FRV_OPERAND_ULO16
block|,
name|FRV_OPERAND_SLO16
block|,
name|FRV_OPERAND_UHI16
block|,
name|FRV_OPERAND_PSR_ESR
block|,
name|FRV_OPERAND_PSR_S
block|,
name|FRV_OPERAND_PSR_PS
block|,
name|FRV_OPERAND_PSR_ET
block|,
name|FRV_OPERAND_BPSR_BS
block|,
name|FRV_OPERAND_BPSR_BET
block|,
name|FRV_OPERAND_TBR_TBA
block|,
name|FRV_OPERAND_TBR_TT
block|,
name|FRV_OPERAND_MAX
block|}
name|CGEN_OPERAND_TYPE
typedef|;
end_typedef

begin_comment
comment|/* Number of operands types.  */
end_comment

begin_define
define|#
directive|define
name|MAX_OPERANDS
value|81
end_define

begin_comment
comment|/* Maximum number of operands referenced by any insn.  */
end_comment

begin_define
define|#
directive|define
name|MAX_OPERAND_INSTANCES
value|8
end_define

begin_comment
comment|/* Insn attribute indices.  */
end_comment

begin_comment
comment|/* Enum declaration for cgen_insn attrs.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_insn_attr
block|{
name|CGEN_INSN_ALIAS
block|,
name|CGEN_INSN_VIRTUAL
block|,
name|CGEN_INSN_UNCOND_CTI
block|,
name|CGEN_INSN_COND_CTI
block|,
name|CGEN_INSN_SKIP_CTI
block|,
name|CGEN_INSN_DELAY_SLOT
block|,
name|CGEN_INSN_RELAXABLE
block|,
name|CGEN_INSN_RELAXED
block|,
name|CGEN_INSN_NO_DIS
block|,
name|CGEN_INSN_PBB
block|,
name|CGEN_INSN_PRIVILEGED
block|,
name|CGEN_INSN_NON_EXCEPTING
block|,
name|CGEN_INSN_CONDITIONAL
block|,
name|CGEN_INSN_FR_ACCESS
block|,
name|CGEN_INSN_PRESERVE_OVF
block|,
name|CGEN_INSN_END_BOOLS
block|,
name|CGEN_INSN_START_NBOOLS
init|=
literal|31
block|,
name|CGEN_INSN_MACH
block|,
name|CGEN_INSN_UNIT
block|,
name|CGEN_INSN_FR400_MAJOR
block|,
name|CGEN_INSN_FR500_MAJOR
block|,
name|CGEN_INSN_FR550_MAJOR
block|,
name|CGEN_INSN_END_NBOOLS
block|}
name|CGEN_INSN_ATTR
typedef|;
end_typedef

begin_comment
comment|/* Number of non-boolean elements in cgen_insn_attr.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_INSN_NBOOL_ATTRS
value|(CGEN_INSN_END_NBOOLS - CGEN_INSN_START_NBOOLS - 1)
end_define

begin_comment
comment|/* cgen.h uses things we just defined.  */
end_comment

begin_include
include|#
directive|include
file|"opcode/cgen.h"
end_include

begin_comment
comment|/* Attributes.  */
end_comment

begin_decl_stmt
specifier|extern
specifier|const
name|CGEN_ATTR_TABLE
name|frv_cgen_hardware_attr_table
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|CGEN_ATTR_TABLE
name|frv_cgen_ifield_attr_table
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|CGEN_ATTR_TABLE
name|frv_cgen_operand_attr_table
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|CGEN_ATTR_TABLE
name|frv_cgen_insn_attr_table
index|[]
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Hardware decls.  */
end_comment

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_gr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_gr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_gr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_gr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_fr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_fr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_fr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_fr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_fr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_fr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_fr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_fr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_fr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_cpr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_cpr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_spr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_accg_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_acc_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_acc_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_iacc0_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_iccr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_fccr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_cccr_names
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_h_pack
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_h_hint_taken
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|CGEN_KEYWORD
name|frv_cgen_opval_h_hint_not_taken
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|CGEN_HW_ENTRY
name|frv_cgen_hw_table
index|[]
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* FRV_CPU_H */
end_comment

end_unit

