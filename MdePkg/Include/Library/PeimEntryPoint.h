begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/** @file   Module entry point library for PEIM.  Copyright (c) 2006 - 2008, Intel Corporation. All rights reserved.<BR> This program and the accompanying materials are licensed and made available under the terms and conditions of the BSD License which accompanies this distribution.  The full text of the license may be found at http://opensource.org/licenses/bsd-license.php  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.  **/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__MODULE_ENTRY_POINT_H__
end_ifndef

begin_define
define|#
directive|define
name|__MODULE_ENTRY_POINT_H__
end_define

begin_comment
comment|///
end_comment

begin_comment
comment|/// Declare the EFI/UEFI Specification Revision to which this driver is implemented
end_comment

begin_comment
comment|///
end_comment

begin_decl_stmt
specifier|extern
name|CONST
name|UINT32
name|_gPeimRevision
decl_stmt|;
end_decl_stmt

begin_comment
comment|/**   The entry point of PE/COFF Image for a PEIM.    This function is the entry point for a PEIM.  This function must call ProcessLibraryConstructorList()    and ProcessModuleEntryPointList().  The return value from ProcessModuleEntryPointList() is returned.   If _gPeimRevision is not zero and PeiServices->Hdr.Revision is less than _gPeimRevison, then ASSERT().    @param  FileHandle  Handle of the file being invoked.    @param  PeiServices Describes the list of possible PEI Services.    @retval  EFI_SUCCESS   The PEIM executed normally.   @retval  !EFI_SUCCESS  The PEIM failed to execute normally. **/
end_comment

begin_function_decl
name|EFI_STATUS
name|EFIAPI
name|_ModuleEntryPoint
parameter_list|(
name|IN
name|EFI_PEI_FILE_HANDLE
name|FileHandle
parameter_list|,
name|IN
name|CONST
name|EFI_PEI_SERVICES
modifier|*
modifier|*
name|PeiServices
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**   Required by the EBC compiler and identical in functionality to _ModuleEntryPoint().      This function is required to call _ModuleEntryPoint() passing in FileHandle and PeiServices.    @param  FileHandle  Handle of the file being invoked.    @param  PeiServices Describes the list of possible PEI Services.    @retval EFI_SUCCESS  The PEIM executed normally.   @retval !EFI_SUCCESS The PEIM failed to execute normally.  **/
end_comment

begin_function_decl
name|EFI_STATUS
name|EFIAPI
name|EfiMain
parameter_list|(
name|IN
name|EFI_PEI_FILE_HANDLE
name|FileHandle
parameter_list|,
name|IN
name|CONST
name|EFI_PEI_SERVICES
modifier|*
modifier|*
name|PeiServices
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**   Autogenerated function that calls the library constructors for all of the module's   dependent libraries.    This function must be called by _ModuleEntryPoint().   This function calls the set of library constructors for the set of library instances that a   module depends on. This includes library instances that a module depends on directly and library   instances that a module depends on indirectly through other libraries.     This function is autogenerated by build tools and those build tools are responsible for collecting   the set of library instances, determine which ones have constructors, and calling the library   constructors in the proper order based upon each of the library instances own dependencies.    @param  FileHandle   Handle of the file being invoked.   @param  PeiServices  Describes the list of possible PEI Services.  **/
end_comment

begin_function_decl
name|VOID
name|EFIAPI
name|ProcessLibraryConstructorList
parameter_list|(
name|IN
name|EFI_PEI_FILE_HANDLE
name|FileHandle
parameter_list|,
name|IN
name|CONST
name|EFI_PEI_SERVICES
modifier|*
modifier|*
name|PeiServices
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**   Autogenerated function that calls a set of module entry points.    This function must be called by _ModuleEntryPoint().   This function calls the set of module entry points.     This function is autogenerated by build tools and those build tools are responsible   for collecting the module entry points and calling them in a specified order.    @param  FileHandle  Handle of the file being invoked.    @param  PeiServices Describes the list of possible PEI Services.    @retval EFI_SUCCESS  The PEIM executed normally.   @retval !EFI_SUCCESS The PEIM failed to execute normally.   **/
end_comment

begin_function_decl
name|EFI_STATUS
name|EFIAPI
name|ProcessModuleEntryPointList
parameter_list|(
name|IN
name|EFI_PEI_FILE_HANDLE
name|FileHandle
parameter_list|,
name|IN
name|CONST
name|EFI_PEI_SERVICES
modifier|*
modifier|*
name|PeiServices
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

