begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/** @file   Support for the latest PCI standard.    Copyright (c) 2006 - 2016, Intel Corporation. All rights reserved.<BR>   (C) Copyright 2016 Hewlett Packard Enterprise Development LP<BR>     This program and the accompanying materials                             are licensed and made available under the terms and conditions of the BSD License            which accompanies this distribution.  The full text of the license may be found at           http://opensource.org/licenses/bsd-license.php                                                THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,                        WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.               **/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_PCIEXPRESS21_H_
end_ifndef

begin_define
define|#
directive|define
name|_PCIEXPRESS21_H_
end_define

begin_include
include|#
directive|include
file|<IndustryStandard/Pci30.h>
end_include

begin_pragma
pragma|#
directive|pragma
name|pack
name|(
name|1
name|)
end_pragma

begin_comment
comment|///
end_comment

begin_comment
comment|/// PCI Express Capability Structure
end_comment

begin_comment
comment|///
end_comment

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT16
name|Version
range|:
literal|4
decl_stmt|;
name|UINT16
name|DevicePortType
range|:
literal|4
decl_stmt|;
name|UINT16
name|SlotImplemented
range|:
literal|1
decl_stmt|;
name|UINT16
name|InterruptMessageNumber
range|:
literal|5
decl_stmt|;
name|UINT16
name|Undefined
range|:
literal|1
decl_stmt|;
name|UINT16
name|Reserved
range|:
literal|1
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT16
name|Uint16
decl_stmt|;
block|}
name|PCI_REG_PCIE_CAPABILITY
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCIE_DEVICE_PORT_TYPE_PCIE_ENDPOINT
value|0
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_PORT_TYPE_LEGACY_PCIE_ENDPOINT
value|1
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_PORT_TYPE_ROOT_PORT
value|4
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_PORT_TYPE_UPSTREAM_PORT
value|5
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_PORT_TYPE_DOWNSTREAM_PORT
value|6
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_PORT_TYPE_PCIE_TO_PCI_BRIDGE
value|7
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_PORT_TYPE_PCI_TO_PCIE_BRIDGE
value|8
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_PORT_TYPE_ROOT_COMPLEX_INTEGRATED_ENDPOINT
value|9
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_PORT_TYPE_ROOT_COMPLEX_EVENT_COLLECTOR
value|10
end_define

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT32
name|MaxPayloadSize
range|:
literal|3
decl_stmt|;
name|UINT32
name|PhantomFunctions
range|:
literal|2
decl_stmt|;
name|UINT32
name|ExtendedTagField
range|:
literal|1
decl_stmt|;
name|UINT32
name|EndpointL0sAcceptableLatency
range|:
literal|3
decl_stmt|;
name|UINT32
name|EndpointL1AcceptableLatency
range|:
literal|3
decl_stmt|;
name|UINT32
name|Undefined
range|:
literal|3
decl_stmt|;
name|UINT32
name|RoleBasedErrorReporting
range|:
literal|1
decl_stmt|;
name|UINT32
name|Reserved
range|:
literal|2
decl_stmt|;
name|UINT32
name|CapturedSlotPowerLimitValue
range|:
literal|8
decl_stmt|;
name|UINT32
name|CapturedSlotPowerLimitScale
range|:
literal|2
decl_stmt|;
name|UINT32
name|FunctionLevelReset
range|:
literal|1
decl_stmt|;
name|UINT32
name|Reserved2
range|:
literal|3
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT32
name|Uint32
decl_stmt|;
block|}
name|PCI_REG_PCIE_DEVICE_CAPABILITY
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT16
name|CorrectableError
range|:
literal|1
decl_stmt|;
name|UINT16
name|NonFatalError
range|:
literal|1
decl_stmt|;
name|UINT16
name|FatalError
range|:
literal|1
decl_stmt|;
name|UINT16
name|UnsupportedRequest
range|:
literal|1
decl_stmt|;
name|UINT16
name|RelaxedOrdering
range|:
literal|1
decl_stmt|;
name|UINT16
name|MaxPayloadSize
range|:
literal|3
decl_stmt|;
name|UINT16
name|ExtendedTagField
range|:
literal|1
decl_stmt|;
name|UINT16
name|PhantomFunctions
range|:
literal|1
decl_stmt|;
name|UINT16
name|AuxPower
range|:
literal|1
decl_stmt|;
name|UINT16
name|NoSnoop
range|:
literal|1
decl_stmt|;
name|UINT16
name|MaxReadRequestSize
range|:
literal|3
decl_stmt|;
name|UINT16
name|BridgeConfigurationRetryOrFunctionLevelReset
range|:
literal|1
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT16
name|Uint16
decl_stmt|;
block|}
name|PCI_REG_PCIE_DEVICE_CONTROL
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT16
name|CorrectableError
range|:
literal|1
decl_stmt|;
name|UINT16
name|NonFatalError
range|:
literal|1
decl_stmt|;
name|UINT16
name|FatalError
range|:
literal|1
decl_stmt|;
name|UINT16
name|UnsupportedRequest
range|:
literal|1
decl_stmt|;
name|UINT16
name|AuxPower
range|:
literal|1
decl_stmt|;
name|UINT16
name|TransactionsPending
range|:
literal|1
decl_stmt|;
name|UINT16
name|Reserved
range|:
literal|10
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT16
name|Uint16
decl_stmt|;
block|}
name|PCI_REG_PCIE_DEVICE_STATUS
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT32
name|MaxLinkSpeed
range|:
literal|4
decl_stmt|;
name|UINT32
name|MaxLinkWidth
range|:
literal|6
decl_stmt|;
name|UINT32
name|Aspm
range|:
literal|2
decl_stmt|;
name|UINT32
name|L0sExitLatency
range|:
literal|3
decl_stmt|;
name|UINT32
name|L1ExitLatency
range|:
literal|3
decl_stmt|;
name|UINT32
name|ClockPowerManagement
range|:
literal|1
decl_stmt|;
name|UINT32
name|SurpriseDownError
range|:
literal|1
decl_stmt|;
name|UINT32
name|DataLinkLayerLinkActive
range|:
literal|1
decl_stmt|;
name|UINT32
name|LinkBandwidthNotification
range|:
literal|1
decl_stmt|;
name|UINT32
name|AspmOptionalityCompliance
range|:
literal|1
decl_stmt|;
name|UINT32
name|Reserved
range|:
literal|1
decl_stmt|;
name|UINT32
name|PortNumber
range|:
literal|8
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT32
name|Uint32
decl_stmt|;
block|}
name|PCI_REG_PCIE_LINK_CAPABILITY
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCIE_LINK_ASPM_L0S
value|BIT0
end_define

begin_define
define|#
directive|define
name|PCIE_LINK_ASPM_L1
value|BIT1
end_define

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT16
name|AspmControl
range|:
literal|2
decl_stmt|;
name|UINT16
name|Reserved
range|:
literal|1
decl_stmt|;
name|UINT16
name|ReadCompletionBoundary
range|:
literal|1
decl_stmt|;
name|UINT16
name|LinkDisable
range|:
literal|1
decl_stmt|;
name|UINT16
name|RetrainLink
range|:
literal|1
decl_stmt|;
name|UINT16
name|CommonClockConfiguration
range|:
literal|1
decl_stmt|;
name|UINT16
name|ExtendedSynch
range|:
literal|1
decl_stmt|;
name|UINT16
name|ClockPowerManagement
range|:
literal|1
decl_stmt|;
name|UINT16
name|HardwareAutonomousWidthDisable
range|:
literal|1
decl_stmt|;
name|UINT16
name|LinkBandwidthManagementInterrupt
range|:
literal|1
decl_stmt|;
name|UINT16
name|LinkAutonomousBandwidthInterrupt
range|:
literal|1
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT16
name|Uint16
decl_stmt|;
block|}
name|PCI_REG_PCIE_LINK_CONTROL
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT16
name|CurrentLinkSpeed
range|:
literal|4
decl_stmt|;
name|UINT16
name|NegotiatedLinkWidth
range|:
literal|6
decl_stmt|;
name|UINT16
name|Undefined
range|:
literal|1
decl_stmt|;
name|UINT16
name|LinkTraining
range|:
literal|1
decl_stmt|;
name|UINT16
name|SlotClockConfiguration
range|:
literal|1
decl_stmt|;
name|UINT16
name|DataLinkLayerLinkActive
range|:
literal|1
decl_stmt|;
name|UINT16
name|LinkBandwidthManagement
range|:
literal|1
decl_stmt|;
name|UINT16
name|LinkAutonomousBandwidth
range|:
literal|1
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT16
name|Uint16
decl_stmt|;
block|}
name|PCI_REG_PCIE_LINK_STATUS
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT32
name|AttentionButton
range|:
literal|1
decl_stmt|;
name|UINT32
name|PowerController
range|:
literal|1
decl_stmt|;
name|UINT32
name|MrlSensor
range|:
literal|1
decl_stmt|;
name|UINT32
name|AttentionIndicator
range|:
literal|1
decl_stmt|;
name|UINT32
name|PowerIndicator
range|:
literal|1
decl_stmt|;
name|UINT32
name|HotPlugSurprise
range|:
literal|1
decl_stmt|;
name|UINT32
name|HotPlugCapable
range|:
literal|1
decl_stmt|;
name|UINT32
name|SlotPowerLimitValue
range|:
literal|8
decl_stmt|;
name|UINT32
name|SlotPowerLimitScale
range|:
literal|2
decl_stmt|;
name|UINT32
name|ElectromechanicalInterlock
range|:
literal|1
decl_stmt|;
name|UINT32
name|NoCommandCompleted
range|:
literal|1
decl_stmt|;
name|UINT32
name|PhysicalSlotNumber
range|:
literal|13
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT32
name|Uint32
decl_stmt|;
block|}
name|PCI_REG_PCIE_SLOT_CAPABILITY
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT32
name|AttentionButtonPressed
range|:
literal|1
decl_stmt|;
name|UINT32
name|PowerFaultDetected
range|:
literal|1
decl_stmt|;
name|UINT32
name|MrlSensorChanged
range|:
literal|1
decl_stmt|;
name|UINT32
name|PresenceDetectChanged
range|:
literal|1
decl_stmt|;
name|UINT32
name|CommandCompletedInterrupt
range|:
literal|1
decl_stmt|;
name|UINT32
name|HotPlugInterrupt
range|:
literal|1
decl_stmt|;
name|UINT32
name|AttentionIndicator
range|:
literal|2
decl_stmt|;
name|UINT32
name|PowerIndicator
range|:
literal|2
decl_stmt|;
name|UINT32
name|PowerController
range|:
literal|1
decl_stmt|;
name|UINT32
name|ElectromechanicalInterlock
range|:
literal|1
decl_stmt|;
name|UINT32
name|DataLinkLayerStateChanged
range|:
literal|1
decl_stmt|;
name|UINT32
name|Reserved
range|:
literal|3
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT16
name|Uint16
decl_stmt|;
block|}
name|PCI_REG_PCIE_SLOT_CONTROL
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT16
name|AttentionButtonPressed
range|:
literal|1
decl_stmt|;
name|UINT16
name|PowerFaultDetected
range|:
literal|1
decl_stmt|;
name|UINT16
name|MrlSensorChanged
range|:
literal|1
decl_stmt|;
name|UINT16
name|PresenceDetectChanged
range|:
literal|1
decl_stmt|;
name|UINT16
name|CommandCompleted
range|:
literal|1
decl_stmt|;
name|UINT16
name|MrlSensor
range|:
literal|1
decl_stmt|;
name|UINT16
name|PresenceDetect
range|:
literal|1
decl_stmt|;
name|UINT16
name|ElectromechanicalInterlock
range|:
literal|1
decl_stmt|;
name|UINT16
name|DataLinkLayerStateChanged
range|:
literal|1
decl_stmt|;
name|UINT16
name|Reserved
range|:
literal|7
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT16
name|Uint16
decl_stmt|;
block|}
name|PCI_REG_PCIE_SLOT_STATUS
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT16
name|SystemErrorOnCorrectableError
range|:
literal|1
decl_stmt|;
name|UINT16
name|SystemErrorOnNonFatalError
range|:
literal|1
decl_stmt|;
name|UINT16
name|SystemErrorOnFatalError
range|:
literal|1
decl_stmt|;
name|UINT16
name|PmeInterrupt
range|:
literal|1
decl_stmt|;
name|UINT16
name|CrsSoftwareVisibility
range|:
literal|1
decl_stmt|;
name|UINT16
name|Reserved
range|:
literal|11
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT16
name|Uint16
decl_stmt|;
block|}
name|PCI_REG_PCIE_ROOT_CONTROL
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT16
name|CrsSoftwareVisibility
range|:
literal|1
decl_stmt|;
name|UINT16
name|Reserved
range|:
literal|15
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT16
name|Uint16
decl_stmt|;
block|}
name|PCI_REG_PCIE_ROOT_CAPABILITY
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT32
name|PmeRequesterId
range|:
literal|16
decl_stmt|;
name|UINT32
name|PmeStatus
range|:
literal|1
decl_stmt|;
name|UINT32
name|PmePending
range|:
literal|1
decl_stmt|;
name|UINT32
name|Reserved
range|:
literal|14
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT32
name|Uint32
decl_stmt|;
block|}
name|PCI_REG_PCIE_ROOT_STATUS
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT32
name|CompletionTimeoutRanges
range|:
literal|4
decl_stmt|;
name|UINT32
name|CompletionTimeoutDisable
range|:
literal|1
decl_stmt|;
name|UINT32
name|AriForwarding
range|:
literal|1
decl_stmt|;
name|UINT32
name|AtomicOpRouting
range|:
literal|1
decl_stmt|;
name|UINT32
name|AtomicOp32Completer
range|:
literal|1
decl_stmt|;
name|UINT32
name|AtomicOp64Completer
range|:
literal|1
decl_stmt|;
name|UINT32
name|Cas128Completer
range|:
literal|1
decl_stmt|;
name|UINT32
name|NoRoEnabledPrPrPassing
range|:
literal|1
decl_stmt|;
name|UINT32
name|LtrMechanism
range|:
literal|1
decl_stmt|;
name|UINT32
name|TphCompleter
range|:
literal|2
decl_stmt|;
name|UINT32
name|Reserved
range|:
literal|4
decl_stmt|;
name|UINT32
name|Obff
range|:
literal|2
decl_stmt|;
name|UINT32
name|ExtendedFmtField
range|:
literal|1
decl_stmt|;
name|UINT32
name|EndEndTlpPrefix
range|:
literal|1
decl_stmt|;
name|UINT32
name|MaxEndEndTlpPrefixes
range|:
literal|2
decl_stmt|;
name|UINT32
name|Reserved2
range|:
literal|8
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT32
name|Uint32
decl_stmt|;
block|}
name|PCI_REG_PCIE_DEVICE_CAPABILITY2
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCIE_DEVICE_CAPABILITY_OBFF_MESSAGE
value|BIT0
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_CAPABILITY_OBFF_WAKE
value|BIT1
end_define

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT16
name|CompletionTimeoutValue
range|:
literal|4
decl_stmt|;
name|UINT16
name|CompletionTimeoutDisable
range|:
literal|1
decl_stmt|;
name|UINT16
name|AriForwarding
range|:
literal|1
decl_stmt|;
name|UINT16
name|AtomicOpRequester
range|:
literal|1
decl_stmt|;
name|UINT16
name|AtomicOpEgressBlocking
range|:
literal|1
decl_stmt|;
name|UINT16
name|IdoRequest
range|:
literal|1
decl_stmt|;
name|UINT16
name|IdoCompletion
range|:
literal|1
decl_stmt|;
name|UINT16
name|LtrMechanism
range|:
literal|2
decl_stmt|;
name|UINT16
name|Reserved
range|:
literal|2
decl_stmt|;
name|UINT16
name|Obff
range|:
literal|2
decl_stmt|;
name|UINT16
name|EndEndTlpPrefixBlocking
range|:
literal|1
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT16
name|Uint16
decl_stmt|;
block|}
name|PCI_REG_PCIE_DEVICE_CONTROL2
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCIE_COMPLETION_TIMEOUT_50US_50MS
value|0
end_define

begin_define
define|#
directive|define
name|PCIE_COMPLETION_TIMEOUT_50US_100US
value|1
end_define

begin_define
define|#
directive|define
name|PCIE_COMPLETION_TIMEOUT_1MS_10MS
value|2
end_define

begin_define
define|#
directive|define
name|PCIE_COMPLETION_TIMEOUT_16MS_55MS
value|5
end_define

begin_define
define|#
directive|define
name|PCIE_COMPLETION_TIMEOUT_65MS_210MS
value|6
end_define

begin_define
define|#
directive|define
name|PCIE_COMPLETION_TIMEOUT_260MS_900MS
value|9
end_define

begin_define
define|#
directive|define
name|PCIE_COMPLETION_TIMEOUT_1S_3_5S
value|10
end_define

begin_define
define|#
directive|define
name|PCIE_COMPLETION_TIMEOUT_4S_13S
value|13
end_define

begin_define
define|#
directive|define
name|PCIE_COMPLETION_TIMEOUT_17S_64S
value|14
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_CONTROL_OBFF_DISABLED
value|0
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_CONTROL_OBFF_MESSAGE_A
value|1
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_CONTROL_OBFF_MESSAGE_B
value|2
end_define

begin_define
define|#
directive|define
name|PCIE_DEVICE_CONTROL_OBFF_WAKE
value|3
end_define

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT32
name|Reserved
range|:
literal|1
decl_stmt|;
name|UINT32
name|LinkSpeedsVector
range|:
literal|7
decl_stmt|;
name|UINT32
name|Crosslink
range|:
literal|1
decl_stmt|;
name|UINT32
name|Reserved2
range|:
literal|23
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT32
name|Uint32
decl_stmt|;
block|}
name|PCI_REG_PCIE_LINK_CAPABILITY2
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT16
name|TargetLinkSpeed
range|:
literal|4
decl_stmt|;
name|UINT16
name|EnterCompliance
range|:
literal|1
decl_stmt|;
name|UINT16
name|HardwareAutonomousSpeedDisable
range|:
literal|1
decl_stmt|;
name|UINT16
name|SelectableDeemphasis
range|:
literal|1
decl_stmt|;
name|UINT16
name|TransmitMargin
range|:
literal|3
decl_stmt|;
name|UINT16
name|EnterModifiedCompliance
range|:
literal|1
decl_stmt|;
name|UINT16
name|ComplianceSos
range|:
literal|1
decl_stmt|;
name|UINT16
name|CompliancePresetDeemphasis
range|:
literal|4
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT16
name|Uint16
decl_stmt|;
block|}
name|PCI_REG_PCIE_LINK_CONTROL2
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT16
name|CurrentDeemphasisLevel
range|:
literal|1
decl_stmt|;
name|UINT16
name|EqualizationComplete
range|:
literal|1
decl_stmt|;
name|UINT16
name|EqualizationPhase1Successful
range|:
literal|1
decl_stmt|;
name|UINT16
name|EqualizationPhase2Successful
range|:
literal|1
decl_stmt|;
name|UINT16
name|EqualizationPhase3Successful
range|:
literal|1
decl_stmt|;
name|UINT16
name|LinkEqualizationRequest
range|:
literal|1
decl_stmt|;
name|UINT16
name|Reserved
range|:
literal|10
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT16
name|Uint16
decl_stmt|;
block|}
name|PCI_REG_PCIE_LINK_STATUS2
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|EFI_PCI_CAPABILITY_HDR
name|Hdr
decl_stmt|;
name|PCI_REG_PCIE_CAPABILITY
name|Capability
decl_stmt|;
name|PCI_REG_PCIE_DEVICE_CAPABILITY
name|DeviceCapability
decl_stmt|;
name|PCI_REG_PCIE_DEVICE_CONTROL
name|DeviceControl
decl_stmt|;
name|PCI_REG_PCIE_DEVICE_STATUS
name|DeviceStatus
decl_stmt|;
name|PCI_REG_PCIE_LINK_CAPABILITY
name|LinkCapability
decl_stmt|;
name|PCI_REG_PCIE_LINK_CONTROL
name|LinkControl
decl_stmt|;
name|PCI_REG_PCIE_LINK_STATUS
name|LinkStatus
decl_stmt|;
name|PCI_REG_PCIE_SLOT_CAPABILITY
name|SlotCapability
decl_stmt|;
name|PCI_REG_PCIE_SLOT_CONTROL
name|SlotControl
decl_stmt|;
name|PCI_REG_PCIE_SLOT_STATUS
name|SlotStatus
decl_stmt|;
name|PCI_REG_PCIE_ROOT_CONTROL
name|RootControl
decl_stmt|;
name|PCI_REG_PCIE_ROOT_CAPABILITY
name|RootCapability
decl_stmt|;
name|PCI_REG_PCIE_ROOT_STATUS
name|RootStatus
decl_stmt|;
name|PCI_REG_PCIE_DEVICE_CAPABILITY2
name|DeviceCapability2
decl_stmt|;
name|PCI_REG_PCIE_DEVICE_CONTROL2
name|DeviceControl2
decl_stmt|;
name|UINT16
name|DeviceStatus2
decl_stmt|;
name|PCI_REG_PCIE_LINK_CAPABILITY2
name|LinkCapability2
decl_stmt|;
name|PCI_REG_PCIE_LINK_CONTROL2
name|LinkControl2
decl_stmt|;
name|PCI_REG_PCIE_LINK_STATUS2
name|LinkStatus2
decl_stmt|;
name|UINT32
name|SlotCapability2
decl_stmt|;
name|UINT16
name|SlotControl2
decl_stmt|;
name|UINT16
name|SlotStatus2
decl_stmt|;
block|}
name|PCI_CAPABILITY_PCIEXP
typedef|;
end_typedef

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_BASE_OFFSET
value|0x100
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_CONTROL_ARI_HIERARCHY
value|0x10
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_DEVICE_CAPABILITIES_2_OFFSET
value|0x24
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_DEVICE_CAPABILITIES_2_ARI_FORWARDING
value|0x20
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_DEVICE_CONTROL_2_OFFSET
value|0x28
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_DEVICE_CONTROL_2_ARI_FORWARDING
value|0x20
end_define

begin_comment
comment|//
end_comment

begin_comment
comment|// for SR-IOV
end_comment

begin_comment
comment|//
end_comment

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_ARI
value|0x0E
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_ATS
value|0x0F
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV
value|0x10
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_MRIOV
value|0x11
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT32
name|CapabilityHeader
decl_stmt|;
name|UINT32
name|Capability
decl_stmt|;
name|UINT16
name|Control
decl_stmt|;
name|UINT16
name|Status
decl_stmt|;
name|UINT16
name|InitialVFs
decl_stmt|;
name|UINT16
name|TotalVFs
decl_stmt|;
name|UINT16
name|NumVFs
decl_stmt|;
name|UINT8
name|FunctionDependencyLink
decl_stmt|;
name|UINT8
name|Reserved0
decl_stmt|;
name|UINT16
name|FirstVFOffset
decl_stmt|;
name|UINT16
name|VFStride
decl_stmt|;
name|UINT16
name|Reserved1
decl_stmt|;
name|UINT16
name|VFDeviceID
decl_stmt|;
name|UINT32
name|SupportedPageSize
decl_stmt|;
name|UINT32
name|SystemPageSize
decl_stmt|;
name|UINT32
name|VFBar
index|[
literal|6
index|]
decl_stmt|;
name|UINT32
name|VFMigrationStateArrayOffset
decl_stmt|;
block|}
name|SR_IOV_CAPABILITY_REGISTER
typedef|;
end_typedef

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_CAPABILITIES
value|0x04
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_CONTROL
value|0x08
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_STATUS
value|0x0A
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_INITIALVFS
value|0x0C
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_TOTALVFS
value|0x0E
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_NUMVFS
value|0x10
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_FUNCTION_DEPENDENCY_LINK
value|0x12
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_FIRSTVF
value|0x14
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_VFSTRIDE
value|0x16
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_VFDEVICEID
value|0x1A
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_SUPPORTED_PAGE_SIZE
value|0x1C
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_SYSTEM_PAGE_SIZE
value|0x20
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_BAR0
value|0x24
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_BAR1
value|0x28
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_BAR2
value|0x2C
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_BAR3
value|0x30
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_BAR4
value|0x34
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_BAR5
value|0x38
end_define

begin_define
define|#
directive|define
name|EFI_PCIE_CAPABILITY_ID_SRIOV_VF_MIGRATION_STATE
value|0x3C
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT32
name|CapabilityId
range|:
literal|16
decl_stmt|;
name|UINT32
name|CapabilityVersion
range|:
literal|4
decl_stmt|;
name|UINT32
name|NextCapabilityOffset
range|:
literal|12
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXP_EXT_HDR
value|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_ADVANCED_ERROR_REPORTING_ID
value|0x0001
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_ADVANCED_ERROR_REPORTING_VER1
value|0x1
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_ADVANCED_ERROR_REPORTING_VER2
value|0x2
end_define

begin_typedef
typedef|typedef
union|union
block|{
struct|struct
block|{
name|UINT32
name|Undefined
range|:
literal|1
decl_stmt|;
name|UINT32
name|Reserved
range|:
literal|3
decl_stmt|;
name|UINT32
name|DataLinkProtocolError
range|:
literal|1
decl_stmt|;
name|UINT32
name|SurpriseDownError
range|:
literal|1
decl_stmt|;
name|UINT32
name|Reserved2
range|:
literal|6
decl_stmt|;
name|UINT32
name|PoisonedTlp
range|:
literal|1
decl_stmt|;
name|UINT32
name|FlowControlProtocolError
range|:
literal|1
decl_stmt|;
name|UINT32
name|CompletionTimeout
range|:
literal|1
decl_stmt|;
name|UINT32
name|CompleterAbort
range|:
literal|1
decl_stmt|;
name|UINT32
name|UnexpectedCompletion
range|:
literal|1
decl_stmt|;
name|UINT32
name|ReceiverOverflow
range|:
literal|1
decl_stmt|;
name|UINT32
name|MalformedTlp
range|:
literal|1
decl_stmt|;
name|UINT32
name|EcrcError
range|:
literal|1
decl_stmt|;
name|UINT32
name|UnsupportedRequestError
range|:
literal|1
decl_stmt|;
name|UINT32
name|AcsVoilation
range|:
literal|1
decl_stmt|;
name|UINT32
name|UncorrectableInternalError
range|:
literal|1
decl_stmt|;
name|UINT32
name|McBlockedTlp
range|:
literal|1
decl_stmt|;
name|UINT32
name|AtomicOpEgressBlocked
range|:
literal|1
decl_stmt|;
name|UINT32
name|TlpPrefixBlockedError
range|:
literal|1
decl_stmt|;
name|UINT32
name|Reserved3
range|:
literal|6
decl_stmt|;
block|}
name|Bits
struct|;
name|UINT32
name|Uint32
decl_stmt|;
block|}
name|PCI_EXPRESS_REG_UNCORRECTABLE_ERROR
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|PCI_EXPRESS_REG_UNCORRECTABLE_ERROR
name|UncorrectableErrorStatus
decl_stmt|;
name|PCI_EXPRESS_REG_UNCORRECTABLE_ERROR
name|UncorrectableErrorMask
decl_stmt|;
name|PCI_EXPRESS_REG_UNCORRECTABLE_ERROR
name|UncorrectableErrorSeverity
decl_stmt|;
name|UINT32
name|CorrectableErrorStatus
decl_stmt|;
name|UINT32
name|CorrectableErrorMask
decl_stmt|;
name|UINT32
name|AdvancedErrorCapabilitiesAndControl
decl_stmt|;
name|UINT32
name|HeaderLog
index|[
literal|4
index|]
decl_stmt|;
name|UINT32
name|RootErrorCommand
decl_stmt|;
name|UINT32
name|RootErrorStatus
decl_stmt|;
name|UINT16
name|ErrorSourceIdentification
decl_stmt|;
name|UINT16
name|CorrectableErrorSourceIdentification
decl_stmt|;
name|UINT32
name|TlpPrefixLog
index|[
literal|4
index|]
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_ADVANCED_ERROR_REPORTING
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_VIRTUAL_CHANNEL_ID
value|0x0002
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_VIRTUAL_CHANNEL_MFVC
value|0x0009
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_VIRTUAL_CHANNEL_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT32
name|VcResourceCapability
range|:
literal|24
decl_stmt|;
name|UINT32
name|PortArbTableOffset
range|:
literal|8
decl_stmt|;
name|UINT32
name|VcResourceControl
decl_stmt|;
name|UINT16
name|Reserved1
decl_stmt|;
name|UINT16
name|VcResourceStatus
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_VIRTUAL_CHANNEL_VC
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT32
name|ExtendedVcCount
range|:
literal|3
decl_stmt|;
name|UINT32
name|PortVcCapability1
range|:
literal|29
decl_stmt|;
name|UINT32
name|PortVcCapability2
range|:
literal|24
decl_stmt|;
name|UINT32
name|VcArbTableOffset
range|:
literal|8
decl_stmt|;
name|UINT16
name|PortVcControl
decl_stmt|;
name|UINT16
name|PortVcStatus
decl_stmt|;
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_VIRTUAL_CHANNEL_VC
name|Capability
index|[
literal|1
index|]
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_VIRTUAL_CHANNEL_CAPABILITY
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_SERIAL_NUMBER_ID
value|0x0003
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_SERIAL_NUMBER_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT64
name|SerialNumber
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_SERIAL_NUMBER
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_LINK_DECLARATION_ID
value|0x0005
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_LINK_DECLARATION_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT32
name|ElementSelfDescription
decl_stmt|;
name|UINT32
name|Reserved
decl_stmt|;
name|UINT32
name|LinkEntry
index|[
literal|1
index|]
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_LINK_DECLARATION
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_LINK_DECLARATION_GET_LINK_COUNT
parameter_list|(
name|LINK_DECLARATION
parameter_list|)
value|(UINT8)(((LINK_DECLARATION->ElementSelfDescription)&0x0000ff00)>>8)
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_LINK_CONTROL_ID
value|0x0006
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_LINK_CONTROL_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT32
name|RootComplexLinkCapabilities
decl_stmt|;
name|UINT16
name|RootComplexLinkControl
decl_stmt|;
name|UINT16
name|RootComplexLinkStatus
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_INTERNAL_LINK_CONTROL
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_POWER_BUDGETING_ID
value|0x0004
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_POWER_BUDGETING_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT32
name|DataSelect
range|:
literal|8
decl_stmt|;
name|UINT32
name|Reserved
range|:
literal|24
decl_stmt|;
name|UINT32
name|Data
decl_stmt|;
name|UINT32
name|PowerBudgetCapability
range|:
literal|1
decl_stmt|;
name|UINT32
name|Reserved2
range|:
literal|7
decl_stmt|;
name|UINT32
name|Reserved3
range|:
literal|24
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_POWER_BUDGETING
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_ACS_EXTENDED_ID
value|0x000D
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_ACS_EXTENDED_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT16
name|AcsCapability
decl_stmt|;
name|UINT16
name|AcsControl
decl_stmt|;
name|UINT8
name|EgressControlVectorArray
index|[
literal|1
index|]
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_ACS_EXTENDED
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_ACS_EXTENDED_GET_EGRES_CONTROL
parameter_list|(
name|ACS_EXTENDED
parameter_list|)
value|(UINT8)(((ACS_EXTENDED->AcsCapability)&0x00000020))
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_ACS_EXTENDED_GET_EGRES_VECTOR_SIZE
parameter_list|(
name|ACS_EXTENDED
parameter_list|)
value|(UINT8)(((ACS_EXTENDED->AcsCapability)&0x0000FF00))
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_EVENT_COLLECTOR_ENDPOINT_ASSOCIATION_ID
value|0x0007
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_EVENT_COLLECTOR_ENDPOINT_ASSOCIATION_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT32
name|AssociationBitmap
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_EVENT_COLLECTOR_ENDPOINT_ASSOCIATION
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_MULTI_FUNCTION_VIRTUAL_CHANNEL_ID
value|0x0008
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_MULTI_FUNCTION_VIRTUAL_CHANNEL_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_VIRTUAL_CHANNEL_CAPABILITY
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_MULTI_FUNCTION_VIRTUAL_CHANNEL_CAPABILITY
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_VENDOR_SPECIFIC_ID
value|0x000B
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_VENDOR_SPECIFIC_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT32
name|VendorSpecificHeader
decl_stmt|;
name|UINT8
name|VendorSpecific
index|[
literal|1
index|]
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_VENDOR_SPECIFIC
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_VENDOR_SPECIFIC_GET_SIZE
parameter_list|(
name|VENDOR
parameter_list|)
value|(UINT16)(((VENDOR->VendorSpecificHeader)&0xFFF00000)>>20)
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_RCRB_HEADER_ID
value|0x000A
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_RCRB_HEADER_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT16
name|VendorId
decl_stmt|;
name|UINT16
name|DeviceId
decl_stmt|;
name|UINT32
name|RcrbCapabilities
decl_stmt|;
name|UINT32
name|RcrbControl
decl_stmt|;
name|UINT32
name|Reserved
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_RCRB_HEADER
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_MULTICAST_ID
value|0x0012
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_MULTICAST_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT16
name|MultiCastCapability
decl_stmt|;
name|UINT16
name|MulticastControl
decl_stmt|;
name|UINT64
name|McBaseAddress
decl_stmt|;
name|UINT64
name|McReceiveAddress
decl_stmt|;
name|UINT64
name|McBlockAll
decl_stmt|;
name|UINT64
name|McBlockUntranslated
decl_stmt|;
name|UINT64
name|McOverlayBar
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_MULTICAST
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_RESIZABLE_BAR_ID
value|0x0015
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_RESIZABLE_BAR_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT32
name|ResizableBarCapability
decl_stmt|;
name|UINT16
name|ResizableBarControl
decl_stmt|;
name|UINT16
name|Reserved
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_RESIZABLE_BAR_ENTRY
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_RESIZABLE_BAR_ENTRY
name|Capability
index|[
literal|1
index|]
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_RESIZABLE_BAR
typedef|;
end_typedef

begin_define
define|#
directive|define
name|GET_NUMBER_RESIZABLE_BARS
parameter_list|(
name|x
parameter_list|)
value|(((x->Capability[0].ResizableBarControl)& 0xE0)>> 5)
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_ARI_CAPABILITY_ID
value|0x000E
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_ARI_CAPABILITY_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT16
name|AriCapability
decl_stmt|;
name|UINT16
name|AriControl
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_ARI_CAPABILITY
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_DYNAMIC_POWER_ALLOCATION_ID
value|0x0016
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_DYNAMIC_POWER_ALLOCATION_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT32
name|DpaCapability
decl_stmt|;
name|UINT32
name|DpaLatencyIndicator
decl_stmt|;
name|UINT16
name|DpaStatus
decl_stmt|;
name|UINT16
name|DpaControl
decl_stmt|;
name|UINT8
name|DpaPowerAllocationArray
index|[
literal|1
index|]
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_DYNAMIC_POWER_ALLOCATION
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_DYNAMIC_POWER_ALLOCATION_GET_SUBSTATE_MAX
parameter_list|(
name|POWER
parameter_list|)
value|(UINT16)(((POWER->DpaCapability)&0x0000000F))
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_LATENCE_TOLERANCE_REPORTING_ID
value|0x0018
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_LATENCE_TOLERANCE_REPORTING_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT16
name|MaxSnoopLatency
decl_stmt|;
name|UINT16
name|MaxNoSnoopLatency
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_LATENCE_TOLERANCE_REPORTING
typedef|;
end_typedef

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_TPH_ID
value|0x0017
end_define

begin_define
define|#
directive|define
name|PCI_EXPRESS_EXTENDED_CAPABILITY_TPH_VER1
value|0x1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER
name|Header
decl_stmt|;
name|UINT32
name|TphRequesterCapability
decl_stmt|;
name|UINT32
name|TphRequesterControl
decl_stmt|;
name|UINT16
name|TphStTable
index|[
literal|1
index|]
decl_stmt|;
block|}
name|PCI_EXPRESS_EXTENDED_CAPABILITIES_TPH
typedef|;
end_typedef

begin_define
define|#
directive|define
name|GET_TPH_TABLE_SIZE
parameter_list|(
name|x
parameter_list|)
value|((x->TphRequesterCapability& 0x7FF0000)>>16) * sizeof(UINT16)
end_define

begin_pragma
pragma|#
directive|pragma
name|pack
name|(
name|)
end_pragma

begin_endif
endif|#
directive|endif
end_endif

end_unit

