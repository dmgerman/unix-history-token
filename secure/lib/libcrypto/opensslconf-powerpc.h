begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/* opensslconf.h */
end_comment

begin_comment
comment|/* WARNING: Generated automatically from opensslconf.h.in by Configure. */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* OpenSSL was configured with the following options: */
ifndef|#
directive|ifndef
name|OPENSSL_DOING_MAKEDEPEND
ifndef|#
directive|ifndef
name|OPENSSL_NO_EC_NISTP_64_GCC_128
define|#
directive|define
name|OPENSSL_NO_EC_NISTP_64_GCC_128
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_GMP
define|#
directive|define
name|OPENSSL_NO_GMP
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_JPAKE
define|#
directive|define
name|OPENSSL_NO_JPAKE
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_KRB5
define|#
directive|define
name|OPENSSL_NO_KRB5
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_LIBUNBOUND
define|#
directive|define
name|OPENSSL_NO_LIBUNBOUND
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_MD2
define|#
directive|define
name|OPENSSL_NO_MD2
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_SCTP
define|#
directive|define
name|OPENSSL_NO_SCTP
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_SSL_TRACE
define|#
directive|define
name|OPENSSL_NO_SSL_TRACE
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_SSL2
define|#
directive|define
name|OPENSSL_NO_SSL2
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_STORE
define|#
directive|define
name|OPENSSL_NO_STORE
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_UNIT_TEST
define|#
directive|define
name|OPENSSL_NO_UNIT_TEST
endif|#
directive|endif
endif|#
directive|endif
comment|/* OPENSSL_DOING_MAKEDEPEND */
ifndef|#
directive|ifndef
name|OPENSSL_THREADS
define|#
directive|define
name|OPENSSL_THREADS
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_ASM
define|#
directive|define
name|OPENSSL_NO_ASM
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_STATIC_ENGINE
define|#
directive|define
name|OPENSSL_NO_STATIC_ENGINE
endif|#
directive|endif
comment|/* The OPENSSL_NO_* macros are also defined as NO_* if the application    asks for it.  This is a transient feature that is provided for those    who haven't had the time to do the appropriate changes in their    applications.  */
ifdef|#
directive|ifdef
name|OPENSSL_ALGORITHM_DEFINES
if|#
directive|if
name|defined
argument_list|(
name|OPENSSL_NO_EC_NISTP_64_GCC_128
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|NO_EC_NISTP_64_GCC_128
argument_list|)
define|#
directive|define
name|NO_EC_NISTP_64_GCC_128
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|OPENSSL_NO_GMP
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|NO_GMP
argument_list|)
define|#
directive|define
name|NO_GMP
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|OPENSSL_NO_JPAKE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|NO_JPAKE
argument_list|)
define|#
directive|define
name|NO_JPAKE
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|OPENSSL_NO_KRB5
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|NO_KRB5
argument_list|)
define|#
directive|define
name|NO_KRB5
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|OPENSSL_NO_LIBUNBOUND
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|NO_LIBUNBOUND
argument_list|)
define|#
directive|define
name|NO_LIBUNBOUND
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|OPENSSL_NO_MD2
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|NO_MD2
argument_list|)
define|#
directive|define
name|NO_MD2
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|OPENSSL_NO_SCTP
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|NO_SCTP
argument_list|)
define|#
directive|define
name|NO_SCTP
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|OPENSSL_NO_SSL_TRACE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|NO_SSL_TRACE
argument_list|)
define|#
directive|define
name|NO_SSL_TRACE
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|OPENSSL_NO_SSL2
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|NO_SSL2
argument_list|)
define|#
directive|define
name|NO_SSL2
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|OPENSSL_NO_STORE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|NO_STORE
argument_list|)
define|#
directive|define
name|NO_STORE
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|OPENSSL_NO_UNIT_TEST
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|NO_UNIT_TEST
argument_list|)
define|#
directive|define
name|NO_UNIT_TEST
endif|#
directive|endif
endif|#
directive|endif
comment|/* crypto/opensslconf.h.in */
comment|/* Generate 80386 code? */
undef|#
directive|undef
name|I386_ONLY
if|#
directive|if
operator|!
operator|(
name|defined
argument_list|(
name|VMS
argument_list|)
operator|||
name|defined
argument_list|(
name|__VMS
argument_list|)
operator|)
comment|/* VMS uses logical names instead */
if|#
directive|if
name|defined
argument_list|(
name|HEADER_CRYPTLIB_H
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|OPENSSLDIR
argument_list|)
define|#
directive|define
name|ENGINESDIR
value|"/usr/lib/engines"
define|#
directive|define
name|OPENSSLDIR
value|"/etc/ssl"
endif|#
directive|endif
endif|#
directive|endif
undef|#
directive|undef
name|OPENSSL_UNISTD
define|#
directive|define
name|OPENSSL_UNISTD
value|<unistd.h>
undef|#
directive|undef
name|OPENSSL_EXPORT_VAR_AS_FUNCTION
if|#
directive|if
name|defined
argument_list|(
name|HEADER_IDEA_H
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|IDEA_INT
argument_list|)
define|#
directive|define
name|IDEA_INT
value|unsigned int
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|HEADER_MD2_H
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|MD2_INT
argument_list|)
define|#
directive|define
name|MD2_INT
value|unsigned int
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|HEADER_RC2_H
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|RC2_INT
argument_list|)
comment|/* I need to put in a mod for the alpha - eay */
define|#
directive|define
name|RC2_INT
value|unsigned int
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|HEADER_RC4_H
argument_list|)
if|#
directive|if
operator|!
name|defined
argument_list|(
name|RC4_INT
argument_list|)
comment|/* using int types make the structure larger but make the code faster  * on most boxes I have tested - up to %20 faster. */
comment|/*  * I don't know what does "most" mean, but declaring "int" is a must on:  * - Intel P6 because partial register stalls are very expensive;  * - elder Alpha because it lacks byte load/store instructions;  */
define|#
directive|define
name|RC4_INT
value|unsigned int
endif|#
directive|endif
if|#
directive|if
operator|!
name|defined
argument_list|(
name|RC4_CHUNK
argument_list|)
comment|/*  * This enables code handling data aligned at natural CPU word  * boundary. See crypto/rc4/rc4_enc.c for further details.  */
undef|#
directive|undef
name|RC4_CHUNK
endif|#
directive|endif
endif|#
directive|endif
if|#
directive|if
operator|(
name|defined
argument_list|(
name|HEADER_NEW_DES_H
argument_list|)
operator|||
name|defined
argument_list|(
name|HEADER_DES_H
argument_list|)
operator|)
operator|&&
operator|!
name|defined
argument_list|(
name|DES_LONG
argument_list|)
comment|/* If this is set to 'unsigned int' on a DEC Alpha, this gives about a  * %20 speed up (longs are 8 bytes, int's are 4). */
ifndef|#
directive|ifndef
name|DES_LONG
define|#
directive|define
name|DES_LONG
value|unsigned int
endif|#
directive|endif
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|HEADER_BN_H
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|CONFIG_HEADER_BN_H
argument_list|)
define|#
directive|define
name|CONFIG_HEADER_BN_H
ifdef|#
directive|ifdef
name|__powerpc64__
undef|#
directive|undef
name|BN_LLONG
else|#
directive|else
define|#
directive|define
name|BN_LLONG
endif|#
directive|endif
comment|/* Should we define BN_DIV2W here? */
comment|/* Only one for the following should be defined */
ifdef|#
directive|ifdef
name|__powerpc64__
define|#
directive|define
name|SIXTY_FOUR_BIT_LONG
undef|#
directive|undef
name|THIRTY_TWO_BIT
else|#
directive|else
undef|#
directive|undef
name|SIXTY_FOUR_BIT_LONG
define|#
directive|define
name|THIRTY_TWO_BIT
endif|#
directive|endif
undef|#
directive|undef
name|SIXTY_FOUR_BIT
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|HEADER_RC4_LOCL_H
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|CONFIG_HEADER_RC4_LOCL_H
argument_list|)
define|#
directive|define
name|CONFIG_HEADER_RC4_LOCL_H
comment|/* if this is defined data[i] is used instead of *data, this is a %20  * speedup on x86 */
define|#
directive|define
name|RC4_INDEX
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|HEADER_BF_LOCL_H
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|CONFIG_HEADER_BF_LOCL_H
argument_list|)
define|#
directive|define
name|CONFIG_HEADER_BF_LOCL_H
undef|#
directive|undef
name|BF_PTR
endif|#
directive|endif
comment|/* HEADER_BF_LOCL_H */
if|#
directive|if
name|defined
argument_list|(
name|HEADER_DES_LOCL_H
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|CONFIG_HEADER_DES_LOCL_H
argument_list|)
define|#
directive|define
name|CONFIG_HEADER_DES_LOCL_H
ifndef|#
directive|ifndef
name|DES_DEFAULT_OPTIONS
comment|/* the following is tweaked from a config script, that is why it is a  * protected undef/define */
ifndef|#
directive|ifndef
name|DES_PTR
define|#
directive|define
name|DES_PTR
endif|#
directive|endif
comment|/* This helps C compiler generate the correct code for multiple functional  * units.  It reduces register dependancies at the expense of 2 more  * registers */
ifndef|#
directive|ifndef
name|DES_RISC1
define|#
directive|define
name|DES_RISC1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|DES_RISC2
undef|#
directive|undef
name|DES_RISC2
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|DES_RISC1
argument_list|)
operator|&&
name|defined
argument_list|(
name|DES_RISC2
argument_list|)
error|#
directive|error
error|YOU SHOULD NOT HAVE BOTH DES_RISC1 AND DES_RISC2 DEFINED!!!!!
endif|#
directive|endif
comment|/* Unroll the inner loop, this sometimes helps, sometimes hinders.  * Very mucy CPU dependant */
ifndef|#
directive|ifndef
name|DES_UNROLL
define|#
directive|define
name|DES_UNROLL
endif|#
directive|endif
comment|/* These default values were supplied by  * Peter Gutman<pgut001@cs.auckland.ac.nz>  * They are only used if nothing else has been defined */
if|#
directive|if
operator|!
name|defined
argument_list|(
name|DES_PTR
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|DES_RISC1
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|DES_RISC2
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|DES_UNROLL
argument_list|)
comment|/* Special defines which change the way the code is built depending on the    CPU and OS.  For SGI machines you can use _MIPS_SZLONG (32 or 64) to find    even newer MIPS CPU's, but at the moment one size fits all for    optimization options.  Older Sparc's work better with only UNROLL, but    there's no way to tell at compile time what it is you're running on */
if|#
directive|if
name|defined
argument_list|(
name|sun
argument_list|)
comment|/* Newer Sparc's */
define|#
directive|define
name|DES_PTR
define|#
directive|define
name|DES_RISC1
define|#
directive|define
name|DES_UNROLL
elif|#
directive|elif
name|defined
argument_list|(
name|__ultrix
argument_list|)
comment|/* Older MIPS */
define|#
directive|define
name|DES_PTR
define|#
directive|define
name|DES_RISC2
define|#
directive|define
name|DES_UNROLL
elif|#
directive|elif
name|defined
argument_list|(
name|__osf1__
argument_list|)
comment|/* Alpha */
define|#
directive|define
name|DES_PTR
define|#
directive|define
name|DES_RISC2
elif|#
directive|elif
name|defined
argument_list|(
name|_AIX
argument_list|)
comment|/* RS6000 */
comment|/* Unknown */
elif|#
directive|elif
name|defined
argument_list|(
name|__hpux
argument_list|)
comment|/* HP-PA */
comment|/* Unknown */
elif|#
directive|elif
name|defined
argument_list|(
name|__aux
argument_list|)
comment|/* 68K */
comment|/* Unknown */
elif|#
directive|elif
name|defined
argument_list|(
name|__dgux
argument_list|)
comment|/* 88K (but P6 in latest boxes) */
define|#
directive|define
name|DES_UNROLL
elif|#
directive|elif
name|defined
argument_list|(
name|__sgi
argument_list|)
comment|/* Newer MIPS */
define|#
directive|define
name|DES_PTR
define|#
directive|define
name|DES_RISC2
define|#
directive|define
name|DES_UNROLL
elif|#
directive|elif
name|defined
argument_list|(
name|i386
argument_list|)
operator|||
name|defined
argument_list|(
name|__i386__
argument_list|)
comment|/* x86 boxes, should be gcc */
define|#
directive|define
name|DES_PTR
define|#
directive|define
name|DES_RISC1
define|#
directive|define
name|DES_UNROLL
endif|#
directive|endif
comment|/* Systems-specific speed defines */
endif|#
directive|endif
endif|#
directive|endif
comment|/* DES_DEFAULT_OPTIONS */
endif|#
directive|endif
comment|/* HEADER_DES_LOCL_H */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

end_unit

