begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* lib/des/des.h */
end_comment

begin_comment
comment|/* Copyright (C) 1995-1996 Eric Young (eay@mincom.oz.au)  * All rights reserved.  *   * This file is part of an SSL implementation written  * by Eric Young (eay@mincom.oz.au).  * The implementation was written so as to conform with Netscapes SSL  * specification.  This library and applications are  * FREE FOR COMMERCIAL AND NON-COMMERCIAL USE  * as long as the following conditions are aheared to.  *   * Copyright remains Eric Young's, and as such any Copyright notices in  * the code are not to be removed.  If this code is used in a product,  * Eric Young should be given attribution as the author of the parts used.  * This can be in the form of a textual message at program startup or  * in documentation (online or textual) provided with the package.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *    This product includes software developed by Eric Young (eay@mincom.oz.au)  *   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *   * The licence and distribution terms for any publically available version or  * derivative of this code cannot be changed.  i.e. this code cannot simply be  * copied and put under another distribution licence  * [including the GNU Public Licence.]  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HEADER_DES_H
end_ifndef

begin_define
define|#
directive|define
name|HEADER_DES_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
include|#
directive|include
file|<stdio.h>
comment|/* If this is set to 'unsigned int' on a DEC Alpha, this gives about a  * %20 speed up (longs are 8 bytes, int's are 4). */
ifndef|#
directive|ifndef
name|DES_LONG
define|#
directive|define
name|DES_LONG
value|unsigned long
endif|#
directive|endif
typedef|typedef
name|unsigned
name|char
name|des_cblock
index|[
literal|8
index|]
typedef|;
typedef|typedef
struct|struct
name|des_ks_struct
block|{
union|union
block|{
name|des_cblock
name|_
decl_stmt|;
comment|/* make sure things are correct size on machines with 		 * 8 byte longs */
name|DES_LONG
name|pad
index|[
literal|2
index|]
decl_stmt|;
block|}
name|ks
union|;
undef|#
directive|undef
name|_
define|#
directive|define
name|_
value|ks._
block|}
name|des_key_schedule
index|[
literal|16
index|]
typedef|;
define|#
directive|define
name|DES_KEY_SZ
value|(sizeof(des_cblock))
define|#
directive|define
name|DES_SCHEDULE_SZ
value|(sizeof(des_key_schedule))
define|#
directive|define
name|DES_ENCRYPT
value|1
define|#
directive|define
name|DES_DECRYPT
value|0
define|#
directive|define
name|DES_CBC_MODE
value|0
define|#
directive|define
name|DES_PCBC_MODE
value|1
define|#
directive|define
name|des_ecb2_encrypt
parameter_list|(
name|i
parameter_list|,
name|o
parameter_list|,
name|k1
parameter_list|,
name|k2
parameter_list|,
name|e
parameter_list|)
define|\
value|des_ecb3_encrypt((i),(o),(k1),(k2),(k1),(e))
define|#
directive|define
name|des_ede2_cbc_encrypt
parameter_list|(
name|i
parameter_list|,
name|o
parameter_list|,
name|l
parameter_list|,
name|k1
parameter_list|,
name|k2
parameter_list|,
name|iv
parameter_list|,
name|e
parameter_list|)
define|\
value|des_ede3_cbc_encrypt((i),(o),(l),(k1),(k2),(k1),(iv),(e))
define|#
directive|define
name|des_ede2_cfb64_encrypt
parameter_list|(
name|i
parameter_list|,
name|o
parameter_list|,
name|l
parameter_list|,
name|k1
parameter_list|,
name|k2
parameter_list|,
name|iv
parameter_list|,
name|n
parameter_list|,
name|e
parameter_list|)
define|\
value|des_ede3_cfb64_encrypt((i),(o),(l),(k1),(k2),(k1),(iv),(n),(e))
define|#
directive|define
name|des_ede2_ofb64_encrypt
parameter_list|(
name|i
parameter_list|,
name|o
parameter_list|,
name|l
parameter_list|,
name|k1
parameter_list|,
name|k2
parameter_list|,
name|iv
parameter_list|,
name|n
parameter_list|)
define|\
value|des_ede3_ofb64_encrypt((i),(o),(l),(k1),(k2),(k1),(iv),(n))
define|#
directive|define
name|C_Block
value|des_cblock
define|#
directive|define
name|Key_schedule
value|des_key_schedule
ifdef|#
directive|ifdef
name|KERBEROS
define|#
directive|define
name|ENCRYPT
value|DES_ENCRYPT
define|#
directive|define
name|DECRYPT
value|DES_DECRYPT
endif|#
directive|endif
define|#
directive|define
name|KEY_SZ
value|DES_KEY_SZ
define|#
directive|define
name|string_to_key
value|des_string_to_key
define|#
directive|define
name|read_pw_string
value|des_read_pw_string
define|#
directive|define
name|random_key
value|des_random_key
define|#
directive|define
name|pcbc_encrypt
value|des_pcbc_encrypt
define|#
directive|define
name|set_key
value|des_set_key
define|#
directive|define
name|key_sched
value|des_key_sched
define|#
directive|define
name|ecb_encrypt
value|des_ecb_encrypt
define|#
directive|define
name|cbc_encrypt
value|des_cbc_encrypt
define|#
directive|define
name|ncbc_encrypt
value|des_ncbc_encrypt
define|#
directive|define
name|xcbc_encrypt
value|des_xcbc_encrypt
define|#
directive|define
name|cbc_cksum
value|des_cbc_cksum
define|#
directive|define
name|quad_cksum
value|des_quad_cksum
comment|/* For compatibility with the MIT lib - eay 20/05/92 */
typedef|typedef
name|des_key_schedule
name|bit_64
typedef|;
define|#
directive|define
name|des_fixup_key_parity
value|des_set_odd_parity
define|#
directive|define
name|des_check_key_parity
value|check_parity
specifier|extern
name|int
name|des_check_key
decl_stmt|;
comment|/* defaults to false */
specifier|extern
name|int
name|des_rw_mode
decl_stmt|;
comment|/* defaults to DES_PCBC_MODE */
comment|/* The next line is used to disable full ANSI prototypes, if your  * compiler has problems with the prototypes, make sure this line always  * evaluates to true :-) */
if|#
directive|if
name|defined
argument_list|(
name|MSDOS
argument_list|)
operator|||
name|defined
argument_list|(
name|__STDC__
argument_list|)
undef|#
directive|undef
name|NOPROTO
endif|#
directive|endif
ifndef|#
directive|ifndef
name|NOPROTO
name|char
modifier|*
name|des_options
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|des_ecb3_encrypt
parameter_list|(
name|des_cblock
modifier|*
name|input
parameter_list|,
name|des_cblock
modifier|*
name|output
parameter_list|,
name|des_key_schedule
name|ks1
parameter_list|,
name|des_key_schedule
name|ks2
parameter_list|,
name|des_key_schedule
name|ks3
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|DES_LONG
name|des_cbc_cksum
parameter_list|(
name|des_cblock
modifier|*
name|input
parameter_list|,
name|des_cblock
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|schedule
parameter_list|,
name|des_cblock
modifier|*
name|ivec
parameter_list|)
function_decl|;
name|void
name|des_cbc_encrypt
parameter_list|(
name|des_cblock
modifier|*
name|input
parameter_list|,
name|des_cblock
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|schedule
parameter_list|,
name|des_cblock
modifier|*
name|ivec
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|des_ncbc_encrypt
parameter_list|(
name|des_cblock
modifier|*
name|input
parameter_list|,
name|des_cblock
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|schedule
parameter_list|,
name|des_cblock
modifier|*
name|ivec
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|des_xcbc_encrypt
parameter_list|(
name|des_cblock
modifier|*
name|input
parameter_list|,
name|des_cblock
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|schedule
parameter_list|,
name|des_cblock
modifier|*
name|ivec
parameter_list|,
name|des_cblock
modifier|*
name|inw
parameter_list|,
name|des_cblock
modifier|*
name|outw
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|des_3cbc_encrypt
parameter_list|(
name|des_cblock
modifier|*
name|input
parameter_list|,
name|des_cblock
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|sk1
parameter_list|,
name|des_key_schedule
name|sk2
parameter_list|,
name|des_cblock
modifier|*
name|ivec1
parameter_list|,
name|des_cblock
modifier|*
name|ivec2
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|des_cfb_encrypt
parameter_list|(
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|int
name|numbits
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|schedule
parameter_list|,
name|des_cblock
modifier|*
name|ivec
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|des_ecb_encrypt
parameter_list|(
name|des_cblock
modifier|*
name|input
parameter_list|,
name|des_cblock
modifier|*
name|output
parameter_list|,
name|des_key_schedule
name|ks
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|des_encrypt
parameter_list|(
name|DES_LONG
modifier|*
name|data
parameter_list|,
name|des_key_schedule
name|ks
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|des_encrypt2
parameter_list|(
name|DES_LONG
modifier|*
name|data
parameter_list|,
name|des_key_schedule
name|ks
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|des_ede3_cbc_encrypt
parameter_list|(
name|des_cblock
modifier|*
name|input
parameter_list|,
name|des_cblock
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|ks1
parameter_list|,
name|des_key_schedule
name|ks2
parameter_list|,
name|des_key_schedule
name|ks3
parameter_list|,
name|des_cblock
modifier|*
name|ivec
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|des_ede3_cfb64_encrypt
parameter_list|(
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|ks1
parameter_list|,
name|des_key_schedule
name|ks2
parameter_list|,
name|des_key_schedule
name|ks3
parameter_list|,
name|des_cblock
modifier|*
name|ivec
parameter_list|,
name|int
modifier|*
name|num
parameter_list|,
name|int
name|encrypt
parameter_list|)
function_decl|;
name|void
name|des_ede3_ofb64_encrypt
parameter_list|(
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|ks1
parameter_list|,
name|des_key_schedule
name|ks2
parameter_list|,
name|des_key_schedule
name|ks3
parameter_list|,
name|des_cblock
modifier|*
name|ivec
parameter_list|,
name|int
modifier|*
name|num
parameter_list|)
function_decl|;
name|int
name|des_enc_read
parameter_list|(
name|int
name|fd
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|int
name|len
parameter_list|,
name|des_key_schedule
name|sched
parameter_list|,
name|des_cblock
modifier|*
name|iv
parameter_list|)
function_decl|;
name|int
name|des_enc_write
parameter_list|(
name|int
name|fd
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|int
name|len
parameter_list|,
name|des_key_schedule
name|sched
parameter_list|,
name|des_cblock
modifier|*
name|iv
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|PERL5
name|char
modifier|*
name|des_crypt
parameter_list|(
specifier|const
name|char
modifier|*
name|buf
parameter_list|,
specifier|const
name|char
modifier|*
name|salt
parameter_list|)
function_decl|;
else|#
directive|else
comment|/* some stupid compilers complain because I have declared char instead  * of const char */
ifdef|#
directive|ifdef
name|HEADER_DES_LOCL_H
name|char
modifier|*
name|crypt
parameter_list|(
specifier|const
name|char
modifier|*
name|buf
parameter_list|,
specifier|const
name|char
modifier|*
name|salt
parameter_list|)
function_decl|;
else|#
directive|else
name|char
modifier|*
name|crypt
parameter_list|()
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
name|void
name|des_ofb_encrypt
parameter_list|(
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|int
name|numbits
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|schedule
parameter_list|,
name|des_cblock
modifier|*
name|ivec
parameter_list|)
function_decl|;
name|void
name|des_pcbc_encrypt
parameter_list|(
name|des_cblock
modifier|*
name|input
parameter_list|,
name|des_cblock
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|schedule
parameter_list|,
name|des_cblock
modifier|*
name|ivec
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|DES_LONG
name|des_quad_cksum
parameter_list|(
name|des_cblock
modifier|*
name|input
parameter_list|,
name|des_cblock
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|int
name|out_count
parameter_list|,
name|des_cblock
modifier|*
name|seed
parameter_list|)
function_decl|;
name|void
name|des_random_seed
parameter_list|(
name|des_cblock
name|key
parameter_list|)
function_decl|;
name|void
name|des_random_key
parameter_list|(
name|des_cblock
name|ret
parameter_list|)
function_decl|;
name|int
name|des_read_password
parameter_list|(
name|des_cblock
modifier|*
name|key
parameter_list|,
name|char
modifier|*
name|prompt
parameter_list|,
name|int
name|verify
parameter_list|)
function_decl|;
name|int
name|des_read_2passwords
parameter_list|(
name|des_cblock
modifier|*
name|key1
parameter_list|,
name|des_cblock
modifier|*
name|key2
parameter_list|,
name|char
modifier|*
name|prompt
parameter_list|,
name|int
name|verify
parameter_list|)
function_decl|;
name|int
name|des_read_pw_string
parameter_list|(
name|char
modifier|*
name|buf
parameter_list|,
name|int
name|length
parameter_list|,
name|char
modifier|*
name|prompt
parameter_list|,
name|int
name|verify
parameter_list|)
function_decl|;
name|void
name|des_set_odd_parity
parameter_list|(
name|des_cblock
modifier|*
name|key
parameter_list|)
function_decl|;
name|int
name|des_is_weak_key
parameter_list|(
name|des_cblock
modifier|*
name|key
parameter_list|)
function_decl|;
name|int
name|des_set_key
parameter_list|(
name|des_cblock
modifier|*
name|key
parameter_list|,
name|des_key_schedule
name|schedule
parameter_list|)
function_decl|;
name|int
name|des_key_sched
parameter_list|(
name|des_cblock
modifier|*
name|key
parameter_list|,
name|des_key_schedule
name|schedule
parameter_list|)
function_decl|;
name|void
name|des_string_to_key
parameter_list|(
name|char
modifier|*
name|str
parameter_list|,
name|des_cblock
modifier|*
name|key
parameter_list|)
function_decl|;
name|void
name|des_string_to_2keys
parameter_list|(
name|char
modifier|*
name|str
parameter_list|,
name|des_cblock
modifier|*
name|key1
parameter_list|,
name|des_cblock
modifier|*
name|key2
parameter_list|)
function_decl|;
name|void
name|des_cfb64_encrypt
parameter_list|(
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|schedule
parameter_list|,
name|des_cblock
modifier|*
name|ivec
parameter_list|,
name|int
modifier|*
name|num
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|des_ofb64_encrypt
parameter_list|(
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|long
name|length
parameter_list|,
name|des_key_schedule
name|schedule
parameter_list|,
name|des_cblock
modifier|*
name|ivec
parameter_list|,
name|int
modifier|*
name|num
parameter_list|)
function_decl|;
comment|/* Extra functions from Mark Murray<mark@grondar.za> */
name|void
name|des_cblock_print_file
parameter_list|(
name|des_cblock
modifier|*
name|cb
parameter_list|,
name|FILE
modifier|*
name|fp
parameter_list|)
function_decl|;
comment|/* The following functions are not in the normal unix build or the  * SSLeay build.  When using the SSLeay build, use RAND_seed()  * and RAND_bytes() instead. */
name|int
name|des_new_random_key
parameter_list|(
name|des_cblock
modifier|*
name|key
parameter_list|)
function_decl|;
name|void
name|des_init_random_number_generator
parameter_list|(
name|des_cblock
modifier|*
name|key
parameter_list|)
function_decl|;
name|void
name|des_set_random_generator_seed
parameter_list|(
name|des_cblock
modifier|*
name|key
parameter_list|)
function_decl|;
name|void
name|des_set_sequence_number
parameter_list|(
name|des_cblock
name|new_sequence_number
parameter_list|)
function_decl|;
name|void
name|des_generate_random_block
parameter_list|(
name|des_cblock
modifier|*
name|block
parameter_list|)
function_decl|;
else|#
directive|else
name|char
modifier|*
name|des_options
parameter_list|()
function_decl|;
name|void
name|des_ecb3_encrypt
parameter_list|()
function_decl|;
name|DES_LONG
name|des_cbc_cksum
parameter_list|()
function_decl|;
name|void
name|des_cbc_encrypt
parameter_list|()
function_decl|;
name|void
name|des_ncbc_encrypt
parameter_list|()
function_decl|;
name|void
name|des_xcbc_encrypt
parameter_list|()
function_decl|;
name|void
name|des_3cbc_encrypt
parameter_list|()
function_decl|;
name|void
name|des_cfb_encrypt
parameter_list|()
function_decl|;
name|void
name|des_ede3_cfb64_encrypt
parameter_list|()
function_decl|;
name|void
name|des_ede3_ofb64_encrypt
parameter_list|()
function_decl|;
name|void
name|des_ecb_encrypt
parameter_list|()
function_decl|;
name|void
name|des_encrypt
parameter_list|()
function_decl|;
name|void
name|des_encrypt2
parameter_list|()
function_decl|;
name|void
name|des_ede3_cbc_encrypt
parameter_list|()
function_decl|;
name|int
name|des_enc_read
parameter_list|()
function_decl|;
name|int
name|des_enc_write
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|PERL5
name|char
modifier|*
name|des_crypt
parameter_list|()
function_decl|;
else|#
directive|else
name|char
modifier|*
name|crypt
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|des_ofb_encrypt
parameter_list|()
function_decl|;
name|void
name|des_pcbc_encrypt
parameter_list|()
function_decl|;
name|DES_LONG
name|des_quad_cksum
parameter_list|()
function_decl|;
name|void
name|des_random_seed
parameter_list|()
function_decl|;
name|void
name|des_random_key
parameter_list|()
function_decl|;
name|int
name|des_read_password
parameter_list|()
function_decl|;
name|int
name|des_read_2passwords
parameter_list|()
function_decl|;
name|int
name|des_read_pw_string
parameter_list|()
function_decl|;
name|void
name|des_set_odd_parity
parameter_list|()
function_decl|;
name|int
name|des_is_weak_key
parameter_list|()
function_decl|;
name|int
name|des_set_key
parameter_list|()
function_decl|;
name|int
name|des_key_sched
parameter_list|()
function_decl|;
name|void
name|des_string_to_key
parameter_list|()
function_decl|;
name|void
name|des_string_to_2keys
parameter_list|()
function_decl|;
name|void
name|des_cfb64_encrypt
parameter_list|()
function_decl|;
name|void
name|des_ofb64_encrypt
parameter_list|()
function_decl|;
comment|/* Extra functions from Mark Murray<mark@grondar.za> */
name|void
name|des_cblock_print_file
parameter_list|()
function_decl|;
comment|/* The following functions are not in the normal unix build or the  * SSLeay build.  When using the SSLeay build, use RAND_seed()  * and RAND_bytes() instead. */
ifdef|#
directive|ifdef
name|FreeBSD
name|int
name|des_new_random_key
parameter_list|()
function_decl|;
name|void
name|des_init_random_number_generator
parameter_list|()
function_decl|;
name|void
name|des_set_random_generator_seed
parameter_list|()
function_decl|;
name|void
name|des_set_sequence_number
parameter_list|()
function_decl|;
name|void
name|des_generate_random_block
parameter_list|()
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

