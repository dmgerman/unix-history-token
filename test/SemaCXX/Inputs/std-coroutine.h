begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// RUN: %clang_cc1 -triple x86_64-apple-darwin9 %s -std=c++14 -fcoroutines-ts -fsyntax-only -Wignored-qualifiers -Wno-error=return-type -verify -fblocks -Wno-unreachable-code -Wno-unused-value
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|STD_COROUTINE_H
end_ifndef

begin_define
define|#
directive|define
name|STD_COROUTINE_H
end_define

begin_decl_stmt
name|namespace
name|std
block|{
name|namespace
name|experimental
block|{
name|template
operator|<
name|class
name|Ret
operator|,
name|typename
operator|...
name|T
operator|>
expr|struct
name|coroutine_traits
block|{
name|using
name|promise_type
operator|=
name|typename
name|Ret
operator|::
name|promise_type
block|; }
expr_stmt|;
name|template
operator|<
name|class
name|Promise
operator|=
name|void
operator|>
expr|struct
name|coroutine_handle
block|{
specifier|static
name|coroutine_handle
name|from_address
argument_list|(
name|void
operator|*
argument_list|)
block|; }
expr_stmt|;
name|template
operator|<
operator|>
expr|struct
name|coroutine_handle
operator|<
name|void
operator|>
block|{
name|template
operator|<
name|class
name|PromiseType
operator|>
name|coroutine_handle
argument_list|(
name|coroutine_handle
operator|<
name|PromiseType
operator|>
argument_list|)
block|;
specifier|static
name|coroutine_handle
name|from_address
argument_list|(
name|void
operator|*
argument_list|)
block|; }
expr_stmt|;
struct|struct
name|suspend_always
block|{
name|bool
name|await_ready
parameter_list|()
block|{
return|return
name|false
return|;
block|}
name|void
name|await_suspend
argument_list|(
name|coroutine_handle
operator|<
operator|>
argument_list|)
block|{}
name|void
name|await_resume
parameter_list|()
block|{}
block|}
struct|;
struct|struct
name|suspend_never
block|{
name|bool
name|await_ready
parameter_list|()
block|{
return|return
name|true
return|;
block|}
name|void
name|await_suspend
argument_list|(
name|coroutine_handle
operator|<
operator|>
argument_list|)
block|{}
name|void
name|await_resume
parameter_list|()
block|{}
block|}
struct|;
block|}
comment|// namespace experimental
block|}
end_decl_stmt

begin_comment
comment|// namespace std
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// STD_COROUTINE_H
end_comment

end_unit

