begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// A lightweight class, with pointer-like methods, that contains an int
end_comment

begin_struct
struct|struct
name|X
block|{
name|int
name|i_
decl_stmt|;
name|constexpr
specifier|const
name|int
operator|&
name|operator
operator|*
operator|(
operator|)
specifier|const
block|{
return|return
name|i_
return|;
block|}
name|constexpr
name|int
modifier|&
name|operator
modifier|*
parameter_list|()
block|{
return|return
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|get
argument_list|()
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|get
parameter_list|()
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|operator
operator|->
expr|(
block|)
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|operator
operator|->
decl|(
struct|)
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|X
argument_list|(
name|int
name|i
argument_list|)
range|:
name|i_
argument_list|(
argument|i
argument_list|)
block|{}
end_struct

begin_struct
unit|};
struct|struct
name|XWithImplicitIntStarConversion
block|{
name|int
name|i_
decl_stmt|;
name|constexpr
specifier|const
name|int
operator|&
name|operator
operator|*
operator|(
operator|)
specifier|const
block|{
return|return
name|i_
return|;
block|}
name|constexpr
name|int
modifier|&
name|operator
modifier|*
parameter_list|()
block|{
return|return
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|get
argument_list|()
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|get
parameter_list|()
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|operator
operator|->
expr|(
block|)
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|operator
operator|->
decl|(
struct|)
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|operator
name|int
modifier|*
argument_list|()
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|XWithImplicitIntStarConversion
argument_list|(
name|int
name|i
argument_list|)
range|:
name|i_
argument_list|(
argument|i
argument_list|)
block|{}
end_struct

begin_struct
unit|};
struct|struct
name|XWithImplicitConstIntStarConversion
block|{
name|int
name|i_
decl_stmt|;
name|constexpr
specifier|const
name|int
operator|&
name|operator
operator|*
operator|(
operator|)
specifier|const
block|{
return|return
name|i_
return|;
block|}
name|constexpr
name|int
modifier|&
name|operator
modifier|*
parameter_list|()
block|{
return|return
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|get
argument_list|()
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|get
parameter_list|()
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|operator
operator|->
expr|(
block|)
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|operator
operator|->
decl|(
struct|)
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|operator
decl|const
name|int
modifier|*
argument_list|()
decl|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|XWithImplicitConstIntStarConversion
argument_list|(
name|int
name|i
argument_list|)
range|:
name|i_
argument_list|(
argument|i
argument_list|)
block|{}
end_struct

begin_struct
unit|};
struct|struct
name|ExplicitX
block|{
name|int
name|i_
decl_stmt|;
name|constexpr
specifier|const
name|int
operator|&
name|operator
operator|*
operator|(
operator|)
specifier|const
block|{
return|return
name|i_
return|;
block|}
name|constexpr
name|int
modifier|&
name|operator
modifier|*
parameter_list|()
block|{
return|return
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|get
argument_list|()
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|get
parameter_list|()
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|operator
operator|->
expr|(
block|)
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|operator
operator|->
decl|(
struct|)
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|explicit
name|ExplicitX
argument_list|(
name|int
name|i
argument_list|)
range|:
name|i_
argument_list|(
argument|i
argument_list|)
block|{}
end_struct

begin_struct
unit|};
struct|struct
name|MoveConstructibleFromX
block|{
name|int
name|i_
decl_stmt|;
name|constexpr
specifier|const
name|int
operator|&
name|operator
operator|*
operator|(
operator|)
specifier|const
block|{
return|return
name|i_
return|;
block|}
name|constexpr
name|int
modifier|&
name|operator
modifier|*
parameter_list|()
block|{
return|return
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|get
argument_list|()
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|get
parameter_list|()
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|operator
operator|->
expr|(
block|)
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|operator
operator|->
decl|(
struct|)
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|MoveConstructibleFromX
argument_list|(
name|int
name|i
argument_list|)
range|:
name|i_
argument_list|(
argument|i
argument_list|)
block|{}
name|constexpr
name|MoveConstructibleFromX
argument_list|(
name|X
operator|&&
name|x
argument_list|)
operator|:
name|i_
argument_list|(
argument|x.i_
argument_list|)
block|{}
end_struct

begin_struct
unit|};
struct|struct
name|ExplicitMoveConstructibleFromX
block|{
name|int
name|i_
decl_stmt|;
name|constexpr
specifier|const
name|int
operator|&
name|operator
operator|*
operator|(
operator|)
specifier|const
block|{
return|return
name|i_
return|;
block|}
name|constexpr
name|int
modifier|&
name|operator
modifier|*
parameter_list|()
block|{
return|return
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|get
argument_list|()
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|get
parameter_list|()
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|operator
operator|->
expr|(
block|)
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|operator
operator|->
decl|(
struct|)
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|ExplicitMoveConstructibleFromX
argument_list|(
name|int
name|i
argument_list|)
range|:
name|i_
argument_list|(
argument|i
argument_list|)
block|{}
name|constexpr
name|explicit
name|ExplicitMoveConstructibleFromX
argument_list|(
name|X
operator|&&
name|x
argument_list|)
operator|:
name|i_
argument_list|(
argument|x.i_
argument_list|)
block|{}
end_struct

begin_struct
unit|};
struct|struct
name|CopyConstructibleFromX
block|{
name|int
name|i_
decl_stmt|;
name|constexpr
specifier|const
name|int
operator|&
name|operator
operator|*
operator|(
operator|)
specifier|const
block|{
return|return
name|i_
return|;
block|}
name|constexpr
name|int
modifier|&
name|operator
modifier|*
parameter_list|()
block|{
return|return
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|get
argument_list|()
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|get
parameter_list|()
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|operator
operator|->
expr|(
block|)
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|operator
operator|->
decl|(
struct|)
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|CopyConstructibleFromX
argument_list|(
name|int
name|i
argument_list|)
range|:
name|i_
argument_list|(
argument|i
argument_list|)
block|{}
name|constexpr
name|CopyConstructibleFromX
argument_list|(
specifier|const
name|X
operator|&
name|x
argument_list|)
operator|:
name|i_
argument_list|(
argument|x.i_
argument_list|)
block|{}
end_struct

begin_struct
unit|};
struct|struct
name|ExplicitCopyConstructibleFromX
block|{
name|int
name|i_
decl_stmt|;
name|constexpr
specifier|const
name|int
operator|&
name|operator
operator|*
operator|(
operator|)
specifier|const
block|{
return|return
name|i_
return|;
block|}
name|constexpr
name|int
modifier|&
name|operator
modifier|*
parameter_list|()
block|{
return|return
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|get
argument_list|()
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|get
parameter_list|()
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
specifier|const
name|int
operator|*
name|operator
operator|->
expr|(
block|)
specifier|const
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|int
modifier|*
name|operator
operator|->
decl|(
struct|)
block|{
return|return
operator|&
name|i_
return|;
block|}
name|constexpr
name|ExplicitCopyConstructibleFromX
argument_list|(
name|int
name|i
argument_list|)
range|:
name|i_
argument_list|(
argument|i
argument_list|)
block|{}
name|constexpr
name|explicit
name|ExplicitCopyConstructibleFromX
argument_list|(
specifier|const
name|X
operator|&
name|x
argument_list|)
operator|:
name|i_
argument_list|(
argument|x.i_
argument_list|)
block|{}
end_struct

unit|};
end_unit

