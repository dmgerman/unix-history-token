begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_include
include|#
directive|include
file|<mach/mach_time.h>
end_include

begin_include
include|#
directive|include
file|<stdint.h>
end_include

begin_include
include|#
directive|include
file|<stdlib.h>
end_include

begin_function
name|double
name|intervalInCycles
parameter_list|(
name|uint64_t
name|startTime
parameter_list|,
name|uint64_t
name|endTime
parameter_list|)
block|{
name|uint64_t
name|rawTime
init|=
name|endTime
operator|-
name|startTime
decl_stmt|;
specifier|static
name|double
name|conversion
init|=
literal|0.0
decl_stmt|;
if|if
condition|(
literal|0.0
operator|==
name|conversion
condition|)
block|{
name|mach_timebase_info_data_t
name|info
decl_stmt|;
name|kern_return_t
name|err
init|=
name|mach_timebase_info
argument_list|(
operator|&
name|info
argument_list|)
decl_stmt|;
if|if
condition|(
literal|0
operator|!=
name|err
condition|)
return|return
literal|0
return|;
name|uint64_t
name|freq
init|=
literal|0
decl_stmt|;
name|size_t
name|freqSize
init|=
sizeof|sizeof
argument_list|(
name|freq
argument_list|)
decl_stmt|;
name|int
name|err2
init|=
name|sysctlbyname
argument_list|(
literal|"hw.cpufrequency"
argument_list|,
operator|&
name|freq
argument_list|,
operator|&
name|freqSize
argument_list|,
name|NULL
argument_list|,
literal|0L
argument_list|)
decl_stmt|;
if|if
condition|(
literal|0
operator|!=
name|err2
condition|)
return|return
literal|0
return|;
name|conversion
operator|=
operator|(
name|double
operator|)
name|freq
operator|*
operator|(
literal|1e-9
operator|*
operator|(
name|double
operator|)
name|info
operator|.
name|numer
operator|/
operator|(
name|double
operator|)
name|info
operator|.
name|denom
operator|)
expr_stmt|;
block|}
return|return
operator|(
name|double
operator|)
name|rawTime
operator|*
name|conversion
return|;
block|}
end_function

end_unit

