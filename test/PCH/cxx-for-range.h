begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// Header for PCH test cxx-for-range.cpp
end_comment

begin_struct
struct|struct
name|S
block|{
name|int
modifier|*
name|begin
parameter_list|()
function_decl|;
name|int
modifier|*
name|end
parameter_list|()
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|T
block|{ }
struct|;
end_struct

begin_function_decl
name|char
modifier|*
name|begin
parameter_list|(
name|T
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|end
parameter_list|(
name|T
parameter_list|)
function_decl|;
end_function_decl

begin_struct
struct|struct
name|U
block|{ }
struct|;
end_struct

begin_decl_stmt
name|namespace
name|std
block|{
name|char
modifier|*
name|begin
parameter_list|(
name|U
parameter_list|)
function_decl|;
name|char
modifier|*
name|end
parameter_list|(
name|U
parameter_list|)
function_decl|;
block|}
end_decl_stmt

begin_function
name|void
name|f
parameter_list|()
block|{
name|char
name|a
index|[
literal|3
index|]
init|=
block|{
literal|0
block|,
literal|1
block|,
literal|2
block|}
decl_stmt|;
for|for
control|(
name|auto
name|w
range|:
name|a
control|)
for|for
control|(
name|auto
name|x
range|:
name|S
argument_list|()
control|)
for|for
control|(
name|auto
name|y
range|:
name|T
argument_list|()
control|)
for|for
control|(
name|auto
name|z
range|:
name|U
argument_list|()
control|)
empty_stmt|;
block|}
end_function

begin_expr_stmt
name|template
operator|<
name|typename
name|A
operator|>
name|void
name|g
argument_list|()
block|{
name|A
name|a
index|[
literal|3
index|]
operator|=
block|{
literal|0
block|,
literal|1
block|,
literal|2
block|}
block|;
for|for
control|(
name|auto
operator|&
name|v
operator|:
name|a
control|)
for|for
control|(
name|auto
name|x
range|:
name|S
argument_list|()
control|)
for|for
control|(
name|auto
name|y
range|:
name|T
argument_list|()
control|)
for|for
control|(
name|auto
name|z
range|:
name|U
argument_list|()
control|)
empty_stmt|;
block|}
end_expr_stmt

end_unit

