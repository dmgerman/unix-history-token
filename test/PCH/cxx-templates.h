begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// Header for PCH test cxx-templates.cpp
end_comment

begin_expr_stmt
name|template
operator|<
name|typename
name|T1
operator|,
name|typename
name|T2
operator|>
expr|struct
name|S
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|typename
name|T1
operator|,
name|typename
name|T2
operator|>
expr|struct
name|S
block|{
name|S
argument_list|()
block|{ }
specifier|static
name|void
name|templ
argument_list|()
block|; }
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|>
expr|struct
name|S
operator|<
name|int
operator|,
name|T
operator|>
block|{
specifier|static
name|void
name|partial
argument_list|()
block|; }
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
operator|>
expr|struct
name|S
operator|<
name|int
operator|,
name|float
operator|>
block|{
specifier|static
name|void
name|explicit_special
argument_list|()
block|; }
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|int
name|x
operator|>
name|int
name|tmpl_f2
argument_list|()
block|{
return|return
name|x
return|;
block|}
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|int
name|y
operator|>
name|T
name|templ_f
argument_list|(
argument|T x
argument_list|)
block|{
name|int
name|z
operator|=
name|templ_f
operator|<
name|int
block|,
literal|5
operator|>
operator|(
literal|3
operator|)
block|;
name|z
operator|=
name|tmpl_f2
operator|<
name|y
operator|+
literal|2
operator|>
operator|(
operator|)
block|;
name|T
name|data
index|[
name|y
index|]
block|;
return|return
name|x
operator|+
name|y
return|;
block|}
end_expr_stmt

begin_function_decl
name|void
name|govl
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|govl
parameter_list|(
name|char
parameter_list|)
function_decl|;
end_function_decl

begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|>
expr|struct
name|Unresolv
block|{
name|void
name|f
argument_list|()
block|{
name|govl
argument_list|(
name|T
argument_list|()
argument_list|)
block|;   }
block|}
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|>
expr|struct
name|Dep
block|{
typedef|typedef
name|typename
name|T
operator|::
name|type
name|Ty
expr_stmt|;
name|void
name|f
argument_list|()
block|{
name|Ty
name|x
operator|=
name|Ty
argument_list|()
block|;
name|T
operator|::
name|my_f
argument_list|()
block|;
name|int
name|y
operator|=
name|T
operator|::
name|template
name|my_templf
operator|<
name|int
operator|>
operator|(
literal|0
operator|)
block|;
name|ovl
argument_list|(
name|y
argument_list|)
block|;   }
name|void
name|ovl
argument_list|(
name|int
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function_decl
name|void
name|ovl
parameter_list|(
name|float
parameter_list|)
function_decl|;
end_function_decl

begin_expr_stmt
unit|};
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|A1
operator|>
specifier|inline
name|T
name|make_a
argument_list|(
argument|const A1& a1
argument_list|)
block|{
name|T
operator|::
name|depend_declref
argument_list|()
block|;
return|return
name|T
argument_list|(
name|a1
argument_list|)
return|;
block|}
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|class
name|T
operator|>
name|class
name|UseBase
block|{
name|void
name|foo
argument_list|()
block|;
typedef|typedef
name|int
name|bar
typedef|;
block|}
end_expr_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|template
operator|<
name|class
name|T
operator|>
name|class
name|UseA
operator|:
name|public
name|UseBase
operator|<
name|T
operator|>
block|{
name|using
name|UseBase
operator|<
name|T
operator|>
operator|::
name|foo
block|;
name|using
name|typename
name|UseBase
operator|<
name|T
operator|>
operator|::
name|bar
block|;  }
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|class
name|T
operator|>
name|class
name|Sub
operator|:
name|public
name|UseBase
operator|<
name|int
operator|>
block|{ }
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|class
name|_Ret
operator|,
name|class
name|_Tp
operator|>
name|class
name|mem_fun_t
block|{
name|public
operator|:
name|explicit
name|mem_fun_t
argument_list|(
argument|_Ret (_Tp::*__pf)()
argument_list|)
block|{}
name|private
operator|:
name|_Ret
argument_list|(
name|_Tp
operator|::
operator|*
name|_M_f
argument_list|)
argument_list|()
block|;   }
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|unsigned
name|N
operator|>
name|bool
name|isInt
argument_list|(
argument|int x
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
operator|>
name|bool
name|isInt
operator|<
literal|8
operator|>
operator|(
name|int
name|x
operator|)
block|{
name|try
block|{
operator|++
name|x
block|; }
name|catch
argument_list|(
argument|...
argument_list|)
block|{
operator|--
name|x
block|; }
return|return
name|true
return|;
block|}
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|typename
name|_CharT
operator|>
name|int
name|__copy_streambufs_eof
argument_list|(
name|_CharT
argument_list|)
expr_stmt|;
end_expr_stmt

begin_decl_stmt
name|class
name|basic_streambuf
block|{
name|void
name|m
parameter_list|()
block|{ }
name|friend
name|int
name|__copy_streambufs_eof
operator|<
operator|>
operator|(
name|int
operator|)
expr_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_comment
comment|// PR 7660
end_comment

begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|>
expr|struct
name|S_PR7660
block|{
name|void
name|g
argument_list|(
name|void
argument_list|(
operator|*
argument_list|)
argument_list|(
name|T
argument_list|)
argument_list|)
block|; }
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
operator|>
name|void
name|S_PR7660
operator|<
name|int
operator|>
operator|::
name|g
argument_list|(
argument|void(*)(int)
argument_list|)
block|{}
comment|// PR 7670
name|template
operator|<
name|typename
operator|>
name|class
name|C_PR7670
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
operator|>
name|class
name|C_PR7670
operator|<
name|int
operator|>
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
operator|>
name|class
name|C_PR7670
operator|<
name|int
operator|>
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|bool
name|B
operator|>
expr|struct
name|S2
block|{
specifier|static
name|bool
name|V
block|; }
expr_stmt|;
end_expr_stmt

begin_extern
extern|extern template class S2<true>;
end_extern

begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|>
expr|struct
name|S3
block|{
name|void
name|m
argument_list|()
block|; }
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|>
specifier|inline
name|void
name|S3
operator|<
name|T
operator|>
operator|::
name|m
argument_list|()
block|{ }
name|template
operator|<
name|typename
name|T
operator|>
expr|struct
name|S4
block|{
name|void
name|m
argument_list|()
block|{ }
block|}
expr_stmt|;
end_expr_stmt

begin_extern
extern|extern template struct S4<int>;
end_extern

begin_function
name|void
name|S4ImplicitInst
parameter_list|()
block|{
name|S4
operator|<
name|int
operator|>
name|s
expr_stmt|;
name|s
operator|.
name|m
argument_list|()
expr_stmt|;
block|}
end_function

end_unit

