begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_typedef
typedef|typedef
name|struct
name|A
name|B
typedef|;
end_typedef

begin_decl_stmt
specifier|extern
specifier|const
name|int
name|variable
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|constexpr
name|int
name|function
parameter_list|()
function_decl|;
end_function_decl

begin_function
name|constexpr
name|int
name|test
parameter_list|(
name|bool
name|b
parameter_list|)
block|{
return|return
name|b
condition|?
name|variable
else|:
name|function
argument_list|()
return|;
block|}
end_function

begin_decl_stmt
name|namespace
name|N
block|{
typedef|typedef
name|struct
name|A
name|B
typedef|;
specifier|extern
specifier|const
name|int
name|variable
decl_stmt|;
specifier|extern
name|constexpr
name|int
name|function
parameter_list|()
function_decl|;
block|}
end_decl_stmt

begin_typedef
typedef|typedef
name|N
operator|::
name|B
name|NB
expr_stmt|;
end_typedef

begin_function
name|constexpr
name|int
name|N_test
parameter_list|(
name|bool
name|b
parameter_list|)
block|{
return|return
name|b
condition|?
name|N
operator|::
name|variable
else|:
name|N
operator|::
name|function
argument_list|()
return|;
block|}
end_function

begin_decl_stmt
unit|@
name|import
name|redecl_add_after_load_top
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
name|C
operator|::
name|A
name|CB
expr_stmt|;
end_typedef

begin_function
name|constexpr
name|int
name|C_test
parameter_list|(
name|bool
name|b
parameter_list|)
block|{
return|return
name|b
condition|?
name|C
operator|::
name|variable
else|:
name|C
operator|::
name|function
argument_list|()
return|;
block|}
end_function

begin_struct
struct|struct
name|D
block|{
struct_decl|struct
name|A
struct_decl|;
specifier|static
specifier|const
name|int
name|variable
decl_stmt|;
specifier|static
name|constexpr
name|int
name|function
parameter_list|()
function_decl|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|D
operator|::
name|A
name|DB
expr_stmt|;
end_typedef

begin_function
name|constexpr
name|int
name|D_test
parameter_list|(
name|bool
name|b
parameter_list|)
block|{
return|return
name|b
condition|?
name|D
operator|::
name|variable
else|:
name|D
operator|::
name|function
argument_list|()
return|;
block|}
end_function

end_unit

