begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|STRESS1_COMMON_H
end_ifndef

begin_define
define|#
directive|define
name|STRESS1_COMMON_H
end_define

begin_function
specifier|inline
name|char
name|function00
parameter_list|(
name|char
name|x
parameter_list|)
block|{
return|return
name|x
operator|+
name|x
return|;
block|}
end_function

begin_function
specifier|inline
name|short
name|function00
parameter_list|(
name|short
name|x
parameter_list|)
block|{
return|return
name|x
operator|+
name|x
return|;
block|}
end_function

begin_function
specifier|inline
name|int
name|function00
parameter_list|(
name|int
name|x
parameter_list|)
block|{
return|return
name|x
operator|+
name|x
return|;
block|}
end_function

begin_decl_stmt
name|namespace
name|N01
block|{
struct_decl|struct
name|S00
struct_decl|;
block|}
end_decl_stmt

begin_decl_stmt
name|namespace
name|N00
block|{
struct|struct
name|S00
block|{
name|char
name|c
decl_stmt|;
name|short
name|s
decl_stmt|;
name|int
name|i
decl_stmt|;
name|S00
argument_list|(
argument|char x
argument_list|)
block|:
name|c
argument_list|(
argument|x
argument_list|)
block|{}
name|S00
argument_list|(
argument|short x
argument_list|)
block|:
name|s
argument_list|(
argument|x
argument_list|)
block|{}
name|S00
argument_list|(
argument|int x
argument_list|)
block|:
name|i
argument_list|(
argument|x
argument_list|)
block|{}
name|char
name|method00
parameter_list|(
name|char
name|x
parameter_list|)
block|{
return|return
name|x
operator|+
name|x
return|;
block|}
name|short
name|method00
parameter_list|(
name|short
name|x
parameter_list|)
block|{
return|return
name|x
operator|+
name|x
return|;
block|}
name|int
name|method00
parameter_list|(
name|int
name|x
parameter_list|)
block|{
return|return
name|x
operator|+
name|x
return|;
block|}
name|operator
name|char
parameter_list|()
block|{
return|return
name|c
return|;
block|}
name|operator
name|short
parameter_list|()
block|{
return|return
name|s
return|;
block|}
name|operator
name|int
parameter_list|()
block|{
return|return
name|i
return|;
block|}
block|}
struct|;
struct|struct
name|S01
block|{}
struct|;
struct|struct
name|S02
block|{}
struct|;
name|template
operator|<
name|typename
name|T
operator|>
expr|struct
name|S03
block|{   struct
name|S00
operator|:
name|N00
operator|::
name|S00
block|{}
block|; }
expr_stmt|;
name|template
operator|<
name|int
name|I
operator|,
name|template
operator|<
name|typename
operator|>
name|class
name|U
operator|>
expr|struct
name|S03
operator|<
name|U
operator|<
name|int
operator|>
index|[
name|I
index|]
operator|>
operator|:
name|U
operator|<
name|int
operator|>
operator|::
name|S00
block|{
name|S03
argument_list|()
block|;
name|S03
argument_list|(
name|int
argument_list|)
block|;
name|S03
argument_list|(
name|short
argument_list|)
block|;
name|S03
argument_list|(
name|char
argument_list|)
block|;
name|template
operator|<
name|typename
name|V
operator|=
name|decltype
argument_list|(
name|I
argument_list|)
operator|>
name|S03
argument_list|(
name|V
argument_list|)
block|; }
expr_stmt|;
name|template
operator|<
operator|>
expr|struct
name|S03
operator|<
name|S03
operator|<
name|int
operator|>
index|[
literal|42
index|]
operator|>
operator|:
name|S00
block|{}
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
name|namespace
name|N01
block|{
name|struct
name|S00
range|:
name|N00
operator|::
name|S00
block|{
name|using
name|N00
operator|::
name|S00
operator|::
name|S00
block|; }
decl_stmt|;
struct|struct
name|S01
block|{}
struct|;
struct|struct
name|S02
block|{}
struct|;
block|}
end_decl_stmt

begin_decl_stmt
name|using
name|namespace
name|N00
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|template
operator|<
name|int
name|I
operator|,
name|template
operator|<
name|typename
operator|>
name|class
name|U
operator|>
name|template
operator|<
name|typename
name|V
operator|>
name|S03
operator|<
name|U
operator|<
name|int
operator|>
index|[
name|I
index|]
operator|>
operator|::
name|S03
argument_list|(
argument|V x
argument_list|)
operator|:
name|S00
argument_list|(
argument|x
argument_list|)
block|{}
name|template
operator|<
name|int
name|I
operator|,
name|template
operator|<
name|typename
operator|>
name|class
name|U
operator|>
name|S03
operator|<
name|U
operator|<
name|int
operator|>
index|[
name|I
index|]
operator|>
operator|::
name|S03
argument_list|()
operator|:
name|S00
argument_list|(
argument|I
argument_list|)
block|{}
name|template
operator|<
name|int
name|I
operator|,
name|template
operator|<
name|typename
operator|>
name|class
name|U
operator|>
name|S03
operator|<
name|U
operator|<
name|int
operator|>
index|[
name|I
index|]
operator|>
operator|::
name|S03
argument_list|(
argument|char x
argument_list|)
operator|:
name|S00
argument_list|(
argument|x
argument_list|)
block|{}
name|template
operator|<
name|int
name|I
operator|,
name|template
operator|<
name|typename
operator|>
name|class
name|U
operator|>
name|S03
operator|<
name|U
operator|<
name|int
operator|>
index|[
name|I
index|]
operator|>
operator|::
name|S03
argument_list|(
argument|short x
argument_list|)
operator|:
name|S00
argument_list|(
argument|x
argument_list|)
block|{}
name|template
operator|<
name|int
name|I
operator|,
name|template
operator|<
name|typename
operator|>
name|class
name|U
operator|>
name|S03
operator|<
name|U
operator|<
name|int
operator|>
index|[
name|I
index|]
operator|>
operator|::
name|S03
argument_list|(
argument|int x
argument_list|)
operator|:
name|S00
argument_list|(
argument|x
argument_list|)
block|{}
pragma|#
directive|pragma
name|weak
name|pragma_weak00
pragma|#
directive|pragma
name|weak
name|pragma_weak01
pragma|#
directive|pragma
name|weak
name|pragma_weak02
pragma|#
directive|pragma
name|weak
name|pragma_weak03
pragma|#
directive|pragma
name|weak
name|pragma_weak04
pragma|#
directive|pragma
name|weak
name|pragma_weak05
specifier|extern
literal|"C"
name|int
name|pragma_weak00
argument_list|()
expr_stmt|;
end_expr_stmt

begin_extern
extern|extern
literal|"C"
name|int
name|pragma_weak01
parameter_list|()
function_decl|;
end_extern

begin_extern
extern|extern
literal|"C"
name|int
name|pragma_weak02
parameter_list|()
function_decl|;
end_extern

begin_extern
extern|extern
literal|"C"
name|int
name|pragma_weak03
decl_stmt|;
end_extern

begin_extern
extern|extern
literal|"C"
name|int
name|pragma_weak04
decl_stmt|;
end_extern

begin_extern
extern|extern
literal|"C"
name|int
name|pragma_weak05
decl_stmt|;
end_extern

begin_endif
endif|#
directive|endif
end_endif

end_unit

