begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_include
include|#
directive|include
file|"a.h"
end_include

begin_ifndef
ifndef|#
directive|ifndef
name|_LIBCPP_VECTOR
end_ifndef

begin_expr_stmt
name|template
operator|<
name|class
operator|,
name|class
name|_Allocator
operator|>
name|class
name|__vector_base
block|{
name|protected
operator|:
name|_Allocator
name|__alloc
argument_list|()
specifier|const
block|;
name|__vector_base
argument_list|(
name|_Allocator
argument_list|)
block|; }
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|class
name|_Tp
operator|,
name|class
name|_Allocator
operator|=
name|allocator
operator|>
name|class
name|vector
operator|:
name|__vector_base
operator|<
name|_Tp
operator|,
name|_Allocator
operator|>
block|{
name|public
operator|:
name|vector
argument_list|()
name|noexcept
argument_list|(
name|is_nothrow_default_constructible
operator|<
name|_Allocator
operator|>
operator|::
name|value
argument_list|)
block|;
name|vector
argument_list|(
specifier|const
name|vector
operator|&
argument_list|)
block|;
name|vector
argument_list|(
argument|vector&&
argument_list|)
name|noexcept
argument_list|(
name|is_nothrow_move_constructible
operator|<
name|_Allocator
operator|>
operator|::
name|value
argument_list|)
block|; }
expr_stmt|;
end_expr_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_function
name|void
name|GetUniquePtrType
parameter_list|()
block|{
name|vector
operator|<
name|char
operator|>
name|v
expr_stmt|;
block|}
end_function

end_unit

