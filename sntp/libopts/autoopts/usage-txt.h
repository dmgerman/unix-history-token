begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*   -*- buffer-read-only: t -*- vi: set ro:  *    *  DO NOT EDIT THIS FILE   (usage-txt.h)  *    *  It has been AutoGen-ed  April 29, 2011 at 03:44:00 PM by AutoGen 5.11.9  *  From the definitions    usage-txt.def  *  and the template file   usage-txt.tpl  *  *  This file handles all the bookkeeping required for tracking all the little  *  tiny strings used by the AutoOpts library.  There are 142  *  of them.  This is not versioned because it is entirely internal to the  *  library and accessed by client code only in a very well-controlled way:  *  they may substitute translated strings using a procedure that steps through  *  all the string pointers.  *  *  AutoOpts is free software: you can redistribute it and/or modify it  *  under the terms of the GNU Lesser General Public License as published  *  by the Free Software Foundation, either version 3 of the License, or  *  (at your option) any later version.  *    *  AutoOpts is distributed in the hope that it will be useful, but  *  WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  *  See the GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program.  If not, see<http://www.gnu.org/licenses/>.";   */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|AUTOOPTS_USAGE_TXT_H_GUARD
end_ifndef

begin_define
define|#
directive|define
name|AUTOOPTS_USAGE_TXT_H_GUARD
value|1
end_define

begin_undef
undef|#
directive|undef
name|cch_t
end_undef

begin_define
define|#
directive|define
name|cch_t
value|char const
end_define

begin_comment
comment|/*  *  One structure to hold all the pointers to all the stringlets.  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|int
name|field_ct
decl_stmt|;
name|char
modifier|*
name|utpz_GnuBoolArg
decl_stmt|;
name|char
modifier|*
name|utpz_GnuKeyArg
decl_stmt|;
name|char
modifier|*
name|utpz_GnuFileArg
decl_stmt|;
name|char
modifier|*
name|utpz_GnuKeyLArg
decl_stmt|;
name|char
modifier|*
name|utpz_GnuTimeArg
decl_stmt|;
name|char
modifier|*
name|utpz_GnuNumArg
decl_stmt|;
name|char
modifier|*
name|utpz_GnuStrArg
decl_stmt|;
name|cch_t
modifier|*
name|apz_str
index|[
literal|135
index|]
decl_stmt|;
block|}
name|usage_text_t
typedef|;
end_typedef

begin_comment
comment|/*  *  Declare the global structure with all the pointers to translated  *  strings.  This is then used by the usage generation procedure.  */
end_comment

begin_decl_stmt
specifier|extern
name|usage_text_t
name|option_usage_text
decl_stmt|;
end_decl_stmt

begin_if
if|#
directive|if
name|defined
argument_list|(
name|AUTOOPTS_INTERNAL
argument_list|)
end_if

begin_comment
comment|/* DEFINE ALL THE STRINGS = = = = = */
end_comment

begin_comment
comment|/*  *  Provide a mapping from a short name to fields in this structure.  */
end_comment

begin_define
define|#
directive|define
name|zAO_Alloc
value|(option_usage_text.apz_str[  0])
end_define

begin_define
define|#
directive|define
name|zAO_Bad
value|(option_usage_text.apz_str[  1])
end_define

begin_define
define|#
directive|define
name|zAO_Big
value|(option_usage_text.apz_str[  2])
end_define

begin_define
define|#
directive|define
name|zAO_Err
value|(option_usage_text.apz_str[  3])
end_define

begin_define
define|#
directive|define
name|zAO_Realloc
value|(option_usage_text.apz_str[  4])
end_define

begin_define
define|#
directive|define
name|zAO_Sml
value|(option_usage_text.apz_str[  5])
end_define

begin_define
define|#
directive|define
name|zAO_Strdup
value|(option_usage_text.apz_str[  6])
end_define

begin_define
define|#
directive|define
name|zAO_Ver
value|(option_usage_text.apz_str[  7])
end_define

begin_define
define|#
directive|define
name|zAO_Woops
value|(option_usage_text.apz_str[  8])
end_define

begin_define
define|#
directive|define
name|zAliasRange
value|(option_usage_text.apz_str[  9])
end_define

begin_define
define|#
directive|define
name|zAll
value|(option_usage_text.apz_str[ 10])
end_define

begin_define
define|#
directive|define
name|zAlt
value|(option_usage_text.apz_str[ 11])
end_define

begin_define
define|#
directive|define
name|zAmbigKey
value|(option_usage_text.apz_str[ 12])
end_define

begin_define
define|#
directive|define
name|zAmbigOptStr
value|(option_usage_text.apz_str[ 13])
end_define

begin_define
define|#
directive|define
name|zArgsMust
value|(option_usage_text.apz_str[ 14])
end_define

begin_define
define|#
directive|define
name|zAtMost
value|(option_usage_text.apz_str[ 15])
end_define

begin_define
define|#
directive|define
name|zAuto
value|(option_usage_text.apz_str[ 16])
end_define

begin_define
define|#
directive|define
name|zBadPipe
value|(option_usage_text.apz_str[ 17])
end_define

begin_define
define|#
directive|define
name|zBadVerArg
value|(option_usage_text.apz_str[ 18])
end_define

begin_define
define|#
directive|define
name|zCantFmt
value|(option_usage_text.apz_str[ 19])
end_define

begin_define
define|#
directive|define
name|zCantSave
value|(option_usage_text.apz_str[ 20])
end_define

begin_define
define|#
directive|define
name|zCfgAO_Flags
value|(option_usage_text.apz_str[ 21])
end_define

begin_define
define|#
directive|define
name|zCfgProg
value|(option_usage_text.apz_str[ 22])
end_define

begin_define
define|#
directive|define
name|zDefaultOpt
value|(option_usage_text.apz_str[ 23])
end_define

begin_define
define|#
directive|define
name|zDis
value|(option_usage_text.apz_str[ 24])
end_define

begin_define
define|#
directive|define
name|zDisabledErr
value|(option_usage_text.apz_str[ 25])
end_define

begin_define
define|#
directive|define
name|zDisabledOpt
value|(option_usage_text.apz_str[ 26])
end_define

begin_define
define|#
directive|define
name|zDisabledWhy
value|(option_usage_text.apz_str[ 27])
end_define

begin_define
define|#
directive|define
name|zEnab
value|(option_usage_text.apz_str[ 28])
end_define

begin_define
define|#
directive|define
name|zEquiv
value|(option_usage_text.apz_str[ 29])
end_define

begin_define
define|#
directive|define
name|zErrOnly
value|(option_usage_text.apz_str[ 30])
end_define

begin_define
define|#
directive|define
name|zExamineFmt
value|(option_usage_text.apz_str[ 31])
end_define

begin_define
define|#
directive|define
name|zFiveSpaces
value|(option_usage_text.apz_str[ 32])
end_define

begin_define
define|#
directive|define
name|zFlagOkay
value|(option_usage_text.apz_str[ 33])
end_define

begin_define
define|#
directive|define
name|zFmtFmt
value|(option_usage_text.apz_str[ 34])
end_define

begin_define
define|#
directive|define
name|zForkFail
value|(option_usage_text.apz_str[ 35])
end_define

begin_define
define|#
directive|define
name|zFreopenFail
value|(option_usage_text.apz_str[ 36])
end_define

begin_define
define|#
directive|define
name|zFSErrOptLoad
value|(option_usage_text.apz_str[ 37])
end_define

begin_define
define|#
directive|define
name|zFSErrReadFile
value|(option_usage_text.apz_str[ 38])
end_define

begin_define
define|#
directive|define
name|zFSOptError
value|(option_usage_text.apz_str[ 39])
end_define

begin_define
define|#
directive|define
name|zFSOptErrMayExist
value|(option_usage_text.apz_str[ 40])
end_define

begin_define
define|#
directive|define
name|zFSOptErrMustExist
value|(option_usage_text.apz_str[ 41])
end_define

begin_define
define|#
directive|define
name|zFSOptErrNoExist
value|(option_usage_text.apz_str[ 42])
end_define

begin_define
define|#
directive|define
name|zFSOptErrOpen
value|(option_usage_text.apz_str[ 43])
end_define

begin_define
define|#
directive|define
name|zFSOptErrFopen
value|(option_usage_text.apz_str[ 44])
end_define

begin_define
define|#
directive|define
name|zFileCannotExist
value|(option_usage_text.apz_str[ 45])
end_define

begin_define
define|#
directive|define
name|zFileMustExist
value|(option_usage_text.apz_str[ 46])
end_define

begin_define
define|#
directive|define
name|zGenshell
value|(option_usage_text.apz_str[ 47])
end_define

begin_define
define|#
directive|define
name|zGnuBoolArg
value|(option_usage_text.utpz_GnuBoolArg)
end_define

begin_define
define|#
directive|define
name|zGnuBreak
value|(option_usage_text.apz_str[ 48])
end_define

begin_define
define|#
directive|define
name|zGnuKeyArg
value|(option_usage_text.utpz_GnuKeyArg)
end_define

begin_define
define|#
directive|define
name|zGnuFileArg
value|(option_usage_text.utpz_GnuFileArg)
end_define

begin_define
define|#
directive|define
name|zGnuKeyLArg
value|(option_usage_text.utpz_GnuKeyLArg)
end_define

begin_define
define|#
directive|define
name|zGnuTimeArg
value|(option_usage_text.utpz_GnuTimeArg)
end_define

begin_define
define|#
directive|define
name|zGnuNestArg
value|(option_usage_text.apz_str[ 49])
end_define

begin_define
define|#
directive|define
name|zGnuNumArg
value|(option_usage_text.utpz_GnuNumArg)
end_define

begin_define
define|#
directive|define
name|zGnuOptArg
value|(option_usage_text.apz_str[ 50])
end_define

begin_define
define|#
directive|define
name|zGnuOptFmt
value|(option_usage_text.apz_str[ 51])
end_define

begin_define
define|#
directive|define
name|zGnuStrArg
value|(option_usage_text.utpz_GnuStrArg)
end_define

begin_define
define|#
directive|define
name|zIllOptChr
value|(option_usage_text.apz_str[ 52])
end_define

begin_define
define|#
directive|define
name|zIllOptStr
value|(option_usage_text.apz_str[ 53])
end_define

begin_define
define|#
directive|define
name|zIllegal
value|(option_usage_text.apz_str[ 54])
end_define

begin_define
define|#
directive|define
name|zIntRange
value|(option_usage_text.apz_str[ 55])
end_define

begin_define
define|#
directive|define
name|zInvalOptDesc
value|(option_usage_text.apz_str[ 56])
end_define

begin_define
define|#
directive|define
name|zLowerBits
value|(option_usage_text.apz_str[ 57])
end_define

begin_define
define|#
directive|define
name|zMembers
value|(option_usage_text.apz_str[ 58])
end_define

begin_define
define|#
directive|define
name|zMisArg
value|(option_usage_text.apz_str[ 59])
end_define

begin_define
define|#
directive|define
name|zMultiEquiv
value|(option_usage_text.apz_str[ 60])
end_define

begin_define
define|#
directive|define
name|zMust
value|(option_usage_text.apz_str[ 61])
end_define

begin_define
define|#
directive|define
name|zNeedOne
value|(option_usage_text.apz_str[ 62])
end_define

begin_define
define|#
directive|define
name|zNoArg
value|(option_usage_text.apz_str[ 63])
end_define

begin_define
define|#
directive|define
name|zNoArgv
value|(option_usage_text.apz_str[ 64])
end_define

begin_define
define|#
directive|define
name|zNoArgs
value|(option_usage_text.apz_str[ 65])
end_define

begin_define
define|#
directive|define
name|zNoCreat
value|(option_usage_text.apz_str[ 66])
end_define

begin_define
define|#
directive|define
name|zNoFlags
value|(option_usage_text.apz_str[ 67])
end_define

begin_define
define|#
directive|define
name|zNoKey
value|(option_usage_text.apz_str[ 68])
end_define

begin_define
define|#
directive|define
name|zNoLim
value|(option_usage_text.apz_str[ 69])
end_define

begin_define
define|#
directive|define
name|zNoPreset
value|(option_usage_text.apz_str[ 70])
end_define

begin_define
define|#
directive|define
name|zNoResetArg
value|(option_usage_text.apz_str[ 71])
end_define

begin_define
define|#
directive|define
name|zNoRq_NoShrtTtl
value|(option_usage_text.apz_str[ 72])
end_define

begin_define
define|#
directive|define
name|zNoRq_ShrtTtl
value|(option_usage_text.apz_str[ 73])
end_define

begin_define
define|#
directive|define
name|zNoStat
value|(option_usage_text.apz_str[ 74])
end_define

begin_define
define|#
directive|define
name|zNoState
value|(option_usage_text.apz_str[ 75])
end_define

begin_define
define|#
directive|define
name|zNone
value|(option_usage_text.apz_str[ 76])
end_define

begin_define
define|#
directive|define
name|zNotDef
value|(option_usage_text.apz_str[ 77])
end_define

begin_define
define|#
directive|define
name|zNotCmdOpt
value|(option_usage_text.apz_str[ 78])
end_define

begin_define
define|#
directive|define
name|zNotEnough
value|(option_usage_text.apz_str[ 79])
end_define

begin_define
define|#
directive|define
name|zNotFile
value|(option_usage_text.apz_str[ 80])
end_define

begin_define
define|#
directive|define
name|zNotNumber
value|(option_usage_text.apz_str[ 81])
end_define

begin_define
define|#
directive|define
name|zNotDate
value|(option_usage_text.apz_str[ 82])
end_define

begin_define
define|#
directive|define
name|zNotDuration
value|(option_usage_text.apz_str[ 83])
end_define

begin_define
define|#
directive|define
name|zNrmOptFmt
value|(option_usage_text.apz_str[ 84])
end_define

begin_define
define|#
directive|define
name|zNumberOpt
value|(option_usage_text.apz_str[ 85])
end_define

begin_define
define|#
directive|define
name|zOneSpace
value|(option_usage_text.apz_str[ 86])
end_define

begin_define
define|#
directive|define
name|zOnlyOne
value|(option_usage_text.apz_str[ 87])
end_define

begin_define
define|#
directive|define
name|zOptsOnly
value|(option_usage_text.apz_str[ 88])
end_define

begin_define
define|#
directive|define
name|zOutputFail
value|(option_usage_text.apz_str[ 89])
end_define

begin_define
define|#
directive|define
name|zPathFmt
value|(option_usage_text.apz_str[ 90])
end_define

begin_define
define|#
directive|define
name|zPlsSendBugs
value|(option_usage_text.apz_str[ 91])
end_define

begin_define
define|#
directive|define
name|zPreset
value|(option_usage_text.apz_str[ 92])
end_define

begin_define
define|#
directive|define
name|zPresetFile
value|(option_usage_text.apz_str[ 93])
end_define

begin_define
define|#
directive|define
name|zPresetIntro
value|(option_usage_text.apz_str[ 94])
end_define

begin_define
define|#
directive|define
name|zProhib
value|(option_usage_text.apz_str[ 95])
end_define

begin_define
define|#
directive|define
name|zReorder
value|(option_usage_text.apz_str[ 96])
end_define

begin_define
define|#
directive|define
name|zRange
value|(option_usage_text.apz_str[ 97])
end_define

begin_define
define|#
directive|define
name|zRangeAbove
value|(option_usage_text.apz_str[ 98])
end_define

begin_define
define|#
directive|define
name|zRangeLie
value|(option_usage_text.apz_str[ 99])
end_define

begin_define
define|#
directive|define
name|zRangeOnly
value|(option_usage_text.apz_str[100])
end_define

begin_define
define|#
directive|define
name|zRangeOr
value|(option_usage_text.apz_str[101])
end_define

begin_define
define|#
directive|define
name|zRangeErr
value|(option_usage_text.apz_str[102])
end_define

begin_define
define|#
directive|define
name|zRangeExact
value|(option_usage_text.apz_str[103])
end_define

begin_define
define|#
directive|define
name|zRangeScaled
value|(option_usage_text.apz_str[104])
end_define

begin_define
define|#
directive|define
name|zRangeUpto
value|(option_usage_text.apz_str[105])
end_define

begin_define
define|#
directive|define
name|zResetNotConfig
value|(option_usage_text.apz_str[106])
end_define

begin_define
define|#
directive|define
name|zReqFmt
value|(option_usage_text.apz_str[107])
end_define

begin_define
define|#
directive|define
name|zReqOptFmt
value|(option_usage_text.apz_str[108])
end_define

begin_define
define|#
directive|define
name|zReqThese
value|(option_usage_text.apz_str[109])
end_define

begin_define
define|#
directive|define
name|zReq_NoShrtTtl
value|(option_usage_text.apz_str[110])
end_define

begin_define
define|#
directive|define
name|zReq_ShrtTtl
value|(option_usage_text.apz_str[111])
end_define

begin_define
define|#
directive|define
name|zSepChars
value|(option_usage_text.apz_str[112])
end_define

begin_define
define|#
directive|define
name|zSetMemberSettings
value|(option_usage_text.apz_str[113])
end_define

begin_define
define|#
directive|define
name|zShrtGnuOptFmt
value|(option_usage_text.apz_str[114])
end_define

begin_define
define|#
directive|define
name|zSixSpaces
value|(option_usage_text.apz_str[115])
end_define

begin_define
define|#
directive|define
name|zStdBoolArg
value|(option_usage_text.apz_str[116])
end_define

begin_define
define|#
directive|define
name|zStdBreak
value|(option_usage_text.apz_str[117])
end_define

begin_define
define|#
directive|define
name|zStdFileArg
value|(option_usage_text.apz_str[118])
end_define

begin_define
define|#
directive|define
name|zStdKeyArg
value|(option_usage_text.apz_str[119])
end_define

begin_define
define|#
directive|define
name|zStdKeyLArg
value|(option_usage_text.apz_str[120])
end_define

begin_define
define|#
directive|define
name|zStdTimeArg
value|(option_usage_text.apz_str[121])
end_define

begin_define
define|#
directive|define
name|zStdNestArg
value|(option_usage_text.apz_str[122])
end_define

begin_define
define|#
directive|define
name|zStdNoArg
value|(option_usage_text.apz_str[123])
end_define

begin_define
define|#
directive|define
name|zStdNumArg
value|(option_usage_text.apz_str[124])
end_define

begin_define
define|#
directive|define
name|zStdOptArg
value|(option_usage_text.apz_str[125])
end_define

begin_define
define|#
directive|define
name|zStdReqArg
value|(option_usage_text.apz_str[126])
end_define

begin_define
define|#
directive|define
name|zStdStrArg
value|(option_usage_text.apz_str[127])
end_define

begin_define
define|#
directive|define
name|zTabHyp
value|(option_usage_text.apz_str[128])
end_define

begin_define
define|#
directive|define
name|zTabHypAnd
value|(option_usage_text.apz_str[129])
end_define

begin_define
define|#
directive|define
name|zTabout
value|(option_usage_text.apz_str[130])
end_define

begin_define
define|#
directive|define
name|zThreeSpaces
value|(option_usage_text.apz_str[131])
end_define

begin_define
define|#
directive|define
name|zTwoSpaces
value|(option_usage_text.apz_str[132])
end_define

begin_define
define|#
directive|define
name|zUpTo
value|(option_usage_text.apz_str[133])
end_define

begin_define
define|#
directive|define
name|zValidKeys
value|(option_usage_text.apz_str[134])
end_define

begin_comment
comment|/*    *  First, set up the strings.  Some of these are writable.  These are all in    *  English.  This gets compiled into libopts and is distributed here so that    *  xgettext (or equivalents) can extract these strings for translation.    */
end_comment

begin_decl_stmt
specifier|static
name|char
name|eng_zGnuBoolArg
index|[]
init|=
literal|"=T/F"
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|char
name|eng_zGnuKeyArg
index|[]
init|=
literal|"=KWd"
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|char
name|eng_zGnuFileArg
index|[]
init|=
literal|"=file"
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|char
name|eng_zGnuKeyLArg
index|[]
init|=
literal|"=Mbr"
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|char
name|eng_zGnuTimeArg
index|[]
init|=
literal|"=Tim"
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|char
name|eng_zGnuNumArg
index|[]
init|=
literal|"=num"
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|char
name|eng_zGnuStrArg
index|[]
init|=
literal|"=str"
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|char
specifier|const
name|usage_txt
index|[
literal|4435
index|]
init|=
literal|"malloc of %d bytes failed\n\0"
literal|"AutoOpts function called without option descriptor\n\0"
literal|"\tThis exceeds the compiled library version:  \0"
literal|"Automated Options Processing Error!\n"
literal|"\t%s called AutoOpts function with structure version %d:%d:%d.\n\0"
literal|"realloc of %d bytes at 0x%p failed\n\0"
literal|"\tThis is less than the minimum library version:  \0"
literal|"strdup of %d byte string failed\n\0"
literal|"Automated Options version %s\n"
literal|"\tcopyright (c) 1999-2011 by Bruce Korb - all rights reserved\n\0"
literal|"AutoOpts lib error: defaulted to option with optional arg\n\0"
literal|"(AutoOpts bug):  Aliasing option is out of range.\0"
literal|"all\0"
literal|"\t\t\t\t- an alternate for %s\n\0"
literal|"%s error:  the keyword `%s' is ambiguous for %s\n\0"
literal|"%s: ambiguous option -- %s\n\0"
literal|"%s: Command line arguments required\n\0"
literal|"%d %s%s options allowed\n\0"
literal|"version and help options:\0"
literal|"Error %d (%s) from the pipe(2) syscall\n\0"
literal|"ERROR: version option argument '%c' invalid.  Use:\n"
literal|"\t'v' - version only\n"
literal|"\t'c' - version and copyright\n"
literal|"\t'n' - version and copyright notice\n\0"
literal|"ERROR:  %s option conflicts with the %s option\n\0"
literal|"%s(optionSaveState): error: cannot allocate %d bytes\n\0"
literal|"auto-options\0"
literal|"program\0"
literal|"\t\t\t\t- default option for unnamed options\n\0"
literal|"\t\t\t\t- disabled as --%s\n\0"
literal|"%s: The ``%s'' option has been disabled\0"
literal|" --- %-14s %s\n\0"
literal|"This option has been disabled\0"
literal|"\t\t\t\t- enabled by default\n\0"
literal|"-equivalence\0"
literal|"ERROR:  only \0"
literal|" - examining environment variables named %s_*\n\0"
literal|"     \0"
literal|"Options are specified by doubled hyphens and their name or by a single\n"
literal|"hyphen and the flag character.\n\0"
literal|"%%-%ds %%s\n\0"
literal|"fs error %d (%s) on fork - cannot obtain %s usage\n\0"
literal|"fs error %d (%s) on freopen\n\0"
literal|"File error %d (%s) opening %s for loading options\n\0"
literal|"fs error %d (%s) reading file %s\n\0"
literal|"fs error %d (%s) on %s %s for option %s\n\0"
literal|"stat-ing for directory\0"
literal|"stat-ing for regular file\0"
literal|"stat-ing for non-existant file\0"
literal|"open-ing file\0"
literal|"fopen-ing file\0"
literal|"\t\t\t\t- file must not pre-exist\n\0"
literal|"\t\t\t\t- file must pre-exist\n\0"
literal|"\n"
literal|"= = = = = = = =\n\n"
literal|"This incarnation of genshell will produce\n"
literal|"a shell script to parse the options for %s:\n\n\0"
literal|"\n"
literal|"%s\n\n\0"
literal|"=Cplx\0"
literal|"[=arg]\0"
literal|"--%2$s%1$s\0"
literal|"%s: illegal option -- %c\n\0"
literal|"%s: illegal option -- %s\n\0"
literal|"illegal\0"
literal|"  or an integer from %d through %d\n\0"
literal|"AutoOpts ERROR:  invalid option descriptor for %s\n\0"
literal|"  or an integer mask with any of the lower %d bits set\n\0"
literal|"\t\t\t\t- is a set membership option\n\0"
literal|"%s: option `%s' requires an argument\n\0"
literal|"Equivalenced option '%s' was equivalenced to both\n"
literal|"\t'%s' and '%s'\0"
literal|"\t\t\t\t- must appear between %d and %d times\n\0"
literal|"ERROR:  The %s option is required\n\0"
literal|"%s: option `%s' cannot have an argument\n\0"
literal|"%s: cannot allocate new argument vector\n\0"
literal|"%s: Command line arguments not allowed\n\0"
literal|"error %d (%s) creating %s\n\0"
literal|"Options are specified by single or double hyphens and their name.\n\0"
literal|"%s error:  `%s' does not match any %s keywords\n\0"
literal|"\t\t\t\t- may appear multiple times\n\0"
literal|"\t\t\t\t- may not be preset\n\0"
literal|"The 'reset-option' option requires an argument\n\0"
literal|"   Arg Option-Name    Description\n\0"
literal|"  Flg Arg Option-Name    Description\n\0"
literal|"error %d (%s) stat-ing %s\n\0"
literal|"%s(optionRestore): error: no saved option state\n\0"
literal|"none\0"
literal|"'%s' not defined\n\0"
literal|"'%s' is not a command line option\n\0"
literal|"ERROR:  The %s option must appear %d times\n\0"
literal|"error:  cannot load options from non-regular file %s\n\0"
literal|"%s error:  `%s' is not a recognizable number\n\0"
literal|"%s error:  `%s' is not a recognizable date/time\n\0"
literal|"%s error:  `%s' is not a recognizable time duration\n\0"
literal|" %3s %s\0"
literal|"The '-#<number>' option may omit the hash char\n\0"
literal|" \0"
literal|"one %s%s option allowed\n\0"
literal|"All arguments are named options.\n\0"
literal|"Write failure to output file\0"
literal|" - reading file %s\0"
literal|"\n"
literal|"please send bug reports to:  %s\n\0"
literal|"\t\t\t\t- may NOT appear - preset only\n\0"
literal|"#  preset/initialization file\n"
literal|"#  %s#\n\0"
literal|"\n"
literal|"The following option preset mechanisms are supported:\n\0"
literal|"prohibits these options:\n\0"
literal|"Operands and options may be intermixed.  They will be reordered.\n\0"
literal|"%s%ld to %ld\0"
literal|"%sgreater than or equal to %ld\0"
literal|"%sIt must lie in one of the ranges:\n\0"
literal|"%sIt must be in the range:\n\0"
literal|", or\n\0"
literal|"%s error:  %s option value ``%s'' is out of range.\n\0"
literal|"%s%ld exactly\0"
literal|"%sis scalable with a suffix: k/K/m/M/g/G/t/T\n\0"
literal|"%sless than or equal to %ld\0"
literal|"The --reset-option has not been configured.\n\0"
literal|"ERROR:  %s option requires the %s option\n\0"
literal|" %3s %-14s %s\0"
literal|"requires these options:\n\0"
literal|"   Arg Option-Name   Req?  Description\n\0"
literal|"  Flg Arg Option-Name   Req?  Description\n\0"
literal|"-_^\0"
literal|"or you may use a numeric representation.  Preceding these with a '!' will\n"
literal|"clear the bits, specifying 'none' will clear all bits, and 'all' will set them\n"
literal|"all.  Multiple entries may be passed as an option argument list.\n\0"
literal|"%s\0"
literal|"      \0"
literal|"T/F\0"
literal|"\n"
literal|"%s\n\n"
literal|"%s\0"
literal|"Fil\0"
literal|"KWd\0"
literal|"Mbr\0"
literal|"Tim\0"
literal|"Cpx\0"
literal|"no \0"
literal|"Num\0"
literal|"opt\0"
literal|"YES\0"
literal|"Str\0"
literal|"\t\t\t\t- \0"
literal|"\t\t\t\t-- and \0"
literal|"\t\t\t\t%s\n\0"
literal|"   \0"
literal|"  \0"
literal|"\t\t\t\t- may appear up to %d times\n\0"
literal|"The valid \"%s\" option keywords are:\n\0"
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*    *  Now, define (and initialize) the structure that contains    *  the pointers to all these strings.    *  Aren't you glad you don't maintain this by hand?    */
end_comment

begin_decl_stmt
name|usage_text_t
name|option_usage_text
init|=
block|{
literal|142
block|,
name|eng_zGnuBoolArg
block|,
name|eng_zGnuKeyArg
block|,
name|eng_zGnuFileArg
block|,
name|eng_zGnuKeyLArg
block|,
name|eng_zGnuTimeArg
block|,
name|eng_zGnuNumArg
block|,
name|eng_zGnuStrArg
block|,
block|{
name|usage_txt
operator|+
literal|0
block|,
name|usage_txt
operator|+
literal|27
block|,
name|usage_txt
operator|+
literal|79
block|,
name|usage_txt
operator|+
literal|125
block|,
name|usage_txt
operator|+
literal|224
block|,
name|usage_txt
operator|+
literal|260
block|,
name|usage_txt
operator|+
literal|310
block|,
name|usage_txt
operator|+
literal|343
block|,
name|usage_txt
operator|+
literal|434
block|,
name|usage_txt
operator|+
literal|493
block|,
name|usage_txt
operator|+
literal|543
block|,
name|usage_txt
operator|+
literal|547
block|,
name|usage_txt
operator|+
literal|574
block|,
name|usage_txt
operator|+
literal|623
block|,
name|usage_txt
operator|+
literal|651
block|,
name|usage_txt
operator|+
literal|688
block|,
name|usage_txt
operator|+
literal|713
block|,
name|usage_txt
operator|+
literal|739
block|,
name|usage_txt
operator|+
literal|779
block|,
name|usage_txt
operator|+
literal|916
block|,
name|usage_txt
operator|+
literal|964
block|,
name|usage_txt
operator|+
literal|1018
block|,
name|usage_txt
operator|+
literal|1031
block|,
name|usage_txt
operator|+
literal|1039
block|,
name|usage_txt
operator|+
literal|1081
block|,
name|usage_txt
operator|+
literal|1105
block|,
name|usage_txt
operator|+
literal|1145
block|,
name|usage_txt
operator|+
literal|1160
block|,
name|usage_txt
operator|+
literal|1190
block|,
name|usage_txt
operator|+
literal|1216
block|,
name|usage_txt
operator|+
literal|1229
block|,
name|usage_txt
operator|+
literal|1243
block|,
name|usage_txt
operator|+
literal|1290
block|,
name|usage_txt
operator|+
literal|1296
block|,
name|usage_txt
operator|+
literal|1399
block|,
name|usage_txt
operator|+
literal|1411
block|,
name|usage_txt
operator|+
literal|1462
block|,
name|usage_txt
operator|+
literal|1491
block|,
name|usage_txt
operator|+
literal|1542
block|,
name|usage_txt
operator|+
literal|1576
block|,
name|usage_txt
operator|+
literal|1617
block|,
name|usage_txt
operator|+
literal|1640
block|,
name|usage_txt
operator|+
literal|1666
block|,
name|usage_txt
operator|+
literal|1697
block|,
name|usage_txt
operator|+
literal|1711
block|,
name|usage_txt
operator|+
literal|1726
block|,
name|usage_txt
operator|+
literal|1757
block|,
name|usage_txt
operator|+
literal|1784
block|,
name|usage_txt
operator|+
literal|1890
block|,
name|usage_txt
operator|+
literal|1896
block|,
name|usage_txt
operator|+
literal|1902
block|,
name|usage_txt
operator|+
literal|1909
block|,
name|usage_txt
operator|+
literal|1920
block|,
name|usage_txt
operator|+
literal|1946
block|,
name|usage_txt
operator|+
literal|1972
block|,
name|usage_txt
operator|+
literal|1980
block|,
name|usage_txt
operator|+
literal|2016
block|,
name|usage_txt
operator|+
literal|2067
block|,
name|usage_txt
operator|+
literal|2123
block|,
name|usage_txt
operator|+
literal|2157
block|,
name|usage_txt
operator|+
literal|2195
block|,
name|usage_txt
operator|+
literal|2260
block|,
name|usage_txt
operator|+
literal|2303
block|,
name|usage_txt
operator|+
literal|2338
block|,
name|usage_txt
operator|+
literal|2379
block|,
name|usage_txt
operator|+
literal|2420
block|,
name|usage_txt
operator|+
literal|2460
block|,
name|usage_txt
operator|+
literal|2487
block|,
name|usage_txt
operator|+
literal|2554
block|,
name|usage_txt
operator|+
literal|2602
block|,
name|usage_txt
operator|+
literal|2635
block|,
name|usage_txt
operator|+
literal|2660
block|,
name|usage_txt
operator|+
literal|2708
block|,
name|usage_txt
operator|+
literal|2743
block|,
name|usage_txt
operator|+
literal|2781
block|,
name|usage_txt
operator|+
literal|2808
block|,
name|usage_txt
operator|+
literal|2857
block|,
name|usage_txt
operator|+
literal|2862
block|,
name|usage_txt
operator|+
literal|2880
block|,
name|usage_txt
operator|+
literal|2915
block|,
name|usage_txt
operator|+
literal|2959
block|,
name|usage_txt
operator|+
literal|3013
block|,
name|usage_txt
operator|+
literal|3059
block|,
name|usage_txt
operator|+
literal|3108
block|,
name|usage_txt
operator|+
literal|3161
block|,
name|usage_txt
operator|+
literal|3169
block|,
name|usage_txt
operator|+
literal|3217
block|,
name|usage_txt
operator|+
literal|3219
block|,
name|usage_txt
operator|+
literal|3244
block|,
name|usage_txt
operator|+
literal|3278
block|,
name|usage_txt
operator|+
literal|3307
block|,
name|usage_txt
operator|+
literal|3326
block|,
name|usage_txt
operator|+
literal|3360
block|,
name|usage_txt
operator|+
literal|3396
block|,
name|usage_txt
operator|+
literal|3434
block|,
name|usage_txt
operator|+
literal|3490
block|,
name|usage_txt
operator|+
literal|3516
block|,
name|usage_txt
operator|+
literal|3582
block|,
name|usage_txt
operator|+
literal|3595
block|,
name|usage_txt
operator|+
literal|3626
block|,
name|usage_txt
operator|+
literal|3663
block|,
name|usage_txt
operator|+
literal|3691
block|,
name|usage_txt
operator|+
literal|3697
block|,
name|usage_txt
operator|+
literal|3749
block|,
name|usage_txt
operator|+
literal|3763
block|,
name|usage_txt
operator|+
literal|3809
block|,
name|usage_txt
operator|+
literal|3837
block|,
name|usage_txt
operator|+
literal|3882
block|,
name|usage_txt
operator|+
literal|3924
block|,
name|usage_txt
operator|+
literal|3938
block|,
name|usage_txt
operator|+
literal|3963
block|,
name|usage_txt
operator|+
literal|4003
block|,
name|usage_txt
operator|+
literal|4046
block|,
name|usage_txt
operator|+
literal|4050
block|,
name|usage_txt
operator|+
literal|4269
block|,
name|usage_txt
operator|+
literal|4272
block|,
name|usage_txt
operator|+
literal|4279
block|,
name|usage_txt
operator|+
literal|4283
block|,
name|usage_txt
operator|+
literal|4291
block|,
name|usage_txt
operator|+
literal|4295
block|,
name|usage_txt
operator|+
literal|4299
block|,
name|usage_txt
operator|+
literal|4303
block|,
name|usage_txt
operator|+
literal|4307
block|,
name|usage_txt
operator|+
literal|4311
block|,
name|usage_txt
operator|+
literal|4315
block|,
name|usage_txt
operator|+
literal|4319
block|,
name|usage_txt
operator|+
literal|4323
block|,
name|usage_txt
operator|+
literal|4327
block|,
name|usage_txt
operator|+
literal|4331
block|,
name|usage_txt
operator|+
literal|4338
block|,
name|usage_txt
operator|+
literal|4350
block|,
name|usage_txt
operator|+
literal|4358
block|,
name|usage_txt
operator|+
literal|4362
block|,
name|usage_txt
operator|+
literal|4365
block|,
name|usage_txt
operator|+
literal|4398
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* DO_TRANSLATIONS */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* AUTOOPTS_USAGE_TXT_H_GUARD */
end_comment

end_unit

