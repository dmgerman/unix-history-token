begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*   -*- buffer-read-only: t -*- vi: set ro:  *    *  DO NOT EDIT THIS FILE   (genshell.h)  *    *  It has been AutoGen-ed  April 29, 2011 at 03:43:59 PM by AutoGen 5.11.9  *  From the definitions    genshell.def  *  and the template file   options  *  * Generated from AutoOpts 35:0:10 templates.  *  *  AutoOpts is a copyrighted work.  This header file is not encumbered  *  by AutoOpts licensing, but is provided under the licensing terms chosen  *  by the genshellopt author or copyright holder.  AutoOpts is  *  licensed under the terms of the LGPL.  The redistributable library  *  (``libopts'') is licensed under the terms of either the LGPL or, at the  *  users discretion, the BSD license.  See the AutoOpts and/or libopts sources  *  for details.  *  * This source file is copyrighted and licensed under the following terms:  *  * genshellopt copyright (c) 1999-2011 Bruce Korb - all rights reserved  *  * genshellopt is free software: you can redistribute it and/or modify it  * under the terms of the GNU General Public License as published by the  * Free Software Foundation, either version 3 of the License, or  * (at your option) any later version.  *   * genshellopt is distributed in the hope that it will be useful, but  * WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  * See the GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.   */
end_comment

begin_comment
comment|/*  *  This file contains the programmatic interface to the Automated  *  Options generated for the genshellopt program.  *  These macros are documented in the AutoGen info file in the  *  "AutoOpts" chapter.  Please refer to that doc for usage help.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|AUTOOPTS_GENSHELL_H_GUARD
end_ifndef

begin_define
define|#
directive|define
name|AUTOOPTS_GENSHELL_H_GUARD
value|1
end_define

begin_include
include|#
directive|include
file|<autoopts/options.h>
end_include

begin_comment
comment|/*  *  Ensure that the library used for compiling this generated header is at  *  least as new as the version current when the header template was released  *  (not counting patch version increments).  Also ensure that the oldest  *  tolerable version is at least as old as what was current when the header  *  template was released.  */
end_comment

begin_define
define|#
directive|define
name|AO_TEMPLATE_VERSION
value|143360
end_define

begin_if
if|#
directive|if
operator|(
name|AO_TEMPLATE_VERSION
operator|<
name|OPTIONS_MINIMUM_VERSION
operator|)
expr|\
operator|||
operator|(
name|AO_TEMPLATE_VERSION
operator|>
name|OPTIONS_STRUCT_VERSION
operator|)
end_if

begin_error
error|#
directive|error
error|option template version mismatches autoopts/options.h header
end_error

begin_expr_stmt
name|Choke
name|Me
operator|.
endif|#
directive|endif
comment|/*  *  Enumeration of each option:  */
expr|typedef enum
block|{
name|INDEX_GENSHELL_OPT_SCRIPT
operator|=
literal|0
block|,
name|INDEX_GENSHELL_OPT_SHELL
operator|=
literal|1
block|,
name|INDEX_GENSHELL_OPT_VERSION
operator|=
literal|2
block|,
name|INDEX_GENSHELL_OPT_HELP
operator|=
literal|3
block|,
name|INDEX_GENSHELL_OPT_MORE_HELP
operator|=
literal|4
block|}
name|teGenshell_OptIndex
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|GENSHELL_OPTION_CT
value|5
end_define

begin_define
define|#
directive|define
name|GENSHELLOPT_VERSION
value|"1"
end_define

begin_define
define|#
directive|define
name|GENSHELLOPT_FULL_VERSION
value|"genshellopt 1"
end_define

begin_comment
comment|/*  *  Interface defines for all options.  Replace "n" with the UPPER_CASED  *  option name (as in the teGenshell_OptIndex enumeration above).  *  e.g. HAVE_GENSHELL_OPT(SCRIPT)  */
end_comment

begin_define
define|#
directive|define
name|GENSHELL_DESC
parameter_list|(
name|n
parameter_list|)
value|(genshelloptOptions.pOptDesc[INDEX_GENSHELL_OPT_## n])
end_define

begin_define
define|#
directive|define
name|HAVE_GENSHELL_OPT
parameter_list|(
name|n
parameter_list|)
value|(! UNUSED_OPT(& GENSHELL_DESC(n)))
end_define

begin_define
define|#
directive|define
name|GENSHELL_OPT_ARG
parameter_list|(
name|n
parameter_list|)
value|(GENSHELL_DESC(n).optArg.argString)
end_define

begin_define
define|#
directive|define
name|STATE_GENSHELL_OPT
parameter_list|(
name|n
parameter_list|)
value|(GENSHELL_DESC(n).fOptState& OPTST_SET_MASK)
end_define

begin_define
define|#
directive|define
name|COUNT_GENSHELL_OPT
parameter_list|(
name|n
parameter_list|)
value|(GENSHELL_DESC(n).optOccCt)
end_define

begin_define
define|#
directive|define
name|ISSEL_GENSHELL_OPT
parameter_list|(
name|n
parameter_list|)
value|(SELECTED_OPT(&GENSHELL_DESC(n)))
end_define

begin_define
define|#
directive|define
name|ISUNUSED_GENSHELL_OPT
parameter_list|(
name|n
parameter_list|)
value|(UNUSED_OPT(& GENSHELL_DESC(n)))
end_define

begin_define
define|#
directive|define
name|ENABLED_GENSHELL_OPT
parameter_list|(
name|n
parameter_list|)
value|(! DISABLED_OPT(& GENSHELL_DESC(n)))
end_define

begin_define
define|#
directive|define
name|STACKCT_GENSHELL_OPT
parameter_list|(
name|n
parameter_list|)
value|(((tArgList*)(GENSHELL_DESC(n).optCookie))->useCt)
end_define

begin_define
define|#
directive|define
name|STACKLST_GENSHELL_OPT
parameter_list|(
name|n
parameter_list|)
value|(((tArgList*)(GENSHELL_DESC(n).optCookie))->apzArgs)
end_define

begin_define
define|#
directive|define
name|CLEAR_GENSHELL_OPT
parameter_list|(
name|n
parameter_list|)
value|STMTS( \                 GENSHELL_DESC(n).fOptState&= OPTST_PERSISTENT_MASK;   \                 if ((GENSHELL_DESC(n).fOptState& OPTST_INITENABLED) == 0) \                     GENSHELL_DESC(n).fOptState |= OPTST_DISABLED; \                 GENSHELL_DESC(n).optCookie = NULL )
end_define

begin_comment
comment|/* * * * * *  *  *  Enumeration of genshellopt exit codes  */
end_comment

begin_typedef
typedef|typedef
enum|enum
block|{
name|GENSHELLOPT_EXIT_SUCCESS
init|=
literal|0
block|,
name|GENSHELLOPT_EXIT_FAILURE
init|=
literal|1
block|}
name|genshellopt_exit_code_t
typedef|;
end_typedef

begin_comment
comment|/* * * * * *  *  *  Interface defines for specific options.  */
end_comment

begin_define
define|#
directive|define
name|VALUE_GENSHELL_OPT_SCRIPT
value|'o'
end_define

begin_define
define|#
directive|define
name|VALUE_GENSHELL_OPT_SHELL
value|'s'
end_define

begin_define
define|#
directive|define
name|VALUE_GENSHELL_OPT_HELP
value|'?'
end_define

begin_define
define|#
directive|define
name|VALUE_GENSHELL_OPT_MORE_HELP
value|'!'
end_define

begin_define
define|#
directive|define
name|VALUE_GENSHELL_OPT_VERSION
value|'v'
end_define

begin_comment
comment|/*  *  Interface defines not associated with particular options  */
end_comment

begin_define
define|#
directive|define
name|ERRSKIP_GENSHELL_OPTERR
value|STMTS(genshelloptOptions.fOptSet&= ~OPTPROC_ERRSTOP)
end_define

begin_define
define|#
directive|define
name|ERRSTOP_GENSHELL_OPTERR
value|STMTS(genshelloptOptions.fOptSet |= OPTPROC_ERRSTOP)
end_define

begin_define
define|#
directive|define
name|RESTART_GENSHELL_OPT
parameter_list|(
name|n
parameter_list|)
value|STMTS( \                 genshelloptOptions.curOptIdx = (n); \                 genshelloptOptions.pzCurOpt  = NULL )
end_define

begin_define
define|#
directive|define
name|START_GENSHELL_OPT
value|RESTART_GENSHELL_OPT(1)
end_define

begin_define
define|#
directive|define
name|GENSHELL_USAGE
parameter_list|(
name|c
parameter_list|)
value|(*genshelloptOptions.pUsageProc)(&genshelloptOptions, c)
end_define

begin_comment
comment|/* extracted from opthead.tlib near line 451 */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* * * * * *  *  *  Declare the genshellopt option descriptor.  */
specifier|extern
name|tOptions
name|genshelloptOptions
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|ENABLE_NLS
argument_list|)
ifndef|#
directive|ifndef
name|_
include|#
directive|include
file|<stdio.h>
specifier|static
specifier|inline
name|char
modifier|*
name|aoGetsText
parameter_list|(
name|char
specifier|const
modifier|*
name|pz
parameter_list|)
block|{
if|if
condition|(
name|pz
operator|==
name|NULL
condition|)
return|return
name|NULL
return|;
return|return
operator|(
name|char
operator|*
operator|)
name|gettext
argument_list|(
name|pz
argument_list|)
return|;
block|}
define|#
directive|define
name|_
parameter_list|(
name|s
parameter_list|)
value|aoGetsText(s)
endif|#
directive|endif
comment|/* _() */
define|#
directive|define
name|OPT_NO_XLAT_CFG_NAMES
value|STMTS(genshelloptOptions.fOptSet |= \                                     OPTPROC_NXLAT_OPT_CFG;)
define|#
directive|define
name|OPT_NO_XLAT_OPT_NAMES
value|STMTS(genshelloptOptions.fOptSet |= \                                     OPTPROC_NXLAT_OPT|OPTPROC_NXLAT_OPT_CFG;)
define|#
directive|define
name|OPT_XLAT_CFG_NAMES
value|STMTS(genshelloptOptions.fOptSet&= \                                   ~(OPTPROC_NXLAT_OPT|OPTPROC_NXLAT_OPT_CFG);)
define|#
directive|define
name|OPT_XLAT_OPT_NAMES
value|STMTS(genshelloptOptions.fOptSet&= \                                   ~OPTPROC_NXLAT_OPT;)
else|#
directive|else
comment|/* ENABLE_NLS */
define|#
directive|define
name|OPT_NO_XLAT_CFG_NAMES
define|#
directive|define
name|OPT_NO_XLAT_OPT_NAMES
define|#
directive|define
name|OPT_XLAT_CFG_NAMES
define|#
directive|define
name|OPT_XLAT_OPT_NAMES
ifndef|#
directive|ifndef
name|_
define|#
directive|define
name|_
parameter_list|(
name|_s
parameter_list|)
value|_s
endif|#
directive|endif
endif|#
directive|endif
comment|/* ENABLE_NLS */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* AUTOOPTS_GENSHELL_H_GUARD */
end_comment

begin_comment
comment|/* genshell.h ends here */
end_comment

end_unit

