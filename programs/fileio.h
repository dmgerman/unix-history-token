begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2016-present, Yann Collet, Facebook, Inc.  * All rights reserved.  *  * This source code is licensed under both the BSD-style license (found in the  * LICENSE file in the root directory of this source tree) and the GPLv2 (found  * in the COPYING file in the root directory of this source tree).  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|FILEIO_H_23981798732
end_ifndef

begin_define
define|#
directive|define
name|FILEIO_H_23981798732
end_define

begin_define
define|#
directive|define
name|ZSTD_STATIC_LINKING_ONLY
end_define

begin_comment
comment|/* ZSTD_compressionParameters */
end_comment

begin_include
include|#
directive|include
file|"zstd.h"
end_include

begin_comment
comment|/* ZSTD_* */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__cplusplus
argument_list|)
end_if

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* ************************************* *  Special i/o constants **************************************/
define|#
directive|define
name|stdinmark
value|"/*stdin*\\"
define|#
directive|define
name|stdoutmark
value|"/*stdout*\\"
ifdef|#
directive|ifdef
name|_WIN32
define|#
directive|define
name|nulmark
value|"nul"
else|#
directive|else
define|#
directive|define
name|nulmark
value|"/dev/null"
endif|#
directive|endif
define|#
directive|define
name|LZMA_EXTENSION
value|".lzma"
define|#
directive|define
name|XZ_EXTENSION
value|".xz"
define|#
directive|define
name|GZ_EXTENSION
value|".gz"
define|#
directive|define
name|ZSTD_EXTENSION
value|".zst"
define|#
directive|define
name|LZ4_EXTENSION
value|".lz4"
comment|/*-************************************* *  Types ***************************************/
typedef|typedef
enum|enum
block|{
name|FIO_zstdCompression
block|,
name|FIO_gzipCompression
block|,
name|FIO_xzCompression
block|,
name|FIO_lzmaCompression
block|,
name|FIO_lz4Compression
block|}
name|FIO_compressionType_t
typedef|;
comment|/*-************************************* *  Parameters ***************************************/
name|void
name|FIO_setCompressionType
parameter_list|(
name|FIO_compressionType_t
name|compressionType
parameter_list|)
function_decl|;
name|void
name|FIO_overwriteMode
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|FIO_setNotificationLevel
parameter_list|(
name|unsigned
name|level
parameter_list|)
function_decl|;
name|void
name|FIO_setSparseWrite
parameter_list|(
name|unsigned
name|sparse
parameter_list|)
function_decl|;
comment|/**< 0: no sparse; 1: disable on stdout; 2: always enabled */
name|void
name|FIO_setDictIDFlag
parameter_list|(
name|unsigned
name|dictIDFlag
parameter_list|)
function_decl|;
name|void
name|FIO_setChecksumFlag
parameter_list|(
name|unsigned
name|checksumFlag
parameter_list|)
function_decl|;
name|void
name|FIO_setRemoveSrcFile
parameter_list|(
name|unsigned
name|flag
parameter_list|)
function_decl|;
name|void
name|FIO_setMemLimit
parameter_list|(
name|unsigned
name|memLimit
parameter_list|)
function_decl|;
name|void
name|FIO_setNbThreads
parameter_list|(
name|unsigned
name|nbThreads
parameter_list|)
function_decl|;
name|void
name|FIO_setBlockSize
parameter_list|(
name|unsigned
name|blockSize
parameter_list|)
function_decl|;
name|void
name|FIO_setOverlapLog
parameter_list|(
name|unsigned
name|overlapLog
parameter_list|)
function_decl|;
comment|/*-************************************* *  Single File functions ***************************************/
comment|/** FIO_compressFilename() :     @return : 0 == ok;  1 == pb with src file. */
name|int
name|FIO_compressFilename
parameter_list|(
specifier|const
name|char
modifier|*
name|outfilename
parameter_list|,
specifier|const
name|char
modifier|*
name|infilename
parameter_list|,
specifier|const
name|char
modifier|*
name|dictFileName
parameter_list|,
name|int
name|compressionLevel
parameter_list|,
name|ZSTD_compressionParameters
modifier|*
name|comprParams
parameter_list|)
function_decl|;
comment|/** FIO_decompressFilename() :     @return : 0 == ok;  1 == pb with src file. */
name|int
name|FIO_decompressFilename
parameter_list|(
specifier|const
name|char
modifier|*
name|outfilename
parameter_list|,
specifier|const
name|char
modifier|*
name|infilename
parameter_list|,
specifier|const
name|char
modifier|*
name|dictFileName
parameter_list|)
function_decl|;
name|int
name|FIO_listMultipleFiles
parameter_list|(
name|unsigned
name|numFiles
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|filenameTable
parameter_list|,
name|int
name|displayLevel
parameter_list|)
function_decl|;
comment|/*-************************************* *  Multiple File functions ***************************************/
comment|/** FIO_compressMultipleFilenames() :     @return : nb of missing files */
name|int
name|FIO_compressMultipleFilenames
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
name|srcNamesTable
parameter_list|,
name|unsigned
name|nbFiles
parameter_list|,
specifier|const
name|char
modifier|*
name|suffix
parameter_list|,
specifier|const
name|char
modifier|*
name|dictFileName
parameter_list|,
name|int
name|compressionLevel
parameter_list|,
name|ZSTD_compressionParameters
modifier|*
name|comprParams
parameter_list|)
function_decl|;
comment|/** FIO_decompressMultipleFilenames() :     @return : nb of missing or skipped files */
name|int
name|FIO_decompressMultipleFilenames
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
name|srcNamesTable
parameter_list|,
name|unsigned
name|nbFiles
parameter_list|,
specifier|const
name|char
modifier|*
name|suffix
parameter_list|,
specifier|const
name|char
modifier|*
name|dictFileName
parameter_list|)
function_decl|;
if|#
directive|if
name|defined
argument_list|(
name|__cplusplus
argument_list|)
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* FILEIO_H_23981798732 */
end_comment

end_unit

