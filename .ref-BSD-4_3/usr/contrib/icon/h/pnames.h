begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Structure for mapping string names of procedures to block addresses.  */
end_comment

begin_struct
struct|struct
name|pstrnm
block|{
name|char
modifier|*
name|pstrep
decl_stmt|;
name|struct
name|b_proc
modifier|*
name|pblock
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|b_proc
define|#
directive|define
name|PDEF
parameter_list|(
name|p
parameter_list|)
value|B
comment|/**/
value|p,
include|#
directive|include
file|"../h/pdef.h"
name|interp
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Hack to avoid ,; in expansion */
end_comment

begin_undef
undef|#
directive|undef
name|PDEF
end_undef

begin_decl_stmt
specifier|extern
name|struct
name|b_proc
name|Basgn
decl_stmt|,
name|Bbang
decl_stmt|,
name|Bcat
decl_stmt|,
name|Bcompl
decl_stmt|,
name|Bdiff
decl_stmt|,
name|Bdiv
decl_stmt|,
name|Beqv
decl_stmt|,
name|Binter
decl_stmt|,
name|Blconcat
decl_stmt|,
name|Blexeq
decl_stmt|,
name|Blexge
decl_stmt|,
name|Blexgt
decl_stmt|,
name|Blexle
decl_stmt|,
name|Blexlt
decl_stmt|,
name|Blexne
decl_stmt|,
name|Bminus
decl_stmt|,
name|Bmod
decl_stmt|,
name|Bmult
decl_stmt|,
name|Bneg
decl_stmt|,
name|Bneqv
decl_stmt|,
name|Bnonnull
decl_stmt|,
name|Bnull
decl_stmt|,
name|Bnumber
decl_stmt|,
name|Bnumeq
decl_stmt|,
name|Bnumge
decl_stmt|,
name|Bnumgt
decl_stmt|,
name|Bnumle
decl_stmt|,
name|Bnumlt
decl_stmt|,
name|Bnumne
decl_stmt|,
name|Bplus
decl_stmt|,
name|Bpower
decl_stmt|,
name|Brandom
decl_stmt|,
name|Brasgn
decl_stmt|,
name|Brefresh
decl_stmt|,
name|Brswap
decl_stmt|,
name|Bsect
decl_stmt|,
name|Bsize
decl_stmt|,
name|Bsubsc
decl_stmt|,
name|Bswap
decl_stmt|,
name|Btabmat
decl_stmt|,
name|Btoby
decl_stmt|,
name|Bunioncs
decl_stmt|,
name|Bvalue
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|pstrnm
name|pntab
index|[]
init|=
block|{
define|#
directive|define
name|PDEF
parameter_list|(
name|p
parameter_list|)
value|"p",&B
comment|/**/
value|p,
include|#
directive|include
file|"../h/pdef.h"
undef|#
directive|undef
name|PDEF
literal|":="
block|,
operator|&
name|Basgn
block|,
literal|"!"
block|,
operator|&
name|Bbang
block|,
literal|"||"
block|,
operator|&
name|Bcat
block|,
literal|"~"
block|,
operator|&
name|Bcompl
block|,
literal|"--"
block|,
operator|&
name|Bdiff
block|,
literal|"/"
block|,
operator|&
name|Bdiv
block|,
literal|"==="
block|,
operator|&
name|Beqv
block|,
literal|"**"
block|,
operator|&
name|Binter
block|,
literal|"|||"
block|,
operator|&
name|Blconcat
block|,
literal|"=="
block|,
operator|&
name|Blexeq
block|,
literal|">>="
block|,
operator|&
name|Blexge
block|,
literal|">>"
block|,
operator|&
name|Blexgt
block|,
literal|"<<="
block|,
operator|&
name|Blexle
block|,
literal|"<<"
block|,
operator|&
name|Blexlt
block|,
literal|"~=="
block|,
operator|&
name|Blexne
block|,
literal|"-"
block|,
operator|&
name|Bminus
block|,
literal|"%"
block|,
operator|&
name|Bmod
block|,
literal|"*"
block|,
operator|&
name|Bmult
block|,
literal|"-"
block|,
operator|&
name|Bneg
block|,
literal|"~==="
block|,
operator|&
name|Bneqv
block|,
literal|"\\"
block|,
operator|&
name|Bnonnull
block|,
literal|"/"
block|,
operator|&
name|Bnull
block|,
literal|"+"
block|,
operator|&
name|Bnumber
block|,
literal|"="
block|,
operator|&
name|Bnumeq
block|,
literal|">="
block|,
operator|&
name|Bnumge
block|,
literal|">"
block|,
operator|&
name|Bnumgt
block|,
literal|"<="
block|,
operator|&
name|Bnumle
block|,
literal|"<"
block|,
operator|&
name|Bnumlt
block|,
literal|"~="
block|,
operator|&
name|Bnumne
block|,
literal|"+"
block|,
operator|&
name|Bplus
block|,
literal|"^"
block|,
operator|&
name|Bpower
block|,
literal|"?"
block|,
operator|&
name|Brandom
block|,
literal|"<-"
block|,
operator|&
name|Brasgn
block|,
literal|"^"
block|,
operator|&
name|Brefresh
block|,
literal|"<->"
block|,
operator|&
name|Brswap
block|,
literal|":"
block|,
operator|&
name|Bsect
block|,
literal|"*"
block|,
operator|&
name|Bsize
block|,
literal|"[]"
block|,
operator|&
name|Bsubsc
block|,
literal|":=:"
block|,
operator|&
name|Bswap
block|,
literal|"="
block|,
operator|&
name|Btabmat
block|,
literal|"..."
block|,
operator|&
name|Btoby
block|,
literal|"++"
block|,
operator|&
name|Bunioncs
block|,
literal|"."
block|,
operator|&
name|Bvalue
block|,
literal|0
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

end_unit

