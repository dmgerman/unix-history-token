begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Table of opcodes for the sparc. 	Copyright 1989, 1991, 1992 Free Software Foundation, Inc.  This file is part of GAS, the GNU Assembler, GDB, the GNU debugger, and the GNU Binutils.  GAS/GDB is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  GAS/GDB is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with GAS or GDB; see the file COPYING.	If not, write to the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.	*/
end_comment

begin_comment
comment|/*  * $Id: sparc.h,v 1.1 1993/11/03 00:56:11 paul Exp $  */
end_comment

begin_comment
comment|/* FIXME-someday: perhaps the ,a's and such should be embedded in the     instruction's name rather than the args.  This would make gas faster, pinsn     slower, but would mess up some macros a bit.  xoxorich. */
end_comment

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|__STDC__
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
specifier|const
argument_list|)
end_if

begin_define
define|#
directive|define
name|const
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * Structure of an opcode table entry.  */
end_comment

begin_enum
enum|enum
name|sparc_architecture
block|{
name|v6
init|=
literal|0
block|,
name|v7
block|,
name|v8
block|, }
enum|;
end_enum

begin_decl_stmt
specifier|static
specifier|const
name|char
modifier|*
name|architecture_pname
index|[]
init|=
block|{
literal|"v6"
block|,
literal|"v7"
block|,
literal|"v8"
block|,
name|NULL
block|, }
decl_stmt|;
end_decl_stmt

begin_struct
struct|struct
name|sparc_opcode
block|{
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|unsigned
name|long
name|match
decl_stmt|;
comment|/* Bits that must be set. */
name|unsigned
name|long
name|lose
decl_stmt|;
comment|/* Bits that must not be set. */
specifier|const
name|char
modifier|*
name|args
decl_stmt|;
comment|/* This was called "delayed" in versions before the flags. */
name|char
name|flags
decl_stmt|;
name|enum
name|sparc_architecture
name|architecture
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|F_DELAYED
value|1
end_define

begin_comment
comment|/* Delayed branch */
end_comment

begin_define
define|#
directive|define
name|F_ALIAS
value|2
end_define

begin_comment
comment|/* Alias for a "real" instruction */
end_comment

begin_comment
comment|/*  All sparc opcodes are 32 bits, except for the `set' instruction (really a macro), which is 64 bits. It is handled as a special case.  The match component is a mask saying which bits must match a particular opcode in order for an instruction to be an instance of that opcode.  The args component is a string containing one character for each operand of the instruction.  Kinds of operands: 	#	Number used by optimizer.	It is ignored. 	1	rs1 register. 	2	rs2 register. 	d	rd register. 	e	frs1 floating point register. 	v	frs1 floating point register (double/even). 	V	frs1 floating point register (quad/multiple of 4). 	f	frs2 floating point register. 	B	frs2 floating point register (double/even). 	R	frs2 floating point register (quad/multiple of 4). 	g	frsd floating point register. 	H	frsd floating point register (double/even). 	J	frsd floating point register (quad/multiple of 4). 	b	crs1 coprocessor register 	c	crs2 coprocessor register 	D	crsd coprocessor register 	m	alternate space register (asr) in rd 	M	alternate space register (asr) in rs1 	h	22 high bits. 	i	13 bit Immediate. 	n	22 bit immediate. 	l	22 bit PC relative immediate. 	L	30 bit PC relative immediate. 	a	Annul.	The annul bit is set. 	A	Alternate address space. Stored as 8 bits. 	C	Coprocessor state register. 	F	floating point state register. 	p	Processor state register. 	q	Floating point queue. 	r	Single register that is both rs1 and rsd. 	Q	Coprocessor queue. 	S	Special case. 	x	Single register that is both rs2 and rsd. 	t	Trap base register. 	w	Window invalid mask register. 	y	Y register.  The following chars are unused: (note: ,[] are used as punctuation) [oOX3450]  */
end_comment

begin_comment
comment|/* The order of the opcodes in this table is significant: 	 	* The assembler requires that all instances of the same mnemonic must 	be consecutive.	If they aren't, the assembler will bomb at runtime.  	* The disassembler should not care about the order of the opcodes.  */
end_comment

begin_define
define|#
directive|define
name|OP2
parameter_list|(
name|x
parameter_list|)
value|(((x)&0x7)<< 22)
end_define

begin_comment
comment|/* op2 field of format2 insns */
end_comment

begin_define
define|#
directive|define
name|OP3
parameter_list|(
name|x
parameter_list|)
value|(((x)&0x3f)<< 19)
end_define

begin_comment
comment|/* op3 field of format3 insns */
end_comment

begin_define
define|#
directive|define
name|OP
parameter_list|(
name|x
parameter_list|)
value|(((x)&0x3)<< 30)
end_define

begin_comment
comment|/* op field of all insns */
end_comment

begin_define
define|#
directive|define
name|OPF
parameter_list|(
name|x
parameter_list|)
value|(((x)&0x1ff)<< 5)
end_define

begin_comment
comment|/* opf field of float insns */
end_comment

begin_define
define|#
directive|define
name|F3F
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|,
name|z
parameter_list|)
value|(OP(x) | OP3(y) | OPF(z))
end_define

begin_comment
comment|/* format3 float insns */
end_comment

begin_define
define|#
directive|define
name|F3I
parameter_list|(
name|x
parameter_list|)
value|(((x)&0x1)<< 13)
end_define

begin_comment
comment|/* immediate field of format 3 insns */
end_comment

begin_define
define|#
directive|define
name|F2
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|(OP(x) | OP2(y))
end_define

begin_comment
comment|/* format 2 insns */
end_comment

begin_define
define|#
directive|define
name|F3
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|,
name|z
parameter_list|)
value|(OP(x) | OP3(y) | F3I(z))
end_define

begin_comment
comment|/* format3 insns */
end_comment

begin_define
define|#
directive|define
name|F1
parameter_list|(
name|x
parameter_list|)
value|(OP(x))
end_define

begin_define
define|#
directive|define
name|DISP30
parameter_list|(
name|x
parameter_list|)
value|((x)&0x3fffffff)
end_define

begin_define
define|#
directive|define
name|ASI
parameter_list|(
name|x
parameter_list|)
value|(((x)&0xff)<< 5)
end_define

begin_comment
comment|/* asi field of format3 insns */
end_comment

begin_define
define|#
directive|define
name|RS2
parameter_list|(
name|x
parameter_list|)
value|((x)&0x1f)
end_define

begin_comment
comment|/* rs2 field */
end_comment

begin_define
define|#
directive|define
name|SIMM13
parameter_list|(
name|x
parameter_list|)
value|((x)&0x1fff)
end_define

begin_comment
comment|/* simm13 field */
end_comment

begin_define
define|#
directive|define
name|RD
parameter_list|(
name|x
parameter_list|)
value|(((x)&0x1f)<< 25)
end_define

begin_comment
comment|/* destination register field */
end_comment

begin_define
define|#
directive|define
name|RS1
parameter_list|(
name|x
parameter_list|)
value|(((x)&0x1f)<< 14)
end_define

begin_comment
comment|/* rs1 field */
end_comment

begin_define
define|#
directive|define
name|ASI_RS2
parameter_list|(
name|x
parameter_list|)
value|(SIMM13(x))
end_define

begin_define
define|#
directive|define
name|ANNUL
value|(1<<29)
end_define

begin_define
define|#
directive|define
name|IMMED
value|F3I(1)
end_define

begin_define
define|#
directive|define
name|RD_G0
value|RD(~0)
end_define

begin_define
define|#
directive|define
name|RS1_G0
value|RS1(~0)
end_define

begin_define
define|#
directive|define
name|RS2_G0
value|RS2(~0)
end_define

begin_define
define|#
directive|define
name|COND
parameter_list|(
name|x
parameter_list|)
value|(((x)&0xf)<<25)
end_define

begin_define
define|#
directive|define
name|CONDA
value|(COND(0x8))
end_define

begin_define
define|#
directive|define
name|CONDCC
value|(COND(0xd))
end_define

begin_define
define|#
directive|define
name|CONDCS
value|(COND(0x5))
end_define

begin_define
define|#
directive|define
name|CONDE
value|(COND(0x1))
end_define

begin_define
define|#
directive|define
name|CONDG
value|(COND(0xa))
end_define

begin_define
define|#
directive|define
name|CONDGE
value|(COND(0xb))
end_define

begin_define
define|#
directive|define
name|CONDGU
value|(COND(0xc))
end_define

begin_define
define|#
directive|define
name|CONDL
value|(COND(0x3))
end_define

begin_define
define|#
directive|define
name|CONDLE
value|(COND(0x2))
end_define

begin_define
define|#
directive|define
name|CONDLEU
value|(COND(0x4))
end_define

begin_define
define|#
directive|define
name|CONDN
value|(COND(0x0))
end_define

begin_define
define|#
directive|define
name|CONDNE
value|(COND(0x9))
end_define

begin_define
define|#
directive|define
name|CONDNEG
value|(COND(0x6))
end_define

begin_define
define|#
directive|define
name|CONDPOS
value|(COND(0xe))
end_define

begin_define
define|#
directive|define
name|CONDVC
value|(COND(0xf))
end_define

begin_define
define|#
directive|define
name|CONDVS
value|(COND(0x7))
end_define

begin_define
define|#
directive|define
name|CONDNZ
value|CONDNE
end_define

begin_define
define|#
directive|define
name|CONDZ
value|CONDE
end_define

begin_define
define|#
directive|define
name|CONDGEU
value|CONDCC
end_define

begin_define
define|#
directive|define
name|CONDLU
value|CONDCS
end_define

begin_define
define|#
directive|define
name|FCONDA
value|(COND(0x8))
end_define

begin_define
define|#
directive|define
name|FCONDE
value|(COND(0x9))
end_define

begin_define
define|#
directive|define
name|FCONDG
value|(COND(0x6))
end_define

begin_define
define|#
directive|define
name|FCONDGE
value|(COND(0xb))
end_define

begin_define
define|#
directive|define
name|FCONDL
value|(COND(0x4))
end_define

begin_define
define|#
directive|define
name|FCONDLE
value|(COND(0xd))
end_define

begin_define
define|#
directive|define
name|FCONDLG
value|(COND(0x2))
end_define

begin_define
define|#
directive|define
name|FCONDN
value|(COND(0x0))
end_define

begin_define
define|#
directive|define
name|FCONDNE
value|(COND(0x1))
end_define

begin_define
define|#
directive|define
name|FCONDO
value|(COND(0xf))
end_define

begin_define
define|#
directive|define
name|FCONDU
value|(COND(0x7))
end_define

begin_define
define|#
directive|define
name|FCONDUE
value|(COND(0xa))
end_define

begin_define
define|#
directive|define
name|FCONDUG
value|(COND(0x5))
end_define

begin_define
define|#
directive|define
name|FCONDUGE
value|(COND(0xc))
end_define

begin_define
define|#
directive|define
name|FCONDUL
value|(COND(0x3))
end_define

begin_define
define|#
directive|define
name|FCONDULE
value|(COND(0xe))
end_define

begin_define
define|#
directive|define
name|FCONDNZ
value|FCONDNE
end_define

begin_define
define|#
directive|define
name|FCONDZ
value|FCONDE
end_define

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|sparc_opcode
name|sparc_opcodes
index|[]
init|=
block|{
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x00
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x00
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x00
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x00
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2_G0
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ld [rs1+%g0],d */
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x00
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x00
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x00
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x00
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x00
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x00
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x00
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x00
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ld [rs1+0],d */
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x20
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x20
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x20
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x20
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2_G0
block|,
literal|"[1],g"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ld [rs1+%g0],d */
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x20
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x20
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x20
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x20
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x20
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x20
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x20
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x20
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],g"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ld [rs1+0],d */
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x21
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x21
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],F"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x21
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x21
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2_G0
block|,
literal|"[1],F"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ld [rs1+%g0],d */
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x21
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x21
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],F"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x21
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x21
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],F"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x21
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x21
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],F"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x21
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x21
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],F"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ld [rs1+0],d */
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x30
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],D"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x30
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2_G0
block|,
literal|"[1],D"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ld [rs1+%g0],d */
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x30
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],D"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x30
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],D"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x30
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],D"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x30
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],D"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ld [rs1+0],d */
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x31
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],C"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x31
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2_G0
block|,
literal|"[1],C"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ld [rs1+%g0],d */
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x31
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],C"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x31
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],C"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x31
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],C"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ld"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x31
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],C"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ld [rs1+0],d */
block|{
literal|"lda"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x10
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x10
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"lda"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x10
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x10
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2_G0
block|,
literal|"[1]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* lda [rs1+%g0],d */
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x03
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x03
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x03
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x03
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldd [rs1+%g0],d */
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x03
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x03
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x03
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x03
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x03
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x03
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x03
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x03
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldd [rs1+0],d */
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x23
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x23
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x23
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x23
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],g"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldd [rs1+%g0],d */
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x23
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x23
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x23
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x23
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x23
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x23
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x23
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x23
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],g"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldd [rs1+0],d */
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x33
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],D"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x33
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],D"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldd [rs1+%g0],d */
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x33
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],D"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x33
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],D"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x33
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],D"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldd"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x33
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],D"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldd [rs1+0],d */
block|{
literal|"ldsb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x09
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x09
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldsb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x09
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x09
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldsb [rs1+%g0],d */
block|{
literal|"ldsb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x09
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x09
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldsb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x09
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x09
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldsb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x09
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x09
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldsb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x09
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x09
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldsb [rs1+0],d */
block|{
literal|"ldsh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0a
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0a
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldsh [rs1+%g0],d */
block|{
literal|"ldsh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0a
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0a
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldsh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0a
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0a
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldsh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0a
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0a
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldsh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0a
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0a
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldsh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0a
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0a
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldsh [rs1+0],d */
block|{
literal|"ldstub"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0d
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0d
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldstub"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0d
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0d
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldstub [rs1+%g0],d */
block|{
literal|"ldstub"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0d
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0d
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldstub"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0d
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0d
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldstub"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0d
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0d
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldub"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x01
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x01
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldub"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x01
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x01
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldub [rs1+%g0],d */
block|{
literal|"ldub"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x01
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x01
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldub"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x01
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x01
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldub"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x01
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x01
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldub"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x01
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x01
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldub [rs1+0],d */
block|{
literal|"lduh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x02
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"lduh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x02
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* lduh [rs1+%g0],d */
block|{
literal|"lduh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x02
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"lduh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x02
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"lduh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x02
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"lduh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x02
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* lduh [rs1+0],d */
block|{
literal|"ldda"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x13
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x13
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldda"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x13
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x13
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2_G0
block|,
literal|"[1]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldda [rs1+%g0],d */
block|{
literal|"ldsba"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x19
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x19
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldsba"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x19
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x19
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2_G0
block|,
literal|"[1]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldsba [rs1+%g0],d */
block|{
literal|"ldsha"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x1a
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x1a
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldsha"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x1a
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x1a
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2_G0
block|,
literal|"[1]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldsha [rs1+%g0],d */
block|{
literal|"ldstuba"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x1d
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x1d
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ldstuba"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x1d
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x1d
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2_G0
block|,
literal|"[1]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* ldstuba [rs1+%g0],d */
block|{
literal|"lduba"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x11
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x11
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"lduba"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x11
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x11
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2_G0
block|,
literal|"[1]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* lduba [rs1+%g0],d */
block|{
literal|"lduha"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x12
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x12
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"lduha"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x12
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x12
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2_G0
block|,
literal|"[1]A,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* lduha [rs1+%g0],d */
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x04
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1+2]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x04
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* st d,[rs1+%g0] */
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x04
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"d,[1+i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x04
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"d,[i+1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x04
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"d,[i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x04
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* st d,[rs1+0] */
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x24
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x24
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"g,[1+2]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x24
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x24
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"g,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* st d[rs1+%g0] */
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x24
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x24
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"g,[1+i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x24
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x24
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"g,[i+1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x24
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x24
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"g,[i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x24
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x24
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"g,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* st d,[rs1+0] */
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x34
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"D,[1+2]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x34
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"D,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* st d,[rs1+%g0] */
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x34
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"D,[1+i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x34
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"D,[i+1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x34
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"D,[i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x34
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"D,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* st d,[rs1+0] */
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x35
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x35
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"C,[1+2]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x35
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x35
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"C,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* st d,[rs1+%g0] */
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x35
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x35
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"C,[1+i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x35
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x35
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"C,[i+1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x35
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x35
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"C,[i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x35
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x35
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"C,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* st d,[rs1+0] */
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x25
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x25
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"F,[1+2]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x25
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x25
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"F,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* st d,[rs1+%g0] */
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x25
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x25
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"F,[1+i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x25
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x25
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"F,[i+1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x25
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x25
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
operator||
name|RS1_G0
block|,
literal|"F,[i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"st"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x25
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x25
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"F,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* st d,[rs1+0] */
block|{
literal|"sta"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x14
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x14
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1+2]A"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"sta"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x14
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x14
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1]A"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* sta d,[rs1+%g0] */
block|{
literal|"stb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x05
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1+2]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"stb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x05
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* stb d,[rs1+%g0] */
block|{
literal|"stb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x05
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"d,[1+i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"stb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x05
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"d,[i+1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"stb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x05
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"d,[i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"stb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x05
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* stb d,[rs1+0] */
block|{
literal|"stba"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x15
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x15
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1+2]A"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"stba"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x15
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x15
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1]A"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* stba d,[rs1+%g0] */
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x07
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x07
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1+2]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x07
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x07
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* std d,[rs1+%g0] */
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x07
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x07
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"d,[1+i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x07
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x07
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"d,[i+1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x07
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x07
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"d,[i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x07
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x07
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* std d,[rs1+0] */
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x26
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x26
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"q,[1+2]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x26
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x26
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"q,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* std d,[rs1+%g0] */
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x26
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x26
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"q,[1+i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x26
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x26
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"q,[i+1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x26
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x26
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"q,[i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x26
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x26
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"q,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* std d,[rs1+0] */
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x27
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x27
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"g,[1+2]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x27
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x27
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"g,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* std d,[rs1+%g0] */
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x27
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x27
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"g,[1+i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x27
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x27
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"g,[i+1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x27
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x27
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"g,[i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x27
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x27
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"g,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* std d,[rs1+0] */
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x36
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x36
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"Q,[1+2]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x36
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x36
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"Q,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* std d,[rs1+%g0] */
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x36
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x36
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"Q,[1+i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x36
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x36
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"Q,[i+1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x36
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x36
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"Q,[i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x36
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x36
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"Q,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* std d,[rs1+0] */
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x37
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x37
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"D,[1+2]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x37
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x37
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"D,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* std d,[rs1+%g0] */
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x37
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x37
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"D,[1+i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x37
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x37
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"D,[i+1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x37
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x37
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"D,[i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"std"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x37
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x37
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"D,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* std d,[rs1+0] */
block|{
literal|"stda"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x17
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x17
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1+2]A"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"stda"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x17
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x17
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1]A"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* stda d,[rs1+%g0] */
block|{
literal|"sth"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x06
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1+2]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"sth"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x06
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* sth d,[rs1+%g0] */
block|{
literal|"sth"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x06
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"d,[1+i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"sth"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x06
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"d,[i+1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"sth"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x06
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"d,[i]"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"sth"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x06
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1]"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* sth d,[+] */
block|{
literal|"stha"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x16
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x16
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1+2]A"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"stha"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x16
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x16
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d,[1]A"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* stha ,[+%] */
block|{
literal|"swap"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0f
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0f
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2],d"
block|,
literal|0
block|,
name|v7
block|}
block|,
block|{
literal|"swap"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0f
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0f
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v7
block|}
block|,
comment|/* swap [rs1+%g0],d */
block|{
literal|"swap"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0f
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0f
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+i],d"
block|,
literal|0
block|,
name|v7
block|}
block|,
block|{
literal|"swap"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0f
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0f
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[i+1],d"
block|,
literal|0
block|,
name|v7
block|}
block|,
block|{
literal|"swap"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0f
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0f
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"[i],d"
block|,
literal|0
block|,
name|v7
block|}
block|,
block|{
literal|"swap"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x0f
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x0f
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1],d"
block|,
literal|0
block|,
name|v7
block|}
block|,
comment|/* swap [rs1+0],d */
block|{
literal|"swapa"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x1f
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x1f
argument_list|,
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2]A,d"
block|,
literal|0
block|,
name|v7
block|}
block|,
block|{
literal|"swapa"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x1f
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x1f
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1]A,d"
block|,
literal|0
block|,
name|v7
block|}
block|,
comment|/* swapa [rs1+%g0],d */
block|{
literal|"restore"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x3d
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x3d
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"restore"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x3d
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x3d
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|RS1_G0
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|""
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* restore %g0,%g0,%g0 */
block|{
literal|"restore"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x3d
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x3d
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"restore"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x3d
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x3d
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
operator||
name|RS1_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|""
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* restore %g0,0,%g0 */
block|{
literal|"rett"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x39
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x39
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1+2"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* rett rs1+rs2 */
block|{
literal|"rett"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x39
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x39
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* rett rs1,%g0 */
block|{
literal|"rett"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x39
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x39
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"1+i"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* rett rs1+X */
block|{
literal|"rett"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x39
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x39
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"i+1"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* rett X+rs1 */
block|{
literal|"rett"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x39
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x39
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
operator||
name|RS1_G0
block|,
literal|"i"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* rett X+rs1 */
block|{
literal|"rett"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x39
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x39
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
operator||
name|RS1_G0
block|,
literal|"i"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* rett X */
block|{
literal|"rett"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x39
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x39
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* rett rs1+0 */
block|{
literal|"save"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x3c
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x3c
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"save"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x3c
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x3c
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"ret"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
operator||
name|RS1
argument_list|(
literal|0x1f
argument_list|)
operator||
name|SIMM13
argument_list|(
literal|8
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|8
argument_list|)
block|,
literal|""
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl %i7+8,%g0 */
block|{
literal|"retl"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
operator||
name|RS1
argument_list|(
literal|0x0f
argument_list|)
operator||
name|SIMM13
argument_list|(
literal|8
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1
argument_list|(
operator|~
literal|0x0f
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|8
argument_list|)
block|,
literal|""
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl %o7+8,%g0 */
block|{
literal|"jmpl"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1+2,d"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
block|{
literal|"jmpl"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,d"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl rs1+%g0,d */
block|{
literal|"jmpl"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,d"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl rs1+0,d */
block|{
literal|"jmpl"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"i,d"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl %g0+i,d */
block|{
literal|"jmpl"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1+i,d"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
block|{
literal|"jmpl"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i+1,d"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
block|{
literal|"jmpl"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"i,d"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* The 1<<12 is a long story.  It is necessary.  For more info, please contact rich@cygnus.com */
block|{
literal|"sll"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x25
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x25
argument_list|,
operator|~
literal|0
argument_list|)
operator||
operator|(
literal|1
operator|<<
literal|12
operator|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"sll"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x25
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x25
argument_list|,
operator|~
literal|1
argument_list|)
operator||
operator|(
literal|1
operator|<<
literal|12
operator|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"sra"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x27
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x27
argument_list|,
operator|~
literal|0
argument_list|)
operator||
operator|(
literal|1
operator|<<
literal|12
operator|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"sra"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x27
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x27
argument_list|,
operator|~
literal|1
argument_list|)
operator||
operator|(
literal|1
operator|<<
literal|12
operator|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"srl"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x26
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x26
argument_list|,
operator|~
literal|0
argument_list|)
operator||
operator|(
literal|1
operator|<<
literal|12
operator|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"srl"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x26
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x26
argument_list|,
operator|~
literal|1
argument_list|)
operator||
operator|(
literal|1
operator|<<
literal|12
operator|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"mulscc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x24
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x24
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"mulscc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x24
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x24
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"clr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x02
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|RS1_G0
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* or %g0,%g0,d */
block|{
literal|"clr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x02
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"d"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* or %g0,0,d	*/
block|{
literal|"clr"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x04
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"clr"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x04
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* st %g0,[rs1+%g0] */
block|{
literal|"clr"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x04
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"[1+i]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"clr"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x04
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"[i+1]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"clr"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x04
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
operator||
name|RS1_G0
block|,
literal|"[i]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"clr"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x04
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* st %g0,[rs1+0] */
block|{
literal|"clrb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x05
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"clrb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x05
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* stb %g0,[rs1+%g0] */
block|{
literal|"clrb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x05
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"[1+i]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"clrb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x05
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"[i+1]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"clrb"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x05
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
operator||
name|RS1_G0
block|,
literal|"[i]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"clrh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x06
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1+2]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"clrh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x06
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"[1]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* sth %g0,[rs1+%g0] */
block|{
literal|"clrh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x06
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"[1+i]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"clrh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x06
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"[i+1]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"clrh"
block|,
name|F3
argument_list|(
literal|3
argument_list|,
literal|0x06
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|3
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
operator||
name|RS1_G0
block|,
literal|"[i]"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"orcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x12
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x12
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"orcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x12
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x12
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"orcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x12
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x12
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"orncc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x16
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x16
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"orncc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x16
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x16
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"orncc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x16
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x16
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"orn"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x06
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"orn"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x06
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"orn"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x06
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x06
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"tst"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x12
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x12
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* orcc rs1, %g0, %g0 */
block|{
literal|"tst"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x12
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x12
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|RS1_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"2"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* orcc %g0, rs2, %g0 */
block|{
literal|"tst"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x12
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x12
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* orcc rs1, 0, %g0 */
block|{
literal|"wr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x30
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,m"
block|,
literal|0
block|,
name|v8
block|}
block|,
comment|/* wr r,r,%asrX */
block|{
literal|"wr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x30
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,y"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* wr r,r,%y */
block|{
literal|"wr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x30
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,m"
block|,
literal|0
block|,
name|v8
block|}
block|,
comment|/* wr r,i,%asrX */
block|{
literal|"wr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x30
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"1,i,y"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* wr r,i,%y */
block|{
literal|"wr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x31
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,p"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* wr r,r,%psr */
block|{
literal|"wr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x31
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"1,i,p"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* wr r,i,%psr */
block|{
literal|"wr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x32
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x32
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,w"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* wr r,r,%wim */
block|{
literal|"wr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x32
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x32
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"1,i,w"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* wr r,i,%wim */
block|{
literal|"wr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x33
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,t"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* wr r,r,%tbr */
block|{
literal|"wr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x33
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"1,i,t"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* wr r,i,%tbr */
block|{
literal|"rd"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x28
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x28
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"M,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
comment|/* rd %asr1,r */
block|{
literal|"rd"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x28
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x28
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS1_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"y,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* rd %y,r */
block|{
literal|"rd"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x2b
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x2b
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS1_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"t,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* rd %tbr,r */
block|{
literal|"rd"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x29
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x29
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS1_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"p,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* rd %psr,r */
block|{
literal|"rd"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x2a
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x2a
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS1_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"w,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* rd %wim,r */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x30
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,m"
block|,
name|F_ALIAS
block|,
name|v8
block|}
block|,
comment|/* wr r,r,%asrX */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x30
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,y"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr r,r,%y */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x30
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,m"
block|,
name|F_ALIAS
block|,
name|v8
block|}
block|,
comment|/* wr r,i,%asrX */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x30
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"1,i,y"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr r,i,%y */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x31
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,p"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr r,r,%psr */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x31
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"1,i,p"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr r,i,%psr */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x32
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x32
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,w"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr r,r,%wim */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x32
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x32
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"1,i,w"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr r,i,%wim */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x33
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,t"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr r,r,%tbr */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x33
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"1,i,t"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr r,i,%tbr */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x28
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x28
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"M,d"
block|,
name|F_ALIAS
block|,
name|v8
block|}
block|,
comment|/* rd %asr1,r */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x28
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x28
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS1_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"y,d"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* rd %y,r */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x29
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x29
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS1_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"p,d"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* rd %psr,r */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x2a
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x2a
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS1_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"w,d"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* rd %wim,r */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x2b
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x2b
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS1_G0
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"t,d"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* rd %tbr,r */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x30
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,y"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr rs1,%g0,%y */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x30
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,y"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x30
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x30
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,y"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr rs1,0,%y */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x31
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,p"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr rs1,%g0,%psr */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x31
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,p"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x31
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x31
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,p"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr rs1,0,%psr */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x32
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x32
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,w"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr rs1,%g0,%wim */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x32
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x32
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,w"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x32
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x32
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,w"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr rs1,0,%wim */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x33
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,t"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr rs1,%g0,%tbr */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x33
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,t"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x33
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x33
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,t"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* wr rs1,0,%tbr */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x02
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS1_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* or %g0,rs2,d */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x02
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* or %g0,i,d	*/
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x02
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* or rs1,%g0,d   */
block|{
literal|"mov"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x02
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* or rs1,0,d */
block|{
literal|"or"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x02
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"or"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x02
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"or"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x02
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"bset"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x02
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"2,r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* or rd,rs2,rd */
block|{
literal|"bset"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x02
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x02
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* or rd,i,rd */
block|{
literal|"andn"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x05
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"andn"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x05
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"andn"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x05
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"andncc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x15
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x15
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"andncc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x15
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x15
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"andncc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x15
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x15
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"bclr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x05
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"2,r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* andn rd,rs2,rd */
block|{
literal|"bclr"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x05
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x05
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* andn rd,i,rd */
block|{
literal|"cmp"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x14
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x14
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* subcc rs1,rs2,%g0 */
block|{
literal|"cmp"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x14
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x14
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"1,i"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* subcc rs1,i,%g0 */
block|{
literal|"sub"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x04
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"sub"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x04
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"subcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x14
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x14
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"subcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x14
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x14
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"subx"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0c
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0c
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"subx"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0c
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0c
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"subxcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1c
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1c
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"subxcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1c
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1c
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"and"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x01
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x01
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"and"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x01
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x01
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"and"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x01
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x01
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"andcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x11
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x11
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"andcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x11
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x11
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"andcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x11
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x11
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"dec"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x04
argument_list|,
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
literal|0x1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0x0001
argument_list|)
block|,
literal|"r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* sub rd,1,rd */
block|{
literal|"dec"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x04
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* sub rd,i,rd */
block|{
literal|"deccc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x14
argument_list|,
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
literal|0x1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x14
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0x0001
argument_list|)
block|,
literal|"r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* subcc rd,1,rd */
block|{
literal|"deccc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x14
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x14
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* subcc rd,i,rd */
block|{
literal|"inc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x00
argument_list|,
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
literal|0x1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x00
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0x0001
argument_list|)
block|,
literal|"r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* add rs1,1,rsd */
block|{
literal|"inc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x00
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x00
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* add rs1,i,rsd */
block|{
literal|"inccc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x10
argument_list|,
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
literal|0x1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x10
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|SIMM13
argument_list|(
operator|~
literal|0x0001
argument_list|)
block|,
literal|"r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* addcc rd,1,rd */
block|{
literal|"inccc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x10
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x10
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* addcc rd,i,rd */
block|{
literal|"btst"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x11
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x11
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* andcc rs1,rs2,%g0 */
block|{
literal|"btst"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x11
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x11
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"i,1"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* andcc rs1,i,%g0 */
block|{
literal|"neg"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x04
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS1_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"2,d"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* sub %g0,rs2,rd */
block|{
literal|"neg"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x04
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x04
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RS1_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"x"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* sub %g0,rd,rd */
block|{
literal|"add"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x00
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x00
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"add"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x00
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x00
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"add"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x00
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x00
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"addcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x10
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x10
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"addcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x10
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x10
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"addcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x10
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x10
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"addx"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x08
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x08
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"addx"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x08
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x08
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"addx"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x08
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x08
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"addxcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x18
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x18
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"addxcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x18
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x18
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"addxcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x18
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x18
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"smul"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0b
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0b
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"smul"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0b
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0b
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"smul"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0b
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0b
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"smulcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1b
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1b
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"smulcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1b
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1b
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"smulcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1b
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1b
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"umul"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0a
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0a
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"umul"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0a
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0a
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"umul"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0a
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0a
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"umulcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1a
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1a
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"umulcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1a
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1a
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"umulcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1a
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1a
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"sdiv"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0f
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0f
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"sdiv"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0f
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0f
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"sdiv"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0f
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0f
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"sdivcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1f
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1f
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"sdivcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1f
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1f
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"sdivcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1f
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1f
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"udiv"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0e
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0e
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"udiv"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0e
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0e
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"udiv"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x0e
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x0e
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"udivcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1e
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1e
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"udivcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1e
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1e
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"udivcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x1e
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x1e
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"call"
block|,
name|F1
argument_list|(
literal|0x1
argument_list|)
block|,
name|F1
argument_list|(
operator|~
literal|0x1
argument_list|)
block|,
literal|"L"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
block|{
literal|"call"
block|,
name|F1
argument_list|(
literal|0x1
argument_list|)
block|,
name|F1
argument_list|(
operator|~
literal|0x1
argument_list|)
block|,
literal|"L,#"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
block|{
literal|"call"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|0
argument_list|)
operator||
name|RD
argument_list|(
literal|0xf
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD
argument_list|(
operator|~
literal|0xf
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl rs1+%g0, %o7 */
block|{
literal|"call"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|0
argument_list|)
operator||
name|RD
argument_list|(
literal|0xf
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD
argument_list|(
operator|~
literal|0xf
argument_list|)
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,#"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
block|{
literal|"call"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|0
argument_list|)
operator||
name|RD
argument_list|(
literal|0xf
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD
argument_list|(
operator|~
literal|0xf
argument_list|)
block|,
literal|"1+2"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl rs1+rs2,%o7 */
block|{
literal|"call"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|0
argument_list|)
operator||
name|RD
argument_list|(
literal|0xf
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD
argument_list|(
operator|~
literal|0xf
argument_list|)
block|,
literal|"1+2,#"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl rs1+rs2,%o7 */
block|{
literal|"call"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
operator||
name|RD
argument_list|(
literal|0xf
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD
argument_list|(
operator|~
literal|0xf
argument_list|)
block|,
literal|"1+i"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl rs1+i,%o7 */
block|{
literal|"call"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
operator||
name|RD
argument_list|(
literal|0xf
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD
argument_list|(
operator|~
literal|0xf
argument_list|)
block|,
literal|"1+i,#"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl rs1+i,%o7 */
block|{
literal|"call"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
operator||
name|RD
argument_list|(
literal|0xf
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD
argument_list|(
operator|~
literal|0xf
argument_list|)
block|,
literal|"i+1"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl i+rs1,%o7 */
block|{
literal|"call"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
operator||
name|RD
argument_list|(
literal|0xf
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD
argument_list|(
operator|~
literal|0xf
argument_list|)
block|,
literal|"i+1,#"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl i+rs1,%o7 */
comment|/* Conditional instructions.     Because this part of the table was such a mess earlier, I have    macrofied it so that all the branches and traps are generated from    a single-line description of each condition value.  John Gilmore. */
comment|/* Define branches -- one annulled, one without, etc. */
define|#
directive|define
name|br
parameter_list|(
name|opcode
parameter_list|,
name|mask
parameter_list|,
name|lose
parameter_list|,
name|flags
parameter_list|)
define|\
value|{ opcode, (mask)|ANNUL, (lose),       ",a l",   (flags), v6 }, \  { opcode, (mask)      , (lose)|ANNUL, "l",     (flags), v6 }
comment|/* Define four traps: reg+reg, reg + immediate, immediate alone, reg alone. */
define|#
directive|define
name|tr
parameter_list|(
name|opcode
parameter_list|,
name|mask
parameter_list|,
name|lose
parameter_list|,
name|flags
parameter_list|)
define|\
value|{ opcode, (mask)|IMMED, (lose)|RS1_G0,		"i",     (flags), v6 },
comment|/* %g0 + imm */
value|\  { opcode, (mask)|IMMED, (lose),		"1+i",   (flags), v6 },
comment|/* rs1 + imm */
value|\  { opcode, (mask), IMMED|(lose),		"1+2",   (flags), v6 },
comment|/* rs1 + rs2 */
value|\  { opcode, (mask), IMMED|(lose)|RS2_G0,		"1",     (flags), v6 }
comment|/* rs1 + %g0 */
comment|/* Define both branches and traps based on condition mask */
define|#
directive|define
name|cond
parameter_list|(
name|bop
parameter_list|,
name|top
parameter_list|,
name|mask
parameter_list|,
name|flags
parameter_list|)
define|\
value|br(bop,  F2(0, 2)|(mask), F2(~0, ~2)|((~mask)&COND(~0)), F_DELAYED|(flags)), \   tr(top,  F3(2, 0x3a, 0)|(mask), F3(~2, ~0x3a, 0)|((~mask)&COND(~0)), (flags))
comment|/* Define all the conditions, all the branches, all the traps.  */
name|cond
argument_list|(
literal|"b"
argument_list|,
literal|"t"
argument_list|,
name|CONDA
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"ba"
argument_list|,
literal|"ta"
argument_list|,
name|CONDA
argument_list|,
name|F_ALIAS
argument_list|)
block|,
comment|/* for nothing */
name|cond
argument_list|(
literal|"bcc"
argument_list|,
literal|"tcc"
argument_list|,
name|CONDCC
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"bcs"
argument_list|,
literal|"tcs"
argument_list|,
name|CONDCS
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"be"
argument_list|,
literal|"te"
argument_list|,
name|CONDE
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"beq"
argument_list|,
literal|"teq"
argument_list|,
name|CONDE
argument_list|,
name|F_ALIAS
argument_list|)
block|,
comment|/* for be */
name|cond
argument_list|(
literal|"bg"
argument_list|,
literal|"tg"
argument_list|,
name|CONDG
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"bgt"
argument_list|,
literal|"tgt"
argument_list|,
name|CONDG
argument_list|,
name|F_ALIAS
argument_list|)
block|,
name|cond
argument_list|(
literal|"bge"
argument_list|,
literal|"tge"
argument_list|,
name|CONDGE
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"bgeu"
argument_list|,
literal|"tgeu"
argument_list|,
name|CONDGEU
argument_list|,
name|F_ALIAS
argument_list|)
block|,
comment|/* for cc */
name|cond
argument_list|(
literal|"bgu"
argument_list|,
literal|"tgu"
argument_list|,
name|CONDGU
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"bl"
argument_list|,
literal|"tl"
argument_list|,
name|CONDL
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"blt"
argument_list|,
literal|"tlt"
argument_list|,
name|CONDL
argument_list|,
name|F_ALIAS
argument_list|)
block|,
name|cond
argument_list|(
literal|"ble"
argument_list|,
literal|"tle"
argument_list|,
name|CONDLE
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"bleu"
argument_list|,
literal|"tleu"
argument_list|,
name|CONDLEU
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"blu"
argument_list|,
literal|"tlu"
argument_list|,
name|CONDLU
argument_list|,
name|F_ALIAS
argument_list|)
block|,
comment|/* for cs */
name|cond
argument_list|(
literal|"bn"
argument_list|,
literal|"tn"
argument_list|,
name|CONDN
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"bne"
argument_list|,
literal|"tne"
argument_list|,
name|CONDNE
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"bneg"
argument_list|,
literal|"tneg"
argument_list|,
name|CONDNEG
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"bnz"
argument_list|,
literal|"tnz"
argument_list|,
name|CONDNZ
argument_list|,
name|F_ALIAS
argument_list|)
block|,
comment|/* for ne */
name|cond
argument_list|(
literal|"bpos"
argument_list|,
literal|"tpos"
argument_list|,
name|CONDPOS
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"bvc"
argument_list|,
literal|"tvc"
argument_list|,
name|CONDVC
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"bvs"
argument_list|,
literal|"tvs"
argument_list|,
name|CONDVS
argument_list|,
literal|0
argument_list|)
block|,
name|cond
argument_list|(
literal|"bz"
argument_list|,
literal|"tz"
argument_list|,
name|CONDZ
argument_list|,
name|F_ALIAS
argument_list|)
block|,
comment|/* for e */
undef|#
directive|undef
name|cond
undef|#
directive|undef
name|br
undef|#
directive|undef
name|tr
define|#
directive|define
name|brfc
parameter_list|(
name|opcode
parameter_list|,
name|mask
parameter_list|,
name|lose
parameter_list|,
name|flags
parameter_list|)
define|\
value|{ opcode, (mask), ANNUL|(lose), "l",    flags|F_DELAYED, v6 }, \  { opcode, (mask)|ANNUL, (lose), ",a l", flags|F_DELAYED, v6 }
define|#
directive|define
name|condfc
parameter_list|(
name|fop
parameter_list|,
name|cop
parameter_list|,
name|mask
parameter_list|,
name|flags
parameter_list|)
define|\
value|brfc(fop, F2(0, 6)|COND(mask), F2(~0, ~6)|COND(~(mask)), flags), \   brfc(cop, F2(0, 7)|COND(mask), F2(~0, ~7)|COND(~(mask)), flags) \  condfc("fb",	"cb",	 0x8, 0),
name|condfc
argument_list|(
literal|"fba"
argument_list|,
literal|"cba"
argument_list|,
literal|0x8
argument_list|,
name|F_ALIAS
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbe"
argument_list|,
literal|"cb0"
argument_list|,
literal|0x9
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbg"
argument_list|,
literal|"cb2"
argument_list|,
literal|0x6
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbge"
argument_list|,
literal|"cb02"
argument_list|,
literal|0xb
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbl"
argument_list|,
literal|"cb1"
argument_list|,
literal|0x4
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fble"
argument_list|,
literal|"cb01"
argument_list|,
literal|0xd
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fblg"
argument_list|,
literal|"cb12"
argument_list|,
literal|0x2
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbn"
argument_list|,
literal|"cbn"
argument_list|,
literal|0x0
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbne"
argument_list|,
literal|"cb123"
argument_list|,
literal|0x1
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbo"
argument_list|,
literal|"cb012"
argument_list|,
literal|0xf
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbu"
argument_list|,
literal|"cb3"
argument_list|,
literal|0x7
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbue"
argument_list|,
literal|"cb03"
argument_list|,
literal|0xa
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbug"
argument_list|,
literal|"cb23"
argument_list|,
literal|0x5
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbuge"
argument_list|,
literal|"cb023"
argument_list|,
literal|0xc
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbul"
argument_list|,
literal|"cb13"
argument_list|,
literal|0x3
argument_list|,
literal|0
argument_list|)
block|,
name|condfc
argument_list|(
literal|"fbule"
argument_list|,
literal|"cb013"
argument_list|,
literal|0xe
argument_list|,
literal|0
argument_list|)
block|,
undef|#
directive|undef
name|condfc
undef|#
directive|undef
name|brfc
block|{
literal|"jmp"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1+2"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl rs1+rs2,%g0 */
block|{
literal|"jmp"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|RD_G0
operator||
name|ASI_RS2
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl rs1+%g0,%g0 */
block|{
literal|"jmp"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"1+i"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl rs1+i,%g0 */
block|{
literal|"jmp"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
block|,
literal|"i+1"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl i+rs1,%g0 */
block|{
literal|"jmp"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x38
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x38
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RD_G0
operator||
name|RS1_G0
block|,
literal|"i"
block|,
name|F_DELAYED
block|,
name|v6
block|}
block|,
comment|/* jmpl %g0+i,%g0 */
block|{
literal|"nop"
block|,
name|F2
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
block|,
literal|0xfeffffff
block|,
literal|""
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* sethi 0, %g0 */
block|{
literal|"set"
block|,
name|F2
argument_list|(
literal|0x0
argument_list|,
literal|0x4
argument_list|)
block|,
name|F2
argument_list|(
operator|~
literal|0x0
argument_list|,
operator|~
literal|0x4
argument_list|)
block|,
literal|"Sh,d"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
block|{
literal|"sethi"
block|,
name|F2
argument_list|(
literal|0x0
argument_list|,
literal|0x4
argument_list|)
block|,
name|F2
argument_list|(
operator|~
literal|0x0
argument_list|,
operator|~
literal|0x4
argument_list|)
block|,
literal|"h,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"taddcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x20
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x20
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"taddcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x20
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x20
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"taddcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x20
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x20
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"taddcctv"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x22
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x22
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"taddcctv"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x22
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x22
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"taddcctv"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x22
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x22
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"tsubcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x21
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x21
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"tsubcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x21
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x21
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"tsubcctv"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x23
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x23
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"tsubcctv"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x23
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x23
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"unimp"
block|,
name|F2
argument_list|(
literal|0x0
argument_list|,
literal|0x0
argument_list|)
block|,
literal|0xffc00000
block|,
literal|"n"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"iflush"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x3b
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x3b
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1+2"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"iflush"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x3b
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x3b
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1+i"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"iflush"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x3b
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x3b
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i+1"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"iflush"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x3b
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x3b
argument_list|,
operator|~
literal|1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"i"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"xnor"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x07
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x07
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"xnor"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x07
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x07
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"xnor"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x07
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x07
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"xnorcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x17
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x17
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"xnorcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x17
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x17
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"xnorcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x17
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x17
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"xor"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x03
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x03
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"xor"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x03
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x03
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"xor"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x03
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x03
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"xorcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x13
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x13
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,2,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"xorcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x13
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x13
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"1,i,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"xorcc"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x13
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x13
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,1,d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"not"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x07
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x07
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"1,d"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* xnor rs1,%0,rd */
block|{
literal|"not"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x07
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x07
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* xnor rd,%0,rd */
block|{
literal|"btog"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x03
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x03
argument_list|,
operator|~
literal|0
argument_list|)
operator||
name|ASI
argument_list|(
operator|~
literal|0
argument_list|)
block|,
literal|"2,r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* xor rd,rs2,rd */
block|{
literal|"btog"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x03
argument_list|,
literal|1
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x03
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"i,r"
block|,
name|F_ALIAS
block|,
name|v6
block|}
block|,
comment|/* xor rd,i,rd */
block|{
literal|"fpop1"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+2],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fpop2"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x35
argument_list|,
literal|0
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x35
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+2],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* float-start */
block|{
literal|"fdtoi"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x0d2
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x0d2
argument_list|)
operator||
name|RS1_G0
block|,
literal|"B,g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fstoi"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x0d1
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x0d1
argument_list|)
operator||
name|RS1_G0
block|,
literal|"f,g"
block|,
literal|0
block|,
name|v6
block|}
block|,
comment|/* all of these conversions are confused and probably wrong. */
block|{
literal|"fitod"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x0c8
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x0c8
argument_list|)
operator||
name|RS1_G0
block|,
literal|"f,H"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fitos"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x0c4
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x0c4
argument_list|)
operator||
name|RS1_G0
block|,
literal|"f,g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fitoq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x0cc
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x0cc
argument_list|)
operator||
name|RS1_G0
block|,
literal|"f,J"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fdtoq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x0ce
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x0ce
argument_list|)
operator||
name|RS1_G0
block|,
literal|"B,J"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fdtos"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x0c6
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x0c6
argument_list|)
operator||
name|RS1_G0
block|,
literal|"B,g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fqtod"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x0cb
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x0cb
argument_list|)
operator||
name|RS1_G0
block|,
literal|"R,H"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fqtos"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x0c7
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x0c7
argument_list|)
operator||
name|RS1_G0
block|,
literal|"R,g"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fstod"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x0c9
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x0c9
argument_list|)
operator||
name|RS1_G0
block|,
literal|"f,H"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fstoq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x0cd
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x0cd
argument_list|)
operator||
name|RS1_G0
block|,
literal|"f,J"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fqtoi"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x0d3
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x0d3
argument_list|)
operator||
name|RS1_G0
block|,
literal|"R,g"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fdivd"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x04e
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x04e
argument_list|)
block|,
literal|"v,B,H"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fdivq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x04f
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x04f
argument_list|)
block|,
literal|"V,R,J"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fdivs"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x04d
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x04d
argument_list|)
block|,
literal|"e,f,g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fmuld"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x04a
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x04a
argument_list|)
block|,
literal|"v,B,H"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fmulq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x04b
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x04b
argument_list|)
block|,
literal|"V,R,J"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fmuls"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x049
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x049
argument_list|)
block|,
literal|"e,f,g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fdmulq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x06e
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x06e
argument_list|)
block|,
literal|"v,B,J"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fsmuld"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x069
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x069
argument_list|)
block|,
literal|"e,f,H"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fsqrtd"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x02a
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x02a
argument_list|)
operator||
name|RS1_G0
block|,
literal|"B,H"
block|,
literal|0
block|,
name|v7
block|}
block|,
block|{
literal|"fsqrtq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x02b
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x02b
argument_list|)
operator||
name|RS1_G0
block|,
literal|"R,J"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fsqrts"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x029
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x029
argument_list|)
operator||
name|RS1_G0
block|,
literal|"f,g"
block|,
literal|0
block|,
name|v7
block|}
block|,
block|{
literal|"fabsq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x00b
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x00b
argument_list|)
operator||
name|RS1_G0
block|,
literal|"R,J"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fabss"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x009
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x009
argument_list|)
operator||
name|RS1_G0
block|,
literal|"f,g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fmovq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x003
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x003
argument_list|)
operator||
name|RS1_G0
block|,
literal|"R,J"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fmovs"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x001
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x001
argument_list|)
operator||
name|RS1_G0
block|,
literal|"f,g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fnegq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x007
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x007
argument_list|)
operator||
name|RS1_G0
block|,
literal|"R,J"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fnegs"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x005
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x005
argument_list|)
operator||
name|RS1_G0
block|,
literal|"f,g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"faddd"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x042
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x042
argument_list|)
block|,
literal|"v,B,H"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"faddq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x043
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x043
argument_list|)
block|,
literal|"V,R,J"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fadds"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x041
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x041
argument_list|)
block|,
literal|"e,f,g"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fsubd"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x046
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x046
argument_list|)
block|,
literal|"v,B,H"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fsubq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x047
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x047
argument_list|)
block|,
literal|"V,R,J"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fsubs"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x045
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x045
argument_list|)
block|,
literal|"e,f,g"
block|,
literal|0
block|,
name|v6
block|}
block|,
define|#
directive|define
name|CMPFCC
parameter_list|(
name|x
parameter_list|)
value|(((x)&0x3)<<25)
block|{
literal|"fcmpd"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x35
argument_list|,
literal|0x052
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x35
argument_list|,
operator|~
literal|0x052
argument_list|)
operator||
name|RS1_G0
block|,
literal|"v,B"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fcmped"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x35
argument_list|,
literal|0x056
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x35
argument_list|,
operator|~
literal|0x056
argument_list|)
operator||
name|RS1_G0
block|,
literal|"v,B"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fcmpeq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x057
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x057
argument_list|)
block|,
literal|"V,R"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fcmpes"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x35
argument_list|,
literal|0x055
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x35
argument_list|,
operator|~
literal|0x055
argument_list|)
operator||
name|RS1_G0
block|,
literal|"e,f"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"fcmpq"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x34
argument_list|,
literal|0x053
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x34
argument_list|,
operator|~
literal|0x053
argument_list|)
block|,
literal|"V,R"
block|,
literal|0
block|,
name|v8
block|}
block|,
block|{
literal|"fcmps"
block|,
name|F3F
argument_list|(
literal|2
argument_list|,
literal|0x35
argument_list|,
literal|0x051
argument_list|)
block|,
name|F3F
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x35
argument_list|,
operator|~
literal|0x051
argument_list|)
operator||
name|RS1_G0
block|,
literal|"e,f"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"cpop1"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x36
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x36
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+2],d"
block|,
literal|0
block|,
name|v6
block|}
block|,
block|{
literal|"cpop2"
block|,
name|F3
argument_list|(
literal|2
argument_list|,
literal|0x37
argument_list|,
literal|0
argument_list|)
block|,
name|F3
argument_list|(
operator|~
literal|2
argument_list|,
operator|~
literal|0x37
argument_list|,
operator|~
literal|1
argument_list|)
block|,
literal|"[1+2],d"
block|,
literal|0
block|,
name|v6
block|}
block|,        }
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|NUMOPCODES
value|((sizeof sparc_opcodes)/(sizeof sparc_opcodes[0]))
end_define

begin_comment
comment|/*  * Local Variables:  * fill-column: 131  * comment-column: 0  * End:  */
end_comment

begin_comment
comment|/* end of sparc-opcode.h */
end_comment

end_unit

