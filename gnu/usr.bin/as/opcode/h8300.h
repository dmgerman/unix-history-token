begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Opcode table for the H8-300    Copyright (C) 1991,1992 Free Software Foundation.    Written by Steve Chamberlain, sac@cygnus.com.  This file is part of GDB, the GNU Debugger and GAS, the GNU Assembler.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
end_comment

begin_typedef
typedef|typedef
name|int
name|op_type
typedef|;
end_typedef

begin_define
define|#
directive|define
name|Hex0
value|0
end_define

begin_define
define|#
directive|define
name|Hex1
value|1
end_define

begin_define
define|#
directive|define
name|Hex2
value|2
end_define

begin_define
define|#
directive|define
name|Hex3
value|3
end_define

begin_define
define|#
directive|define
name|Hex4
value|4
end_define

begin_define
define|#
directive|define
name|Hex5
value|5
end_define

begin_define
define|#
directive|define
name|Hex6
value|6
end_define

begin_define
define|#
directive|define
name|Hex7
value|7
end_define

begin_define
define|#
directive|define
name|Hex8
value|8
end_define

begin_define
define|#
directive|define
name|Hex9
value|9
end_define

begin_define
define|#
directive|define
name|HexA
value|10
end_define

begin_define
define|#
directive|define
name|HexB
value|11
end_define

begin_define
define|#
directive|define
name|HexC
value|12
end_define

begin_define
define|#
directive|define
name|HexD
value|13
end_define

begin_define
define|#
directive|define
name|HexE
value|14
end_define

begin_define
define|#
directive|define
name|HexF
value|15
end_define

begin_define
define|#
directive|define
name|START
value|0x20
end_define

begin_define
define|#
directive|define
name|KBIT
value|0x21
end_define

begin_comment
comment|/* K is #1, or #2, yielding 0x0 or 0x8 */
end_comment

begin_define
define|#
directive|define
name|IMM3
value|0x22
end_define

begin_comment
comment|/* bit number */
end_comment

begin_define
define|#
directive|define
name|RD8
value|0x23
end_define

begin_comment
comment|/* 8 bit reg as 2nd op  */
end_comment

begin_define
define|#
directive|define
name|RD16
value|0x24
end_define

begin_comment
comment|/* 16 bit reg as 2nd op */
end_comment

begin_define
define|#
directive|define
name|RS8
value|0x25
end_define

begin_comment
comment|/* 8 bit reg as 1st op */
end_comment

begin_define
define|#
directive|define
name|RS16
value|0x26
end_define

begin_comment
comment|/* 16 bit reg 1st op */
end_comment

begin_define
define|#
directive|define
name|IMM8
value|0x27
end_define

begin_comment
comment|/* constant which fits into 8 bits */
end_comment

begin_define
define|#
directive|define
name|IMM16
value|0x28
end_define

begin_comment
comment|/* constant which fits into 16 bits */
end_comment

begin_define
define|#
directive|define
name|CCR
value|0x29
end_define

begin_comment
comment|/* CCR reg */
end_comment

begin_define
define|#
directive|define
name|ABS8SRC
value|0x2a
end_define

begin_comment
comment|/* abs 8 address mode */
end_comment

begin_define
define|#
directive|define
name|ABS8DST
value|0x2b
end_define

begin_comment
comment|/* abs 8 address mode */
end_comment

begin_define
define|#
directive|define
name|DISP8
value|0x2c
end_define

begin_comment
comment|/* pc rel displacement */
end_comment

begin_define
define|#
directive|define
name|ABS16SRC
value|0x2d
end_define

begin_comment
comment|/* abs 16 address mode */
end_comment

begin_define
define|#
directive|define
name|ABS16OR8SRC
value|0x2e
end_define

begin_comment
comment|/* abs 16 address mode, but could be abs 8 */
end_comment

begin_define
define|#
directive|define
name|ABS16DST
value|0x2f
end_define

begin_comment
comment|/* abs 16 address mode */
end_comment

begin_define
define|#
directive|define
name|ABS16OR8DST
value|0x30
end_define

begin_comment
comment|/* abs 16 address mode */
end_comment

begin_define
define|#
directive|define
name|DISPSRC
value|0x31
end_define

begin_comment
comment|/* @(r:16) address mode src */
end_comment

begin_define
define|#
directive|define
name|DISPDST
value|0x32
end_define

begin_comment
comment|/* @(r:16) address mode dst*/
end_comment

begin_define
define|#
directive|define
name|DISPREG
value|0x33
end_define

begin_comment
comment|/* register from DISP address mode */
end_comment

begin_define
define|#
directive|define
name|RDDEC
value|0x34
end_define

begin_comment
comment|/* @-rn mode */
end_comment

begin_define
define|#
directive|define
name|RSINC
value|0x35
end_define

begin_comment
comment|/* @rn+ mode */
end_comment

begin_define
define|#
directive|define
name|RDIND
value|0x36
end_define

begin_comment
comment|/* @R mode dst */
end_comment

begin_define
define|#
directive|define
name|RSIND
value|0x37
end_define

begin_comment
comment|/* @R mode src */
end_comment

begin_define
define|#
directive|define
name|MEMIND
value|0x38
end_define

begin_comment
comment|/* @@abs8 mode */
end_comment

begin_define
define|#
directive|define
name|ABS16ORREL8SRC
value|0x39
end_define

begin_comment
comment|/* abs 16bit or pcrel */
end_comment

begin_define
define|#
directive|define
name|IGNORE
value|0x3a
end_define

begin_define
define|#
directive|define
name|B30
value|0x40
end_define

begin_comment
comment|/* bit 3 must be low */
end_comment

begin_define
define|#
directive|define
name|B31
value|0x80
end_define

begin_comment
comment|/* bit 3 must be high */
end_comment

begin_define
define|#
directive|define
name|E
value|0x81
end_define

begin_comment
comment|/* End of list */
end_comment

begin_struct
struct|struct
name|code
block|{
name|op_type
name|nib
index|[
literal|9
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|arg
block|{
name|op_type
name|nib
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|h8_opcode
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|struct
name|arg
name|args
decl_stmt|;
name|struct
name|code
name|data
decl_stmt|;
name|char
name|length
decl_stmt|;
name|char
name|noperands
decl_stmt|;
name|char
name|idx
decl_stmt|;
name|char
name|size
decl_stmt|;
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|DEFINE_TABLE
end_ifdef

begin_define
define|#
directive|define
name|BITOP
parameter_list|(
name|imm
parameter_list|,
name|name
parameter_list|,
name|op00
parameter_list|,
name|op01
parameter_list|,
name|op10
parameter_list|,
name|op11
parameter_list|,
name|op20
parameter_list|,
name|op21
parameter_list|)
define|\
value|{  name,	{imm,RD8,E},	{op00, op01, imm, RD8,E}},\ {  name,	{imm,RDIND,E},	{op10, op11, RDIND, 0, op00,op01, imm, 0,E}},\ {  name,	{imm,ABS8DST,E},{op20, op21, ABS8DST, IGNORE, op00,op01, imm, 0,E}}
end_define

begin_define
define|#
directive|define
name|EBITOP
parameter_list|(
name|imm
parameter_list|,
name|name
parameter_list|,
name|op00
parameter_list|,
name|op01
parameter_list|,
name|op10
parameter_list|,
name|op11
parameter_list|,
name|op20
parameter_list|,
name|op21
parameter_list|)
define|\
value|BITOP(imm, name, op00+1, op01, op10,op11, op20,op21),\    BITOP(RS8,  name, op00, op01, op10,op11, op20,op21)
end_define

begin_define
define|#
directive|define
name|WTWOP
parameter_list|(
name|name
parameter_list|,
name|op1
parameter_list|,
name|op2
parameter_list|)
define|\
value|{ name, {RS16, RD16, E}, { op1, op2, RS16, RD16, E}}
end_define

begin_define
define|#
directive|define
name|BRANCH
parameter_list|(
name|name
parameter_list|,
name|op
parameter_list|)
define|\
value|{ name,{DISP8,E}, { Hex4, op, DISP8,IGNORE,E }}
end_define

begin_define
define|#
directive|define
name|SOP
parameter_list|(
name|name
parameter_list|)
define|\
value|{  name
end_define

begin_define
define|#
directive|define
name|EOP
value|}
end_define

begin_define
define|#
directive|define
name|TWOOP
parameter_list|(
name|name
parameter_list|,
name|op1
parameter_list|,
name|op2
parameter_list|,
name|op3
parameter_list|)
define|\
value|{ name, {IMM8, RD8,E},	{ op1, RD8, IMM8,IGNORE,E}},\ { name, {RS8, RD8, E},	{ op2, op3, RS8, RD8 ,E}}
end_define

begin_define
define|#
directive|define
name|UNOP
parameter_list|(
name|name
parameter_list|,
name|op1
parameter_list|,
name|op2
parameter_list|)
define|\
value|{ name, {RS8, E}, { op1, op2, 0, RS8, E}}
end_define

begin_define
define|#
directive|define
name|UNOP3
parameter_list|(
name|name
parameter_list|,
name|op1
parameter_list|,
name|op2
parameter_list|,
name|op3
parameter_list|)
define|\
value|{ name , {RS8, E}, {op1, op2, op3, RS8, E}}
end_define

begin_decl_stmt
name|struct
name|h8_opcode
name|h8_opcodes
index|[]
init|=
block|{
name|TWOOP
argument_list|(
literal|"add.b"
argument_list|,
name|Hex8
argument_list|,
name|Hex0
argument_list|,
name|Hex8
argument_list|)
block|,
name|WTWOP
argument_list|(
literal|"add.w"
argument_list|,
name|Hex0
argument_list|,
name|Hex9
argument_list|)
block|,
name|SOP
argument_list|(
literal|"adds"
argument_list|)
block|,
block|{
name|KBIT
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex0
block|,
name|HexB
block|,
name|KBIT
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|TWOOP
argument_list|(
literal|"addx"
argument_list|,
name|Hex9
argument_list|,
name|Hex0
argument_list|,
name|HexE
argument_list|)
block|,
name|TWOOP
argument_list|(
literal|"and"
argument_list|,
name|HexE
argument_list|,
name|Hex1
argument_list|,
name|Hex6
argument_list|)
block|,
name|SOP
argument_list|(
literal|"andc"
argument_list|)
block|,
block|{
name|IMM8
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
name|Hex0
block|,
name|Hex6
block|,
name|IMM8
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|BITOP
argument_list|(
name|IMM3
operator||
name|B30
argument_list|,
literal|"band"
argument_list|,
name|Hex7
argument_list|,
name|Hex6
argument_list|,
name|Hex7
argument_list|,
name|HexC
argument_list|,
name|Hex7
argument_list|,
name|HexE
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bra"
argument_list|,
name|Hex0
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bt"
argument_list|,
name|Hex0
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"brn"
argument_list|,
name|Hex1
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bf"
argument_list|,
name|Hex1
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bhi"
argument_list|,
name|Hex2
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bls"
argument_list|,
name|Hex3
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bcc"
argument_list|,
name|Hex4
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bhs"
argument_list|,
name|Hex4
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bcs"
argument_list|,
name|Hex5
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"blo"
argument_list|,
name|Hex5
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bne"
argument_list|,
name|Hex6
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"beq"
argument_list|,
name|Hex7
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bvc"
argument_list|,
name|Hex8
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bvs"
argument_list|,
name|Hex9
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bpl"
argument_list|,
name|HexA
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bmi"
argument_list|,
name|HexB
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bge"
argument_list|,
name|HexC
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"blt"
argument_list|,
name|HexD
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"bgt"
argument_list|,
name|HexE
argument_list|)
block|,
name|BRANCH
argument_list|(
literal|"ble"
argument_list|,
name|HexF
argument_list|)
block|,
name|EBITOP
argument_list|(
name|IMM3
operator||
name|B30
argument_list|,
literal|"bclr"
argument_list|,
name|Hex6
argument_list|,
name|Hex2
argument_list|,
name|Hex7
argument_list|,
name|HexD
argument_list|,
name|Hex7
argument_list|,
name|HexF
argument_list|)
block|,
name|BITOP
argument_list|(
name|IMM3
operator||
name|B31
argument_list|,
literal|"biand"
argument_list|,
name|Hex7
argument_list|,
name|Hex6
argument_list|,
name|Hex7
argument_list|,
name|HexC
argument_list|,
name|Hex7
argument_list|,
name|HexE
argument_list|)
block|,
name|BITOP
argument_list|(
name|IMM3
operator||
name|B31
argument_list|,
literal|"bild"
argument_list|,
name|Hex7
argument_list|,
name|Hex7
argument_list|,
name|Hex7
argument_list|,
name|HexC
argument_list|,
name|Hex7
argument_list|,
name|HexE
argument_list|)
block|,
name|BITOP
argument_list|(
name|IMM3
operator||
name|B31
argument_list|,
literal|"bior"
argument_list|,
name|Hex7
argument_list|,
name|Hex4
argument_list|,
name|Hex7
argument_list|,
name|HexC
argument_list|,
name|Hex7
argument_list|,
name|HexE
argument_list|)
block|,
name|BITOP
argument_list|(
name|IMM3
operator||
name|B31
argument_list|,
literal|"bist"
argument_list|,
name|Hex6
argument_list|,
name|Hex7
argument_list|,
name|Hex7
argument_list|,
name|HexD
argument_list|,
name|Hex7
argument_list|,
name|HexE
argument_list|)
block|,
name|BITOP
argument_list|(
name|IMM3
operator||
name|B31
argument_list|,
literal|"bixor"
argument_list|,
name|Hex7
argument_list|,
name|Hex5
argument_list|,
name|Hex7
argument_list|,
name|HexC
argument_list|,
name|Hex7
argument_list|,
name|HexE
argument_list|)
block|,
name|BITOP
argument_list|(
name|IMM3
operator||
name|B30
argument_list|,
literal|"bld"
argument_list|,
name|Hex7
argument_list|,
name|Hex7
argument_list|,
name|Hex7
argument_list|,
name|HexC
argument_list|,
name|Hex7
argument_list|,
name|HexE
argument_list|)
block|,
name|EBITOP
argument_list|(
name|IMM3
operator||
name|B30
argument_list|,
literal|"bnot"
argument_list|,
name|Hex6
argument_list|,
name|Hex1
argument_list|,
name|Hex7
argument_list|,
name|HexD
argument_list|,
name|Hex7
argument_list|,
name|HexF
argument_list|)
block|,
name|BITOP
argument_list|(
name|IMM3
operator||
name|B30
argument_list|,
literal|"bor"
argument_list|,
name|Hex7
argument_list|,
name|Hex4
argument_list|,
name|Hex7
argument_list|,
name|HexC
argument_list|,
name|Hex7
argument_list|,
name|HexE
argument_list|)
block|,
name|EBITOP
argument_list|(
name|IMM3
operator||
name|B30
argument_list|,
literal|"bset"
argument_list|,
name|Hex6
argument_list|,
name|Hex0
argument_list|,
name|Hex7
argument_list|,
name|HexD
argument_list|,
name|Hex7
argument_list|,
name|HexF
argument_list|)
block|,
name|SOP
argument_list|(
literal|"bsr"
argument_list|)
block|,
block|{
name|DISP8
block|,
name|E
block|}
block|,
block|{
name|Hex5
block|,
name|Hex5
block|,
name|DISP8
block|,
name|IGNORE
block|,
name|E
block|}
block|,
name|EOP
block|,
name|BITOP
argument_list|(
name|IMM3
operator||
name|B30
argument_list|,
literal|"bst"
argument_list|,
name|Hex6
argument_list|,
name|Hex7
argument_list|,
name|Hex7
argument_list|,
name|HexD
argument_list|,
name|Hex7
argument_list|,
name|HexF
argument_list|)
block|,
name|EBITOP
argument_list|(
name|IMM3
operator||
name|B30
argument_list|,
literal|"btst"
argument_list|,
name|Hex6
argument_list|,
name|Hex3
argument_list|,
name|Hex7
argument_list|,
name|HexC
argument_list|,
name|Hex7
argument_list|,
name|HexE
argument_list|)
block|,
name|BITOP
argument_list|(
name|IMM3
operator||
name|B30
argument_list|,
literal|"bxor"
argument_list|,
name|Hex7
argument_list|,
name|Hex5
argument_list|,
name|Hex7
argument_list|,
name|HexC
argument_list|,
name|Hex7
argument_list|,
name|HexE
argument_list|)
block|,
name|TWOOP
argument_list|(
literal|"cmp.b"
argument_list|,
name|HexA
argument_list|,
name|Hex1
argument_list|,
name|HexC
argument_list|)
block|,
name|WTWOP
argument_list|(
literal|"cmp.w"
argument_list|,
name|Hex1
argument_list|,
name|HexD
argument_list|)
block|,
name|UNOP
argument_list|(
literal|"daa"
argument_list|,
name|Hex0
argument_list|,
name|HexF
argument_list|)
block|,
name|UNOP
argument_list|(
literal|"das"
argument_list|,
name|Hex1
argument_list|,
name|HexF
argument_list|)
block|,
name|UNOP
argument_list|(
literal|"dec"
argument_list|,
name|Hex1
argument_list|,
name|HexA
argument_list|)
block|,
name|SOP
argument_list|(
literal|"divxu"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex5
block|,
name|Hex1
block|,
name|RS8
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"eepmov"
argument_list|)
block|,
block|{
name|E
block|}
block|,
block|{
name|Hex7
block|,
name|HexB
block|,
name|Hex5
block|,
name|HexC
block|,
name|Hex5
block|,
name|Hex9
block|,
name|Hex8
block|,
name|HexF
block|,
name|E
block|}
name|EOP
block|,
name|UNOP
argument_list|(
literal|"inc"
argument_list|,
name|Hex0
argument_list|,
name|HexA
argument_list|)
block|,
name|SOP
argument_list|(
literal|"jmp"
argument_list|)
block|,
block|{
name|RSIND
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex5
block|,
name|Hex9
block|,
name|RSIND
operator||
name|B30
block|,
name|Hex0
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"jmp"
argument_list|)
block|,
block|{
name|ABS16ORREL8SRC
block|,
name|E
block|}
block|,
block|{
name|Hex5
block|,
name|HexA
block|,
name|Hex0
block|,
name|Hex0
block|,
name|ABS16ORREL8SRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"jmp"
argument_list|)
block|,
block|{
name|MEMIND
block|,
name|E
block|}
block|,
block|{
name|Hex5
block|,
name|HexB
block|,
name|MEMIND
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"jsr"
argument_list|)
block|,
block|{
name|RSIND
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex5
block|,
name|HexD
block|,
name|RSIND
operator||
name|B30
block|,
name|Hex0
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"jsr"
argument_list|)
block|,
block|{
name|ABS16ORREL8SRC
block|,
name|E
block|}
block|,
block|{
name|Hex5
block|,
name|HexE
block|,
name|Hex0
block|,
name|Hex0
block|,
name|ABS16ORREL8SRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"jsr"
argument_list|)
block|,
block|{
name|MEMIND
block|,
name|E
block|}
block|,
block|{
name|Hex5
block|,
name|HexF
block|,
name|MEMIND
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"ldc"
argument_list|)
block|,
block|{
name|IMM8
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
name|Hex0
block|,
name|Hex7
block|,
name|IMM8
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"ldc"
argument_list|)
block|,
block|{
name|RS8
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
name|Hex0
block|,
name|Hex3
block|,
name|Hex0
block|,
name|RS8
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
name|Hex0
block|,
name|HexC
block|,
name|RS8
block|,
name|RD8
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.b"
argument_list|)
block|,
block|{
name|IMM8
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
name|HexF
block|,
name|RD8
block|,
name|IMM8
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.b"
argument_list|)
block|,
block|{
name|RSIND
operator||
name|B30
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|Hex8
block|,
name|RSIND
operator||
name|B30
block|,
name|RD8
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.b"
argument_list|)
block|,
block|{
name|DISPSRC
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexE
block|,
name|DISPREG
operator||
name|B30
block|,
name|RD8
block|,
name|DISPSRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.b"
argument_list|)
block|,
block|{
name|RSINC
operator||
name|B30
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexC
block|,
name|RSINC
operator||
name|B30
block|,
name|RD8
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.b"
argument_list|)
block|,
block|{
name|ABS16OR8SRC
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexA
block|,
name|Hex0
block|,
name|RD8
block|,
name|ABS16OR8SRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.b"
argument_list|)
block|,
block|{
name|ABS8SRC
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
name|Hex2
block|,
name|RD8
block|,
name|ABS8SRC
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RDIND
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|Hex8
block|,
name|RDIND
operator||
name|B31
block|,
name|RS8
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|DISPDST
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexE
block|,
name|DISPREG
operator||
name|B31
block|,
name|RS8
block|,
name|DISPDST
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RDDEC
operator||
name|B31
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexC
block|,
name|RDDEC
operator||
name|B31
block|,
name|RS8
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|ABS16OR8DST
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexA
block|,
name|Hex8
block|,
name|RS8
block|,
name|ABS16OR8DST
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|ABS8DST
block|,
name|E
block|}
block|,
block|{
name|Hex3
block|,
name|RS8
block|,
name|ABS8DST
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.w"
argument_list|)
block|,
block|{
name|RS16
operator||
name|B30
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex0
block|,
name|HexD
block|,
name|RS16
operator||
name|B30
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.w"
argument_list|)
block|,
block|{
name|IMM16
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex7
block|,
name|Hex9
block|,
name|Hex0
block|,
name|RD16
operator||
name|B30
block|,
name|IMM16
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.w"
argument_list|)
block|,
block|{
name|RSIND
operator||
name|B30
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|Hex9
block|,
name|RSIND
operator||
name|B30
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.w"
argument_list|)
block|,
block|{
name|DISPSRC
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexF
block|,
name|DISPREG
operator||
name|B30
block|,
name|RD16
operator||
name|B30
block|,
name|DISPSRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.w"
argument_list|)
block|,
block|{
name|RSINC
operator||
name|B30
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexD
block|,
name|RSINC
operator||
name|B30
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.w"
argument_list|)
block|,
block|{
name|ABS16SRC
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexB
block|,
name|Hex0
block|,
name|RD16
operator||
name|B30
block|,
name|ABS16SRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.w"
argument_list|)
block|,
block|{
name|RS16
operator||
name|B30
block|,
name|RDIND
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|Hex9
block|,
name|RDIND
operator||
name|B31
block|,
name|RS16
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.w"
argument_list|)
block|,
block|{
name|RS16
operator||
name|B30
block|,
name|DISPDST
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexF
block|,
name|DISPREG
operator||
name|B31
block|,
name|RS16
operator||
name|B30
block|,
name|DISPDST
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.w"
argument_list|)
block|,
block|{
name|RS16
operator||
name|B30
block|,
name|RDDEC
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexD
block|,
name|RDDEC
operator||
name|B31
block|,
name|RS16
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mov.w"
argument_list|)
block|,
block|{
name|RS16
operator||
name|B30
block|,
name|ABS16DST
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexB
block|,
name|Hex8
block|,
name|RS16
operator||
name|B30
block|,
name|ABS16DST
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"movfpe"
argument_list|)
block|,
block|{
name|ABS16SRC
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexA
block|,
name|Hex4
block|,
name|RD8
block|,
name|ABS16SRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"movtpe"
argument_list|)
block|,
block|{
name|RS8
block|,
name|ABS16DST
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexA
block|,
name|HexC
block|,
name|RS8
block|,
name|ABS16DST
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"mulxu"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex5
block|,
name|Hex0
block|,
name|RS8
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"neg"
argument_list|)
block|,
block|{
name|RS8
block|,
name|E
block|}
block|,
block|{
name|Hex1
block|,
name|Hex7
block|,
name|Hex8
block|,
name|RS8
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"nop"
argument_list|)
block|,
block|{
name|E
block|}
block|,
block|{
name|Hex0
block|,
name|Hex0
block|,
name|Hex0
block|,
name|Hex0
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"not"
argument_list|)
block|,
block|{
name|RS8
block|,
name|E
block|}
block|,
block|{
name|Hex1
block|,
name|Hex7
block|,
name|Hex0
block|,
name|RS8
block|,
name|E
block|}
name|EOP
block|,
name|TWOOP
argument_list|(
literal|"or"
argument_list|,
name|HexC
argument_list|,
name|Hex1
argument_list|,
name|Hex4
argument_list|)
block|,
name|SOP
argument_list|(
literal|"orc"
argument_list|)
block|,
block|{
name|IMM8
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
name|Hex0
block|,
name|Hex4
block|,
name|IMM8
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"pop"
argument_list|)
block|,
block|{
name|RS16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexD
block|,
name|Hex7
block|,
name|RS16
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"push"
argument_list|)
block|,
block|{
name|RS16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex6
block|,
name|HexD
block|,
name|HexF
block|,
name|RS16
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|UNOP3
argument_list|(
literal|"rotl"
argument_list|,
name|Hex1
argument_list|,
name|Hex2
argument_list|,
name|Hex8
argument_list|)
block|,
name|UNOP3
argument_list|(
literal|"rotr"
argument_list|,
name|Hex1
argument_list|,
name|Hex3
argument_list|,
name|Hex8
argument_list|)
block|,
name|UNOP3
argument_list|(
literal|"rotxl"
argument_list|,
name|Hex1
argument_list|,
name|Hex2
argument_list|,
name|Hex0
argument_list|)
block|,
name|UNOP3
argument_list|(
literal|"rotxr"
argument_list|,
name|Hex1
argument_list|,
name|Hex3
argument_list|,
name|Hex0
argument_list|)
block|,
name|SOP
argument_list|(
literal|"rte"
argument_list|)
block|,
block|{
name|E
block|}
block|,
block|{
name|Hex5
block|,
name|Hex6
block|,
name|Hex7
block|,
name|Hex0
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"rts"
argument_list|)
block|,
block|{
name|E
block|}
block|,
block|{
name|Hex5
block|,
name|Hex4
block|,
name|Hex7
block|,
name|Hex0
block|,
name|E
block|}
name|EOP
block|,
name|UNOP3
argument_list|(
literal|"shal"
argument_list|,
name|Hex1
argument_list|,
name|Hex0
argument_list|,
name|Hex8
argument_list|)
block|,
name|UNOP3
argument_list|(
literal|"shar"
argument_list|,
name|Hex1
argument_list|,
name|Hex1
argument_list|,
name|Hex8
argument_list|)
block|,
name|UNOP3
argument_list|(
literal|"shll"
argument_list|,
name|Hex1
argument_list|,
name|Hex0
argument_list|,
name|Hex0
argument_list|)
block|,
name|UNOP3
argument_list|(
literal|"shlr"
argument_list|,
name|Hex1
argument_list|,
name|Hex1
argument_list|,
name|Hex0
argument_list|)
block|,
name|SOP
argument_list|(
literal|"sleep"
argument_list|)
block|,
block|{
name|E
block|}
block|,
block|{
name|Hex0
block|,
name|Hex1
block|,
name|Hex8
block|,
name|Hex0
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"stc"
argument_list|)
block|,
block|{
name|CCR
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
name|Hex0
block|,
name|Hex2
block|,
name|Hex0
block|,
name|RD8
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"sub.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
name|Hex1
block|,
name|Hex8
block|,
name|RS8
block|,
name|RD8
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"sub.w"
argument_list|)
block|,
block|{
name|RS16
operator||
name|B30
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex1
block|,
name|Hex9
block|,
name|RS16
operator||
name|B30
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
literal|"subs"
argument_list|)
block|,
block|{
name|KBIT
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
block|,
block|{
name|Hex1
block|,
name|HexB
block|,
name|KBIT
block|,
name|RD16
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|TWOOP
argument_list|(
literal|"subx"
argument_list|,
name|HexB
argument_list|,
name|Hex1
argument_list|,
name|HexE
argument_list|)
block|,
name|TWOOP
argument_list|(
literal|"xor"
argument_list|,
name|HexD
argument_list|,
name|Hex1
argument_list|,
name|Hex5
argument_list|)
block|,
name|SOP
argument_list|(
literal|"xorc"
argument_list|)
block|,
block|{
name|IMM8
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
name|Hex0
block|,
name|Hex5
block|,
name|IMM8
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
specifier|extern
name|struct
name|h8_opcode
name|h8_opcodes
index|[]
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

