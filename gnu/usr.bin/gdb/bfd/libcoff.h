begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* BFD COFF object file private structure.    Copyright (C) 1990, 1991, 1992, 1993, 1994 Free Software Foundation, Inc.    Written by Cygnus Support.  This file is part of BFD, the Binary File Descriptor library.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
end_comment

begin_comment
comment|/* Object file tdata; access macros */
end_comment

begin_define
define|#
directive|define
name|coff_data
parameter_list|(
name|bfd
parameter_list|)
value|((bfd)->tdata.coff_obj_data)
end_define

begin_define
define|#
directive|define
name|exec_hdr
parameter_list|(
name|bfd
parameter_list|)
value|(coff_data(bfd)->hdr)
end_define

begin_define
define|#
directive|define
name|obj_symbols
parameter_list|(
name|bfd
parameter_list|)
value|(coff_data(bfd)->symbols)
end_define

begin_define
define|#
directive|define
name|obj_sym_filepos
parameter_list|(
name|bfd
parameter_list|)
value|(coff_data(bfd)->sym_filepos)
end_define

begin_define
define|#
directive|define
name|obj_relocbase
parameter_list|(
name|bfd
parameter_list|)
value|(coff_data(bfd)->relocbase)
end_define

begin_define
define|#
directive|define
name|obj_raw_syments
parameter_list|(
name|bfd
parameter_list|)
value|(coff_data(bfd)->raw_syments)
end_define

begin_define
define|#
directive|define
name|obj_raw_syment_count
parameter_list|(
name|bfd
parameter_list|)
value|(coff_data(bfd)->raw_syment_count)
end_define

begin_define
define|#
directive|define
name|obj_convert
parameter_list|(
name|bfd
parameter_list|)
value|(coff_data(bfd)->conversion_table)
end_define

begin_define
define|#
directive|define
name|obj_conv_table_size
parameter_list|(
name|bfd
parameter_list|)
value|(coff_data(bfd)->conv_table_size)
end_define

begin_if
if|#
directive|if
name|CFILE_STUFF
end_if

begin_define
define|#
directive|define
name|obj_symbol_slew
parameter_list|(
name|bfd
parameter_list|)
value|(coff_data(bfd)->symbol_index_slew)
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|obj_symbol_slew
parameter_list|(
name|bfd
parameter_list|)
value|0
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* `Tdata' information kept for COFF files.  */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|coff_tdata
block|{
name|struct
name|coff_symbol_struct
modifier|*
name|symbols
decl_stmt|;
comment|/* symtab for input bfd */
name|unsigned
name|int
modifier|*
name|conversion_table
decl_stmt|;
name|int
name|conv_table_size
decl_stmt|;
name|file_ptr
name|sym_filepos
decl_stmt|;
name|long
name|symbol_index_slew
decl_stmt|;
comment|/* used during read to mark whether a 				   C_FILE symbol as been added. */
name|struct
name|coff_ptr_struct
modifier|*
name|raw_syments
decl_stmt|;
name|struct
name|lineno
modifier|*
name|raw_linenos
decl_stmt|;
name|unsigned
name|int
name|raw_syment_count
decl_stmt|;
name|unsigned
name|short
name|flags
decl_stmt|;
comment|/* These are only valid once writing has begun */
name|long
name|int
name|relocbase
decl_stmt|;
comment|/* These members communicate important constants about the symbol table      to GDB's symbol-reading code.  These `constants' unfortunately vary      from coff implementation to implementation...  */
name|unsigned
name|local_n_btmask
decl_stmt|;
name|unsigned
name|local_n_btshft
decl_stmt|;
name|unsigned
name|local_n_tmask
decl_stmt|;
name|unsigned
name|local_n_tshift
decl_stmt|;
name|unsigned
name|local_symesz
decl_stmt|;
name|unsigned
name|local_auxesz
decl_stmt|;
name|unsigned
name|local_linesz
decl_stmt|;
block|}
name|coff_data_type
typedef|;
end_typedef

begin_comment
comment|/* We take the address of the first element of a asymbol to ensure that the  * macro is only ever applied to an asymbol.  */
end_comment

begin_define
define|#
directive|define
name|coffsymbol
parameter_list|(
name|asymbol
parameter_list|)
value|((coff_symbol_type *)(&((asymbol)->the_bfd)))
end_define

begin_comment
comment|/* Functions in coffgen.c.  */
end_comment

begin_decl_stmt
specifier|extern
specifier|const
name|bfd_target
modifier|*
name|coff_object_p
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|sec
modifier|*
name|coff_section_from_bfd_index
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|long
name|coff_get_symtab_upper_bound
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|long
name|coff_get_symtab
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|asymbol
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|coff_count_linenumbers
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|coff_symbol_struct
modifier|*
name|coff_symbol_from
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|asymbol
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|boolean
name|coff_renumber_symbols
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|coff_mangle_symbols
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|boolean
name|coff_write_symbols
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|boolean
name|coff_write_linenumbers
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|alent
modifier|*
name|coff_get_lineno
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|asymbol
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|asymbol
modifier|*
name|coff_section_symbol
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|coff_ptr_struct
modifier|*
name|coff_get_normalized_symtab
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|long
name|coff_get_reloc_upper_bound
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|sec_ptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|asymbol
modifier|*
name|coff_make_empty_symbol
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|coff_print_symbol
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|PTR
name|filep
operator|,
name|asymbol
operator|*
operator|,
name|bfd_print_symbol_type
name|how
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|coff_get_symbol_info
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|asymbol
operator|*
operator|,
name|symbol_info
operator|*
name|ret
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|asymbol
modifier|*
name|coff_bfd_make_debug_symbol
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|PTR
operator|,
name|unsigned
name|long
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|boolean
name|coff_find_nearest_line
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|asection
operator|*
operator|,
name|asymbol
operator|*
operator|*
operator|,
name|bfd_vma
name|offset
operator|,
name|CONST
name|char
operator|*
operator|*
name|filename_ptr
operator|,
name|CONST
name|char
operator|*
operator|*
name|functionname_ptr
operator|,
name|unsigned
name|int
operator|*
name|line_ptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|coff_sizeof_headers
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|boolean
name|reloc
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|boolean
name|bfd_coff_reloc16_relax_section
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|asection
operator|*
operator|,
expr|struct
name|bfd_link_info
operator|*
operator|,
name|boolean
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|bfd_byte
modifier|*
name|bfd_coff_reloc16_get_relocated_section_contents
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
expr|struct
name|bfd_link_info
operator|*
operator|,
expr|struct
name|bfd_link_order
operator|*
operator|,
name|bfd_byte
operator|*
operator|,
name|boolean
name|relocateable
operator|,
name|asymbol
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|bfd_vma
name|bfd_coff_reloc16_get_value
name|PARAMS
argument_list|(
operator|(
name|arelent
operator|*
operator|,
expr|struct
name|bfd_link_info
operator|*
operator|,
name|asection
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|bfd_perform_slip
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|unsigned
name|int
name|slip
operator|,
name|asection
operator|*
name|input_section
operator|,
name|bfd_vma
name|val
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* And more taken from the source .. */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|coff_ptr_struct
block|{
comment|/* Remembers the offset from the first symbol in the file for           this symbol. Generated by coff_renumber_symbols. */
name|unsigned
name|int
name|offset
decl_stmt|;
comment|/* Should the value of this symbol be renumbered.  Used for           XCOFF C_BSTAT symbols.  Set by coff_slurp_symbol_table.  */
name|unsigned
name|int
name|fix_value
range|:
literal|1
decl_stmt|;
comment|/* Should the tag field of this symbol be renumbered.           Created by coff_pointerize_aux. */
name|unsigned
name|int
name|fix_tag
range|:
literal|1
decl_stmt|;
comment|/* Should the endidx field of this symbol be renumbered.           Created by coff_pointerize_aux. */
name|unsigned
name|int
name|fix_end
range|:
literal|1
decl_stmt|;
comment|/* Should the x_csect.x_scnlen field be renumbered.           Created by coff_slurp_symbol_table. */
name|unsigned
name|int
name|fix_scnlen
range|:
literal|1
decl_stmt|;
comment|/* The container for the symbol structure as read and translated            from the file. */
union|union
block|{
name|union
name|internal_auxent
name|auxent
decl_stmt|;
name|struct
name|internal_syment
name|syment
decl_stmt|;
block|}
name|u
union|;
block|}
name|combined_entry_type
typedef|;
end_typedef

begin_comment
comment|/* Each canonical asymbol really looks like this: */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|coff_symbol_struct
block|{
comment|/* The actual symbol which the rest of BFD works with */
name|asymbol
name|symbol
decl_stmt|;
comment|/* A pointer to the hidden information for this symbol */
name|combined_entry_type
modifier|*
name|native
decl_stmt|;
comment|/* A pointer to the linenumber information for this symbol */
name|struct
name|lineno_cache_entry
modifier|*
name|lineno
decl_stmt|;
comment|/* Have the line numbers been relocated yet ? */
name|boolean
name|done_lineno
decl_stmt|;
block|}
name|coff_symbol_type
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|void
argument_list|(
argument|*_bfd_coff_swap_aux_in
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|ext
operator|,
name|int
name|type
operator|,
name|int
name|class
operator|,
name|int
name|indaux
operator|,
name|int
name|numaux
operator|,
name|PTR
name|in
operator|)
argument_list|)
expr_stmt|;
name|void
argument_list|(
argument|*_bfd_coff_swap_sym_in
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|ext
operator|,
name|PTR
name|in
operator|)
argument_list|)
expr_stmt|;
name|void
argument_list|(
argument|*_bfd_coff_swap_lineno_in
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|ext
operator|,
name|PTR
name|in
operator|)
argument_list|)
expr_stmt|;
name|unsigned
name|int
argument_list|(
operator|*
name|_bfd_coff_swap_aux_out
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|in
operator|,
name|int
name|type
operator|,
name|int
name|class
operator|,
name|int
name|indaux
operator|,
name|int
name|numaux
operator|,
name|PTR
name|ext
operator|)
argument_list|)
decl_stmt|;
name|unsigned
name|int
argument_list|(
operator|*
name|_bfd_coff_swap_sym_out
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|in
operator|,
name|PTR
name|ext
operator|)
argument_list|)
decl_stmt|;
name|unsigned
name|int
argument_list|(
operator|*
name|_bfd_coff_swap_lineno_out
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|in
operator|,
name|PTR
name|ext
operator|)
argument_list|)
decl_stmt|;
name|unsigned
name|int
argument_list|(
operator|*
name|_bfd_coff_swap_reloc_out
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|src
operator|,
name|PTR
name|dst
operator|)
argument_list|)
decl_stmt|;
name|unsigned
name|int
argument_list|(
operator|*
name|_bfd_coff_swap_filehdr_out
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|in
operator|,
name|PTR
name|out
operator|)
argument_list|)
decl_stmt|;
name|unsigned
name|int
argument_list|(
operator|*
name|_bfd_coff_swap_aouthdr_out
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|in
operator|,
name|PTR
name|out
operator|)
argument_list|)
decl_stmt|;
name|unsigned
name|int
argument_list|(
operator|*
name|_bfd_coff_swap_scnhdr_out
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|in
operator|,
name|PTR
name|out
operator|)
argument_list|)
decl_stmt|;
name|unsigned
name|int
name|_bfd_filhsz
decl_stmt|;
name|unsigned
name|int
name|_bfd_aoutsz
decl_stmt|;
name|unsigned
name|int
name|_bfd_scnhsz
decl_stmt|;
name|unsigned
name|int
name|_bfd_symesz
decl_stmt|;
name|unsigned
name|int
name|_bfd_auxesz
decl_stmt|;
name|unsigned
name|int
name|_bfd_linesz
decl_stmt|;
name|boolean
name|_bfd_coff_long_filenames
decl_stmt|;
name|void
argument_list|(
argument|*_bfd_coff_swap_filehdr_in
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|ext
operator|,
name|PTR
name|in
operator|)
argument_list|)
expr_stmt|;
name|void
argument_list|(
argument|*_bfd_coff_swap_aouthdr_in
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|ext
operator|,
name|PTR
name|in
operator|)
argument_list|)
expr_stmt|;
name|void
argument_list|(
argument|*_bfd_coff_swap_scnhdr_in
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|ext
operator|,
name|PTR
name|in
operator|)
argument_list|)
expr_stmt|;
name|boolean
argument_list|(
argument|*_bfd_coff_bad_format_hook
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|internal_filehdr
operator|)
argument_list|)
expr_stmt|;
name|boolean
argument_list|(
argument|*_bfd_coff_set_arch_mach_hook
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|internal_filehdr
operator|)
argument_list|)
expr_stmt|;
name|PTR
argument_list|(
argument|*_bfd_coff_mkobject_hook
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|internal_filehdr
operator|,
name|PTR
name|internal_aouthdr
operator|)
argument_list|)
expr_stmt|;
name|flagword
argument_list|(
argument|*_bfd_styp_to_sec_flags_hook
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|PTR
name|internal_scnhdr
operator|)
argument_list|)
expr_stmt|;
name|asection
operator|*
operator|(
operator|*
name|_bfd_make_section_hook
operator|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|char
operator|*
name|name
operator|)
argument_list|)
expr_stmt|;
name|void
argument_list|(
argument|*_bfd_set_alignment_hook
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|asection
operator|*
name|sec
operator|,
name|PTR
name|internal_scnhdr
operator|)
argument_list|)
expr_stmt|;
name|boolean
argument_list|(
argument|*_bfd_coff_slurp_symbol_table
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|)
argument_list|)
expr_stmt|;
name|boolean
argument_list|(
argument|*_bfd_coff_symname_in_debug
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
expr|struct
name|internal_syment
operator|*
name|sym
operator|)
argument_list|)
expr_stmt|;
name|void
argument_list|(
argument|*_bfd_coff_reloc16_extra_cases
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
expr|struct
name|bfd_link_info
operator|*
name|link_info
operator|,
expr|struct
name|bfd_link_order
operator|*
name|link_order
operator|,
name|arelent
operator|*
name|reloc
operator|,
name|bfd_byte
operator|*
name|data
operator|,
name|unsigned
name|int
operator|*
name|src_ptr
operator|,
name|unsigned
name|int
operator|*
name|dst_ptr
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*_bfd_coff_reloc16_estimate
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
name|abfd
operator|,
name|asection
operator|*
name|input_section
operator|,
name|arelent
operator|*
name|r
operator|,
name|unsigned
name|int
name|shrink
operator|,
expr|struct
name|bfd_link_info
operator|*
name|link_info
operator|)
argument_list|)
expr_stmt|;
block|}
name|bfd_coff_backend_data
typedef|;
end_typedef

begin_define
define|#
directive|define
name|coff_backend_info
parameter_list|(
name|abfd
parameter_list|)
value|((bfd_coff_backend_data *) (abfd)->xvec->backend_data)
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_aux_in
parameter_list|(
name|a
parameter_list|,
name|e
parameter_list|,
name|t
parameter_list|,
name|c
parameter_list|,
name|ind
parameter_list|,
name|num
parameter_list|,
name|i
parameter_list|)
define|\
value|((coff_backend_info (a)->_bfd_coff_swap_aux_in) (a,e,t,c,ind,num,i))
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_sym_in
parameter_list|(
name|a
parameter_list|,
name|e
parameter_list|,
name|i
parameter_list|)
define|\
value|((coff_backend_info (a)->_bfd_coff_swap_sym_in) (a,e,i))
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_lineno_in
parameter_list|(
name|a
parameter_list|,
name|e
parameter_list|,
name|i
parameter_list|)
define|\
value|((coff_backend_info ( a)->_bfd_coff_swap_lineno_in) (a,e,i))
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_reloc_out
parameter_list|(
name|abfd
parameter_list|,
name|i
parameter_list|,
name|o
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_swap_reloc_out) (abfd, i, o))
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_lineno_out
parameter_list|(
name|abfd
parameter_list|,
name|i
parameter_list|,
name|o
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_swap_lineno_out) (abfd, i, o))
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_aux_out
parameter_list|(
name|a
parameter_list|,
name|i
parameter_list|,
name|t
parameter_list|,
name|c
parameter_list|,
name|ind
parameter_list|,
name|num
parameter_list|,
name|o
parameter_list|)
define|\
value|((coff_backend_info (a)->_bfd_coff_swap_aux_out) (a,i,t,c,ind,num,o))
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_sym_out
parameter_list|(
name|abfd
parameter_list|,
name|i
parameter_list|,
name|o
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_swap_sym_out) (abfd, i, o))
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_scnhdr_out
parameter_list|(
name|abfd
parameter_list|,
name|i
parameter_list|,
name|o
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_swap_scnhdr_out) (abfd, i, o))
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_filehdr_out
parameter_list|(
name|abfd
parameter_list|,
name|i
parameter_list|,
name|o
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_swap_filehdr_out) (abfd, i, o))
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_aouthdr_out
parameter_list|(
name|abfd
parameter_list|,
name|i
parameter_list|,
name|o
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_swap_aouthdr_out) (abfd, i, o))
end_define

begin_define
define|#
directive|define
name|bfd_coff_filhsz
parameter_list|(
name|abfd
parameter_list|)
value|(coff_backend_info (abfd)->_bfd_filhsz)
end_define

begin_define
define|#
directive|define
name|bfd_coff_aoutsz
parameter_list|(
name|abfd
parameter_list|)
value|(coff_backend_info (abfd)->_bfd_aoutsz)
end_define

begin_define
define|#
directive|define
name|bfd_coff_scnhsz
parameter_list|(
name|abfd
parameter_list|)
value|(coff_backend_info (abfd)->_bfd_scnhsz)
end_define

begin_define
define|#
directive|define
name|bfd_coff_symesz
parameter_list|(
name|abfd
parameter_list|)
value|(coff_backend_info (abfd)->_bfd_symesz)
end_define

begin_define
define|#
directive|define
name|bfd_coff_auxesz
parameter_list|(
name|abfd
parameter_list|)
value|(coff_backend_info (abfd)->_bfd_auxesz)
end_define

begin_define
define|#
directive|define
name|bfd_coff_linesz
parameter_list|(
name|abfd
parameter_list|)
value|(coff_backend_info (abfd)->_bfd_linesz)
end_define

begin_define
define|#
directive|define
name|bfd_coff_long_filenames
parameter_list|(
name|abfd
parameter_list|)
value|(coff_backend_info (abfd)->_bfd_coff_long_filenames)
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_filehdr_in
parameter_list|(
name|abfd
parameter_list|,
name|i
parameter_list|,
name|o
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_swap_filehdr_in) (abfd, i, o))
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_aouthdr_in
parameter_list|(
name|abfd
parameter_list|,
name|i
parameter_list|,
name|o
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_swap_aouthdr_in) (abfd, i, o))
end_define

begin_define
define|#
directive|define
name|bfd_coff_swap_scnhdr_in
parameter_list|(
name|abfd
parameter_list|,
name|i
parameter_list|,
name|o
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_swap_scnhdr_in) (abfd, i, o))
end_define

begin_define
define|#
directive|define
name|bfd_coff_bad_format_hook
parameter_list|(
name|abfd
parameter_list|,
name|filehdr
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_bad_format_hook) (abfd, filehdr))
end_define

begin_define
define|#
directive|define
name|bfd_coff_set_arch_mach_hook
parameter_list|(
name|abfd
parameter_list|,
name|filehdr
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_set_arch_mach_hook) (abfd, filehdr))
end_define

begin_define
define|#
directive|define
name|bfd_coff_mkobject_hook
parameter_list|(
name|abfd
parameter_list|,
name|filehdr
parameter_list|,
name|aouthdr
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_mkobject_hook) (abfd, filehdr, aouthdr))
end_define

begin_define
define|#
directive|define
name|bfd_coff_styp_to_sec_flags_hook
parameter_list|(
name|abfd
parameter_list|,
name|scnhdr
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_styp_to_sec_flags_hook) (abfd, scnhdr))
end_define

begin_define
define|#
directive|define
name|bfd_coff_make_section_hook
parameter_list|(
name|abfd
parameter_list|,
name|name
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_make_section_hook) (abfd, name))
end_define

begin_define
define|#
directive|define
name|bfd_coff_set_alignment_hook
parameter_list|(
name|abfd
parameter_list|,
name|sec
parameter_list|,
name|scnhdr
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_set_alignment_hook) (abfd, sec, scnhdr))
end_define

begin_define
define|#
directive|define
name|bfd_coff_slurp_symbol_table
parameter_list|(
name|abfd
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_slurp_symbol_table) (abfd))
end_define

begin_define
define|#
directive|define
name|bfd_coff_symname_in_debug
parameter_list|(
name|abfd
parameter_list|,
name|sym
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_symname_in_debug) (abfd, sym))
end_define

begin_define
define|#
directive|define
name|bfd_coff_reloc16_extra_cases
parameter_list|(
name|abfd
parameter_list|,
name|link_info
parameter_list|,
name|link_order
parameter_list|,
name|reloc
parameter_list|,
name|data
parameter_list|,
name|src_ptr
parameter_list|,
name|dst_ptr
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_reloc16_extra_cases)\          (abfd, link_info, link_order, reloc, data, src_ptr, dst_ptr))
end_define

begin_define
define|#
directive|define
name|bfd_coff_reloc16_estimate
parameter_list|(
name|abfd
parameter_list|,
name|section
parameter_list|,
name|reloc
parameter_list|,
name|shrink
parameter_list|,
name|link_info
parameter_list|)
define|\
value|((coff_backend_info (abfd)->_bfd_coff_reloc16_estimate)\          (abfd, section, reloc, shrink, link_info))
end_define

end_unit

