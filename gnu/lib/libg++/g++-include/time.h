begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|_G_time_h
end_ifndef

begin_define
define|#
directive|define
name|_G_time_h
end_define

begin_extern
extern|extern
literal|"C"
block|{
ifdef|#
directive|ifdef
name|__time_h_recursive
empty|#include_next<time.h>
else|#
directive|else
define|#
directive|define
name|__time_h_recursive
include|#
directive|include
file|<_G_config.h>
comment|// A clean way to use and/or define time_t might allow removal of this crud.
ifndef|#
directive|ifndef
name|__sys_time_h_recursive
define|#
directive|define
name|time
value|__hide_time
define|#
directive|define
name|clock
value|__hide_clock
define|#
directive|define
name|difftime
value|__hide_difftime
define|#
directive|define
name|gmtime
value|__hide_gmtime
define|#
directive|define
name|localtime
value|__hide_localtime
define|#
directive|define
name|ctime
value|__hide_ctime
define|#
directive|define
name|asctime
value|__hide_asctime
define|#
directive|define
name|strftime
value|__hide_strftime
endif|#
directive|endif
define|#
directive|define
name|mktime
value|__hide_mktime
define|#
directive|define
name|tzset
value|__hide_tzset
define|#
directive|define
name|tzsetwall
value|__hide_tzsetwall
define|#
directive|define
name|getitimer
value|__hide_getitimer
define|#
directive|define
name|setitimer
value|__hide_setitimer
define|#
directive|define
name|gettimeofday
value|__hide_gettimeofday
define|#
directive|define
name|settimeofday
value|__hide_settimeofday
ifdef|#
directive|ifdef
name|VMS
struct|struct
name|unix_time
block|{
name|long
name|int
name|tv_sec
decl_stmt|;
name|long
name|int
name|tv_usec
decl_stmt|;
block|}
struct|;
struct|struct
name|rusage
block|{
name|struct
name|unix_time
name|ru_utime
decl_stmt|;
block|}
struct|;
define|#
directive|define
name|RUSAGE_SELF
value|0
comment|//define it, it will be unused
else|#
directive|else
ifdef|#
directive|ifdef
name|hpux
define|#
directive|define
name|_INCLUDE_POSIX_SOURCE
endif|#
directive|endif
empty|#include_next<time.h>
endif|#
directive|endif
undef|#
directive|undef
name|__time_h_recursive
define|#
directive|define
name|time_h
value|1
undef|#
directive|undef
name|time
undef|#
directive|undef
name|clock
undef|#
directive|undef
name|difftime
undef|#
directive|undef
name|gmtime
undef|#
directive|undef
name|localtime
undef|#
directive|undef
name|asctime
undef|#
directive|undef
name|ctime
undef|#
directive|undef
name|mktime
undef|#
directive|undef
name|strftime
undef|#
directive|undef
name|tzset
undef|#
directive|undef
name|tzsetwall
undef|#
directive|undef
name|getitimer
undef|#
directive|undef
name|setitimer
undef|#
directive|undef
name|gettimeofday
undef|#
directive|undef
name|settimeofday
specifier|extern
name|char
modifier|*
name|asctime
name|_G_ARGS
argument_list|(
operator|(
specifier|const
expr|struct
name|tm
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|char
modifier|*
name|ctime
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|_G_time_t
operator|*
operator|)
argument_list|)
decl_stmt|;
name|double
name|difftime
name|_G_ARGS
argument_list|(
operator|(
name|_G_time_t
operator|,
name|_G_time_t
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|struct
name|tm
modifier|*
name|gmtime
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|_G_time_t
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|struct
name|tm
modifier|*
name|localtime
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|_G_time_t
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_G_time_t
name|mktime
parameter_list|(
name|struct
name|tm
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|_G_size_t
name|strftime
name|_G_ARGS
argument_list|(
operator|(
name|char
operator|*
operator|,
name|_G_size_t
operator|,
specifier|const
name|char
operator|*
operator|,
specifier|const
expr|struct
name|tm
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|tzset
parameter_list|()
function_decl|;
specifier|extern
name|void
name|tzsetwall
parameter_list|()
function_decl|;
specifier|extern
name|int
name|getitimer
parameter_list|(
name|int
parameter_list|,
name|struct
name|itimerval
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|setitimer
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|,
specifier|const
expr|struct
name|itimerval
operator|*
operator|,
expr|struct
name|itimerval
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|gettimeofday
parameter_list|(
name|struct
name|timeval
modifier|*
parameter_list|,
name|struct
name|timezone
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|settimeofday
name|_G_ARGS
argument_list|(
operator|(
specifier|const
expr|struct
name|timeval
operator|*
operator|,
specifier|const
expr|struct
name|timezone
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|stime
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|_G_time_t
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|dysize
parameter_list|(
name|int
parameter_list|)
function_decl|;
if|#
directive|if
name|defined
argument_list|(
name|___AIX__
argument_list|)
name|int
name|clock
parameter_list|(
name|void
parameter_list|)
function_decl|;
elif|#
directive|elif
name|defined
argument_list|(
name|hpux
argument_list|)
name|unsigned
name|long
name|clock
parameter_list|(
name|void
parameter_list|)
function_decl|;
else|#
directive|else
name|long
name|clock
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
name|_G_time_t
name|time
parameter_list|(
name|_G_time_t
modifier|*
parameter_list|)
function_decl|;
name|unsigned
name|ualarm
parameter_list|(
name|unsigned
parameter_list|,
name|unsigned
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|__386BSD__
name|unsigned
name|usleep
parameter_list|(
name|unsigned
parameter_list|)
function_decl|;
name|void
name|profil
name|_G_ARGS
argument_list|(
operator|(
name|unsigned
name|short
operator|*
operator|,
name|_G_size_t
operator|,
name|unsigned
name|int
operator|,
name|unsigned
operator|)
argument_list|)
decl_stmt|;
else|#
directive|else
name|void
name|usleep
parameter_list|(
name|unsigned
parameter_list|)
function_decl|;
name|int
name|profil
name|_G_ARGS
argument_list|(
operator|(
name|char
operator|*
operator|,
name|int
operator|,
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
endif|#
directive|endif
endif|#
directive|endif
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

end_unit

