begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// This may look like C code, but it is really -*- C++ -*-
end_comment

begin_comment
comment|/*  Copyright (C) 1989 Free Software Foundation     written by Doug Lea (dl@rocky.oswego.edu)  This file is part of the GNU C++ Library.  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Library General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for more details. You should have received a copy of the GNU Library General Public License along with this library; if not, write to the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_signal_h
end_ifndef

begin_include
include|#
directive|include
file|<_G_config.h>
end_include

begin_extern
extern|extern
literal|"C"
block|{
ifdef|#
directive|ifdef
name|__signal_h_recursive
empty|#include_next<signal.h>
else|#
directive|else
define|#
directive|define
name|__signal_h_recursive
define|#
directive|define
name|signal
value|__hide_signal
define|#
directive|define
name|psignal
value|__hide_psignal
empty|#include_next<signal.h>
undef|#
directive|undef
name|signal
undef|#
directive|undef
name|psignal
define|#
directive|define
name|_signal_h
value|1
comment|// The Interviews folks call this SignalHandler. Might as well conform.
typedef|typedef
name|_G_signal_return_type
function_decl|(
modifier|*
name|SignalHandler
function_decl|)
parameter_list|(
modifier|...
parameter_list|)
function_decl|;
typedef|typedef
name|int
function_decl|(
modifier|*
name|SSignalHandler
function_decl|)
parameter_list|(
modifier|...
parameter_list|)
function_decl|;
specifier|extern
name|SignalHandler
name|signal
name|_G_ARGS
argument_list|(
operator|(
name|int
name|sig
operator|,
name|SignalHandler
name|action
operator|)
argument_list|)
decl_stmt|;
comment|//extern SignalHandler sigset _G_ARGS((int sig, SignalHandler action));
specifier|extern
name|SSignalHandler
name|ssignal
name|_G_ARGS
argument_list|(
operator|(
name|int
name|sig
operator|,
name|SSignalHandler
name|action
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|gsignal
name|_G_ARGS
argument_list|(
operator|(
name|int
name|sig
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|kill
name|_G_ARGS
argument_list|(
operator|(
name|_G_pid_t
name|pid
operator|,
name|int
name|sig
operator|)
argument_list|)
decl_stmt|;
ifndef|#
directive|ifndef
name|__386BSD__
specifier|extern
name|int
name|killpg
name|_G_ARGS
argument_list|(
operator|(
name|short
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
else|#
directive|else
specifier|extern
name|int
name|killpg
name|_G_ARGS
argument_list|(
operator|(
name|_G_pid_t
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
endif|#
directive|endif
specifier|extern
name|int
name|siginterrupt
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|psignal
name|_G_ARGS
argument_list|(
operator|(
name|unsigned
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
ifndef|#
directive|ifndef
name|hpux
comment|// Interviews folks claim that hpux doesn't like these
specifier|extern
name|int
name|sigsetmask
name|_G_ARGS
argument_list|(
operator|(
name|int
name|mask
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|sigblock
name|_G_ARGS
argument_list|(
operator|(
name|int
name|mask
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|sigpause
name|_G_ARGS
argument_list|(
operator|(
name|int
name|mask
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|sigvec
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|,
expr|struct
name|sigvec
operator|*
operator|,
expr|struct
name|sigvec
operator|*
operator|)
argument_list|)
decl_stmt|;
endif|#
directive|endif
comment|// The Interviews version also has these ...
define|#
directive|define
name|SignalBad
value|((SignalHandler)-1)
define|#
directive|define
name|SignalDefault
value|((SignalHandler)0)
define|#
directive|define
name|SignalIgnore
value|((SignalHandler)1)
undef|#
directive|undef
name|BADSIG
undef|#
directive|undef
name|SIG_DFL
undef|#
directive|undef
name|SIG_IGN
define|#
directive|define
name|BAD_SIG
value|SignalBad
define|#
directive|define
name|SIG_DFL
value|SignalDefault
define|#
directive|define
name|SIG_IGN
value|SignalIgnore
endif|#
directive|endif
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

end_unit

