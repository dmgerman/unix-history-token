begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_REGEX_H
end_ifndef

begin_include
include|#
directive|include
file|<posix/regex.h>
end_include

begin_comment
comment|/* Document internal interfaces.  */
end_comment

begin_decl_stmt
specifier|extern
name|reg_syntax_t
name|__re_set_syntax
name|_RE_ARGS
argument_list|(
operator|(
name|reg_syntax_t
name|syntax
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|char
modifier|*
name|__re_compile_pattern
name|_RE_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|pattern
operator|,
name|size_t
name|length
operator|,
expr|struct
name|re_pattern_buffer
operator|*
name|buffer
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|__re_compile_fastmap
name|_RE_ARGS
argument_list|(
operator|(
expr|struct
name|re_pattern_buffer
operator|*
name|buffer
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|__re_search
name|_RE_ARGS
argument_list|(
operator|(
expr|struct
name|re_pattern_buffer
operator|*
name|buffer
operator|,
specifier|const
name|char
operator|*
name|string
operator|,
name|int
name|length
operator|,
name|int
name|start
operator|,
name|int
name|range
operator|,
expr|struct
name|re_registers
operator|*
name|regs
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|__re_search_2
name|_RE_ARGS
argument_list|(
operator|(
expr|struct
name|re_pattern_buffer
operator|*
name|buffer
operator|,
specifier|const
name|char
operator|*
name|string1
operator|,
name|int
name|length1
operator|,
specifier|const
name|char
operator|*
name|string2
operator|,
name|int
name|length2
operator|,
name|int
name|start
operator|,
name|int
name|range
operator|,
expr|struct
name|re_registers
operator|*
name|regs
operator|,
name|int
name|stop
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|__re_match
name|_RE_ARGS
argument_list|(
operator|(
expr|struct
name|re_pattern_buffer
operator|*
name|buffer
operator|,
specifier|const
name|char
operator|*
name|string
operator|,
name|int
name|length
operator|,
name|int
name|start
operator|,
expr|struct
name|re_registers
operator|*
name|regs
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|__re_match_2
name|_RE_ARGS
argument_list|(
operator|(
expr|struct
name|re_pattern_buffer
operator|*
name|buffer
operator|,
specifier|const
name|char
operator|*
name|string1
operator|,
name|int
name|length1
operator|,
specifier|const
name|char
operator|*
name|string2
operator|,
name|int
name|length2
operator|,
name|int
name|start
operator|,
expr|struct
name|re_registers
operator|*
name|regs
operator|,
name|int
name|stop
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|__re_set_registers
name|_RE_ARGS
argument_list|(
operator|(
expr|struct
name|re_pattern_buffer
operator|*
name|buffer
operator|,
expr|struct
name|re_registers
operator|*
name|regs
operator|,
name|unsigned
name|num_regs
operator|,
name|regoff_t
operator|*
name|starts
operator|,
name|regoff_t
operator|*
name|ends
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|__regcomp
name|_RE_ARGS
argument_list|(
operator|(
name|regex_t
operator|*
name|__preg
operator|,
specifier|const
name|char
operator|*
name|__pattern
operator|,
name|int
name|__cflags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|__regexec
name|_RE_ARGS
argument_list|(
operator|(
specifier|const
name|regex_t
operator|*
name|__preg
operator|,
specifier|const
name|char
operator|*
name|__string
operator|,
name|size_t
name|__nmatch
operator|,
name|regmatch_t
name|__pmatch
index|[]
operator|,
name|int
name|__eflags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|size_t
name|__regerror
name|_RE_ARGS
argument_list|(
operator|(
name|int
name|__errcode
operator|,
specifier|const
name|regex_t
operator|*
name|__preg
operator|,
name|char
operator|*
name|__errbuf
operator|,
name|size_t
name|__errbuf_size
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|__regfree
name|_RE_ARGS
argument_list|(
operator|(
name|regex_t
operator|*
name|__preg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

