begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * IEEE 802.1X-2004 Authenticator - EAPOL state machine  * Copyright (c) 2002-2009, Jouni Malinen<j@w1.fi>  *  * This software may be distributed under the terms of the BSD license.  * See README for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|EAPOL_AUTH_SM_H
end_ifndef

begin_define
define|#
directive|define
name|EAPOL_AUTH_SM_H
end_define

begin_define
define|#
directive|define
name|EAPOL_SM_PREAUTH
value|BIT(0)
end_define

begin_define
define|#
directive|define
name|EAPOL_SM_WAIT_START
value|BIT(1)
end_define

begin_define
define|#
directive|define
name|EAPOL_SM_USES_WPA
value|BIT(2)
end_define

begin_define
define|#
directive|define
name|EAPOL_SM_FROM_PMKSA_CACHE
value|BIT(3)
end_define

begin_struct
struct|struct
name|eapol_auth_config
block|{
name|int
name|eap_reauth_period
decl_stmt|;
name|int
name|wpa
decl_stmt|;
name|int
name|individual_wep_key_len
decl_stmt|;
name|int
name|eap_server
decl_stmt|;
name|void
modifier|*
name|ssl_ctx
decl_stmt|;
name|void
modifier|*
name|msg_ctx
decl_stmt|;
name|void
modifier|*
name|eap_sim_db_priv
decl_stmt|;
name|char
modifier|*
name|eap_req_id_text
decl_stmt|;
comment|/* a copy of this will be allocated */
name|size_t
name|eap_req_id_text_len
decl_stmt|;
name|int
name|erp_send_reauth_start
decl_stmt|;
name|char
modifier|*
name|erp_domain
decl_stmt|;
comment|/* a copy of this will be allocated */
name|int
name|erp
decl_stmt|;
comment|/* Whether ERP is enabled on authentication server */
name|u8
modifier|*
name|pac_opaque_encr_key
decl_stmt|;
name|u8
modifier|*
name|eap_fast_a_id
decl_stmt|;
name|size_t
name|eap_fast_a_id_len
decl_stmt|;
name|char
modifier|*
name|eap_fast_a_id_info
decl_stmt|;
name|int
name|eap_fast_prov
decl_stmt|;
name|int
name|pac_key_lifetime
decl_stmt|;
name|int
name|pac_key_refresh_time
decl_stmt|;
name|int
name|eap_sim_aka_result_ind
decl_stmt|;
name|int
name|tnc
decl_stmt|;
name|struct
name|wps_context
modifier|*
name|wps
decl_stmt|;
name|int
name|fragment_size
decl_stmt|;
name|u16
name|pwd_group
decl_stmt|;
name|int
name|pbc_in_m1
decl_stmt|;
specifier|const
name|u8
modifier|*
name|server_id
decl_stmt|;
name|size_t
name|server_id_len
decl_stmt|;
comment|/* Opaque context pointer to owner data for callback functions */
name|void
modifier|*
name|ctx
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|eap_user
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|eap_server_erp_key
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
enum|enum
block|{
name|EAPOL_LOGGER_DEBUG
block|,
name|EAPOL_LOGGER_INFO
block|,
name|EAPOL_LOGGER_WARNING
block|}
name|eapol_logger_level
typedef|;
end_typedef

begin_enum
enum|enum
name|eapol_event
block|{
name|EAPOL_AUTH_SM_CHANGE
block|,
name|EAPOL_AUTH_REAUTHENTICATE
block|}
enum|;
end_enum

begin_struct
struct|struct
name|eapol_auth_cb
block|{
name|void
function_decl|(
modifier|*
name|eapol_send
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|void
modifier|*
name|sta_ctx
parameter_list|,
name|u8
name|type
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|datalen
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|aaa_send
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|void
modifier|*
name|sta_ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|datalen
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|finished
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|void
modifier|*
name|sta_ctx
parameter_list|,
name|int
name|success
parameter_list|,
name|int
name|preauth
parameter_list|,
name|int
name|remediation
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_eap_user
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|identity
parameter_list|,
name|size_t
name|identity_len
parameter_list|,
name|int
name|phase2
parameter_list|,
name|struct
name|eap_user
modifier|*
name|user
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sta_entry_alive
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|logger
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|eapol_logger_level
name|level
parameter_list|,
specifier|const
name|char
modifier|*
name|txt
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_port_authorized
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|void
modifier|*
name|sta_ctx
parameter_list|,
name|int
name|authorized
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|abort_auth
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|void
modifier|*
name|sta_ctx
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|tx_key
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|void
modifier|*
name|sta_ctx
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|eapol_event
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|void
modifier|*
name|sta_ctx
parameter_list|,
name|enum
name|eapol_event
name|type
parameter_list|)
function_decl|;
name|struct
name|eap_server_erp_key
modifier|*
function_decl|(
modifier|*
name|erp_get_key
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|char
modifier|*
name|keyname
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|erp_add_key
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|struct
name|eap_server_erp_key
modifier|*
name|erp
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_function_decl
name|struct
name|eapol_authenticator
modifier|*
name|eapol_auth_init
parameter_list|(
name|struct
name|eapol_auth_config
modifier|*
name|conf
parameter_list|,
name|struct
name|eapol_auth_cb
modifier|*
name|cb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|eapol_auth_deinit
parameter_list|(
name|struct
name|eapol_authenticator
modifier|*
name|eapol
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|eapol_state_machine
modifier|*
name|eapol_auth_alloc
parameter_list|(
name|struct
name|eapol_authenticator
modifier|*
name|eapol
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|flags
parameter_list|,
specifier|const
name|struct
name|wpabuf
modifier|*
name|assoc_wps_ie
parameter_list|,
specifier|const
name|struct
name|wpabuf
modifier|*
name|assoc_p2p_ie
parameter_list|,
name|void
modifier|*
name|sta_ctx
parameter_list|,
specifier|const
name|char
modifier|*
name|identity
parameter_list|,
specifier|const
name|char
modifier|*
name|radius_cui
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|eapol_auth_free
parameter_list|(
name|struct
name|eapol_state_machine
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|eapol_auth_step
parameter_list|(
name|struct
name|eapol_state_machine
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|eapol_auth_dump_state
parameter_list|(
name|struct
name|eapol_state_machine
modifier|*
name|sm
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|buflen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|eapol_auth_eap_pending_cb
parameter_list|(
name|struct
name|eapol_state_machine
modifier|*
name|sm
parameter_list|,
name|void
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* EAPOL_AUTH_SM_H */
end_comment

end_unit

