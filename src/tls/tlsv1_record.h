begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * TLSv1 Record Protocol  * Copyright (c) 2006-2007, Jouni Malinen<j@w1.fi>  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License version 2 as  * published by the Free Software Foundation.  *  * Alternatively, this software may be distributed under the terms of BSD  * license.  *  * See README and COPYING for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|TLSV1_RECORD_H
end_ifndef

begin_define
define|#
directive|define
name|TLSV1_RECORD_H
end_define

begin_include
include|#
directive|include
file|"crypto.h"
end_include

begin_define
define|#
directive|define
name|TLS_MAX_WRITE_MAC_SECRET_LEN
value|20
end_define

begin_define
define|#
directive|define
name|TLS_MAX_WRITE_KEY_LEN
value|32
end_define

begin_define
define|#
directive|define
name|TLS_MAX_IV_LEN
value|16
end_define

begin_define
define|#
directive|define
name|TLS_MAX_KEY_BLOCK_LEN
value|(2 * (TLS_MAX_WRITE_MAC_SECRET_LEN + \ 				    TLS_MAX_WRITE_KEY_LEN + TLS_MAX_IV_LEN))
end_define

begin_define
define|#
directive|define
name|TLS_SEQ_NUM_LEN
value|8
end_define

begin_define
define|#
directive|define
name|TLS_RECORD_HEADER_LEN
value|5
end_define

begin_comment
comment|/* ContentType */
end_comment

begin_enum
enum|enum
block|{
name|TLS_CONTENT_TYPE_CHANGE_CIPHER_SPEC
init|=
literal|20
block|,
name|TLS_CONTENT_TYPE_ALERT
init|=
literal|21
block|,
name|TLS_CONTENT_TYPE_HANDSHAKE
init|=
literal|22
block|,
name|TLS_CONTENT_TYPE_APPLICATION_DATA
init|=
literal|23
block|}
enum|;
end_enum

begin_struct
struct|struct
name|tlsv1_record_layer
block|{
name|u8
name|write_mac_secret
index|[
name|TLS_MAX_WRITE_MAC_SECRET_LEN
index|]
decl_stmt|;
name|u8
name|read_mac_secret
index|[
name|TLS_MAX_WRITE_MAC_SECRET_LEN
index|]
decl_stmt|;
name|u8
name|write_key
index|[
name|TLS_MAX_WRITE_KEY_LEN
index|]
decl_stmt|;
name|u8
name|read_key
index|[
name|TLS_MAX_WRITE_KEY_LEN
index|]
decl_stmt|;
name|u8
name|write_iv
index|[
name|TLS_MAX_IV_LEN
index|]
decl_stmt|;
name|u8
name|read_iv
index|[
name|TLS_MAX_IV_LEN
index|]
decl_stmt|;
name|size_t
name|hash_size
decl_stmt|;
name|size_t
name|key_material_len
decl_stmt|;
name|size_t
name|iv_size
decl_stmt|;
comment|/* also block_size */
name|enum
name|crypto_hash_alg
name|hash_alg
decl_stmt|;
name|enum
name|crypto_cipher_alg
name|cipher_alg
decl_stmt|;
name|u8
name|write_seq_num
index|[
name|TLS_SEQ_NUM_LEN
index|]
decl_stmt|;
name|u8
name|read_seq_num
index|[
name|TLS_SEQ_NUM_LEN
index|]
decl_stmt|;
name|u16
name|cipher_suite
decl_stmt|;
name|u16
name|write_cipher_suite
decl_stmt|;
name|u16
name|read_cipher_suite
decl_stmt|;
name|struct
name|crypto_cipher
modifier|*
name|write_cbc
decl_stmt|;
name|struct
name|crypto_cipher
modifier|*
name|read_cbc
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|tlsv1_record_set_cipher_suite
parameter_list|(
name|struct
name|tlsv1_record_layer
modifier|*
name|rl
parameter_list|,
name|u16
name|cipher_suite
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_record_change_write_cipher
parameter_list|(
name|struct
name|tlsv1_record_layer
modifier|*
name|rl
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_record_change_read_cipher
parameter_list|(
name|struct
name|tlsv1_record_layer
modifier|*
name|rl
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_record_send
parameter_list|(
name|struct
name|tlsv1_record_layer
modifier|*
name|rl
parameter_list|,
name|u8
name|content_type
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|buf_size
parameter_list|,
name|size_t
name|payload_len
parameter_list|,
name|size_t
modifier|*
name|out_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_record_receive
parameter_list|(
name|struct
name|tlsv1_record_layer
modifier|*
name|rl
parameter_list|,
specifier|const
name|u8
modifier|*
name|in_data
parameter_list|,
name|size_t
name|in_len
parameter_list|,
name|u8
modifier|*
name|out_data
parameter_list|,
name|size_t
modifier|*
name|out_len
parameter_list|,
name|u8
modifier|*
name|alert
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* TLSV1_RECORD_H */
end_comment

end_unit

