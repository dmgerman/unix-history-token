begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|__RADIOTAP_ITER_H
end_ifndef

begin_define
define|#
directive|define
name|__RADIOTAP_ITER_H
end_define

begin_include
include|#
directive|include
file|<stdint.h>
end_include

begin_include
include|#
directive|include
file|"radiotap.h"
end_include

begin_comment
comment|/* Radiotap header iteration  *   implemented in radiotap.c  */
end_comment

begin_struct
struct|struct
name|radiotap_override
block|{
name|uint8_t
name|field
decl_stmt|;
name|uint8_t
name|align
range|:
literal|4
decl_stmt|,
name|size
range|:
literal|4
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|radiotap_align_size
block|{
name|uint8_t
name|align
range|:
literal|4
decl_stmt|,
name|size
range|:
literal|4
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ieee80211_radiotap_namespace
block|{
specifier|const
name|struct
name|radiotap_align_size
modifier|*
name|align_size
decl_stmt|;
name|int
name|n_bits
decl_stmt|;
name|uint32_t
name|oui
decl_stmt|;
name|uint8_t
name|subns
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ieee80211_radiotap_vendor_namespaces
block|{
specifier|const
name|struct
name|ieee80211_radiotap_namespace
modifier|*
name|ns
decl_stmt|;
name|int
name|n_ns
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/**  * struct ieee80211_radiotap_iterator - tracks walk thru present radiotap args  * @this_arg_index: index of current arg, valid after each successful call  *	to ieee80211_radiotap_iterator_next()  * @this_arg: pointer to current radiotap arg; it is valid after each  *	call to ieee80211_radiotap_iterator_next() but also after  *	ieee80211_radiotap_iterator_init() where it will point to  *	the beginning of the actual data portion  * @this_arg_size: length of the current arg, for convenience  * @current_namespace: pointer to the current namespace definition  *	(or internally %NULL if the current namespace is unknown)  * @is_radiotap_ns: indicates whether the current namespace is the default  *	radiotap namespace or not  *  * @overrides: override standard radiotap fields  * @n_overrides: number of overrides  *  * @_rtheader: pointer to the radiotap header we are walking through  * @_max_length: length of radiotap header in cpu byte ordering  * @_arg_index: next argument index  * @_arg: next argument pointer  * @_next_bitmap: internal pointer to next present u32  * @_bitmap_shifter: internal shifter for curr u32 bitmap, b0 set == arg present  * @_vns: vendor namespace definitions  * @_next_ns_data: beginning of the next namespace's data  * @_reset_on_ext: internal; reset the arg index to 0 when going to the  *	next bitmap word  *  * Describes the radiotap parser state. Fields prefixed with an underscore  * must not be used by users of the parser, only by the parser internally.  */
end_comment

begin_struct
struct|struct
name|ieee80211_radiotap_iterator
block|{
name|struct
name|ieee80211_radiotap_header
modifier|*
name|_rtheader
decl_stmt|;
specifier|const
name|struct
name|ieee80211_radiotap_vendor_namespaces
modifier|*
name|_vns
decl_stmt|;
specifier|const
name|struct
name|ieee80211_radiotap_namespace
modifier|*
name|current_namespace
decl_stmt|;
name|unsigned
name|char
modifier|*
name|_arg
decl_stmt|,
modifier|*
name|_next_ns_data
decl_stmt|;
name|uint32_t
modifier|*
name|_next_bitmap
decl_stmt|;
name|unsigned
name|char
modifier|*
name|this_arg
decl_stmt|;
ifdef|#
directive|ifdef
name|RADIOTAP_SUPPORT_OVERRIDES
specifier|const
name|struct
name|radiotap_override
modifier|*
name|overrides
decl_stmt|;
name|int
name|n_overrides
decl_stmt|;
endif|#
directive|endif
name|int
name|this_arg_index
decl_stmt|;
name|int
name|this_arg_size
decl_stmt|;
name|int
name|is_radiotap_ns
decl_stmt|;
name|int
name|_max_length
decl_stmt|;
name|int
name|_arg_index
decl_stmt|;
name|uint32_t
name|_bitmap_shifter
decl_stmt|;
name|int
name|_reset_on_ext
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
specifier|extern
name|int
name|ieee80211_radiotap_iterator_init
parameter_list|(
name|struct
name|ieee80211_radiotap_iterator
modifier|*
name|iterator
parameter_list|,
name|struct
name|ieee80211_radiotap_header
modifier|*
name|radiotap_header
parameter_list|,
name|int
name|max_length
parameter_list|,
specifier|const
name|struct
name|ieee80211_radiotap_vendor_namespaces
modifier|*
name|vns
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ieee80211_radiotap_iterator_next
parameter_list|(
name|struct
name|ieee80211_radiotap_iterator
modifier|*
name|iterator
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __RADIOTAP_ITER_H */
end_comment

end_unit

