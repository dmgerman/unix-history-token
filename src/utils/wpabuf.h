begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Dynamic data buffer  * Copyright (c) 2007-2009, Jouni Malinen<j@w1.fi>  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License version 2 as  * published by the Free Software Foundation.  *  * Alternatively, this software may be distributed under the terms of BSD  * license.  *  * See README and COPYING for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|WPABUF_H
end_ifndef

begin_define
define|#
directive|define
name|WPABUF_H
end_define

begin_comment
comment|/*  * Internal data structure for wpabuf. Please do not touch this directly from  * elsewhere. This is only defined in header file to allow inline functions  * from this file to access data.  */
end_comment

begin_struct
struct|struct
name|wpabuf
block|{
name|size_t
name|size
decl_stmt|;
comment|/* total size of the allocated buffer */
name|size_t
name|used
decl_stmt|;
comment|/* length of data in the buffer */
name|u8
modifier|*
name|ext_data
decl_stmt|;
comment|/* pointer to external data; NULL if data follows 		       * struct wpabuf */
comment|/* optionally followed by the allocated buffer */
block|}
struct|;
end_struct

begin_function_decl
name|int
name|wpabuf_resize
parameter_list|(
name|struct
name|wpabuf
modifier|*
modifier|*
name|buf
parameter_list|,
name|size_t
name|add_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpabuf
modifier|*
name|wpabuf_alloc
parameter_list|(
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpabuf
modifier|*
name|wpabuf_alloc_ext_data
parameter_list|(
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpabuf
modifier|*
name|wpabuf_alloc_copy
parameter_list|(
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpabuf
modifier|*
name|wpabuf_dup
parameter_list|(
specifier|const
name|struct
name|wpabuf
modifier|*
name|src
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpabuf_free
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|wpabuf_put
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpabuf
modifier|*
name|wpabuf_concat
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|a
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpabuf
modifier|*
name|wpabuf_zeropad
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpabuf_printf
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|char
modifier|*
name|fmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|PRINTF_FORMAT
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_comment
comment|/**  * wpabuf_size - Get the currently allocated size of a wpabuf buffer  * @buf: wpabuf buffer  * Returns: Currently allocated size of the buffer  */
end_comment

begin_function
specifier|static
specifier|inline
name|size_t
name|wpabuf_size
parameter_list|(
specifier|const
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|)
block|{
return|return
name|buf
operator|->
name|size
return|;
block|}
end_function

begin_comment
comment|/**  * wpabuf_len - Get the current length of a wpabuf buffer data  * @buf: wpabuf buffer  * Returns: Currently used length of the buffer  */
end_comment

begin_function
specifier|static
specifier|inline
name|size_t
name|wpabuf_len
parameter_list|(
specifier|const
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|)
block|{
return|return
name|buf
operator|->
name|used
return|;
block|}
end_function

begin_comment
comment|/**  * wpabuf_tailroom - Get size of available tail room in the end of the buffer  * @buf: wpabuf buffer  * Returns: Tail room (in bytes) of available space in the end of the buffer  */
end_comment

begin_function
specifier|static
specifier|inline
name|size_t
name|wpabuf_tailroom
parameter_list|(
specifier|const
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|)
block|{
return|return
name|buf
operator|->
name|size
operator|-
name|buf
operator|->
name|used
return|;
block|}
end_function

begin_comment
comment|/**  * wpabuf_head - Get pointer to the head of the buffer data  * @buf: wpabuf buffer  * Returns: Pointer to the head of the buffer data  */
end_comment

begin_function
specifier|static
specifier|inline
specifier|const
name|void
modifier|*
name|wpabuf_head
parameter_list|(
specifier|const
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|)
block|{
if|if
condition|(
name|buf
operator|->
name|ext_data
condition|)
return|return
name|buf
operator|->
name|ext_data
return|;
return|return
name|buf
operator|+
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
specifier|const
name|u8
modifier|*
name|wpabuf_head_u8
parameter_list|(
specifier|const
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|)
block|{
return|return
name|wpabuf_head
argument_list|(
name|buf
argument_list|)
return|;
block|}
end_function

begin_comment
comment|/**  * wpabuf_mhead - Get modifiable pointer to the head of the buffer data  * @buf: wpabuf buffer  * Returns: Pointer to the head of the buffer data  */
end_comment

begin_function
specifier|static
specifier|inline
name|void
modifier|*
name|wpabuf_mhead
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|)
block|{
if|if
condition|(
name|buf
operator|->
name|ext_data
condition|)
return|return
name|buf
operator|->
name|ext_data
return|;
return|return
name|buf
operator|+
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u8
modifier|*
name|wpabuf_mhead_u8
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|)
block|{
return|return
name|wpabuf_mhead
argument_list|(
name|buf
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpabuf_put_u8
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u8
name|data
parameter_list|)
block|{
name|u8
modifier|*
name|pos
init|=
name|wpabuf_put
argument_list|(
name|buf
argument_list|,
literal|1
argument_list|)
decl_stmt|;
operator|*
name|pos
operator|=
name|data
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpabuf_put_be16
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u16
name|data
parameter_list|)
block|{
name|u8
modifier|*
name|pos
init|=
name|wpabuf_put
argument_list|(
name|buf
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|WPA_PUT_BE16
argument_list|(
name|pos
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpabuf_put_be24
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u32
name|data
parameter_list|)
block|{
name|u8
modifier|*
name|pos
init|=
name|wpabuf_put
argument_list|(
name|buf
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|WPA_PUT_BE24
argument_list|(
name|pos
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpabuf_put_be32
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u32
name|data
parameter_list|)
block|{
name|u8
modifier|*
name|pos
init|=
name|wpabuf_put
argument_list|(
name|buf
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|WPA_PUT_BE32
argument_list|(
name|pos
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpabuf_put_data
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|)
block|{
if|if
condition|(
name|data
condition|)
name|os_memcpy
argument_list|(
name|wpabuf_put
argument_list|(
name|buf
argument_list|,
name|len
argument_list|)
argument_list|,
name|data
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpabuf_put_buf
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|dst
parameter_list|,
specifier|const
name|struct
name|wpabuf
modifier|*
name|src
parameter_list|)
block|{
name|wpabuf_put_data
argument_list|(
name|dst
argument_list|,
name|wpabuf_head
argument_list|(
name|src
argument_list|)
argument_list|,
name|wpabuf_len
argument_list|(
name|src
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpabuf_set
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|)
block|{
name|buf
operator|->
name|ext_data
operator|=
operator|(
name|u8
operator|*
operator|)
name|data
expr_stmt|;
name|buf
operator|->
name|size
operator|=
name|buf
operator|->
name|used
operator|=
name|len
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpabuf_put_str
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|dst
parameter_list|,
specifier|const
name|char
modifier|*
name|str
parameter_list|)
block|{
name|wpabuf_put_data
argument_list|(
name|dst
argument_list|,
name|str
argument_list|,
name|os_strlen
argument_list|(
name|str
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WPABUF_H */
end_comment

end_unit

