begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Wi-Fi Protected Setup - internal definitions  * Copyright (c) 2008, Jouni Malinen<j@w1.fi>  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License version 2 as  * published by the Free Software Foundation.  *  * Alternatively, this software may be distributed under the terms of BSD  * license.  *  * See README and COPYING for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|WPS_I_H
end_ifndef

begin_define
define|#
directive|define
name|WPS_I_H
end_define

begin_include
include|#
directive|include
file|"wps.h"
end_include

begin_comment
comment|/**  * struct wps_data - WPS registration protocol data  *  * This data is stored at the EAP-WSC server/peer method and it is kept for a  * single registration protocol run.  */
end_comment

begin_struct
struct|struct
name|wps_data
block|{
comment|/** 	 * wps - Pointer to long term WPS context 	 */
name|struct
name|wps_context
modifier|*
name|wps
decl_stmt|;
comment|/** 	 * registrar - Whether this end is a Registrar 	 */
name|int
name|registrar
decl_stmt|;
enum|enum
block|{
comment|/* Enrollee states */
name|SEND_M1
block|,
name|RECV_M2
block|,
name|SEND_M3
block|,
name|RECV_M4
block|,
name|SEND_M5
block|,
name|RECV_M6
block|,
name|SEND_M7
block|,
name|RECV_M8
block|,
name|RECEIVED_M2D
block|,
name|WPS_MSG_DONE
block|,
name|RECV_ACK
block|,
name|WPS_FINISHED
block|,
name|SEND_WSC_NACK
block|,
comment|/* Registrar states */
name|RECV_M1
block|,
name|SEND_M2
block|,
name|RECV_M3
block|,
name|SEND_M4
block|,
name|RECV_M5
block|,
name|SEND_M6
block|,
name|RECV_M7
block|,
name|SEND_M8
block|,
name|RECV_DONE
block|,
name|SEND_M2D
block|,
name|RECV_M2D_ACK
block|}
name|state
enum|;
name|u8
name|uuid_e
index|[
name|WPS_UUID_LEN
index|]
decl_stmt|;
name|u8
name|uuid_r
index|[
name|WPS_UUID_LEN
index|]
decl_stmt|;
name|u8
name|mac_addr_e
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|u8
name|nonce_e
index|[
name|WPS_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|nonce_r
index|[
name|WPS_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|psk1
index|[
name|WPS_PSK_LEN
index|]
decl_stmt|;
name|u8
name|psk2
index|[
name|WPS_PSK_LEN
index|]
decl_stmt|;
name|u8
name|snonce
index|[
literal|2
operator|*
name|WPS_SECRET_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|peer_hash1
index|[
name|WPS_HASH_LEN
index|]
decl_stmt|;
name|u8
name|peer_hash2
index|[
name|WPS_HASH_LEN
index|]
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|dh_privkey
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|dh_pubkey_e
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|dh_pubkey_r
decl_stmt|;
name|u8
name|authkey
index|[
name|WPS_AUTHKEY_LEN
index|]
decl_stmt|;
name|u8
name|keywrapkey
index|[
name|WPS_KEYWRAPKEY_LEN
index|]
decl_stmt|;
name|u8
name|emsk
index|[
name|WPS_EMSK_LEN
index|]
decl_stmt|;
name|u8
name|mgmt_auth_key
index|[
name|WPS_MGMTAUTHKEY_LEN
index|]
decl_stmt|;
name|u8
name|mgmt_auth_key_id
index|[
name|WPS_MGMT_KEY_ID_LEN
index|]
decl_stmt|;
name|u8
name|mgmt_enc_key
index|[
name|WPS_MGMTENCKEY_LEN
index|]
decl_stmt|;
name|u8
name|mgmt_enc_key_id
index|[
name|WPS_MGMT_KEY_ID_LEN
index|]
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|last_msg
decl_stmt|;
name|u8
modifier|*
name|dev_password
decl_stmt|;
name|size_t
name|dev_password_len
decl_stmt|;
name|u16
name|dev_pw_id
decl_stmt|;
name|int
name|pbc
decl_stmt|;
comment|/** 	 * request_type - Request Type attribute from (Re)AssocReq 	 */
name|u8
name|request_type
decl_stmt|;
comment|/** 	 * encr_type - Available encryption types 	 */
name|u16
name|encr_type
decl_stmt|;
comment|/** 	 * auth_type - Available authentication types 	 */
name|u16
name|auth_type
decl_stmt|;
name|u8
modifier|*
name|new_psk
decl_stmt|;
name|size_t
name|new_psk_len
decl_stmt|;
name|int
name|wps_pin_revealed
decl_stmt|;
name|struct
name|wps_credential
name|cred
decl_stmt|;
name|struct
name|wps_device_data
name|peer_dev
decl_stmt|;
comment|/** 	 * config_error - Configuration Error value to be used in NACK 	 */
name|u16
name|config_error
decl_stmt|;
name|int
name|ext_reg
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|wps_parse_attr
block|{
comment|/* fixed length fields */
specifier|const
name|u8
modifier|*
name|version
decl_stmt|;
comment|/* 1 octet */
specifier|const
name|u8
modifier|*
name|msg_type
decl_stmt|;
comment|/* 1 octet */
specifier|const
name|u8
modifier|*
name|enrollee_nonce
decl_stmt|;
comment|/* WPS_NONCE_LEN (16) octets */
specifier|const
name|u8
modifier|*
name|registrar_nonce
decl_stmt|;
comment|/* WPS_NONCE_LEN (16) octets */
specifier|const
name|u8
modifier|*
name|uuid_r
decl_stmt|;
comment|/* WPS_UUID_LEN (16) octets */
specifier|const
name|u8
modifier|*
name|uuid_e
decl_stmt|;
comment|/* WPS_UUID_LEN (16) octets */
specifier|const
name|u8
modifier|*
name|auth_type_flags
decl_stmt|;
comment|/* 2 octets */
specifier|const
name|u8
modifier|*
name|encr_type_flags
decl_stmt|;
comment|/* 2 octets */
specifier|const
name|u8
modifier|*
name|conn_type_flags
decl_stmt|;
comment|/* 1 octet */
specifier|const
name|u8
modifier|*
name|config_methods
decl_stmt|;
comment|/* 2 octets */
specifier|const
name|u8
modifier|*
name|sel_reg_config_methods
decl_stmt|;
comment|/* 2 octets */
specifier|const
name|u8
modifier|*
name|primary_dev_type
decl_stmt|;
comment|/* 8 octets */
specifier|const
name|u8
modifier|*
name|rf_bands
decl_stmt|;
comment|/* 1 octet */
specifier|const
name|u8
modifier|*
name|assoc_state
decl_stmt|;
comment|/* 2 octets */
specifier|const
name|u8
modifier|*
name|config_error
decl_stmt|;
comment|/* 2 octets */
specifier|const
name|u8
modifier|*
name|dev_password_id
decl_stmt|;
comment|/* 2 octets */
specifier|const
name|u8
modifier|*
name|os_version
decl_stmt|;
comment|/* 4 octets */
specifier|const
name|u8
modifier|*
name|wps_state
decl_stmt|;
comment|/* 1 octet */
specifier|const
name|u8
modifier|*
name|authenticator
decl_stmt|;
comment|/* WPS_AUTHENTICATOR_LEN (8) octets */
specifier|const
name|u8
modifier|*
name|r_hash1
decl_stmt|;
comment|/* WPS_HASH_LEN (32) octets */
specifier|const
name|u8
modifier|*
name|r_hash2
decl_stmt|;
comment|/* WPS_HASH_LEN (32) octets */
specifier|const
name|u8
modifier|*
name|e_hash1
decl_stmt|;
comment|/* WPS_HASH_LEN (32) octets */
specifier|const
name|u8
modifier|*
name|e_hash2
decl_stmt|;
comment|/* WPS_HASH_LEN (32) octets */
specifier|const
name|u8
modifier|*
name|r_snonce1
decl_stmt|;
comment|/* WPS_SECRET_NONCE_LEN (16) octets */
specifier|const
name|u8
modifier|*
name|r_snonce2
decl_stmt|;
comment|/* WPS_SECRET_NONCE_LEN (16) octets */
specifier|const
name|u8
modifier|*
name|e_snonce1
decl_stmt|;
comment|/* WPS_SECRET_NONCE_LEN (16) octets */
specifier|const
name|u8
modifier|*
name|e_snonce2
decl_stmt|;
comment|/* WPS_SECRET_NONCE_LEN (16) octets */
specifier|const
name|u8
modifier|*
name|key_wrap_auth
decl_stmt|;
comment|/* WPS_KWA_LEN (8) octets */
specifier|const
name|u8
modifier|*
name|auth_type
decl_stmt|;
comment|/* 2 octets */
specifier|const
name|u8
modifier|*
name|encr_type
decl_stmt|;
comment|/* 2 octets */
specifier|const
name|u8
modifier|*
name|network_idx
decl_stmt|;
comment|/* 1 octet */
specifier|const
name|u8
modifier|*
name|network_key_idx
decl_stmt|;
comment|/* 1 octet */
specifier|const
name|u8
modifier|*
name|mac_addr
decl_stmt|;
comment|/* ETH_ALEN (6) octets */
specifier|const
name|u8
modifier|*
name|key_prov_auto
decl_stmt|;
comment|/* 1 octet (Bool) */
specifier|const
name|u8
modifier|*
name|dot1x_enabled
decl_stmt|;
comment|/* 1 octet (Bool) */
specifier|const
name|u8
modifier|*
name|selected_registrar
decl_stmt|;
comment|/* 1 octet (Bool) */
specifier|const
name|u8
modifier|*
name|request_type
decl_stmt|;
comment|/* 1 octet */
specifier|const
name|u8
modifier|*
name|response_type
decl_stmt|;
comment|/* 1 octet */
comment|/* variable length fields */
specifier|const
name|u8
modifier|*
name|manufacturer
decl_stmt|;
name|size_t
name|manufacturer_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|model_name
decl_stmt|;
name|size_t
name|model_name_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|model_number
decl_stmt|;
name|size_t
name|model_number_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|serial_number
decl_stmt|;
name|size_t
name|serial_number_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|dev_name
decl_stmt|;
name|size_t
name|dev_name_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|public_key
decl_stmt|;
name|size_t
name|public_key_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|encr_settings
decl_stmt|;
name|size_t
name|encr_settings_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|ssid
decl_stmt|;
comment|/*<= 32 octets */
name|size_t
name|ssid_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|network_key
decl_stmt|;
comment|/*<= 64 octets */
name|size_t
name|network_key_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|eap_type
decl_stmt|;
comment|/*<= 8 octets */
name|size_t
name|eap_type_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|eap_identity
decl_stmt|;
comment|/*<= 64 octets */
name|size_t
name|eap_identity_len
decl_stmt|;
comment|/* attributes that can occur multiple times */
define|#
directive|define
name|MAX_CRED_COUNT
value|10
specifier|const
name|u8
modifier|*
name|cred
index|[
name|MAX_CRED_COUNT
index|]
decl_stmt|;
name|size_t
name|cred_len
index|[
name|MAX_CRED_COUNT
index|]
decl_stmt|;
name|size_t
name|num_cred
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* wps_common.c */
end_comment

begin_function_decl
name|void
name|wps_kdf
parameter_list|(
specifier|const
name|u8
modifier|*
name|key
parameter_list|,
specifier|const
name|u8
modifier|*
name|label_prefix
parameter_list|,
name|size_t
name|label_prefix_len
parameter_list|,
specifier|const
name|char
modifier|*
name|label
parameter_list|,
name|u8
modifier|*
name|res
parameter_list|,
name|size_t
name|res_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_derive_keys
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_derive_mgmt_keys
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wps_derive_psk
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
specifier|const
name|u8
modifier|*
name|dev_passwd
parameter_list|,
name|size_t
name|dev_passwd_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpabuf
modifier|*
name|wps_decrypt_encr_settings
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
specifier|const
name|u8
modifier|*
name|encr
parameter_list|,
name|size_t
name|encr_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wps_fail_event
parameter_list|(
name|struct
name|wps_context
modifier|*
name|wps
parameter_list|,
name|enum
name|wps_msg_type
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wps_success_event
parameter_list|(
name|struct
name|wps_context
modifier|*
name|wps
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wps_pwd_auth_fail_event
parameter_list|(
name|struct
name|wps_context
modifier|*
name|wps
parameter_list|,
name|int
name|enrollee
parameter_list|,
name|int
name|part
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* wps_attr_parse.c */
end_comment

begin_function_decl
name|int
name|wps_parse_msg
parameter_list|(
specifier|const
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|,
name|struct
name|wps_parse_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* wps_attr_build.c */
end_comment

begin_function_decl
name|int
name|wps_build_public_key
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_req_type
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|,
name|enum
name|wps_request_type
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_config_methods
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|,
name|u16
name|methods
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_uuid_e
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|,
specifier|const
name|u8
modifier|*
name|uuid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_dev_password_id
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|,
name|u16
name|id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_config_error
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|,
name|u16
name|err
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_authenticator
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_key_wrap_auth
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_encr_settings
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|plain
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_version
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_msg_type
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|,
name|enum
name|wps_msg_type
name|msg_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_enrollee_nonce
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_registrar_nonce
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_auth_type_flags
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_encr_type_flags
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_conn_type_flags
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_build_assoc_state
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* wps_attr_process.c */
end_comment

begin_function_decl
name|int
name|wps_process_authenticator
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
specifier|const
name|u8
modifier|*
name|authenticator
parameter_list|,
specifier|const
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_process_key_wrap_auth
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|,
specifier|const
name|u8
modifier|*
name|key_wrap_auth
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_process_cred
parameter_list|(
name|struct
name|wps_parse_attr
modifier|*
name|attr
parameter_list|,
name|struct
name|wps_credential
modifier|*
name|cred
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wps_process_ap_settings
parameter_list|(
name|struct
name|wps_parse_attr
modifier|*
name|attr
parameter_list|,
name|struct
name|wps_credential
modifier|*
name|cred
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* wps_enrollee.c */
end_comment

begin_function_decl
name|struct
name|wpabuf
modifier|*
name|wps_enrollee_get_msg
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|enum
name|wsc_op_code
modifier|*
name|op_code
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|enum
name|wps_process_res
name|wps_enrollee_process_msg
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|enum
name|wsc_op_code
name|op_code
parameter_list|,
specifier|const
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* wps_registrar.c */
end_comment

begin_function_decl
name|struct
name|wpabuf
modifier|*
name|wps_registrar_get_msg
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|enum
name|wsc_op_code
modifier|*
name|op_code
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|enum
name|wps_process_res
name|wps_registrar_process_msg
parameter_list|(
name|struct
name|wps_data
modifier|*
name|wps
parameter_list|,
name|enum
name|wsc_op_code
name|op_code
parameter_list|,
specifier|const
name|struct
name|wpabuf
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|int
name|wps_version_supported
parameter_list|(
specifier|const
name|u8
modifier|*
name|version
parameter_list|)
block|{
comment|/* Require major version match, but allow minor version differences */
return|return
name|version
operator|&&
operator|(
operator|*
name|version
operator|&
literal|0xf0
operator|)
operator|==
operator|(
name|WPS_VERSION
operator|&
literal|0xf0
operator|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WPS_I_H */
end_comment

end_unit

