begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright (c) 2010, Oracle and/or its affiliates. All rights reserved.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_ZRLOCK_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_ZRLOCK_H
end_define

begin_include
include|#
directive|include
file|<sys/zfs_context.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
typedef|typedef
struct|struct
name|zrlock
block|{
name|kmutex_t
name|zr_mtx
decl_stmt|;
specifier|volatile
name|int32_t
name|zr_refcount
decl_stmt|;
name|kcondvar_t
name|zr_cv
decl_stmt|;
name|uint16_t
name|zr_pad
decl_stmt|;
ifdef|#
directive|ifdef
name|ZFS_DEBUG
name|kthread_t
modifier|*
name|zr_owner
decl_stmt|;
specifier|const
name|char
modifier|*
name|zr_caller
decl_stmt|;
endif|#
directive|endif
block|}
name|zrlock_t
typedef|;
specifier|extern
name|void
name|zrl_init
parameter_list|(
name|zrlock_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|zrl_destroy
parameter_list|(
name|zrlock_t
modifier|*
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|ZFS_DEBUG
define|#
directive|define
name|zrl_add
parameter_list|(
name|_z
parameter_list|)
value|zrl_add_debug((_z), __func__)
specifier|extern
name|void
name|zrl_add_debug
parameter_list|(
name|zrlock_t
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
else|#
directive|else
specifier|extern
name|void
name|zrl_add
parameter_list|(
name|zrlock_t
modifier|*
parameter_list|)
function_decl|;
endif|#
directive|endif
specifier|extern
name|void
name|zrl_remove
parameter_list|(
name|zrlock_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|zrl_tryenter
parameter_list|(
name|zrlock_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|zrl_exit
parameter_list|(
name|zrlock_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|zrl_is_zero
parameter_list|(
name|zrlock_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|zrl_is_locked
parameter_list|(
name|zrlock_t
modifier|*
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|ZFS_DEBUG
specifier|extern
name|kthread_t
modifier|*
name|zrl_owner
parameter_list|(
name|zrlock_t
modifier|*
parameter_list|)
function_decl|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_ZRLOCK_H */
end_comment

end_unit

