begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright 2007-2009 Solarflare Communications Inc.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_SIENA_FLASH_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_SIENA_FLASH_H
end_define

begin_pragma
pragma|#
directive|pragma
name|pack
name|(
name|1
name|)
end_pragma

begin_comment
comment|/* Fixed locations near the start of flash (which may be in the internal PHY  * firmware header) point to the boot header.  *  * - parsed by MC boot ROM and firmware  * - reserved (but not parsed) by PHY firmware  * - opaque to driver  */
end_comment

begin_define
define|#
directive|define
name|SIENA_MC_BOOT_PHY_FW_HDR_LEN
value|(0x20)
end_define

begin_define
define|#
directive|define
name|SIENA_MC_BOOT_PTR_LOCATION
value|(0x18)
end_define

begin_comment
comment|/* First thing we try to boot */
end_comment

begin_define
define|#
directive|define
name|SIENA_MC_BOOT_ALT_PTR_LOCATION
value|(0x1c)
end_define

begin_comment
comment|/* Alternative if that fails */
end_comment

begin_define
define|#
directive|define
name|SIENA_MC_BOOT_HDR_LEN
value|(0x200)
end_define

begin_define
define|#
directive|define
name|SIENA_MC_BOOT_MAGIC
value|(0x51E4A001)
end_define

begin_define
define|#
directive|define
name|SIENA_MC_BOOT_VERSION
value|(1)
end_define

begin_typedef
typedef|typedef
struct|struct
name|siena_mc_boot_hdr_s
block|{
comment|/* GENERATED BY scripts/genfwdef */
name|efx_dword_t
name|magic
decl_stmt|;
comment|/* = SIENA_MC_BOOT_MAGIC */
name|efx_word_t
name|hdr_version
decl_stmt|;
comment|/* this structure definition is version 1 */
name|efx_byte_t
name|board_type
decl_stmt|;
name|efx_byte_t
name|firmware_version_a
decl_stmt|;
name|efx_byte_t
name|firmware_version_b
decl_stmt|;
name|efx_byte_t
name|firmware_version_c
decl_stmt|;
name|efx_word_t
name|checksum
decl_stmt|;
comment|/* of whole header area + firmware image */
name|efx_word_t
name|firmware_version_d
decl_stmt|;
name|efx_word_t
name|reserved_a
index|[
literal|1
index|]
decl_stmt|;
comment|/* (set to 0) */
name|efx_dword_t
name|firmware_text_offset
decl_stmt|;
comment|/* offset to firmware .text */
name|efx_dword_t
name|firmware_text_size
decl_stmt|;
comment|/* length of firmware .text, in bytes */
name|efx_dword_t
name|firmware_data_offset
decl_stmt|;
comment|/* offset to firmware .data */
name|efx_dword_t
name|firmware_data_size
decl_stmt|;
comment|/* length of firmware .data, in bytes */
name|efx_dword_t
name|reserved_b
index|[
literal|8
index|]
decl_stmt|;
comment|/* (set to 0) */
block|}
name|siena_mc_boot_hdr_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|SIENA_MC_STATIC_CONFIG_MAGIC
value|(0xBDCF5555)
end_define

begin_define
define|#
directive|define
name|SIENA_MC_STATIC_CONFIG_VERSION
value|(0)
end_define

begin_typedef
typedef|typedef
struct|struct
name|siena_mc_static_config_hdr_s
block|{
comment|/* GENERATED BY scripts/genfwdef */
name|efx_dword_t
name|magic
decl_stmt|;
comment|/* = SIENA_MC_STATIC_CONFIG_MAGIC */
name|efx_word_t
name|length
decl_stmt|;
comment|/* of header area (i.e. not including VPD) */
name|efx_byte_t
name|version
decl_stmt|;
name|efx_byte_t
name|csum
decl_stmt|;
comment|/* over header area (i.e. not including VPD) */
name|efx_dword_t
name|static_vpd_offset
decl_stmt|;
name|efx_dword_t
name|static_vpd_length
decl_stmt|;
name|efx_dword_t
name|capabilities
decl_stmt|;
name|efx_byte_t
name|mac_addr_base
index|[
literal|6
index|]
decl_stmt|;
name|efx_byte_t
name|green_mode_cal
decl_stmt|;
comment|/* Green mode calibration result */
name|efx_byte_t
name|green_mode_valid
decl_stmt|;
comment|/* Whether cal holds a valid value */
name|efx_word_t
name|mac_addr_count
decl_stmt|;
name|efx_word_t
name|mac_addr_stride
decl_stmt|;
name|efx_dword_t
name|reserved2
index|[
literal|2
index|]
decl_stmt|;
comment|/* (write as zero) */
name|efx_dword_t
name|num_dbi_items
decl_stmt|;
struct|struct
block|{
name|efx_word_t
name|addr
decl_stmt|;
name|efx_word_t
name|byte_enables
decl_stmt|;
name|efx_dword_t
name|value
decl_stmt|;
block|}
name|dbi
index|[]
struct|;
block|}
name|siena_mc_static_config_hdr_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|SIENA_MC_DYNAMIC_CONFIG_MAGIC
value|(0xBDCFDDDD)
end_define

begin_define
define|#
directive|define
name|SIENA_MC_DYNAMIC_CONFIG_VERSION
value|(0)
end_define

begin_typedef
typedef|typedef
struct|struct
name|siena_mc_fw_version_s
block|{
comment|/* GENERATED BY scripts/genfwdef */
name|efx_dword_t
name|fw_subtype
decl_stmt|;
name|efx_word_t
name|version_w
decl_stmt|;
name|efx_word_t
name|version_x
decl_stmt|;
name|efx_word_t
name|version_y
decl_stmt|;
name|efx_word_t
name|version_z
decl_stmt|;
block|}
name|siena_mc_fw_version_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|siena_mc_dynamic_config_hdr_s
block|{
comment|/* GENERATED BY scripts/genfwdef */
name|efx_dword_t
name|magic
decl_stmt|;
comment|/* = SIENA_MC_DYNAMIC_CONFIG_MAGIC */
name|efx_word_t
name|length
decl_stmt|;
comment|/* of header area (i.e. not including VPD) */
name|efx_byte_t
name|version
decl_stmt|;
name|efx_byte_t
name|csum
decl_stmt|;
comment|/* over header area (i.e. not including VPD) */
name|efx_dword_t
name|dynamic_vpd_offset
decl_stmt|;
name|efx_dword_t
name|dynamic_vpd_length
decl_stmt|;
name|efx_dword_t
name|num_fw_version_items
decl_stmt|;
name|siena_mc_fw_version_t
name|fw_version
index|[]
decl_stmt|;
block|}
name|siena_mc_dynamic_config_hdr_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|SIENA_MC_EXPROM_SINGLE_MAGIC
value|(0xAA55)
end_define

begin_comment
comment|/* little-endian uint16_t */
end_comment

begin_define
define|#
directive|define
name|SIENA_MC_EXPROM_COMBO_MAGIC
value|(0xB0070102)
end_define

begin_comment
comment|/* little-endian uint32_t */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|siena_mc_combo_rom_hdr_s
block|{
comment|/* GENERATED BY scripts/genfwdef */
name|efx_dword_t
name|magic
decl_stmt|;
comment|/* = SIENA_MC_EXPROM_COMBO_MAGIC */
name|efx_dword_t
name|len1
decl_stmt|;
comment|/* length of first image */
name|efx_dword_t
name|len2
decl_stmt|;
comment|/* length of second image */
name|efx_dword_t
name|off1
decl_stmt|;
comment|/* offset of first byte to edit to combine images */
name|efx_dword_t
name|off2
decl_stmt|;
comment|/* offset of second byte to edit to combine images */
name|efx_word_t
name|infoblk0_off
decl_stmt|;
comment|/* infoblk offset */
name|efx_word_t
name|infoblk1_off
decl_stmt|;
comment|/* infoblk offset */
name|efx_byte_t
name|infoblk_len
decl_stmt|;
comment|/* length of space reserved for infoblk structures */
name|efx_byte_t
name|reserved
index|[
literal|7
index|]
decl_stmt|;
comment|/* (set to 0) */
block|}
name|siena_mc_combo_rom_hdr_t
typedef|;
end_typedef

begin_pragma
pragma|#
directive|pragma
name|pack
name|(
name|)
end_pragma

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_SIENA_FLASH_H */
end_comment

end_unit

