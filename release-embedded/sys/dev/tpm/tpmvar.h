begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2008, 2009 Michael Shalayeff  * Copyright (c) 2009, 2010 Hans-Joerg Hoexer  * All rights reserved.  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER IN  * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT  * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_TPMVAR_H
end_ifndef

begin_define
define|#
directive|define
name|_TPMVAR_H
end_define

begin_struct
struct|struct
name|tpm_softc
block|{
ifndef|#
directive|ifndef
name|__FreeBSD__
name|struct
name|device
name|sc_dev
decl_stmt|;
endif|#
directive|endif
name|void
modifier|*
name|sc_ih
decl_stmt|;
name|int
function_decl|(
modifier|*
name|sc_init
function_decl|)
parameter_list|(
name|struct
name|tpm_softc
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_start
function_decl|)
parameter_list|(
name|struct
name|tpm_softc
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_read
function_decl|)
parameter_list|(
name|struct
name|tpm_softc
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|size_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_write
function_decl|)
parameter_list|(
name|struct
name|tpm_softc
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_end
function_decl|)
parameter_list|(
name|struct
name|tpm_softc
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|bus_space_tag_t
name|sc_bt
decl_stmt|,
name|sc_batm
decl_stmt|;
name|bus_space_handle_t
name|sc_bh
decl_stmt|,
name|sc_bahm
decl_stmt|;
name|u_int32_t
name|sc_devid
decl_stmt|;
name|u_int32_t
name|sc_rev
decl_stmt|;
name|u_int32_t
name|sc_stat
decl_stmt|;
name|u_int32_t
name|sc_capabilities
decl_stmt|;
name|int
name|sc_flags
decl_stmt|;
define|#
directive|define
name|TPM_OPEN
value|0x0001
name|int
name|sc_vector
decl_stmt|;
ifdef|#
directive|ifdef
name|__FreeBSD__
name|void
modifier|*
name|intr_cookie
decl_stmt|;
name|int
name|mem_rid
decl_stmt|,
name|irq_rid
decl_stmt|;
name|struct
name|resource
modifier|*
name|mem_res
decl_stmt|,
modifier|*
name|irq_res
decl_stmt|;
name|struct
name|cdev
modifier|*
name|sc_cdev
decl_stmt|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|__FreeBSD__
name|void
modifier|*
name|sc_powerhook
decl_stmt|;
endif|#
directive|endif
name|int
name|sc_suspend
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|tpm_tis12_probe
parameter_list|(
name|bus_space_tag_t
name|iot
parameter_list|,
name|bus_space_handle_t
name|ioh
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tpm_attach
parameter_list|(
name|device_t
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tpm_detach
parameter_list|(
name|device_t
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tpm_suspend
parameter_list|(
name|device_t
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tpm_resume
parameter_list|(
name|device_t
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

