begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * This file is provided under a dual BSD/GPLv2 license.  When using or  * redistributing this file, you may do so under either license.  *  * GPL LICENSE SUMMARY  *  * Copyright(c) 2008 - 2011 Intel Corporation. All rights reserved.  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of version 2 of the GNU General Public License as  * published by the Free Software Foundation.  *  * This program is distributed in the hope that it will be useful, but  * WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  * General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.  * The full GNU General Public License is included in this distribution  * in the file called LICENSE.GPL.  *  * BSD LICENSE  *  * Copyright(c) 2008 - 2011 Intel Corporation. All rights reserved.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  *   * Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *   * Redistributions in binary form must reproduce the above copyright  *     notice, this list of conditions and the following disclaimer in  *     the documentation and/or other materials provided with the  *     distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SCU_REGISTERS_H_
end_ifndef

begin_define
define|#
directive|define
name|_SCU_REGISTERS_H_
end_define

begin_comment
comment|/**  * @file  *  * @brief This file contains the constants and structures for the SCU memory  * mapped registers.  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
include|#
directive|include
file|<dev/isci/scil/sci_types.h>
include|#
directive|include
file|<dev/isci/scil/scu_viit_data.h>
comment|// Generate a value for an SCU register
define|#
directive|define
name|SCU_GEN_VALUE
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|(((U32)(value)<< name ## _SHIFT)& (name ## _MASK))
comment|// Generate a bit value for an SCU register
comment|// Make sure that the register MASK is just a single bit
define|#
directive|define
name|SCU_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_VALUE(name, ((U32)1))
define|#
directive|define
name|SCU_SET_BIT
parameter_list|(
name|name
parameter_list|,
name|reg_value
parameter_list|)
define|\
value|((reg_value) | SCU_GEN_BIT(name))
define|#
directive|define
name|SCU_CLEAR_BIT
parameter_list|(
name|name
parameter_list|,
name|reg_value
parameter_list|)
define|\
value|((reg_value) $ ~(SCU_GEN_BIT(name)))
comment|//*****************************************************************************
comment|// Unions for bitfield definitions of SCU Registers
comment|// SMU Post Context Port
comment|//*****************************************************************************
define|#
directive|define
name|SMU_POST_CONTEXT_PORT_CONTEXT_INDEX_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_POST_CONTEXT_PORT_CONTEXT_INDEX_MASK
value|(0x00000FFFUL)
define|#
directive|define
name|SMU_POST_CONTEXT_PORT_LOGICAL_PORT_INDEX_SHIFT
value|(12UL)
define|#
directive|define
name|SMU_POST_CONTEXT_PORT_LOGICAL_PORT_INDEX_MASK
value|(0x0000F000UL)
define|#
directive|define
name|SMU_POST_CONTEXT_PORT_PROTOCOL_ENGINE_SHIFT
value|(16UL)
define|#
directive|define
name|SMU_POST_CONTEXT_PORT_PROTOCOL_ENGINE_MASK
value|(0x00030000UL)
define|#
directive|define
name|SMU_POST_CONTEXT_PORT_COMMAND_CONTEXT_SHIFT
value|(18UL)
define|#
directive|define
name|SMU_POST_CONTEXT_PORT_COMMAND_CONTEXT_MASK
value|(0x00FC0000UL)
define|#
directive|define
name|SMU_POST_CONTEXT_PORT_RESERVED_MASK
value|(0xFF000000UL)
define|#
directive|define
name|SMU_PCP_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SMU_POST_CONTEXT_PORT_##name, value)
comment|//*****************************************************************************
define|#
directive|define
name|SMU_INTERRUPT_STATUS_COMPLETION_SHIFT
value|(31UL)
define|#
directive|define
name|SMU_INTERRUPT_STATUS_COMPLETION_MASK
value|(0x80000000UL)
define|#
directive|define
name|SMU_INTERRUPT_STATUS_QUEUE_SUSPEND_SHIFT
value|(1UL)
define|#
directive|define
name|SMU_INTERRUPT_STATUS_QUEUE_SUSPEND_MASK
value|(0x00000002UL)
define|#
directive|define
name|SMU_INTERRUPT_STATUS_QUEUE_ERROR_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_INTERRUPT_STATUS_QUEUE_ERROR_MASK
value|(0x00000001UL)
define|#
directive|define
name|SMU_INTERRUPT_STATUS_RESERVED_MASK
value|(0x7FFFFFFCUL)
define|#
directive|define
name|SMU_ISR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SMU_INTERRUPT_STATUS_##name)
define|#
directive|define
name|SMU_ISR_QUEUE_ERROR
value|SMU_ISR_GEN_BIT(QUEUE_ERROR)
define|#
directive|define
name|SMU_ISR_QUEUE_SUSPEND
value|SMU_ISR_GEN_BIT(QUEUE_SUSPEND)
define|#
directive|define
name|SMU_ISR_COMPLETION
value|SMU_ISR_GEN_BIT(COMPLETION)
comment|//*****************************************************************************
define|#
directive|define
name|SMU_INTERRUPT_MASK_COMPLETION_SHIFT
value|(31UL)
define|#
directive|define
name|SMU_INTERRUPT_MASK_COMPLETION_MASK
value|(0x80000000UL)
define|#
directive|define
name|SMU_INTERRUPT_MASK_QUEUE_SUSPEND_SHIFT
value|(1UL)
define|#
directive|define
name|SMU_INTERRUPT_MASK_QUEUE_SUSPEND_MASK
value|(0x00000002UL)
define|#
directive|define
name|SMU_INTERRUPT_MASK_QUEUE_ERROR_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_INTERRUPT_MASK_QUEUE_ERROR_MASK
value|(0x00000001UL)
define|#
directive|define
name|SMU_INTERRUPT_MASK_RESERVED_MASK
value|(0x7FFFFFFCUL)
define|#
directive|define
name|SMU_IMR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SMU_INTERRUPT_MASK_##name)
define|#
directive|define
name|SMU_IMR_QUEUE_ERROR
value|SMU_IMR_GEN_BIT(QUEUE_ERROR)
define|#
directive|define
name|SMU_IMR_QUEUE_SUSPEND
value|SMU_IMR_GEN_BIT(QUEUE_SUSPEND)
define|#
directive|define
name|SMU_IMR_COMPLETION
value|SMU_IMR_GEN_BIT(COMPLETION)
comment|//*****************************************************************************
define|#
directive|define
name|SMU_INTERRUPT_COALESCING_CONTROL_TIMER_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_INTERRUPT_COALESCING_CONTROL_TIMER_MASK
value|(0x0000001FUL)
define|#
directive|define
name|SMU_INTERRUPT_COALESCING_CONTROL_NUMBER_SHIFT
value|(8UL)
define|#
directive|define
name|SMU_INTERRUPT_COALESCING_CONTROL_NUMBER_MASK
value|(0x0000FF00UL)
define|#
directive|define
name|SMU_INTERRUPT_COALESCING_CONTROL_RESERVED_MASK
value|(0xFFFF00E0UL)
define|#
directive|define
name|SMU_ICC_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SMU_INTERRUPT_COALESCING_CONTROL_##name, value)
comment|//*****************************************************************************
define|#
directive|define
name|SMU_TASK_CONTEXT_RANGE_START_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_TASK_CONTEXT_RANGE_START_MASK
value|(0x00000FFFUL)
define|#
directive|define
name|SMU_TASK_CONTEXT_RANGE_ENDING_SHIFT
value|(16UL)
define|#
directive|define
name|SMU_TASK_CONTEXT_RANGE_ENDING_MASK
value|(0x0FFF0000UL)
define|#
directive|define
name|SMU_TASK_CONTEXT_RANGE_ENABLE_SHIFT
value|(31UL)
define|#
directive|define
name|SMU_TASK_CONTEXT_RANGE_ENABLE_MASK
value|(0x80000000UL)
define|#
directive|define
name|SMU_TASK_CONTEXT_RANGE_RESERVED_MASK
value|(0x7000F000UL)
define|#
directive|define
name|SMU_TCR_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SMU_TASK_CONTEXT_RANGE_##name, value)
define|#
directive|define
name|SMU_TCR_GEN_BIT
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_BIT(SMU_TASK_CONTEXT_RANGE_##name)
comment|//*****************************************************************************
define|#
directive|define
name|SMU_COMPLETION_QUEUE_PUT_POINTER_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_PUT_POINTER_MASK
value|(0x00003FFFUL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_PUT_CYCLE_BIT_SHIFT
value|(15UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_PUT_CYCLE_BIT_MASK
value|(0x00008000UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_PUT_EVENT_POINTER_SHIFT
value|(16UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_PUT_EVENT_POINTER_MASK
value|(0x03FF0000UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_PUT_EVENT_CYCLE_BIT_SHIFT
value|(26UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_PUT_EVENT_CYCLE_BIT_MASK
value|(0x04000000UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_PUT_RESERVED_MASK
value|(0xF8004000UL)
define|#
directive|define
name|SMU_CQPR_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SMU_COMPLETION_QUEUE_PUT_##name, value)
define|#
directive|define
name|SMU_CQPR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SMU_COMPLETION_QUEUE_PUT_##name)
comment|//*****************************************************************************
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_POINTER_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_POINTER_MASK
value|(0x00003FFFUL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_CYCLE_BIT_SHIFT
value|(15UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_CYCLE_BIT_MASK
value|(0x00008000UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_EVENT_POINTER_SHIFT
value|(16UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_EVENT_POINTER_MASK
value|(0x03FF0000UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_EVENT_CYCLE_BIT_SHIFT
value|(26UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_EVENT_CYCLE_BIT_MASK
value|(0x04000000UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_ENABLE_SHIFT
value|(30UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_ENABLE_MASK
value|(0x40000000UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_EVENT_ENABLE_SHIFT
value|(31UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_EVENT_ENABLE_MASK
value|(0x80000000UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_GET_RESERVED_MASK
value|(0x38004000UL)
define|#
directive|define
name|SMU_CQGR_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SMU_COMPLETION_QUEUE_GET_##name, value)
define|#
directive|define
name|SMU_CQGR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SMU_COMPLETION_QUEUE_GET_##name)
define|#
directive|define
name|SMU_CQGR_CYCLE_BIT
define|\
value|SMU_CQGR_GEN_BIT(CYCLE_BIT)
define|#
directive|define
name|SMU_CQGR_EVENT_CYCLE_BIT
define|\
value|SMU_CQGR_GEN_BIT(EVENT_CYCLE_BIT)
define|#
directive|define
name|SMU_CQGR_GET_POINTER_SET
parameter_list|(
name|value
parameter_list|)
define|\
value|SMU_CQGR_GEN_VAL(POINTER, value)
comment|//*****************************************************************************
define|#
directive|define
name|SMU_COMPLETION_QUEUE_CONTROL_QUEUE_LIMIT_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_CONTROL_QUEUE_LIMIT_MASK
value|(0x00003FFFUL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_CONTROL_EVENT_LIMIT_SHIFT
value|(16UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_CONTROL_EVENT_LIMIT_MASK
value|(0x03FF0000UL)
define|#
directive|define
name|SMU_COMPLETION_QUEUE_CONTROL_RESERVED_MASK
value|(0xFC00C000UL)
define|#
directive|define
name|SMU_CQC_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SMU_COMPLETION_QUEUE_CONTROL_##name, value)
define|#
directive|define
name|SMU_CQC_QUEUE_LIMIT_SET
parameter_list|(
name|value
parameter_list|)
define|\
value|SMU_CQC_GEN_VAL(QUEUE_LIMIT, value)
define|#
directive|define
name|SMU_CQC_EVENT_LIMIT_SET
parameter_list|(
name|value
parameter_list|)
define|\
value|SMU_CQC_GEN_VAL(EVENT_LIMIT, value)
comment|//*****************************************************************************
define|#
directive|define
name|SMU_DEVICE_CONTEXT_CAPACITY_MAX_TC_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_DEVICE_CONTEXT_CAPACITY_MAX_TC_MASK
value|(0x00000FFFUL)
define|#
directive|define
name|SMU_DEVICE_CONTEXT_CAPACITY_MAX_LP_SHIFT
value|(12UL)
define|#
directive|define
name|SMU_DEVICE_CONTEXT_CAPACITY_MAX_LP_MASK
value|(0x00007000UL)
define|#
directive|define
name|SMU_DEVICE_CONTEXT_CAPACITY_MAX_RNC_SHIFT
value|(15UL)
define|#
directive|define
name|SMU_DEVICE_CONTEXT_CAPACITY_MAX_RNC_MASK
value|(0x07FF8000UL)
define|#
directive|define
name|SMU_DEVICE_CONTEXT_CAPACITY_MAX_PEG_SHIFT
value|(27UL)
define|#
directive|define
name|SMU_DEVICE_CONTEXT_CAPACITY_MAX_PEG_MASK
value|(0x08000000UL)
define|#
directive|define
name|SMU_DEVICE_CONTEXT_CAPACITY_RESERVED_MASK
value|(0xF0000000UL)
define|#
directive|define
name|SMU_DCC_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SMU_DEVICE_CONTEXT_CAPACITY_##name, value)
define|#
directive|define
name|SMU_DCC_GET_MAX_PEG
parameter_list|(
name|value
parameter_list|)
define|\
value|( \          ((U32)((value)& SMU_DEVICE_CONTEXT_CAPACITY_MAX_PEG_MASK)) \>> SMU_DEVICE_CONTEXT_CAPACITY_MAX_LP_SHIFT \    )
define|#
directive|define
name|SMU_DCC_GET_MAX_LP
parameter_list|(
name|value
parameter_list|)
define|\
value|( \          ((U32)((value)& SMU_DEVICE_CONTEXT_CAPACITY_MAX_LP_MASK)) \>> SMU_DEVICE_CONTEXT_CAPACITY_MAX_LP_SHIFT \    )
define|#
directive|define
name|SMU_DCC_GET_MAX_TC
parameter_list|(
name|value
parameter_list|)
define|\
value|( \          ((U32)((value)& SMU_DEVICE_CONTEXT_CAPACITY_MAX_TC_MASK)) \>> SMU_DEVICE_CONTEXT_CAPACITY_MAX_TC_SHIFT \    )
define|#
directive|define
name|SMU_DCC_GET_MAX_RNC
parameter_list|(
name|value
parameter_list|)
define|\
value|( \         ((U32)((value)& SMU_DEVICE_CONTEXT_CAPACITY_MAX_RNC_MASK)) \>> SMU_DEVICE_CONTEXT_CAPACITY_MAX_RNC_SHIFT \    )
comment|//*****************************************************************************
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_IDLE_ENABLE_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_IDLE_ENABLE_MASK
value|(0x00000001UL)
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_XCLK_ENABLE_SHIFT
value|(1UL)
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_XCLK_ENABLE_MASK
value|(0x00000002UL)
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_TXCLK_ENABLE_SHIFT
value|(2UL)
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_TXCLK_ENABLE_MASK
value|(0x00000004UL)
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_REGCLK_ENABLE_SHIFT
value|(3UL)
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_REGCLK_ENABLE_MASK
value|(0x00000008UL)
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_IDLE_TIMEOUT_SHIFT
value|(16UL)
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_IDLE_TIMEOUT_MASK
value|(0x000F0000UL)
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_FORCE_IDLE_SHIFT
value|(31UL)
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_FORCE_IDLE_MASK
value|(0x80000000UL)
define|#
directive|define
name|SMU_CLOCK_GATING_CONTROL_RESERVED_MASK
value|(0x7FF0FFF0UL)
define|#
directive|define
name|SMU_CGUCR_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SMU_CLOCK_GATING_CONTROL_##name, value)
define|#
directive|define
name|SMU_CGUCR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SMU_CLOCK_GATING_CONTROL_##name)
comment|// --------------------------------------------------------------------------
define|#
directive|define
name|SMU_CONTROL_STATUS_TASK_CONTEXT_RANGE_ENABLE_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_CONTROL_STATUS_TASK_CONTEXT_RANGE_ENABLE_MASK
value|(0x00000001UL)
define|#
directive|define
name|SMU_CONTROL_STATUS_COMPLETION_BYTE_SWAP_ENABLE_SHIFT
value|(1UL)
define|#
directive|define
name|SMU_CONTROL_STATUS_COMPLETION_BYTE_SWAP_ENABLE_MASK
value|(0x00000002UL)
define|#
directive|define
name|SMU_CONTROL_STATUS_CONTEXT_RAM_INIT_COMPLETED_SHIFT
value|(16UL)
define|#
directive|define
name|SMU_CONTROL_STATUS_CONTEXT_RAM_INIT_COMPLETED_MASK
value|(0x00010000UL)
define|#
directive|define
name|SMU_CONTROL_STATUS_SCHEDULER_RAM_INIT_COMPLETED_SHIFT
value|(17UL)
define|#
directive|define
name|SMU_CONTROL_STATUS_SCHEDULER_RAM_INIT_COMPLETED_MASK
value|(0x00020000UL)
define|#
directive|define
name|SMU_CONTROL_STATUS_RESERVED_MASK
value|(0xFFFCFFFCUL)
define|#
directive|define
name|SMU_SMUCSR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SMU_CONTROL_STATUS_##name)
define|#
directive|define
name|SMU_SMUCSR_SCHEDULER_RAM_INIT_COMPLETED
define|\
value|(SMU_SMUCSR_GEN_BIT(SCHEDULER_RAM_INIT_COMPLETED))
define|#
directive|define
name|SMU_SMUCSR_CONTEXT_RAM_INIT_COMPLETED
define|\
value|(SMU_SMUCSR_GEN_BIT(CONTEXT_RAM_INIT_COMPLETED))
define|#
directive|define
name|SCU_RAM_INIT_COMPLETED
define|\
value|( \        SMU_SMUCSR_CONTEXT_RAM_INIT_COMPLETED \      | SMU_SMUCSR_SCHEDULER_RAM_INIT_COMPLETED \    )
comment|// --------------------------------------------------------------------------
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG0_PE0_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG0_PE0_MASK
value|(0x00000001UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG0_PE1_SHIFT
value|(1UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG0_PE1_MASK
value|(0x00000002UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG0_PE2_SHIFT
value|(2UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG0_PE2_MASK
value|(0x00000004UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG0_PE3_SHIFT
value|(3UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG0_PE3_MASK
value|(0x00000008UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG1_PE0_SHIFT
value|(8UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG1_PE0_MASK
value|(0x00000100UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG1_PE1_SHIFT
value|(9UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG1_PE1_MASK
value|(0x00000200UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG1_PE2_SHIFT
value|(10UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG1_PE2_MASK
value|(0x00000400UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG1_PE3_SHIFT
value|(11UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG1_PE3_MASK
value|(0x00000800UL)
define|#
directive|define
name|SMU_RESET_PROTOCOL_ENGINE
parameter_list|(
name|peg
parameter_list|,
name|pe
parameter_list|)
define|\
value|((1UL<< (pe))<< ((peg) * 8UL))
define|#
directive|define
name|SMU_RESET_PEG_PROTOCOL_ENGINES
parameter_list|(
name|peg
parameter_list|)
define|\
value|( \         SMU_RESET_PROTOCOL_ENGINE(peg, 0) \       | SMU_RESET_PROTOCOL_ENGINE(peg, 1) \       | SMU_RESET_PROTOCOL_ENGINE(peg, 2) \       | SMU_RESET_PROTOCOL_ENGINE(peg, 3) \     )
define|#
directive|define
name|SMU_RESET_ALL_PROTOCOL_ENGINES
parameter_list|()
define|\
value|( \         SMU_RESET_PEG_PROTOCOL_ENGINES(0) \       | SMU_RESET_PEG_PROTOCOL_ENGINES(1) \     )
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_WIDE_PORT_PEG0_LP0_SHIFT
value|(16UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_WIDE_PORT_PEG0_LP0_MASK
value|(0x00010000UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_WIDE_PORT_PEG0_LP2_SHIFT
value|(17UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_WIDE_PORT_PEG0_LP2_MASK
value|(0x00020000UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_WIDE_PORT_PEG1_LP0_SHIFT
value|(18UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_WIDE_PORT_PEG1_LP0_MASK
value|(0x00040000UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_WIDE_PORT_PEG1_LP2_SHIFT
value|(19UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_WIDE_PORT_PEG1_LP2_MASK
value|(0x00080000UL)
define|#
directive|define
name|SMU_RESET_WIDE_PORT_QUEUE
parameter_list|(
name|peg
parameter_list|,
name|wide_port
parameter_list|)
define|\
value|((1UL<< ((wide_port) / 2))<< ((peg) * 2UL)<< 16UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG0_SHIFT
value|(20UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG0_MASK
value|(0x00100000UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG1_SHIFT
value|(21UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_PEG1_MASK
value|(0x00200000UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_SCU_SHIFT
value|(22UL)
define|#
directive|define
name|SMU_SOFTRESET_CONTROL_RESET_SCU_MASK
value|(0x00400000UL)
comment|// It seems to make sense that if you are going to reset the protocol
comment|// engine group that you would also reset all of the protocol engines
define|#
directive|define
name|SMU_RESET_PROTOCOL_ENGINE_GROUP
parameter_list|(
name|peg
parameter_list|)
define|\
value|( \         (1UL<< ((peg) + 20)) \       | SMU_RESET_WIDE_PORT_QUEUE(peg, 0) \       | SMU_RESET_WIDE_PORT_QUEUE(peg, 1) \       | SMU_RESET_PEG_PROTOCOL_ENGINES(peg) \     )
define|#
directive|define
name|SMU_RESET_ALL_PROTOCOL_ENGINE_GROUPS
parameter_list|()
define|\
value|( \         SMU_RESET_PROTOCOL_ENGINE_GROUP(0) \       | SMU_RESET_PROTOCOL_ENGINE_GROUP(1) \     )
define|#
directive|define
name|SMU_RESET_SCU
parameter_list|()
value|(0xFFFFFFFF)
comment|//*****************************************************************************
define|#
directive|define
name|SMU_TASK_CONTEXT_ASSIGNMENT_STARTING_SHIFT
value|(0UL)
define|#
directive|define
name|SMU_TASK_CONTEXT_ASSIGNMENT_STARTING_MASK
value|(0x00000FFFUL)
define|#
directive|define
name|SMU_TASK_CONTEXT_ASSIGNMENT_ENDING_SHIFT
value|(16UL)
define|#
directive|define
name|SMU_TASK_CONTEXT_ASSIGNMENT_ENDING_MASK
value|(0x0FFF0000UL)
define|#
directive|define
name|SMU_TASK_CONTEXT_ASSIGNMENT_RANGE_CHECK_ENABLE_SHIFT
value|(31UL)
define|#
directive|define
name|SMU_TASK_CONTEXT_ASSIGNMENT_RANGE_CHECK_ENABLE_MASK
value|(0x80000000UL)
define|#
directive|define
name|SMU_TASK_CONTEXT_ASSIGNMENT_RESERVED_MASK
value|(0x7000F000UL)
define|#
directive|define
name|SMU_TCA_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SMU_TASK_CONTEXT_ASSIGNMENT_##name, value)
define|#
directive|define
name|SMU_TCA_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SMU_TASK_CONTEXT_ASSIGNMENT_##name)
comment|//*****************************************************************************
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_CONTROL_QUEUE_SIZE_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_CONTROL_QUEUE_SIZE_MASK
value|(0x00000FFFUL)
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_CONTROL_RESERVED_MASK
value|(0xFFFFF000UL)
define|#
directive|define
name|SCU_UFQC_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SDMA_UNSOLICITED_FRAME_QUEUE_CONTROL_##name, value)
define|#
directive|define
name|SCU_UFQC_QUEUE_SIZE_SET
parameter_list|(
name|value
parameter_list|)
define|\
value|SCU_UFQC_GEN_VAL(QUEUE_SIZE, value)
comment|//*****************************************************************************
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_PUT_POINTER_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_PUT_POINTER_MASK
value|(0x00000FFFUL)
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_PUT_CYCLE_BIT_SHIFT
value|(12UL)
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_PUT_CYCLE_BIT_MASK
value|(0x00001000UL)
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_PUT_RESERVED_MASK
value|(0xFFFFE000UL)
define|#
directive|define
name|SCU_UFQPP_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SDMA_UNSOLICITED_FRAME_QUEUE_PUT_##name, value)
define|#
directive|define
name|SCU_UFQPP_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_SDMA_UNSOLICITED_FRAME_QUEUE_PUT_##name)
comment|//*****************************************************************************
comment|//* SDMA Registers
comment|//*****************************************************************************
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_GET_POINTER_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_GET_POINTER_MASK
value|(0x00000FFFUL)
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_GET_CYCLE_BIT_SHIFT
value|(12UL)
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_GET_CYCLE_BIT_MASK
value|(12UL)
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_GET_ENABLE_BIT_SHIFT
value|(31UL)
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_GET_ENABLE_BIT_MASK
value|(0x80000000UL)
define|#
directive|define
name|SCU_SDMA_UNSOLICITED_FRAME_QUEUE_GET_RESERVED_MASK
value|(0x7FFFE000UL)
define|#
directive|define
name|SCU_UFQGP_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SDMA_UNSOLICITED_FRAME_QUEUE_GET_##name, value)
define|#
directive|define
name|SCU_UFQGP_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_SDMA_UNSOLICITED_FRAME_QUEUE_GET_##name)
define|#
directive|define
name|SCU_UFQGP_CYCLE_BIT
parameter_list|(
name|value
parameter_list|)
define|\
value|SCU_UFQGP_GEN_BIT(CYCLE_BIT, value)
define|#
directive|define
name|SCU_UFQGP_GET_POINTER
parameter_list|(
name|value
parameter_list|)
define|\
value|SCU_UFQGP_GEN_VALUE(POINTER, value)
define|#
directive|define
name|SCU_UFQGP_ENABLE
parameter_list|(
name|value
parameter_list|)
define|\
value|(SCU_UFQGP_GEN_BIT(ENABLE) | value)
define|#
directive|define
name|SCU_UFQGP_DISABLE
parameter_list|(
name|value
parameter_list|)
define|\
value|(~SCU_UFQGP_GEN_BIT(ENABLE)& value)
define|#
directive|define
name|SCU_UFQGP_VALUE
parameter_list|(
name|bit
parameter_list|,
name|value
parameter_list|)
define|\
value|(SCU_UFQGP_CYCLE_BIT(bit) | SCU_UFQGP_GET_POINTER(value))
comment|//*****************************************************************************
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_ADDRESS_MODIFIER_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_ADDRESS_MODIFIER_MASK
value|(0x0000FFFFUL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_PCI_RELAXED_ORDERING_ENABLE_SHIFT
value|(16UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_PCI_RELAXED_ORDERING_ENABLE_MASK
value|(0x00010000UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_PCI_NO_SNOOP_ENABLE_SHIFT
value|(17UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_PCI_NO_SNOOP_ENABLE_MASK
value|(0x00020000UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_BIG_ENDIAN_CONTROL_BYTE_SWAP_SHIFT
value|(18UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_BIG_ENDIAN_CONTROL_BYTE_SWAP_MASK
value|(0x00040000UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_BIG_ENDIAN_CONTROL_XPI_SGL_FETCH_SHIFT
value|(19UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_BIG_ENDIAN_CONTROL_XPI_SGL_FETCH_MASK
value|(0x00080000UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_BIG_ENDIAN_CONTROL_XPI_RX_HEADER_RAM_WRITE_SHIFT
value|(20UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_BIG_ENDIAN_CONTROL_XPI_RX_HEADER_RAM_WRITE_MASK
value|(0x00100000UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_BIG_ENDIAN_CONTROL_XPI_UF_ADDRESS_FETCH_SHIFT
value|(21UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_BIG_ENDIAN_CONTROL_XPI_UF_ADDRESS_FETCH_MASK
value|(0x00200000UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_ADDRESS_MODIFIER_SELECT_SHIFT
value|(22UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_ADDRESS_MODIFIER_SELECT_MASK
value|(0x00400000UL)
define|#
directive|define
name|SCU_PDMA_CONFIGURATION_RESERVED_MASK
value|(0xFF800000UL)
define|#
directive|define
name|SCU_PDMACR_GEN_VALUE
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_PDMA_CONFIGURATION_##name, value)
define|#
directive|define
name|SCU_PDMACR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_PDMA_CONFIGURATION_##name)
define|#
directive|define
name|SCU_PDMACR_BE_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_PCMACR_GEN_BIT(BIG_ENDIAN_CONTROL_##name)
comment|//*****************************************************************************
define|#
directive|define
name|SCU_CDMA_CONFIGURATION_PCI_RELAXED_ORDERING_ENABLE_SHIFT
value|(8UL)
define|#
directive|define
name|SCU_CDMA_CONFIGURATION_PCI_RELAXED_ORDERING_ENABLE_MASK
value|(0x00000100UL)
define|#
directive|define
name|SCU_CDMACR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_CDMA_CONFIGURATION_##name)
comment|//*****************************************************************************
comment|//* SCU Link Layer Registers
comment|//*****************************************************************************
define|#
directive|define
name|SCU_LINK_LAYER_SPEED_NEGOTIATION_TIMER_VALUES_TIMEOUT_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_LINK_LAYER_SPEED_NEGOTIATION_TIMER_VALUES_TIMEOUT_MASK
value|(0x000000FFUL)
define|#
directive|define
name|SCU_LINK_LAYER_SPEED_NEGOTIATION_TIMER_VALUES_LOCK_TIME_SHIFT
value|(8UL)
define|#
directive|define
name|SCU_LINK_LAYER_SPEED_NEGOTIATION_TIMER_VALUES_LOCK_TIME_MASK
value|(0x0000FF00UL)
define|#
directive|define
name|SCU_LINK_LAYER_SPEED_NEGOTIATION_TIMER_VALUES_RATE_CHANGE_DELAY_SHIFT
value|(16UL)
define|#
directive|define
name|SCU_LINK_LAYER_SPEED_NEGOTIATION_TIMER_VALUES_RATE_CHANGE_DELAY_MASK
value|(0x00FF0000UL)
define|#
directive|define
name|SCU_LINK_LAYER_SPEED_NEGOTIATION_TIMER_VALUES_DWORD_SYNC_TIMEOUT_SHIFT
value|(24UL)
define|#
directive|define
name|SCU_LINK_LAYER_SPEED_NEGOTIATION_TIMER_VALUES_DWORD_SYNC_TIMEOUT_MASK
value|(0xFF000000UL)
define|#
directive|define
name|SCU_LINK_LAYER_SPEED_NECGOIATION_TIMER_VALUES_REQUIRED_MASK
value|(0x00000000UL)
define|#
directive|define
name|SCU_LINK_LAYER_SPEED_NECGOIATION_TIMER_VALUES_DEFAULT_MASK
value|(0x7D00676FUL)
define|#
directive|define
name|SCU_LINK_LAYER_SPEED_NECGOIATION_TIMER_VALUES_RESERVED_MASK
value|(0x00FF0000UL)
define|#
directive|define
name|SCU_SAS_SPDTOV_GEN_VALUE
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_LINK_LAYER_SPEED_NEGOTIATION_TIMER_VALUES_##name, value)
define|#
directive|define
name|SCU_LINK_STATUS_DWORD_SYNC_AQUIRED_SHIFT
value|(2UL)
define|#
directive|define
name|SCU_LINK_STATUS_DWORD_SYNC_AQUIRED_MASK
value|(0x00000004UL)
define|#
directive|define
name|SCU_LINK_STATUS_TRANSMIT_PORT_SELECTION_DONE_SHIFT
value|(4UL)
define|#
directive|define
name|SCU_LINK_STATUS_TRANSMIT_PORT_SELECTION_DONE_MASK
value|(0x00000010UL)
define|#
directive|define
name|SCU_LINK_STATUS_RECEIVER_CREDIT_EXHAUSTED_SHIFT
value|(5UL)
define|#
directive|define
name|SCU_LINK_STATUS_RECEIVER_CREDIT_EXHAUSTED_MASK
value|(0x00000020UL)
define|#
directive|define
name|SCU_LINK_STATUS_RESERVED_MASK
value|(0xFFFFFFCDUL)
define|#
directive|define
name|SCU_SAS_LLSTA_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_LINK_STATUS_##name)
comment|// TODO: Where is the SATA_PSELTOV register?
comment|//*****************************************************************************
comment|//* SCU SAS Maximum Arbitration Wait Time Timeout Register
comment|//*****************************************************************************
define|#
directive|define
name|SCU_SAS_MAX_ARBITRATION_WAIT_TIME_TIMEOUT_VALUE_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SAS_MAX_ARBITRATION_WAIT_TIME_TIMEOUT_VALUE_MASK
value|(0x00007FFFUL)
define|#
directive|define
name|SCU_SAS_MAX_ARBITRATION_WAIT_TIME_TIMEOUT_SCALE_SHIFT
value|(15UL)
define|#
directive|define
name|SCU_SAS_MAX_ARBITRATION_WAIT_TIME_TIMEOUT_SCALE_MASK
value|(0x00008000UL)
define|#
directive|define
name|SCU_SAS_MAWTTOV_GEN_VALUE
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SAS_MAX_ARBITRATION_WAIT_TIME_TIMEOUT_##name, value)
define|#
directive|define
name|SCU_SAS_MAWTTOV_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_SAS_MAX_ARBITRATION_WAIT_TIME_TIMEOUT_##name)
comment|// TODO: Where is the SAS_LNKTOV regsiter?
comment|// TODO: Where is the SAS_PHYTOV register?
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_SMP_TARGET_SHIFT
value|(1UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_SMP_TARGET_MASK
value|(0x00000002UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_STP_TARGET_SHIFT
value|(2UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_STP_TARGET_MASK
value|(0x00000004UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_SSP_TARGET_SHIFT
value|(3UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_SSP_TARGET_MASK
value|(0x00000008UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_DA_SATA_HOST_SHIFT
value|(8UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_DA_SATA_HOST_MASK
value|(0x00000100UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_SMP_INITIATOR_SHIFT
value|(9UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_SMP_INITIATOR_MASK
value|(0x00000200UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_STP_INITIATOR_SHIFT
value|(10UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_STP_INITIATOR_MASK
value|(0x00000400UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_SSP_INITIATOR_SHIFT
value|(11UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_SSP_INITIATOR_MASK
value|(0x00000800UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_REASON_CODE_SHIFT
value|(16UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_REASON_CODE_MASK
value|(0x000F0000UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_ADDRESS_FRAME_TYPE_SHIFT
value|(24UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_ADDRESS_FRAME_TYPE_MASK
value|(0x0F000000UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_DEVICE_TYPE_SHIFT
value|(28UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_DEVICE_TYPE_MASK
value|(0x70000000UL)
define|#
directive|define
name|SCU_SAS_TRANSMIT_IDENTIFICATION_RESERVED_MASK
value|(0x80F0F1F1UL)
define|#
directive|define
name|SCU_SAS_TIID_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SAS_TRANSMIT_IDENTIFICATION_##name, value)
define|#
directive|define
name|SCU_SAS_TIID_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_SAS_TRANSMIT_IDENTIFICATION_##name)
comment|// SAS Identify Frame PHY Identifier Register
define|#
directive|define
name|SCU_LINK_LAYER_IDENTIFY_FRAME_PHY_IDENTIFIER_BREAK_REPLY_CAPABLE_SHIFT
value|(16UL)
define|#
directive|define
name|SCU_LINK_LAYER_IDENTIFY_FRAME_PHY_IDENTIFIER_BREAK_REPLY_CAPABLE_MASK
value|(0x00010000UL)
define|#
directive|define
name|SCU_LINK_LAYER_IDENTIFY_FRAME_PHY_IDENTIFIER_REQUESTED_INSIDE_ZPSDS_SHIFT
value|(17UL)
define|#
directive|define
name|SCU_LINK_LAYER_IDENTIFY_FRAME_PHY_IDENTIFIER_REQUESTED_INSIDE_ZPSDS_MASK
value|(0x00020000UL)
define|#
directive|define
name|SCU_LINK_LAYER_IDENTIFY_FRAME_PHY_IDENTIFIER_INSIDE_ZPSDS_PERSISTENT_SHIFT
value|(18UL)
define|#
directive|define
name|SCU_LINK_LAYER_IDENTIFY_FRAME_PHY_IDENTIFIER_INSIDE_ZPSDS_PERSISTENT_MASK
value|(0x00040000UL)
define|#
directive|define
name|SCU_LINK_LAYER_IDENTIFY_FRAME_PHY_IDENTIFIER_ID_SHIFT
value|(24UL)
define|#
directive|define
name|SCU_LINK_LAYER_IDENTIFY_FRAME_PHY_IDENTIFIER_ID_MASK
value|(0xFF000000UL)
define|#
directive|define
name|SCU_LINK_LAYER_IDENTIFY_FRAME_PHY_IDENTIFIER_RESERVED_MASK
value|(0x00F800FFUL)
define|#
directive|define
name|SCU_SAS_TIPID_GEN_VALUE
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_LINK_LAYER_IDENTIFY_FRAME_PHY_IDENTIFIER_##name, value)
define|#
directive|define
name|SCU_SAS_TIPID_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_LINK_LAYER_IDENTIFY_FRAME_PHY_IDENTIFIER_##name)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_TX_PARITY_CHECK_SHIFT
value|(4UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_TX_PARITY_CHECK_MASK
value|(0x00000010UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_TX_BAD_CRC_SHIFT
value|(6UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_TX_BAD_CRC_MASK
value|(0x00000040UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_DISABLE_SCRAMBLER_SHIFT
value|(7UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_DISABLE_SCRAMBLER_MASK
value|(0x00000080UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_DISABLE_DESCRAMBLER_SHIFT
value|(8UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_DISABLE_DESCRAMBLER_MASK
value|(0x00000100UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_DISABLE_CREDIT_INSERTION_SHIFT
value|(9UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_DISABLE_CREDIT_INSERTION_MASK
value|(0x00000200UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_SUSPEND_PROTOCOL_ENGINE_SHIFT
value|(11UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_SUSPEND_PROTOCOL_ENGINE_MASK
value|(0x00000800UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_SATA_SPINUP_HOLD_SHIFT
value|(12UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_SATA_SPINUP_HOLD_MASK
value|(0x00001000UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_TRANSMIT_PORT_SELECTION_SIGNAL_SHIFT
value|(13UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_TRANSMIT_PORT_SELECTION_SIGNAL_MASK
value|(0x00002000UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_HARD_RESET_SHIFT
value|(14UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_HARD_RESET_MASK
value|(0x00004000UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_OOB_ENABLE_SHIFT
value|(15UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_OOB_ENABLE_MASK
value|(0x00008000UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_ENABLE_FRAME_TX_INSERT_ALIGN_SHIFT
value|(23UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_ENABLE_FRAME_TX_INSERT_ALIGN_MASK
value|(0x00800000UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_FORWARD_IDENTIFY_FRAME_SHIFT
value|(27UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_FORWARD_IDENTIFY_FRAME_MASK
value|(0x08000000UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_DISABLE_BYTE_TRANSPOSE_STP_FRAME_SHIFT
value|(28UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_DISABLE_BYTE_TRANSPOSE_STP_FRAME_MASK
value|(0x10000000UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_OOB_RESET_SHIFT
value|(29UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_OOB_RESET_MASK
value|(0x20000000UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_THREE_IAF_ENABLE_SHIFT
value|(30UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_THREE_IAF_ENABLE_MASK
value|(0x40000000UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_OOB_ALIGN0_ENABLE_SHIFT
value|(31UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_OOB_ALIGN0_ENABLE_MASK
value|(0x80000000UL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_REQUIRED_MASK
value|(0x0100000FUL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_DEFAULT_MASK
value|(0x4180100FUL)
define|#
directive|define
name|SCU_SAS_PHY_CONFIGURATION_RESERVED_MASK
value|(0x00000000UL)
define|#
directive|define
name|SCU_SAS_PCFG_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_SAS_PHY_CONFIGURATION_##name)
define|#
directive|define
name|SCU_LINK_LAYER_ALIGN_INSERTION_FREQUENCY_GENERAL_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_LINK_LAYER_ALIGN_INSERTION_FREQUENCY_GENERAL_MASK
value|(0x000007FFUL)
define|#
directive|define
name|SCU_LINK_LAYER_ALIGN_INSERTION_FREQUENCY_CONNECTED_SHIFT
value|(16UL)
define|#
directive|define
name|SCU_LINK_LAYER_ALIGN_INSERTION_FREQUENCY_CONNECTED_MASK
value|(0x00ff0000UL)
define|#
directive|define
name|SCU_ALIGN_INSERTION_FREQUENCY_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_LINK_LAYER_ALIGN_INSERTION_FREQUENCY_##name, value)
define|#
directive|define
name|SCU_LINK_LAYER_ENABLE_SPINUP_CONTROL_COUNT_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_LINK_LAYER_ENABLE_SPINUP_CONTROL_COUNT_MASK
value|(0x0003FFFFUL)
define|#
directive|define
name|SCU_LINK_LAYER_ENABLE_SPINUP_CONTROL_ENABLE_SHIFT
value|(31UL)
define|#
directive|define
name|SCU_LINK_LAYER_ENABLE_SPINUP_CONTROL_ENABLE_MASK
value|(0x80000000UL)
define|#
directive|define
name|SCU_LINK_LAYER_ENABLE_SPINUP_CONTROL_RESERVED_MASK
value|(0x7FFC0000UL)
define|#
directive|define
name|SCU_ENSPINUP_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_LINK_LAYER_ENABLE_SPINUP_CONTROL_##name, value)
define|#
directive|define
name|SCU_ENSPINUP_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_LINK_LAYER_ENABLE_SPINUP_CONTROL_##name)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_TXSSCTYPE_SHIFT
value|(1UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_TXSSCTYPE_MASK
value|(0x00000002UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_RLLRATE_SHIFT
value|(4UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_RLLRATE_MASK
value|(0x000000F0UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_SWO15GBPS_SHIFT
value|(8UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_SWO15GBPS_MASK
value|(0x00000100UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_SW15GBPS_SHIFT
value|(9UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_SW15GBPS_MASK
value|(0x00000201UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_SWO30GBPS_SHIFT
value|(10UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_SWO30GBPS_MASK
value|(0x00000401UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_SW30GBPS_SHIFT
value|(11UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_SW30GBPS_MASK
value|(0x00000801UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_SWO60GBPS_SHIFT
value|(12UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_SWO60GBPS_MASK
value|(0x00001001UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_SW60GBPS_SHIFT
value|(13UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_SW60GBPS_MASK
value|(0x00002001UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_EVEN_PARITY_SHIFT
value|(31UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_EVEN_PARITY_MASK
value|(0x80000000UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_DEFAULT_MASK
value|(0x00003F01UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_REQUIRED_MASK
value|(0x00000001UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_CAPABILITIES_RESERVED_MASK
value|(0x7FFFC00DUL)
define|#
directive|define
name|SCU_SAS_PHYCAP_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_LINK_LAYER_PHY_CAPABILITIES_##name, value)
define|#
directive|define
name|SCU_SAS_PHYCAP_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_LINK_LAYER_PHY_CAPABILITIES_##name)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_SOURCE_ZONE_GROUP_CONTROL_VIRTUAL_EXPANDER_PHY_ZONE_GROUP_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_SOURCE_ZONE_GROUP_CONTROL_VIRTUAL_EXPANDER_PHY_ZONE_GROUP_MASK
value|(0x000000FFUL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_SOURCE_ZONE_GROUP_CONTROL_INSIDE_SOURCE_ZONE_GROUP_SHIFT
value|(31UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_SOURCE_ZONE_GROUP_CONTROL_INSIDE_SOURCE_ZONE_GROUP_MASK
value|(0x80000000UL)
define|#
directive|define
name|SCU_LINK_LAYER_PHY_SOURCE_ZONE_GROUP_CONTROL_RESERVED_MASK
value|(0x7FFFFF00UL)
define|#
directive|define
name|SCU_PSZGCR_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_LINK_LAYER_PHY_SOURCE_ZONE_GROUP_CONTROL_##name, value)
define|#
directive|define
name|SCU_PSZGCR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_LINK_LAYER_PHY_SOURCE_ZONE_GROUP_CONTROL_##name)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZONE0_LOCKED_SHIFT
value|(1UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZONE0_LOCKED_MASK
value|(0x00000002UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZONE0_UPDATING_SHIFT
value|(2UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZONE0_UPDATING_MASK
value|(0x00000004UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZONE1_LOCKED_SHIFT
value|(4UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZONE1_LOCKED_MASK
value|(0x00000010UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZONE1_UPDATING_SHIFT
value|(5UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZONE1_UPDATING_MASK
value|(0x00000020UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZPT_ASSOCIATION_PE0_SHIFT
value|(16UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZPT_ASSOCIATION_PE0_MASK
value|(0x00030000UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_AIP_ENABLE_PE0_SHIFT
value|(19UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_AIP_ENABLE_PE0_MASK
value|(0x00080000UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZPT_ASSOCIATION_PE1_SHIFT
value|(20UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZPT_ASSOCIATION_PE1_MASK
value|(0x00300000UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_AIP_ENABLE_PE1_SHIFT
value|(23UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_AIP_ENABLE_PE1_MASK
value|(0x00800000UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZPT_ASSOCIATION_PE2_SHIFT
value|(24UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZPT_ASSOCIATION_PE2_MASK
value|(0x03000000UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_AIP_ENABLE_PE2_SHIFT
value|(27UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_AIP_ENABLE_PE2_MASK
value|(0x08000000UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZPT_ASSOCIATION_PE3_SHIFT
value|(28UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_ZPT_ASSOCIATION_PE3_MASK
value|(0x30000000UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_AIP_ENABLE_PE3_SHIFT
value|(31UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_AIP_ENABLE_PE3_MASK
value|(0x80000000UL)
define|#
directive|define
name|SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_RESERVED_MASK
value|(0x4444FFC9UL)
define|#
directive|define
name|SCU_PEG_SCUVZECR_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|val
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_##name, val)
define|#
directive|define
name|SCU_PEG_SCUVZECR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_PROTOCOL_ENGINE_GROUP_VIRTUAL_ZONING_EXPANDER_CONTROL_##name)
comment|//*****************************************************************************
comment|//* Port Task Scheduler registers shift and mask values
comment|//*****************************************************************************
define|#
directive|define
name|SCU_PTSG_CONTROL_IT_NEXUS_TIMEOUT_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_PTSG_CONTROL_IT_NEXUS_TIMEOUT_MASK
value|(0x0000FFFFUL)
define|#
directive|define
name|SCU_PTSG_CONTROL_TASK_TIMEOUT_SHIFT
value|(16UL)
define|#
directive|define
name|SCU_PTSG_CONTROL_TASK_TIMEOUT_MASK
value|(0x00FF0000UL)
define|#
directive|define
name|SCU_PTSG_CONTROL_PTSG_ENABLE_SHIFT
value|(24UL)
define|#
directive|define
name|SCU_PTSG_CONTROL_PTSG_ENABLE_MASK
value|(0x01000000UL)
define|#
directive|define
name|SCU_PTSG_CONTROL_ETM_ENABLE_SHIFT
value|(25UL)
define|#
directive|define
name|SCU_PTSG_CONTROL_ETM_ENABLE_MASK
value|(0x02000000UL)
define|#
directive|define
name|SCU_PTSG_CONTROL_DEFAULT_MASK
value|(0x00020002UL)
define|#
directive|define
name|SCU_PTSG_CONTROL_REQUIRED_MASK
value|(0x00000000UL)
define|#
directive|define
name|SCU_PTSG_CONTROL_RESERVED_MASK
value|(0xFC000000UL)
define|#
directive|define
name|SCU_PTSGCR_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|val
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_PTSG_CONTROL_##name, val)
define|#
directive|define
name|SCU_PTSGCR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_PTSG_CONTROL_##name)
comment|//*****************************************************************************
define|#
directive|define
name|SCU_PTSG_REAL_TIME_CLOCK_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_PTSG_REAL_TIME_CLOCK_MASK
value|(0x0000FFFFUL)
define|#
directive|define
name|SCU_PTSG_REAL_TIME_CLOCK_RESERVED_MASK
value|(0xFFFF0000UL)
define|#
directive|define
name|SCU_RTCR_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|val
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_PTSG_##name, val)
define|#
directive|define
name|SCU_PTSG_REAL_TIME_CLOCK_CONTROL_PRESCALER_VALUE_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_PTSG_REAL_TIME_CLOCK_CONTROL_PRESCALER_VALUE_MASK
value|(0x00FFFFFFUL)
define|#
directive|define
name|SCU_PTSG_REAL_TIME_CLOCK_CONTROL_RESERVED_MASK
value|(0xFF000000UL)
define|#
directive|define
name|SCU_RTCCR_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|val
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_PTSG_REAL_TIME_CLOCK_CONTROL_##name, val)
define|#
directive|define
name|SCU_PTSG_PORT_TASK_SCHEDULER_CONTROL_SUSPEND_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_PTSG_PORT_TASK_SCHEDULER_CONTROL_SUSPEND_MASK
value|(0x00000001UL)
define|#
directive|define
name|SCU_PTSG_PORT_TASK_SCHEDULER_CONTROL_ENABLE_SHIFT
value|(1UL)
define|#
directive|define
name|SCU_PTSG_PORT_TASK_SCHEDULER_CONTROL_ENABLE_MASK
value|(0x00000002UL)
define|#
directive|define
name|SCU_PTSG_PORT_TASK_SCHEDULER_CONTROL_RESERVED_MASK
value|(0xFFFFFFFCUL)
define|#
directive|define
name|SCU_PTSxCR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_PTSG_PORT_TASK_SCHEDULER_CONTROL_##name)
define|#
directive|define
name|SCU_PTSG_PORT_TASK_SCHEDULER_STATUS_NEXT_RN_VALID_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_PTSG_PORT_TASK_SCHEDULER_STATUS_NEXT_RN_VALID_MASK
value|(0x00000001UL)
define|#
directive|define
name|SCU_PTSG_PORT_TASK_SCHEDULER_STATUS_ACTIVE_RNSC_LIST_VALID_SHIFT
value|(1UL)
define|#
directive|define
name|SCU_PTSG_PORT_TASK_SCHEDULER_STATUS_ACTIVE_RNSC_LIST_VALID_MASK
value|(0x00000002UL)
define|#
directive|define
name|SCU_PTSG_PORT_TASK_SCHEDULER_STATUS_PTS_SUSPENDED_SHIFT
value|(2UL)
define|#
directive|define
name|SCU_PTSG_PORT_TASK_SCHEDULER_STATUS_PTS_SUSPENDED_MASK
value|(0x00000004UL)
define|#
directive|define
name|SCU_PTSG_PORT_TASK_SCHEDULER_STATUS_RESERVED_MASK
value|(0xFFFFFFF8UL)
define|#
directive|define
name|SCU_PTSxSR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_PTSG_PORT_TASK_SCHEDULER_STATUS_##name)
comment|//*****************************************************************************
comment|//* SGPIO Register shift and mask values
comment|//*****************************************************************************
define|#
directive|define
name|SCU_SGPIO_CONTROL_SGPIO_ENABLE_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SGPIO_CONTROL_SGPIO_ENABLE_MASK
value|(0x00000001UL)
define|#
directive|define
name|SCU_SGPIO_CONTROL_SGPIO_SERIAL_CLOCK_SELECT_SHIFT
value|(1UL)
define|#
directive|define
name|SCU_SGPIO_CONTROL_SGPIO_SERIAL_CLOCK_SELECT_MASK
value|(0x00000002UL)
define|#
directive|define
name|SCU_SGPIO_CONTROL_SGPIO_SERIAL_SHIFT_WIDTH_SELECT_SHIFT
value|(2UL)
define|#
directive|define
name|SCU_SGPIO_CONTROL_SGPIO_SERIAL_SHIFT_WIDTH_SELECT_MASK
value|(0x00000004UL)
define|#
directive|define
name|SCU_SGPIO_CONTROL_SGPIO_TEST_BIT_SHIFT
value|(15UL)
define|#
directive|define
name|SCU_SGPIO_CONTROL_SGPIO_TEST_BIT_MASK
value|(0x00008000UL)
define|#
directive|define
name|SCU_SGPIO_CONTROL_SGPIO_RESERVED_MASK
value|(0xFFFF7FF8UL)
define|#
directive|define
name|SCU_SGICRx_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_SGPIO_CONTROL_SGPIO_##name)
define|#
directive|define
name|SCU_SGPIO_PROGRAMMABLE_BLINK_REGISTER_R0_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SGPIO_PROGRAMMABLE_BLINK_REGISTER_R0_MASK
value|(0x0000000FUL)
define|#
directive|define
name|SCU_SGPIO_PROGRAMMABLE_BLINK_REGISTER_R1_SHIFT
value|(4UL)
define|#
directive|define
name|SCU_SGPIO_PROGRAMMABLE_BLINK_REGISTER_R1_MASK
value|(0x000000F0UL)
define|#
directive|define
name|SCU_SGPIO_PROGRAMMABLE_BLINK_REGISTER_R2_SHIFT
value|(8UL)
define|#
directive|define
name|SCU_SGPIO_PROGRAMMABLE_BLINK_REGISTER_R2_MASK
value|(0x00000F00UL)
define|#
directive|define
name|SCU_SGPIO_PROGRAMMABLE_BLINK_REGISTER_R3_SHIFT
value|(12UL)
define|#
directive|define
name|SCU_SGPIO_PROGRAMMABLE_BLINK_REGISTER_R3_MASK
value|(0x0000F000UL)
define|#
directive|define
name|SCU_SGPIO_PROGRAMMABLE_BLINK_REGISTER_RESERVED_MASK
value|(0xFFFF0000UL)
define|#
directive|define
name|SCU_SGPBRx_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|valueUL
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SGPIO_PROGRAMMABLE_BLINK_REGISTER_##name, value)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_LOWER_R0_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_LOWER_R0_MASK
value|(0x00000003UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_LOWER_R1_SHIFT
value|(4UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_LOWER_R1_MASK
value|(0x00000030UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_LOWER_R2_SHIFT
value|(8UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_LOWER_R2_MASK
value|(0x00000300UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_LOWER_R3_SHIFT
value|(12UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_LOWER_R3_MASK
value|(0x00003000UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_LOWER_RESERVED_MASK
value|(0xFFFF8888UL)
define|#
directive|define
name|SCU_SGSDLRx_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SGPIO_START_DRIVE_LOWER_##name, value)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_UPPER_R0_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_UPPER_R0_MASK
value|(0x00000003UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_UPPER_R1_SHIFT
value|(4UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_UPPER_R1_MASK
value|(0x00000030UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_UPPER_R2_SHIFT
value|(8UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_UPPER_R2_MASK
value|(0x00000300UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_UPPER_R3_SHIFT
value|(12UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_UPPER_R3_MASK
value|(0x00003000UL)
define|#
directive|define
name|SCU_SGPIO_START_DRIVE_UPPER_RESERVED_MASK
value|(0xFFFF8888UL)
define|#
directive|define
name|SCU_SGSDURx_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SGPIO_START_DRIVE_LOWER_##name, value)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_LOWER_D0_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_LOWER_D0_MASK
value|(0x00000003UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_LOWER_D1_SHIFT
value|(4UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_LOWER_D1_MASK
value|(0x00000030UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_LOWER_D2_SHIFT
value|(8UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_LOWER_D2_MASK
value|(0x00000300UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_LOWER_D3_SHIFT
value|(12UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_LOWER_D3_MASK
value|(0x00003000UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_LOWER_RESERVED_MASK
value|(0xFFFF8888UL)
define|#
directive|define
name|SCU_SGSIDLRx_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|valueUL
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SGPIO_SERIAL_INPUT_DATA_LOWER_##name, value)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_UPPER_D0_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_UPPER_D0_MASK
value|(0x00000003UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_UPPER_D1_SHIFT
value|(4UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_UPPER_D1_MASK
value|(0x00000030UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_UPPER_D2_SHIFT
value|(8UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_UPPER_D2_MASK
value|(0x00000300UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_UPPER_D3_SHIFT
value|(12UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_UPPER_D3_MASK
value|(0x00003000UL)
define|#
directive|define
name|SCU_SGPIO_SERIAL_INPUT_DATA_UPPER_RESERVED_MASK
value|(0xFFFF8888UL)
define|#
directive|define
name|SCU_SGSIDURx_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SGPIO_SERIAL_INPUT_DATA_LOWER_##name, value)
define|#
directive|define
name|SCU_SGPIO_VENDOR_SPECIFIC_CODE_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SGPIO_VENDOR_SPECIFIC_CODE_MASK
value|(0x0000000FUL)
define|#
directive|define
name|SCU_SGPIO_VENDOR_SPECIFIC_CODE_RESERVED_MASK
value|(0xFFFFFFF0UL)
define|#
directive|define
name|SCU_SGVSCR_GEN_VAL
parameter_list|(
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SGPIO_VENDOR_SPECIFIC_CODE##name, value)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_INPUT_DATA0_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_INPUT_DATA0_MASK
value|(0x00000003UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_INVERT_INPUT_DATA0_SHIFT
value|(2UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_INVERT_INPUT_DATA0_MASK
value|(0x00000004UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_JOG_ENABLE_DATA0_SHIFT
value|(3UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_JOG_ENABLE_DATA0_MASK
value|(0x00000008UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_INPUT_DATA1_SHIFT
value|(4UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_INPUT_DATA1_MASK
value|(0x00000030UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_INVERT_INPUT_DATA1_SHIFT
value|(6UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_INVERT_INPUT_DATA1_MASK
value|(0x00000040UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_JOG_ENABLE_DATA1_SHIFT
value|(7UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_JOG_ENABLE_DATA1_MASK
value|(0x00000080UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_INPUT_DATA2_SHIFT
value|(8UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_INPUT_DATA2_MASK
value|(0x00000300UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_INVERT_INPUT_DATA2_SHIFT
value|(10UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_INVERT_INPUT_DATA2_MASK
value|(0x00000400UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_JOG_ENABLE_DATA2_SHIFT
value|(11UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_JOG_ENABLE_DATA2_MASK
value|(0x00000800UL)
define|#
directive|define
name|SCU_SGPIO_OUPUT_DATA_SELECT_RESERVED_MASK
value|(0xFFFFF000UL)
define|#
directive|define
name|SCU_SGODSR_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SGPIO_OUPUT_DATA_SELECT_##name, value)
define|#
directive|define
name|SCU_SGODSR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_SGPIO_OUPUT_DATA_SELECT_##name)
ifdef|#
directive|ifdef
name|ARLINGTON_BUILD
typedef|typedef
name|char
name|LEX_REGISTERS_T
typedef|;
endif|#
directive|endif
comment|//*****************************************************************************
comment|//* SMU Registers
comment|//*****************************************************************************
comment|// ----------------------------------------------------------------------------
comment|// SMU Registers
comment|// These registers are based off of BAR0
comment|//
comment|// To calculate the offset for other functions use
comment|//       BAR0 + FN# * SystemPageSize * 2
comment|//
comment|// The TCA is only accessable from FN#0 (Physical Function) and each
comment|// is programmed by (BAR0 + SCU_SMU_TCA_OFFSET + (FN# * 0x04)) or
comment|//    TCA0 for FN#0 is at BAR0 + 0x0400
comment|//    TCA1 for FN#1 is at BAR0 + 0x0404
comment|//    etc.
comment|// ----------------------------------------------------------------------------
comment|// Accessable to all FN#s
define|#
directive|define
name|SCU_SMU_PCP_OFFSET
value|0x0000
define|#
directive|define
name|SCU_SMU_AMR_OFFSET
value|0x0004
define|#
directive|define
name|SCU_SMU_ISR_OFFSET
value|0x0010
define|#
directive|define
name|SCU_SMU_IMR_OFFSET
value|0x0014
define|#
directive|define
name|SCU_SMU_ICC_OFFSET
value|0x0018
define|#
directive|define
name|SCU_SMU_HTTLBAR_OFFSET
value|0x0020
define|#
directive|define
name|SCU_SMU_HTTUBAR_OFFSET
value|0x0024
define|#
directive|define
name|SCU_SMU_TCR_OFFSET
value|0x0028
define|#
directive|define
name|SCU_SMU_CQLBAR_OFFSET
value|0x0030
define|#
directive|define
name|SCU_SMU_CQUBAR_OFFSET
value|0x0034
define|#
directive|define
name|SCU_SMU_CQPR_OFFSET
value|0x0040
define|#
directive|define
name|SCU_SMU_CQGR_OFFSET
value|0x0044
define|#
directive|define
name|SCU_SMU_CQC_OFFSET
value|0x0048
comment|// Accessable to FN#0 only
define|#
directive|define
name|SCU_SMU_RNCLBAR_OFFSET
value|0x0080
define|#
directive|define
name|SCU_SMU_RNCUBAR_OFFSET
value|0x0084
define|#
directive|define
name|SCU_SMU_DCC_OFFSET
value|0x0090
define|#
directive|define
name|SCU_SMU_DFC_OFFSET
value|0x0094
define|#
directive|define
name|SCU_SMU_SMUCSR_OFFSET
value|0x0098
define|#
directive|define
name|SCU_SMU_SCUSRCR_OFFSET
value|0x009C
define|#
directive|define
name|SCU_SMU_SMAW_OFFSET
value|0x00A0
define|#
directive|define
name|SCU_SMU_SMDW_OFFSET
value|0x00A4
comment|// Accessable to FN#0 only
define|#
directive|define
name|SCU_SMU_TCA_OFFSET
value|0x0400
comment|// Accessable to all FN#s
define|#
directive|define
name|SCU_SMU_MT_MLAR0_OFFSET
value|0x2000
define|#
directive|define
name|SCU_SMU_MT_MUAR0_OFFSET
value|0x2004
define|#
directive|define
name|SCU_SMU_MT_MDR0_OFFSET
value|0x2008
define|#
directive|define
name|SCU_SMU_MT_VCR0_OFFSET
value|0x200C
define|#
directive|define
name|SCU_SMU_MT_MLAR1_OFFSET
value|0x2010
define|#
directive|define
name|SCU_SMU_MT_MUAR1_OFFSET
value|0x2014
define|#
directive|define
name|SCU_SMU_MT_MDR1_OFFSET
value|0x2018
define|#
directive|define
name|SCU_SMU_MT_VCR1_OFFSET
value|0x201C
define|#
directive|define
name|SCU_SMU_MPBA_OFFSET
value|0x3000
comment|/**  * @struct SMU_REGISTERS  *  * @brief These are the SMU registers  *        See SCU SMU Specification on how this register space is used.  */
typedef|typedef
struct|struct
name|SMU_REGISTERS
block|{
comment|// 0x0000 PCP
name|U32
name|post_context_port
decl_stmt|;
comment|// 0x0004 AMR
name|U32
name|address_modifier
decl_stmt|;
name|U32
name|reserved_08
decl_stmt|;
name|U32
name|reserved_0C
decl_stmt|;
comment|// 0x0010 ISR
name|U32
name|interrupt_status
decl_stmt|;
comment|// 0x0014 IMR
name|U32
name|interrupt_mask
decl_stmt|;
comment|// 0x0018 ICC
name|U32
name|interrupt_coalesce_control
decl_stmt|;
name|U32
name|reserved_1C
decl_stmt|;
comment|// 0x0020 HTTLBAR
name|U32
name|host_task_table_lower
decl_stmt|;
comment|// 0x0024 HTTUBAR
name|U32
name|host_task_table_upper
decl_stmt|;
comment|// 0x0028 TCR
name|U32
name|task_context_range
decl_stmt|;
name|U32
name|reserved_2C
decl_stmt|;
comment|// 0x0030 CQLBAR
name|U32
name|completion_queue_lower
decl_stmt|;
comment|// 0x0034 CQUBAR
name|U32
name|completion_queue_upper
decl_stmt|;
name|U32
name|reserved_38
decl_stmt|;
name|U32
name|reserved_3C
decl_stmt|;
comment|// 0x0040 CQPR
name|U32
name|completion_queue_put
decl_stmt|;
comment|// 0x0044 CQGR
name|U32
name|completion_queue_get
decl_stmt|;
comment|// 0x0048 CQC
name|U32
name|completion_queue_control
decl_stmt|;
name|U32
name|reserved_4C
decl_stmt|;
name|U32
name|reserved_5x
index|[
literal|4
index|]
decl_stmt|;
name|U32
name|reserved_6x
index|[
literal|4
index|]
decl_stmt|;
name|U32
name|reserved_7x
index|[
literal|4
index|]
decl_stmt|;
comment|// Accessable to FN#0 only
comment|// 0x0080 RNCLBAR
name|U32
name|remote_node_context_lower
decl_stmt|;
comment|// 0x0084 RNCUBAR
name|U32
name|remote_node_context_upper
decl_stmt|;
name|U32
name|reserved_88
decl_stmt|;
name|U32
name|reserved_8C
decl_stmt|;
comment|// 0x0090 DCC
name|U32
name|device_context_capacity
decl_stmt|;
comment|// 0x0094 DFC
name|U32
name|device_function_capacity
decl_stmt|;
comment|// 0x0098 SMUCSR
name|U32
name|control_status
decl_stmt|;
comment|// 0x009C SCUSRCR
name|U32
name|soft_reset_control
decl_stmt|;
comment|// 0x00A0 SMAW
name|U32
name|mmr_address_window
decl_stmt|;
comment|// 0x00A4 SMDW
name|U32
name|mmr_data_window
decl_stmt|;
comment|// 0x00A8 CGUCR
name|U32
name|clock_gating_control
decl_stmt|;
comment|// 0x00AC CGUPC
name|U32
name|clock_gating_performance
decl_stmt|;
comment|// A whole bunch of reserved space
name|U32
name|reserved_Bx
index|[
literal|4
index|]
decl_stmt|;
name|U32
name|reserved_Cx
index|[
literal|4
index|]
decl_stmt|;
name|U32
name|reserved_Dx
index|[
literal|4
index|]
decl_stmt|;
name|U32
name|reserved_Ex
index|[
literal|4
index|]
decl_stmt|;
name|U32
name|reserved_Fx
index|[
literal|4
index|]
decl_stmt|;
name|U32
name|reserved_1xx
index|[
literal|64
index|]
decl_stmt|;
name|U32
name|reserved_2xx
index|[
literal|64
index|]
decl_stmt|;
name|U32
name|reserved_3xx
index|[
literal|64
index|]
decl_stmt|;
comment|// Accessable to FN#0 only
comment|// 0x0400 TCA
name|U32
name|task_context_assignment
index|[
literal|256
index|]
decl_stmt|;
comment|// MSI-X registers not included
block|}
name|SMU_REGISTERS_T
typedef|;
comment|//*****************************************************************************
comment|// SDMA Registers
comment|//*****************************************************************************
define|#
directive|define
name|SCU_SDMA_BASE
value|0x6000
define|#
directive|define
name|SCU_SDMA_PUFATLHAR_OFFSET
value|0x0000
define|#
directive|define
name|SCU_SDMA_PUFATUHAR_OFFSET
value|0x0004
define|#
directive|define
name|SCU_SDMA_UFLHBAR_OFFSET
value|0x0008
define|#
directive|define
name|SCU_SDMA_UFUHBAR_OFFSET
value|0x000C
define|#
directive|define
name|SCU_SDMA_UFQC_OFFSET
value|0x0010
define|#
directive|define
name|SCU_SDMA_UFQPP_OFFSET
value|0x0014
define|#
directive|define
name|SCU_SDMA_UFQGP_OFFSET
value|0x0018
define|#
directive|define
name|SCU_SDMA_PDMACR_OFFSET
value|0x001C
define|#
directive|define
name|SCU_SDMA_CDMACR_OFFSET
value|0x0080
comment|/**  * @struct SCU_SDMA_REGISTERS  *  * @brief These are the SCU SDMA Registers  *        See SCU SDMA specification on how these registers are used.  */
typedef|typedef
struct|struct
name|SCU_SDMA_REGISTERS
block|{
comment|// 0x0000 PUFATLHAR
name|U32
name|uf_address_table_lower
decl_stmt|;
comment|// 0x0004 PUFATUHAR
name|U32
name|uf_address_table_upper
decl_stmt|;
comment|// 0x0008 UFLHBAR
name|U32
name|uf_header_base_address_lower
decl_stmt|;
comment|// 0x000C UFUHBAR
name|U32
name|uf_header_base_address_upper
decl_stmt|;
comment|// 0x0010 UFQC
name|U32
name|unsolicited_frame_queue_control
decl_stmt|;
comment|// 0x0014 UFQPP
name|U32
name|unsolicited_frame_put_pointer
decl_stmt|;
comment|// 0x0018 UFQGP
name|U32
name|unsolicited_frame_get_pointer
decl_stmt|;
comment|// 0x001C PDMACR
name|U32
name|pdma_configuration
decl_stmt|;
comment|// Reserved until offset 0x80
name|U32
name|reserved_0020_007C
index|[
literal|0x18
index|]
decl_stmt|;
comment|// 0x0080 CDMACR
name|U32
name|cdma_configuration
decl_stmt|;
comment|// Remainder SDMA register space
name|U32
name|reserved_0084_0400
index|[
literal|0xDF
index|]
decl_stmt|;
block|}
name|SCU_SDMA_REGISTERS_T
typedef|;
comment|//*****************************************************************************
comment|//* SCU Link Registers
comment|//*****************************************************************************
define|#
directive|define
name|SCU_PEG0_OFFSET
value|0x0000
define|#
directive|define
name|SCU_PEG1_OFFSET
value|0x8000
define|#
directive|define
name|SCU_TL0_OFFSET
value|0x0000
define|#
directive|define
name|SCU_TL1_OFFSET
value|0x0400
define|#
directive|define
name|SCU_TL2_OFFSET
value|0x0800
define|#
directive|define
name|SCU_TL3_OFFSET
value|0x0C00
define|#
directive|define
name|SCU_LL_OFFSET
value|0x0080
define|#
directive|define
name|SCU_LL0_OFFSET
value|(SCU_TL0_OFFSET + SCU_LL_OFFSET)
define|#
directive|define
name|SCU_LL1_OFFSET
value|(SCU_TL1_OFFSET + SCU_LL_OFFSET)
define|#
directive|define
name|SCU_LL2_OFFSET
value|(SCU_TL2_OFFSET + SCU_LL_OFFSET)
define|#
directive|define
name|SCU_LL3_OFFSET
value|(SCU_TL3_OFFSET + SCU_LL_OFFSET)
comment|// Transport Layer Offsets (PEG + TL)
define|#
directive|define
name|SCU_TLCR_OFFSET
value|0x0000
define|#
directive|define
name|SCU_TLADTR_OFFSET
value|0x0004
define|#
directive|define
name|SCU_TLTTMR_OFFSET
value|0x0008
define|#
directive|define
name|SCU_TLEECR0_OFFSET
value|0x000C
define|#
directive|define
name|SCU_STPTLDARNI_OFFSET
value|0x0010
define|#
directive|define
name|SCU_TLCR_HASH_SAS_CHECKING_ENABLE_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_TLCR_HASH_SAS_CHECKING_ENABLE_MASK
value|(0x00000001UL)
define|#
directive|define
name|SCU_TLCR_CLEAR_TCI_NCQ_MAPPING_TABLE_SHIFT
value|(1UL)
define|#
directive|define
name|SCU_TLCR_CLEAR_TCI_NCQ_MAPPING_TABLE_MASK
value|(0x00000002UL)
define|#
directive|define
name|SCU_TLCR_STP_WRITE_DATA_PREFETCH_SHIFT
value|(3UL)
define|#
directive|define
name|SCU_TLCR_STP_WRITE_DATA_PREFETCH_MASK
value|(0x00000008UL)
define|#
directive|define
name|SCU_TLCR_CMD_NAK_STATUS_CODE_SHIFT
value|(4UL)
define|#
directive|define
name|SCU_TLCR_CMD_NAK_STATUS_CODE_MASK
value|(0x00000010UL)
define|#
directive|define
name|SCU_TLCR_RESERVED_MASK
value|(0xFFFFFFEBUL)
define|#
directive|define
name|SCU_TLCR_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_TLCR_##name)
comment|/**  * @struct SCU_TRANSPORT_LAYER_REGISTERS  *  * @brief These are the SCU Transport Layer registers see SSPTL spec for how  *        they are used.  */
typedef|typedef
struct|struct
name|SCU_TRANSPORT_LAYER_REGISTERS
block|{
comment|// 0x0000 TLCR
name|U32
name|control
decl_stmt|;
comment|// 0x0004 TLADTR
name|U32
name|arbitration_delay_timer
decl_stmt|;
comment|// 0x0008 TLTTMR
name|U32
name|timer_test_mode
decl_stmt|;
comment|// 0x000C reserved
name|U32
name|reserved_0C
decl_stmt|;
comment|// 0x0010 STPTLDARNI
name|U32
name|stp_rni
decl_stmt|;
comment|// 0x0014 TLFEWPORCTRL
name|U32
name|tlfe_wpo_read_control
decl_stmt|;
comment|// 0x0018 TLFEWPORDATA
name|U32
name|tlfe_wpo_read_data
decl_stmt|;
comment|// 0x001C RXTLSSCSR1
name|U32
name|rxtl_single_step_control_status_1
decl_stmt|;
comment|// 0x0020 RXTLSSCSR2
name|U32
name|rxtl_single_step_control_status_2
decl_stmt|;
comment|// 0x0024 AWTRDDCR
name|U32
name|tlfe_awt_retry_delay_debug_control
decl_stmt|;
comment|// Remainder of TL memory space
name|U32
name|reserved_0028_007F
index|[
literal|0x16
index|]
decl_stmt|;
block|}
name|SCU_TRANSPORT_LAYER_REGISTERS_T
typedef|;
comment|// Protocol Engine Group Registers
define|#
directive|define
name|SCU_SCUVZECRx_OFFSET
value|0x1080
comment|// Link Layer Offsets (PEG + TL + LL)
define|#
directive|define
name|SCU_SAS_SPDTOV_OFFSET
value|0x0000
define|#
directive|define
name|SCU_SAS_LLSTA_OFFSET
value|0x0004
define|#
directive|define
name|SCU_SATA_PSELTOV_OFFSET
value|0x0008
define|#
directive|define
name|SCU_SAS_TIMETOV_OFFSET
value|0x0010
define|#
directive|define
name|SCU_SAS_LOSTOT_OFFSET
value|0x0014
define|#
directive|define
name|SCU_SAS_LNKTOV_OFFSET
value|0x0018
define|#
directive|define
name|SCU_SAS_PHYTOV_OFFSET
value|0x001C
define|#
directive|define
name|SCU_SAS_AFERCNT_OFFSET
value|0x0020
define|#
directive|define
name|SCU_SAS_WERCNT_OFFSET
value|0x0024
define|#
directive|define
name|SCU_SAS_TIID_OFFSET
value|0x0028
define|#
directive|define
name|SCU_SAS_TIDNH_OFFSET
value|0x002C
define|#
directive|define
name|SCU_SAS_TIDNL_OFFSET
value|0x0030
define|#
directive|define
name|SCU_SAS_TISSAH_OFFSET
value|0x0034
define|#
directive|define
name|SCU_SAS_TISSAL_OFFSET
value|0x0038
define|#
directive|define
name|SCU_SAS_TIPID_OFFSET
value|0x003C
define|#
directive|define
name|SCU_SAS_TIRES2_OFFSET
value|0x0040
define|#
directive|define
name|SCU_SAS_ADRSTA_OFFSET
value|0x0044
define|#
directive|define
name|SCU_SAS_MAWTTOV_OFFSET
value|0x0048
define|#
directive|define
name|SCU_SAS_ECENCR_OFFSET
value|0x0050
define|#
directive|define
name|SCU_SAS_FRPLDFIL_OFFSET
value|0x0054
define|#
directive|define
name|SCU_SAS_RFCNT_OFFSET
value|0x0060
define|#
directive|define
name|SCU_SAS_TFCNT_OFFSET
value|0x0064
define|#
directive|define
name|SCU_SAS_RFDCNT_OFFSET
value|0x0068
define|#
directive|define
name|SCU_SAS_TFDCNT_OFFSET
value|0x006C
define|#
directive|define
name|SCU_SAS_LERCNT_OFFSET
value|0x0070
define|#
directive|define
name|SCU_SAS_RDISERRCNT_OFFSET
value|0x0074
define|#
directive|define
name|SCU_SAS_CRERCNT_OFFSET
value|0x0078
define|#
directive|define
name|SCU_STPCTL_OFFSET
value|0x007C
define|#
directive|define
name|SCU_SAS_PCFG_OFFSET
value|0x0080
define|#
directive|define
name|SCU_SAS_CLKSM_OFFSET
value|0x0084
define|#
directive|define
name|SCU_SAS_TXCOMWAKE_OFFSET
value|0x0088
define|#
directive|define
name|SCU_SAS_TXCOMINIT_OFFSET
value|0x008C
define|#
directive|define
name|SCU_SAS_TXCOMSAS_OFFSET
value|0x0090
define|#
directive|define
name|SCU_SAS_COMINIT_OFFSET
value|0x0094
define|#
directive|define
name|SCU_SAS_COMWAKE_OFFSET
value|0x0098
define|#
directive|define
name|SCU_SAS_COMSAS_OFFSET
value|0x009C
define|#
directive|define
name|SCU_SAS_SFERCNT_OFFSET
value|0x00A0
define|#
directive|define
name|SCU_SAS_CDFERCNT_OFFSET
value|0x00A4
define|#
directive|define
name|SCU_SAS_DNFERCNT_OFFSET
value|0x00A8
define|#
directive|define
name|SCU_SAS_PRSTERCNT_OFFSET
value|0x00AC
define|#
directive|define
name|SCU_SAS_CNTCTL_OFFSET
value|0x00B0
define|#
directive|define
name|SCU_SAS_SSPTOV_OFFSET
value|0x00B4
define|#
directive|define
name|SCU_FTCTL_OFFSET
value|0x00B8
define|#
directive|define
name|SCU_FRCTL_OFFSET
value|0x00BC
define|#
directive|define
name|SCU_FTWMRK_OFFSET
value|0x00C0
define|#
directive|define
name|SCU_ENSPINUP_OFFSET
value|0x00C4
define|#
directive|define
name|SCU_SAS_TRNTOV_OFFSET
value|0x00C8
define|#
directive|define
name|SCU_SAS_PHYCAP_OFFSET
value|0x00CC
define|#
directive|define
name|SCU_SAS_PHYCTL_OFFSET
value|0x00D0
define|#
directive|define
name|SCU_SAS_LLCTL_OFFSET
value|0x00D8
define|#
directive|define
name|SCU_AFE_XCVRCR_OFFSET
value|0x00DC
define|#
directive|define
name|SCU_AFE_LUTCR_OFFSET
value|0x00E0
define|#
directive|define
name|SCU_SAS_PHY_TIMER_TIMEOUT_VALUES_ALIGN_DETECTION_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SAS_PHY_TIMER_TIMEOUT_VALUES_ALIGN_DETECTION_MASK
value|(0x000000FFUL)
define|#
directive|define
name|SCU_SAS_PHY_TIMER_TIMEOUT_VALUES_HOT_PLUG_SHIFT
value|(8UL)
define|#
directive|define
name|SCU_SAS_PHY_TIMER_TIMEOUT_VALUES_HOT_PLUG_MASK
value|(0x0000FF00UL)
define|#
directive|define
name|SCU_SAS_PHY_TIMER_TIMEOUT_VALUES_COMSAS_DETECTION_SHIFT
value|(16UL)
define|#
directive|define
name|SCU_SAS_PHY_TIMER_TIMEOUT_VALUES_COMSAS_DETECTION_MASK
value|(0x00FF0000UL)
define|#
directive|define
name|SCU_SAS_PHY_TIMER_TIMEOUT_VALUES_RATE_CHANGE_SHIFT
value|(24UL)
define|#
directive|define
name|SCU_SAS_PHY_TIMER_TIMEOUT_VALUES_RATE_CHANGE_MASK
value|(0xFF000000UL)
define|#
directive|define
name|SCU_SAS_PHYTOV_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SAS_PHY_TIMER_TIMEOUT_VALUES_##name, value)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_MAX_LINK_RATE_SHIFT
value|(0UL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_MAX_LINK_RATE_MASK
value|(0x00000003UL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_MAX_LINK_RATE_GEN1
value|(0UL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_MAX_LINK_RATE_GEN2
value|(1UL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_MAX_LINK_RATE_GEN3
value|(2UL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_BROADCAST_PRIMITIVE_SHIFT
value|(2UL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_BROADCAST_PRIMITIVE_MASK
value|(0x000003FCUL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_CLOSE_NO_ACTIVE_TASK_DISABLE_SHIFT
value|(16UL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_CLOSE_NO_ACTIVE_TASK_DISABLE_MASK
value|(0x00010000UL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_CLOSE_NO_OUTBOUND_TASK_DISABLE_SHIFT
value|(17UL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_CLOSE_NO_OUTBOUND_TASK_DISABLE_MASK
value|(0x00020000UL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_NO_OUTBOUND_TASK_TIMEOUT_SHIFT
value|(24UL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_NO_OUTBOUND_TASK_TIMEOUT_MASK
value|(0xFF000000UL)
define|#
directive|define
name|SCU_SAS_LINK_LAYER_CONTROL_RESERVED
value|(0x00FCFC00UL)
define|#
directive|define
name|SCU_SAS_LLCTL_GEN_VAL
parameter_list|(
name|name
parameter_list|,
name|value
parameter_list|)
define|\
value|SCU_GEN_VALUE(SCU_SAS_LINK_LAYER_CONTROL_##name, value)
define|#
directive|define
name|SCU_SAS_LLCTL_GEN_BIT
parameter_list|(
name|name
parameter_list|)
define|\
value|SCU_GEN_BIT(SCU_SAS_LINK_LAYER_CONTROL_##name)
comment|//#define SCU_FRXHECR_DCNT_OFFSET      0x00B0
define|#
directive|define
name|SCU_PSZGCR_OFFSET
value|0x00E4
define|#
directive|define
name|SCU_SAS_RECPHYCAP_OFFSET
value|0x00E8
comment|//#define SCU_TX_LUTSEL_OFFSET         0x00B8
define|#
directive|define
name|SCU_SAS_PTxC_OFFSET
value|0x00D4
comment|// Same offset as SAS_TCTSTM
comment|// This macro define the DWORD SYNC ACQUIRED bit in link layer status register.
define|#
directive|define
name|SCU_SAS_LLSTA_DWORD_SYNCA_BIT
value|0x4
comment|/**  * @struct SCU_LINK_LAYER_REGISTERS  *  * @brief SCU Link Layer Registers  *        See the SCU SSLL Specification on how these registers are used.  */
typedef|typedef
struct|struct
name|SCU_LINK_LAYER_REGISTERS
block|{
comment|// 0x0000 SAS_SPDTOV
name|U32
name|speed_negotiation_timers
decl_stmt|;
comment|// 0x0004 SAS_LLSTA
name|U32
name|link_layer_status
decl_stmt|;
comment|// 0x0008 SATA_PSELTOV
name|U32
name|port_selector_timeout
decl_stmt|;
name|U32
name|reserved0C
decl_stmt|;
comment|// 0x0010 SAS_TIMETOV
name|U32
name|timeout_unit_value
decl_stmt|;
comment|// 0x0014 SAS_RCDTOV
name|U32
name|rcd_timeout
decl_stmt|;
comment|// 0x0018 SAS_LNKTOV
name|U32
name|link_timer_timeouts
decl_stmt|;
comment|// 0x001C SAS_PHYTOV
name|U32
name|phy_timer_timeout_values
decl_stmt|;
comment|// 0x0020 SAS_AFERCNT
name|U32
name|received_address_frame_error_counter
decl_stmt|;
comment|// 0x0024 SAS_WERCNT
name|U32
name|invalid_dword_counter
decl_stmt|;
comment|// 0x0028 SAS_TIID
name|U32
name|transmit_identification
decl_stmt|;
comment|// 0x002C SAS_TIDNH
name|U32
name|sas_device_name_high
decl_stmt|;
comment|// 0x0030 SAS_TIDNL
name|U32
name|sas_device_name_low
decl_stmt|;
comment|// 0x0034 SAS_TISSAH
name|U32
name|source_sas_address_high
decl_stmt|;
comment|// 0x0038 SAS_TISSAL
name|U32
name|source_sas_address_low
decl_stmt|;
comment|// 0x003C SAS_TIPID
name|U32
name|identify_frame_phy_id
decl_stmt|;
comment|// 0x0040 SAS_TIRES2
name|U32
name|identify_frame_reserved
decl_stmt|;
comment|// 0x0044 SAS_ADRSTA
name|U32
name|received_address_frame
decl_stmt|;
comment|// 0x0048 SAS_MAWTTOV
name|U32
name|maximum_arbitration_wait_timer_timeout
decl_stmt|;
comment|// 0x004C SAS_PTxC
name|U32
name|transmit_primitive
decl_stmt|;
comment|// 0x0050 SAS_ECENCR
name|U32
name|error_counter_event_notification_control
decl_stmt|;
comment|// 0x0054 SAS_FRPLDFIL
name|U32
name|frxq_payload_fill_threshold
decl_stmt|;
comment|// 0x0058 SAS_LLHANG_TOT
name|U32
name|link_layer_hang_detection_timeout
decl_stmt|;
name|U32
name|reserved_5C
decl_stmt|;
comment|// 0x0060 SAS_RFCNT
name|U32
name|received_frame_count
decl_stmt|;
comment|// 0x0064 SAS_TFCNT
name|U32
name|transmit_frame_count
decl_stmt|;
comment|// 0x0068 SAS_RFDCNT
name|U32
name|received_dword_count
decl_stmt|;
comment|// 0x006C SAS_TFDCNT
name|U32
name|transmit_dword_count
decl_stmt|;
comment|// 0x0070 SAS_LERCNT
name|U32
name|loss_of_sync_error_count
decl_stmt|;
comment|// 0x0074 SAS_RDISERRCNT
name|U32
name|running_disparity_error_count
decl_stmt|;
comment|// 0x0078 SAS_CRERCNT
name|U32
name|received_frame_crc_error_count
decl_stmt|;
comment|// 0x007C STPCTL
name|U32
name|stp_control
decl_stmt|;
comment|// 0x0080 SAS_PCFG
name|U32
name|phy_configuration
decl_stmt|;
comment|// 0x0084 SAS_CLKSM
name|U32
name|clock_skew_management
decl_stmt|;
comment|// 0x0088 SAS_TXCOMWAKE
name|U32
name|transmit_comwake_signal
decl_stmt|;
comment|// 0x008C SAS_TXCOMINIT
name|U32
name|transmit_cominit_signal
decl_stmt|;
comment|// 0x0090 SAS_TXCOMSAS
name|U32
name|transmit_comsas_signal
decl_stmt|;
comment|// 0x0094 SAS_COMINIT
name|U32
name|cominit_control
decl_stmt|;
comment|// 0x0098 SAS_COMWAKE
name|U32
name|comwake_control
decl_stmt|;
comment|// 0x009C SAS_COMSAS
name|U32
name|comsas_control
decl_stmt|;
comment|// 0x00A0 SAS_SFERCNT
name|U32
name|received_short_frame_count
decl_stmt|;
comment|// 0x00A4 SAS_CDFERCNT
name|U32
name|received_frame_without_credit_count
decl_stmt|;
comment|// 0x00A8 SAS_DNFERCNT
name|U32
name|received_frame_after_done_count
decl_stmt|;
comment|// 0x00AC SAS_PRSTERCNT
name|U32
name|phy_reset_problem_count
decl_stmt|;
comment|// 0x00B0 SAS_CNTCTL
name|U32
name|counter_control
decl_stmt|;
comment|// 0x00B4 SAS_SSPTOV
name|U32
name|ssp_timer_timeout_values
decl_stmt|;
comment|// 0x00B8 FTCTL
name|U32
name|ftx_control
decl_stmt|;
comment|// 0x00BC FRCTL
name|U32
name|frx_control
decl_stmt|;
comment|// 0x00C0 FTWMRK
name|U32
name|ftx_watermark
decl_stmt|;
comment|// 0x00C4 ENSPINUP
name|U32
name|notify_enable_spinup_control
decl_stmt|;
comment|// 0x00C8 SAS_TRNTOV
name|U32
name|sas_training_sequence_timer_values
decl_stmt|;
comment|// 0x00CC SAS_PHYCAP
name|U32
name|phy_capabilities
decl_stmt|;
comment|// 0x00D0 SAS_PHYCTL
name|U32
name|phy_control
decl_stmt|;
name|U32
name|reserved_d4
decl_stmt|;
comment|// 0x00D8 LLCTL
name|U32
name|link_layer_control
decl_stmt|;
comment|// 0x00DC AFE_XCVRCR
name|U32
name|afe_xcvr_control
decl_stmt|;
comment|// 0x00E0 AFE_LUTCR
name|U32
name|afe_lookup_table_control
decl_stmt|;
comment|// 0x00E4 PSZGCR
name|U32
name|phy_source_zone_group_control
decl_stmt|;
comment|// 0x00E8 SAS_RECPHYCAP
name|U32
name|receive_phycap
decl_stmt|;
name|U32
name|reserved_ec
decl_stmt|;
comment|// 0x00F0 SNAFERXRSTCTL
name|U32
name|speed_negotiation_afe_rx_reset_control
decl_stmt|;
comment|// 0x00F4 SAS_SSIPMCTL
name|U32
name|power_management_control
decl_stmt|;
comment|// 0x00F8 SAS_PSPREQ_PRIM
name|U32
name|sas_pm_partial_request_primitive
decl_stmt|;
comment|// 0x00FC SAS_PSSREQ_PRIM
name|U32
name|sas_pm_slumber_request_primitive
decl_stmt|;
comment|// 0x0100 SAS_PPSACK_PRIM
name|U32
name|sas_pm_ack_primitive_register
decl_stmt|;
comment|// 0x0104 SAS_PSNAK_PRIM
name|U32
name|sas_pm_nak_primitive_register
decl_stmt|;
comment|// 0x0108 SAS_SSIPMTOV
name|U32
name|sas_primitive_timeout
decl_stmt|;
name|U32
name|reserved_10c
decl_stmt|;
comment|// 0x0110 - 0x011C PLAPRDCTRLxREG
name|U32
name|pla_product_control
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0120 PLAPRDSUMREG
name|U32
name|pla_product_sum
decl_stmt|;
comment|// 0x0124 PLACONTROLREG
name|U32
name|pla_control
decl_stmt|;
comment|// Remainder of memory space 896 bytes
name|U32
name|reserved_0128_037f
index|[
literal|0x96
index|]
decl_stmt|;
block|}
name|SCU_LINK_LAYER_REGISTERS_T
typedef|;
comment|// 0x00D4 // Same offset as SAS_TCTSTM SAS_PTxC
comment|//   U32   primitive_transmit_control;
comment|// ----------------------------------------------------------------------------
comment|// SGPIO
comment|// ----------------------------------------------------------------------------
define|#
directive|define
name|SCU_SGPIO_OFFSET
value|0x1400
comment|//#define SCU_SGPIO_OFFSET         0x6000   // later moves to 0x1400 see HSD 652625
define|#
directive|define
name|SCU_SGPIO_SGICR_OFFSET
value|0x0000
define|#
directive|define
name|SCU_SGPIO_SGPBR_OFFSET
value|0x0004
define|#
directive|define
name|SCU_SGPIO_SGSDLR_OFFSET
value|0x0008
define|#
directive|define
name|SCU_SGPIO_SGSDUR_OFFSET
value|0x000C
define|#
directive|define
name|SCU_SGPIO_SGSIDLR_OFFSET
value|0x0010
define|#
directive|define
name|SCU_SGPIO_SGSIDUR_OFFSET
value|0x0014
define|#
directive|define
name|SCU_SGPIO_SGVSCR_OFFSET
value|0x0018
comment|// Address from 0x0820 to 0x083C
define|#
directive|define
name|SCU_SGPIO_SGODSR_OFFSET
value|0x0020
comment|/**  * @struct SCU_SGPIO_REGISTERS  *  * @brief SCU SGPIO Registers  *        See the SCU SGPIO Specification on how these registers are used.  */
typedef|typedef
struct|struct
name|SCU_SGPIO_REGISTERS
block|{
comment|// 0x0000 SGPIO_SGICR
name|U32
name|interface_control
decl_stmt|;
comment|// 0x0004 SGPIO_SGPBR
name|U32
name|blink_rate
decl_stmt|;
comment|// 0x0008 SGPIO_SGSDLR
name|U32
name|start_drive_lower
decl_stmt|;
comment|// 0x000C SGPIO_SGSDUR
name|U32
name|start_drive_upper
decl_stmt|;
comment|// 0x0010 SGPIO_SGSIDLR
name|U32
name|serial_input_lower
decl_stmt|;
comment|// 0x0014 SGPIO_SGSIDUR
name|U32
name|serial_input_upper
decl_stmt|;
comment|// 0x0018 SGPIO_SGVSCR
name|U32
name|vendor_specific_code
decl_stmt|;
comment|// 0x001C Reserved
name|U32
name|reserved_001C
decl_stmt|;
comment|// 0x0020 SGPIO_SGODSR
name|U32
name|output_data_select
index|[
literal|8
index|]
decl_stmt|;
comment|// Remainder of memory space 256 bytes
name|U32
name|reserved_1444_14ff
index|[
literal|0x30
index|]
decl_stmt|;
block|}
name|SCU_SGPIO_REGISTERS_T
typedef|;
comment|//*****************************************************************************
comment|//* Defines for VIIT entry offsets
comment|//* Access additional entries by SCU_VIIT_BASE + index * 0x10
comment|//*****************************************************************************
define|#
directive|define
name|SCU_VIIT_BASE
value|0x1c00
struct|struct
name|SCU_VIIT_REGISTERS
block|{
name|U32
name|registers
index|[
literal|256
index|]
decl_stmt|;
block|}
struct|;
comment|//*****************************************************************************
comment|//* SCU PORT TASK SCHEDULER REGISTERS
comment|//*****************************************************************************
define|#
directive|define
name|SCU_PTSG_BASE
value|0x1000
define|#
directive|define
name|SCU_PTSG_PTSGCR_OFFSET
value|0x0000
define|#
directive|define
name|SCU_PTSG_RTCR_OFFSET
value|0x0004
define|#
directive|define
name|SCU_PTSG_RTCCR_OFFSET
value|0x0008
define|#
directive|define
name|SCU_PTSG_PTS0CR_OFFSET
value|0x0010
define|#
directive|define
name|SCU_PTSG_PTS0SR_OFFSET
value|0x0014
define|#
directive|define
name|SCU_PTSG_PTS1CR_OFFSET
value|0x0018
define|#
directive|define
name|SCU_PTSG_PTS1SR_OFFSET
value|0x001C
define|#
directive|define
name|SCU_PTSG_PTS2CR_OFFSET
value|0x0020
define|#
directive|define
name|SCU_PTSG_PTS2SR_OFFSET
value|0x0024
define|#
directive|define
name|SCU_PTSG_PTS3CR_OFFSET
value|0x0028
define|#
directive|define
name|SCU_PTSG_PTS3SR_OFFSET
value|0x002C
define|#
directive|define
name|SCU_PTSG_PCSPE0CR_OFFSET
value|0x0030
define|#
directive|define
name|SCU_PTSG_PCSPE1CR_OFFSET
value|0x0034
define|#
directive|define
name|SCU_PTSG_PCSPE2CR_OFFSET
value|0x0038
define|#
directive|define
name|SCU_PTSG_PCSPE3CR_OFFSET
value|0x003C
define|#
directive|define
name|SCU_PTSG_ETMTSCCR_OFFSET
value|0x0040
define|#
directive|define
name|SCU_PTSG_ETMRNSCCR_OFFSET
value|0x0044
comment|/**  * @struct SCU_PORT_TASK_SCHEDULER_REGISTERS  *  * @brief These are the control/stats pairs for each Port Task Scheduler.  *        See the SCU SCHED Specification on how these registers are used.  */
typedef|typedef
struct|struct
name|SCU_PORT_TASK_SCHEDULER_REGISTERS
block|{
name|U32
name|control
decl_stmt|;
name|U32
name|status
decl_stmt|;
block|}
name|SCU_PORT_TASK_SCHEDULER_REGISTERS_T
typedef|;
typedef|typedef
name|U32
name|SCU_PORT_PE_CONFIGURATION_REGISTER_T
typedef|;
comment|/**  * @struct SCU_PORT_TASK_SCHEDULER_GROUP_REGISTERS  *  * @brief These are the PORT Task Scheduler registers  *        See the SCU SCHED Specification on how these registers are used.  */
typedef|typedef
struct|struct
name|SCU_PORT_TASK_SCHEDULER_GROUP_REGISTERS
block|{
comment|// 0x0000 PTSGCR
name|U32
name|control
decl_stmt|;
comment|// 0x0004 RTCR
name|U32
name|real_time_clock
decl_stmt|;
comment|// 0x0008 RTCCR
name|U32
name|real_time_clock_control
decl_stmt|;
comment|// 0x000C
name|U32
name|reserved_0C
decl_stmt|;
comment|// 0x0010 PTS0CR
comment|// 0x0014 PTS0SR
comment|// 0x0018 PTS1CR
comment|// 0x001C PTS1SR
comment|// 0x0020 PTS2CR
comment|// 0x0024 PTS2SR
comment|// 0x0028 PTS3CR
comment|// 0x002C PTS3SR
name|SCU_PORT_TASK_SCHEDULER_REGISTERS_T
name|port
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0030 PCSPE0CR
comment|// 0x0034 PCSPE1CR
comment|// 0x0038 PCSPE2CR
comment|// 0x003C PCSPE3CR
name|SCU_PORT_PE_CONFIGURATION_REGISTER_T
name|protocol_engine
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0040 ETMTSCCR
name|U32
name|tc_scanning_interval_control
decl_stmt|;
comment|// 0x0044 ETMRNSCCR
name|U32
name|rnc_scanning_interval_control
decl_stmt|;
comment|// Remainder of memory space 128 bytes
name|U32
name|reserved_1048_107f
index|[
literal|0x0E
index|]
decl_stmt|;
block|}
name|SCU_PORT_TASK_SCHEDULER_GROUP_REGISTERS_T
typedef|;
define|#
directive|define
name|SCU_PTSG_SCUVZECR_OFFSET
value|0x003C
comment|//*****************************************************************************
comment|//* AFE REGISTERS
comment|//*****************************************************************************
define|#
directive|define
name|SCU_AFE_MMR_BASE
value|0xE000
if|#
directive|if
name|defined
argument_list|(
name|ARLINGTON_BUILD
argument_list|)
define|#
directive|define
name|SCU_AFE_PLL_CTL_OFFSET
value|0x0000
define|#
directive|define
name|SCU_AFE_RXPI_CTL_OFFSET
value|0x0004
define|#
directive|define
name|SCU_AFE_MBIAS_CTL0_OFFSET
value|0x000C
define|#
directive|define
name|SCU_AFE_MBIAS_CTL1_OFFSET
value|0x0010
define|#
directive|define
name|SCU_AFE_COMM_STA_OFFSET
value|0x0020
define|#
directive|define
name|SCU_AFE_RXPI_STA_OFFSET
value|0x0024
define|#
directive|define
name|SCU_AFE_XCVR0_CTL0_OFFSET
value|0x0040
define|#
directive|define
name|SCU_AFE_XCVR1_CTL0_OFFSET
value|0x0044
define|#
directive|define
name|SCU_AFE_XCVR2_CTL0_OFFSET
value|0x0048
define|#
directive|define
name|SCU_AFE_XCVR3_CTL0_OFFSET
value|0x004C
define|#
directive|define
name|SCU_AFE_XCVR0_CTL1_OFFSET
value|0x0050
define|#
directive|define
name|SCU_AFE_XCVR1_CTL1_OFFSET
value|0x0054
define|#
directive|define
name|SCU_AFE_XCVR2_CTL1_OFFSET
value|0x0058
define|#
directive|define
name|SCU_AFE_XCVR3_CTL1_OFFSET
value|0x005C
define|#
directive|define
name|SCU_AFE_XCVR0_RXEQ_CTL_OFFSET
value|0x0060
define|#
directive|define
name|SCU_AFE_XCVR1_RXEQ_CTL_OFFSET
value|0x0064
define|#
directive|define
name|SCU_AFE_XCVR2_RXEQ_CTL_OFFSET
value|0x0068
define|#
directive|define
name|SCU_AFE_XCVR3_RXEQ_CTL_OFFSET
value|0x006C
define|#
directive|define
name|SCU_AFE_XCVR0_CDR_STA_OFFSET
value|0x0080
define|#
directive|define
name|SCU_AFE_XCVR1_CDR_STA_OFFSET
value|0x0084
define|#
directive|define
name|SCU_AFE_XCVR2_CDR_STA_OFFSET
value|0x0088
define|#
directive|define
name|SCU_AFE_XCVR3_CDR_STA_OFFSET
value|0x008C
define|#
directive|define
name|SCU_AFE_XCVR0_RXEQ_STA0_OFFSET
value|0x0090
define|#
directive|define
name|SCU_AFE_XCVR1_RXEQ_STA0_OFFSET
value|0x0094
define|#
directive|define
name|SCU_AFE_XCVR2_RXEQ_STA0_OFFSET
value|0x0098
define|#
directive|define
name|SCU_AFE_XCVR3_RXEQ_STA0_OFFSET
value|0x009C
define|#
directive|define
name|SCU_AFE_XCVR0_RXEQ_STA1_OFFSET
value|0x00A0
define|#
directive|define
name|SCU_AFE_XCVR1_RXEQ_STA1_OFFSET
value|0x00A4
define|#
directive|define
name|SCU_AFE_XCVR2_RXEQ_STA1_OFFSET
value|0x00A8
define|#
directive|define
name|SCU_AFE_XCVR3_RXEQ_STA1_OFFSET
value|0x00AC
define|#
directive|define
name|SCU_AFE_DFX_MSTR_CTL_OFFSET
value|0x0104
define|#
directive|define
name|SCU_AFE_NTL_CTL_OFFSET
value|0x010C
define|#
directive|define
name|SCU_AFE_DFX_XCVR_STA_CLR_OFFSET
value|0x0120
define|#
directive|define
name|SCU_AFE_NTL_STA_OFFSET
value|0x0124
define|#
directive|define
name|SCU_AFE_DFX_XCVR0_STA0_OFFSET
value|0x0130
define|#
directive|define
name|SCU_AFE_DFX_XCVR1_STA0_OFFSET
value|0x0134
define|#
directive|define
name|SCU_AFE_DFX_XCVR2_STA0_OFFSET
value|0x0138
define|#
directive|define
name|SCU_AFE_DFX_XCVR3_STA0_OFFSET
value|0x013C
define|#
directive|define
name|SCU_AFE_DFX_XCVR0_STA1_OFFSET
value|0x0140
define|#
directive|define
name|SCU_AFE_DFX_XCVR1_STA1_OFFSET
value|0x0144
define|#
directive|define
name|SCU_AFE_DFX_XCVR2_STA1_OFFSET
value|0x0148
define|#
directive|define
name|SCU_AFE_DFX_XCVR3_STA1_OFFSET
value|0x014C
define|#
directive|define
name|SCU_AFE_DFX_MON_CTL_OFFSET
value|0x0150
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL0_AFE0_XCVR0_OFFSET
value|0x0180
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL0_AFE0_XCVR1_OFFSET
value|0x0184
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL0_AFE0_XCVR2_OFFSET
value|0x0188
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL0_AFE0_XCVR3_OFFSET
value|0x018C
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL0_AFE1_XCVR0_OFFSET
value|0x0980
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL0_AFE1_XCVR1_OFFSET
value|0x0984
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL0_AFE1_XCVR2_OFFSET
value|0x0988
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL0_AFE1_XCVR3_OFFSET
value|0x098C
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL1_AFE0_XCVR0_OFFSET
value|0x0190
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL1_AFE0_XCVR1_OFFSET
value|0x0194
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL1_AFE0_XCVR2_OFFSET
value|0x0198
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL1_AFE0_XCVR3_OFFSET
value|0x019C
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL1_AFE1_XCVR0_OFFSET
value|0x0990
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL1_AFE1_XCVR1_OFFSET
value|0x0994
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL1_AFE1_XCVR2_OFFSET
value|0x0998
define|#
directive|define
name|SCU_AFE_DFX_RX_CTL1_AFE1_XCVR3_OFFSET
value|0x099C
define|#
directive|define
name|SCU_AFE_PLL_DFX_CTL_OFFSET
value|0x01C0
define|#
directive|define
name|SCU_AFE_XCVR0_DFX_DATA_OFFSET
value|0x0200
comment|// [0:0F]
define|#
directive|define
name|SCU_AFE_XCVR0_CC_OFFSET
value|0x0240
define|#
directive|define
name|SCU_AFE_XCVR0_DFX_IR_OFFSET
value|0x0250
comment|// [0:1F]
define|#
directive|define
name|SCU_AFE_XCVR1_DFX_DATA_OFFSET
value|0x0300
comment|// [0:0F]
define|#
directive|define
name|SCU_AFE_XCVR1_CC_OFFSET
value|0x0340
define|#
directive|define
name|SCU_AFE_XCVR1_DFX_IR_OFFSET
value|0x0350
comment|// [0:1F]
define|#
directive|define
name|SCU_AFE_XCVR2_DFX_DATA_OFFSET
value|0x0400
comment|// [0:0F]
define|#
directive|define
name|SCU_AFE_XCVR2_CC_OFFSET
value|0x0440
define|#
directive|define
name|SCU_AFE_XCVR2_DFX_IR_OFFSET
value|0x0450
comment|// [0:1F]
define|#
directive|define
name|SCU_AFE_XCVR3_DFX_DATA_OFFSET
value|0x0500
comment|// [0:0F]
define|#
directive|define
name|SCU_AFE_XCVR3_CC_OFFSET
value|0x0540
define|#
directive|define
name|SCU_AFE_XCVR3_DFX_IR_OFFSET
value|0x0550
comment|// [0:1F]
else|#
directive|else
comment|// defined(ARLINGTON_BUILD)
endif|#
directive|endif
comment|// defined(ARLINGTON_BUILD)
comment|/**  * @struct SCU_AFE_TRANSCEIVER  *  * @brief AFE Transceiver Registers  *        See SCU AFE Specification for use of these registers.  *  * @note For ARLINGTON_BUILD see the SCU AFE specification.  * @note For PLEASANT_RIDGE_BUILD build see the Uaoa AFE specification.  */
if|#
directive|if
name|defined
argument_list|(
name|ARLINGTON_BUILD
argument_list|)
struct|struct
name|SCU_AFE_TRANSCEIVER
block|{
comment|// 0x00
name|U32
name|afe_transceiver_dfx_data
index|[
literal|0x10
index|]
decl_stmt|;
comment|// 0x40
name|U32
name|afe_transceiver_dpg_cycle_control
decl_stmt|;
comment|// 0x44 - 0x4c
name|U32
name|reserved_0044_004c
index|[
literal|3
index|]
decl_stmt|;
comment|// 0x50
name|U32
name|afe_transceiver_dfx_instruction
index|[
literal|0x20
index|]
decl_stmt|;
comment|// 0xd0 - 0xfc
name|U32
name|reserved_00d0_00fc
index|[
literal|0x0C
index|]
decl_stmt|;
block|}
struct|;
elif|#
directive|elif
name|defined
argument_list|(
name|PLEASANT_RIDGE_BUILD
argument_list|)
expr|\
operator|||
name|defined
argument_list|(
name|PBG_HBA_A0_BUILD
argument_list|)
expr|\
operator|||
name|defined
argument_list|(
name|PBG_HBA_A2_BUILD
argument_list|)
expr|\
operator|||
name|defined
argument_list|(
name|PBG_HBA_BETA_BUILD
argument_list|)
expr|\
operator|||
name|defined
argument_list|(
name|PBG_BUILD
argument_list|)
comment|// AFE 0 is at offset 0x0800
comment|// AFE 1 is at offset 0x0900
comment|// AFE 2 is at offset 0x0a00
comment|// AFE 3 is at offset 0x0b00
struct|struct
name|SCU_AFE_TRANSCEIVER
block|{
comment|// 0x0000 AFE_XCVR_CTRL0
name|U32
name|afe_xcvr_control0
decl_stmt|;
comment|// 0x0004 AFE_XCVR_CTRL1
name|U32
name|afe_xcvr_control1
decl_stmt|;
comment|// 0x0008
name|U32
name|reserved_0008
decl_stmt|;
comment|// 0x000c afe_dfx_rx_control0
name|U32
name|afe_dfx_rx_control0
decl_stmt|;
comment|// 0x0010 AFE_DFX_RX_CTRL1
name|U32
name|afe_dfx_rx_control1
decl_stmt|;
comment|// 0x0014
name|U32
name|reserved_0014
decl_stmt|;
comment|// 0x0018 AFE_DFX_RX_STS0
name|U32
name|afe_dfx_rx_status0
decl_stmt|;
comment|// 0x001c AFE_DFX_RX_STS1
name|U32
name|afe_dfx_rx_status1
decl_stmt|;
comment|// 0x0020
name|U32
name|reserved_0020
decl_stmt|;
comment|// 0x0024 AFE_TX_CTRL
name|U32
name|afe_tx_control
decl_stmt|;
comment|// 0x0028 AFE_TX_AMP_CTRL0
name|U32
name|afe_tx_amp_control0
decl_stmt|;
comment|// 0x002c AFE_TX_AMP_CTRL1
name|U32
name|afe_tx_amp_control1
decl_stmt|;
comment|// 0x0030 AFE_TX_AMP_CTRL2
name|U32
name|afe_tx_amp_control2
decl_stmt|;
comment|// 0x0034 AFE_TX_AMP_CTRL3
name|U32
name|afe_tx_amp_control3
decl_stmt|;
comment|// 0x0038 afe_tx_ssc_control
name|U32
name|afe_tx_ssc_control
decl_stmt|;
comment|// 0x003c
name|U32
name|reserved_003c
decl_stmt|;
comment|// 0x0040 AFE_RX_SSC_CTRL0
name|U32
name|afe_rx_ssc_control0
decl_stmt|;
comment|// 0x0044 AFE_RX_SSC_CTRL1
name|U32
name|afe_rx_ssc_control1
decl_stmt|;
comment|// 0x0048 AFE_RX_SSC_CTRL2
name|U32
name|afe_rx_ssc_control2
decl_stmt|;
comment|// 0x004c AFE_RX_EQ_STS0
name|U32
name|afe_rx_eq_status0
decl_stmt|;
comment|// 0x0050 AFE_RX_EQ_STS1
name|U32
name|afe_rx_eq_status1
decl_stmt|;
comment|// 0x0054 AFE_RX_CDR_STS
name|U32
name|afe_rx_cdr_status
decl_stmt|;
comment|// 0x0058
name|U32
name|reserved_0058
decl_stmt|;
comment|// 0x005c AFE_CHAN_CTRL
name|U32
name|afe_channel_control
decl_stmt|;
comment|// 0x0060-0x006c
name|U32
name|reserved_0060_006c
index|[
literal|0x04
index|]
decl_stmt|;
comment|// 0x0070 AFE_XCVR_EC_STS0
name|U32
name|afe_xcvr_error_capture_status0
decl_stmt|;
comment|// 0x0074 AFE_XCVR_EC_STS1
name|U32
name|afe_xcvr_error_capture_status1
decl_stmt|;
comment|// 0x0078 AFE_XCVR_EC_STS2
name|U32
name|afe_xcvr_error_capture_status2
decl_stmt|;
comment|// 0x007c afe_xcvr_ec_status3
name|U32
name|afe_xcvr_error_capture_status3
decl_stmt|;
comment|// 0x0080 AFE_XCVR_EC_STS4
name|U32
name|afe_xcvr_error_capture_status4
decl_stmt|;
comment|// 0x0084 AFE_XCVR_EC_STS5
name|U32
name|afe_xcvr_error_capture_status5
decl_stmt|;
comment|// 0x0088-0x00fc
name|U32
name|reserved_008c_00fc
index|[
literal|0x1e
index|]
decl_stmt|;
block|}
struct|;
else|#
directive|else
comment|// !defined(PLEASANT_RIDGE_BUILD)&& !defined(ARLINGTON_BUILD)
error|#
directive|error
literal|"Target platform not defined."
endif|#
directive|endif
comment|// defined(PLEASANT_RIDGE_BUILD) || defined(ARLINGTON_BUILD)
comment|/**  * @struct SCU_AFE_REGISTERS  *  * @brief AFE Regsiters  *        See SCU AFE Specification for use of these registers.  */
if|#
directive|if
name|defined
argument_list|(
name|ARLINGTON_BUILD
argument_list|)
typedef|typedef
struct|struct
name|SCU_AFE_REGISTERS
block|{
comment|// 0x0000
name|U32
name|afe_pll_control
decl_stmt|;
comment|// 0x0004
name|U32
name|afe_phase_interplator_control
decl_stmt|;
comment|// 0x0008
name|U32
name|reservd_0008
decl_stmt|;
comment|// 0x000C
name|U32
name|afe_bias_control
index|[
literal|2
index|]
decl_stmt|;
comment|// 0x0014 - 0x001c
name|U32
name|reserved_0014_001c
index|[
literal|3
index|]
decl_stmt|;
comment|// 0x0020
name|U32
name|afe_common_status
decl_stmt|;
comment|// 0x0024
name|U32
name|afe_phase_interpolator_status
decl_stmt|;
comment|// 0x0028 - 0x003C
name|U32
name|reserved_0028_003c
index|[
literal|6
index|]
decl_stmt|;
comment|// 0x0040
name|U32
name|afe_transceiver_control0
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0050
name|U32
name|afe_transceiver_control1
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0060
name|U32
name|afe_transceiver_equalization_control
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0070 - 0x007c
name|U32
name|reserved_0070_007c
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0080
name|U32
name|afe_transceiver_cdr_status
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0090
name|U32
name|afe_transceiver_rx_equaliation_status_register0
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x00A0
name|U32
name|afe_transceiver_rx_equaliation_status_register1
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x00B0 - 0x0100
name|U32
name|reserved_00b0_0100
index|[
literal|0x15
index|]
decl_stmt|;
comment|// 0x0104
name|U32
name|afe_dfx_master_control
decl_stmt|;
comment|// 0x0108
name|U32
name|reserved_0108
decl_stmt|;
comment|// 0x010c
name|U32
name|afe_no_touch_leakage_control
decl_stmt|;
comment|// 0x0110 - 0x011C
name|U32
name|reserved_0110_011c
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0120
name|U32
name|afe_dfx_transceiver_status_clear
decl_stmt|;
comment|// 0x0124
name|U32
name|afe_no_touch_leakage_status
decl_stmt|;
comment|// 0x0128 - 0x012c
name|U32
name|reserved_0128_012c
index|[
literal|2
index|]
decl_stmt|;
comment|// 0x0130
name|U32
name|afe_dfx_transceiver_status_register0
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0140
name|U32
name|afe_dfx_transceiver_status_register1
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0150
name|U32
name|afe_dfx_transmit_monitor_control
decl_stmt|;
comment|// 0x0154 - 0x017c
name|U32
name|reserved_0154_017C
index|[
literal|0x0B
index|]
decl_stmt|;
comment|// 0x0180
name|U32
name|afe_dfx_receive_control_register0
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0190
name|U32
name|afe_dfx_receive_control_register1
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x1A0
name|U32
name|afe_dfx_transmit_control_register
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x01B0 - 0x01BC
name|U32
name|reserved_01b0_01bc
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x01C0
name|U32
name|afe_pll_dfx_control
decl_stmt|;
comment|// 0x01c4 - 0x01fc
name|U32
name|reserved_01c4_01fc
index|[
literal|0x0F
index|]
decl_stmt|;
comment|// 0x0200 - 0x05fc
name|struct
name|SCU_AFE_TRANSCEIVER
name|afe_transceiver
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0600 - 0x06FC
name|U32
name|reserved_0600_06FC
index|[
literal|0x40
index|]
decl_stmt|;
comment|// 0x0700
name|struct
name|SCU_AFE_TRANSCEIVER
name|afe_all_transceiver
decl_stmt|;
name|U32
name|reserved_0800_2000
index|[
literal|0x600
index|]
decl_stmt|;
block|}
name|SCU_AFE_REGISTERS_T
typedef|;
elif|#
directive|elif
name|defined
argument_list|(
name|PLEASANT_RIDGE_BUILD
argument_list|)
expr|\
operator|||
name|defined
argument_list|(
name|PBG_HBA_A0_BUILD
argument_list|)
expr|\
operator|||
name|defined
argument_list|(
name|PBG_HBA_A2_BUILD
argument_list|)
expr|\
operator|||
name|defined
argument_list|(
name|PBG_HBA_BETA_BUILD
argument_list|)
expr|\
operator|||
name|defined
argument_list|(
name|PBG_BUILD
argument_list|)
comment|/* Uaoa AFE registers */
typedef|typedef
struct|struct
name|SCU_AFE_REGISTERS
block|{
comment|// 0Xe000 AFE_BIAS_CTRL
name|U32
name|afe_bias_control
decl_stmt|;
name|U32
name|reserved_0004
decl_stmt|;
comment|// 0x0008 AFE_PLL_CTRL0
name|U32
name|afe_pll_control0
decl_stmt|;
comment|// 0x000c AFE_PLL_CTRL1
name|U32
name|afe_pll_control1
decl_stmt|;
comment|// 0x0010 AFE_PLL_CTRL2
name|U32
name|afe_pll_control2
decl_stmt|;
comment|// 0x0014 AFE_CB_STS
name|U32
name|afe_common_block_status
decl_stmt|;
comment|// 0x0018-0x007c
name|U32
name|reserved_18_7c
index|[
literal|0x1a
index|]
decl_stmt|;
comment|// 0x0080 AFE_PMSN_MCTRL0
name|U32
name|afe_pmsn_master_control0
decl_stmt|;
comment|// 0x0084 AFE_PMSN_MCTRL1
name|U32
name|afe_pmsn_master_control1
decl_stmt|;
comment|// 0x0088 AFE_PMSN_MCTRL2
name|U32
name|afe_pmsn_master_control2
decl_stmt|;
comment|// 0x008C-0x00fc
name|U32
name|reserved_008c_00fc
index|[
literal|0x1D
index|]
decl_stmt|;
comment|// 0x0100 AFE_DFX_MST_CTRL0
name|U32
name|afe_dfx_master_control0
decl_stmt|;
comment|// 0x0104 AFE_DFX_MST_CTRL1
name|U32
name|afe_dfx_master_control1
decl_stmt|;
comment|// 0x0108 AFE_DFX_DCL_CTRL
name|U32
name|afe_dfx_dcl_control
decl_stmt|;
comment|// 0x010c AFE_DFX_DMON_CTRL
name|U32
name|afe_dfx_digital_monitor_control
decl_stmt|;
comment|// 0x0110 AFE_DFX_AMONP_CTRL
name|U32
name|afe_dfx_analog_p_monitor_control
decl_stmt|;
comment|// 0x0114 AFE_DFX_AMONN_CTRL
name|U32
name|afe_dfx_analog_n_monitor_control
decl_stmt|;
comment|// 0x0118 AFE_DFX_NTL_STS
name|U32
name|afe_dfx_ntl_status
decl_stmt|;
comment|// 0x011c AFE_DFX_FIFO_STS0
name|U32
name|afe_dfx_fifo_status0
decl_stmt|;
comment|// 0x0120 AFE_DFX_FIFO_STS1
name|U32
name|afe_dfx_fifo_status1
decl_stmt|;
comment|// 0x0124 AFE_DFX_MPAT_CTRL
name|U32
name|afe_dfx_master_pattern_control
decl_stmt|;
comment|// 0x0128 AFE_DFX_P0_CTRL
name|U32
name|afe_dfx_p0_control
decl_stmt|;
comment|// 0x012c-0x01a8 AFE_DFX_P0_DRx
name|U32
name|afe_dfx_p0_data
index|[
literal|32
index|]
decl_stmt|;
comment|// 0x01ac
name|U32
name|reserved_01ac
decl_stmt|;
comment|// 0x01b0-0x020c AFE_DFX_P0_IRx
name|U32
name|afe_dfx_p0_instruction
index|[
literal|24
index|]
decl_stmt|;
comment|// 0x0210
name|U32
name|reserved_0210
decl_stmt|;
comment|// 0x0214 AFE_DFX_P1_CTRL
name|U32
name|afe_dfx_p1_control
decl_stmt|;
comment|// 0x0218-0x245 AFE_DFX_P1_DRx
name|U32
name|afe_dfx_p1_data
index|[
literal|16
index|]
decl_stmt|;
comment|// 0x0258-0x029c
name|U32
name|reserved_0258_029c
index|[
literal|0x12
index|]
decl_stmt|;
comment|// 0x02a0-0x02bc AFE_DFX_P1_IRx
name|U32
name|afe_dfx_p1_instruction
index|[
literal|8
index|]
decl_stmt|;
comment|// 0x02c0-0x2fc
name|U32
name|reserved_02c0_02fc
index|[
literal|0x10
index|]
decl_stmt|;
comment|// 0x0300 AFE_DFX_TX_PMSN_CTRL
name|U32
name|afe_dfx_tx_pmsn_control
decl_stmt|;
comment|// 0x0304 AFE_DFX_RX_PMSN_CTRL
name|U32
name|afe_dfx_rx_pmsn_control
decl_stmt|;
name|U32
name|reserved_0308
decl_stmt|;
comment|// 0x030c AFE_DFX_NOA_CTRL0
name|U32
name|afe_dfx_noa_control0
decl_stmt|;
comment|// 0x0310 AFE_DFX_NOA_CTRL1
name|U32
name|afe_dfx_noa_control1
decl_stmt|;
comment|// 0x0314 AFE_DFX_NOA_CTRL2
name|U32
name|afe_dfx_noa_control2
decl_stmt|;
comment|// 0x0318 AFE_DFX_NOA_CTRL3
name|U32
name|afe_dfx_noa_control3
decl_stmt|;
comment|// 0x031c AFE_DFX_NOA_CTRL4
name|U32
name|afe_dfx_noa_control4
decl_stmt|;
comment|// 0x0320 AFE_DFX_NOA_CTRL5
name|U32
name|afe_dfx_noa_control5
decl_stmt|;
comment|// 0x0324 AFE_DFX_NOA_CTRL6
name|U32
name|afe_dfx_noa_control6
decl_stmt|;
comment|// 0x0328 AFE_DFX_NOA_CTRL7
name|U32
name|afe_dfx_noa_control7
decl_stmt|;
comment|// 0x032c-0x07fc
name|U32
name|reserved_032c_07fc
index|[
literal|0x135
index|]
decl_stmt|;
comment|// 0x0800-0x0bfc
name|struct
name|SCU_AFE_TRANSCEIVER
name|scu_afe_xcvr
index|[
literal|4
index|]
decl_stmt|;
comment|// 0x0c00-0x0ffc
name|U32
name|reserved_0c00_0ffc
index|[
literal|0x0100
index|]
decl_stmt|;
block|}
name|SCU_AFE_REGISTERS_T
typedef|;
else|#
directive|else
comment|// !defined(PBG_HBA_BUILD)&& defined(PLEASANT_RIDGE_BUILD)&& !defined(ARLINGTON_BUILD)
error|#
directive|error
literal|"Target platform not defined."
endif|#
directive|endif
comment|// defined(PBG_HBA_BUILD) || defined(PLEASANT_RIDGE_BUILD) || defined(ARLINGTON_BUILD)
struct|struct
name|SCU_PROTOCOL_ENGINE_GROUP_REGISTERS
block|{
name|U32
name|table
index|[
literal|0xE0
index|]
decl_stmt|;
block|}
struct|;
struct|struct
name|SCU_VIIT_IIT
block|{
name|U32
name|table
index|[
literal|256
index|]
decl_stmt|;
block|}
struct|;
comment|/**  * @brief Placeholder for the ZONE Partition Table information  *        ZONING will not be included in the 1.1 release.  *  */
struct|struct
name|SCU_ZONE_PARTITION_TABLE
block|{
name|U32
name|table
index|[
literal|2048
index|]
decl_stmt|;
block|}
struct|;
comment|/**  * @brief CRAM register. MMR base address for CRAMC is 0x6400  *        relative to SCUBAR.  *  */
struct|struct
name|SCU_COMPLETION_RAM
block|{
name|U32
name|sram_base_address_0
decl_stmt|;
comment|//0x0000
name|U32
name|sram_upper_base_address_0
decl_stmt|;
comment|//0x0004
name|U32
name|sram_ecc_control_0
decl_stmt|;
comment|//0x0008
name|U32
name|sram_ecc_log_0
decl_stmt|;
comment|//0x000c
name|U32
name|sram_ecc_addrress_0
decl_stmt|;
comment|//0x0010
name|U32
name|sram_ecc_context_address_0
decl_stmt|;
comment|//0x0014
name|U32
name|sram_ecc_test_0
decl_stmt|;
comment|//0x0018
name|U32
name|sram_parity_control_and_status_0
decl_stmt|;
comment|//0x001C
name|U32
name|sram_parity_address_0
decl_stmt|;
comment|//0x0020
name|U32
name|sram_parity_upper_address_0
decl_stmt|;
comment|//0x0024
name|U32
name|sram_parity_context_0
decl_stmt|;
comment|//0x0028
name|U32
name|sram_memory_controller_interrupt_status_0
decl_stmt|;
comment|//0x002C
name|U32
name|sram_mcu_read_arbiter_control_0
decl_stmt|;
comment|//0x0030
name|U32
name|sram_mcu_write_arbiter_control_0
decl_stmt|;
comment|//0x0034
name|U32
name|smcu_error_event_counter_0_0
decl_stmt|;
comment|//0x0038
comment|//Remainder CRAM register space
name|U32
name|reserved_003C_0200
index|[
literal|113
index|]
decl_stmt|;
block|}
struct|;
comment|/**  * @brief FBRAM registers. MMR base address for FBRAM is  *        0x6600 relative to SCUBAR.  */
struct|struct
name|SCU_FRAME_BUFFER_RAM
block|{
name|U32
name|sram_base_address_1
decl_stmt|;
comment|//0x0000
name|U32
name|sram_upper_base_address_1
decl_stmt|;
comment|//0x0004
name|U32
name|sram_ecc_control_1
decl_stmt|;
comment|//0x0008
name|U32
name|sram_ecc_log_1
decl_stmt|;
comment|//0x000c
name|U32
name|sram_ecc_addrress_1
decl_stmt|;
comment|//0x0010
name|U32
name|sram_ecc_context_address_1
decl_stmt|;
comment|//0x0014
name|U32
name|sram_ecc_test_1
decl_stmt|;
comment|//0x0018
name|U32
name|sram_parity_control_and_status_1
decl_stmt|;
comment|//0x001C
name|U32
name|sram_parity_address_1
decl_stmt|;
comment|//0x0020
name|U32
name|sram_parity_upper_address_1
decl_stmt|;
comment|//0x0024
name|U32
name|sram_parity_context_1
decl_stmt|;
comment|//0x0028
name|U32
name|sram_memory_controller_interrupt_status_1
decl_stmt|;
comment|//0x002C
name|U32
name|sram_mcu_read_arbiter_control_1
decl_stmt|;
comment|//0x0030
name|U32
name|sram_mcu_write_arbiter_control_1
decl_stmt|;
comment|//0x0034
name|U32
name|smcu_error_event_counter_0_1
decl_stmt|;
comment|//0x0038
comment|//Remainder of FBRAM register space
name|U32
name|reserved_003C_0200
index|[
literal|113
index|]
decl_stmt|;
block|}
struct|;
define|#
directive|define
name|SCU_SCRATCH_RAM_SIZE_IN_DWORDS
value|256
comment|/** * @brief Placeholder for the scratch RAM registers. * */
struct|struct
name|SCU_SCRATCH_RAM
block|{
name|U32
name|ram
index|[
name|SCU_SCRATCH_RAM_SIZE_IN_DWORDS
index|]
decl_stmt|;
block|}
struct|;
comment|/**  * @brief Placeholder since I am not yet sure what these registers are here  *        for.  *  */
struct|struct
name|NOA_PROTOCOL_ENGINE_PARTITION
block|{
name|U32
name|reserved
index|[
literal|64
index|]
decl_stmt|;
block|}
struct|;
comment|/**  * @brief Placeholder since I am not yet sure what these registers are here  *        for.  *  */
struct|struct
name|NOA_HUB_PARTITION
block|{
name|U32
name|reserved
index|[
literal|64
index|]
decl_stmt|;
block|}
struct|;
comment|/**  * @brief Placeholder since I am not yet sure what these registers are here  *        for.  *  */
struct|struct
name|NOA_HOST_INTERFACE_PARTITION
block|{
name|U32
name|reserved
index|[
literal|64
index|]
decl_stmt|;
block|}
struct|;
comment|/**  * @struct TRANSPORT_LINK_LAYER_PAIR  *  * @brief The SCU Hardware pairs up the TL registers with the LL registers  *        so we must place them adjcent to make the array of registers in  *        the PEG.  *  */
struct|struct
name|TRANSPORT_LINK_LAYER_PAIR
block|{
name|struct
name|SCU_TRANSPORT_LAYER_REGISTERS
name|tl
decl_stmt|;
name|struct
name|SCU_LINK_LAYER_REGISTERS
name|ll
decl_stmt|;
block|}
struct|;
comment|/**  * @struct SCU_PEG_REGISTERS  *  * @brief SCU Protocol Engine Memory mapped register space.  These  *        registers are unique to each protocol engine group.  There can be  *        at most two PEG for a single SCU part.  *  */
struct|struct
name|SCU_PEG_REGISTERS
block|{
name|struct
name|TRANSPORT_LINK_LAYER_PAIR
name|pe
index|[
literal|4
index|]
decl_stmt|;
name|struct
name|SCU_PORT_TASK_SCHEDULER_GROUP_REGISTERS
name|ptsg
decl_stmt|;
name|struct
name|SCU_PROTOCOL_ENGINE_GROUP_REGISTERS
name|peg
decl_stmt|;
name|struct
name|SCU_SGPIO_REGISTERS
name|sgpio
decl_stmt|;
name|U32
name|reserved_01500_1BFF
index|[
literal|0x1C0
index|]
decl_stmt|;
name|struct
name|SCU_VIIT_ENTRY
name|viit
index|[
literal|64
index|]
decl_stmt|;
name|struct
name|SCU_ZONE_PARTITION_TABLE
name|zpt0
decl_stmt|;
name|struct
name|SCU_ZONE_PARTITION_TABLE
name|zpt1
decl_stmt|;
block|}
struct|;
comment|/**  * @struct SCU_REGISTERS  *  * @brief SCU regsiters including both PEG registers if we turn on that  *        compile option.  *        All of these registers are in the memory mapped space returned  *        from BAR1.  *        See SCU SMU Specification for how these registers are mapped.  *  */
typedef|typedef
struct|struct
name|SCU_REGISTERS
block|{
comment|// 0x0000 - PEG 0
name|struct
name|SCU_PEG_REGISTERS
name|peg0
decl_stmt|;
comment|// 0x6000 - SDMA and Miscellaneous
name|struct
name|SCU_SDMA_REGISTERS
name|sdma
decl_stmt|;
name|struct
name|SCU_COMPLETION_RAM
name|cram
decl_stmt|;
name|struct
name|SCU_FRAME_BUFFER_RAM
name|fbram
decl_stmt|;
name|U32
name|reserved_6800_69FF
index|[
literal|0x80
index|]
decl_stmt|;
name|struct
name|NOA_PROTOCOL_ENGINE_PARTITION
name|noa_pe
decl_stmt|;
name|struct
name|NOA_HUB_PARTITION
name|noa_hub
decl_stmt|;
name|struct
name|NOA_HOST_INTERFACE_PARTITION
name|noa_if
decl_stmt|;
name|U32
name|reserved_6d00_7fff
index|[
literal|0x4c0
index|]
decl_stmt|;
comment|// 0x8000 - PEG 1
name|struct
name|SCU_PEG_REGISTERS
name|peg1
decl_stmt|;
comment|// 0xE000 - AFE Registers
name|struct
name|SCU_AFE_REGISTERS
name|afe
decl_stmt|;
block|}
name|SCU_REGISTERS_T
typedef|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// _SCU_REGISTERS_HEADER_
end_comment

end_unit

