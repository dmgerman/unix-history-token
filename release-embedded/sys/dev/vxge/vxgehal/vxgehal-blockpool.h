begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright(c) 2002-2011 Exar Corp.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification are permitted provided the following conditions are met:  *  *    1. Redistributions of source code must retain the above copyright notice,  *       this list of conditions and the following disclaimer.  *  *    2. Redistributions in binary form must reproduce the above copyright  *       notice, this list of conditions and the following disclaimer in the  *       documentation and/or other materials provided with the distribution.  *  *    3. Neither the name of the Exar Corporation nor the names of its  *       contributors may be used to endorse or promote products derived from  *       this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*$FreeBSD$*/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|VXGE_HAL_BLOCKPOOL_H
end_ifndef

begin_define
define|#
directive|define
name|VXGE_HAL_BLOCKPOOL_H
end_define

begin_macro
name|__EXTERN_BEGIN_DECLS
end_macro

begin_comment
comment|/*  * struct __hal_blockpool_entry_t - Block private data structure  * @item: List header used to link.  * @length: Length of the block  * @memblock: Virtual address block  * @dma_addr: DMA Address of the block.  * @dma_handle: DMA handle of the block.  * @acc_handle: DMA acc handle  *  * Block is allocated with a header to put the blocks into list.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|__hal_blockpool_entry_t
block|{
name|vxge_list_t
name|item
decl_stmt|;
name|u32
name|length
decl_stmt|;
name|void
modifier|*
name|memblock
decl_stmt|;
name|dma_addr_t
name|dma_addr
decl_stmt|;
name|pci_dma_h
name|dma_handle
decl_stmt|;
name|pci_dma_acc_h
name|acc_handle
decl_stmt|;
block|}
name|__hal_blockpool_entry_t
typedef|;
end_typedef

begin_comment
comment|/*  * struct __hal_blockpool_t - Block Pool  * @hldev: HAL device  * @block_size: size of each block.  * @Pool_size: Number of blocks in the pool  * @pool_incr: Number of blocks to be requested/freed at a time from OS  * @pool_min: Minimum number of block below which to request additional blocks  * @pool_max: Maximum number of blocks above which to free additional blocks  * @req_out: Number of block requests with OS out standing  * @dma_flags: DMA flags  * @free_block_list: List of free blocks  * @pool_lock: Spin lock for the pool  *  * Block pool contains the DMA blocks preallocated.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|__hal_blockpool_t
block|{
name|vxge_hal_device_h
name|hldev
decl_stmt|;
name|u32
name|block_size
decl_stmt|;
name|u32
name|pool_size
decl_stmt|;
name|u32
name|pool_incr
decl_stmt|;
name|u32
name|pool_min
decl_stmt|;
name|u32
name|pool_max
decl_stmt|;
name|u32
name|req_out
decl_stmt|;
name|u32
name|dma_flags
decl_stmt|;
name|vxge_list_t
name|free_block_list
decl_stmt|;
name|vxge_list_t
name|free_entry_list
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|VXGE_HAL_BP_POST
argument_list|)
operator|||
name|defined
argument_list|(
name|VXGE_HAL_BP_POST_IRQ
argument_list|)
name|spinlock_t
name|pool_lock
decl_stmt|;
endif|#
directive|endif
block|}
name|__hal_blockpool_t
typedef|;
end_typedef

begin_function_decl
name|vxge_hal_status_e
name|__hal_blockpool_create
parameter_list|(
name|vxge_hal_device_h
name|hldev
parameter_list|,
name|__hal_blockpool_t
modifier|*
name|blockpool
parameter_list|,
name|u32
name|pool_size
parameter_list|,
name|u32
name|pool_incr
parameter_list|,
name|u32
name|pool_min
parameter_list|,
name|u32
name|pool_max
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__hal_blockpool_destroy
parameter_list|(
name|__hal_blockpool_t
modifier|*
name|blockpool
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|__hal_blockpool_entry_t
modifier|*
name|__hal_blockpool_block_allocate
parameter_list|(
name|vxge_hal_device_h
name|hldev
parameter_list|,
name|u32
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__hal_blockpool_block_free
parameter_list|(
name|vxge_hal_device_h
name|hldev
parameter_list|,
name|__hal_blockpool_entry_t
modifier|*
name|entry
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|__hal_blockpool_malloc
parameter_list|(
name|vxge_hal_device_h
name|hldev
parameter_list|,
name|u32
name|size
parameter_list|,
name|dma_addr_t
modifier|*
name|dma_addr
parameter_list|,
name|pci_dma_h
modifier|*
name|dma_handle
parameter_list|,
name|pci_dma_acc_h
modifier|*
name|acc_handle
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__hal_blockpool_free
parameter_list|(
name|vxge_hal_device_h
name|hldev
parameter_list|,
name|void
modifier|*
name|memblock
parameter_list|,
name|u32
name|size
parameter_list|,
name|dma_addr_t
modifier|*
name|dma_addr
parameter_list|,
name|pci_dma_h
modifier|*
name|dma_handle
parameter_list|,
name|pci_dma_acc_h
modifier|*
name|acc_handle
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_blockpool_list_allocate
parameter_list|(
name|vxge_hal_device_h
name|hldev
parameter_list|,
name|vxge_list_t
modifier|*
name|blocklist
parameter_list|,
name|u32
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__hal_blockpool_list_free
parameter_list|(
name|vxge_hal_device_h
name|hldev
parameter_list|,
name|vxge_list_t
modifier|*
name|blocklist
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__EXTERN_END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* VXGE_HAL_BLOCKPOOL_H */
end_comment

end_unit

