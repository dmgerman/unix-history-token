begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2013-2014 Qlogic Corporation  * All rights reserved.  *  *  Redistribution and use in source and binary forms, with or without  *  modification, are permitted provided that the following conditions  *  are met:  *  *  1. Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  2. Redistributions in binary form must reproduce the above copyright  *     notice, this list of conditions and the following disclaimer in the  *     documentation and/or other materials provided with the distribution.  *  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  *  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE  *  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  *  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  *  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  *  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  *  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  *  POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_comment
comment|/*  * File: qls_dump.h  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_QLS_DUMP_H_
end_ifndef

begin_define
define|#
directive|define
name|_QLS_DUMP_H_
end_define

begin_define
define|#
directive|define
name|Q81_MPID_COOKIE
value|0x5555aaaa
end_define

begin_typedef
typedef|typedef
struct|struct
name|qls_mpid_glbl_hdr
block|{
name|uint32_t
name|cookie
decl_stmt|;
name|uint8_t
name|id
index|[
literal|16
index|]
decl_stmt|;
name|uint32_t
name|time_lo
decl_stmt|;
name|uint32_t
name|time_hi
decl_stmt|;
name|uint32_t
name|img_size
decl_stmt|;
name|uint32_t
name|hdr_size
decl_stmt|;
name|uint8_t
name|info
index|[
literal|220
index|]
decl_stmt|;
block|}
name|qls_mpid_glbl_hdr_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|qls_mpid_seg_hdr
block|{
name|uint32_t
name|cookie
decl_stmt|;
name|uint32_t
name|seg_num
decl_stmt|;
name|uint32_t
name|seg_size
decl_stmt|;
name|uint32_t
name|extra
decl_stmt|;
name|uint8_t
name|desc
index|[
literal|16
index|]
decl_stmt|;
block|}
name|qls_mpid_seg_hdr_t
typedef|;
end_typedef

begin_enum
enum|enum
block|{
name|Q81_MPI_CORE_REGS_ADDR
init|=
literal|0x00030000
block|,
name|Q81_MPI_CORE_REGS_CNT
init|=
literal|127
block|,
name|Q81_MPI_CORE_SH_REGS_CNT
init|=
literal|16
block|,
name|Q81_TEST_REGS_ADDR
init|=
literal|0x00001000
block|,
name|Q81_TEST_REGS_CNT
init|=
literal|23
block|,
name|Q81_RMII_REGS_ADDR
init|=
literal|0x00001040
block|,
name|Q81_RMII_REGS_CNT
init|=
literal|64
block|,
name|Q81_FCMAC1_REGS_ADDR
init|=
literal|0x00001080
block|,
name|Q81_FCMAC2_REGS_ADDR
init|=
literal|0x000010c0
block|,
name|Q81_FCMAC_REGS_CNT
init|=
literal|64
block|,
name|Q81_FC1_MBX_REGS_ADDR
init|=
literal|0x00001100
block|,
name|Q81_FC2_MBX_REGS_ADDR
init|=
literal|0x00001240
block|,
name|Q81_FC_MBX_REGS_CNT
init|=
literal|64
block|,
name|Q81_IDE_REGS_ADDR
init|=
literal|0x00001140
block|,
name|Q81_IDE_REGS_CNT
init|=
literal|64
block|,
name|Q81_NIC1_MBX_REGS_ADDR
init|=
literal|0x00001180
block|,
name|Q81_NIC2_MBX_REGS_ADDR
init|=
literal|0x00001280
block|,
name|Q81_NIC_MBX_REGS_CNT
init|=
literal|64
block|,
name|Q81_SMBUS_REGS_ADDR
init|=
literal|0x00001200
block|,
name|Q81_SMBUS_REGS_CNT
init|=
literal|64
block|,
name|Q81_I2C_REGS_ADDR
init|=
literal|0x00001fc0
block|,
name|Q81_I2C_REGS_CNT
init|=
literal|64
block|,
name|Q81_MEMC_REGS_ADDR
init|=
literal|0x00003000
block|,
name|Q81_MEMC_REGS_CNT
init|=
literal|256
block|,
name|Q81_PBUS_REGS_ADDR
init|=
literal|0x00007c00
block|,
name|Q81_PBUS_REGS_CNT
init|=
literal|256
block|,
name|Q81_MDE_REGS_ADDR
init|=
literal|0x00010000
block|,
name|Q81_MDE_REGS_CNT
init|=
literal|6
block|,
name|Q81_CODE_RAM_ADDR
init|=
literal|0x00020000
block|,
name|Q81_CODE_RAM_CNT
init|=
literal|0x2000
block|,
name|Q81_MEMC_RAM_ADDR
init|=
literal|0x00100000
block|,
name|Q81_MEMC_RAM_CNT
init|=
literal|0x2000
block|,
name|Q81_XGMAC_REGISTER_END
init|=
literal|0x740
block|, }
enum|;
end_enum

begin_define
define|#
directive|define
name|Q81_PROBE_DATA_LENGTH_WORDS
value|((64*2) + 1)
end_define

begin_define
define|#
directive|define
name|Q81_NUMBER_OF_PROBES
value|34
end_define

begin_define
define|#
directive|define
name|Q81_PROBE_SIZE
define|\
value|(Q81_PROBE_DATA_LENGTH_WORDS * Q81_NUMBER_OF_PROBES)
end_define

begin_define
define|#
directive|define
name|Q81_NUMBER_ROUTING_REG_ENTRIES
value|48
end_define

begin_define
define|#
directive|define
name|Q81_WORDS_PER_ROUTING_REG_ENTRY
value|4
end_define

begin_define
define|#
directive|define
name|Q81_ROUT_REG_SIZE
define|\
value|(Q81_NUMBER_ROUTING_REG_ENTRIES * Q81_WORDS_PER_ROUTING_REG_ENTRY)
end_define

begin_define
define|#
directive|define
name|Q81_MAC_PROTOCOL_REGISTER_WORDS
value|((512 * 3) + (32 * 2) + (4096 * 1) +\ 					 (4096 * 1) + (4 * 2) +\ 					 (8 * 2) + (16 * 1) +\ 					 (4 * 1) + (4 * 4) + (4 * 1))
end_define

begin_define
define|#
directive|define
name|Q81_WORDS_PER_MAC_PROT_ENTRY
value|2
end_define

begin_define
define|#
directive|define
name|Q81_MAC_REG_SIZE
define|\
value|(Q81_MAC_PROTOCOL_REGISTER_WORDS * Q81_WORDS_PER_MAC_PROT_ENTRY)
end_define

begin_define
define|#
directive|define
name|Q81_MAX_SEMAPHORE_FUNCTIONS
value|5
end_define

begin_define
define|#
directive|define
name|Q81_WQC_WORD_SIZE
value|6
end_define

begin_define
define|#
directive|define
name|Q81_NUMBER_OF_WQCS
value|128
end_define

begin_define
define|#
directive|define
name|Q81_WQ_SIZE
value|(Q81_WQC_WORD_SIZE * Q81_NUMBER_OF_WQCS)
end_define

begin_define
define|#
directive|define
name|Q81_CQC_WORD_SIZE
value|13
end_define

begin_define
define|#
directive|define
name|Q81_NUMBER_OF_CQCS
value|128
end_define

begin_define
define|#
directive|define
name|Q81_CQ_SIZE
value|(Q81_CQC_WORD_SIZE * Q81_NUMBER_OF_CQCS)
end_define

begin_struct
struct|struct
name|qls_mpi_coredump
block|{
name|qls_mpid_glbl_hdr_t
name|mpi_global_header
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|core_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|mpi_core_regs
index|[
name|Q81_MPI_CORE_REGS_CNT
index|]
decl_stmt|;
name|uint32_t
name|mpi_core_sh_regs
index|[
name|Q81_MPI_CORE_SH_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|test_logic_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|test_logic_regs
index|[
name|Q81_TEST_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|rmii_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|rmii_regs
index|[
name|Q81_RMII_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|fcmac1_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|fcmac1_regs
index|[
name|Q81_FCMAC_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|fcmac2_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|fcmac2_regs
index|[
name|Q81_FCMAC_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|fc1_mbx_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|fc1_mbx_regs
index|[
name|Q81_FC_MBX_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|ide_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|ide_regs
index|[
name|Q81_IDE_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|nic1_mbx_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|nic1_mbx_regs
index|[
name|Q81_NIC_MBX_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|smbus_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|smbus_regs
index|[
name|Q81_SMBUS_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|fc2_mbx_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|fc2_mbx_regs
index|[
name|Q81_FC_MBX_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|nic2_mbx_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|nic2_mbx_regs
index|[
name|Q81_NIC_MBX_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|i2c_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|i2c_regs
index|[
name|Q81_I2C_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|memc_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|memc_regs
index|[
name|Q81_MEMC_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|pbus_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|pbus_regs
index|[
name|Q81_PBUS_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|mde_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|mde_regs
index|[
name|Q81_MDE_REGS_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xaui1_an_hdr
decl_stmt|;
name|uint32_t
name|serdes1_xaui_an
index|[
literal|14
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xaui1_hss_pcs_hdr
decl_stmt|;
name|uint32_t
name|serdes1_xaui_hss_pcs
index|[
literal|33
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xfi1_an_hdr
decl_stmt|;
name|uint32_t
name|serdes1_xfi_an
index|[
literal|14
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xfi1_train_hdr
decl_stmt|;
name|uint32_t
name|serdes1_xfi_train
index|[
literal|12
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xfi1_hss_pcs_hdr
decl_stmt|;
name|uint32_t
name|serdes1_xfi_hss_pcs
index|[
literal|15
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xfi1_hss_tx_hdr
decl_stmt|;
name|uint32_t
name|serdes1_xfi_hss_tx
index|[
literal|32
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xfi1_hss_rx_hdr
decl_stmt|;
name|uint32_t
name|serdes1_xfi_hss_rx
index|[
literal|32
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xfi1_hss_pll_hdr
decl_stmt|;
name|uint32_t
name|serdes1_xfi_hss_pll
index|[
literal|32
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xaui2_an_hdr
decl_stmt|;
name|uint32_t
name|serdes2_xaui_an
index|[
literal|14
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xaui2_hss_pcs_hdr
decl_stmt|;
name|uint32_t
name|serdes2_xaui_hss_pcs
index|[
literal|33
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xfi2_an_hdr
decl_stmt|;
name|uint32_t
name|serdes2_xfi_an
index|[
literal|14
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xfi2_train_hdr
decl_stmt|;
name|uint32_t
name|serdes2_xfi_train
index|[
literal|12
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xfi2_hss_pcs_hdr
decl_stmt|;
name|uint32_t
name|serdes2_xfi_hss_pcs
index|[
literal|15
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xfi2_hss_tx_hdr
decl_stmt|;
name|uint32_t
name|serdes2_xfi_hss_tx
index|[
literal|32
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xfi2_hss_rx_hdr
decl_stmt|;
name|uint32_t
name|serdes2_xfi_hss_rx
index|[
literal|32
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xfi2_hss_pll_hdr
decl_stmt|;
name|uint32_t
name|serdes2_xfi_hss_pll
index|[
literal|32
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|nic1_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|nic1_regs
index|[
literal|64
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|nic2_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|nic2_regs
index|[
literal|64
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|intr_states_seg_hdr
decl_stmt|;
name|uint32_t
name|intr_states
index|[
name|MAX_RX_RINGS
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xgmac1_seg_hdr
decl_stmt|;
name|uint32_t
name|xgmac1
index|[
name|Q81_XGMAC_REGISTER_END
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|xgmac2_seg_hdr
decl_stmt|;
name|uint32_t
name|xgmac2
index|[
name|Q81_XGMAC_REGISTER_END
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|probe_dump_seg_hdr
decl_stmt|;
name|uint32_t
name|probe_dump
index|[
name|Q81_PROBE_SIZE
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|routing_reg_seg_hdr
decl_stmt|;
name|uint32_t
name|routing_regs
index|[
name|Q81_ROUT_REG_SIZE
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|mac_prot_reg_seg_hdr
decl_stmt|;
name|uint32_t
name|mac_prot_regs
index|[
name|Q81_MAC_REG_SIZE
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|sem_regs_seg_hdr
decl_stmt|;
name|uint32_t
name|sem_regs
index|[
name|Q81_MAX_SEMAPHORE_FUNCTIONS
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|ets_seg_hdr
decl_stmt|;
name|uint32_t
name|ets
index|[
literal|8
operator|+
literal|2
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|wqc1_seg_hdr
decl_stmt|;
name|uint32_t
name|wqc1
index|[
name|Q81_WQ_SIZE
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|cqc1_seg_hdr
decl_stmt|;
name|uint32_t
name|cqc1
index|[
name|Q81_CQ_SIZE
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|wqc2_seg_hdr
decl_stmt|;
name|uint32_t
name|wqc2
index|[
name|Q81_WQ_SIZE
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|cqc2_seg_hdr
decl_stmt|;
name|uint32_t
name|cqc2
index|[
name|Q81_CQ_SIZE
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|code_ram_seg_hdr
decl_stmt|;
name|uint32_t
name|code_ram
index|[
name|Q81_CODE_RAM_CNT
index|]
decl_stmt|;
name|qls_mpid_seg_hdr_t
name|memc_ram_seg_hdr
decl_stmt|;
name|uint32_t
name|memc_ram
index|[
name|Q81_MEMC_RAM_CNT
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|qls_mpi_coredump
name|qls_mpi_coredump_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|Q81_BAD_DATA
value|0xDEADBEEF
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* #ifndef  _QLS_DUMP_H_ */
end_comment

end_unit

