begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2008 Ed Schouten<ed@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_TTYHOOK_H_
end_ifndef

begin_define
define|#
directive|define
name|_SYS_TTYHOOK_H_
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_TTY_H_
end_ifndef

begin_error
error|#
directive|error
literal|"can only be included through<sys/tty.h>"
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_SYS_TTY_H_ */
end_comment

begin_struct_decl
struct_decl|struct
name|tty
struct_decl|;
end_struct_decl

begin_comment
comment|/*  * Hooks interface, which allows to capture and inject traffic into the  * input and output paths of a TTY.  */
end_comment

begin_typedef
typedef|typedef
name|int
name|th_rint_t
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|,
name|char
name|c
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|size_t
name|th_rint_bypass_t
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|,
specifier|const
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
name|th_rint_done_t
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|size_t
name|th_rint_poll_t
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|size_t
name|th_getc_inject_t
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
name|th_getc_capture_t
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|,
specifier|const
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|size_t
name|th_getc_poll_t
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
name|th_close_t
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|ttyhook
block|{
comment|/* Character input. */
name|th_rint_t
modifier|*
name|th_rint
decl_stmt|;
name|th_rint_bypass_t
modifier|*
name|th_rint_bypass
decl_stmt|;
name|th_rint_done_t
modifier|*
name|th_rint_done
decl_stmt|;
name|th_rint_poll_t
modifier|*
name|th_rint_poll
decl_stmt|;
comment|/* Character output. */
name|th_getc_inject_t
modifier|*
name|th_getc_inject
decl_stmt|;
name|th_getc_capture_t
modifier|*
name|th_getc_capture
decl_stmt|;
name|th_getc_poll_t
modifier|*
name|th_getc_poll
decl_stmt|;
name|th_close_t
modifier|*
name|th_close
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|ttyhook_register
parameter_list|(
name|struct
name|tty
modifier|*
modifier|*
parameter_list|,
name|struct
name|proc
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|ttyhook
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ttyhook_unregister
parameter_list|(
name|struct
name|tty
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|ttyhook_softc
parameter_list|(
name|tp
parameter_list|)
value|((tp)->t_hooksoftc)
end_define

begin_define
define|#
directive|define
name|ttyhook_hashook
parameter_list|(
name|tp
parameter_list|,
name|hook
parameter_list|)
value|((tp)->t_hook != NULL&& \ 					(tp)->t_hook->th_ ## hook != NULL)
end_define

begin_function
specifier|static
name|__inline
name|int
name|ttyhook_rint
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|,
name|char
name|c
parameter_list|,
name|int
name|flags
parameter_list|)
block|{
name|tty_lock_assert
argument_list|(
name|tp
argument_list|,
name|MA_OWNED
argument_list|)
expr_stmt|;
name|MPASS
argument_list|(
operator|!
name|tty_gone
argument_list|(
name|tp
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|tp
operator|->
name|t_hook
operator|->
name|th_rint
argument_list|(
name|tp
argument_list|,
name|c
argument_list|,
name|flags
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|size_t
name|ttyhook_rint_bypass
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|,
specifier|const
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
block|{
name|tty_lock_assert
argument_list|(
name|tp
argument_list|,
name|MA_OWNED
argument_list|)
expr_stmt|;
name|MPASS
argument_list|(
operator|!
name|tty_gone
argument_list|(
name|tp
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|tp
operator|->
name|t_hook
operator|->
name|th_rint_bypass
argument_list|(
name|tp
argument_list|,
name|buf
argument_list|,
name|len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|ttyhook_rint_done
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|)
block|{
name|tty_lock_assert
argument_list|(
name|tp
argument_list|,
name|MA_OWNED
argument_list|)
expr_stmt|;
name|MPASS
argument_list|(
operator|!
name|tty_gone
argument_list|(
name|tp
argument_list|)
argument_list|)
expr_stmt|;
name|tp
operator|->
name|t_hook
operator|->
name|th_rint_done
argument_list|(
name|tp
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|size_t
name|ttyhook_rint_poll
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|)
block|{
name|tty_lock_assert
argument_list|(
name|tp
argument_list|,
name|MA_OWNED
argument_list|)
expr_stmt|;
name|MPASS
argument_list|(
operator|!
name|tty_gone
argument_list|(
name|tp
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|tp
operator|->
name|t_hook
operator|->
name|th_rint_poll
argument_list|(
name|tp
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|size_t
name|ttyhook_getc_inject
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
block|{
name|tty_lock_assert
argument_list|(
name|tp
argument_list|,
name|MA_OWNED
argument_list|)
expr_stmt|;
name|MPASS
argument_list|(
operator|!
name|tty_gone
argument_list|(
name|tp
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|tp
operator|->
name|t_hook
operator|->
name|th_getc_inject
argument_list|(
name|tp
argument_list|,
name|buf
argument_list|,
name|len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|ttyhook_getc_capture
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|,
specifier|const
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
block|{
name|tty_lock_assert
argument_list|(
name|tp
argument_list|,
name|MA_OWNED
argument_list|)
expr_stmt|;
name|MPASS
argument_list|(
operator|!
name|tty_gone
argument_list|(
name|tp
argument_list|)
argument_list|)
expr_stmt|;
name|tp
operator|->
name|t_hook
operator|->
name|th_getc_capture
argument_list|(
name|tp
argument_list|,
name|buf
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|size_t
name|ttyhook_getc_poll
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|)
block|{
name|tty_lock_assert
argument_list|(
name|tp
argument_list|,
name|MA_OWNED
argument_list|)
expr_stmt|;
name|MPASS
argument_list|(
operator|!
name|tty_gone
argument_list|(
name|tp
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|tp
operator|->
name|t_hook
operator|->
name|th_getc_poll
argument_list|(
name|tp
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|ttyhook_close
parameter_list|(
name|struct
name|tty
modifier|*
name|tp
parameter_list|)
block|{
name|tty_lock_assert
argument_list|(
name|tp
argument_list|,
name|MA_OWNED
argument_list|)
expr_stmt|;
name|tp
operator|->
name|t_hook
operator|->
name|th_close
argument_list|(
name|tp
argument_list|)
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_SYS_TTYHOOK_H_ */
end_comment

end_unit

