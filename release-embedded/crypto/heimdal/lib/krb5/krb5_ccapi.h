begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2004 Kungliga Tekniska HÃ¶gskolan  * (Royal Institute of Technology, Stockholm, Sweden).  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * 3. Neither the name of the Institute nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_comment
comment|/* $Id$ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|KRB5_CCAPI_H
end_ifndef

begin_define
define|#
directive|define
name|KRB5_CCAPI_H
value|1
end_define

begin_include
include|#
directive|include
file|<krb5-types.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__APPLE__
end_ifdef

begin_pragma
pragma|#
directive|pragma
name|pack
name|(
name|push
name|,
name|2
name|)
end_pragma

begin_endif
endif|#
directive|endif
end_endif

begin_enum
enum|enum
block|{
name|cc_credentials_v5
init|=
literal|2
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|ccapi_version_3
init|=
literal|3
block|,
name|ccapi_version_4
init|=
literal|4
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|ccNoError
init|=
literal|0
block|,
name|ccIteratorEnd
init|=
literal|201
block|,
name|ccErrBadParam
block|,
name|ccErrNoMem
block|,
name|ccErrInvalidContext
block|,
name|ccErrInvalidCCache
block|,
name|ccErrInvalidString
block|,
comment|/* 206 */
name|ccErrInvalidCredentials
block|,
name|ccErrInvalidCCacheIterator
block|,
name|ccErrInvalidCredentialsIterator
block|,
name|ccErrInvalidLock
block|,
name|ccErrBadName
block|,
comment|/* 211 */
name|ccErrBadCredentialsVersion
block|,
name|ccErrBadAPIVersion
block|,
name|ccErrContextLocked
block|,
name|ccErrContextUnlocked
block|,
name|ccErrCCacheLocked
block|,
comment|/* 216 */
name|ccErrCCacheUnlocked
block|,
name|ccErrBadLockType
block|,
name|ccErrNeverDefault
block|,
name|ccErrCredentialsNotFound
block|,
name|ccErrCCacheNotFound
block|,
comment|/* 221 */
name|ccErrContextNotFound
block|,
name|ccErrServerUnavailable
block|,
name|ccErrServerInsecure
block|,
name|ccErrServerCantBecomeUID
block|,
name|ccErrTimeOffsetNotSet
comment|/* 226 */
block|}
enum|;
end_enum

begin_typedef
typedef|typedef
name|int32_t
name|cc_int32
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|uint32_t
name|cc_uint32
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|cc_context_t
modifier|*
name|cc_context_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|cc_ccache_t
modifier|*
name|cc_ccache_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|cc_ccache_iterator_t
modifier|*
name|cc_ccache_iterator_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|cc_credentials_v5_t
name|cc_credentials_v5_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|cc_credentials_t
modifier|*
name|cc_credentials_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|cc_credentials_iterator_t
modifier|*
name|cc_credentials_iterator_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|cc_string_t
modifier|*
name|cc_string_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|cc_uint32
name|cc_time_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|cc_data
block|{
name|cc_uint32
name|type
decl_stmt|;
name|cc_uint32
name|length
decl_stmt|;
name|void
modifier|*
name|data
decl_stmt|;
block|}
name|cc_data
typedef|;
end_typedef

begin_struct
struct|struct
name|cc_credentials_v5_t
block|{
name|char
modifier|*
name|client
decl_stmt|;
name|char
modifier|*
name|server
decl_stmt|;
name|cc_data
name|keyblock
decl_stmt|;
name|cc_time_t
name|authtime
decl_stmt|;
name|cc_time_t
name|starttime
decl_stmt|;
name|cc_time_t
name|endtime
decl_stmt|;
name|cc_time_t
name|renew_till
decl_stmt|;
name|cc_uint32
name|is_skey
decl_stmt|;
name|cc_uint32
name|ticket_flags
decl_stmt|;
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_FORWARDABLE
value|0x40000000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_FORWARDED
value|0x20000000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_PROXIABLE
value|0x10000000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_PROXY
value|0x08000000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_MAY_POSTDATE
value|0x04000000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_POSTDATED
value|0x02000000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_INVALID
value|0x01000000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_RENEWABLE
value|0x00800000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_INITIAL
value|0x00400000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_PRE_AUTH
value|0x00200000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_HW_AUTH
value|0x00100000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_TRANSIT_POLICY_CHECKED
value|0x00080000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_OK_AS_DELEGATE
value|0x00040000
define|#
directive|define
name|KRB5_CCAPI_TKT_FLG_ANONYMOUS
value|0x00020000
name|cc_data
modifier|*
modifier|*
name|addresses
decl_stmt|;
name|cc_data
name|ticket
decl_stmt|;
name|cc_data
name|second_ticket
decl_stmt|;
name|cc_data
modifier|*
modifier|*
name|authdata
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
struct|struct
name|cc_string_functions
block|{
name|cc_int32
function_decl|(
modifier|*
name|release
function_decl|)
parameter_list|(
name|cc_string_t
parameter_list|)
function_decl|;
block|}
name|cc_string_functions
typedef|;
end_typedef

begin_struct
struct|struct
name|cc_string_t
block|{
specifier|const
name|char
modifier|*
name|data
decl_stmt|;
specifier|const
name|cc_string_functions
modifier|*
name|func
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
struct|struct
name|cc_credentials_union
block|{
name|cc_int32
name|version
decl_stmt|;
union|union
block|{
name|cc_credentials_v5_t
modifier|*
name|credentials_v5
decl_stmt|;
block|}
name|credentials
union|;
block|}
name|cc_credentials_union
typedef|;
end_typedef

begin_struct
struct|struct
name|cc_credentials_functions
block|{
name|cc_int32
function_decl|(
modifier|*
name|release
function_decl|)
parameter_list|(
name|cc_credentials_t
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|compare
function_decl|)
parameter_list|(
name|cc_credentials_t
parameter_list|,
name|cc_credentials_t
parameter_list|,
name|cc_uint32
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cc_credentials_t
block|{
specifier|const
name|cc_credentials_union
modifier|*
name|data
decl_stmt|;
specifier|const
name|struct
name|cc_credentials_functions
modifier|*
name|func
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cc_credentials_iterator_functions
block|{
name|cc_int32
function_decl|(
modifier|*
name|release
function_decl|)
parameter_list|(
name|cc_credentials_iterator_t
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|next
function_decl|)
parameter_list|(
name|cc_credentials_iterator_t
parameter_list|,
name|cc_credentials_t
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cc_credentials_iterator_t
block|{
specifier|const
name|struct
name|cc_credentials_iterator_functions
modifier|*
name|func
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cc_ccache_iterator_functions
block|{
name|cc_int32
function_decl|(
modifier|*
name|release
function_decl|)
parameter_list|(
name|cc_ccache_iterator_t
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|next
function_decl|)
parameter_list|(
name|cc_ccache_iterator_t
parameter_list|,
name|cc_ccache_t
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cc_ccache_iterator_t
block|{
specifier|const
name|struct
name|cc_ccache_iterator_functions
modifier|*
name|func
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
struct|struct
name|cc_ccache_functions
block|{
name|cc_int32
function_decl|(
modifier|*
name|release
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|destroy
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|set_default
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|get_credentials_version
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_uint32
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|get_name
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_string_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|get_principal
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_uint32
parameter_list|,
name|cc_string_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|set_principal
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_uint32
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|store_credentials
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
specifier|const
name|cc_credentials_union
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|remove_credentials
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_credentials_t
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|new_credentials_iterator
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_credentials_iterator_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|move
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_ccache_t
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|lock
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_uint32
parameter_list|,
name|cc_uint32
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|unlock
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|get_last_default_time
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_time_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|get_change_time
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_time_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|compare
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_ccache_t
parameter_list|,
name|cc_uint32
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|get_kdc_time_offset
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_int32
parameter_list|,
name|cc_time_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|set_kdc_time_offset
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_int32
parameter_list|,
name|cc_time_t
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|clear_kdc_time_offset
function_decl|)
parameter_list|(
name|cc_ccache_t
parameter_list|,
name|cc_int32
parameter_list|)
function_decl|;
block|}
name|cc_ccache_functions
typedef|;
end_typedef

begin_struct
struct|struct
name|cc_ccache_t
block|{
specifier|const
name|cc_ccache_functions
modifier|*
name|func
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cc_context_functions
block|{
name|cc_int32
function_decl|(
modifier|*
name|release
function_decl|)
parameter_list|(
name|cc_context_t
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|get_change_time
function_decl|)
parameter_list|(
name|cc_context_t
parameter_list|,
name|cc_time_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|get_default_ccache_name
function_decl|)
parameter_list|(
name|cc_context_t
parameter_list|,
name|cc_string_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|open_ccache
function_decl|)
parameter_list|(
name|cc_context_t
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|cc_ccache_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|open_default_ccache
function_decl|)
parameter_list|(
name|cc_context_t
parameter_list|,
name|cc_ccache_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|create_ccache
function_decl|)
parameter_list|(
name|cc_context_t
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|cc_uint32
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|cc_ccache_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|create_default_ccache
function_decl|)
parameter_list|(
name|cc_context_t
parameter_list|,
name|cc_uint32
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|cc_ccache_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|create_new_ccache
function_decl|)
parameter_list|(
name|cc_context_t
parameter_list|,
name|cc_uint32
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|cc_ccache_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|new_ccache_iterator
function_decl|)
parameter_list|(
name|cc_context_t
parameter_list|,
name|cc_ccache_iterator_t
modifier|*
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|lock
function_decl|)
parameter_list|(
name|cc_context_t
parameter_list|,
name|cc_uint32
parameter_list|,
name|cc_uint32
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|unlock
function_decl|)
parameter_list|(
name|cc_context_t
parameter_list|)
function_decl|;
name|cc_int32
function_decl|(
modifier|*
name|compare
function_decl|)
parameter_list|(
name|cc_context_t
parameter_list|,
name|cc_context_t
parameter_list|,
name|cc_uint32
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cc_context_t
block|{
specifier|const
name|struct
name|cc_context_functions
modifier|*
name|func
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|cc_int32
function_decl|(
modifier|*
name|cc_initialize_func
function_decl|)
parameter_list|(
name|cc_context_t
modifier|*
parameter_list|,
name|cc_int32
parameter_list|,
name|cc_int32
modifier|*
parameter_list|,
name|char
specifier|const
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_ifdef
ifdef|#
directive|ifdef
name|__APPLE__
end_ifdef

begin_pragma
pragma|#
directive|pragma
name|pack
name|(
name|pop
name|)
end_pragma

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* KRB5_CCAPI_H */
end_comment

end_unit

