begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2010 Kungliga Tekniska HÃ¶gskolan  * (Royal Institute of Technology, Stockholm, Sweden).  * All rights reserved.  *  * Portions Copyright (c) 2010 Apple Inc. All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * 3. Neither the name of the Institute nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|heim_type_init
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|heim_object_t
function_decl|(
modifier|*
name|heim_type_copy
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|heim_type_cmp
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|unsigned
name|long
function_decl|(
modifier|*
name|heim_type_hash
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|heim_type_data
modifier|*
name|heim_type_t
typedef|;
end_typedef

begin_enum
enum|enum
block|{
name|HEIM_TID_NUMBER
init|=
literal|0
block|,
name|HEIM_TID_NULL
init|=
literal|1
block|,
name|HEIM_TID_BOOL
init|=
literal|2
block|,
name|HEIM_TID_TAGGED_UNUSED2
init|=
literal|3
block|,
name|HEIM_TID_TAGGED_UNUSED3
init|=
literal|4
block|,
name|HEIM_TID_TAGGED_UNUSED4
init|=
literal|5
block|,
name|HEIM_TID_TAGGED_UNUSED5
init|=
literal|6
block|,
name|HEIM_TID_TAGGED_UNUSED6
init|=
literal|7
block|,
name|HEIM_TID_MEMORY
init|=
literal|128
block|,
name|HEIM_TID_ARRAY
init|=
literal|129
block|,
name|HEIM_TID_DICT
init|=
literal|130
block|,
name|HEIM_TID_STRING
init|=
literal|131
block|,
name|HEIM_TID_AUTORELEASE
init|=
literal|132
block|,
name|HEIM_TID_USER
init|=
literal|255
block|}
enum|;
end_enum

begin_struct
struct|struct
name|heim_type_data
block|{
name|heim_tid_t
name|tid
decl_stmt|;
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|heim_type_init
name|init
decl_stmt|;
name|heim_type_dealloc
name|dealloc
decl_stmt|;
name|heim_type_copy
name|copy
decl_stmt|;
name|heim_type_cmp
name|cmp
decl_stmt|;
name|heim_type_hash
name|hash
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|heim_type_t
name|_heim_get_isa
parameter_list|(
name|heim_object_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|heim_type_t
name|_heim_create_type
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|heim_type_init
name|init
parameter_list|,
name|heim_type_dealloc
name|dealloc
parameter_list|,
name|heim_type_copy
name|copy
parameter_list|,
name|heim_type_cmp
name|cmp
parameter_list|,
name|heim_type_hash
name|hash
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|heim_object_t
name|_heim_alloc_object
parameter_list|(
name|heim_type_t
name|type
parameter_list|,
name|size_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|heim_tid_t
name|_heim_type_get_tid
parameter_list|(
name|heim_type_t
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* tagged tid */
end_comment

begin_decl_stmt
specifier|extern
name|struct
name|heim_type_data
name|_heim_null_object
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|heim_type_data
name|_heim_bool_object
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|heim_type_data
name|_heim_number_object
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|heim_type_data
name|_heim_string_object
decl_stmt|;
end_decl_stmt

end_unit

