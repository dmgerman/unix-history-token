begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $OpenBSD: kex.h,v 1.56 2013/07/19 07:37:48 markus Exp $ */
end_comment

begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/*  * Copyright (c) 2000, 2001 Markus Friedl.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|KEX_H
end_ifndef

begin_define
define|#
directive|define
name|KEX_H
end_define

begin_include
include|#
directive|include
file|<signal.h>
end_include

begin_include
include|#
directive|include
file|<openssl/evp.h>
end_include

begin_include
include|#
directive|include
file|<openssl/hmac.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|OPENSSL_HAS_ECC
end_ifdef

begin_include
include|#
directive|include
file|<openssl/ec.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|KEX_COOKIE_LEN
value|16
end_define

begin_define
define|#
directive|define
name|KEX_DH1
value|"diffie-hellman-group1-sha1"
end_define

begin_define
define|#
directive|define
name|KEX_DH14
value|"diffie-hellman-group14-sha1"
end_define

begin_define
define|#
directive|define
name|KEX_DHGEX_SHA1
value|"diffie-hellman-group-exchange-sha1"
end_define

begin_define
define|#
directive|define
name|KEX_DHGEX_SHA256
value|"diffie-hellman-group-exchange-sha256"
end_define

begin_define
define|#
directive|define
name|KEX_RESUME
value|"resume@appgate.com"
end_define

begin_define
define|#
directive|define
name|KEX_ECDH_SHA2_NISTP256
value|"ecdh-sha2-nistp256"
end_define

begin_define
define|#
directive|define
name|KEX_ECDH_SHA2_NISTP384
value|"ecdh-sha2-nistp384"
end_define

begin_define
define|#
directive|define
name|KEX_ECDH_SHA2_NISTP521
value|"ecdh-sha2-nistp521"
end_define

begin_define
define|#
directive|define
name|COMP_NONE
value|0
end_define

begin_define
define|#
directive|define
name|COMP_ZLIB
value|1
end_define

begin_define
define|#
directive|define
name|COMP_DELAYED
value|2
end_define

begin_enum
enum|enum
name|kex_init_proposals
block|{
name|PROPOSAL_KEX_ALGS
block|,
name|PROPOSAL_SERVER_HOST_KEY_ALGS
block|,
name|PROPOSAL_ENC_ALGS_CTOS
block|,
name|PROPOSAL_ENC_ALGS_STOC
block|,
name|PROPOSAL_MAC_ALGS_CTOS
block|,
name|PROPOSAL_MAC_ALGS_STOC
block|,
name|PROPOSAL_COMP_ALGS_CTOS
block|,
name|PROPOSAL_COMP_ALGS_STOC
block|,
name|PROPOSAL_LANG_CTOS
block|,
name|PROPOSAL_LANG_STOC
block|,
name|PROPOSAL_MAX
block|}
enum|;
end_enum

begin_enum
enum|enum
name|kex_modes
block|{
name|MODE_IN
block|,
name|MODE_OUT
block|,
name|MODE_MAX
block|}
enum|;
end_enum

begin_enum
enum|enum
name|kex_exchange
block|{
name|KEX_DH_GRP1_SHA1
block|,
name|KEX_DH_GRP14_SHA1
block|,
name|KEX_DH_GEX_SHA1
block|,
name|KEX_DH_GEX_SHA256
block|,
name|KEX_ECDH_SHA2
block|,
name|KEX_MAX
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|KEX_INIT_SENT
value|0x0001
end_define

begin_typedef
typedef|typedef
name|struct
name|Kex
name|Kex
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|Mac
name|Mac
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|Comp
name|Comp
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|Enc
name|Enc
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|Newkeys
name|Newkeys
typedef|;
end_typedef

begin_struct
struct|struct
name|Enc
block|{
name|char
modifier|*
name|name
decl_stmt|;
specifier|const
name|Cipher
modifier|*
name|cipher
decl_stmt|;
name|int
name|enabled
decl_stmt|;
name|u_int
name|key_len
decl_stmt|;
name|u_int
name|iv_len
decl_stmt|;
name|u_int
name|block_size
decl_stmt|;
name|u_char
modifier|*
name|key
decl_stmt|;
name|u_char
modifier|*
name|iv
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|Mac
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|int
name|enabled
decl_stmt|;
name|u_int
name|mac_len
decl_stmt|;
name|u_char
modifier|*
name|key
decl_stmt|;
name|u_int
name|key_len
decl_stmt|;
name|int
name|type
decl_stmt|;
name|int
name|etm
decl_stmt|;
comment|/* Encrypt-then-MAC */
specifier|const
name|EVP_MD
modifier|*
name|evp_md
decl_stmt|;
name|HMAC_CTX
name|evp_ctx
decl_stmt|;
name|struct
name|umac_ctx
modifier|*
name|umac_ctx
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|Comp
block|{
name|int
name|type
decl_stmt|;
name|int
name|enabled
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|Newkeys
block|{
name|Enc
name|enc
decl_stmt|;
name|Mac
name|mac
decl_stmt|;
name|Comp
name|comp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|Kex
block|{
name|u_char
modifier|*
name|session_id
decl_stmt|;
name|u_int
name|session_id_len
decl_stmt|;
name|Newkeys
modifier|*
name|newkeys
index|[
name|MODE_MAX
index|]
decl_stmt|;
name|u_int
name|we_need
decl_stmt|;
name|int
name|server
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
name|int
name|hostkey_type
decl_stmt|;
name|int
name|kex_type
decl_stmt|;
name|int
name|roaming
decl_stmt|;
name|Buffer
name|my
decl_stmt|;
name|Buffer
name|peer
decl_stmt|;
name|sig_atomic_t
name|done
decl_stmt|;
name|int
name|flags
decl_stmt|;
specifier|const
name|EVP_MD
modifier|*
name|evp_md
decl_stmt|;
name|int
name|ec_nid
decl_stmt|;
name|char
modifier|*
name|client_version_string
decl_stmt|;
name|char
modifier|*
name|server_version_string
decl_stmt|;
name|int
function_decl|(
modifier|*
name|verify_host_key
function_decl|)
parameter_list|(
name|Key
modifier|*
parameter_list|)
function_decl|;
name|Key
modifier|*
function_decl|(
modifier|*
name|load_host_public_key
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|Key
modifier|*
function_decl|(
modifier|*
name|load_host_private_key
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|host_key_index
function_decl|)
parameter_list|(
name|Key
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sign
function_decl|)
parameter_list|(
name|Key
modifier|*
parameter_list|,
name|Key
modifier|*
parameter_list|,
name|u_char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|u_int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|kex
index|[
name|KEX_MAX
index|]
function_decl|)
parameter_list|(
name|Kex
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|kex_names_valid
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|kex_alg_list
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|NONE_CIPHER_ENABLED
end_ifdef

begin_function_decl
name|void
name|kex_prop2buf
parameter_list|(
name|Buffer
modifier|*
parameter_list|,
name|char
modifier|*
index|[
name|PROPOSAL_MAX
index|]
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|Kex
modifier|*
name|kex_setup
parameter_list|(
name|char
modifier|*
index|[
name|PROPOSAL_MAX
index|]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kex_finish
parameter_list|(
name|Kex
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kex_send_kexinit
parameter_list|(
name|Kex
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kex_input_kexinit
parameter_list|(
name|int
parameter_list|,
name|u_int32_t
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kex_derive_keys
parameter_list|(
name|Kex
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Newkeys
modifier|*
name|kex_get_newkeys
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kexdh_client
parameter_list|(
name|Kex
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kexdh_server
parameter_list|(
name|Kex
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kexgex_client
parameter_list|(
name|Kex
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kexgex_server
parameter_list|(
name|Kex
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kexecdh_client
parameter_list|(
name|Kex
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kexecdh_server
parameter_list|(
name|Kex
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kex_dh_hash
parameter_list|(
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|u_char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kexgex_hash
parameter_list|(
specifier|const
name|EVP_MD
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|u_char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|OPENSSL_HAS_ECC
end_ifdef

begin_function_decl
name|void
name|kex_ecdh_hash
parameter_list|(
specifier|const
name|EVP_MD
modifier|*
parameter_list|,
specifier|const
name|EC_GROUP
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|EC_POINT
modifier|*
parameter_list|,
specifier|const
name|EC_POINT
modifier|*
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
parameter_list|,
name|u_char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|derive_ssh1_session_id
parameter_list|(
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|u_int8_t
index|[
literal|8
index|]
parameter_list|,
name|u_int8_t
index|[
literal|16
index|]
parameter_list|)
function_decl|;
end_function_decl

begin_if
if|#
directive|if
name|defined
argument_list|(
name|DEBUG_KEX
argument_list|)
operator|||
name|defined
argument_list|(
name|DEBUG_KEXDH
argument_list|)
operator|||
name|defined
argument_list|(
name|DEBUG_KEXECDH
argument_list|)
end_if

begin_function_decl
name|void
name|dump_digest
parameter_list|(
name|char
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

