begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Frame unwinder for frames with DWARF Call Frame Information.     Copyright 2003, 2004 Free Software Foundation, Inc.     Contributed by Mark Kettenis.     This file is part of GDB.     This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2 of the License, or    (at your option) any later version.     This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 59 Temple Place - Suite 330,    Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|DWARF2_FRAME_H
end_ifndef

begin_define
define|#
directive|define
name|DWARF2_FRAME_H
value|1
end_define

begin_struct_decl
struct_decl|struct
name|gdbarch
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|objfile
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|frame_info
struct_decl|;
end_struct_decl

begin_comment
comment|/* Register rule.  */
end_comment

begin_enum
enum|enum
name|dwarf2_frame_reg_rule
block|{
comment|/* Make certain that 0 maps onto the correct enum value; the      corresponding structure is being initialized using memset zero.      This indicates that CFI didn't provide any information at all      about a register, leaving how to obtain its value totally      unspecified.  */
name|DWARF2_FRAME_REG_UNSPECIFIED
init|=
literal|0
block|,
comment|/* The term "undefined" comes from the DWARF2 CFI spec which this      code is moddeling; it indicates that the register's value is      "undefined".  GCC uses the less formal term "unsaved".  Its      definition is a combination of REG_UNDEFINED and REG_UNSPECIFIED.      The failure to differentiate the two helps explain a few problems      with the CFI generated by GCC.  */
name|DWARF2_FRAME_REG_UNDEFINED
block|,
name|DWARF2_FRAME_REG_SAVED_OFFSET
block|,
name|DWARF2_FRAME_REG_SAVED_REG
block|,
name|DWARF2_FRAME_REG_SAVED_EXP
block|,
name|DWARF2_FRAME_REG_SAME_VALUE
block|,
comment|/* These aren't defined by the DWARF2 CFI specification, but are      used internally by GDB.  */
name|DWARF2_FRAME_REG_RA
block|,
comment|/* Return Address.  */
name|DWARF2_FRAME_REG_CFA
comment|/* Call Frame Address.  */
block|}
enum|;
end_enum

begin_comment
comment|/* Register state.  */
end_comment

begin_struct
struct|struct
name|dwarf2_frame_state_reg
block|{
comment|/* Each register save state can be described in terms of a CFA slot,      another register, or a location expression.  */
union|union
block|{
name|LONGEST
name|offset
decl_stmt|;
name|ULONGEST
name|reg
decl_stmt|;
name|unsigned
name|char
modifier|*
name|exp
decl_stmt|;
block|}
name|loc
union|;
name|ULONGEST
name|exp_len
decl_stmt|;
name|enum
name|dwarf2_frame_reg_rule
name|how
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Set the architecture-specific register state initialization    function for GDBARCH to INIT_REG.  */
end_comment

begin_function_decl
specifier|extern
name|void
name|dwarf2_frame_set_init_reg
parameter_list|(
name|struct
name|gdbarch
modifier|*
name|gdbarch
parameter_list|,
name|void
function_decl|(
modifier|*
name|init_reg
function_decl|)
parameter_list|(
name|struct
name|gdbarch
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|dwarf2_frame_state_reg
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Return the frame unwind methods for the function that contains PC,    or NULL if it can't be handled by DWARF CFI frame unwinder.  */
end_comment

begin_function_decl
specifier|extern
specifier|const
name|struct
name|frame_unwind
modifier|*
name|dwarf2_frame_sniffer
parameter_list|(
name|struct
name|frame_info
modifier|*
name|next_frame
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Return the frame base methods for the function that contains PC, or    NULL if it can't be handled by the DWARF CFI frame unwinder.  */
end_comment

begin_function_decl
specifier|extern
specifier|const
name|struct
name|frame_base
modifier|*
name|dwarf2_frame_base_sniffer
parameter_list|(
name|struct
name|frame_info
modifier|*
name|next_frame
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Register the DWARF CFI for OBJFILE.  */
end_comment

begin_function_decl
name|void
name|dwarf2_frame_build_info
parameter_list|(
name|struct
name|objfile
modifier|*
name|objfile
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* dwarf2-frame.h */
end_comment

end_unit

