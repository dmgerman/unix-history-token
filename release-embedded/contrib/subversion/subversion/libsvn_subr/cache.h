begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * cache.h: cache vtable interface  *  * ====================================================================  *    Licensed to the Apache Software Foundation (ASF) under one  *    or more contributor license agreements.  See the NOTICE file  *    distributed with this work for additional information  *    regarding copyright ownership.  The ASF licenses this file  *    to you under the Apache License, Version 2.0 (the  *    "License"); you may not use this file except in compliance  *    with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *    Unless required by applicable law or agreed to in writing,  *    software distributed under the License is distributed on an  *    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *    KIND, either express or implied.  See the License for the  *    specific language governing permissions and limitations  *    under the License.  * ====================================================================  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SVN_LIBSVN_SUBR_CACHE_H
end_ifndef

begin_define
define|#
directive|define
name|SVN_LIBSVN_SUBR_CACHE_H
end_define

begin_include
include|#
directive|include
file|"private/svn_cache.h"
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* __cplusplus */
typedef|typedef
struct|struct
name|svn_cache__vtable_t
block|{
comment|/* See svn_cache__get(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get
function_decl|)
parameter_list|(
name|void
modifier|*
modifier|*
name|value
parameter_list|,
name|svn_boolean_t
modifier|*
name|found
parameter_list|,
name|void
modifier|*
name|cache_implementation
parameter_list|,
specifier|const
name|void
modifier|*
name|key
parameter_list|,
name|apr_pool_t
modifier|*
name|result_pool
parameter_list|)
function_decl|;
comment|/* See svn_cache__set(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|set
function_decl|)
parameter_list|(
name|void
modifier|*
name|cache_implementation
parameter_list|,
specifier|const
name|void
modifier|*
name|key
parameter_list|,
name|void
modifier|*
name|value
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
comment|/* See svn_cache__iter(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|iter
function_decl|)
parameter_list|(
name|svn_boolean_t
modifier|*
name|completed
parameter_list|,
name|void
modifier|*
name|cache_implementation
parameter_list|,
name|svn_iter_apr_hash_cb_t
name|func
parameter_list|,
name|void
modifier|*
name|baton
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
comment|/* See svn_cache__is_cachable(). */
name|svn_boolean_t
function_decl|(
modifier|*
name|is_cachable
function_decl|)
parameter_list|(
name|void
modifier|*
name|cache_implementation
parameter_list|,
name|apr_size_t
name|size
parameter_list|)
function_decl|;
comment|/* See svn_cache__get_partial(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_partial
function_decl|)
parameter_list|(
name|void
modifier|*
modifier|*
name|value
parameter_list|,
name|svn_boolean_t
modifier|*
name|found
parameter_list|,
name|void
modifier|*
name|cache_implementation
parameter_list|,
specifier|const
name|void
modifier|*
name|key
parameter_list|,
name|svn_cache__partial_getter_func_t
name|func
parameter_list|,
name|void
modifier|*
name|baton
parameter_list|,
name|apr_pool_t
modifier|*
name|result_pool
parameter_list|)
function_decl|;
comment|/* See svn_cache__set_partial(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|set_partial
function_decl|)
parameter_list|(
name|void
modifier|*
name|cache_implementation
parameter_list|,
specifier|const
name|void
modifier|*
name|key
parameter_list|,
name|svn_cache__partial_setter_func_t
name|func
parameter_list|,
name|void
modifier|*
name|baton
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
comment|/* See svn_cache__get_info(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_info
function_decl|)
parameter_list|(
name|void
modifier|*
name|cache_implementation
parameter_list|,
name|svn_cache__info_t
modifier|*
name|info
parameter_list|,
name|svn_boolean_t
name|reset
parameter_list|,
name|apr_pool_t
modifier|*
name|result_pool
parameter_list|)
function_decl|;
block|}
name|svn_cache__vtable_t
typedef|;
struct|struct
name|svn_cache__t
block|{
specifier|const
name|svn_cache__vtable_t
modifier|*
name|vtable
decl_stmt|;
comment|/* See svn_cache__set_error_handler(). */
name|svn_cache__error_handler_t
name|error_handler
decl_stmt|;
name|void
modifier|*
name|error_baton
decl_stmt|;
comment|/* Private data for the cache implementation. */
name|void
modifier|*
name|cache_internal
decl_stmt|;
comment|/* Total number of calls to getters. */
name|apr_uint64_t
name|reads
decl_stmt|;
comment|/* Total number of calls to set(). */
name|apr_uint64_t
name|writes
decl_stmt|;
comment|/* Total number of getter calls that returned a cached item. */
name|apr_uint64_t
name|hits
decl_stmt|;
comment|/* Total number of function calls that returned an error. */
name|apr_uint64_t
name|failures
decl_stmt|;
block|}
struct|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __cplusplus */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* SVN_LIBSVN_SUBR_CACHE_H */
end_comment

end_unit

