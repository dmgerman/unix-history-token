begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* This file is automatically generated from wc-metadata.sql and .dist_sandbox/subversion-1.8.5/subversion/libsvn_wc/token-map.h.  * Do not edit this file -- edit the source and rerun gen-make.py */
end_comment

begin_define
define|#
directive|define
name|STMT_CREATE_SCHEMA
value|0
end_define

begin_define
define|#
directive|define
name|STMT_0_INFO
value|{"STMT_CREATE_SCHEMA", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_0
define|\
value|"CREATE TABLE REPOSITORY ( " \   "  id INTEGER PRIMARY KEY AUTOINCREMENT, " \   "  root  TEXT UNIQUE NOT NULL, " \   "  uuid  TEXT NOT NULL " \   "  ); " \   "CREATE INDEX I_UUID ON REPOSITORY (uuid); " \   "CREATE INDEX I_ROOT ON REPOSITORY (root); " \   "CREATE TABLE WCROOT ( " \   "  id  INTEGER PRIMARY KEY AUTOINCREMENT, " \   "  local_abspath  TEXT UNIQUE " \   "  ); " \   "CREATE UNIQUE INDEX I_LOCAL_ABSPATH ON WCROOT (local_abspath); " \   "CREATE TABLE PRISTINE ( " \   "  checksum  TEXT NOT NULL PRIMARY KEY, " \   "  compression  INTEGER, " \   "  size  INTEGER NOT NULL, " \   "  refcount  INTEGER NOT NULL, " \   "  md5_checksum  TEXT NOT NULL " \   "  ); " \   "CREATE INDEX I_PRISTINE_MD5 ON PRISTINE (md5_checksum); " \   "CREATE TABLE ACTUAL_NODE ( " \   "  wc_id  INTEGER NOT NULL REFERENCES WCROOT (id), " \   "  local_relpath  TEXT NOT NULL, " \   "  parent_relpath  TEXT, " \   "  properties  BLOB, " \   "  conflict_old  TEXT, " \   "  conflict_new  TEXT, " \   "  conflict_working  TEXT, " \   "  prop_reject  TEXT, " \   "  changelist  TEXT, " \   "  text_mod  TEXT, " \   "  tree_conflict_data  TEXT, " \   "  conflict_data  BLOB, " \   "  older_checksum  TEXT REFERENCES PRISTINE (checksum), " \   "  left_checksum  TEXT REFERENCES PRISTINE (checksum), " \   "  right_checksum  TEXT REFERENCES PRISTINE (checksum), " \   "  PRIMARY KEY (wc_id, local_relpath) " \   "  ); " \   "CREATE UNIQUE INDEX I_ACTUAL_PARENT ON ACTUAL_NODE (wc_id, parent_relpath, " \   "                                                    local_relpath); " \   "CREATE TABLE LOCK ( " \   "  repos_id  INTEGER NOT NULL REFERENCES REPOSITORY (id), " \   "  repos_relpath  TEXT NOT NULL, " \   "  lock_token  TEXT NOT NULL, " \   "  lock_owner  TEXT, " \   "  lock_comment  TEXT, " \   "  lock_date  INTEGER, " \   "  PRIMARY KEY (repos_id, repos_relpath) " \   "  ); " \   "CREATE TABLE WORK_QUEUE ( " \   "  id  INTEGER PRIMARY KEY AUTOINCREMENT, " \   "  work  BLOB NOT NULL " \   "  ); " \   "CREATE TABLE WC_LOCK ( " \   "  wc_id  INTEGER NOT NULL  REFERENCES WCROOT (id), " \   "  local_dir_relpath  TEXT NOT NULL, " \   "  locked_levels  INTEGER NOT NULL DEFAULT -1, " \   "  PRIMARY KEY (wc_id, local_dir_relpath) " \   " ); " \   "PRAGMA user_version = " \   APR_STRINGIFY(SVN_WC__VERSION) \   "; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_CREATE_NODES
value|1
end_define

begin_define
define|#
directive|define
name|STMT_1_INFO
value|{"STMT_CREATE_NODES", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_1
define|\
value|"CREATE TABLE NODES ( " \   "  wc_id  INTEGER NOT NULL REFERENCES WCROOT (id), " \   "  local_relpath  TEXT NOT NULL, " \   "  op_depth INTEGER NOT NULL, " \   "  parent_relpath  TEXT, " \   "  repos_id  INTEGER REFERENCES REPOSITORY (id), " \   "  repos_path  TEXT, " \   "  revision  INTEGER, " \   "  presence  TEXT NOT NULL, " \   "  moved_here  INTEGER, " \   "  moved_to  TEXT, " \   "  kind  TEXT NOT NULL, " \   "  properties  BLOB, " \   "  depth  TEXT, " \   "  checksum  TEXT REFERENCES PRISTINE (checksum), " \   "  symlink_target  TEXT, " \   "  changed_revision  INTEGER, " \   "  changed_date      INTEGER, " \   "  changed_author    TEXT, " \   "  translated_size  INTEGER, " \   "  last_mod_time  INTEGER, " \   "  dav_cache  BLOB, " \   "  file_external  INTEGER, " \   "  inherited_props  BLOB, " \   "  PRIMARY KEY (wc_id, local_relpath, op_depth) " \   "  ); " \   "CREATE UNIQUE INDEX I_NODES_PARENT ON NODES (wc_id, parent_relpath, " \   "                                             local_relpath, op_depth); " \   "CREATE UNIQUE INDEX I_NODES_MOVED ON NODES (wc_id, moved_to, op_depth); " \   "CREATE VIEW NODES_CURRENT AS " \   "  SELECT * FROM nodes AS n " \   "    WHERE op_depth = (SELECT MAX(op_depth) FROM nodes AS n2 " \   "                      WHERE n2.wc_id = n.wc_id " \   "                        AND n2.local_relpath = n.local_relpath); " \   "CREATE VIEW NODES_BASE AS " \   "  SELECT * FROM nodes " \   "  WHERE op_depth = 0; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_CREATE_NODES_TRIGGERS
value|2
end_define

begin_define
define|#
directive|define
name|STMT_2_INFO
value|{"STMT_CREATE_NODES_TRIGGERS", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_2
define|\
value|"CREATE TRIGGER nodes_insert_trigger " \   "AFTER INSERT ON nodes " \   "WHEN NEW.checksum IS NOT NULL " \   "BEGIN " \   "  UPDATE pristine SET refcount = refcount + 1 " \   "  WHERE checksum = NEW.checksum; " \   "END; " \   "CREATE TRIGGER nodes_delete_trigger " \   "AFTER DELETE ON nodes " \   "WHEN OLD.checksum IS NOT NULL " \   "BEGIN " \   "  UPDATE pristine SET refcount = refcount - 1 " \   "  WHERE checksum = OLD.checksum; " \   "END; " \   "CREATE TRIGGER nodes_update_checksum_trigger " \   "AFTER UPDATE OF checksum ON nodes " \   "WHEN NEW.checksum IS NOT OLD.checksum " \   "BEGIN " \   "  UPDATE pristine SET refcount = refcount + 1 " \   "  WHERE checksum = NEW.checksum; " \   "  UPDATE pristine SET refcount = refcount - 1 " \   "  WHERE checksum = OLD.checksum; " \   "END; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_CREATE_EXTERNALS
value|3
end_define

begin_define
define|#
directive|define
name|STMT_3_INFO
value|{"STMT_CREATE_EXTERNALS", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_3
define|\
value|"CREATE TABLE EXTERNALS ( " \   "  wc_id  INTEGER NOT NULL REFERENCES WCROOT (id), " \   "  local_relpath  TEXT NOT NULL, " \   "  parent_relpath  TEXT NOT NULL, " \   "  repos_id  INTEGER NOT NULL REFERENCES REPOSITORY (id), " \   "  presence  TEXT NOT NULL, " \   "  kind  TEXT NOT NULL, " \   "  def_local_relpath         TEXT NOT NULL, " \   "  def_repos_relpath         TEXT NOT NULL, " \   "  def_operational_revision  TEXT, " \   "  def_revision              TEXT, " \   "  PRIMARY KEY (wc_id, local_relpath) " \   "); " \   "CREATE UNIQUE INDEX I_EXTERNALS_DEFINED ON EXTERNALS (wc_id, " \   "                                                      def_local_relpath, " \   "                                                      local_relpath); " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_20
value|4
end_define

begin_define
define|#
directive|define
name|STMT_4_INFO
value|{"STMT_UPGRADE_TO_20", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_4
define|\
value|"UPDATE BASE_NODE SET checksum = (SELECT checksum FROM pristine " \   "                                 WHERE md5_checksum = BASE_NODE.checksum) " \   "WHERE EXISTS (SELECT 1 FROM pristine WHERE md5_checksum = BASE_NODE.checksum); " \   "UPDATE WORKING_NODE SET checksum = (SELECT checksum FROM pristine " \   "                                    WHERE md5_checksum = WORKING_NODE.checksum) " \   "WHERE EXISTS (SELECT 1 FROM pristine " \   "              WHERE md5_checksum = WORKING_NODE.checksum); " \   "INSERT INTO NODES ( " \   "       wc_id, local_relpath, op_depth, parent_relpath, " \   "       repos_id, repos_path, revision, " \   "       presence, depth, moved_here, moved_to, kind, " \   "       changed_revision, changed_date, changed_author, " \   "       checksum, properties, translated_size, last_mod_time, " \   "       dav_cache, symlink_target, file_external ) " \   "SELECT wc_id, local_relpath, 0 , parent_relpath, " \   "       repos_id, repos_relpath, revnum, " \   "       presence, depth, NULL , NULL , kind, " \   "       changed_rev, changed_date, changed_author, " \   "       checksum, properties, translated_size, last_mod_time, " \   "       dav_cache, symlink_target, file_external " \   "FROM BASE_NODE; " \   "INSERT INTO NODES ( " \   "       wc_id, local_relpath, op_depth, parent_relpath, " \   "       repos_id, repos_path, revision, " \   "       presence, depth, moved_here, moved_to, kind, " \   "       changed_revision, changed_date, changed_author, " \   "       checksum, properties, translated_size, last_mod_time, " \   "       dav_cache, symlink_target, file_external ) " \   "SELECT wc_id, local_relpath, 2 , parent_relpath, " \   "       copyfrom_repos_id, copyfrom_repos_path, copyfrom_revnum, " \   "       presence, depth, NULL , NULL , kind, " \   "       changed_rev, changed_date, changed_author, " \   "       checksum, properties, translated_size, last_mod_time, " \   "       NULL , symlink_target, NULL " \   "FROM WORKING_NODE; " \   "DROP TABLE BASE_NODE; " \   "DROP TABLE WORKING_NODE; " \   "PRAGMA user_version = 20; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_21
value|5
end_define

begin_define
define|#
directive|define
name|STMT_5_INFO
value|{"STMT_UPGRADE_TO_21", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_5
define|\
value|"PRAGMA user_version = 21; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_21_SELECT_OLD_TREE_CONFLICT
value|6
end_define

begin_define
define|#
directive|define
name|STMT_6_INFO
value|{"STMT_UPGRADE_21_SELECT_OLD_TREE_CONFLICT", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_6
define|\
value|"SELECT wc_id, local_relpath, tree_conflict_data " \   "FROM actual_node " \   "WHERE tree_conflict_data IS NOT NULL " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_21_ERASE_OLD_CONFLICTS
value|7
end_define

begin_define
define|#
directive|define
name|STMT_7_INFO
value|{"STMT_UPGRADE_21_ERASE_OLD_CONFLICTS", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_7
define|\
value|"UPDATE actual_node SET tree_conflict_data = NULL " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_22
value|8
end_define

begin_define
define|#
directive|define
name|STMT_8_INFO
value|{"STMT_UPGRADE_TO_22", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_8
define|\
value|"UPDATE actual_node SET tree_conflict_data = conflict_data; " \   "UPDATE actual_node SET conflict_data = NULL; " \   "PRAGMA user_version = 22; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_23
value|9
end_define

begin_define
define|#
directive|define
name|STMT_9_INFO
value|{"STMT_UPGRADE_TO_23", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_9
define|\
value|"PRAGMA user_version = 23; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_23_HAS_WORKING_NODES
value|10
end_define

begin_define
define|#
directive|define
name|STMT_10_INFO
value|{"STMT_UPGRADE_23_HAS_WORKING_NODES", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_10
define|\
value|"SELECT 1 FROM nodes WHERE op_depth> 0 " \   "LIMIT 1 " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_24
value|11
end_define

begin_define
define|#
directive|define
name|STMT_11_INFO
value|{"STMT_UPGRADE_TO_24", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_11
define|\
value|"UPDATE pristine SET refcount = " \   "  (SELECT COUNT(*) FROM nodes " \   "   WHERE checksum = pristine.checksum ); " \   "PRAGMA user_version = 24; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_25
value|12
end_define

begin_define
define|#
directive|define
name|STMT_12_INFO
value|{"STMT_UPGRADE_TO_25", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_12
define|\
value|"DROP VIEW IF EXISTS NODES_CURRENT; " \   "CREATE VIEW NODES_CURRENT AS " \   "  SELECT * FROM nodes " \   "    JOIN (SELECT wc_id, local_relpath, MAX(op_depth) AS op_depth FROM nodes " \   "          GROUP BY wc_id, local_relpath) AS filter " \   "    ON nodes.wc_id = filter.wc_id " \   "      AND nodes.local_relpath = filter.local_relpath " \   "      AND nodes.op_depth = filter.op_depth; " \   "PRAGMA user_version = 25; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_26
value|13
end_define

begin_define
define|#
directive|define
name|STMT_13_INFO
value|{"STMT_UPGRADE_TO_26", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_13
define|\
value|"DROP VIEW IF EXISTS NODES_BASE; " \   "CREATE VIEW NODES_BASE AS " \   "  SELECT * FROM nodes " \   "  WHERE op_depth = 0; " \   "PRAGMA user_version = 26; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_27
value|14
end_define

begin_define
define|#
directive|define
name|STMT_14_INFO
value|{"STMT_UPGRADE_TO_27", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_14
define|\
value|"PRAGMA user_version = 27; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_27_HAS_ACTUAL_NODES_CONFLICTS
value|15
end_define

begin_define
define|#
directive|define
name|STMT_15_INFO
value|{"STMT_UPGRADE_27_HAS_ACTUAL_NODES_CONFLICTS", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_15
define|\
value|"SELECT 1 FROM actual_node " \   "WHERE NOT ((prop_reject IS NULL) AND (conflict_old IS NULL) " \   "           AND (conflict_new IS NULL) AND (conflict_working IS NULL) " \   "           AND (tree_conflict_data IS NULL)) " \   "LIMIT 1 " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_28
value|16
end_define

begin_define
define|#
directive|define
name|STMT_16_INFO
value|{"STMT_UPGRADE_TO_28", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_16
define|\
value|"UPDATE NODES SET checksum = (SELECT checksum FROM pristine " \   "                             WHERE md5_checksum = nodes.checksum) " \   "WHERE EXISTS (SELECT 1 FROM pristine WHERE md5_checksum = nodes.checksum); " \   "PRAGMA user_version = 28; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_29
value|17
end_define

begin_define
define|#
directive|define
name|STMT_17_INFO
value|{"STMT_UPGRADE_TO_29", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_17
define|\
value|"DROP TRIGGER IF EXISTS nodes_update_checksum_trigger; " \   "DROP TRIGGER IF EXISTS nodes_insert_trigger; " \   "DROP TRIGGER IF EXISTS nodes_delete_trigger; " \   "CREATE TRIGGER nodes_update_checksum_trigger " \   "AFTER UPDATE OF checksum ON nodes " \   "WHEN NEW.checksum IS NOT OLD.checksum " \   "BEGIN " \   "  UPDATE pristine SET refcount = refcount + 1 " \   "  WHERE checksum = NEW.checksum; " \   "  UPDATE pristine SET refcount = refcount - 1 " \   "  WHERE checksum = OLD.checksum; " \   "END; " \   "CREATE TRIGGER nodes_insert_trigger " \   "AFTER INSERT ON nodes " \   "WHEN NEW.checksum IS NOT NULL " \   "BEGIN " \   "  UPDATE pristine SET refcount = refcount + 1 " \   "  WHERE checksum = NEW.checksum; " \   "END; " \   "CREATE TRIGGER nodes_delete_trigger " \   "AFTER DELETE ON nodes " \   "WHEN OLD.checksum IS NOT NULL " \   "BEGIN " \   "  UPDATE pristine SET refcount = refcount - 1 " \   "  WHERE checksum = OLD.checksum; " \   "END; " \   "PRAGMA user_version = 29; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_30
value|18
end_define

begin_define
define|#
directive|define
name|STMT_18_INFO
value|{"STMT_UPGRADE_TO_30", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_18
define|\
value|"CREATE UNIQUE INDEX IF NOT EXISTS I_NODES_MOVED " \   "ON NODES (wc_id, moved_to, op_depth); " \   "CREATE INDEX IF NOT EXISTS I_PRISTINE_MD5 ON PRISTINE (md5_checksum); " \   "UPDATE nodes SET presence = \"server-excluded\" WHERE presence = \"absent\"; " \   "UPDATE nodes SET file_external=1 WHERE file_external IS NOT NULL; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_30_SELECT_CONFLICT_SEPARATE
value|19
end_define

begin_define
define|#
directive|define
name|STMT_19_INFO
value|{"STMT_UPGRADE_30_SELECT_CONFLICT_SEPARATE", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_19
define|\
value|"SELECT wc_id, local_relpath, " \   "  conflict_old, conflict_working, conflict_new, prop_reject, tree_conflict_data " \   "FROM actual_node " \   "WHERE conflict_old IS NOT NULL " \   "   OR conflict_working IS NOT NULL " \   "   OR conflict_new IS NOT NULL " \   "   OR prop_reject IS NOT NULL " \   "   OR tree_conflict_data IS NOT NULL " \   "ORDER by wc_id, local_relpath " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_30_SET_CONFLICT
value|20
end_define

begin_define
define|#
directive|define
name|STMT_20_INFO
value|{"STMT_UPGRADE_30_SET_CONFLICT", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_20
define|\
value|"UPDATE actual_node SET conflict_data = ?3, conflict_old = NULL, " \   "  conflict_working = NULL, conflict_new = NULL, prop_reject = NULL, " \   "  tree_conflict_data = NULL " \   "WHERE wc_id = ?1 and local_relpath = ?2 " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_31_ALTER_TABLE
value|21
end_define

begin_define
define|#
directive|define
name|STMT_21_INFO
value|{"STMT_UPGRADE_TO_31_ALTER_TABLE", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_21
define|\
value|"ALTER TABLE NODES ADD COLUMN inherited_props BLOB; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_31_FINALIZE
value|22
end_define

begin_define
define|#
directive|define
name|STMT_22_INFO
value|{"STMT_UPGRADE_TO_31_FINALIZE", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_22
define|\
value|"DROP INDEX IF EXISTS I_ACTUAL_CHANGELIST; " \   "DROP INDEX IF EXISTS I_EXTERNALS_PARENT; " \   "DROP INDEX I_NODES_PARENT; " \   "CREATE UNIQUE INDEX I_NODES_PARENT ON NODES (wc_id, parent_relpath, " \   "                                             local_relpath, op_depth); " \   "DROP INDEX I_ACTUAL_PARENT; " \   "CREATE UNIQUE INDEX I_ACTUAL_PARENT ON ACTUAL_NODE (wc_id, parent_relpath, " \   "                                                    local_relpath); " \   "PRAGMA user_version = 31; " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_31_SELECT_WCROOT_NODES
value|23
end_define

begin_define
define|#
directive|define
name|STMT_23_INFO
value|{"STMT_UPGRADE_31_SELECT_WCROOT_NODES", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_23
define|\
value|"SELECT l.wc_id, l.local_relpath FROM nodes as l " \   "LEFT OUTER JOIN nodes as r " \   "ON l.wc_id = r.wc_id " \   "   AND r.local_relpath = l.parent_relpath " \   "   AND r.op_depth = 0 " \   "WHERE l.op_depth = 0 " \   "  AND l.repos_path != '' " \   "  AND ((l.repos_id IS NOT r.repos_id) " \   "       OR (l.repos_path IS NOT (CASE WHEN (r.local_relpath) = '' THEN (CASE WHEN (r.repos_path) = '' THEN (l.local_relpath) WHEN (l.local_relpath) = '' THEN (r.repos_path) ELSE (r.repos_path) || '/' || (l.local_relpath) END) WHEN (r.repos_path) = '' THEN (CASE WHEN (r.local_relpath) = '' THEN (l.local_relpath)  WHEN SUBSTR((l.local_relpath), 1, LENGTH(r.local_relpath)) = (r.local_relpath)  THEN CASE WHEN LENGTH(r.local_relpath) = LENGTH(l.local_relpath) THEN '' WHEN SUBSTR((l.local_relpath), LENGTH(r.local_relpath)+1, 1) = '/' THEN SUBSTR((l.local_relpath), LENGTH(r.local_relpath)+2) END END) WHEN SUBSTR((l.local_relpath), 1, LENGTH(r.local_relpath)) = (r.local_relpath) THEN CASE WHEN LENGTH(r.local_relpath) = LENGTH(l.local_relpath) THEN (r.repos_path) WHEN SUBSTR((l.local_relpath), LENGTH(r.local_relpath)+1, 1) = '/' THEN (r.repos_path) || SUBSTR((l.local_relpath), LENGTH(r.local_relpath)+1) END END))) " \   ""
end_define

begin_define
define|#
directive|define
name|STMT_UPGRADE_TO_32
value|24
end_define

begin_define
define|#
directive|define
name|STMT_24_INFO
value|{"STMT_UPGRADE_TO_32", NULL}
end_define

begin_define
define|#
directive|define
name|STMT_24
define|\
value|"DROP INDEX IF EXISTS I_ACTUAL_CHANGELIST; " \   "DROP INDEX IF EXISTS I_EXTERNALS_PARENT; " \   "CREATE INDEX I_EXTERNALS_PARENT ON EXTERNALS (wc_id, parent_relpath); " \   "DROP INDEX I_NODES_PARENT; " \   "CREATE UNIQUE INDEX I_NODES_PARENT ON NODES (wc_id, parent_relpath, " \   "                                             local_relpath, op_depth); " \   "DROP INDEX I_ACTUAL_PARENT; " \   "CREATE UNIQUE INDEX I_ACTUAL_PARENT ON ACTUAL_NODE (wc_id, parent_relpath, " \   "                                                    local_relpath); " \   "-- format: YYY " \   ""
end_define

begin_define
define|#
directive|define
name|WC_METADATA_SQL_99
define|\
value|"CREATE TABLE ACTUAL_NODE_BACKUP ( " \   "  wc_id  INTEGER NOT NULL, " \   "  local_relpath  TEXT NOT NULL, " \   "  parent_relpath  TEXT, " \   "  properties  BLOB, " \   "  conflict_old  TEXT, " \   "  conflict_new  TEXT, " \   "  conflict_working  TEXT, " \   "  prop_reject  TEXT, " \   "  changelist  TEXT, " \   "  text_mod  TEXT " \   "  ); " \   "INSERT INTO ACTUAL_NODE_BACKUP SELECT " \   "  wc_id, local_relpath, parent_relpath, properties, conflict_old, " \   "  conflict_new, conflict_working, prop_reject, changelist, text_mod " \   "FROM ACTUAL_NODE; " \   "DROP TABLE ACTUAL_NODE; " \   "CREATE TABLE ACTUAL_NODE ( " \   "  wc_id  INTEGER NOT NULL REFERENCES WCROOT (id), " \   "  local_relpath  TEXT NOT NULL, " \   "  parent_relpath  TEXT, " \   "  properties  BLOB, " \   "  conflict_old  TEXT, " \   "  conflict_new  TEXT, " \   "  conflict_working  TEXT, " \   "  prop_reject  TEXT, " \   "  changelist  TEXT, " \   "  text_mod  TEXT, " \   "  PRIMARY KEY (wc_id, local_relpath) " \   "  ); " \   "CREATE UNIQUE INDEX I_ACTUAL_PARENT ON ACTUAL_NODE (wc_id, parent_relpath, " \   "                                                    local_relpath); " \   "INSERT INTO ACTUAL_NODE SELECT " \   "  wc_id, local_relpath, parent_relpath, properties, conflict_old, " \   "  conflict_new, conflict_working, prop_reject, changelist, text_mod " \   "FROM ACTUAL_NODE_BACKUP; " \   "DROP TABLE ACTUAL_NODE_BACKUP; " \   ""
end_define

begin_define
define|#
directive|define
name|WC_METADATA_SQL_DECLARE_STATEMENTS
parameter_list|(
name|varname
parameter_list|)
define|\
value|static const char * const varname[] = { \     STMT_0, \     STMT_1, \     STMT_2, \     STMT_3, \     STMT_4, \     STMT_5, \     STMT_6, \     STMT_7, \     STMT_8, \     STMT_9, \     STMT_10, \     STMT_11, \     STMT_12, \     STMT_13, \     STMT_14, \     STMT_15, \     STMT_16, \     STMT_17, \     STMT_18, \     STMT_19, \     STMT_20, \     STMT_21, \     STMT_22, \     STMT_23, \     STMT_24, \     NULL \   }
end_define

begin_define
define|#
directive|define
name|WC_METADATA_SQL_DECLARE_STATEMENT_INFO
parameter_list|(
name|varname
parameter_list|)
define|\
value|static const char * const varname[][2] = { \     STMT_0_INFO, \     STMT_1_INFO, \     STMT_2_INFO, \     STMT_3_INFO, \     STMT_4_INFO, \     STMT_5_INFO, \     STMT_6_INFO, \     STMT_7_INFO, \     STMT_8_INFO, \     STMT_9_INFO, \     STMT_10_INFO, \     STMT_11_INFO, \     STMT_12_INFO, \     STMT_13_INFO, \     STMT_14_INFO, \     STMT_15_INFO, \     STMT_16_INFO, \     STMT_17_INFO, \     STMT_18_INFO, \     STMT_19_INFO, \     STMT_20_INFO, \     STMT_21_INFO, \     STMT_22_INFO, \     STMT_23_INFO, \     STMT_24_INFO, \     {NULL, NULL} \   }
end_define

end_unit

