begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2005 Topspin Communications.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|INFINIBAND_OPCODE_H
end_ifndef

begin_define
define|#
directive|define
name|INFINIBAND_OPCODE_H
end_define

begin_comment
comment|/*  * This macro cleans up the definitions of constants for BTH opcodes.  * It is used to define constants such as IBV_OPCODE_UD_SEND_ONLY,  * which becomes IBV_OPCODE_UD + IBV_OPCODE_SEND_ONLY, and this gives  * the correct value.  *  * In short, user code should use the constants defined using the  * macro rather than worrying about adding together other constants. */
end_comment

begin_define
define|#
directive|define
name|IBV_OPCODE
parameter_list|(
name|transport
parameter_list|,
name|op
parameter_list|)
define|\
value|IBV_OPCODE_ ## transport ## _ ## op = \ 		IBV_OPCODE_ ## transport + IBV_OPCODE_ ## op
end_define

begin_enum
enum|enum
block|{
comment|/* transport types -- just used to define real constants */
name|IBV_OPCODE_RC
init|=
literal|0x00
block|,
name|IBV_OPCODE_UC
init|=
literal|0x20
block|,
name|IBV_OPCODE_RD
init|=
literal|0x40
block|,
name|IBV_OPCODE_UD
init|=
literal|0x60
block|,
comment|/* operations -- just used to define real constants */
name|IBV_OPCODE_SEND_FIRST
init|=
literal|0x00
block|,
name|IBV_OPCODE_SEND_MIDDLE
init|=
literal|0x01
block|,
name|IBV_OPCODE_SEND_LAST
init|=
literal|0x02
block|,
name|IBV_OPCODE_SEND_LAST_WITH_IMMEDIATE
init|=
literal|0x03
block|,
name|IBV_OPCODE_SEND_ONLY
init|=
literal|0x04
block|,
name|IBV_OPCODE_SEND_ONLY_WITH_IMMEDIATE
init|=
literal|0x05
block|,
name|IBV_OPCODE_RDMA_WRITE_FIRST
init|=
literal|0x06
block|,
name|IBV_OPCODE_RDMA_WRITE_MIDDLE
init|=
literal|0x07
block|,
name|IBV_OPCODE_RDMA_WRITE_LAST
init|=
literal|0x08
block|,
name|IBV_OPCODE_RDMA_WRITE_LAST_WITH_IMMEDIATE
init|=
literal|0x09
block|,
name|IBV_OPCODE_RDMA_WRITE_ONLY
init|=
literal|0x0a
block|,
name|IBV_OPCODE_RDMA_WRITE_ONLY_WITH_IMMEDIATE
init|=
literal|0x0b
block|,
name|IBV_OPCODE_RDMA_READ_REQUEST
init|=
literal|0x0c
block|,
name|IBV_OPCODE_RDMA_READ_RESPONSE_FIRST
init|=
literal|0x0d
block|,
name|IBV_OPCODE_RDMA_READ_RESPONSE_MIDDLE
init|=
literal|0x0e
block|,
name|IBV_OPCODE_RDMA_READ_RESPONSE_LAST
init|=
literal|0x0f
block|,
name|IBV_OPCODE_RDMA_READ_RESPONSE_ONLY
init|=
literal|0x10
block|,
name|IBV_OPCODE_ACKNOWLEDGE
init|=
literal|0x11
block|,
name|IBV_OPCODE_ATOMIC_ACKNOWLEDGE
init|=
literal|0x12
block|,
name|IBV_OPCODE_COMPARE_SWAP
init|=
literal|0x13
block|,
name|IBV_OPCODE_FETCH_ADD
init|=
literal|0x14
block|,
comment|/* real constants follow -- see comment about above IBV_OPCODE() 	   macro for more details */
comment|/* RC */
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|SEND_FIRST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|SEND_MIDDLE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|SEND_LAST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|SEND_LAST_WITH_IMMEDIATE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|SEND_ONLY
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|SEND_ONLY_WITH_IMMEDIATE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|RDMA_WRITE_FIRST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|RDMA_WRITE_MIDDLE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|RDMA_WRITE_LAST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|RDMA_WRITE_LAST_WITH_IMMEDIATE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|RDMA_WRITE_ONLY
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|RDMA_WRITE_ONLY_WITH_IMMEDIATE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|RDMA_READ_REQUEST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|RDMA_READ_RESPONSE_FIRST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|RDMA_READ_RESPONSE_MIDDLE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|RDMA_READ_RESPONSE_LAST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|RDMA_READ_RESPONSE_ONLY
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|ACKNOWLEDGE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|ATOMIC_ACKNOWLEDGE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|COMPARE_SWAP
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RC
argument_list|,
name|FETCH_ADD
argument_list|)
block|,
comment|/* UC */
name|IBV_OPCODE
argument_list|(
name|UC
argument_list|,
name|SEND_FIRST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|UC
argument_list|,
name|SEND_MIDDLE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|UC
argument_list|,
name|SEND_LAST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|UC
argument_list|,
name|SEND_LAST_WITH_IMMEDIATE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|UC
argument_list|,
name|SEND_ONLY
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|UC
argument_list|,
name|SEND_ONLY_WITH_IMMEDIATE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|UC
argument_list|,
name|RDMA_WRITE_FIRST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|UC
argument_list|,
name|RDMA_WRITE_MIDDLE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|UC
argument_list|,
name|RDMA_WRITE_LAST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|UC
argument_list|,
name|RDMA_WRITE_LAST_WITH_IMMEDIATE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|UC
argument_list|,
name|RDMA_WRITE_ONLY
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|UC
argument_list|,
name|RDMA_WRITE_ONLY_WITH_IMMEDIATE
argument_list|)
block|,
comment|/* RD */
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|SEND_FIRST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|SEND_MIDDLE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|SEND_LAST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|SEND_LAST_WITH_IMMEDIATE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|SEND_ONLY
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|SEND_ONLY_WITH_IMMEDIATE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|RDMA_WRITE_FIRST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|RDMA_WRITE_MIDDLE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|RDMA_WRITE_LAST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|RDMA_WRITE_LAST_WITH_IMMEDIATE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|RDMA_WRITE_ONLY
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|RDMA_WRITE_ONLY_WITH_IMMEDIATE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|RDMA_READ_REQUEST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|RDMA_READ_RESPONSE_FIRST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|RDMA_READ_RESPONSE_MIDDLE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|RDMA_READ_RESPONSE_LAST
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|RDMA_READ_RESPONSE_ONLY
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|ACKNOWLEDGE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|ATOMIC_ACKNOWLEDGE
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|COMPARE_SWAP
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
name|RD
argument_list|,
name|FETCH_ADD
argument_list|)
block|,
comment|/* UD */
name|IBV_OPCODE
argument_list|(
name|UD
argument_list|,
name|SEND_ONLY
argument_list|)
block|,
name|IBV_OPCODE
argument_list|(
argument|UD
argument_list|,
argument|SEND_ONLY_WITH_IMMEDIATE
argument_list|)
block|}
enum|;
end_enum

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* INFINIBAND_OPCODE_H */
end_comment

end_unit

