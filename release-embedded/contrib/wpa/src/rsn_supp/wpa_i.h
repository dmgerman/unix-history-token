begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Internal WPA/RSN supplicant state machine definitions  * Copyright (c) 2004-2010, Jouni Malinen<j@w1.fi>  *  * This software may be distributed under the terms of the BSD license.  * See README for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|WPA_I_H
end_ifndef

begin_define
define|#
directive|define
name|WPA_I_H
end_define

begin_include
include|#
directive|include
file|"utils/list.h"
end_include

begin_struct_decl
struct_decl|struct
name|wpa_peerkey
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|wpa_tdls_peer
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|wpa_eapol_key
struct_decl|;
end_struct_decl

begin_comment
comment|/**  * struct wpa_sm - Internal WPA state machine data  */
end_comment

begin_struct
struct|struct
name|wpa_sm
block|{
name|u8
name|pmk
index|[
name|PMK_LEN
index|]
decl_stmt|;
name|size_t
name|pmk_len
decl_stmt|;
name|struct
name|wpa_ptk
name|ptk
decl_stmt|,
name|tptk
decl_stmt|;
name|int
name|ptk_set
decl_stmt|,
name|tptk_set
decl_stmt|;
name|u8
name|snonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|anonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
comment|/* ANonce from the last 1/4 msg */
name|int
name|renew_snonce
decl_stmt|;
name|u8
name|rx_replay_counter
index|[
name|WPA_REPLAY_COUNTER_LEN
index|]
decl_stmt|;
name|int
name|rx_replay_counter_set
decl_stmt|;
name|u8
name|request_counter
index|[
name|WPA_REPLAY_COUNTER_LEN
index|]
decl_stmt|;
name|struct
name|eapol_sm
modifier|*
name|eapol
decl_stmt|;
comment|/* EAPOL state machine from upper level code */
name|struct
name|rsn_pmksa_cache
modifier|*
name|pmksa
decl_stmt|;
comment|/* PMKSA cache */
name|struct
name|rsn_pmksa_cache_entry
modifier|*
name|cur_pmksa
decl_stmt|;
comment|/* current PMKSA entry */
name|struct
name|dl_list
name|pmksa_candidates
decl_stmt|;
name|struct
name|l2_packet_data
modifier|*
name|l2_preauth
decl_stmt|;
name|struct
name|l2_packet_data
modifier|*
name|l2_preauth_br
decl_stmt|;
name|struct
name|l2_packet_data
modifier|*
name|l2_tdls
decl_stmt|;
name|u8
name|preauth_bssid
index|[
name|ETH_ALEN
index|]
decl_stmt|;
comment|/* current RSN pre-auth peer or 				     * 00:00:00:00:00:00 if no pre-auth is 				     * in progress */
name|struct
name|eapol_sm
modifier|*
name|preauth_eapol
decl_stmt|;
name|struct
name|wpa_sm_ctx
modifier|*
name|ctx
decl_stmt|;
name|void
modifier|*
name|scard_ctx
decl_stmt|;
comment|/* context for smartcard callbacks */
name|int
name|fast_reauth
decl_stmt|;
comment|/* whether EAP fast re-authentication is enabled */
name|void
modifier|*
name|network_ctx
decl_stmt|;
name|int
name|peerkey_enabled
decl_stmt|;
name|int
name|allowed_pairwise_cipher
decl_stmt|;
comment|/* bitfield of WPA_CIPHER_* */
name|int
name|proactive_key_caching
decl_stmt|;
name|int
name|eap_workaround
decl_stmt|;
name|void
modifier|*
name|eap_conf_ctx
decl_stmt|;
name|u8
name|ssid
index|[
literal|32
index|]
decl_stmt|;
name|size_t
name|ssid_len
decl_stmt|;
name|int
name|wpa_ptk_rekey
decl_stmt|;
name|u8
name|own_addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
specifier|const
name|char
modifier|*
name|ifname
decl_stmt|;
specifier|const
name|char
modifier|*
name|bridge_ifname
decl_stmt|;
name|u8
name|bssid
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|unsigned
name|int
name|dot11RSNAConfigPMKLifetime
decl_stmt|;
name|unsigned
name|int
name|dot11RSNAConfigPMKReauthThreshold
decl_stmt|;
name|unsigned
name|int
name|dot11RSNAConfigSATimeout
decl_stmt|;
name|unsigned
name|int
name|dot11RSNA4WayHandshakeFailures
decl_stmt|;
comment|/* Selected configuration (based on Beacon/ProbeResp WPA IE) */
name|unsigned
name|int
name|proto
decl_stmt|;
name|unsigned
name|int
name|pairwise_cipher
decl_stmt|;
name|unsigned
name|int
name|group_cipher
decl_stmt|;
name|unsigned
name|int
name|key_mgmt
decl_stmt|;
name|unsigned
name|int
name|mgmt_group_cipher
decl_stmt|;
name|int
name|rsn_enabled
decl_stmt|;
comment|/* Whether RSN is enabled in configuration */
name|int
name|mfp
decl_stmt|;
comment|/* 0 = disabled, 1 = optional, 2 = mandatory */
name|u8
modifier|*
name|assoc_wpa_ie
decl_stmt|;
comment|/* Own WPA/RSN IE from (Re)AssocReq */
name|size_t
name|assoc_wpa_ie_len
decl_stmt|;
name|u8
modifier|*
name|ap_wpa_ie
decl_stmt|,
modifier|*
name|ap_rsn_ie
decl_stmt|;
name|size_t
name|ap_wpa_ie_len
decl_stmt|,
name|ap_rsn_ie_len
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_PEERKEY
name|struct
name|wpa_peerkey
modifier|*
name|peerkey
decl_stmt|;
endif|#
directive|endif
comment|/* CONFIG_PEERKEY */
ifdef|#
directive|ifdef
name|CONFIG_TDLS
name|struct
name|wpa_tdls_peer
modifier|*
name|tdls
decl_stmt|;
name|int
name|tdls_prohibited
decl_stmt|;
name|int
name|tdls_disabled
decl_stmt|;
comment|/* The driver supports TDLS */
name|int
name|tdls_supported
decl_stmt|;
comment|/* 	 * The driver requires explicit discovery/setup/teardown frames sent 	 * to it via tdls_mgmt. 	 */
name|int
name|tdls_external_setup
decl_stmt|;
endif|#
directive|endif
comment|/* CONFIG_TDLS */
ifdef|#
directive|ifdef
name|CONFIG_IEEE80211R
name|u8
name|xxkey
index|[
name|PMK_LEN
index|]
decl_stmt|;
comment|/* PSK or the second 256 bits of MSK */
name|size_t
name|xxkey_len
decl_stmt|;
name|u8
name|pmk_r0
index|[
name|PMK_LEN
index|]
decl_stmt|;
name|u8
name|pmk_r0_name
index|[
name|WPA_PMK_NAME_LEN
index|]
decl_stmt|;
name|u8
name|pmk_r1
index|[
name|PMK_LEN
index|]
decl_stmt|;
name|u8
name|pmk_r1_name
index|[
name|WPA_PMK_NAME_LEN
index|]
decl_stmt|;
name|u8
name|mobility_domain
index|[
name|MOBILITY_DOMAIN_ID_LEN
index|]
decl_stmt|;
name|u8
name|r0kh_id
index|[
name|FT_R0KH_ID_MAX_LEN
index|]
decl_stmt|;
name|size_t
name|r0kh_id_len
decl_stmt|;
name|u8
name|r1kh_id
index|[
name|FT_R1KH_ID_LEN
index|]
decl_stmt|;
name|int
name|ft_completed
decl_stmt|;
name|int
name|over_the_ds_in_progress
decl_stmt|;
name|u8
name|target_ap
index|[
name|ETH_ALEN
index|]
decl_stmt|;
comment|/* over-the-DS target AP */
name|int
name|set_ptk_after_assoc
decl_stmt|;
name|u8
name|mdie_ft_capab
decl_stmt|;
comment|/* FT Capability and Policy from target AP MDIE */
name|u8
modifier|*
name|assoc_resp_ies
decl_stmt|;
comment|/* MDIE and FTIE from (Re)Association Response */
name|size_t
name|assoc_resp_ies_len
decl_stmt|;
endif|#
directive|endif
comment|/* CONFIG_IEEE80211R */
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|void
name|wpa_sm_set_state
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
name|enum
name|wpa_states
name|state
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|set_state
argument_list|)
expr_stmt|;
name|sm
operator|->
name|ctx
operator|->
name|set_state
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|state
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|enum
name|wpa_states
name|wpa_sm_get_state
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|get_state
argument_list|)
expr_stmt|;
return|return
name|sm
operator|->
name|ctx
operator|->
name|get_state
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_sm_deauthenticate
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
name|int
name|reason_code
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|deauthenticate
argument_list|)
expr_stmt|;
name|sm
operator|->
name|ctx
operator|->
name|deauthenticate
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|reason_code
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_set_key
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
name|enum
name|wpa_alg
name|alg
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|key_idx
parameter_list|,
name|int
name|set_tx
parameter_list|,
specifier|const
name|u8
modifier|*
name|seq
parameter_list|,
name|size_t
name|seq_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|set_key
argument_list|)
expr_stmt|;
return|return
name|sm
operator|->
name|ctx
operator|->
name|set_key
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|alg
argument_list|,
name|addr
argument_list|,
name|key_idx
argument_list|,
name|set_tx
argument_list|,
name|seq
argument_list|,
name|seq_len
argument_list|,
name|key
argument_list|,
name|key_len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
modifier|*
name|wpa_sm_get_network_ctx
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|get_network_ctx
argument_list|)
expr_stmt|;
return|return
name|sm
operator|->
name|ctx
operator|->
name|get_network_ctx
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_get_bssid
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
name|u8
modifier|*
name|bssid
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|get_bssid
argument_list|)
expr_stmt|;
return|return
name|sm
operator|->
name|ctx
operator|->
name|get_bssid
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|bssid
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_ether_send
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|dest
parameter_list|,
name|u16
name|proto
parameter_list|,
specifier|const
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ether_send
argument_list|)
expr_stmt|;
return|return
name|sm
operator|->
name|ctx
operator|->
name|ether_send
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|dest
argument_list|,
name|proto
argument_list|,
name|buf
argument_list|,
name|len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_get_beacon_ie
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|get_beacon_ie
argument_list|)
expr_stmt|;
return|return
name|sm
operator|->
name|ctx
operator|->
name|get_beacon_ie
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_sm_cancel_auth_timeout
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|cancel_auth_timeout
argument_list|)
expr_stmt|;
name|sm
operator|->
name|ctx
operator|->
name|cancel_auth_timeout
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u8
modifier|*
name|wpa_sm_alloc_eapol
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
name|u8
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|u16
name|data_len
parameter_list|,
name|size_t
modifier|*
name|msg_len
parameter_list|,
name|void
modifier|*
modifier|*
name|data_pos
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|alloc_eapol
argument_list|)
expr_stmt|;
return|return
name|sm
operator|->
name|ctx
operator|->
name|alloc_eapol
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|type
argument_list|,
name|data
argument_list|,
name|data_len
argument_list|,
name|msg_len
argument_list|,
name|data_pos
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_add_pmkid
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
specifier|const
name|u8
modifier|*
name|pmkid
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|add_pmkid
argument_list|)
expr_stmt|;
return|return
name|sm
operator|->
name|ctx
operator|->
name|add_pmkid
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|bssid
argument_list|,
name|pmkid
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_remove_pmkid
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
specifier|const
name|u8
modifier|*
name|pmkid
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|remove_pmkid
argument_list|)
expr_stmt|;
return|return
name|sm
operator|->
name|ctx
operator|->
name|remove_pmkid
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|bssid
argument_list|,
name|pmkid
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_mlme_setprotection
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|protect_type
parameter_list|,
name|int
name|key_type
parameter_list|)
block|{
name|WPA_ASSERT
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|mlme_setprotection
argument_list|)
expr_stmt|;
return|return
name|sm
operator|->
name|ctx
operator|->
name|mlme_setprotection
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|addr
argument_list|,
name|protect_type
argument_list|,
name|key_type
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_update_ft_ies
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|md
parameter_list|,
specifier|const
name|u8
modifier|*
name|ies
parameter_list|,
name|size_t
name|ies_len
parameter_list|)
block|{
if|if
condition|(
name|sm
operator|->
name|ctx
operator|->
name|update_ft_ies
condition|)
return|return
name|sm
operator|->
name|ctx
operator|->
name|update_ft_ies
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|md
argument_list|,
name|ies
argument_list|,
name|ies_len
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_send_ft_action
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
name|u8
name|action
parameter_list|,
specifier|const
name|u8
modifier|*
name|target_ap
parameter_list|,
specifier|const
name|u8
modifier|*
name|ies
parameter_list|,
name|size_t
name|ies_len
parameter_list|)
block|{
if|if
condition|(
name|sm
operator|->
name|ctx
operator|->
name|send_ft_action
condition|)
return|return
name|sm
operator|->
name|ctx
operator|->
name|send_ft_action
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|action
argument_list|,
name|target_ap
argument_list|,
name|ies
argument_list|,
name|ies_len
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_mark_authenticated
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|target_ap
parameter_list|)
block|{
if|if
condition|(
name|sm
operator|->
name|ctx
operator|->
name|mark_authenticated
condition|)
return|return
name|sm
operator|->
name|ctx
operator|->
name|mark_authenticated
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|target_ap
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_sm_set_rekey_offload
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|)
block|{
if|if
condition|(
operator|!
name|sm
operator|->
name|ctx
operator|->
name|set_rekey_offload
condition|)
return|return;
name|sm
operator|->
name|ctx
operator|->
name|set_rekey_offload
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|sm
operator|->
name|ptk
operator|.
name|kek
argument_list|,
name|sm
operator|->
name|ptk
operator|.
name|kck
argument_list|,
name|sm
operator|->
name|rx_replay_counter
argument_list|)
expr_stmt|;
block|}
end_function

begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_TDLS
end_ifdef

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_tdls_get_capa
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
name|int
modifier|*
name|tdls_supported
parameter_list|,
name|int
modifier|*
name|tdls_ext_setup
parameter_list|)
block|{
if|if
condition|(
name|sm
operator|->
name|ctx
operator|->
name|tdls_get_capa
condition|)
return|return
name|sm
operator|->
name|ctx
operator|->
name|tdls_get_capa
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|tdls_supported
argument_list|,
name|tdls_ext_setup
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_send_tdls_mgmt
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|dst
parameter_list|,
name|u8
name|action_code
parameter_list|,
name|u8
name|dialog_token
parameter_list|,
name|u16
name|status_code
parameter_list|,
specifier|const
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
block|{
if|if
condition|(
name|sm
operator|->
name|ctx
operator|->
name|send_tdls_mgmt
condition|)
return|return
name|sm
operator|->
name|ctx
operator|->
name|send_tdls_mgmt
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|dst
argument_list|,
name|action_code
argument_list|,
name|dialog_token
argument_list|,
name|status_code
argument_list|,
name|buf
argument_list|,
name|len
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_tdls_oper
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
name|int
name|oper
parameter_list|,
specifier|const
name|u8
modifier|*
name|peer
parameter_list|)
block|{
if|if
condition|(
name|sm
operator|->
name|ctx
operator|->
name|tdls_oper
condition|)
return|return
name|sm
operator|->
name|ctx
operator|->
name|tdls_oper
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|oper
argument_list|,
name|peer
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_sm_tdls_peer_addset
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|add
parameter_list|,
name|u16
name|capability
parameter_list|,
specifier|const
name|u8
modifier|*
name|supp_rates
parameter_list|,
name|size_t
name|supp_rates_len
parameter_list|)
block|{
if|if
condition|(
name|sm
operator|->
name|ctx
operator|->
name|tdls_peer_addset
condition|)
return|return
name|sm
operator|->
name|ctx
operator|->
name|tdls_peer_addset
argument_list|(
name|sm
operator|->
name|ctx
operator|->
name|ctx
argument_list|,
name|addr
argument_list|,
name|add
argument_list|,
name|capability
argument_list|,
name|supp_rates
argument_list|,
name|supp_rates_len
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* CONFIG_TDLS */
end_comment

begin_function_decl
name|void
name|wpa_eapol_key_send
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|kck
parameter_list|,
name|int
name|ver
parameter_list|,
specifier|const
name|u8
modifier|*
name|dest
parameter_list|,
name|u16
name|proto
parameter_list|,
name|u8
modifier|*
name|msg
parameter_list|,
name|size_t
name|msg_len
parameter_list|,
name|u8
modifier|*
name|key_mic
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_supplicant_send_2_of_4
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
name|dst
parameter_list|,
specifier|const
name|struct
name|wpa_eapol_key
modifier|*
name|key
parameter_list|,
name|int
name|ver
parameter_list|,
specifier|const
name|u8
modifier|*
name|nonce
parameter_list|,
specifier|const
name|u8
modifier|*
name|wpa_ie
parameter_list|,
name|size_t
name|wpa_ie_len
parameter_list|,
name|struct
name|wpa_ptk
modifier|*
name|ptk
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_supplicant_send_4_of_4
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
name|dst
parameter_list|,
specifier|const
name|struct
name|wpa_eapol_key
modifier|*
name|key
parameter_list|,
name|u16
name|ver
parameter_list|,
name|u16
name|key_info
parameter_list|,
specifier|const
name|u8
modifier|*
name|kde
parameter_list|,
name|size_t
name|kde_len
parameter_list|,
name|struct
name|wpa_ptk
modifier|*
name|ptk
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_derive_ptk_ft
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
name|src_addr
parameter_list|,
specifier|const
name|struct
name|wpa_eapol_key
modifier|*
name|key
parameter_list|,
name|struct
name|wpa_ptk
modifier|*
name|ptk
parameter_list|,
name|size_t
name|ptk_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_tdls_assoc
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_tdls_disassoc
parameter_list|(
name|struct
name|wpa_sm
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WPA_I_H */
end_comment

end_unit

