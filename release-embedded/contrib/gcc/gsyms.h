begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* For cross compilation, use the portable definitions from the COFF    documentation.  */
end_comment

begin_define
define|#
directive|define
name|__GNU_SYMS__
end_define

begin_enum
enum|enum
name|sdb_storage_class
block|{
name|C_EFCN
init|=
operator|-
literal|1
block|,
name|C_NULL
init|=
literal|0
block|,
name|C_AUTO
init|=
literal|1
block|,
name|C_EXT
init|=
literal|2
block|,
name|C_STAT
init|=
literal|3
block|,
name|C_REG
init|=
literal|4
block|,
name|C_EXTDEF
init|=
literal|5
block|,
name|C_LABEL
init|=
literal|6
block|,
name|C_ULABEL
init|=
literal|7
block|,
name|C_MOS
init|=
literal|8
block|,
name|C_ARG
init|=
literal|9
block|,
name|C_STRTAG
init|=
literal|10
block|,
name|C_MOU
init|=
literal|11
block|,
name|C_UNTAG
init|=
literal|12
block|,
name|C_TPDEF
init|=
literal|13
block|,
name|C_USTATIC
init|=
literal|14
block|,
name|C_ENTAG
init|=
literal|15
block|,
name|C_MOE
init|=
literal|16
block|,
name|C_REGPARM
init|=
literal|17
block|,
name|C_FIELD
init|=
literal|18
block|,
name|C_BLOCK
init|=
literal|100
block|,
name|C_FCN
init|=
literal|101
block|,
name|C_EOS
init|=
literal|102
block|,
name|C_FILE
init|=
literal|103
block|,
name|C_LINE
init|=
literal|104
block|,
name|C_ALIAS
init|=
literal|105
block|,
name|C_HIDDEN
init|=
literal|106
block|}
enum|;
end_enum

begin_enum
enum|enum
name|sdb_type
block|{
name|T_NULL
init|=
literal|0
block|,
name|T_ARG
init|=
literal|1
block|,
name|T_VOID
init|=
literal|1
block|,
name|T_CHAR
init|=
literal|2
block|,
name|T_SHORT
init|=
literal|3
block|,
name|T_INT
init|=
literal|4
block|,
name|T_LONG
init|=
literal|5
block|,
name|T_FLOAT
init|=
literal|6
block|,
name|T_DOUBLE
init|=
literal|7
block|,
name|T_STRUCT
init|=
literal|8
block|,
name|T_UNION
init|=
literal|9
block|,
name|T_ENUM
init|=
literal|10
block|,
name|T_MOE
init|=
literal|11
block|,
name|T_UCHAR
init|=
literal|12
block|,
name|T_USHORT
init|=
literal|13
block|,
name|T_UINT
init|=
literal|14
block|,
name|T_ULONG
init|=
literal|15
ifdef|#
directive|ifdef
name|EXTENDED_SDB_BASIC_TYPES
block|,
name|T_LNGDBL
init|=
literal|16
endif|#
directive|endif
block|}
enum|;
end_enum

begin_enum
enum|enum
name|sdb_type_class
block|{
name|DT_NON
init|=
literal|0
block|,
name|DT_PTR
init|=
literal|1
block|,
name|DT_FCN
init|=
literal|2
block|,
name|DT_ARY
init|=
literal|3
block|}
enum|;
end_enum

begin_enum
enum|enum
name|sdb_masks
block|{
ifdef|#
directive|ifdef
name|EXTENDED_SDB_BASIC_TYPES
name|N_BTMASK
init|=
literal|0x1f
block|,
name|N_TMASK
init|=
literal|0x60
block|,
name|N_TMASK1
init|=
literal|0x300
block|,
name|N_TMASK2
init|=
literal|0x360
block|,
name|N_BTSHFT
init|=
literal|5
block|,
else|#
directive|else
name|N_BTMASK
init|=
literal|017
block|,
name|N_TMASK
init|=
literal|060
block|,
name|N_TMASK1
init|=
literal|0300
block|,
name|N_TMASK2
init|=
literal|0360
block|,
name|N_BTSHFT
init|=
literal|4
block|,
endif|#
directive|endif
name|N_TSHIFT
init|=
literal|2
block|}
enum|;
end_enum

end_unit

