begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*===---- xopintrin.h - XOP intrinsics -------------------------------------===  *  * Permission is hereby granted, free of charge, to any person obtaining a copy  * of this software and associated documentation files (the "Software"), to deal  * in the Software without restriction, including without limitation the rights  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell  * copies of the Software, and to permit persons to whom the Software is  * furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice shall be included in  * all copies or substantial portions of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  * THE SOFTWARE.  *  *===-----------------------------------------------------------------------===  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__X86INTRIN_H
end_ifndef

begin_error
error|#
directive|error
literal|"Never use<xopintrin.h> directly; include<x86intrin.h> instead."
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|__XOPINTRIN_H
end_ifndef

begin_define
define|#
directive|define
name|__XOPINTRIN_H
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|__XOP__
end_ifndef

begin_error
error|#
directive|error
literal|"XOP instruction set is not enabled"
end_error

begin_else
else|#
directive|else
end_else

begin_include
include|#
directive|include
file|<fma4intrin.h>
end_include

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_maccs_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpmacssww
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|,
operator|(
name|__v8hi
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_macc_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpmacsww
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|,
operator|(
name|__v8hi
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_maccsd_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpmacsswd
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|,
operator|(
name|__v4si
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_maccd_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpmacswd
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|,
operator|(
name|__v4si
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_maccs_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpmacssdd
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|,
operator|(
name|__v4si
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_macc_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpmacsdd
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|,
operator|(
name|__v4si
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_maccslo_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpmacssdql
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|,
operator|(
name|__v2di
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_macclo_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpmacsdql
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|,
operator|(
name|__v2di
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_maccshi_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpmacssdqh
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|,
operator|(
name|__v2di
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_macchi_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpmacsdqh
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|,
operator|(
name|__v2di
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_maddsd_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpmadcsswd
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|,
operator|(
name|__v4si
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_maddd_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpmadcswd
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|,
operator|(
name|__v4si
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_haddw_epi8
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphaddbw
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_haddd_epi8
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphaddbd
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_haddq_epi8
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphaddbq
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_haddd_epi16
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphaddwd
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_haddq_epi16
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphaddwq
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_haddq_epi32
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphadddq
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_haddw_epu8
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphaddubw
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_haddd_epu8
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphaddubd
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_haddq_epu8
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphaddubq
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_haddd_epu16
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphadduwd
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_haddq_epu16
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphadduwq
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_haddq_epu32
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphaddudq
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_hsubw_epi8
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphsubbw
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_hsubd_epi16
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphsubwd
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_hsubq_epi32
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vphsubdq
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_cmov_si128
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpcmov
argument_list|(
name|__A
argument_list|,
name|__B
argument_list|,
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m256i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm256_cmov_si256
argument_list|(
name|__m256i
name|__A
argument_list|,
name|__m256i
name|__B
argument_list|,
name|__m256i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_vpcmov_256
argument_list|(
name|__A
argument_list|,
name|__B
argument_list|,
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_perm_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|__m128i
name|__C
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpperm
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|,
operator|(
name|__v16qi
operator|)
name|__C
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_rot_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vprotb
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_rot_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vprotw
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_rot_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vprotd
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_rot_epi64
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vprotq
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_define
define|#
directive|define
name|_mm_roti_epi8
parameter_list|(
name|A
parameter_list|,
name|N
parameter_list|)
value|__extension__ ({ \   __m128i __A = (A); \   (__m128i)__builtin_ia32_vprotbi((__v16qi)__A, (N)); })
end_define

begin_define
define|#
directive|define
name|_mm_roti_epi16
parameter_list|(
name|A
parameter_list|,
name|N
parameter_list|)
value|__extension__ ({ \   __m128i __A = (A); \   (__m128i)__builtin_ia32_vprotwi((__v8hi)__A, (N)); })
end_define

begin_define
define|#
directive|define
name|_mm_roti_epi32
parameter_list|(
name|A
parameter_list|,
name|N
parameter_list|)
value|__extension__ ({ \   __m128i __A = (A); \   (__m128i)__builtin_ia32_vprotdi((__v4si)__A, (N)); })
end_define

begin_define
define|#
directive|define
name|_mm_roti_epi64
parameter_list|(
name|A
parameter_list|,
name|N
parameter_list|)
value|__extension__ ({ \   __m128i __A = (A); \   (__m128i)__builtin_ia32_vprotqi((__v2di)__A, (N)); })
end_define

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_shl_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpshlb
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_shl_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpshlw
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_shl_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpshld
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_shl_epi64
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpshlq
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_sha_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpshab
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_sha_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpshaw
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_sha_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpshad
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_sha_epi64
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_vpshaq
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_define
define|#
directive|define
name|_mm_com_epu8
parameter_list|(
name|A
parameter_list|,
name|B
parameter_list|,
name|N
parameter_list|)
value|__extension__ ({ \   __m128i __A = (A); \   __m128i __B = (B); \   (__m128i)__builtin_ia32_vpcomub((__v16qi)__A, (__v16qi)__B, (N)); })
end_define

begin_define
define|#
directive|define
name|_mm_com_epu16
parameter_list|(
name|A
parameter_list|,
name|B
parameter_list|,
name|N
parameter_list|)
value|__extension__ ({ \   __m128i __A = (A); \   __m128i __B = (B); \   (__m128i)__builtin_ia32_vpcomuw((__v8hi)__A, (__v8hi)__B, (N)); })
end_define

begin_define
define|#
directive|define
name|_mm_com_epu32
parameter_list|(
name|A
parameter_list|,
name|B
parameter_list|,
name|N
parameter_list|)
value|__extension__ ({ \   __m128i __A = (A); \   __m128i __B = (B); \   (__m128i)__builtin_ia32_vpcomud((__v4si)__A, (__v4si)__B, (N)); })
end_define

begin_define
define|#
directive|define
name|_mm_com_epu64
parameter_list|(
name|A
parameter_list|,
name|B
parameter_list|,
name|N
parameter_list|)
value|__extension__ ({ \   __m128i __A = (A); \   __m128i __B = (B); \   (__m128i)__builtin_ia32_vpcomuq((__v2di)__A, (__v2di)__B, (N)); })
end_define

begin_define
define|#
directive|define
name|_mm_com_epi8
parameter_list|(
name|A
parameter_list|,
name|B
parameter_list|,
name|N
parameter_list|)
value|__extension__ ({ \   __m128i __A = (A); \   __m128i __B = (B); \   (__m128i)__builtin_ia32_vpcomb((__v16qi)__A, (__v16qi)__B, (N)); })
end_define

begin_define
define|#
directive|define
name|_mm_com_epi16
parameter_list|(
name|A
parameter_list|,
name|B
parameter_list|,
name|N
parameter_list|)
value|__extension__ ({ \   __m128i __A = (A); \   __m128i __B = (B); \   (__m128i)__builtin_ia32_vpcomw((__v8hi)__A, (__v8hi)__B, (N)); })
end_define

begin_define
define|#
directive|define
name|_mm_com_epi32
parameter_list|(
name|A
parameter_list|,
name|B
parameter_list|,
name|N
parameter_list|)
value|__extension__ ({ \   __m128i __A = (A); \   __m128i __B = (B); \   (__m128i)__builtin_ia32_vpcomd((__v4si)__A, (__v4si)__B, (N)); })
end_define

begin_define
define|#
directive|define
name|_mm_com_epi64
parameter_list|(
name|A
parameter_list|,
name|B
parameter_list|,
name|N
parameter_list|)
value|__extension__ ({ \   __m128i __A = (A); \   __m128i __B = (B); \   (__m128i)__builtin_ia32_vpcomq((__v2di)__A, (__v2di)__B, (N)); })
end_define

begin_define
define|#
directive|define
name|_mm_permute2_pd
parameter_list|(
name|X
parameter_list|,
name|Y
parameter_list|,
name|C
parameter_list|,
name|I
parameter_list|)
value|__extension__ ({ \   __m128d __X = (X); \   __m128d __Y = (Y); \   __m128i __C = (C); \   (__m128d)__builtin_ia32_vpermil2pd((__v2df)__X, (__v2df)__Y, \                                      (__v2di)__C, (I)); })
end_define

begin_define
define|#
directive|define
name|_mm256_permute2_pd
parameter_list|(
name|X
parameter_list|,
name|Y
parameter_list|,
name|C
parameter_list|,
name|I
parameter_list|)
value|__extension__ ({ \   __m256d __X = (X); \   __m256d __Y = (Y); \   __m256i __C = (C); \   (__m256d)__builtin_ia32_vpermil2pd256((__v4df)__X, (__v4df)__Y, \                                         (__v4di)__C, (I)); })
end_define

begin_define
define|#
directive|define
name|_mm_permute2_ps
parameter_list|(
name|X
parameter_list|,
name|Y
parameter_list|,
name|C
parameter_list|,
name|I
parameter_list|)
value|__extension__ ({ \   __m128 __X = (X); \   __m128 __Y = (Y); \   __m128i __C = (C); \   (__m128)__builtin_ia32_vpermil2ps((__v4sf)__X, (__v4sf)__Y, \                                     (__v4si)__C, (I)); })
end_define

begin_define
define|#
directive|define
name|_mm256_permute2_ps
parameter_list|(
name|X
parameter_list|,
name|Y
parameter_list|,
name|C
parameter_list|,
name|I
parameter_list|)
value|__extension__ ({ \   __m256 __X = (X); \   __m256 __Y = (Y); \   __m256i __C = (C); \   (__m256)__builtin_ia32_vpermil2ps256((__v8sf)__X, (__v8sf)__Y, \                                        (__v8si)__C, (I)); })
end_define

begin_decl_stmt
specifier|static
name|__inline__
name|__m128
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_frcz_ss
argument_list|(
name|__m128
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_vfrczss
argument_list|(
operator|(
name|__v4sf
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_frcz_sd
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_vfrczsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_frcz_ps
argument_list|(
name|__m128
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_vfrczps
argument_list|(
operator|(
name|__v4sf
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_frcz_pd
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_vfrczpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m256
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm256_frcz_ps
argument_list|(
name|__m256
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m256
operator|)
name|__builtin_ia32_vfrczps256
argument_list|(
operator|(
name|__v8sf
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m256d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm256_frcz_pd
argument_list|(
name|__m256d
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m256d
operator|)
name|__builtin_ia32_vfrczpd256
argument_list|(
operator|(
name|__v4df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __XOP__ */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __XOPINTRIN_H */
end_comment

end_unit

