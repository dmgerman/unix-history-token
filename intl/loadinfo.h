begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Copyright (C) 1996, 1997 Free Software Foundation, Inc.    This file is part of the GNU C Library.    Contributed by Ulrich Drepper<drepper@cygnus.com>, 1996.     This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2, or (at your option)    any later version.     This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software Foundation,    Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|PARAMS
end_ifndef

begin_if
if|#
directive|if
name|__STDC__
end_if

begin_define
define|#
directive|define
name|PARAMS
parameter_list|(
name|args
parameter_list|)
value|args
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|PARAMS
parameter_list|(
name|args
parameter_list|)
value|()
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Encoding of locale name parts.  */
end_comment

begin_define
define|#
directive|define
name|CEN_REVISION
value|1
end_define

begin_define
define|#
directive|define
name|CEN_SPONSOR
value|2
end_define

begin_define
define|#
directive|define
name|CEN_SPECIAL
value|4
end_define

begin_define
define|#
directive|define
name|XPG_NORM_CODESET
value|8
end_define

begin_define
define|#
directive|define
name|XPG_CODESET
value|16
end_define

begin_define
define|#
directive|define
name|TERRITORY
value|32
end_define

begin_define
define|#
directive|define
name|CEN_AUDIENCE
value|64
end_define

begin_define
define|#
directive|define
name|XPG_MODIFIER
value|128
end_define

begin_define
define|#
directive|define
name|CEN_SPECIFIC
value|(CEN_REVISION|CEN_SPONSOR|CEN_SPECIAL|CEN_AUDIENCE)
end_define

begin_define
define|#
directive|define
name|XPG_SPECIFIC
value|(XPG_CODESET|XPG_NORM_CODESET|XPG_MODIFIER)
end_define

begin_struct
struct|struct
name|loaded_l10nfile
block|{
specifier|const
name|char
modifier|*
name|filename
decl_stmt|;
name|int
name|decided
decl_stmt|;
specifier|const
name|void
modifier|*
name|data
decl_stmt|;
name|struct
name|loaded_l10nfile
modifier|*
name|next
decl_stmt|;
name|struct
name|loaded_l10nfile
modifier|*
name|successor
index|[
literal|1
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
specifier|const
name|char
modifier|*
name|_nl_normalize_codeset
name|PARAMS
argument_list|(
operator|(
specifier|const
name|unsigned
name|char
operator|*
name|codeset
operator|,
name|size_t
name|name_len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|loaded_l10nfile
modifier|*
name|_nl_make_l10nflist
name|PARAMS
argument_list|(
operator|(
expr|struct
name|loaded_l10nfile
operator|*
operator|*
name|l10nfile_list
operator|,
specifier|const
name|char
operator|*
name|dirlist
operator|,
name|size_t
name|dirlist_len
operator|,
name|int
name|mask
operator|,
specifier|const
name|char
operator|*
name|language
operator|,
specifier|const
name|char
operator|*
name|territory
operator|,
specifier|const
name|char
operator|*
name|codeset
operator|,
specifier|const
name|char
operator|*
name|normalized_codeset
operator|,
specifier|const
name|char
operator|*
name|modifier
operator|,
specifier|const
name|char
operator|*
name|special
operator|,
specifier|const
name|char
operator|*
name|sponsor
operator|,
specifier|const
name|char
operator|*
name|revision
operator|,
specifier|const
name|char
operator|*
name|filename
operator|,
name|int
name|do_allocate
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|char
modifier|*
name|_nl_expand_alias
name|PARAMS
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|_nl_explode_name
name|PARAMS
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
specifier|const
name|char
operator|*
operator|*
name|language
operator|,
specifier|const
name|char
operator|*
operator|*
name|modifier
operator|,
specifier|const
name|char
operator|*
operator|*
name|territory
operator|,
specifier|const
name|char
operator|*
operator|*
name|codeset
operator|,
specifier|const
name|char
operator|*
operator|*
name|normalized_codeset
operator|,
specifier|const
name|char
operator|*
operator|*
name|special
operator|,
specifier|const
name|char
operator|*
operator|*
name|sponsor
operator|,
specifier|const
name|char
operator|*
operator|*
name|revision
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

end_unit

