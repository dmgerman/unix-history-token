begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* revs-txns.h : internal interface to revision and transactions operations  *  * ====================================================================  *    Licensed to the Apache Software Foundation (ASF) under one  *    or more contributor license agreements.  See the NOTICE file  *    distributed with this work for additional information  *    regarding copyright ownership.  The ASF licenses this file  *    to you under the Apache License, Version 2.0 (the  *    "License"); you may not use this file except in compliance  *    with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *    Unless required by applicable law or agreed to in writing,  *    software distributed under the License is distributed on an  *    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *    KIND, either express or implied.  See the License for the  *    specific language governing permissions and limitations  *    under the License.  * ====================================================================  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SVN_LIBSVN_FS_REVS_TXNS_H
end_ifndef

begin_define
define|#
directive|define
name|SVN_LIBSVN_FS_REVS_TXNS_H
end_define

begin_define
define|#
directive|define
name|SVN_WANT_BDB
end_define

begin_include
include|#
directive|include
file|"svn_private_config.h"
end_include

begin_include
include|#
directive|include
file|"svn_fs.h"
end_include

begin_include
include|#
directive|include
file|"fs.h"
end_include

begin_include
include|#
directive|include
file|"trail.h"
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* __cplusplus */
comment|/*** Revisions ***/
comment|/* Set *ROOT_ID_P to the ID of the root directory of revision REV in FS,    as part of TRAIL.  Allocate the ID in POOL.  */
name|svn_error_t
modifier|*
name|svn_fs_base__rev_get_root
parameter_list|(
specifier|const
name|svn_fs_id_t
modifier|*
modifier|*
name|root_id_p
parameter_list|,
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
name|svn_revnum_t
name|rev
parameter_list|,
name|trail_t
modifier|*
name|trail
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* Set *TXN_ID_P to the ID of the transaction that was committed to    create REV in FS, as part of TRAIL.  Allocate the ID in POOL.  */
name|svn_error_t
modifier|*
name|svn_fs_base__rev_get_txn_id
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
name|txn_id_p
parameter_list|,
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
name|svn_revnum_t
name|rev
parameter_list|,
name|trail_t
modifier|*
name|trail
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* Set property NAME to VALUE on REV in FS, as part of TRAIL.  */
name|svn_error_t
modifier|*
name|svn_fs_base__set_rev_prop
parameter_list|(
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
name|svn_revnum_t
name|rev
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|svn_string_t
modifier|*
specifier|const
modifier|*
name|old_value_p
parameter_list|,
specifier|const
name|svn_string_t
modifier|*
name|value
parameter_list|,
name|trail_t
modifier|*
name|trail
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/*** Transactions ***/
comment|/* Convert the unfinished transaction in FS named TXN_NAME to a    committed transaction that refers to REVISION as part of TRAIL.     Returns SVN_ERR_FS_TRANSACTION_NOT_MUTABLE if TXN_NAME refers to a    transaction that has already been committed.  */
name|svn_error_t
modifier|*
name|svn_fs_base__txn_make_committed
parameter_list|(
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
specifier|const
name|char
modifier|*
name|txn_name
parameter_list|,
name|svn_revnum_t
name|revision
parameter_list|,
name|trail_t
modifier|*
name|trail
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* Set *REVISION to the revision which was created when FS transaction    TXN_NAME was committed, or to SVN_INVALID_REVNUM if the transaction    has not been committed.  Do all of this as part of TRAIL.  */
name|svn_error_t
modifier|*
name|svn_fs_base__txn_get_revision
parameter_list|(
name|svn_revnum_t
modifier|*
name|revision
parameter_list|,
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
specifier|const
name|char
modifier|*
name|txn_name
parameter_list|,
name|trail_t
modifier|*
name|trail
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* Retrieve information about the Subversion transaction TXN_NAME from    the `transactions' table of FS, as part of TRAIL.    Set *ROOT_ID_P to the ID of the transaction's root directory.    Set *BASE_ROOT_ID_P to the ID of the root directory of the    transaction's base revision.     If there is no such transaction, SVN_ERR_FS_NO_SUCH_TRANSACTION is    the error returned.     Returns SVN_ERR_FS_TRANSACTION_NOT_MUTABLE if TXN_NAME refers to a    transaction that has already been committed.     Allocate *ROOT_ID_P and *BASE_ROOT_ID_P in POOL.  */
name|svn_error_t
modifier|*
name|svn_fs_base__get_txn_ids
parameter_list|(
specifier|const
name|svn_fs_id_t
modifier|*
modifier|*
name|root_id_p
parameter_list|,
specifier|const
name|svn_fs_id_t
modifier|*
modifier|*
name|base_root_id_p
parameter_list|,
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
specifier|const
name|char
modifier|*
name|txn_name
parameter_list|,
name|trail_t
modifier|*
name|trail
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* Set the root directory of the Subversion transaction TXN_NAME in FS    to ROOT_ID, as part of TRAIL.  Do any necessary temporary    allocation in POOL.     Returns SVN_ERR_FS_TRANSACTION_NOT_MUTABLE if TXN_NAME refers to a    transaction that has already been committed.  */
name|svn_error_t
modifier|*
name|svn_fs_base__set_txn_root
parameter_list|(
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
specifier|const
name|char
modifier|*
name|txn_name
parameter_list|,
specifier|const
name|svn_fs_id_t
modifier|*
name|root_id
parameter_list|,
name|trail_t
modifier|*
name|trail
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* Add COPY_ID to the list of copies made under the Subversion    transaction TXN_NAME in FS as part of TRAIL.     Returns SVN_ERR_FS_TRANSACTION_NOT_MUTABLE if TXN_NAME refers to a    transaction that has already been committed.  */
name|svn_error_t
modifier|*
name|svn_fs_base__add_txn_copy
parameter_list|(
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
specifier|const
name|char
modifier|*
name|txn_name
parameter_list|,
specifier|const
name|char
modifier|*
name|copy_id
parameter_list|,
name|trail_t
modifier|*
name|trail
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* Set the base root directory of TXN_NAME in FS to NEW_ID, as part of    TRAIL.  Do any necessary temporary allocation in POOL.     Returns SVN_ERR_FS_TRANSACTION_NOT_MUTABLE if TXN_NAME refers to a    transaction that has already been committed.  */
name|svn_error_t
modifier|*
name|svn_fs_base__set_txn_base
parameter_list|(
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
specifier|const
name|char
modifier|*
name|txn_name
parameter_list|,
specifier|const
name|svn_fs_id_t
modifier|*
name|new_id
parameter_list|,
name|trail_t
modifier|*
name|trail
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* Set a property NAME to VALUE on transaction TXN_NAME in FS as part    of TRAIL.  Use POOL for any necessary allocations.     Returns SVN_ERR_FS_TRANSACTION_NOT_MUTABLE if TXN_NAME refers to a    transaction that has already been committed.  */
name|svn_error_t
modifier|*
name|svn_fs_base__set_txn_prop
parameter_list|(
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
specifier|const
name|char
modifier|*
name|txn_name
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|svn_string_t
modifier|*
name|value
parameter_list|,
name|trail_t
modifier|*
name|trail
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* These functions implement some of the calls in the FS loader    library's fs and txn vtables. */
name|svn_error_t
modifier|*
name|svn_fs_base__youngest_rev
parameter_list|(
name|svn_revnum_t
modifier|*
name|youngest_p
parameter_list|,
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_fs_base__revision_prop
parameter_list|(
name|svn_string_t
modifier|*
modifier|*
name|value_p
parameter_list|,
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
name|svn_revnum_t
name|rev
parameter_list|,
specifier|const
name|char
modifier|*
name|propname
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_fs_base__revision_proplist
parameter_list|(
name|apr_hash_t
modifier|*
modifier|*
name|table_p
parameter_list|,
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
name|svn_revnum_t
name|rev
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_fs_base__change_rev_prop
parameter_list|(
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
name|svn_revnum_t
name|rev
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|svn_string_t
modifier|*
specifier|const
modifier|*
name|old_value_p
parameter_list|,
specifier|const
name|svn_string_t
modifier|*
name|value
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_fs_base__begin_txn
parameter_list|(
name|svn_fs_txn_t
modifier|*
modifier|*
name|txn_p
parameter_list|,
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
name|svn_revnum_t
name|rev
parameter_list|,
name|apr_uint32_t
name|flags
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_fs_base__open_txn
parameter_list|(
name|svn_fs_txn_t
modifier|*
modifier|*
name|txn
parameter_list|,
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_fs_base__purge_txn
parameter_list|(
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
specifier|const
name|char
modifier|*
name|txn_id
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_fs_base__list_transactions
parameter_list|(
name|apr_array_header_t
modifier|*
modifier|*
name|names_p
parameter_list|,
name|svn_fs_t
modifier|*
name|fs
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_fs_base__abort_txn
parameter_list|(
name|svn_fs_txn_t
modifier|*
name|txn
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_fs_base__txn_prop
parameter_list|(
name|svn_string_t
modifier|*
modifier|*
name|value_p
parameter_list|,
name|svn_fs_txn_t
modifier|*
name|txn
parameter_list|,
specifier|const
name|char
modifier|*
name|propname
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_fs_base__txn_proplist
parameter_list|(
name|apr_hash_t
modifier|*
modifier|*
name|table_p
parameter_list|,
name|svn_fs_txn_t
modifier|*
name|txn
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* Helper func:  variant of __txn_proplist that uses an existing TRAIL.  * TXN_ID identifies the transaction.  * *TABLE_P will be non-null upon success.  */
name|svn_error_t
modifier|*
name|svn_fs_base__txn_proplist_in_trail
parameter_list|(
name|apr_hash_t
modifier|*
modifier|*
name|table_p
parameter_list|,
specifier|const
name|char
modifier|*
name|txn_id
parameter_list|,
name|trail_t
modifier|*
name|trail
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_fs_base__change_txn_prop
parameter_list|(
name|svn_fs_txn_t
modifier|*
name|txn
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|svn_string_t
modifier|*
name|value
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_fs_base__change_txn_props
parameter_list|(
name|svn_fs_txn_t
modifier|*
name|txn
parameter_list|,
specifier|const
name|apr_array_header_t
modifier|*
name|props
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __cplusplus */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* SVN_LIBSVN_FS_REVS_TXNS_H */
end_comment

end_unit

