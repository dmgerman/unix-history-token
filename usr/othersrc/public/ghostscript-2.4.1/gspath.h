begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Copyright (C) 1989, 1992 Aladdin Enterprises.  All rights reserved.    Distributed by Free Software Foundation, Inc.  This file is part of Ghostscript.  Ghostscript is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.  No author or distributor accepts responsibility to anyone for the consequences of using it or for whether it serves any particular purpose or works at all, unless he says so in writing.  Refer to the Ghostscript General Public License for full details.  Everyone is granted permission to copy, modify and redistribute Ghostscript, but only under the conditions described in the Ghostscript General Public License.  A copy of this license is supposed to have been given to you along with Ghostscript so you can know your rights and responsibilities.  It should be in a file named COPYING.  Among other things, the copyright notice and this notice must be preserved on all copies.  */
end_comment

begin_comment
comment|/* gspath.h */
end_comment

begin_comment
comment|/* Path manipulation interface for GhostScript library */
end_comment

begin_comment
comment|/* Requires gsstate.h */
end_comment

begin_comment
comment|/* Path constructors */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|gs_newpath
argument_list|(
name|P1
argument_list|(
name|gs_state
operator|*
argument_list|)
argument_list|)
decl_stmt|,
name|gs_moveto
argument_list|(
name|P3
argument_list|(
name|gs_state
operator|*
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|)
argument_list|)
decl_stmt|,
name|gs_rmoveto
argument_list|(
name|P3
argument_list|(
name|gs_state
operator|*
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|)
argument_list|)
decl_stmt|,
name|gs_lineto
argument_list|(
name|P3
argument_list|(
name|gs_state
operator|*
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|)
argument_list|)
decl_stmt|,
name|gs_rlineto
argument_list|(
name|P3
argument_list|(
name|gs_state
operator|*
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|)
argument_list|)
decl_stmt|,
name|gs_arc
argument_list|(
name|P6
argument_list|(
name|gs_state
operator|*
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|)
argument_list|)
decl_stmt|,
name|gs_arcn
argument_list|(
name|P6
argument_list|(
name|gs_state
operator|*
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|)
argument_list|)
decl_stmt|,
name|gs_arcto
argument_list|(
name|P7
argument_list|(
name|gs_state
operator|*
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|float
index|[
literal|4
index|]
argument_list|)
argument_list|)
decl_stmt|,
name|gs_curveto
argument_list|(
name|P7
argument_list|(
name|gs_state
operator|*
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|)
argument_list|)
decl_stmt|,
name|gs_rcurveto
argument_list|(
name|P7
argument_list|(
name|gs_state
operator|*
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|,
name|floatp
argument_list|)
argument_list|)
decl_stmt|,
name|gs_closepath
argument_list|(
name|P1
argument_list|(
name|gs_state
operator|*
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Add the current path to the path in the previous graphics state. */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|gs_upmergepath
argument_list|(
name|P1
argument_list|(
name|gs_state
operator|*
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Path accessors and transformers */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|gs_currentpoint
argument_list|(
name|P2
argument_list|(
specifier|const
name|gs_state
operator|*
argument_list|,
name|gs_point
operator|*
argument_list|)
argument_list|)
decl_stmt|,
name|gs_pathbbox
argument_list|(
name|P2
argument_list|(
name|gs_state
operator|*
argument_list|,
name|gs_rect
operator|*
argument_list|)
argument_list|)
decl_stmt|,
name|gs_flattenpath
argument_list|(
name|P1
argument_list|(
name|gs_state
operator|*
argument_list|)
argument_list|)
decl_stmt|,
name|gs_reversepath
argument_list|(
name|P1
argument_list|(
name|gs_state
operator|*
argument_list|)
argument_list|)
decl_stmt|,
name|gs_strokepath
argument_list|(
name|P1
argument_list|(
name|gs_state
operator|*
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Path enumeration */
end_comment

begin_define
define|#
directive|define
name|gs_pe_moveto
value|1
end_define

begin_define
define|#
directive|define
name|gs_pe_lineto
value|2
end_define

begin_define
define|#
directive|define
name|gs_pe_curveto
value|3
end_define

begin_define
define|#
directive|define
name|gs_pe_closepath
value|4
end_define

begin_typedef
typedef|typedef
name|struct
name|gs_path_enum_s
name|gs_path_enum
typedef|;
end_typedef

begin_decl_stmt
specifier|extern
specifier|const
name|uint
name|gs_path_enum_sizeof
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|gs_path_enum_init
argument_list|(
name|P2
argument_list|(
name|gs_path_enum
operator|*
argument_list|,
specifier|const
name|gs_state
operator|*
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|gs_path_enum_next
argument_list|(
name|P2
argument_list|(
name|gs_path_enum
operator|*
argument_list|,
name|gs_point
index|[
literal|3
index|]
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* 0 when done */
end_comment

begin_comment
comment|/* Clipping */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|gs_clippath
argument_list|(
name|P1
argument_list|(
name|gs_state
operator|*
argument_list|)
argument_list|)
decl_stmt|,
name|gs_initclip
argument_list|(
name|P1
argument_list|(
name|gs_state
operator|*
argument_list|)
argument_list|)
decl_stmt|,
name|gs_clip
argument_list|(
name|P1
argument_list|(
name|gs_state
operator|*
argument_list|)
argument_list|)
decl_stmt|,
name|gs_eoclip
argument_list|(
name|P1
argument_list|(
name|gs_state
operator|*
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

end_unit

