begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	compact.h	4.5	84/08/25	*/
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|vax
argument_list|)
operator|||
name|defined
argument_list|(
name|sun
argument_list|)
end_if

begin_typedef
typedef|typedef
name|int
name|longint
typedef|;
end_typedef

begin_else
else|#
directive|else
end_else

begin_typedef
typedef|typedef
name|long
name|longint
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<sys/param.h>
end_include

begin_include
include|#
directive|include
file|<sys/stat.h>
end_include

begin_include
include|#
directive|include
file|<sys/dir.h>
end_include

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_define
define|#
directive|define
name|COMPACTED
value|017777
end_define

begin_define
define|#
directive|define
name|PACKED
value|017437
end_define

begin_struct
struct|struct
name|charac
block|{
if|#
directive|if
name|defined
argument_list|(
name|vax
argument_list|)
operator|||
name|defined
argument_list|(
name|pdp11
argument_list|)
name|char
name|lob
decl_stmt|,
name|hib
decl_stmt|;
else|#
directive|else
name|char
name|hib
decl_stmt|,
name|lob
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_union
union|union
name|cio
block|{
name|struct
name|charac
name|chars
decl_stmt|;
name|short
name|integ
decl_stmt|;
block|}
union|;
end_union

begin_define
define|#
directive|define
name|LLEAF
value|010
end_define

begin_define
define|#
directive|define
name|RLEAF
value|04
end_define

begin_define
define|#
directive|define
name|SEEN
value|02
end_define

begin_define
define|#
directive|define
name|FBIT
value|01
end_define

begin_define
define|#
directive|define
name|EF
value|0400
end_define

begin_define
define|#
directive|define
name|NC
value|0401
end_define

begin_define
define|#
directive|define
name|NF
value|(NC+1)
end_define

begin_struct
struct|struct
name|fpoint
block|{
name|struct
name|node
modifier|*
name|fp
decl_stmt|;
name|int
name|flags
decl_stmt|;
block|}
name|in
index|[
name|NF
index|]
struct|;
end_struct

begin_struct
struct|struct
name|index
block|{
name|struct
name|node
modifier|*
name|pt
decl_stmt|;
name|struct
name|index
modifier|*
name|next
decl_stmt|;
block|}
name|dir
index|[
literal|2
operator|*
name|NF
index|]
struct|,
modifier|*
name|head
struct|,
modifier|*
name|flist
struct|,
modifier|*
name|dirp
struct|,
modifier|*
name|dirq
struct|;
end_struct

begin_define
define|#
directive|define
name|NEW
value|flist; flist = flist->next
end_define

begin_union
union|union
name|treep
block|{
name|struct
name|node
modifier|*
name|p
decl_stmt|;
name|int
name|ch
decl_stmt|;
block|}
union|;
end_union

begin_struct
struct|struct
name|node
block|{
name|struct
name|fpoint
name|fath
decl_stmt|;
name|union
name|treep
name|sp
index|[
literal|2
index|]
decl_stmt|;
name|struct
name|index
modifier|*
name|top
index|[
literal|2
index|]
decl_stmt|;
name|longint
name|count
index|[
literal|2
index|]
decl_stmt|;
define|#
directive|define
name|LEFT
value|0
define|#
directive|define
name|RIGHT
value|1
block|}
name|dict
index|[
name|NF
index|]
struct|,
modifier|*
name|bottom
struct|;
end_struct

begin_decl_stmt
name|FILE
modifier|*
name|cfp
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|FILE
modifier|*
name|uncfp
decl_stmt|;
end_decl_stmt

end_unit

