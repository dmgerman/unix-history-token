begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $Header: warp.h,v 7.0.1.2 86/12/12 17:08:42 lwall Exp $ */
end_comment

begin_comment
comment|/* $Log:	warp.h,v $  * Revision 7.0.1.2  86/12/12  17:08:42  lwall  * Baseline for net release.  *   * Revision 7.0.1.1  86/10/16  10:54:26  lwall  * Added Damage.  Fixed random bugs.  *   * Revision 7.0  86/10/08  15:17:55  lwall  * Split into separate files.  Added amoebas and pirates.  *   */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|errno
decl_stmt|;
end_decl_stmt

begin_include
include|#
directive|include
file|"config.h"
end_include

begin_comment
comment|/* generated by Configure script */
end_comment

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_include
include|#
directive|include
file|<signal.h>
end_include

begin_include
include|#
directive|include
file|<ctype.h>
end_include

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<sys/stat.h>
end_include

begin_include
include|#
directive|include
file|<errno.h>
end_include

begin_comment
comment|/* WARPLIB must be readable and writeable by warp, but not by anyone who you  * don't trust.  In other words, to set up warp so everyone can play and  * no one can cheat, give warp a uid of its own and make warp setuid to  * that uid.  WARPLIB must then NOT be made writeable by the world,  * since no attempt is made to encrypt saved games or anything.  * (It must be readable by the world, however, due to a strangeness in  * access.)  */
end_comment

begin_define
define|#
directive|define
name|SAVEDIR
value|"./"
end_define

begin_define
define|#
directive|define
name|NEWSFILE
value|"warp.news"
end_define

begin_define
define|#
directive|define
name|HELPFILE
value|"warp.doc"
end_define

begin_define
define|#
directive|define
name|LOCKFILE
value|".warp.lock"
end_define

begin_define
define|#
directive|define
name|LOGFILE
value|"warp.log"
end_define

begin_define
define|#
directive|define
name|SCOREBOARD
value|"warp.top"
end_define

begin_define
define|#
directive|define
name|LSCOREBOARD
value|"warp.lowtop"
end_define

begin_define
define|#
directive|define
name|FSCOREBOARD
value|"warp.funtop"
end_define

begin_define
define|#
directive|define
name|TMPSCOREBOARD
value|"warp.topnew"
end_define

begin_define
define|#
directive|define
name|WARPMACRO
value|"%X/Kbmap.%{TERM}"
end_define

begin_comment
comment|/* warp library */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|WARPLIB
end_ifndef

begin_comment
comment|/* ~ and %l only ("~%l" is permissable) */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|PRIVLIB
end_ifdef

begin_define
define|#
directive|define
name|WARPLIB
value|PRIVLIB
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|WARPLIB
value|"/usr/games/warp"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|EXT
name|char
modifier|*
name|warplib
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|PERMMAPS
value|8
end_define

begin_comment
comment|/* how many starmaps are permanent */
end_comment

begin_define
define|#
directive|define
name|MAPS
value|20
end_define

begin_comment
comment|/* how many starmaps to choose from */
end_comment

begin_comment
comment|/* (MAPS - PERMMAPS is # of half-gone universes) */
end_comment

begin_comment
comment|/*  * Screen size info, minimum screen size is 23x40 (actually 24x80).  * YSIZE and XSIZE should be relatively prime so that a torpedo launched  * at an angle will eventually cover the whole screen.  * To calculate a new position for something:  * new_position = (current_position + delta + ?SIZE00) % ?SIZE  * This allows for negative deltas of up to ?SIZE00 (% doesn't work right  * on negative numbers).  * ?SIZE01, etc. are fudges for efficiency--they already include a delta.  */
end_comment

begin_define
define|#
directive|define
name|XYSIZE
value|920
end_define

begin_define
define|#
directive|define
name|XYSIZEx4
value|3680
end_define

begin_define
define|#
directive|define
name|YSIZE
value|23
end_define

begin_define
define|#
directive|define
name|YSIZE00
value|2300
end_define

begin_define
define|#
directive|define
name|YSIZE01
value|2301
end_define

begin_define
define|#
directive|define
name|YSIZE99
value|2299
end_define

begin_define
define|#
directive|define
name|XSIZE
value|40
end_define

begin_define
define|#
directive|define
name|XSIZE00
value|4000
end_define

begin_define
define|#
directive|define
name|XSIZE01
value|4001
end_define

begin_define
define|#
directive|define
name|XSIZE99
value|3999
end_define

begin_define
define|#
directive|define
name|XSIZE02
value|4002
end_define

begin_define
define|#
directive|define
name|XSIZE98
value|3998
end_define

begin_define
define|#
directive|define
name|XSIZE03
value|4003
end_define

begin_define
define|#
directive|define
name|XSIZE97
value|3997
end_define

begin_define
define|#
directive|define
name|XSIZE08
value|4008
end_define

begin_define
define|#
directive|define
name|XSIZE92
value|3992
end_define

begin_decl_stmt
name|EXT
name|char
name|amb
index|[
name|YSIZE
index|]
index|[
name|XSIZE
index|]
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|WHOAMI
end_ifdef

begin_include
include|#
directive|include
file|<whoami.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|isalnum
end_ifndef

begin_define
define|#
directive|define
name|isalnum
parameter_list|(
name|c
parameter_list|)
value|(isalpha(c) || isdigit(c))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|TERMIO
end_ifdef

begin_include
include|#
directive|include
file|<termio.h>
end_include

begin_else
else|#
directive|else
end_else

begin_include
include|#
directive|include
file|<sgtty.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<sys/timeb.h>
end_include

begin_include
include|#
directive|include
file|<pwd.h>
end_include

begin_define
define|#
directive|define
name|BITSPERBYTE
value|8
end_define

begin_define
define|#
directive|define
name|LBUFLEN
value|512
end_define

begin_comment
comment|/* line buffer length */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|pdp11
end_ifdef

begin_define
define|#
directive|define
name|CBUFLEN
value|256
end_define

begin_comment
comment|/* command buffer length */
end_comment

begin_define
define|#
directive|define
name|PUSHSIZE
value|128
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|CBUFLEN
value|512
end_define

begin_comment
comment|/* command buffer length */
end_comment

begin_define
define|#
directive|define
name|PUSHSIZE
value|256
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|pdp11
end_ifdef

begin_define
define|#
directive|define
name|MAXFILENAME
value|128
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|MAXFILENAME
value|512
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|FINISHCMD
value|0177
end_define

begin_comment
comment|/* some handy defs */
end_comment

begin_define
define|#
directive|define
name|bool
value|char
end_define

begin_define
define|#
directive|define
name|TRUE
value|(1)
end_define

begin_define
define|#
directive|define
name|FALSE
value|(0)
end_define

begin_define
define|#
directive|define
name|Null
parameter_list|(
name|t
parameter_list|)
value|((t)0)
end_define

begin_define
define|#
directive|define
name|Nullch
value|Null(char *)
end_define

begin_define
define|#
directive|define
name|Nullfp
value|Null(FILE *)
end_define

begin_define
define|#
directive|define
name|Ctl
parameter_list|(
name|ch
parameter_list|)
value|(ch& 037)
end_define

begin_define
define|#
directive|define
name|strNE
parameter_list|(
name|s1
parameter_list|,
name|s2
parameter_list|)
value|(strcmp(s1,s2))
end_define

begin_define
define|#
directive|define
name|strEQ
parameter_list|(
name|s1
parameter_list|,
name|s2
parameter_list|)
value|(!strcmp(s1,s2))
end_define

begin_define
define|#
directive|define
name|strnNE
parameter_list|(
name|s1
parameter_list|,
name|s2
parameter_list|,
name|l
parameter_list|)
value|(strncmp(s1,s2,l))
end_define

begin_define
define|#
directive|define
name|strnEQ
parameter_list|(
name|s1
parameter_list|,
name|s2
parameter_list|,
name|l
parameter_list|)
value|(!strncmp(s1,s2,l))
end_define

begin_define
define|#
directive|define
name|sgn
parameter_list|(
name|x
parameter_list|)
value|((x)< 0 ? -1 : (x)> 0)
end_define

begin_comment
comment|/* Things we can figure out ourselves */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|SIGPROF
end_ifdef

begin_define
define|#
directive|define
name|BSD42
end_define

begin_comment
comment|/* do we have Berkeley 4.2? */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|FIONREAD
end_ifdef

begin_define
define|#
directive|define
name|PENDING
end_define

begin_else
else|#
directive|else
end_else

begin_ifdef
ifdef|#
directive|ifdef
name|O_NDELAY
end_ifdef

begin_define
define|#
directive|define
name|PENDING
end_define

begin_else
else|#
directive|else
end_else

begin_ifdef
ifdef|#
directive|ifdef
name|RDCHK
end_ifdef

begin_define
define|#
directive|define
name|PENDING
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|UNLINK
parameter_list|(
name|victim
parameter_list|)
value|unlink(victim)
end_define

begin_comment
comment|/* Valid substitutions for strings marked with % comment are:  *	%H	Host name (yours)  *	%L	Login name (yours)  *	%N	Full name (yours)  *	%O	Original working directory (where you ran warp from)  *	%X	Warp library directory  *	%~	Home directory  *	%.	Directory containing . files  *	%$	current process number  *	%{name} Environment variable "name".  %{name-default} form allowed.  *	%"prompt"  *		Print prompt and insert what is typed.  *	%`command`  *		Insert output of command.  *	%(test_text=pattern?if_text:else_text)  *		Substitute if_text if test_text matches pattern, otherwise  *		substitute else_text.  Use != for negated match.  *		% substitutions are done on test_text, if_text, and else_text.  *		(Note: %() only works if CONDSUB defined.)  */
end_comment

begin_comment
comment|/* *** System Dependent Stuff *** */
end_comment

begin_comment
comment|/* NOTE: many of these are defined in the config.h file */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|ROOTID
end_ifndef

begin_define
define|#
directive|define
name|ROOTID
value|0
end_define

begin_comment
comment|/* uid of superuser */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|sigset
value|Signal
end_define

begin_define
define|#
directive|define
name|sigignore
parameter_list|(
name|sig
parameter_list|)
value|Signal(sig,SIG_IGN)
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|LOGDIRFIELD
end_ifndef

begin_define
define|#
directive|define
name|LOGDIRFIELD
value|6
end_define

begin_comment
comment|/* Which field (origin 1) is the */
end_comment

begin_comment
comment|/* login directory in /etc/passwd? */
end_comment

begin_comment
comment|/* (If it is not kept in passwd, */
end_comment

begin_comment
comment|/* but getpwnam() returns it, */
end_comment

begin_comment
comment|/* define the symbol GETPWENT) */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|GCOSFIELD
end_ifndef

begin_define
define|#
directive|define
name|GCOSFIELD
value|5
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Undefine any of the following features to save both I and D space */
end_comment

begin_comment
comment|/* In general, earlier ones are easier to get along without */
end_comment

begin_comment
comment|/* Pdp11's without split I and D may have to undefine them all */
end_comment

begin_define
define|#
directive|define
name|DEBUGGING
end_define

begin_comment
comment|/* include debugging code */
end_comment

begin_define
define|#
directive|define
name|PUSHBACK
end_define

begin_comment
comment|/* macros and keymaps using pushback buffer */
end_comment

begin_define
define|#
directive|define
name|CONDSUB
end_define

begin_comment
comment|/* allow %(cond?text:text) */
end_comment

begin_define
define|#
directive|define
name|BACKTICK
end_define

begin_comment
comment|/* allow %`command` */
end_comment

begin_define
define|#
directive|define
name|PROMPTTTY
end_define

begin_comment
comment|/* allow %"prompt" */
end_comment

begin_define
define|#
directive|define
name|GETLOGIN
end_define

begin_comment
comment|/* use getlogin() routine as backup to environment */
end_comment

begin_comment
comment|/* variables USER or LOGNAME */
end_comment

begin_define
define|#
directive|define
name|TILDENAME
end_define

begin_comment
comment|/* allow ~logname expansion */
end_comment

begin_define
define|#
directive|define
name|GETWD
end_define

begin_comment
comment|/* use our getwd() instead of piped in pwd */
end_comment

begin_define
define|#
directive|define
name|SETUIDGID
end_define

begin_comment
comment|/* substitute eaccess() for access() so that rn */
end_comment

begin_comment
comment|/* can run setuid or setgid */
end_comment

begin_comment
comment|/* if not setuid or setgid, you don't need it */
end_comment

begin_define
define|#
directive|define
name|VERBOSE
end_define

begin_comment
comment|/* compile in more informative messages */
end_comment

begin_define
define|#
directive|define
name|TERSE
end_define

begin_comment
comment|/* compile in shorter messages */
end_comment

begin_comment
comment|/* some dependencies among options */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SETUIDGID
end_ifndef

begin_define
define|#
directive|define
name|eaccess
value|access
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|VERBOSE
end_ifdef

begin_ifdef
ifdef|#
directive|ifdef
name|TERSE
end_ifdef

begin_define
define|#
directive|define
name|IF
parameter_list|(
name|c
parameter_list|)
value|if (c)
end_define

begin_define
define|#
directive|define
name|ELSE
value|else
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* !TERSE */
end_comment

begin_define
define|#
directive|define
name|IF
parameter_list|(
name|c
parameter_list|)
end_define

begin_define
define|#
directive|define
name|ELSE
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* !VERBOSE */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|TERSE
end_ifndef

begin_define
define|#
directive|define
name|TERSE
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|IF
parameter_list|(
name|c
parameter_list|)
value|"IF" outside of VERBOSE???
end_define

begin_define
define|#
directive|define
name|ELSE
value|"ELSE" outside of VERBOSE???
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|DEBUGGING
end_ifdef

begin_define
define|#
directive|define
name|assert
parameter_list|(
name|ex
parameter_list|)
value|{if (!(ex)){fprintf(stderr,"Assertion failed: file %s, line %d\r\n", __FILE__, __LINE__);sig_catcher(0);}}
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|assert
parameter_list|(
name|ex
parameter_list|)
value|;
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|TCSIZE
value|512
end_define

begin_comment
comment|/* capacity for termcap strings */
end_comment

begin_comment
comment|/* End of Space Conservation Section */
end_comment

begin_comment
comment|/* More System Dependencies */
end_comment

begin_comment
comment|/* preferred shell for use in doshell routine */
end_comment

begin_comment
comment|/*  ksh or sh would be okay here */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|PREFSHELL
end_ifndef

begin_define
define|#
directive|define
name|PREFSHELL
value|"/bin/csh"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* path to fastest starting shell */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SH
end_ifndef

begin_define
define|#
directive|define
name|SH
value|"/bin/sh"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* location of macro file */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|WARPMACRO
end_ifndef

begin_ifdef
ifdef|#
directive|ifdef
name|PUSHBACK
end_ifdef

begin_define
define|#
directive|define
name|WARPMACRO
value|"%./.warpmac"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* location of full name */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|FULLNAMEFILE
end_ifndef

begin_ifndef
ifndef|#
directive|ifndef
name|PASSNAMES
end_ifndef

begin_define
define|#
directive|define
name|FULLNAMEFILE
value|"%./.fullname"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* a motd-like file for warp */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|WARPNEWSNAME
end_ifndef

begin_comment
comment|/* % and ~ */
end_comment

begin_define
define|#
directive|define
name|WARPNEWSNAME
value|"%X/warp.news"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* typedefs */
end_comment

begin_typedef
typedef|typedef
name|unsigned
name|int
name|MEM_SIZE
typedef|;
end_typedef

begin_comment
comment|/* for passing to malloc */
end_comment

begin_comment
comment|/* *** end of the machine dependent stuff *** */
end_comment

begin_comment
comment|/* GLOBAL THINGS */
end_comment

begin_comment
comment|/* file statistics area */
end_comment

begin_decl_stmt
name|EXT
name|struct
name|stat
name|filestat
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* various things of type char */
end_comment

begin_function_decl
name|char
modifier|*
name|index
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|rindex
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|getenv
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|strcat
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|strcpy
parameter_list|()
function_decl|;
end_function_decl

begin_decl_stmt
name|EXT
name|char
name|buf
index|[
name|LBUFLEN
operator|+
literal|1
index|]
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* general purpose line buffer */
end_comment

begin_function_decl
name|EXT
name|char
modifier|*
name|cwd
name|INIT
parameter_list|(
name|Nullch
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* current working directory */
end_comment

begin_comment
comment|/* switches */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|DEBUGGING
end_ifdef

begin_decl_stmt
name|EXT
name|int
name|debug
name|INIT
argument_list|(
literal|0
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* -D */
end_comment

begin_define
define|#
directive|define
name|DEB_FILEXP
value|64
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|VERBOSE
end_ifdef

begin_ifdef
ifdef|#
directive|ifdef
name|TERSE
end_ifdef

begin_function_decl
name|EXT
name|bool
name|verbose
name|INIT
parameter_list|(
name|TRUE
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* +t */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* miscellania */
end_comment

begin_function_decl
name|EXT
name|FILE
modifier|*
name|tmpfp
name|INIT
parameter_list|(
name|Nullfp
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* scratch fp */
end_comment

begin_define
define|#
directive|define
name|NOMARKING
value|0
end_define

begin_define
define|#
directive|define
name|STANDOUT
value|1
end_define

begin_define
define|#
directive|define
name|UNDERLINE
value|2
end_define

begin_comment
comment|/* Factored strings */
end_comment

begin_decl_stmt
name|EXT
name|char
name|nullstr
index|[]
name|INIT
argument_list|(
literal|""
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|char
name|readerr
index|[]
name|INIT
argument_list|(
literal|"warp read error"
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|char
name|cantopen
index|[]
name|INIT
argument_list|(
literal|"Can't open %s\r\n"
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|VERBOSE
end_ifdef

begin_decl_stmt
name|EXT
name|char
name|nocd
index|[]
name|INIT
argument_list|(
literal|"Can't chdir to directory %s\r\n"
argument_list|)
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
name|EXT
name|char
name|nocd
index|[]
name|INIT
argument_list|(
literal|"Can't find %s\r\n"
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|extern
name|int
name|errno
decl_stmt|;
end_decl_stmt

begin_function_decl
name|EXT
name|bool
name|justonemoretime
name|INIT
parameter_list|(
name|TRUE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|keepgoing
name|INIT
parameter_list|(
name|TRUE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|friendspec
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|piratespec
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|amoebaspec
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|starspec
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|klingspec
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|apolspec
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|crushspec
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|romspec
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|prespec
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|tholspec
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|gornspec
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|beginner
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|massacre
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|lowspeed
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|debugging
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|didkill
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|experimenting
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|scorespec
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|EXT
name|bool
name|metakey
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|EXT
name|bool
name|bombed_out
decl_stmt|;
end_decl_stmt

begin_function_decl
name|EXT
name|bool
name|panic
name|INIT
parameter_list|(
name|FALSE
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|EXT
name|bool
name|madgorns
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|madfriends
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|inumpirates
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numpirates
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|inumfriends
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numfriends
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|inumamoebas
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numamoebas
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|inumstars
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numstars
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|inumenemies
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numenemies
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|inumroms
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|inumthols
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|inumapollos
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numapollos
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|apolloflag
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|inumcrushes
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numcrushes
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|inumgorns
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numgorns
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|deados
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|deadmudds
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|smarts
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|ismarts
name|INIT
argument_list|(
literal|0
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numos
name|INIT
argument_list|(
literal|0
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numxes
name|INIT
argument_list|(
literal|0
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|ient
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numents
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|ibase
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numbases
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|inuminhab
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|numinhab
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|wave
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|cumsmarts
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|prescene
name|INIT
argument_list|(
operator|-
literal|1
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|scandist
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|antibase
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|sm35
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|sm45
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|sm50
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|sm55
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|sm80
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|sm95
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|entmax
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|basemax
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|enemshields
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|super
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|whenok
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|yamblast
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|xamblast
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|int
name|ambsize
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|EXT
name|char
name|spbuf
index|[
literal|512
index|]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|index
argument_list|()
decl_stmt|,
modifier|*
name|ttyname
argument_list|()
decl_stmt|,
modifier|*
name|malloc
argument_list|()
decl_stmt|,
modifier|*
name|ctime
argument_list|()
decl_stmt|,
modifier|*
name|strcpy
argument_list|()
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|getenv
argument_list|()
decl_stmt|,
name|cmstore
argument_list|()
decl_stmt|,
modifier|*
name|tgoto
argument_list|()
decl_stmt|;
end_decl_stmt

begin_function_decl
name|long
name|atol
parameter_list|()
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|Fclose
value|(void)fclose
end_define

begin_define
define|#
directive|define
name|Fflush
value|(void)fflush
end_define

begin_define
define|#
directive|define
name|Fgets
value|(void)fgets
end_define

begin_define
define|#
directive|define
name|Sprintf
value|(void)sprintf
end_define

begin_define
define|#
directive|define
name|Signal
value|(void)signal
end_define

begin_define
define|#
directive|define
name|Safecpy
value|(void)safecpy
end_define

begin_define
define|#
directive|define
name|Cpytill
value|(void)cpytill
end_define

begin_define
define|#
directive|define
name|Tract
value|(void)tract
end_define

begin_define
define|#
directive|define
name|Make_object
value|(void)make_object
end_define

begin_define
define|#
directive|define
name|Read_tty
value|(void)read_tty
end_define

end_unit

