begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1990 The Regents of the University of California.  * All rights reserved.  *  * %sccs.include.redist.c%  *  *	@(#)conf.h	7.9 (Berkeley) %G%  */
end_comment

begin_comment
comment|/*  * Definitions of device driver entry switches  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__STDC__
end_ifdef

begin_struct_decl
struct_decl|struct
name|tty
struct_decl|;
end_struct_decl

begin_endif
endif|#
directive|endif
end_endif

begin_struct
struct|struct
name|bdevsw
block|{
name|int
argument_list|(
argument|*d_open
argument_list|)
name|__P
argument_list|(
operator|(
name|dev_t
name|dev
operator|,
name|int
name|oflags
operator|,
name|int
name|devtype
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_close
argument_list|)
name|__P
argument_list|(
operator|(
name|dev_t
name|dev
operator|,
name|int
name|fflag
operator|,
name|int
name|devtype
operator|,
expr|struct
name|proc
operator|*
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_strategy
argument_list|)
name|__P
argument_list|(
operator|(
expr|struct
name|buf
operator|*
name|bp
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_ioctl
argument_list|)
name|__P
argument_list|(
operator|(
name|dev_t
name|dev
operator|,
name|int
name|cmd
operator|,
name|caddr_t
name|data
operator|,
name|int
name|fflag
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_dump
argument_list|)
name|__P
argument_list|(
operator|(
name|dev_t
name|dev
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_psize
argument_list|)
name|__P
argument_list|(
operator|(
name|dev_t
name|dev
operator|)
argument_list|)
expr_stmt|;
name|int
name|d_flags
decl_stmt|;
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|KERNEL
end_ifdef

begin_decl_stmt
name|struct
name|bdevsw
name|bdevsw
index|[]
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_struct
struct|struct
name|cdevsw
block|{
name|int
argument_list|(
argument|*d_open
argument_list|)
name|__P
argument_list|(
operator|(
name|dev_t
name|dev
operator|,
name|int
name|oflags
operator|,
name|int
name|devtype
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_close
argument_list|)
name|__P
argument_list|(
operator|(
name|dev_t
name|dev
operator|,
name|int
name|fflag
operator|,
name|int
name|devtype
operator|,
expr|struct
name|proc
operator|*
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_read
argument_list|)
name|__P
argument_list|(
operator|(
name|dev_t
name|dev
operator|,
expr|struct
name|uio
operator|*
name|uio
operator|,
name|int
name|ioflag
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_write
argument_list|)
name|__P
argument_list|(
operator|(
name|dev_t
name|dev
operator|,
expr|struct
name|uio
operator|*
name|uio
operator|,
name|int
name|ioflag
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_ioctl
argument_list|)
name|__P
argument_list|(
operator|(
name|dev_t
name|dev
operator|,
name|int
name|cmd
operator|,
name|caddr_t
name|data
operator|,
name|int
name|fflag
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_stop
argument_list|)
name|__P
argument_list|(
operator|(
expr|struct
name|tty
operator|*
name|tp
operator|,
name|int
name|rw
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_reset
argument_list|)
name|__P
argument_list|(
operator|(
name|int
name|uban
operator|)
argument_list|)
expr_stmt|;
comment|/* XXX */
name|struct
name|tty
modifier|*
name|d_ttys
decl_stmt|;
name|int
argument_list|(
argument|*d_select
argument_list|)
name|__P
argument_list|(
operator|(
name|dev_t
name|dev
operator|,
name|int
name|which
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_mmap
argument_list|)
name|__P
argument_list|(
operator|(
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*d_strategy
argument_list|)
name|__P
argument_list|(
operator|(
expr|struct
name|buf
operator|*
name|bp
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|KERNEL
end_ifdef

begin_decl_stmt
name|struct
name|cdevsw
name|cdevsw
index|[]
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* symbolic sleep message strings */
end_comment

begin_decl_stmt
specifier|extern
name|char
name|devopn
index|[]
decl_stmt|,
name|devio
index|[]
decl_stmt|,
name|devwait
index|[]
decl_stmt|,
name|devin
index|[]
decl_stmt|,
name|devout
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
name|devioc
index|[]
decl_stmt|,
name|devcls
index|[]
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_struct
struct|struct
name|linesw
block|{
name|int
function_decl|(
modifier|*
name|l_open
function_decl|)
parameter_list|()
function_decl|;
name|int
function_decl|(
modifier|*
name|l_close
function_decl|)
parameter_list|()
function_decl|;
name|int
function_decl|(
modifier|*
name|l_read
function_decl|)
parameter_list|()
function_decl|;
name|int
function_decl|(
modifier|*
name|l_write
function_decl|)
parameter_list|()
function_decl|;
name|int
function_decl|(
modifier|*
name|l_ioctl
function_decl|)
parameter_list|()
function_decl|;
name|int
function_decl|(
modifier|*
name|l_rint
function_decl|)
parameter_list|()
function_decl|;
name|int
function_decl|(
modifier|*
name|l_rend
function_decl|)
parameter_list|()
function_decl|;
name|int
function_decl|(
modifier|*
name|l_meta
function_decl|)
parameter_list|()
function_decl|;
name|int
function_decl|(
modifier|*
name|l_start
function_decl|)
parameter_list|()
function_decl|;
name|int
function_decl|(
modifier|*
name|l_modem
function_decl|)
parameter_list|()
function_decl|;
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|KERNEL
end_ifdef

begin_decl_stmt
name|struct
name|linesw
name|linesw
index|[]
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_struct
struct|struct
name|swdevt
block|{
name|dev_t
name|sw_dev
decl_stmt|;
name|int
name|sw_freed
decl_stmt|;
name|int
name|sw_nblks
decl_stmt|;
name|struct
name|vnode
modifier|*
name|sw_vp
decl_stmt|;
ifdef|#
directive|ifdef
name|SECSIZE
name|int
name|sw_blksize
decl_stmt|;
name|int
name|sw_bshift
decl_stmt|;
endif|#
directive|endif
endif|SECSIZE
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|KERNEL
end_ifdef

begin_decl_stmt
name|struct
name|swdevt
name|swdevt
index|[]
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

