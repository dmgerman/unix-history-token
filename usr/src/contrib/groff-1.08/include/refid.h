begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C++ -*-
end_comment

begin_comment
comment|/* Copyright (C) 1989, 1990, 1991, 1992 Free Software Foundation, Inc.      Written by James Clark (jjc@jclark.com)  This file is part of groff.  groff is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  groff is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with groff; see the file COPYING.  If not, write to the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */
end_comment

begin_decl_stmt
name|class
name|reference_id
block|{
name|int
name|filename_id
decl_stmt|;
name|int
name|pos
decl_stmt|;
name|public
label|:
name|reference_id
argument_list|()
operator|:
name|filename_id
argument_list|(
argument|-
literal|1
argument_list|)
block|{ }
name|reference_id
argument_list|(
argument|int fid
argument_list|,
argument|int off
argument_list|)
operator|:
name|filename_id
argument_list|(
name|fid
argument_list|)
operator|,
name|pos
argument_list|(
argument|off
argument_list|)
block|{ }
name|unsigned
name|hash
argument_list|()
specifier|const
block|{
return|return
operator|(
name|filename_id
operator|<<
literal|4
operator|)
operator|+
name|pos
return|;
block|}
name|int
name|is_null
argument_list|()
specifier|const
block|{
return|return
name|filename_id
operator|<
literal|0
return|;
block|}
name|friend
specifier|inline
name|int
name|operator
operator|==
operator|(
specifier|const
name|reference_id
operator|&
operator|,
specifier|const
name|reference_id
operator|&
operator|)
expr_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_expr_stmt
specifier|inline
name|int
name|operator
operator|==
operator|(
specifier|const
name|reference_id
operator|&
name|r1
operator|,
specifier|const
name|reference_id
operator|&
name|r2
operator|)
block|{
return|return
name|r1
operator|.
name|filename_id
operator|==
name|r2
operator|.
name|filename_id
operator|&&
name|r1
operator|.
name|pos
operator|==
name|r2
operator|.
name|pos
return|;
block|}
end_expr_stmt

end_unit

