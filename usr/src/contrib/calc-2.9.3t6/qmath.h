begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1994 David I. Bell  * Permission is granted to use, distribute, or modify this source,  * provided that this copyright notice remains intact.  *  * Data structure declarations for extended precision rational arithmetic.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|QMATH_H
end_ifndef

begin_define
define|#
directive|define
name|QMATH_H
end_define

begin_include
include|#
directive|include
file|"zmath.h"
end_include

begin_comment
comment|/*  * Rational arithmetic definitions.  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|ZVALUE
name|num
decl_stmt|;
comment|/* numerator (containing sign) */
name|ZVALUE
name|den
decl_stmt|;
comment|/* denominator (always positive) */
name|long
name|links
decl_stmt|;
comment|/* number of links to this value */
block|}
name|NUMBER
typedef|;
end_typedef

begin_comment
comment|/*  * Input. output, allocation, and conversion routines.  */
end_comment

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qalloc
name|MATH_PROTO
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qcopy
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|iitoq
name|MATH_PROTO
argument_list|(
operator|(
name|long
name|i1
operator|,
name|long
name|i2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|atoq
name|MATH_PROTO
argument_list|(
operator|(
name|char
operator|*
name|str
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|itoq
name|MATH_PROTO
argument_list|(
operator|(
name|long
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|long
name|qtoi
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|long
name|qparse
name|MATH_PROTO
argument_list|(
operator|(
name|char
operator|*
name|str
operator|,
name|int
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|qfreenum
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|qprintnum
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|int
name|mode
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|qprintff
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|width
operator|,
name|long
name|precision
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|qprintfe
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|width
operator|,
name|long
name|precision
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|qprintfr
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|width
operator|,
name|BOOL
name|force
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|qprintfd
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|width
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|qprintfx
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|width
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|qprintfb
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|width
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|qprintfo
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|width
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|tilde_ok
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|tab_ok
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Basic numeric routines.  */
end_comment

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qaddi
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qmuli
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qdivi
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qadd
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qsub
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qmul
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qdiv
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qquo
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qmod
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qmin
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qmax
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qand
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qor
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qxor
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qpowermod
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|,
name|NUMBER
operator|*
name|q3
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qpowi
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qsquare
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qneg
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qsign
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qint
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qfrac
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qnum
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qden
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qinv
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qabs
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qinc
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qdec
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qshift
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|n
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qtrunc
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qround
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|places
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qbtrunc
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qbround
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|places
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qscale
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|BOOL
name|qdivides
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|BOOL
name|qcmp
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|BOOL
name|qcmpi
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|FLAG
name|qrel
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|FLAG
name|qreli
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|BOOL
name|qisset
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * More complicated numeric functions.  */
end_comment

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qcomb
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qgcd
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qlcm
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qfact
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qpfact
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qminv
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qfacrem
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qperm
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qgcdrem
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qlowfactor
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qfib
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qcfappr
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qisqrt
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qjacobi
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qiroot
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qbappr
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qlcmfact
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qminmod
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qredcin
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qredcout
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qredcmul
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|,
name|NUMBER
operator|*
name|q3
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qredcsquare
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qredcpower
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|,
name|NUMBER
operator|*
name|q3
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|BOOL
name|qprimetest
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|BOOL
name|qissquare
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|long
name|qilog2
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|long
name|qilog10
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|BOOL
name|qcmpmod
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|,
name|NUMBER
operator|*
name|q3
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|BOOL
name|qquomod
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|,
name|NUMBER
operator|*
operator|*
name|retdiv
operator|,
name|NUMBER
operator|*
operator|*
name|retmod
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|FLAG
name|qnear
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|FLAG
name|qdigit
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|long
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|long
name|qprecision
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|long
name|qplaces
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|long
name|qdigits
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|HASH
name|qhash
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|setepsilon
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_if
if|#
directive|if
literal|0
end_if

begin_endif
unit|extern NUMBER *qbitvalue MATH_PROTO((long i)); extern NUMBER *qmulmod MATH_PROTO((NUMBER *q1, NUMBER *q2, NUMBER *q3)); extern NUMBER *qsquaremod MATH_PROTO((NUMBER *q1, NUMBER *q2)); extern NUMBER *qaddmod MATH_PROTO((NUMBER *q1, NUMBER *q2, NUMBER *q3)); extern NUMBER *qsubmod MATH_PROTO((NUMBER *q1, NUMBER *q2, NUMBER *q3)); extern NUMBER *qreadval MATH_PROTO((FILE *fp)); extern NUMBER *qnegmod MATH_PROTO((NUMBER *q1, NUMBER *q2)); extern BOOL qbittest MATH_PROTO((NUMBER *q, long i)); extern FLAG qtest MATH_PROTO((NUMBER *q));
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * Transcendental functions.  These all take an epsilon argument to  * specify the required accuracy of the calculation.  */
end_comment

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qsqrt
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qpower
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qroot
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qcos
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qsin
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qexp
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qln
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qtan
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qacos
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qasin
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qatan
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qatan2
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qhypot
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q1
operator|,
name|NUMBER
operator|*
name|q2
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qcosh
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qsinh
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qtanh
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qacosh
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qasinh
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qatanh
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qlegtoleg
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|q
operator|,
name|NUMBER
operator|*
name|epsilon
operator|,
name|BOOL
name|wantneg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|qpi
name|MATH_PROTO
argument_list|(
operator|(
name|NUMBER
operator|*
name|epsilon
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * macro expansions to speed this thing up  */
end_comment

begin_define
define|#
directive|define
name|qiszero
parameter_list|(
name|q
parameter_list|)
value|(ziszero((q)->num))
end_define

begin_define
define|#
directive|define
name|qisneg
parameter_list|(
name|q
parameter_list|)
value|(zisneg((q)->num))
end_define

begin_define
define|#
directive|define
name|qispos
parameter_list|(
name|q
parameter_list|)
value|(zispos((q)->num))
end_define

begin_define
define|#
directive|define
name|qisint
parameter_list|(
name|q
parameter_list|)
value|(zisunit((q)->den))
end_define

begin_define
define|#
directive|define
name|qisfrac
parameter_list|(
name|q
parameter_list|)
value|(!zisunit((q)->den))
end_define

begin_define
define|#
directive|define
name|qisunit
parameter_list|(
name|q
parameter_list|)
value|(zisunit((q)->num)&& zisunit((q)->den))
end_define

begin_define
define|#
directive|define
name|qisone
parameter_list|(
name|q
parameter_list|)
value|(zisone((q)->num)&& zisunit((q)->den))
end_define

begin_define
define|#
directive|define
name|qisnegone
parameter_list|(
name|q
parameter_list|)
value|(zisnegone((q)->num)&& zisunit((q)->den))
end_define

begin_define
define|#
directive|define
name|qistwo
parameter_list|(
name|q
parameter_list|)
value|(zistwo((q)->num)&& zisunit((q)->den))
end_define

begin_define
define|#
directive|define
name|qiseven
parameter_list|(
name|q
parameter_list|)
value|(zisunit((q)->den)&& ziseven((q)->num))
end_define

begin_define
define|#
directive|define
name|qisodd
parameter_list|(
name|q
parameter_list|)
value|(zisunit((q)->den)&& zisodd((q)->num))
end_define

begin_define
define|#
directive|define
name|qistwopower
parameter_list|(
name|q
parameter_list|)
value|(zisunit((q)->den)&& zistwopower((q)->num))
end_define

begin_define
define|#
directive|define
name|qhighbit
parameter_list|(
name|q
parameter_list|)
value|(zhighbit((q)->num))
end_define

begin_define
define|#
directive|define
name|qlowbit
parameter_list|(
name|q
parameter_list|)
value|(zlowbit((q)->num))
end_define

begin_define
define|#
directive|define
name|qdivcount
parameter_list|(
name|q1
parameter_list|,
name|q2
parameter_list|)
value|(zdivcount((q1)->num, (q2)->num))
end_define

begin_define
define|#
directive|define
name|qilog
parameter_list|(
name|q1
parameter_list|,
name|q2
parameter_list|)
value|(zlog((q1)->num, (q2)->num))
end_define

begin_define
define|#
directive|define
name|qlink
parameter_list|(
name|q
parameter_list|)
value|((q)->links++, (q))
end_define

begin_define
define|#
directive|define
name|qfree
parameter_list|(
name|q
parameter_list|)
value|{if (--((q)->links)<= 0) qfreenum(q);}
end_define

begin_comment
comment|/*  * Flags for qparse calls  */
end_comment

begin_define
define|#
directive|define
name|QPF_SLASH
value|0x1
end_define

begin_comment
comment|/* allow slash for fractional number */
end_comment

begin_define
define|#
directive|define
name|QPF_IMAG
value|0x2
end_define

begin_comment
comment|/* allow trailing 'i' for imaginary number */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|VARARGS
end_ifdef

begin_function_decl
specifier|extern
name|void
name|qprintf
parameter_list|()
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_decl_stmt
specifier|extern
name|void
name|qprintf
name|MATH_PROTO
argument_list|(
operator|(
name|char
operator|*
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * constants used often by the arithmetic routines  */
end_comment

begin_decl_stmt
specifier|extern
name|NUMBER
name|_qzero_
decl_stmt|,
name|_qone_
decl_stmt|,
name|_qnegone_
decl_stmt|,
name|_qonehalf_
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|BOOL
name|_sinisneg_
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* whether sin(x)< 0 (set by cos(x)) */
end_comment

begin_decl_stmt
specifier|extern
name|long
name|_epsilonprec_
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* binary precision of epsilon */
end_comment

begin_decl_stmt
specifier|extern
name|NUMBER
modifier|*
name|_epsilon_
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* default error for real functions */
end_comment

begin_decl_stmt
specifier|extern
name|long
name|_outdigits_
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* current output digits for float or exp */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|_outmode_
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* current output mode */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* END CODE */
end_comment

end_unit

