begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/***************************************************************************  * This program is Copyright (C) 1986, 1987, 1988 by Jonathan Payne.  JOVE *  * is provided to you without charge, and with no warranty.  You may give  *  * away copies of JOVE, including sources, provided that this notice is    *  * included in all the files.                                              *  ***************************************************************************/
end_comment

begin_struct
struct|struct
name|screenline
block|{
name|char
modifier|*
name|s_line
decl_stmt|,
modifier|*
name|s_length
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|screenline
modifier|*
name|Screen
decl_stmt|,
modifier|*
name|Curline
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|cursend
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|i_line
decl_stmt|,
name|i_col
decl_stmt|,
name|AbortCnt
decl_stmt|,
name|CapLine
decl_stmt|,
comment|/* cursor line and cursor column */
name|CapCol
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|bool
name|CanScroll
decl_stmt|,
comment|/* can this terminal scroll? */
name|BufSwrite
name|proto
argument_list|(
operator|(
name|int
name|linenum
operator|)
argument_list|)
decl_stmt|,
name|swrite
name|proto
argument_list|(
operator|(
name|char
operator|*
name|line
operator|,
name|bool
name|inversep
operator|,
name|bool
name|abortable
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|IDline_setup
name|proto
argument_list|(
operator|(
name|char
operator|*
name|tname
operator|)
argument_list|)
decl_stmt|,
name|Placur
name|proto
argument_list|(
operator|(
name|int
name|line
operator|,
name|int
name|col
operator|)
argument_list|)
decl_stmt|,
name|cl_eol
name|proto
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|,
name|cl_scr
name|proto
argument_list|(
operator|(
name|bool
name|doit
operator|)
argument_list|)
decl_stmt|,
name|clrline
name|proto
argument_list|(
operator|(
name|char
operator|*
name|cp1
operator|,
name|char
operator|*
name|cp2
operator|)
argument_list|)
decl_stmt|,
name|i_set
name|proto
argument_list|(
operator|(
name|int
name|nline
operator|,
name|int
name|ncol
operator|)
argument_list|)
decl_stmt|,
name|make_scr
name|proto
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|,
name|v_ins_line
name|proto
argument_list|(
operator|(
name|int
name|num
operator|,
name|int
name|top
operator|,
name|int
name|bottom
operator|)
argument_list|)
decl_stmt|,
name|v_del_line
name|proto
argument_list|(
operator|(
name|int
name|num
operator|,
name|int
name|top
operator|,
name|int
name|bottom
operator|)
argument_list|)
decl_stmt|,
name|InitCM
name|proto
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|,
name|SO_off
name|proto
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|,
name|SO_on
name|proto
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

end_unit

