begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* BFD internal declarations for Oasys file format handling.    Copyright (C) 1990-1991 Free Software Foundation, Inc.    Scrawled by Steve Chamberlain of Cygnus Support.  This file is part of BFD, the Binary File Descriptor library.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|_oasys_symbol
block|{
name|asymbol
name|symbol
decl_stmt|;
block|}
name|oasys_symbol_type
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_oasys_reloc
block|{
name|arelent
name|relent
decl_stmt|;
name|struct
name|_oasys_reloc
modifier|*
name|next
decl_stmt|;
name|unsigned
name|int
name|symbol
decl_stmt|;
block|}
name|oasys_reloc_type
typedef|;
end_typedef

begin_define
define|#
directive|define
name|oasys_symbol
parameter_list|(
name|x
parameter_list|)
value|((oasys_symbol_type *)(x))
end_define

begin_define
define|#
directive|define
name|oasys_per_section
parameter_list|(
name|x
parameter_list|)
value|((oasys_per_section_type *)(x->used_by_bfd))
end_define

begin_typedef
typedef|typedef
struct|struct
name|_oasys_per_section
block|{
name|asection
modifier|*
name|section
decl_stmt|;
name|bfd_byte
modifier|*
name|data
decl_stmt|;
name|bfd_vma
name|offset
decl_stmt|;
name|boolean
name|had_vma
decl_stmt|;
name|oasys_reloc_type
modifier|*
modifier|*
name|reloc_tail_ptr
decl_stmt|;
name|bfd_vma
name|pc
decl_stmt|;
name|file_ptr
name|current_pos
decl_stmt|;
name|unsigned
name|int
name|current_byte
decl_stmt|;
name|boolean
name|initialized
decl_stmt|;
block|}
name|oasys_per_section_type
typedef|;
end_typedef

begin_define
define|#
directive|define
name|NSECTIONS
value|10
end_define

begin_typedef
typedef|typedef
struct|struct
name|_oasys_ar_obstack
block|{
name|file_ptr
name|file_offset
decl_stmt|;
name|bfd
modifier|*
name|abfd
decl_stmt|;
block|}
name|oasys_ar_obstack_type
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_oasys_module_info
block|{
name|file_ptr
name|pos
decl_stmt|;
name|unsigned
name|int
name|size
decl_stmt|;
name|bfd
modifier|*
name|abfd
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
block|}
name|oasys_module_info_type
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_oasys_ar_data
block|{
name|oasys_module_info_type
modifier|*
name|module
decl_stmt|;
name|unsigned
name|int
name|module_count
decl_stmt|;
name|unsigned
name|int
name|module_index
decl_stmt|;
block|}
name|oasys_ar_data_type
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_oasys_data
block|{
name|struct
name|obstack
name|oasys_obstack
decl_stmt|;
name|char
modifier|*
name|strings
decl_stmt|;
name|asymbol
modifier|*
name|symbols
decl_stmt|;
name|unsigned
name|int
name|symbol_string_length
decl_stmt|;
name|asection
modifier|*
name|sections
index|[
name|OASYS_MAX_SEC_COUNT
index|]
decl_stmt|;
name|file_ptr
name|first_data_record
decl_stmt|;
block|}
name|oasys_data_type
typedef|;
end_typedef

begin_define
define|#
directive|define
name|OASYS_DATA
parameter_list|(
name|abfd
parameter_list|)
value|((abfd)->tdata.oasys_obj_data)
end_define

begin_define
define|#
directive|define
name|OASYS_AR_DATA
parameter_list|(
name|abfd
parameter_list|)
value|((abfd)->tdata.oasys_ar_data)
end_define

end_unit

