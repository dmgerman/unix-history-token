begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|_G_unistd_h
end_ifndef

begin_define
define|#
directive|define
name|_G_unistd_h
value|1
end_define

begin_include
include|#
directive|include
file|<_G_config.h>
end_include

begin_extern
extern|extern
literal|"C"
block|{
if|#
directive|if
name|_G_HAVE_UNISTD
ifndef|#
directive|ifndef
name|_G_USE_PROTOS
define|#
directive|define
name|chmod
value|__hide_chmod
define|#
directive|define
name|chown
value|__hide_chown
define|#
directive|define
name|execl
value|__hide_execl
define|#
directive|define
name|execlp
value|__hide_execlp
define|#
directive|define
name|execle
value|__hide_execle
define|#
directive|define
name|fchown
value|__hide_fchown
define|#
directive|define
name|ioctl
value|__hide_ioctl
define|#
directive|define
name|setgid
value|__hide_setgid
define|#
directive|define
name|setuid
value|__hide_setuid
endif|#
directive|endif
ifdef|#
directive|ifdef
name|_AIX
comment|// AIX's unistd.h defines int rename (const char *old, const char *new).
comment|// This is not legal ANSI.  It causes a C++ syntax error (because of 'new').
define|#
directive|define
name|new
value|__new
endif|#
directive|endif
empty|#include_next<unistd.h>
ifdef|#
directive|ifdef
name|_AIX
undef|#
directive|undef
name|new
endif|#
directive|endif
ifndef|#
directive|ifndef
name|_G_USE_PROTOS
undef|#
directive|undef
name|chmod
undef|#
directive|undef
name|chown
undef|#
directive|undef
name|execl
undef|#
directive|undef
name|execle
undef|#
directive|undef
name|execlp
undef|#
directive|undef
name|fchown
undef|#
directive|undef
name|ioctl
undef|#
directive|undef
name|setgid
undef|#
directive|undef
name|setuid
endif|#
directive|endif
else|#
directive|else
ifndef|#
directive|ifndef
name|SEEK_SET
define|#
directive|define
name|SEEK_SET
value|0
define|#
directive|define
name|SEEK_CUR
value|1
define|#
directive|define
name|SEEK_END
value|2
endif|#
directive|endif
ifndef|#
directive|ifndef
name|F_OK
define|#
directive|define
name|F_OK
value|0
endif|#
directive|endif
ifndef|#
directive|ifndef
name|X_OK
define|#
directive|define
name|X_OK
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|W_OK
define|#
directive|define
name|W_OK
value|2
endif|#
directive|endif
ifndef|#
directive|ifndef
name|R_K
define|#
directive|define
name|R_OK
value|4
endif|#
directive|endif
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__GNUG__
specifier|extern
name|void
specifier|volatile
name|_exit
parameter_list|(
name|int
parameter_list|)
function_decl|;
else|#
directive|else
name|void
name|_exit
parameter_list|(
name|int
parameter_list|)
function_decl|;
endif|#
directive|endif
specifier|extern
name|unsigned
name|alarm
name|_G_ARGS
argument_list|(
operator|(
name|unsigned
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|char
modifier|*
name|brk
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|chdir
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|chmod
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
name|_G_mode_t
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|chown
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|_G_uid_t
parameter_list|,
name|_G_gid_t
parameter_list|)
function_decl|;
specifier|extern
name|int
name|close
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|char
modifier|*
name|crypt
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|dup
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|dup2
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|encrypt
name|_G_ARGS
argument_list|(
operator|(
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|execl
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
specifier|extern
name|int
name|execle
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
specifier|extern
name|int
name|execlp
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
specifier|extern
name|int
name|exect
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
name|char
operator|*
specifier|const
operator|*
operator|,
name|char
operator|*
specifier|const
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|execv
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
name|char
operator|*
specifier|const
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|execve
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
name|char
operator|*
specifier|const
operator|*
operator|,
name|char
operator|*
specifier|const
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|execvp
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
name|char
operator|*
specifier|const
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|fchown
parameter_list|(
name|int
parameter_list|,
name|_G_uid_t
parameter_list|,
name|_G_gid_t
parameter_list|)
function_decl|;
specifier|extern
name|_G_pid_t
name|fork
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|fsync
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|ftruncate
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|,
name|_G_off_t
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|char
modifier|*
name|getcwd
name|_G_ARGS
argument_list|(
operator|(
name|char
operator|*
operator|,
name|_G_size_t
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|getdomainname
name|_G_ARGS
argument_list|(
operator|(
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|getdtablesize
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|getgroups
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|,
name|gid_t
index|[]
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_G_uid_t
name|geteuid
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_G_gid_t
name|getegid
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_G_gid_t
name|getgid
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|long
name|gethostid
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|gethostname
name|_G_ARGS
argument_list|(
operator|(
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_G_pid_t
name|getpgrp
name|_G_ARGS
argument_list|(
operator|(
operator|...
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_G_pid_t
name|getpid
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_G_pid_t
name|getppid
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|char
modifier|*
name|getlogin
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|char
modifier|*
name|getpass
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_G_uid_t
name|getuid
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|ioctl
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
specifier|extern
name|int
name|isatty
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|link
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|mkstemp
name|_G_ARGS
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|char
modifier|*
name|mktemp
name|_G_ARGS
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|nice
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|pause
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|pipe
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|readlink
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|rename
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|rmdir
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|char
modifier|*
name|sbrk
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|syscall
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|setgid
parameter_list|(
name|_G_gid_t
parameter_list|)
function_decl|;
specifier|extern
name|int
name|sethostname
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|setpgrp
name|_G_ARGS
argument_list|(
operator|(
name|_G_pid_t
operator|,
name|_G_pid_t
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|setregid
name|_G_ARGS
argument_list|(
operator|(
name|_G_gid_t
operator|,
name|_G_gid_t
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|setreuid
name|_G_ARGS
argument_list|(
operator|(
name|_G_uid_t
operator|,
name|_G_uid_t
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|setuid
parameter_list|(
name|_G_uid_t
parameter_list|)
function_decl|;
specifier|extern
name|unsigned
name|sleep
name|_G_ARGS
argument_list|(
operator|(
name|unsigned
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|swab
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|*
operator|,
name|void
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|symlink
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|long
name|sysconf
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|truncate
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
name|_G_off_t
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|char
modifier|*
name|ttyname
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|ttyslot
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
comment|//extern int   umask _G_ARGS((int)); /* commented out for now; wrong for SunOs4.1 */
specifier|extern
name|int
name|unlink
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_G_pid_t
name|vfork
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|vadvise
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|vhangup
name|_G_ARGS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_G_off_t
name|lseek
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|,
name|long
name|long
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_G_ssize_t
name|read
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|,
name|void
operator|*
operator|,
name|_G_size_t
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_G_ssize_t
name|write
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|,
specifier|const
name|void
operator|*
operator|,
name|_G_size_t
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|access
name|_G_ARGS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
ifndef|#
directive|ifndef
name|hpux
specifier|extern
name|int
name|flock
name|_G_ARGS
argument_list|(
operator|(
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
endif|#
directive|endif
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

end_unit

