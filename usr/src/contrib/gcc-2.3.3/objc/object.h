begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Declare the class Object for Objective C programs.    Copyright (C) 1992 Free Software Foundation, Inc.  This file is part of GNU CC.  GNU CC is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  GNU CC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with GNU CC; see the file COPYING.  If not, write to the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */
end_comment

begin_comment
comment|/* As a special exception, if you link this library with files    compiled with GCC to produce an executable, this does not cause    the resulting executable to be covered by the GNU General Public License.    This exception does not however invalidate any other reasons why    the executable file might be covered by the GNU General Public License.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__object_INCLUDE_GNU
end_ifndef

begin_define
define|#
directive|define
name|__object_INCLUDE_GNU
end_define

begin_include
include|#
directive|include
file|"objc.h"
end_include

begin_include
include|#
directive|include
file|"stdio.h"
end_include

begin_comment
comment|/*  * All classes are derived from Object.  As such this is the   *  overhead tacked onto those objects.    */
end_comment

begin_decl_stmt
unit|@
name|interface
name|Object
block|{
name|Class_t
name|isa
decl_stmt|;
comment|/* A pointer to the instance's                                                    class structure.                                                                                                       This structure is the one                                                   generated by the compiler                                                   and located in the TEXT                                                    segment.  The run-time uses                                                   its address as a key to                                                    run-time information. */
block|}
end_decl_stmt

begin_comment
comment|/* Creating, copying, and freeing instances */
end_comment

begin_expr_stmt
operator|+
name|new
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|+
name|free
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
name|free
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
name|copy
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
name|shallowCopy
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
name|deepCopy
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Identifying classes */
end_comment

begin_expr_stmt
operator|+
operator|(
name|Class_t
operator|)
name|class
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|+
operator|(
name|Class_t
operator|)
name|superClass
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
operator|(
name|Class_t
operator|)
name|class
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
operator|(
name|Class_t
operator|)
name|superClass
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
operator|(
specifier|const
name|char
operator|*
operator|)
name|name
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Identifying and comparing instances */
end_comment

begin_expr_stmt
operator|-
name|self
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
operator|(
name|unsigned
name|int
operator|)
name|hash
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
operator|(
name|BOOL
operator|)
name|isEqual
operator|:
name|anObject
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Testing inheritance relationships */
end_comment

begin_expr_stmt
operator|-
operator|(
name|BOOL
operator|)
name|isKindOf
operator|:
operator|(
name|Class_t
operator|)
name|aClassObject
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
operator|(
name|BOOL
operator|)
name|isMemberOf
operator|:
operator|(
name|Class_t
operator|)
name|aClassObject
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
operator|(
name|BOOL
operator|)
name|isKindOfGivenName
operator|:
operator|(
specifier|const
name|char
operator|*
operator|)
name|aClassName
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
operator|(
name|BOOL
operator|)
name|isMemberOfGivenName
operator|:
operator|(
specifier|const
name|char
operator|*
operator|)
name|aClassName
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Testing class functionality */
end_comment

begin_expr_stmt
operator|+
operator|(
name|BOOL
operator|)
name|instancesRespondTo
operator|:
operator|(
name|SEL
operator|)
name|aSel
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
operator|(
name|BOOL
operator|)
name|respondsTo
operator|:
operator|(
name|SEL
operator|)
name|aSel
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Sending messages determined at run time */
end_comment

begin_expr_stmt
operator|-
name|perform
operator|:
operator|(
name|SEL
operator|)
name|aSel
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
name|perform
operator|:
operator|(
name|SEL
operator|)
name|aSel
name|with
operator|:
name|aObject
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Posing */
end_comment

begin_expr_stmt
operator|+
name|poseAs
operator|:
operator|(
name|Class_t
operator|)
name|aClassObject
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Enforcing intentions */
end_comment

begin_expr_stmt
operator|-
name|subclassResponsibility
operator|:
operator|(
name|SEL
operator|)
name|aSel
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
name|notImplemented
operator|:
operator|(
name|SEL
operator|)
name|aSel
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Error handling */
end_comment

begin_expr_stmt
operator|-
name|doesNotRecognize
operator|:
operator|(
name|SEL
operator|)
name|aSelector
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
name|error
operator|:
operator|(
specifier|const
name|char
operator|*
operator|)
name|aString
operator|,
operator|...
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|+
name|error
operator|:
operator|(
specifier|const
name|char
operator|*
operator|)
name|aString
operator|,
operator|...
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Archiving */
end_comment

begin_expr_stmt
operator|-
name|storeOn
operator|:
operator|(
name|int
operator|)
name|aFd
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|+
name|readFrom
operator|:
operator|(
name|int
operator|)
name|aFd
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|-
name|readFrom
operator|:
operator|(
name|int
operator|)
name|aFd
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|+
operator|(
name|int
operator|)
name|version
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|+
name|setVersion
operator|:
operator|(
name|int
operator|)
name|aVersion
expr_stmt|;
end_expr_stmt

begin_macro
unit|@
name|end
end_macro

begin_endif
endif|#
directive|endif
end_endif

end_unit

