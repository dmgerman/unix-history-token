begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|__HAVE_MATH_CONVEX__
end_ifndef

begin_define
define|#
directive|define
name|__HAVE_MATH_CONVEX__
end_define

begin_define
define|#
directive|define
name|HUGE
value|8.98846567431157854e+307
end_define

begin_comment
comment|/* max double in native mode */
end_comment

begin_define
define|#
directive|define
name|HUGE_VAL
value|8.98846567431157854e+307
end_define

begin_define
define|#
directive|define
name|M_E
value|2.71828182845904523536
end_define

begin_define
define|#
directive|define
name|M_LN10
value|2.30258509299404568402
end_define

begin_define
define|#
directive|define
name|M_LN2
value|0.69314718055994530942
end_define

begin_define
define|#
directive|define
name|M_LOG10E
value|0.43429448190325182765
end_define

begin_define
define|#
directive|define
name|M_LOG2E
value|1.44269504088896340736
end_define

begin_define
define|#
directive|define
name|M_PI
value|3.14159265358979323846
end_define

begin_define
define|#
directive|define
name|M_PI_2
value|1.57079632679489661923
end_define

begin_define
define|#
directive|define
name|M_PI_4
value|0.78539816339744830962
end_define

begin_define
define|#
directive|define
name|M_SQRT1_2
value|0.70710678118654752440
end_define

begin_define
define|#
directive|define
name|M_SQRT2
value|1.41421356237309504880
end_define

begin_define
define|#
directive|define
name|M_1_PI
value|0.31830988618379067154
end_define

begin_define
define|#
directive|define
name|M_2_PI
value|0.63661977236758134308
end_define

begin_define
define|#
directive|define
name|M_2_SQRTPI
value|1.12837916709551257390
end_define

begin_function_decl
specifier|extern
name|__const__
name|double
name|acos
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|asin
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|atan
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|atan2
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|double
name|atof
parameter_list|(
name|__const__
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|cabs
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|ceil
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|cos
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|cosh
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|dcvtid
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|exp
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|fabs
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|floor
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|double
name|frexp
parameter_list|(
name|double
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|gamma
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|hypot
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|idcvtd
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|ircvtr
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|j0
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|j1
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|jn
parameter_list|(
name|int
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|ldexp
parameter_list|(
name|double
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|log
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|log10
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|fmod
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|double
name|modf
parameter_list|(
name|double
parameter_list|,
name|double
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|pow
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|rcvtir
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|sacos
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|sasin
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|satan
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|satan2
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|scabs
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|scos
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|scosh
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|sexp
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|sfabs
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|shypot
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|sin
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|sinh
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|slog
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|slog10
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|spow
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|sqrt
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|ssin
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|ssinh
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|ssqrt
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|stan
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|stanh
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|tan
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|tanh
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|y0
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|y1
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|double
name|yn
parameter_list|(
name|int
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|long
name|int
name|ipow
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|__const__
name|long
name|long
name|int
name|lpow
parameter_list|(
name|long
name|long
name|int
parameter_list|,
name|long
name|long
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|fabs
parameter_list|(
name|x
parameter_list|)
value|__builtin_fabs(x)
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__convex__
end_ifdef

begin_define
define|#
directive|define
name|frexp
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|__inline_frexp(x,y)
end_define

begin_define
define|#
directive|define
name|ldexp
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|__inline_ldexp(x,y)
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__convex_c2__
end_ifdef

begin_define
define|#
directive|define
name|ceil
parameter_list|(
name|x
parameter_list|)
value|__inline_ceil (x)
end_define

begin_define
define|#
directive|define
name|cos
parameter_list|(
name|x
parameter_list|)
value|__inline_cos (x)
end_define

begin_define
define|#
directive|define
name|exp
parameter_list|(
name|x
parameter_list|)
value|__inline_exp (x)
end_define

begin_define
define|#
directive|define
name|floor
parameter_list|(
name|x
parameter_list|)
value|__inline_floor (x)
end_define

begin_define
define|#
directive|define
name|log
parameter_list|(
name|x
parameter_list|)
value|__inline_log (x)
end_define

begin_define
define|#
directive|define
name|log10
parameter_list|(
name|x
parameter_list|)
value|__inline_log10 (x)
end_define

begin_define
define|#
directive|define
name|modf
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|__inline_modf ((x), (y))
end_define

begin_define
define|#
directive|define
name|sin
parameter_list|(
name|x
parameter_list|)
value|__inline_sin (x)
end_define

begin_define
define|#
directive|define
name|sqrt
parameter_list|(
name|x
parameter_list|)
value|__inline_sqrt (x)
end_define

begin_endif
endif|#
directive|endif
endif|__convex_c2__
end_endif

begin_function
name|__inline__
specifier|static
name|__const__
name|double
name|__inline_ceil
parameter_list|(
name|double
name|x
parameter_list|)
block|{
name|double
name|z
decl_stmt|;
asm|__asm__ ("frint.d %1,%0" : "=d" (z) : "d" (x));
if|if
condition|(
name|z
operator|<
name|x
condition|)
name|z
operator|+=
literal|1.0
expr_stmt|;
return|return
name|z
return|;
block|}
end_function

begin_function
name|__inline__
specifier|static
name|__const__
name|double
name|__inline_cos
parameter_list|(
name|double
name|x
parameter_list|)
block|{
name|double
name|z
decl_stmt|;
asm|__asm__ ("cos.d %0" : "=d" (z) : "0" (x));
return|return
name|z
return|;
block|}
end_function

begin_function
name|__inline__
specifier|static
name|__const__
name|double
name|__inline_exp
parameter_list|(
name|double
name|x
parameter_list|)
block|{
name|double
name|z
decl_stmt|;
asm|__asm__ ("exp.d %0" : "=d" (z) : "0" (x));
return|return
name|z
return|;
block|}
end_function

begin_function
name|__inline__
specifier|static
name|__const__
name|double
name|__inline_floor
parameter_list|(
name|double
name|x
parameter_list|)
block|{
name|double
name|z
decl_stmt|;
asm|__asm__ ("frint.d %1,%0" : "=d" (z) : "d" (x));
if|if
condition|(
name|z
operator|>
name|x
condition|)
name|z
operator|-=
literal|1.0
expr_stmt|;
return|return
name|z
return|;
block|}
end_function

begin_function
name|__inline__
specifier|static
name|__const__
name|double
name|__inline_frexp
parameter_list|(
name|double
name|x
parameter_list|,
name|int
modifier|*
name|np
parameter_list|)
block|{
union|union
name|u
block|{
name|double
name|d
decl_stmt|;
name|unsigned
name|long
name|long
name|ll
decl_stmt|;
block|}
name|u
union|;
if|if
condition|(
operator|(
name|u
operator|.
name|d
operator|=
name|x
operator|)
operator|==
literal|0
condition|)
operator|*
name|np
operator|=
literal|0
expr_stmt|;
else|else
block|{
operator|*
name|np
operator|=
operator|(
operator|(
name|u
operator|.
name|ll
operator|>>
literal|52
operator|)
operator|&
literal|03777
operator|)
operator|-
literal|02000
expr_stmt|;
name|u
operator|.
name|ll
operator|=
operator|(
name|u
operator|.
name|ll
operator|&
literal|0x800fffffffffffffLL
operator|)
operator||
operator|(
operator|(
expr|union
name|u
operator|)
block|{
literal|0.5
block|}
operator|)
operator|.
name|ll
expr_stmt|;
block|}
return|return
name|u
operator|.
name|d
return|;
block|}
end_function

begin_function
name|__inline__
specifier|static
name|__const__
name|double
name|__inline_ldexp
parameter_list|(
name|double
name|x
parameter_list|,
name|int
name|n
parameter_list|)
block|{
specifier|extern
name|int
name|errno
decl_stmt|;
union|union
block|{
name|double
name|d
decl_stmt|;
name|long
name|long
name|ll
decl_stmt|;
name|unsigned
name|sexp
range|:
literal|12
decl_stmt|;
block|}
name|u
union|;
if|if
condition|(
operator|(
name|u
operator|.
name|d
operator|=
name|x
operator|)
operator|!=
literal|0
condition|)
block|{
name|int
name|exp
init|=
name|n
operator|+
operator|(
name|u
operator|.
name|sexp
operator|&
literal|03777
operator|)
decl_stmt|;
if|if
condition|(
name|exp
operator|<=
literal|0
condition|)
name|u
operator|.
name|ll
operator|=
literal|0
operator|,
name|errno
operator|=
literal|34
expr_stmt|;
elseif|else
if|if
condition|(
name|exp
operator|>
literal|03777
condition|)
name|u
operator|.
name|ll
operator||=
literal|0x7fffffffffffffffLL
operator|,
name|errno
operator|=
literal|34
expr_stmt|;
else|else
name|u
operator|.
name|ll
operator|+=
operator|(
name|long
name|long
operator|)
name|n
operator|<<
literal|52
expr_stmt|;
block|}
return|return
name|u
operator|.
name|d
return|;
block|}
end_function

begin_function
name|__inline__
specifier|static
name|__const__
name|double
name|__inline_log
parameter_list|(
name|double
name|x
parameter_list|)
block|{
name|double
name|z
decl_stmt|;
asm|__asm__ ("ln.d %0" : "=d" (z) : "0" (x));
return|return
name|z
return|;
block|}
end_function

begin_function
name|__inline__
specifier|static
name|__const__
name|double
name|__inline_log10
parameter_list|(
name|double
name|x
parameter_list|)
block|{
return|return
name|M_LOG10E
operator|*
name|__inline_log
argument_list|(
name|x
argument_list|)
return|;
block|}
end_function

begin_function
name|__inline__
specifier|static
name|__const__
name|double
name|__inline_modf
parameter_list|(
name|double
name|x
parameter_list|,
name|double
modifier|*
name|np
parameter_list|)
block|{
name|double
name|intpart
decl_stmt|;
asm|__asm__ ("frint.d %1,%0" : "=d" (intpart) : "d" (x));
operator|*
name|np
operator|=
name|intpart
expr_stmt|;
return|return
name|x
operator|-
name|intpart
return|;
block|}
end_function

begin_function
name|__inline__
specifier|static
name|__const__
name|double
name|__inline_sin
parameter_list|(
name|double
name|x
parameter_list|)
block|{
name|double
name|z
decl_stmt|;
asm|__asm__ ("sin.d %0" : "=d" (z) : "0" (x));
return|return
name|z
return|;
block|}
end_function

begin_function
name|__inline__
specifier|static
name|__const__
name|double
name|__inline_sqrt
parameter_list|(
name|double
name|x
parameter_list|)
block|{
name|double
name|z
decl_stmt|;
asm|__asm__ ("sqrt.d %0" : "=d" (z) : "0" (x));
return|return
name|z
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
endif|__convex__
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __HAVE_MATH_CONVEX__ */
end_comment

end_unit

