begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// This may look like C code, but it is really -*- C++ -*-
end_comment

begin_comment
comment|/*  Copyright (C) 1988 Free Software Foundation     written by Doug Lea (dl@rocky.oswego.edu)  This file is part of GNU CC.  GNU CC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.  No author or distributor accepts responsibility to anyone for the consequences of using it or for whether it serves any particular purpose or works at all, unless he says so in writing.  Refer to the GNU CC General Public License for full details.  Everyone is granted permission to copy, modify and redistribute GNU CC, but only under the conditions described in the GNU CC General Public License.   A copy of this license is supposed to have been given to you along with GNU CC so you can know your rights and responsibilities.  It should be in a file named COPYING.  Among other things, the copyright notice and this notice must be preserved on all copies.   */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_math_h
end_ifndef

begin_ifdef
ifdef|#
directive|ifdef
name|__GNUG__
end_ifdef

begin_pragma
pragma|#
directive|pragma
name|once
end_pragma

begin_pragma
pragma|#
directive|pragma
name|interface
end_pragma

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|_math_h
value|1
end_define

begin_if
if|#
directive|if
name|defined
argument_list|(
name|hp300
argument_list|)
operator|&&
name|defined
argument_list|(
name|__HAVE_FPU__
argument_list|)
end_if

begin_define
define|#
directive|define
name|__HAVE_68881__
value|1
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
name|defined
argument_list|(
name|masscomp
argument_list|)
end_if

begin_define
define|#
directive|define
name|__HAVE_68881__
value|1
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|__HAVE_68881__
end_ifdef

begin_comment
comment|/* MC68881/2 Floating-Point Coprocessor */
end_comment

begin_extern
extern|extern
literal|"C"
block|{
comment|/* fill in what we've left out */
include|#
directive|include
file|<math-68881.h>
name|double
name|acosh
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|asinh
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|cbrt
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|copysign
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|double
name|erf
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|erfc
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|finite
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|gamma
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|hypot
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|double
name|infnan
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|int
name|isinf
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|int
name|isnan
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|j0
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|j1
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|jn
parameter_list|(
name|int
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|double
name|lgamma
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|y0
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|y1
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|yn
parameter_list|(
name|int
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|double
name|aint
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|anint
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|int
name|irint
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|int
name|nint
parameter_list|(
name|double
parameter_list|)
function_decl|;
block|}
end_extern

begin_comment
comment|/* Please add inline asm code for other machines here! */
end_comment

begin_else
else|#
directive|else
end_else

begin_extern
extern|extern
literal|"C"
block|{
name|double
name|acos
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|acosh
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|asin
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|asinh
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|atan
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|atan2
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|double
name|atanh
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|cbrt
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|ceil
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|copysign
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|double
name|cos
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|cosh
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|drem
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|double
name|erf
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|erfc
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|exp
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|expm1
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|fabs
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|finite
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|floor
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|frexp
parameter_list|(
name|double
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
name|double
name|gamma
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|hypot
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|double
name|infnan
parameter_list|(
name|int
parameter_list|)
function_decl|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|sequent
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|DGUX
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|sony
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|masscomp
argument_list|)
comment|/* see below */
name|int
name|isinf
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|int
name|isnan
parameter_list|(
name|double
parameter_list|)
function_decl|;
endif|#
directive|endif
name|double
name|j0
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|j1
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|jn
parameter_list|(
name|int
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|double
name|ldexp
parameter_list|(
name|double
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|double
name|lgamma
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|log
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|log10
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|log1p
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|logb
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|modf
parameter_list|(
name|double
parameter_list|,
name|double
modifier|*
parameter_list|)
function_decl|;
name|double
name|pow
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|double
name|rint
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|scalb
parameter_list|(
name|double
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|double
name|sin
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|sinh
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|sqrt
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|tan
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|tanh
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|y0
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|y1
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|yn
parameter_list|(
name|int
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|double
name|aint
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|double
name|anint
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|int
name|irint
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|int
name|nint
parameter_list|(
name|double
parameter_list|)
function_decl|;
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* libg++ doesn't use this since it is not available on some systems */
end_comment

begin_comment
comment|/* the following ifdef is just for compiling OOPS */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|DONT_DECLARE_EXCEPTION
end_ifndef

begin_struct
struct|struct
name|libm_exception
block|{
name|int
name|type
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
name|double
name|arg1
decl_stmt|,
name|arg2
decl_stmt|,
name|retval
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|DOMAIN
value|1
end_define

begin_define
define|#
directive|define
name|SING
value|2
end_define

begin_define
define|#
directive|define
name|OVERFLOW
value|3
end_define

begin_define
define|#
directive|define
name|UNDERFLOW
value|4
end_define

begin_define
define|#
directive|define
name|TLOSS
value|5
end_define

begin_define
define|#
directive|define
name|PLOSS
value|6
end_define

begin_extern
extern|extern
literal|"C"
name|int
name|matherr
parameter_list|(
name|libm_exception
modifier|*
parameter_list|)
function_decl|;
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<values.h>
end_include

begin_comment
comment|/* On some systems, HUGE ought to be MAXFLOAT or IEEE infinity */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HUGE
end_ifndef

begin_define
define|#
directive|define
name|HUGE
value|MAXDOUBLE
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* sequents don't supply these. The following should suffice */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__OPTIMIZE__
argument_list|)
operator|||
name|defined
argument_list|(
name|USE_LIBGXX_INLINES
argument_list|)
end_if

begin_if
if|#
directive|if
name|defined
argument_list|(
name|sequent
argument_list|)
operator|||
name|defined
argument_list|(
name|DGUX
argument_list|)
operator|||
name|defined
argument_list|(
name|sony
argument_list|)
operator|||
name|defined
argument_list|(
name|masscomp
argument_list|)
expr|\
operator|||
name|defined
argument_list|(
name|hpux
argument_list|)
end_if

begin_function
specifier|static
specifier|inline
name|int
name|isnan
parameter_list|(
name|double
name|x
parameter_list|)
block|{
return|return
name|x
operator|!=
name|x
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|isinf
parameter_list|(
name|double
name|x
parameter_list|)
block|{
return|return
name|x
operator|>
name|MAXDOUBLE
operator|||
name|x
operator|<
operator|-
name|MAXDOUBLE
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __ OPTIMIZE __ */
end_comment

begin_comment
comment|/* These seem to be sun& sysV names of these constants */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|M_E
end_ifndef

begin_define
define|#
directive|define
name|M_E
value|2.7182818284590452354
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|M_LOG2E
end_ifndef

begin_define
define|#
directive|define
name|M_LOG2E
value|1.4426950408889634074
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|M_LOG10E
end_ifndef

begin_define
define|#
directive|define
name|M_LOG10E
value|0.43429448190325182765
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|M_LN2
end_ifndef

begin_define
define|#
directive|define
name|M_LN2
value|0.69314718055994530942
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|M_LN10
end_ifndef

begin_define
define|#
directive|define
name|M_LN10
value|2.30258509299404568402
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|M_PI
end_ifndef

begin_define
define|#
directive|define
name|M_PI
value|3.14159265358979323846
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|M_PI_2
end_ifndef

begin_define
define|#
directive|define
name|M_PI_2
value|1.57079632679489661923
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|M_1_PI
end_ifndef

begin_define
define|#
directive|define
name|M_1_PI
value|0.31830988618379067154
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|M_PI_4
end_ifndef

begin_define
define|#
directive|define
name|M_PI_4
value|0.78539816339744830962
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|M_2_PI
end_ifndef

begin_define
define|#
directive|define
name|M_2_PI
value|0.63661977236758134308
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|M_2_SQRTPI
end_ifndef

begin_define
define|#
directive|define
name|M_2_SQRTPI
value|1.12837916709551257390
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|M_SQRT2
end_ifndef

begin_define
define|#
directive|define
name|M_SQRT2
value|1.41421356237309504880
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|M_SQRT1_2
end_ifndef

begin_define
define|#
directive|define
name|M_SQRT1_2
value|0.70710678118654752440
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PI
end_ifndef

begin_comment
comment|// as in stroustrup
end_comment

begin_define
define|#
directive|define
name|PI
value|M_PI
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PI2
end_ifndef

begin_define
define|#
directive|define
name|PI2
value|M_PI_2
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

