begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// This may look like C code, but it is really -*- C++ -*-
end_comment

begin_comment
comment|/*  Copyright (C) 1988 Free Software Foundation     written by Doug Lea (dl@rocky.oswego.edu)  This file is part of GNU CC.  GNU CC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.  No author or distributor accepts responsibility to anyone for the consequences of using it or for whether it serves any particular purpose or works at all, unless he says so in writing.  Refer to the GNU CC General Public License for full details.  Everyone is granted permission to copy, modify and redistribute GNU CC, but only under the conditions described in the GNU CC General Public License.   A copy of this license is supposed to have been given to you along with GNU CC so you can know your rights and responsibilities.  It should be in a file named COPYING.  Among other things, the copyright notice and this notice must be preserved on all copies.   */
end_comment

begin_comment
comment|/*   arithmetic, etc. functions on built in types */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_builtin_h
end_ifndef

begin_ifdef
ifdef|#
directive|ifdef
name|__GNUG__
end_ifdef

begin_pragma
pragma|#
directive|pragma
name|once
end_pragma

begin_pragma
pragma|#
directive|pragma
name|interface
end_pragma

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|_builtin_h
value|1
end_define

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|one_arg_error_handler_t
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|two_arg_error_handler_t
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_include
include|#
directive|include
file|<stddef.h>
end_include

begin_include
include|#
directive|include
file|<std.h>
end_include

begin_include
include|#
directive|include
file|<math.h>
end_include

begin_function_decl
name|long
name|gcd
parameter_list|(
name|long
parameter_list|,
name|long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|lg
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|double
name|pow
parameter_list|(
name|double
parameter_list|,
name|long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|pow
parameter_list|(
name|long
parameter_list|,
name|long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|double
name|start_timer
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
name|double
name|return_elapsed_time
parameter_list|(
name|double
name|last_time
init|=
literal|0.0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|itoa
parameter_list|(
name|long
name|x
parameter_list|,
name|int
name|base
init|=
literal|10
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|itoa
parameter_list|(
name|unsigned
name|long
name|x
parameter_list|,
name|int
name|base
init|=
literal|10
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|__GNUG__
end_ifdef

begin_function_decl
name|char
modifier|*
name|itoa
parameter_list|(
name|long
name|long
name|x
parameter_list|,
name|int
name|base
init|=
literal|10
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|itoa
parameter_list|(
name|unsigned
name|long
name|long
name|x
parameter_list|,
name|int
name|base
init|=
literal|10
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|char
modifier|*
name|dtoa
parameter_list|(
name|double
name|x
parameter_list|,
name|char
name|cvt
init|=
literal|'g'
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|,
name|int
name|prec
init|=
literal|6
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|hex
parameter_list|(
name|long
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|hex
parameter_list|(
name|unsigned
name|long
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|hex
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|hex
parameter_list|(
name|short
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|hex
parameter_list|(
name|unsigned
name|int
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|hex
parameter_list|(
name|unsigned
name|short
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|oct
parameter_list|(
name|long
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|oct
parameter_list|(
name|unsigned
name|long
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|oct
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|oct
parameter_list|(
name|short
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|oct
parameter_list|(
name|unsigned
name|int
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|oct
parameter_list|(
name|unsigned
name|short
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|dec
parameter_list|(
name|long
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|dec
parameter_list|(
name|unsigned
name|long
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|dec
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|dec
parameter_list|(
name|short
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|dec
parameter_list|(
name|unsigned
name|int
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|dec
parameter_list|(
name|unsigned
name|short
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|form
parameter_list|(
specifier|const
name|char
modifier|*
name|fmt
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|chr
parameter_list|(
name|char
name|ch
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|str
parameter_list|(
specifier|const
name|char
modifier|*
name|s
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|int
name|hashpjw
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|int
name|multiplicativehash
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|int
name|foldhash
parameter_list|(
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|default_one_arg_error_handler
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|default_two_arg_error_handler
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|two_arg_error_handler_t
name|lib_error_handler
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|two_arg_error_handler_t
name|set_lib_error_handler
parameter_list|(
name|two_arg_error_handler_t
name|f
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|double
name|abs
parameter_list|(
name|double
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|float
name|abs
parameter_list|(
name|float
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|short
name|abs
parameter_list|(
name|short
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|abs
parameter_list|(
name|long
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sign
parameter_list|(
name|long
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sign
parameter_list|(
name|double
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|sqr
parameter_list|(
name|long
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|double
name|sqr
parameter_list|(
name|double
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|even
parameter_list|(
name|long
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|odd
parameter_list|(
name|long
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|lcm
parameter_list|(
name|long
name|x
parameter_list|,
name|long
name|y
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|setbit
parameter_list|(
name|long
modifier|&
name|x
parameter_list|,
name|long
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|clearbit
parameter_list|(
name|long
modifier|&
name|x
parameter_list|,
name|long
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|testbit
parameter_list|(
name|long
name|x
parameter_list|,
name|long
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|signed
name|char
name|min
parameter_list|(
name|signed
name|char
name|a
parameter_list|,
name|signed
name|char
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|char
name|min
parameter_list|(
name|unsigned
name|char
name|a
parameter_list|,
name|unsigned
name|char
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|signed
name|short
name|min
parameter_list|(
name|signed
name|short
name|a
parameter_list|,
name|signed
name|short
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|short
name|min
parameter_list|(
name|unsigned
name|short
name|a
parameter_list|,
name|unsigned
name|short
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|signed
name|int
name|min
parameter_list|(
name|signed
name|int
name|a
parameter_list|,
name|signed
name|int
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|int
name|min
parameter_list|(
name|unsigned
name|int
name|a
parameter_list|,
name|unsigned
name|int
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|signed
name|long
name|min
parameter_list|(
name|signed
name|long
name|a
parameter_list|,
name|signed
name|long
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|long
name|min
parameter_list|(
name|unsigned
name|long
name|a
parameter_list|,
name|unsigned
name|long
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|float
name|min
parameter_list|(
name|float
name|a
parameter_list|,
name|float
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|double
name|min
parameter_list|(
name|double
name|a
parameter_list|,
name|double
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|signed
name|char
name|max
parameter_list|(
name|signed
name|char
name|a
parameter_list|,
name|signed
name|char
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|char
name|max
parameter_list|(
name|unsigned
name|char
name|a
parameter_list|,
name|unsigned
name|char
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|signed
name|short
name|max
parameter_list|(
name|signed
name|short
name|a
parameter_list|,
name|signed
name|short
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|short
name|max
parameter_list|(
name|unsigned
name|short
name|a
parameter_list|,
name|unsigned
name|short
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|signed
name|int
name|max
parameter_list|(
name|signed
name|int
name|a
parameter_list|,
name|signed
name|int
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|int
name|max
parameter_list|(
name|unsigned
name|int
name|a
parameter_list|,
name|unsigned
name|int
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|signed
name|long
name|max
parameter_list|(
name|signed
name|long
name|a
parameter_list|,
name|signed
name|long
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|long
name|max
parameter_list|(
name|unsigned
name|long
name|a
parameter_list|,
name|unsigned
name|long
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|float
name|max
parameter_list|(
name|float
name|a
parameter_list|,
name|float
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|double
name|max
parameter_list|(
name|double
name|a
parameter_list|,
name|double
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__OPTIMIZE__
argument_list|)
operator|||
name|defined
argument_list|(
name|USE_LIBGXX_INLINES
argument_list|)
end_if

begin_function
specifier|inline
name|double
name|abs
parameter_list|(
name|double
name|arg
parameter_list|)
block|{
return|return
operator|(
name|arg
operator|<
literal|0.0
operator|)
condition|?
operator|-
name|arg
else|:
name|arg
return|;
block|}
end_function

begin_function
specifier|inline
name|float
name|abs
parameter_list|(
name|float
name|arg
parameter_list|)
block|{
return|return
operator|(
name|arg
operator|<
literal|0.0
operator|)
condition|?
operator|-
name|arg
else|:
name|arg
return|;
block|}
end_function

begin_function
specifier|inline
name|short
name|abs
parameter_list|(
name|short
name|arg
parameter_list|)
block|{
return|return
operator|(
name|arg
operator|<
literal|0
operator|)
condition|?
operator|-
name|arg
else|:
name|arg
return|;
block|}
end_function

begin_function
specifier|inline
name|long
name|abs
parameter_list|(
name|long
name|arg
parameter_list|)
block|{
return|return
operator|(
name|arg
operator|<
literal|0
operator|)
condition|?
operator|-
name|arg
else|:
name|arg
return|;
block|}
end_function

begin_function
specifier|inline
name|int
name|sign
parameter_list|(
name|long
name|arg
parameter_list|)
block|{
return|return
operator|(
name|arg
operator|==
literal|0
operator|)
condition|?
literal|0
else|:
operator|(
operator|(
name|arg
operator|>
literal|0
operator|)
condition|?
literal|1
else|:
operator|-
literal|1
operator|)
return|;
block|}
end_function

begin_function
specifier|inline
name|int
name|sign
parameter_list|(
name|double
name|arg
parameter_list|)
block|{
return|return
operator|(
name|arg
operator|==
literal|0.0
operator|)
condition|?
literal|0
else|:
operator|(
operator|(
name|arg
operator|>
literal|0.0
operator|)
condition|?
literal|1
else|:
operator|-
literal|1
operator|)
return|;
block|}
end_function

begin_function
specifier|inline
name|long
name|sqr
parameter_list|(
name|long
name|arg
parameter_list|)
block|{
return|return
name|arg
operator|*
name|arg
return|;
block|}
end_function

begin_function
specifier|inline
name|double
name|sqr
parameter_list|(
name|double
name|arg
parameter_list|)
block|{
return|return
name|arg
operator|*
name|arg
return|;
block|}
end_function

begin_function
specifier|inline
name|int
name|even
parameter_list|(
name|long
name|arg
parameter_list|)
block|{
return|return
operator|!
operator|(
name|arg
operator|&
literal|1
operator|)
return|;
block|}
end_function

begin_function
specifier|inline
name|int
name|odd
parameter_list|(
name|long
name|arg
parameter_list|)
block|{
return|return
operator|(
name|arg
operator|&
literal|1
operator|)
return|;
block|}
end_function

begin_function
specifier|inline
name|long
name|lcm
parameter_list|(
name|long
name|x
parameter_list|,
name|long
name|y
parameter_list|)
block|{
return|return
name|x
operator|/
name|gcd
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
operator|*
name|y
return|;
block|}
end_function

begin_function
specifier|inline
name|void
name|setbit
parameter_list|(
name|long
modifier|&
name|x
parameter_list|,
name|long
name|b
parameter_list|)
block|{
name|x
operator||=
operator|(
literal|1
operator|<<
name|b
operator|)
expr_stmt|;
block|}
end_function

begin_function
specifier|inline
name|void
name|clearbit
parameter_list|(
name|long
modifier|&
name|x
parameter_list|,
name|long
name|b
parameter_list|)
block|{
name|x
operator|&=
operator|~
operator|(
literal|1
operator|<<
name|b
operator|)
expr_stmt|;
block|}
end_function

begin_function
specifier|inline
name|int
name|testbit
parameter_list|(
name|long
name|x
parameter_list|,
name|long
name|b
parameter_list|)
block|{
return|return
operator|(
operator|(
name|x
operator|&
operator|(
literal|1
operator|<<
name|b
operator|)
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
end_function

begin_function
specifier|inline
name|char
modifier|*
name|hex
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
block|{
return|return
name|hex
argument_list|(
name|long
argument_list|(
name|x
argument_list|)
argument_list|,
name|width
argument_list|)
return|;
block|}
end_function

begin_function
specifier|inline
name|char
modifier|*
name|hex
parameter_list|(
name|short
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
block|{
return|return
name|hex
argument_list|(
name|long
argument_list|(
name|x
argument_list|)
argument_list|,
name|width
argument_list|)
return|;
block|}
end_function

begin_function
specifier|inline
name|char
modifier|*
name|hex
parameter_list|(
name|unsigned
name|int
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
block|{
return|return
name|hex
argument_list|(
call|(
name|unsigned
name|long
call|)
argument_list|(
name|x
argument_list|)
argument_list|,
name|width
argument_list|)
return|;
block|}
end_function

begin_function
specifier|inline
name|char
modifier|*
name|hex
parameter_list|(
name|unsigned
name|short
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
block|{
return|return
name|hex
argument_list|(
call|(
name|unsigned
name|long
call|)
argument_list|(
name|x
argument_list|)
argument_list|,
name|width
argument_list|)
return|;
block|}
end_function

begin_function
specifier|inline
name|char
modifier|*
name|oct
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
block|{
return|return
name|oct
argument_list|(
name|long
argument_list|(
name|x
argument_list|)
argument_list|,
name|width
argument_list|)
return|;
block|}
end_function

begin_function
specifier|inline
name|char
modifier|*
name|oct
parameter_list|(
name|short
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
block|{
return|return
name|oct
argument_list|(
name|long
argument_list|(
name|x
argument_list|)
argument_list|,
name|width
argument_list|)
return|;
block|}
end_function

begin_function
specifier|inline
name|char
modifier|*
name|oct
parameter_list|(
name|unsigned
name|int
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
block|{
return|return
name|oct
argument_list|(
call|(
name|unsigned
name|long
call|)
argument_list|(
name|x
argument_list|)
argument_list|,
name|width
argument_list|)
return|;
block|}
end_function

begin_function
specifier|inline
name|char
modifier|*
name|oct
parameter_list|(
name|unsigned
name|short
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
block|{
return|return
name|oct
argument_list|(
call|(
name|unsigned
name|long
call|)
argument_list|(
name|x
argument_list|)
argument_list|,
name|width
argument_list|)
return|;
block|}
end_function

begin_function
specifier|inline
name|char
modifier|*
name|dec
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
block|{
return|return
name|dec
argument_list|(
name|long
argument_list|(
name|x
argument_list|)
argument_list|,
name|width
argument_list|)
return|;
block|}
end_function

begin_function
specifier|inline
name|char
modifier|*
name|dec
parameter_list|(
name|short
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
block|{
return|return
name|dec
argument_list|(
name|long
argument_list|(
name|x
argument_list|)
argument_list|,
name|width
argument_list|)
return|;
block|}
end_function

begin_function
specifier|inline
name|char
modifier|*
name|dec
parameter_list|(
name|unsigned
name|int
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
block|{
return|return
name|dec
argument_list|(
call|(
name|unsigned
name|long
call|)
argument_list|(
name|x
argument_list|)
argument_list|,
name|width
argument_list|)
return|;
block|}
end_function

begin_function
specifier|inline
name|char
modifier|*
name|dec
parameter_list|(
name|unsigned
name|short
name|x
parameter_list|,
name|int
name|width
init|=
literal|0
parameter_list|)
block|{
return|return
name|dec
argument_list|(
call|(
name|unsigned
name|long
call|)
argument_list|(
name|x
argument_list|)
argument_list|,
name|width
argument_list|)
return|;
block|}
end_function

begin_function
specifier|inline
name|signed
name|char
name|min
parameter_list|(
name|signed
name|char
name|a
parameter_list|,
name|signed
name|char
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|<
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|unsigned
name|char
name|min
parameter_list|(
name|unsigned
name|char
name|a
parameter_list|,
name|unsigned
name|char
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|<
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|signed
name|short
name|min
parameter_list|(
name|signed
name|short
name|a
parameter_list|,
name|signed
name|short
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|<
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|unsigned
name|short
name|min
parameter_list|(
name|unsigned
name|short
name|a
parameter_list|,
name|unsigned
name|short
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|<
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|signed
name|int
name|min
parameter_list|(
name|signed
name|int
name|a
parameter_list|,
name|signed
name|int
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|<
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|unsigned
name|int
name|min
parameter_list|(
name|unsigned
name|int
name|a
parameter_list|,
name|unsigned
name|int
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|<
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|signed
name|long
name|min
parameter_list|(
name|signed
name|long
name|a
parameter_list|,
name|signed
name|long
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|<
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|unsigned
name|long
name|min
parameter_list|(
name|unsigned
name|long
name|a
parameter_list|,
name|unsigned
name|long
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|<
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|float
name|min
parameter_list|(
name|float
name|a
parameter_list|,
name|float
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|<
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|double
name|min
parameter_list|(
name|double
name|a
parameter_list|,
name|double
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|<
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|signed
name|char
name|max
parameter_list|(
name|signed
name|char
name|a
parameter_list|,
name|signed
name|char
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|>
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|unsigned
name|char
name|max
parameter_list|(
name|unsigned
name|char
name|a
parameter_list|,
name|unsigned
name|char
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|>
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|signed
name|short
name|max
parameter_list|(
name|signed
name|short
name|a
parameter_list|,
name|signed
name|short
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|>
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|unsigned
name|short
name|max
parameter_list|(
name|unsigned
name|short
name|a
parameter_list|,
name|unsigned
name|short
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|>
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|signed
name|int
name|max
parameter_list|(
name|signed
name|int
name|a
parameter_list|,
name|signed
name|int
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|>
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|unsigned
name|int
name|max
parameter_list|(
name|unsigned
name|int
name|a
parameter_list|,
name|unsigned
name|int
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|>
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|signed
name|long
name|max
parameter_list|(
name|signed
name|long
name|a
parameter_list|,
name|signed
name|long
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|>
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|unsigned
name|long
name|max
parameter_list|(
name|unsigned
name|long
name|a
parameter_list|,
name|unsigned
name|long
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|>
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|float
name|max
parameter_list|(
name|float
name|a
parameter_list|,
name|float
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|>
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|inline
name|double
name|max
parameter_list|(
name|double
name|a
parameter_list|,
name|double
name|b
parameter_list|)
block|{
return|return
operator|(
name|a
operator|>
name|b
operator|)
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

