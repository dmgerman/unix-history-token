begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * $Source: /mit/kerberos/src/lib/des/RCS/des_internal.h,v $  * $Author: jtkohl $  * $Header: des_internal.h,v 4.1 88/11/15 11:09:05 jtkohl Exp $   *  * Copyright 1987, 1988 by the Massachusetts Institute of Technology.  *  * For copying and distribution information, please see the file  *<mit-copyright.h>.  *  * Private include file for the Data Encryption Standard library.  */
end_comment

begin_comment
comment|/* only do the whole thing once	 */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|DES_INTERNAL_DEFS
end_ifndef

begin_define
define|#
directive|define
name|DES_INTERNAL_DEFS
end_define

begin_include
include|#
directive|include
file|"conf.h"
end_include

begin_comment
comment|/*  * number of iterations of the inner  * loop of the DES algorithm.  The  * standard is 16, but in case that is  * too slow, we might do less.  Of  * course, less also means less  * security.  */
end_comment

begin_define
define|#
directive|define
name|AUTH_DES_ITER
value|16
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|BITS32
end_ifdef

begin_comment
comment|/* these are for 32 bit machines */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|b0
range|:
literal|6
decl_stmt|;
name|unsigned
name|b1
range|:
literal|6
decl_stmt|;
name|unsigned
name|b2
range|:
literal|6
decl_stmt|;
name|unsigned
name|b3
range|:
literal|6
decl_stmt|;
name|unsigned
name|b4
range|:
literal|6
decl_stmt|;
name|unsigned
name|b5
range|:
literal|2
decl_stmt|;
block|}
name|sbox_in_a
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|b5
range|:
literal|4
decl_stmt|;
name|unsigned
name|b6
range|:
literal|6
decl_stmt|;
name|unsigned
name|b7
range|:
literal|6
decl_stmt|;
block|}
name|sbox_in_b
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|b0
range|:
literal|4
decl_stmt|;
name|unsigned
name|b1
range|:
literal|4
decl_stmt|;
name|unsigned
name|b2
range|:
literal|4
decl_stmt|;
name|unsigned
name|b3
range|:
literal|4
decl_stmt|;
name|unsigned
name|b4
range|:
literal|4
decl_stmt|;
name|unsigned
name|b5
range|:
literal|4
decl_stmt|;
name|unsigned
name|b6
range|:
literal|4
decl_stmt|;
name|unsigned
name|b7
range|:
literal|4
decl_stmt|;
block|}
name|sbox_out
typedef|;
end_typedef

begin_else
else|#
directive|else
else|BITS32
end_else

begin_comment
comment|/* for sixteen bit machines */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|b0
range|:
literal|6
decl_stmt|;
name|unsigned
name|b1
range|:
literal|6
decl_stmt|;
name|unsigned
name|b2
range|:
literal|4
decl_stmt|;
block|}
name|sbox_in_16_a
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|b2
range|:
literal|2
decl_stmt|;
name|unsigned
name|b3
range|:
literal|6
decl_stmt|;
name|unsigned
name|b4
range|:
literal|6
decl_stmt|;
name|unsigned
name|b5
range|:
literal|2
decl_stmt|;
block|}
name|sbox_in_16_b
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|b5
range|:
literal|4
decl_stmt|;
name|unsigned
name|b6
range|:
literal|6
decl_stmt|;
name|unsigned
name|b7
range|:
literal|6
decl_stmt|;
block|}
name|sbox_in_16_c
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|b0
range|:
literal|4
decl_stmt|;
name|unsigned
name|b1
range|:
literal|4
decl_stmt|;
name|unsigned
name|b2
range|:
literal|4
decl_stmt|;
name|unsigned
name|b3
range|:
literal|4
decl_stmt|;
name|unsigned
name|b4
range|:
literal|4
decl_stmt|;
name|unsigned
name|b5
range|:
literal|4
decl_stmt|;
name|unsigned
name|b6
range|:
literal|4
decl_stmt|;
name|unsigned
name|b7
range|:
literal|4
decl_stmt|;
block|}
name|sbox_out
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
endif|BITS32
end_endif

begin_endif
endif|#
directive|endif
endif|DES_INTERNAL_DEFS
end_endif

end_unit

