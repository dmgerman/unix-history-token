begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1992 The Regents of the University of California  * Copyright (c) 1990, 1992 Jan-Simon Pendry  * All rights reserved.  *  * This code is derived from software donated to Berkeley by  * Jan-Simon Pendry.  *  * %sccs.include.redist.c%  *  *	@(#)portald.h	1.1 (Berkeley) %G%  *  * $Id: portald.h,v 1.1 1992/05/25 21:43:09 jsp Exp jsp $  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_include
include|#
directive|include
file|<portal/portal.h>
end_include

begin_comment
comment|/*  * Meta-chars in an RE.  Paths in the config file containing  * any of these characters will be matched using regexec, other  * paths will be prefix-matched.  */
end_comment

begin_define
define|#
directive|define
name|RE_CHARS
value|".|()[]*+?\\^$"
end_define

begin_typedef
typedef|typedef
name|struct
name|qelem
name|qelem
typedef|;
end_typedef

begin_struct
struct|struct
name|qelem
block|{
name|qelem
modifier|*
name|q_forw
decl_stmt|;
name|qelem
modifier|*
name|q_back
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|provider
name|provider
typedef|;
end_typedef

begin_struct
struct|struct
name|provider
block|{
name|char
modifier|*
name|pr_match
decl_stmt|;
name|int
argument_list|(
argument|*pr_func
argument_list|)
name|__P
argument_list|(
operator|(
expr|struct
name|portal_cred
operator|*
operator|,
name|char
operator|*
name|key
operator|,
name|char
operator|*
operator|*
name|v
operator|,
name|int
name|so
operator|,
name|int
operator|*
name|fdp
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|provider
name|providers
index|[]
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Portal providers  */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|portal_exec
name|__P
argument_list|(
operator|(
expr|struct
name|portal_cred
operator|*
operator|,
name|char
operator|*
name|key
operator|,
name|char
operator|*
operator|*
name|v
operator|,
name|int
name|so
operator|,
name|int
operator|*
name|fdp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|portal_file
name|__P
argument_list|(
operator|(
expr|struct
name|portal_cred
operator|*
operator|,
name|char
operator|*
name|key
operator|,
name|char
operator|*
operator|*
name|v
operator|,
name|int
name|so
operator|,
name|int
operator|*
name|fdp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|portal_tcp
name|__P
argument_list|(
operator|(
expr|struct
name|portal_cred
operator|*
operator|,
name|char
operator|*
name|key
operator|,
name|char
operator|*
operator|*
name|v
operator|,
name|int
name|so
operator|,
name|int
operator|*
name|fdp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Global functions  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|activate
name|__P
argument_list|(
operator|(
name|qelem
operator|*
name|q
operator|,
name|int
name|so
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
modifier|*
name|conf_match
name|__P
argument_list|(
operator|(
name|qelem
operator|*
name|q
operator|,
name|char
operator|*
name|key
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|conf_read
name|__P
argument_list|(
operator|(
name|qelem
operator|*
name|q
operator|,
name|char
operator|*
name|conf
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

end_unit

