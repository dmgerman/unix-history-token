begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $Header: XIproto.h,v 1.20 91/07/24 15:50:02 rws Exp $ */
end_comment

begin_comment
comment|/************************************************************ Copyright (c) 1989 by Hewlett-Packard Company, Palo Alto, California, and the  Massachusetts Institute of Technology, Cambridge, Massachusetts.  			All Rights Reserved  Permission to use, copy, modify, and distribute this software and its documentation for any purpose and without fee is hereby granted, provided that the above copyright notice appear in all copies and that both that copyright notice and this permission notice appear in supporting documentation, and that the names of Hewlett-Packard or MIT not be used in advertising or publicity pertaining to distribution of the software without specific, written prior permission.  HEWLETT-PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL HEWLETT-PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ********************************************************/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_XIPROTO_H
end_ifndef

begin_define
define|#
directive|define
name|_XIPROTO_H
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|NEED_EVENTS
end_ifndef

begin_define
define|#
directive|define
name|NEED_EVENTS
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|NEED_REPLIES
end_ifndef

begin_define
define|#
directive|define
name|NEED_REPLIES
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<X11/Xproto.h>
end_include

begin_include
include|#
directive|include
file|<X11/X.h>
end_include

begin_comment
comment|/*********************************************************  *  * number of events, errors, and extension name.  *  */
end_comment

begin_define
define|#
directive|define
name|MORE_EVENTS
value|0x80
end_define

begin_define
define|#
directive|define
name|DEVICE_BITS
value|0x7F
end_define

begin_define
define|#
directive|define
name|InputClassBits
value|0x3F
end_define

begin_comment
comment|/* bits in mode field for input classes */
end_comment

begin_define
define|#
directive|define
name|ModeBitsShift
value|6
end_define

begin_comment
comment|/* amount to shift the remaining bits   */
end_comment

begin_define
define|#
directive|define
name|numInputClasses
value|7
end_define

begin_define
define|#
directive|define
name|IEVENTS
value|15
end_define

begin_define
define|#
directive|define
name|IERRORS
value|5
end_define

begin_define
define|#
directive|define
name|CLIENT_REQ
value|1
end_define

begin_typedef
typedef|typedef
struct|struct
name|_XExtEventInfo
block|{
name|Mask
name|mask
decl_stmt|;
name|BYTE
name|type
decl_stmt|;
name|BYTE
name|word
decl_stmt|;
block|}
name|XExtEventInfo
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|unsigned
name|char
modifier|*
name|Pointer
typedef|;
end_typedef

begin_struct
struct|struct
name|tmask
block|{
name|Mask
name|mask
decl_stmt|;
name|Pointer
name|dev
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*********************************************************  *  * Event constants used by library.  *  */
end_comment

begin_define
define|#
directive|define
name|XI_DeviceValuator
value|0
end_define

begin_define
define|#
directive|define
name|XI_DeviceKeyPress
value|1
end_define

begin_define
define|#
directive|define
name|XI_DeviceKeyRelease
value|2
end_define

begin_define
define|#
directive|define
name|XI_DeviceButtonPress
value|3
end_define

begin_define
define|#
directive|define
name|XI_DeviceButtonRelease
value|4
end_define

begin_define
define|#
directive|define
name|XI_DeviceMotionNotify
value|5
end_define

begin_define
define|#
directive|define
name|XI_DeviceFocusIn
value|6
end_define

begin_define
define|#
directive|define
name|XI_DeviceFocusOut
value|7
end_define

begin_define
define|#
directive|define
name|XI_ProximityIn
value|8
end_define

begin_define
define|#
directive|define
name|XI_ProximityOut
value|9
end_define

begin_define
define|#
directive|define
name|XI_DeviceStateNotify
value|10
end_define

begin_define
define|#
directive|define
name|XI_DeviceMappingNotify
value|11
end_define

begin_define
define|#
directive|define
name|XI_ChangeDeviceNotify
value|12
end_define

begin_define
define|#
directive|define
name|XI_DeviceKeystateNotify
value|13
end_define

begin_define
define|#
directive|define
name|XI_DeviceButtonstateNotify
value|14
end_define

begin_comment
comment|/*********************************************************  *  * Protocol request constants  *  */
end_comment

begin_define
define|#
directive|define
name|X_GetExtensionVersion
value|1
end_define

begin_define
define|#
directive|define
name|X_ListInputDevices
value|2
end_define

begin_define
define|#
directive|define
name|X_OpenDevice
value|3
end_define

begin_define
define|#
directive|define
name|X_CloseDevice
value|4
end_define

begin_define
define|#
directive|define
name|X_SetDeviceMode
value|5
end_define

begin_define
define|#
directive|define
name|X_SelectExtensionEvent
value|6
end_define

begin_define
define|#
directive|define
name|X_GetSelectedExtensionEvents
value|7
end_define

begin_define
define|#
directive|define
name|X_ChangeDeviceDontPropagateList
value|8
end_define

begin_define
define|#
directive|define
name|X_GetDeviceDontPropagateList
value|9
end_define

begin_define
define|#
directive|define
name|X_GetDeviceMotionEvents
value|10
end_define

begin_define
define|#
directive|define
name|X_ChangeKeyboardDevice
value|11
end_define

begin_define
define|#
directive|define
name|X_ChangePointerDevice
value|12
end_define

begin_define
define|#
directive|define
name|X_GrabDevice
value|13
end_define

begin_define
define|#
directive|define
name|X_UngrabDevice
value|14
end_define

begin_define
define|#
directive|define
name|X_GrabDeviceKey
value|15
end_define

begin_define
define|#
directive|define
name|X_UngrabDeviceKey
value|16
end_define

begin_define
define|#
directive|define
name|X_GrabDeviceButton
value|17
end_define

begin_define
define|#
directive|define
name|X_UngrabDeviceButton
value|18
end_define

begin_define
define|#
directive|define
name|X_AllowDeviceEvents
value|19
end_define

begin_define
define|#
directive|define
name|X_GetDeviceFocus
value|20
end_define

begin_define
define|#
directive|define
name|X_SetDeviceFocus
value|21
end_define

begin_define
define|#
directive|define
name|X_GetFeedbackControl
value|22
end_define

begin_define
define|#
directive|define
name|X_ChangeFeedbackControl
value|23
end_define

begin_define
define|#
directive|define
name|X_GetDeviceKeyMapping
value|24
end_define

begin_define
define|#
directive|define
name|X_ChangeDeviceKeyMapping
value|25
end_define

begin_define
define|#
directive|define
name|X_GetDeviceModifierMapping
value|26
end_define

begin_define
define|#
directive|define
name|X_SetDeviceModifierMapping
value|27
end_define

begin_define
define|#
directive|define
name|X_GetDeviceButtonMapping
value|28
end_define

begin_define
define|#
directive|define
name|X_SetDeviceButtonMapping
value|29
end_define

begin_define
define|#
directive|define
name|X_QueryDeviceState
value|30
end_define

begin_define
define|#
directive|define
name|X_SendExtensionEvent
value|31
end_define

begin_define
define|#
directive|define
name|X_DeviceBell
value|32
end_define

begin_define
define|#
directive|define
name|X_SetDeviceValuators
value|33
end_define

begin_define
define|#
directive|define
name|X_GetDeviceControl
value|34
end_define

begin_define
define|#
directive|define
name|X_ChangeDeviceControl
value|35
end_define

begin_comment
comment|/*********************************************************  *  * Protocol request and reply structures.  *  * GetExtensionVersion.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code   */
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_GetExtensionVersion */
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD16
name|nbytes
name|B16
decl_stmt|;
name|CARD8
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
block|}
name|xGetExtensionVersionReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_GetExtensionVersion */
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD16
name|major_version
name|B16
decl_stmt|;
name|CARD16
name|minor_version
name|B16
decl_stmt|;
name|BOOL
name|present
decl_stmt|;
name|CARD8
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
block|}
name|xGetExtensionVersionReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * ListInputDevices.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_ListInputDevices 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
block|}
name|xListInputDevicesReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_ListInputDevices  	*/
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD8
name|ndevices
name|B32
decl_stmt|;
name|CARD8
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
name|CARD32
name|pad05
name|B32
decl_stmt|;
block|}
name|xListInputDevicesReply
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|_xDeviceInfo
modifier|*
name|xDeviceInfoPtr
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|_xAnyClassinfo
modifier|*
name|xAnyClassPtr
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_xAnyClassinfo
block|{
name|CARD8
name|class
decl_stmt|;
name|CARD8
name|length
decl_stmt|;
block|}
name|xAnyClassInfo
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_xDeviceInfo
block|{
name|CARD32
name|type
name|B32
decl_stmt|;
name|CARD8
name|id
decl_stmt|;
name|CARD8
name|num_classes
decl_stmt|;
name|CARD8
name|use
decl_stmt|;
name|CARD8
name|pad1
decl_stmt|;
block|}
name|xDeviceInfo
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|_xKeyInfo
modifier|*
name|xKeyInfoPtr
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_xKeyInfo
block|{
name|CARD8
name|class
decl_stmt|;
name|CARD8
name|length
decl_stmt|;
name|KeyCode
name|min_keycode
decl_stmt|;
name|KeyCode
name|max_keycode
decl_stmt|;
name|CARD16
name|num_keys
name|B16
decl_stmt|;
name|CARD8
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
block|}
name|xKeyInfo
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|_xButtonInfo
modifier|*
name|xButtonInfoPtr
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_xButtonInfo
block|{
name|CARD8
name|class
decl_stmt|;
name|CARD8
name|length
decl_stmt|;
name|CARD16
name|num_buttons
name|B16
decl_stmt|;
block|}
name|xButtonInfo
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|_xValuatorInfo
modifier|*
name|xValuatorInfoPtr
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_xValuatorInfo
block|{
name|CARD8
name|class
decl_stmt|;
name|CARD8
name|length
decl_stmt|;
name|CARD8
name|num_axes
decl_stmt|;
name|CARD8
name|mode
decl_stmt|;
name|CARD32
name|motion_buffer_size
name|B32
decl_stmt|;
block|}
name|xValuatorInfo
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|_xAxisInfo
modifier|*
name|xAxisInfoPtr
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_xAxisInfo
block|{
name|CARD32
name|resolution
name|B32
decl_stmt|;
name|CARD32
name|min_value
name|B32
decl_stmt|;
name|CARD32
name|max_value
name|B32
decl_stmt|;
block|}
name|xAxisInfo
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * OpenDevice.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_OpenDevice 		*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xOpenDeviceReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_OpenDevice        	*/
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD8
name|num_classes
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad00
name|B32
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
block|}
name|xOpenDeviceReply
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
name|CARD8
name|event_type_base
decl_stmt|;
block|}
name|xInputClassInfo
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * CloseDevice.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_CloseDevice 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xCloseDeviceReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * SetDeviceMode.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_SetDeviceMode 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|CARD8
name|mode
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
block|}
name|xSetDeviceModeReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_SetDeviceMode  	*/
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD8
name|status
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
name|CARD32
name|pad05
name|B32
decl_stmt|;
block|}
name|xSetDeviceModeReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * SelectExtensionEvent.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_SelectExtensionEvent */
name|CARD16
name|length
name|B16
decl_stmt|;
name|Window
name|window
name|B32
decl_stmt|;
name|CARD16
name|count
name|B16
decl_stmt|;
name|CARD16
name|pad00
name|B16
decl_stmt|;
block|}
name|xSelectExtensionEventReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * GetSelectedExtensionEvent.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* X_GetSelectedExtensionEvents */
name|CARD16
name|length
name|B16
decl_stmt|;
name|Window
name|window
name|B32
decl_stmt|;
block|}
name|xGetSelectedExtensionEventsReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* GetSelectedExtensionEvents	*/
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD16
name|this_client_count
name|B16
decl_stmt|;
name|CARD16
name|all_clients_count
name|B16
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
name|CARD32
name|pad05
name|B32
decl_stmt|;
block|}
name|xGetSelectedExtensionEventsReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * ChangeDeviceDontPropagateList.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* X_ChangeDeviceDontPropagateList */
name|CARD16
name|length
name|B16
decl_stmt|;
name|Window
name|window
name|B32
decl_stmt|;
name|CARD16
name|count
name|B16
decl_stmt|;
name|CARD8
name|mode
decl_stmt|;
name|BYTE
name|pad
decl_stmt|;
block|}
name|xChangeDeviceDontPropagateListReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * GetDeviceDontPropagateList.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* X_GetDeviceDontPropagateList */
name|CARD16
name|length
name|B16
decl_stmt|;
name|Window
name|window
name|B32
decl_stmt|;
block|}
name|xGetDeviceDontPropagateListReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* GetDeviceDontPropagateList   */
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD16
name|count
name|B16
decl_stmt|;
name|CARD16
name|pad00
name|B16
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
name|CARD32
name|pad05
name|B32
decl_stmt|;
block|}
name|xGetDeviceDontPropagateListReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * GetDeviceMotionEvents.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_GetDeviceMotionEvents*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|Time
name|start
name|B32
decl_stmt|;
name|Time
name|stop
name|B32
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xGetDeviceMotionEventsReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply */
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_GetDeviceMotionEvents  */
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD32
name|nEvents
name|B32
decl_stmt|;
name|CARD8
name|axes
decl_stmt|;
name|CARD8
name|mode
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
block|}
name|xGetDeviceMotionEventsReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * ChangeKeyboardDevice.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* X_ChangeKeyboardDevice 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xChangeKeyboardDeviceReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_ChangeKeyboardDevice*/
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
comment|/* 0 */
name|CARD8
name|status
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
name|CARD32
name|pad05
name|B32
decl_stmt|;
block|}
name|xChangeKeyboardDeviceReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * ChangePointerDevice.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* X_ChangePointerDevice 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|xaxis
decl_stmt|;
name|CARD8
name|yaxis
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|;
block|}
name|xChangePointerDeviceReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_ChangePointerDevice */
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
comment|/* 0 */
name|CARD8
name|status
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
name|CARD32
name|pad05
name|B32
decl_stmt|;
block|}
name|xChangePointerDeviceReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * GrabDevice.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_GrabDevice */
name|CARD16
name|length
name|B16
decl_stmt|;
name|Window
name|grabWindow
name|B32
decl_stmt|;
name|Time
name|time
name|B32
decl_stmt|;
name|CARD16
name|event_count
name|B16
decl_stmt|;
name|CARD8
name|this_device_mode
decl_stmt|;
name|CARD8
name|other_devices_mode
decl_stmt|;
name|BOOL
name|ownerEvents
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|CARD16
name|pad01
name|B16
decl_stmt|;
block|}
name|xGrabDeviceReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_GrabDevice  	*/
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
comment|/* 0 */
name|CARD8
name|status
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
name|CARD32
name|pad05
name|B32
decl_stmt|;
block|}
name|xGrabDeviceReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * UngrabDevice.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_UnGrabDevice 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|Time
name|time
name|B32
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xUngrabDeviceReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * GrabDeviceKey.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_GrabDeviceKey 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|Window
name|grabWindow
name|B32
decl_stmt|;
name|CARD16
name|event_count
name|B16
decl_stmt|;
name|CARD16
name|modifiers
name|B16
decl_stmt|;
name|CARD8
name|modifier_device
decl_stmt|;
name|CARD8
name|grabbed_device
decl_stmt|;
name|CARD8
name|key
decl_stmt|;
name|BYTE
name|this_device_mode
decl_stmt|;
name|BYTE
name|other_devices_mode
decl_stmt|;
name|BOOL
name|ownerEvents
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
block|}
name|xGrabDeviceKeyReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * UngrabDeviceKey.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_UngrabDeviceKey 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|Window
name|grabWindow
name|B32
decl_stmt|;
name|CARD16
name|modifiers
name|B16
decl_stmt|;
name|CARD8
name|modifier_device
decl_stmt|;
name|CARD8
name|key
decl_stmt|;
name|CARD8
name|grabbed_device
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xUngrabDeviceKeyReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * GrabDeviceButton.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_GrabDeviceButton 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|Window
name|grabWindow
name|B32
decl_stmt|;
name|CARD8
name|grabbed_device
decl_stmt|;
name|CARD8
name|modifier_device
decl_stmt|;
name|CARD16
name|event_count
name|B16
decl_stmt|;
name|CARD16
name|modifiers
name|B16
decl_stmt|;
name|BYTE
name|this_device_mode
decl_stmt|;
name|BYTE
name|other_devices_mode
decl_stmt|;
name|CARD8
name|button
decl_stmt|;
name|BOOL
name|ownerEvents
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
block|}
name|xGrabDeviceButtonReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * UngrabDeviceButton.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_UngrabDeviceButton 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|Window
name|grabWindow
name|B32
decl_stmt|;
name|CARD16
name|modifiers
name|B16
decl_stmt|;
name|CARD8
name|modifier_device
decl_stmt|;
name|CARD8
name|button
decl_stmt|;
name|CARD8
name|grabbed_device
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xUngrabDeviceButtonReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * AllowDeviceEvents.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_AllowDeviceEvents 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|Time
name|time
name|B32
decl_stmt|;
name|CARD8
name|mode
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
block|}
name|xAllowDeviceEventsReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * GetDeviceFocus.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code   */
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_GetDeviceFocus 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xGetDeviceFocusReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_GetDeviceFocus  	*/
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD32
name|focus
name|B32
decl_stmt|;
name|Time
name|time
name|B32
decl_stmt|;
name|CARD8
name|revertTo
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
block|}
name|xGetDeviceFocusReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * SetDeviceFocus.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code   */
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_SetDeviceFocus 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|Window
name|focus
name|B32
decl_stmt|;
name|Time
name|time
name|B32
decl_stmt|;
name|CARD8
name|revertTo
decl_stmt|;
name|CARD8
name|device
decl_stmt|;
name|CARD16
name|pad01
name|B16
decl_stmt|;
block|}
name|xSetDeviceFocusReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * GetFeedbackControl.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* X_GetFeedbackControl  	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xGetFeedbackControlReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_GetFeedbackControl 	*/
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD16
name|num_feedbacks
name|B16
decl_stmt|;
name|CARD16
name|pad01
name|B16
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
name|CARD32
name|pad05
name|B32
decl_stmt|;
name|CARD32
name|pad06
name|B32
decl_stmt|;
block|}
name|xGetFeedbackControlReply
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
comment|/* feedback class		*/
name|CARD8
name|id
decl_stmt|;
comment|/* feedback id    		*/
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* feedback length		*/
block|}
name|xFeedbackState
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
name|CARD8
name|id
decl_stmt|;
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD16
name|pitch
name|B16
decl_stmt|;
name|CARD16
name|duration
name|B16
decl_stmt|;
name|CARD32
name|led_mask
name|B32
decl_stmt|;
name|CARD32
name|led_values
name|B32
decl_stmt|;
name|BOOL
name|global_auto_repeat
decl_stmt|;
name|CARD8
name|click
decl_stmt|;
name|CARD8
name|percent
decl_stmt|;
name|BYTE
name|pad
decl_stmt|;
name|BYTE
name|auto_repeats
index|[
literal|32
index|]
decl_stmt|;
block|}
name|xKbdFeedbackState
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
name|CARD8
name|id
decl_stmt|;
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
name|CARD16
name|accelNum
name|B16
decl_stmt|;
name|CARD16
name|accelDenom
name|B16
decl_stmt|;
name|CARD16
name|threshold
name|B16
decl_stmt|;
block|}
name|xPtrFeedbackState
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
comment|/* feedback class id		*/
name|CARD8
name|id
decl_stmt|;
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* feedback length  		*/
name|CARD32
name|resolution
name|B32
decl_stmt|;
name|INT32
name|min_value
name|B32
decl_stmt|;
name|INT32
name|max_value
name|B32
decl_stmt|;
block|}
name|xIntegerFeedbackState
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
comment|/* feedback class id		*/
name|CARD8
name|id
decl_stmt|;
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* feedback length  		*/
name|CARD16
name|max_symbols
name|B16
decl_stmt|;
name|CARD16
name|num_syms_supported
name|B16
decl_stmt|;
block|}
name|xStringFeedbackState
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
comment|/* feedback class id		*/
name|CARD8
name|id
decl_stmt|;
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* feedback length  		*/
name|CARD8
name|percent
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD16
name|pitch
name|B16
decl_stmt|;
name|CARD16
name|duration
name|B16
decl_stmt|;
block|}
name|xBellFeedbackState
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
comment|/* feedback class id		*/
name|CARD8
name|id
decl_stmt|;
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* feedback length  		*/
name|CARD32
name|led_mask
name|B32
decl_stmt|;
name|CARD32
name|led_values
name|B32
decl_stmt|;
block|}
name|xLedFeedbackState
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * ChangeFeedbackControl.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* X_ChangeFeedbackControl  	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD32
name|mask
name|B32
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|CARD8
name|feedbackid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
block|}
name|xChangeFeedbackControlReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
comment|/* feedback class id		*/
name|CARD8
name|id
decl_stmt|;
comment|/* feedback id      		*/
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* feedback length  		*/
block|}
name|xFeedbackCtl
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
comment|/* feedback class id		*/
name|CARD8
name|id
decl_stmt|;
comment|/* feedback length  		*/
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* feedback length  		*/
name|KeyCode
name|key
decl_stmt|;
name|CARD8
name|auto_repeat_mode
decl_stmt|;
name|INT8
name|click
decl_stmt|;
name|INT8
name|percent
decl_stmt|;
name|INT16
name|pitch
name|B16
decl_stmt|;
name|INT16
name|duration
name|B16
decl_stmt|;
name|CARD32
name|led_mask
name|B32
decl_stmt|;
name|CARD32
name|led_values
name|B32
decl_stmt|;
block|}
name|xKbdFeedbackCtl
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
comment|/* feedback class id		*/
name|CARD8
name|id
decl_stmt|;
comment|/* feedback id      		*/
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* feedback length  		*/
name|CARD8
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
name|INT16
name|num
name|B16
decl_stmt|;
name|INT16
name|denom
name|B16
decl_stmt|;
name|INT16
name|thresh
name|B16
decl_stmt|;
block|}
name|xPtrFeedbackCtl
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
comment|/* feedback class id		*/
name|CARD8
name|id
decl_stmt|;
comment|/* feedback id      		*/
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* feedback length  		*/
name|INT32
name|int_to_display
name|B32
decl_stmt|;
block|}
name|xIntegerFeedbackCtl
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
comment|/* feedback class id		*/
name|CARD8
name|id
decl_stmt|;
comment|/* feedback id      		*/
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* feedback length  		*/
name|CARD8
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
name|CARD16
name|num_keysyms
name|B16
decl_stmt|;
block|}
name|xStringFeedbackCtl
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
comment|/* feedback class id		*/
name|CARD8
name|id
decl_stmt|;
comment|/* feedback id      		*/
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* feedback length  		*/
name|INT8
name|percent
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|INT16
name|pitch
name|B16
decl_stmt|;
name|INT16
name|duration
name|B16
decl_stmt|;
block|}
name|xBellFeedbackCtl
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
comment|/* feedback class id		*/
name|CARD8
name|id
decl_stmt|;
comment|/* feedback id      		*/
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* feedback length  		*/
name|CARD32
name|led_mask
name|B32
decl_stmt|;
name|CARD32
name|led_values
name|B32
decl_stmt|;
block|}
name|xLedFeedbackCtl
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * GetDeviceKeyMapping.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code   */
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_GetDeviceKeyMapping */
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|KeyCode
name|firstKeyCode
decl_stmt|;
name|CARD8
name|count
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|;
block|}
name|xGetDeviceKeyMappingReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_GetDeviceKeyMapping */
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD8
name|keySymsPerKeyCode
decl_stmt|;
name|CARD8
name|pad0
decl_stmt|;
name|CARD16
name|pad1
name|B16
decl_stmt|;
name|CARD32
name|pad2
name|B32
decl_stmt|;
name|CARD32
name|pad3
name|B32
decl_stmt|;
name|CARD32
name|pad4
name|B32
decl_stmt|;
name|CARD32
name|pad5
name|B32
decl_stmt|;
name|CARD32
name|pad6
name|B32
decl_stmt|;
block|}
name|xGetDeviceKeyMappingReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * ChangeDeviceKeyMapping.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code   */
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_ChangeDeviceKeyMapping */
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|KeyCode
name|firstKeyCode
decl_stmt|;
name|CARD8
name|keySymsPerKeyCode
decl_stmt|;
name|CARD8
name|keyCodes
decl_stmt|;
block|}
name|xChangeDeviceKeyMappingReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * GetDeviceModifierMapping.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code   */
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_GetDeviceModifierMapping */
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xGetDeviceModifierMappingReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply */
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_GetDeviceModifierMapping */
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD8
name|numKeyPerModifier
decl_stmt|;
name|CARD8
name|pad0
decl_stmt|;
name|CARD16
name|pad1
name|B16
decl_stmt|;
name|CARD32
name|pad2
name|B32
decl_stmt|;
name|CARD32
name|pad3
name|B32
decl_stmt|;
name|CARD32
name|pad4
name|B32
decl_stmt|;
name|CARD32
name|pad5
name|B32
decl_stmt|;
name|CARD32
name|pad6
name|B32
decl_stmt|;
block|}
name|xGetDeviceModifierMappingReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * SetDeviceModifierMapping.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code   */
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_SetDeviceModifierMapping */
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|CARD8
name|numKeyPerModifier
decl_stmt|;
name|CARD16
name|pad1
name|B16
decl_stmt|;
block|}
name|xSetDeviceModifierMappingReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply */
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_SetDeviceModifierMapping */
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD8
name|success
decl_stmt|;
name|CARD8
name|pad0
decl_stmt|;
name|CARD16
name|pad1
name|B16
decl_stmt|;
name|CARD32
name|pad2
name|B32
decl_stmt|;
name|CARD32
name|pad3
name|B32
decl_stmt|;
name|CARD32
name|pad4
name|B32
decl_stmt|;
name|CARD32
name|pad5
name|B32
decl_stmt|;
name|CARD32
name|pad6
name|B32
decl_stmt|;
block|}
name|xSetDeviceModifierMappingReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * GetDeviceButtonMapping.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* X_GetDeviceButtonMapping     */
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xGetDeviceButtonMappingReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply */
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_GetDeviceButtonMapping */
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD8
name|nElts
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
name|CARD32
name|pad05
name|B32
decl_stmt|;
block|}
name|xGetDeviceButtonMappingReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * SetDeviceButtonMapping.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* X_SetDeviceButtonMapping     */
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|CARD8
name|map_length
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
block|}
name|xSetDeviceButtonMappingReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply */
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_SetDeviceButtonMapping */
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD8
name|status
decl_stmt|;
name|BYTE
name|pad0
decl_stmt|;
name|CARD16
name|pad1
name|B16
decl_stmt|;
name|CARD32
name|pad2
name|B32
decl_stmt|;
name|CARD32
name|pad3
name|B32
decl_stmt|;
name|CARD32
name|pad4
name|B32
decl_stmt|;
name|CARD32
name|pad5
name|B32
decl_stmt|;
name|CARD32
name|pad6
name|B32
decl_stmt|;
block|}
name|xSetDeviceButtonMappingReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * QueryDeviceState.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_QueryDeviceState */
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xQueryDeviceStateReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply */
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_QueryDeviceState	*/
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD8
name|num_classes
decl_stmt|;
name|BYTE
name|pad0
decl_stmt|;
name|CARD16
name|pad1
name|B16
decl_stmt|;
name|CARD32
name|pad2
name|B32
decl_stmt|;
name|CARD32
name|pad3
name|B32
decl_stmt|;
name|CARD32
name|pad4
name|B32
decl_stmt|;
name|CARD32
name|pad5
name|B32
decl_stmt|;
name|CARD32
name|pad6
name|B32
decl_stmt|;
block|}
name|xQueryDeviceStateReply
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
name|CARD8
name|length
decl_stmt|;
name|CARD8
name|num_keys
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|;
name|CARD8
name|keys
index|[
literal|32
index|]
decl_stmt|;
block|}
name|xKeyState
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
name|CARD8
name|length
decl_stmt|;
name|CARD8
name|num_buttons
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|;
name|CARD8
name|buttons
index|[
literal|32
index|]
decl_stmt|;
block|}
name|xButtonState
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|class
decl_stmt|;
name|CARD8
name|length
decl_stmt|;
name|CARD8
name|num_valuators
decl_stmt|;
name|CARD8
name|mode
decl_stmt|;
block|}
name|xValuatorState
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * SendExtensionEvent.  * THIS REQUEST MUST BE KEPT A MULTIPLE OF 8 BYTES IN LENGTH!  * MORE EVENTS MAY FOLLOW AND THEY MUST BE QUAD-ALIGNED!  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_SendExtensionEvent */
name|CARD16
name|length
name|B16
decl_stmt|;
name|Window
name|destination
name|B32
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BOOL
name|propagate
decl_stmt|;
name|CARD16
name|count
name|B16
decl_stmt|;
name|CARD8
name|num_events
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
block|}
name|xSendExtensionEventReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * DeviceBell.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_DeviceBell */
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|CARD8
name|feedbackid
decl_stmt|;
name|CARD8
name|feedbackclass
decl_stmt|;
name|INT8
name|percent
decl_stmt|;
block|}
name|xDeviceBellReq
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * SetDeviceValuators.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_SetDeviceValuators 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|CARD8
name|first_valuator
decl_stmt|;
name|CARD8
name|num_valuators
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|;
block|}
name|xSetDeviceValuatorsReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_SetDeviceValuators 	*/
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD8
name|status
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
name|CARD32
name|pad05
name|B32
decl_stmt|;
block|}
name|xSetDeviceValuatorsReply
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * GetDeviceControl.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_GetDeviceControl 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD16
name|control
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad2
decl_stmt|;
block|}
name|xGetDeviceControlReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_GetDeviceControl 	*/
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD8
name|status
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
name|CARD32
name|pad05
name|B32
decl_stmt|;
block|}
name|xGetDeviceControlReply
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD16
name|control
name|B16
decl_stmt|;
comment|/* control type     	 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* control length  		*/
block|}
name|xDeviceState
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD16
name|control
name|B16
decl_stmt|;
comment|/* control type     	 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* control length  		*/
name|CARD32
name|num_valuators
name|B32
decl_stmt|;
comment|/* number of valuators		*/
block|}
name|xDeviceResolutionState
typedef|;
end_typedef

begin_comment
comment|/*********************************************************  *  * ChangeDeviceControl.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|reqType
decl_stmt|;
comment|/* input extension major code	*/
name|CARD8
name|ReqType
decl_stmt|;
comment|/* always X_ChangeDeviceControl */
name|CARD16
name|length
name|B16
decl_stmt|;
name|CARD16
name|control
name|B16
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|CARD8
name|num_valuators
decl_stmt|;
block|}
name|xChangeDeviceControlReq
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD8
name|repType
decl_stmt|;
comment|/* X_Reply 			*/
name|CARD8
name|RepType
decl_stmt|;
comment|/* always X_ChangeDeviceControl	*/
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD32
name|length
name|B32
decl_stmt|;
name|CARD8
name|status
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
name|CARD32
name|pad05
name|B32
decl_stmt|;
block|}
name|xChangeDeviceControlReply
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD16
name|control
name|B16
decl_stmt|;
comment|/* control type     	 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* control length  		*/
block|}
name|xDeviceCtl
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|CARD16
name|control
name|B16
decl_stmt|;
comment|/* control type     	 	*/
name|CARD16
name|length
name|B16
decl_stmt|;
comment|/* control length  		*/
name|CARD8
name|first_valuator
decl_stmt|;
comment|/* first valuator to change     */
name|CARD8
name|num_valuators
decl_stmt|;
comment|/* number of valuators to change*/
name|CARD8
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
block|}
name|xDeviceResolutionCtl
typedef|;
end_typedef

begin_comment
comment|/**********************************************************  *  * Input extension events.  *  * DeviceValuator  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|BYTE
name|type
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|KeyButMask
name|device_state
name|B16
decl_stmt|;
name|CARD8
name|num_valuators
decl_stmt|;
name|CARD8
name|first_valuator
decl_stmt|;
name|INT32
name|valuator0
name|B32
decl_stmt|;
name|INT32
name|valuator1
name|B32
decl_stmt|;
name|INT32
name|valuator2
name|B32
decl_stmt|;
name|INT32
name|valuator3
name|B32
decl_stmt|;
name|INT32
name|valuator4
name|B32
decl_stmt|;
name|INT32
name|valuator5
name|B32
decl_stmt|;
block|}
name|deviceValuator
typedef|;
end_typedef

begin_comment
comment|/**********************************************************  *  * DeviceKeyButtonPointer.  *  * Used for: DeviceKeyPress, DeviceKeyRelease,  *	     DeviceButtonPress, DeviceButtonRelease,  *	     ProximityIn, ProximityOut  *	     DeviceMotionNotify,  *   */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|BYTE
name|type
decl_stmt|;
name|BYTE
name|detail
decl_stmt|;
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|Time
name|time
name|B32
decl_stmt|;
name|Window
name|root
name|B32
decl_stmt|;
name|Window
name|event
name|B32
decl_stmt|;
name|Window
name|child
name|B32
decl_stmt|;
name|INT16
name|root_x
name|B16
decl_stmt|;
name|INT16
name|root_y
name|B16
decl_stmt|;
name|INT16
name|event_x
name|B16
decl_stmt|;
name|INT16
name|event_y
name|B16
decl_stmt|;
name|KeyButMask
name|state
name|B16
decl_stmt|;
name|BOOL
name|same_screen
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
block|}
name|deviceKeyButtonPointer
typedef|;
end_typedef

begin_comment
comment|/**********************************************************  *  * DeviceFocus.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|BYTE
name|type
decl_stmt|;
name|BYTE
name|detail
decl_stmt|;
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|Time
name|time
name|B32
decl_stmt|;
name|Window
name|window
name|B32
decl_stmt|;
name|BYTE
name|mode
decl_stmt|;
name|CARD8
name|deviceid
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|;
name|CARD32
name|pad00
name|B32
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
block|}
name|deviceFocus
typedef|;
end_typedef

begin_comment
comment|/**********************************************************  *  * DeviceStateNotify.  *  * Note that the two high-order bits in the classes_reported  * field are the proximity state (InProximity or OutOfProximity),  * and the device mode (Absolute or Relative), respectively.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|BYTE
name|type
decl_stmt|;
name|BYTE
name|deviceid
decl_stmt|;
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|Time
name|time
name|B32
decl_stmt|;
name|CARD8
name|num_keys
decl_stmt|;
name|CARD8
name|num_buttons
decl_stmt|;
name|CARD8
name|num_valuators
decl_stmt|;
name|CARD8
name|classes_reported
decl_stmt|;
name|CARD8
name|buttons
index|[
literal|4
index|]
decl_stmt|;
name|CARD8
name|keys
index|[
literal|4
index|]
decl_stmt|;
name|INT32
name|valuator0
name|B32
decl_stmt|;
name|INT32
name|valuator1
name|B32
decl_stmt|;
name|INT32
name|valuator2
name|B32
decl_stmt|;
block|}
name|deviceStateNotify
typedef|;
end_typedef

begin_comment
comment|/**********************************************************  *  * DeviceKeyStateNotify.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|BYTE
name|type
decl_stmt|;
name|BYTE
name|deviceid
decl_stmt|;
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD8
name|keys
index|[
literal|28
index|]
decl_stmt|;
block|}
name|deviceKeyStateNotify
typedef|;
end_typedef

begin_comment
comment|/**********************************************************  *  * DeviceButtonStateNotify.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|BYTE
name|type
decl_stmt|;
name|BYTE
name|deviceid
decl_stmt|;
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD8
name|buttons
index|[
literal|28
index|]
decl_stmt|;
block|}
name|deviceButtonStateNotify
typedef|;
end_typedef

begin_comment
comment|/**********************************************************  *  * DeviceMappingNotify.  * Fields must be kept in sync with core mappingnotify event.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|BYTE
name|type
decl_stmt|;
name|BYTE
name|deviceid
decl_stmt|;
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|CARD8
name|request
decl_stmt|;
name|KeyCode
name|firstKeyCode
decl_stmt|;
name|CARD8
name|count
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|;
name|Time
name|time
name|B32
decl_stmt|;
name|CARD32
name|pad00
name|B32
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
block|}
name|deviceMappingNotify
typedef|;
end_typedef

begin_comment
comment|/**********************************************************  *  * ChangeDeviceNotify.  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|BYTE
name|type
decl_stmt|;
name|BYTE
name|deviceid
decl_stmt|;
name|CARD16
name|sequenceNumber
name|B16
decl_stmt|;
name|Time
name|time
name|B32
decl_stmt|;
name|CARD8
name|request
decl_stmt|;
name|BYTE
name|pad1
decl_stmt|,
name|pad2
decl_stmt|,
name|pad3
decl_stmt|;
name|CARD32
name|pad00
name|B32
decl_stmt|;
name|CARD32
name|pad01
name|B32
decl_stmt|;
name|CARD32
name|pad02
name|B32
decl_stmt|;
name|CARD32
name|pad03
name|B32
decl_stmt|;
name|CARD32
name|pad04
name|B32
decl_stmt|;
block|}
name|changeDeviceNotify
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

end_unit

