begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* This file has been modified by Data General Corporation, November 1989. */
end_comment

begin_comment
comment|/* *			Disassembler Instruction Table * *	The first field of the table is the opcode field. If an opcode *	is specified which has any non-opcode bits on, a system error *	will occur when the system attempts the install it into the *	instruction table.  The second parameter is a pointer to the *	instruction mnemonic. Each operand is specified by offset, width, *	and type. The offset is the bit number of the least significant *	bit of the operand with bit 0 being the least significant bit of *	the instruction. The width is the number of bits used to specify *	the operand. The type specifies the output format to be used for *	the operand. The valid formats are: register, register indirect, *	hex constant, and bit field specification.  The last field is a *	pointer to the next instruction in the linked list.  These pointers *	are initialized by init_disasm(). * *				Structure Format * *       struct INSTAB { *          UPINT opcode; *          char *mnemonic; *          struct OPSPEC op1,op2,op3; *          struct SIM_FLAGS flgs; *          struct INSTAB *next; *       } * *       struct OPSPEC { *          UPINT offset:5; *          UPINT width:6; *          UPINT type:5; *       } * *				Revision History * *	Revision 1.0	11/08/85	Creation date *		 1.1	02/05/86	Updated instruction mnemonic table MD *		 1.2	06/16/86	Updated SIM_FLAGS for floating point *		 1.3	09/20/86	Updated for new encoding *		 	05/11/89	R. Trawick adapted from Motorola disassembler */
end_comment

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_comment
comment|/*  * This file contains the structures and constants needed to build the M88000  * simulator.  It is the main include file, containing all the  * structures, macros and definitions except for the floating point  * instruction set.  */
end_comment

begin_comment
comment|/*  * The following flag informs the Simulator as to what type of byte ordering  * will be used. For instance, a BOFLAG = 1 indicates a DEC VAX and IBM type  * of ordering shall be used. */
end_comment

begin_comment
comment|/* # define     BOFLAG   1                       /* BYTE ORDERING FLAG */
end_comment

begin_comment
comment|/* define the number of bits in the primary opcode field of the instruction,  * the destination field, the source 1 and source 2 fields.  */
end_comment

begin_define
define|#
directive|define
name|OP
value|8
end_define

begin_comment
comment|/* size of opcode field */
end_comment

begin_define
define|#
directive|define
name|DEST
value|6
end_define

begin_comment
comment|/* size of destination  */
end_comment

begin_define
define|#
directive|define
name|SOURCE1
value|6
end_define

begin_comment
comment|/* size of source1      */
end_comment

begin_define
define|#
directive|define
name|SOURCE2
value|6
end_define

begin_comment
comment|/* size of source2      */
end_comment

begin_define
define|#
directive|define
name|REGs
value|32
end_define

begin_comment
comment|/* number of registers  */
end_comment

begin_define
define|#
directive|define
name|WORD
value|long
end_define

begin_define
define|#
directive|define
name|FLAG
value|unsigned
end_define

begin_define
define|#
directive|define
name|STATE
value|short
end_define

begin_define
define|#
directive|define
name|TRUE
value|1
end_define

begin_define
define|#
directive|define
name|FALSE
value|0
end_define

begin_define
define|#
directive|define
name|READ
value|0
end_define

begin_define
define|#
directive|define
name|WRITE
value|1
end_define

begin_comment
comment|/* The next four equates define the priorities that the various classes  * of instructions have regarding writing results back into registers and  * signalling exceptions.  */
end_comment

begin_define
define|#
directive|define
name|PINT
value|0
end_define

begin_comment
comment|/* Integer Priority */
end_comment

begin_define
define|#
directive|define
name|PFLT
value|1
end_define

begin_comment
comment|/* Floating Point Priority */
end_comment

begin_define
define|#
directive|define
name|PMEM
value|2
end_define

begin_comment
comment|/* Memory Priority */
end_comment

begin_define
define|#
directive|define
name|NA
value|3
end_define

begin_comment
comment|/* Not Applicable, instruction doesnt write to regs */
end_comment

begin_define
define|#
directive|define
name|HIPRI
value|3
end_define

begin_comment
comment|/* highest of these priorities */
end_comment

begin_comment
comment|/* The instruction registers are an artificial mechanism to speed up  * simulator execution.  In the real processor, an instruction register  * is 32 bits wide.  In the simulator, the 32 bit instruction is kept in  * a structure field called rawop, and the instruction is partially decoded,  * and split into various fields and flags which make up the other fields  * of the structure.  * The partial decode is done when the instructions are initially loaded  * into simulator memory.  The simulator code memory is not an array of  * 32 bit words, but is an array of instruction register structures.  * Yes this wastes memory, but it executes much quicker.  */
end_comment

begin_struct
struct|struct
name|IR_FIELDS
block|{
name|unsigned
name|long
name|op
range|:
name|OP
decl_stmt|,
name|dest
range|:
name|DEST
decl_stmt|,
name|src1
range|:
name|SOURCE1
decl_stmt|,
name|src2
range|:
name|SOURCE2
decl_stmt|;
name|int
name|ltncy
decl_stmt|,
name|extime
decl_stmt|,
name|wb_pri
decl_stmt|;
comment|/* writeback priority     */
name|unsigned
name|short
name|imm_flags
range|:
literal|2
decl_stmt|,
comment|/* immediate size         */
name|rs1_used
range|:
literal|1
decl_stmt|,
comment|/* register source 1 used */
name|rs2_used
range|:
literal|1
decl_stmt|,
comment|/* register source 2 used */
name|rsd_used
range|:
literal|1
decl_stmt|,
comment|/* register source/dest. used */
name|c_flag
range|:
literal|1
decl_stmt|,
comment|/* complement      */
name|u_flag
range|:
literal|1
decl_stmt|,
comment|/* upper half word */
name|n_flag
range|:
literal|1
decl_stmt|,
comment|/* execute next    */
name|wb_flag
range|:
literal|1
decl_stmt|,
comment|/* uses writeback slot */
name|dest_64
range|:
literal|1
decl_stmt|,
comment|/* dest size       */
name|s1_64
range|:
literal|1
decl_stmt|,
comment|/* source 1 size   */
name|s2_64
range|:
literal|1
decl_stmt|,
comment|/* source 2 size   */
name|scale_flag
range|:
literal|1
decl_stmt|,
comment|/* scaled register */
name|brk_flg
range|:
literal|1
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mem_segs
block|{
name|struct
name|mem_wrd
modifier|*
name|seg
decl_stmt|;
comment|/* pointer (returned by calloc) to segment */
name|unsigned
name|long
name|baseaddr
decl_stmt|;
comment|/* base load address from file headers */
name|unsigned
name|long
name|endaddr
decl_stmt|;
comment|/* Ending address of segment */
name|int
name|flags
decl_stmt|;
comment|/* segment control flags (none defined 12/5/86) */
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|MAXSEGS
value|(10)
end_define

begin_comment
comment|/* max number of segment allowed */
end_comment

begin_define
define|#
directive|define
name|MEMSEGSIZE
value|(sizeof(struct mem_segs))
end_define

begin_comment
comment|/* size of mem_segs structure */
end_comment

begin_define
define|#
directive|define
name|BRK_RD
value|(0x01)
end_define

begin_comment
comment|/* break on memory read */
end_comment

begin_define
define|#
directive|define
name|BRK_WR
value|(0x02)
end_define

begin_comment
comment|/* break on memory write */
end_comment

begin_define
define|#
directive|define
name|BRK_EXEC
value|(0x04)
end_define

begin_comment
comment|/* break on execution */
end_comment

begin_define
define|#
directive|define
name|BRK_CNT
value|(0x08)
end_define

begin_comment
comment|/* break on terminal count */
end_comment

begin_struct
struct|struct
name|mem_wrd
block|{
name|struct
name|IR_FIELDS
name|opcode
decl_stmt|;
comment|/* simulator instruction break down */
union|union
block|{
name|unsigned
name|long
name|l
decl_stmt|;
comment|/* memory element break down */
name|unsigned
name|short
name|s
index|[
literal|2
index|]
decl_stmt|;
name|unsigned
name|char
name|c
index|[
literal|4
index|]
decl_stmt|;
block|}
name|mem
union|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|MEMWRDSIZE
value|(sizeof(struct mem_wrd))
end_define

begin_comment
comment|/* size of each 32 bit memory model */
end_comment

begin_comment
comment|/* External declarations */
end_comment

begin_decl_stmt
specifier|extern
name|struct
name|mem_segs
name|memory
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|PROCESSOR
name|m78000
decl_stmt|;
end_decl_stmt

begin_struct
struct|struct
name|PROCESSOR
block|{
name|unsigned
name|WORD
name|ip
decl_stmt|,
comment|/* execute instruction pointer */
name|vbr
decl_stmt|,
comment|/* vector base register */
name|psr
decl_stmt|;
comment|/* processor status register */
name|WORD
name|S1bus
decl_stmt|,
comment|/* source 1 */
name|S2bus
decl_stmt|,
comment|/* source 2 */
name|Dbus
decl_stmt|,
comment|/* destination */
name|DAbus
decl_stmt|,
comment|/* data address bus */
name|ALU
decl_stmt|,
name|Regs
index|[
name|REGs
index|]
decl_stmt|,
comment|/* data registers */
name|time_left
index|[
name|REGs
index|]
decl_stmt|,
comment|/* max clocks before reg is available */
name|wb_pri
index|[
name|REGs
index|]
decl_stmt|,
comment|/* writeback priority of reg */
name|SFU0_regs
index|[
name|REGs
index|]
decl_stmt|,
comment|/* integer unit control regs */
name|SFU1_regs
index|[
name|REGs
index|]
decl_stmt|,
comment|/* floating point control regs */
name|Scoreboard
index|[
name|REGs
index|]
decl_stmt|,
name|Vbr
decl_stmt|;
name|unsigned
name|WORD
name|scoreboard
decl_stmt|,
name|Psw
decl_stmt|,
name|Tpsw
decl_stmt|;
name|FLAG
name|jump_pending
range|:
literal|1
decl_stmt|;
comment|/* waiting for a jump instr. */
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|i26bit
value|1
end_define

begin_comment
comment|/* size of immediate field */
end_comment

begin_define
define|#
directive|define
name|i16bit
value|2
end_define

begin_define
define|#
directive|define
name|i10bit
value|3
end_define

begin_comment
comment|/* Definitions for fields in psr */
end_comment

begin_define
define|#
directive|define
name|mode
value|31
end_define

begin_define
define|#
directive|define
name|rbo
value|30
end_define

begin_define
define|#
directive|define
name|ser
value|29
end_define

begin_define
define|#
directive|define
name|carry
value|28
end_define

begin_define
define|#
directive|define
name|sf7m
value|11
end_define

begin_define
define|#
directive|define
name|sf6m
value|10
end_define

begin_define
define|#
directive|define
name|sf5m
value|9
end_define

begin_define
define|#
directive|define
name|sf4m
value|8
end_define

begin_define
define|#
directive|define
name|sf3m
value|7
end_define

begin_define
define|#
directive|define
name|sf2m
value|6
end_define

begin_define
define|#
directive|define
name|sf1m
value|5
end_define

begin_define
define|#
directive|define
name|mam
value|4
end_define

begin_define
define|#
directive|define
name|inm
value|3
end_define

begin_define
define|#
directive|define
name|exm
value|2
end_define

begin_define
define|#
directive|define
name|trm
value|1
end_define

begin_define
define|#
directive|define
name|ovfm
value|0
end_define

begin_define
define|#
directive|define
name|MODEMASK
value|(1<<(mode-1))
end_define

begin_define
define|#
directive|define
name|SILENT
value|0
end_define

begin_comment
comment|/* simulate without output to crt */
end_comment

begin_define
define|#
directive|define
name|VERBOSE
value|1
end_define

begin_comment
comment|/* simulate in verbose mode */
end_comment

begin_define
define|#
directive|define
name|PR_INSTR
value|2
end_define

begin_comment
comment|/* only print instructions */
end_comment

begin_define
define|#
directive|define
name|RESET
value|16
end_define

begin_comment
comment|/* reset phase */
end_comment

begin_define
define|#
directive|define
name|PHASE1
value|0
end_define

begin_comment
comment|/* data path phases */
end_comment

begin_define
define|#
directive|define
name|PHASE2
value|1
end_define

begin_comment
comment|/* the 1 clock operations */
end_comment

begin_define
define|#
directive|define
name|ADDU
value|1
end_define

begin_define
define|#
directive|define
name|ADDC
value|2
end_define

begin_define
define|#
directive|define
name|ADDUC
value|3
end_define

begin_define
define|#
directive|define
name|ADD
value|4
end_define

begin_define
define|#
directive|define
name|SUBU
value|ADD+1
end_define

begin_define
define|#
directive|define
name|SUBB
value|ADD+2
end_define

begin_define
define|#
directive|define
name|SUBUB
value|ADD+3
end_define

begin_define
define|#
directive|define
name|SUB
value|ADD+4
end_define

begin_define
define|#
directive|define
name|AND
value|ADD+5
end_define

begin_define
define|#
directive|define
name|OR
value|ADD+6
end_define

begin_define
define|#
directive|define
name|XOR
value|ADD+7
end_define

begin_define
define|#
directive|define
name|CMP
value|ADD+8
end_define

begin_comment
comment|/* the LOADS */
end_comment

begin_define
define|#
directive|define
name|LDAB
value|CMP+1
end_define

begin_define
define|#
directive|define
name|LDAH
value|CMP+2
end_define

begin_define
define|#
directive|define
name|LDA
value|CMP+3
end_define

begin_define
define|#
directive|define
name|LDAD
value|CMP+4
end_define

begin_define
define|#
directive|define
name|LDB
value|LDAD+1
end_define

begin_define
define|#
directive|define
name|LDH
value|LDAD+2
end_define

begin_define
define|#
directive|define
name|LD
value|LDAD+3
end_define

begin_define
define|#
directive|define
name|LDD
value|LDAD+4
end_define

begin_define
define|#
directive|define
name|LDBU
value|LDAD+5
end_define

begin_define
define|#
directive|define
name|LDHU
value|LDAD+6
end_define

begin_comment
comment|/* the STORES */
end_comment

begin_define
define|#
directive|define
name|STB
value|LDHU+1
end_define

begin_define
define|#
directive|define
name|STH
value|LDHU+2
end_define

begin_define
define|#
directive|define
name|ST
value|LDHU+3
end_define

begin_define
define|#
directive|define
name|STD
value|LDHU+4
end_define

begin_comment
comment|/* the exchange */
end_comment

begin_define
define|#
directive|define
name|XMEMBU
value|LDHU+5
end_define

begin_define
define|#
directive|define
name|XMEM
value|LDHU+6
end_define

begin_comment
comment|/* the branches */
end_comment

begin_define
define|#
directive|define
name|JSR
value|STD+1
end_define

begin_define
define|#
directive|define
name|BSR
value|STD+2
end_define

begin_define
define|#
directive|define
name|BR
value|STD+3
end_define

begin_define
define|#
directive|define
name|JMP
value|STD+4
end_define

begin_define
define|#
directive|define
name|BB1
value|STD+5
end_define

begin_define
define|#
directive|define
name|BB0
value|STD+6
end_define

begin_define
define|#
directive|define
name|RTN
value|STD+7
end_define

begin_define
define|#
directive|define
name|BCND
value|STD+8
end_define

begin_comment
comment|/* the TRAPS */
end_comment

begin_define
define|#
directive|define
name|TB1
value|BCND+1
end_define

begin_define
define|#
directive|define
name|TB0
value|BCND+2
end_define

begin_define
define|#
directive|define
name|TCND
value|BCND+3
end_define

begin_define
define|#
directive|define
name|RTE
value|BCND+4
end_define

begin_define
define|#
directive|define
name|TBND
value|BCND+5
end_define

begin_comment
comment|/* the MISC instructions */
end_comment

begin_define
define|#
directive|define
name|MUL
value|TBND + 1
end_define

begin_define
define|#
directive|define
name|DIV
value|MUL  +2
end_define

begin_define
define|#
directive|define
name|DIVU
value|MUL  +3
end_define

begin_define
define|#
directive|define
name|MASK
value|MUL  +4
end_define

begin_define
define|#
directive|define
name|FF0
value|MUL  +5
end_define

begin_define
define|#
directive|define
name|FF1
value|MUL  +6
end_define

begin_define
define|#
directive|define
name|CLR
value|MUL  +7
end_define

begin_define
define|#
directive|define
name|SET
value|MUL  +8
end_define

begin_define
define|#
directive|define
name|EXT
value|MUL  +9
end_define

begin_define
define|#
directive|define
name|EXTU
value|MUL  +10
end_define

begin_define
define|#
directive|define
name|MAK
value|MUL  +11
end_define

begin_define
define|#
directive|define
name|ROT
value|MUL  +12
end_define

begin_comment
comment|/* control register manipulations */
end_comment

begin_define
define|#
directive|define
name|LDCR
value|ROT  +1
end_define

begin_define
define|#
directive|define
name|STCR
value|ROT  +2
end_define

begin_define
define|#
directive|define
name|XCR
value|ROT  +3
end_define

begin_define
define|#
directive|define
name|FLDCR
value|ROT  +4
end_define

begin_define
define|#
directive|define
name|FSTCR
value|ROT  +5
end_define

begin_define
define|#
directive|define
name|FXCR
value|ROT  +6
end_define

begin_define
define|#
directive|define
name|NOP
value|XCR +1
end_define

begin_comment
comment|/* floating point instructions */
end_comment

begin_define
define|#
directive|define
name|FADD
value|NOP +1
end_define

begin_define
define|#
directive|define
name|FSUB
value|NOP +2
end_define

begin_define
define|#
directive|define
name|FMUL
value|NOP +3
end_define

begin_define
define|#
directive|define
name|FDIV
value|NOP +4
end_define

begin_define
define|#
directive|define
name|FSQRT
value|NOP +5
end_define

begin_define
define|#
directive|define
name|FCMP
value|NOP +6
end_define

begin_define
define|#
directive|define
name|FIP
value|NOP +7
end_define

begin_define
define|#
directive|define
name|FLT
value|NOP +8
end_define

begin_define
define|#
directive|define
name|INT
value|NOP +9
end_define

begin_define
define|#
directive|define
name|NINT
value|NOP +10
end_define

begin_define
define|#
directive|define
name|TRNC
value|NOP +11
end_define

begin_define
define|#
directive|define
name|FLDC
value|NOP +12
end_define

begin_define
define|#
directive|define
name|FSTC
value|NOP +13
end_define

begin_define
define|#
directive|define
name|FXC
value|NOP +14
end_define

begin_define
define|#
directive|define
name|UEXT
parameter_list|(
name|src
parameter_list|,
name|off
parameter_list|,
name|wid
parameter_list|)
value|((((unsigned int)(src))>>(off))& ((1<<(wid)) - 1))
end_define

begin_define
define|#
directive|define
name|SEXT
parameter_list|(
name|src
parameter_list|,
name|off
parameter_list|,
name|wid
parameter_list|)
value|(((((int)(src))<<(32-((off)+(wid))))>>(32-(wid))) )
end_define

begin_define
define|#
directive|define
name|MAKE
parameter_list|(
name|src
parameter_list|,
name|off
parameter_list|,
name|wid
parameter_list|)
define|\
value|((((unsigned int)(src))& ((1<<(wid)) - 1))<< (off))
end_define

begin_define
define|#
directive|define
name|opword
parameter_list|(
name|n
parameter_list|)
value|(unsigned long) (memaddr->mem.l)
end_define

begin_comment
comment|/*  Constants and Masks */
end_comment

begin_define
define|#
directive|define
name|SFU0
value|0x80000000
end_define

begin_define
define|#
directive|define
name|SFU1
value|0x84000000
end_define

begin_define
define|#
directive|define
name|SFU7
value|0x9c000000
end_define

begin_define
define|#
directive|define
name|RRI10
value|0xf0000000
end_define

begin_define
define|#
directive|define
name|RRR
value|0xf4000000
end_define

begin_define
define|#
directive|define
name|SFUMASK
value|0xfc00ffe0
end_define

begin_define
define|#
directive|define
name|RRRMASK
value|0xfc00ffe0
end_define

begin_define
define|#
directive|define
name|RRI10MASK
value|0xfc00fc00
end_define

begin_define
define|#
directive|define
name|DEFMASK
value|0xfc000000
end_define

begin_define
define|#
directive|define
name|CTRL
value|0x0000f000
end_define

begin_define
define|#
directive|define
name|CTRLMASK
value|0xfc00f800
end_define

begin_comment
comment|/* Operands types */
end_comment

begin_define
define|#
directive|define
name|HEX
value|1
end_define

begin_define
define|#
directive|define
name|REG
value|2
end_define

begin_define
define|#
directive|define
name|IND
value|3
end_define

begin_define
define|#
directive|define
name|CONT
value|3
end_define

begin_define
define|#
directive|define
name|IND
value|3
end_define

begin_define
define|#
directive|define
name|BF
value|4
end_define

begin_define
define|#
directive|define
name|REGSC
value|5
end_define

begin_comment
comment|/* scaled register */
end_comment

begin_define
define|#
directive|define
name|CRREG
value|6
end_define

begin_comment
comment|/* control register */
end_comment

begin_define
define|#
directive|define
name|FCRREG
value|7
end_define

begin_comment
comment|/* floating point control register */
end_comment

begin_define
define|#
directive|define
name|PCREL
value|8
end_define

begin_define
define|#
directive|define
name|CONDMASK
value|9
end_define

begin_comment
comment|/* Hashing Specification */
end_comment

begin_define
define|#
directive|define
name|HASHVAL
value|79
end_define

begin_comment
comment|/* Type definitions */
end_comment

begin_typedef
typedef|typedef
name|unsigned
name|int
name|UINT
typedef|;
end_typedef

begin_comment
comment|/* Structure templates */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|int
name|offset
range|:
literal|5
decl_stmt|;
name|unsigned
name|int
name|width
range|:
literal|6
decl_stmt|;
name|unsigned
name|int
name|type
range|:
literal|5
decl_stmt|;
block|}
name|OPSPEC
typedef|;
end_typedef

begin_struct
struct|struct
name|SIM_FLAGS
block|{
name|int
name|ltncy
decl_stmt|,
comment|/* latency (max number of clocks needed to execute) */
name|extime
decl_stmt|,
comment|/* execution time (min number of clocks needed to execute) */
name|wb_pri
decl_stmt|;
comment|/* writeback slot priority */
name|unsigned
name|long
name|op
range|:
name|OP
decl_stmt|,
comment|/* simulator version of opcode */
name|imm_flags
range|:
literal|2
decl_stmt|,
comment|/* 10,16 or 26 bit immediate flags */
name|rs1_used
range|:
literal|1
decl_stmt|,
comment|/* register source 1 used */
name|rs2_used
range|:
literal|1
decl_stmt|,
comment|/* register source 2 used */
name|rsd_used
range|:
literal|1
decl_stmt|,
comment|/* register source/dest used */
name|c_flag
range|:
literal|1
decl_stmt|,
comment|/* complement */
name|u_flag
range|:
literal|1
decl_stmt|,
comment|/* upper half word */
name|n_flag
range|:
literal|1
decl_stmt|,
comment|/* execute next */
name|wb_flag
range|:
literal|1
decl_stmt|,
comment|/* uses writeback slot */
name|dest_64
range|:
literal|1
decl_stmt|,
comment|/* double precision dest */
name|s1_64
range|:
literal|1
decl_stmt|,
comment|/* double precision source 1 */
name|s2_64
range|:
literal|1
decl_stmt|,
comment|/* double precision source 2 */
name|scale_flag
range|:
literal|1
decl_stmt|;
comment|/* register is scaled */
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
struct|struct
name|INSTRUCTAB
block|{
name|unsigned
name|int
name|opcode
decl_stmt|;
name|char
modifier|*
name|mnemonic
decl_stmt|;
name|OPSPEC
name|op1
decl_stmt|,
name|op2
decl_stmt|,
name|op3
decl_stmt|;
name|struct
name|SIM_FLAGS
name|flgs
decl_stmt|;
name|struct
name|INSTRUCTAB
modifier|*
name|next
decl_stmt|;
block|}
name|INSTAB
typedef|;
end_typedef

begin_escape
end_escape

begin_comment
comment|/* Opcode     Mnemonic       Op 1 Spec     Op 2 Spec    Op 3 Spec         Simflags             Next  */
end_comment

begin_decl_stmt
specifier|static
name|INSTAB
name|instructions
index|[]
init|=
block|{
literal|0xf400c800
block|,
literal|"jsr      "
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|JSR
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf400cc00
block|,
literal|"jsr.n    "
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|JSR
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf400c000
block|,
literal|"jmp      "
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|JMP
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf400c400
block|,
literal|"jmp.n    "
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|JMP
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xc8000000
block|,
literal|"bsr      "
block|,
block|{
literal|0
block|,
literal|26
block|,
name|PCREL
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|BSR
block|,
name|i26bit
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xcc000000
block|,
literal|"bsr.n    "
block|,
block|{
literal|0
block|,
literal|26
block|,
name|PCREL
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|BSR
block|,
name|i26bit
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xc0000000
block|,
literal|"br       "
block|,
block|{
literal|0
block|,
literal|26
block|,
name|PCREL
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|BR
block|,
name|i26bit
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xc4000000
block|,
literal|"br.n     "
block|,
block|{
literal|0
block|,
literal|26
block|,
name|PCREL
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|BR
block|,
name|i26bit
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xd0000000
block|,
literal|"bb0      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|HEX
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|PCREL
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|BB0
block|,
name|i16bit
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xd4000000
block|,
literal|"bb0.n    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|HEX
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|PCREL
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|BB0
block|,
name|i16bit
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xd8000000
block|,
literal|"bb1      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|HEX
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|PCREL
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|BB1
block|,
name|i16bit
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xdc000000
block|,
literal|"bb1.n    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|HEX
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|PCREL
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|BB1
block|,
name|i16bit
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf000d000
block|,
literal|"tb0      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|HEX
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|10
block|,
name|HEX
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|TB0
block|,
name|i10bit
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf000d800
block|,
literal|"tb1      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|HEX
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|10
block|,
name|HEX
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|TB1
block|,
name|i10bit
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xe8000000
block|,
literal|"bcnd     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|CONDMASK
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|PCREL
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|BCND
block|,
name|i16bit
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xec000000
block|,
literal|"bcnd.n   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|CONDMASK
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|PCREL
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|BCND
block|,
name|i16bit
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf000e800
block|,
literal|"tcnd     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|CONDMASK
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|10
block|,
name|HEX
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|TCND
block|,
name|i10bit
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf8000000
block|,
literal|"tbnd     "
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|TBND
block|,
name|i10bit
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf400f800
block|,
literal|"tbnd     "
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|TBND
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf400fc00
block|,
literal|"rte      "
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|2
block|,
literal|2
block|,
name|NA
block|,
name|RTE
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x1c000000
block|,
literal|"ld.b     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDB
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4001c00
block|,
literal|"ld.b     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x0c000000
block|,
literal|"ld.bu    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDBU
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4000c00
block|,
literal|"ld.bu    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDBU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x18000000
block|,
literal|"ld.h     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDH
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4001800
block|,
literal|"ld.h     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDH
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4001a00
block|,
literal|"ld.h     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDH
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0x08000000
block|,
literal|"ld.hu    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDHU
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4000800
block|,
literal|"ld.hu    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDHU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4000a00
block|,
literal|"ld.hu    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDHU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0x14000000
block|,
literal|"ld       "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LD
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4001400
block|,
literal|"ld       "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4001600
block|,
literal|"ld       "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0x10000000
block|,
literal|"ld.d     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDD
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4001000
block|,
literal|"ld.d     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4001200
block|,
literal|"ld.d     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LDD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0xf4001500
block|,
literal|"ld.usr   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4001700
block|,
literal|"ld.usr   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|LD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0x2c000000
block|,
literal|"st.b     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|STB
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4002c00
block|,
literal|"st.b     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|STB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x28000000
block|,
literal|"st.h     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|STH
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4002800
block|,
literal|"st.h     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|STH
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4002a00
block|,
literal|"st.h     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|STH
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0x24000000
block|,
literal|"st       "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|ST
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4002400
block|,
literal|"st       "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|ST
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4002600
block|,
literal|"st       "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|ST
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0x20000000
block|,
literal|"st.d     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|STD
block|,
name|i16bit
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4002000
block|,
literal|"st.d     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|STD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4002200
block|,
literal|"st.d     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|STD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0xf4002500
block|,
literal|"st.usr   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|ST
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4002700
block|,
literal|"st.usr   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|NA
block|,
name|ST
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0x00000000
block|,
literal|"xmem.bu  "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|XMEMBU
block|,
name|i16bit
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4000000
block|,
literal|"xmem.bu  "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|XMEM
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x04000000
block|,
literal|"xmem     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|XMEM
block|,
name|i16bit
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4000400
block|,
literal|"xmem     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|XMEM
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4000600
block|,
literal|"xmem     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|XMEM
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0xf4000500
block|,
literal|"xmem.usr "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|XMEM
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4000700
block|,
literal|"xmem.usr "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|3
block|,
literal|1
block|,
name|PMEM
block|,
name|XMEM
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0xf4003e00
block|,
literal|"lda.b    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|LDAH
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0xf4003a00
block|,
literal|"lda.h    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|LDAH
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0xf4003600
block|,
literal|"lda      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|LDA
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0xf4003200
block|,
literal|"lda.d    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REGSC
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|LDAD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
name|NULL
block|,
literal|0x80004000
block|,
literal|"ldcr     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|5
block|,
literal|6
block|,
name|CRREG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|LDCR
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x80008000
block|,
literal|"stcr     "
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|5
block|,
literal|6
block|,
name|CRREG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|STCR
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x8000c000
block|,
literal|"xcr      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|5
block|,
literal|6
block|,
name|CRREG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|XCR
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4006000
block|,
literal|"addu     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|ADDU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4006200
block|,
literal|"addu.ci  "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|ADDU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4006100
block|,
literal|"addu.co  "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|ADDU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4006300
block|,
literal|"addu.cio "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|ADDU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4006400
block|,
literal|"subu     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|SUBU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4006600
block|,
literal|"subu.ci  "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|SUBU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4006500
block|,
literal|"subu.co  "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|SUBU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4006700
block|,
literal|"subu.cio "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|SUBU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4006900
block|,
literal|"divu     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|32
block|,
literal|32
block|,
name|PINT
block|,
name|DIVU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4006d00
block|,
literal|"mul      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|4
block|,
name|PINT
block|,
name|MUL
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4007000
block|,
literal|"add      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|ADD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4007200
block|,
literal|"add.ci   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|ADD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4007100
block|,
literal|"add.co   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|ADD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4007300
block|,
literal|"add.cio  "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|ADD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4007400
block|,
literal|"sub      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|SUB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4007600
block|,
literal|"sub.ci   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|SUB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4007500
block|,
literal|"sub.co   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|SUB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4007700
block|,
literal|"sub.cio  "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|SUB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4007900
block|,
literal|"div      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|32
block|,
literal|32
block|,
name|PINT
block|,
name|DIV
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4007d00
block|,
literal|"cmp      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|CMP
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x60000000
block|,
literal|"addu     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|ADDU
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x64000000
block|,
literal|"subu     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|SUBU
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x68000000
block|,
literal|"divu     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|32
block|,
literal|32
block|,
name|PINT
block|,
name|DIVU
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x6c000000
block|,
literal|"mul      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|4
block|,
literal|1
block|,
name|PINT
block|,
name|MUL
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x70000000
block|,
literal|"add      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|ADD
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x74000000
block|,
literal|"sub      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|SUB
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x78000000
block|,
literal|"div      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|32
block|,
literal|32
block|,
name|PINT
block|,
name|DIV
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x7c000000
block|,
literal|"cmp      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|CMP
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4004000
block|,
literal|"and      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|AND
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4004400
block|,
literal|"and.c    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|AND
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4005800
block|,
literal|"or       "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|OR
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4005c00
block|,
literal|"or.c     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|OR
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4005000
block|,
literal|"xor      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|XOR
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4005400
block|,
literal|"xor.c    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|XOR
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x40000000
block|,
literal|"and      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|AND
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x44000000
block|,
literal|"and.u    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|AND
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x58000000
block|,
literal|"or       "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|OR
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x5c000000
block|,
literal|"or.u     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|OR
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x50000000
block|,
literal|"xor      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|XOR
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x54000000
block|,
literal|"xor.u    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|XOR
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x48000000
block|,
literal|"mask     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|MASK
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x4c000000
block|,
literal|"mask.u   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|16
block|,
name|HEX
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|MASK
block|,
name|i16bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf400ec00
block|,
literal|"ff0      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|FF0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf400e800
block|,
literal|"ff1      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|FF1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf0008000
block|,
literal|"clr      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|10
block|,
name|BF
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|CLR
block|,
name|i10bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf0008800
block|,
literal|"set      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|10
block|,
name|BF
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|SET
block|,
name|i10bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf0009000
block|,
literal|"ext      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|10
block|,
name|BF
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|EXT
block|,
name|i10bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf0009800
block|,
literal|"extu     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|10
block|,
name|BF
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|EXTU
block|,
name|i10bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf000a000
block|,
literal|"mak      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|10
block|,
name|BF
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|MAK
block|,
name|i10bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf000a800
block|,
literal|"rot      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|10
block|,
name|BF
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|ROT
block|,
name|i10bit
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4008000
block|,
literal|"clr      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|CLR
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4008800
block|,
literal|"set      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|SET
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4009000
block|,
literal|"ext      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|EXT
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf4009800
block|,
literal|"extu     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|EXTU
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf400a000
block|,
literal|"mak      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|MAK
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0xf400a800
block|,
literal|"rot      "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PINT
block|,
name|ROT
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84002800
block|,
literal|"fadd.sss "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|5
block|,
literal|1
block|,
name|PFLT
block|,
name|FADD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84002880
block|,
literal|"fadd.ssd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FADD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84002a00
block|,
literal|"fadd.sds "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FADD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84002a80
block|,
literal|"fadd.sdd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FADD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84002820
block|,
literal|"fadd.dss "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FADD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x840028a0
block|,
literal|"fadd.dsd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FADD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84002a20
block|,
literal|"fadd.dds "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FADD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84002aa0
block|,
literal|"fadd.ddd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FADD
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84003000
block|,
literal|"fsub.sss "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|5
block|,
literal|1
block|,
name|PFLT
block|,
name|FSUB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84003080
block|,
literal|"fsub.ssd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FSUB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84003200
block|,
literal|"fsub.sds "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FSUB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84003280
block|,
literal|"fsub.sdd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FSUB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84003020
block|,
literal|"fsub.dss "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FSUB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x840030a0
block|,
literal|"fsub.dsd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FSUB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84003220
block|,
literal|"fsub.dds "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FSUB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x840032a0
block|,
literal|"fsub.ddd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|2
block|,
name|PFLT
block|,
name|FSUB
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84000000
block|,
literal|"fmul.sss "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|1
block|,
name|PFLT
block|,
name|FMUL
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84000080
block|,
literal|"fmul.ssd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|9
block|,
literal|2
block|,
name|PFLT
block|,
name|FMUL
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84000200
block|,
literal|"fmul.sds "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|9
block|,
literal|2
block|,
name|PFLT
block|,
name|FMUL
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84000280
block|,
literal|"fmul.sdd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|9
block|,
literal|2
block|,
name|PFLT
block|,
name|FMUL
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84000020
block|,
literal|"fmul.dss "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|9
block|,
literal|2
block|,
name|PFLT
block|,
name|FMUL
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x840000a0
block|,
literal|"fmul.dsd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|9
block|,
literal|2
block|,
name|PFLT
block|,
name|FMUL
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84000220
block|,
literal|"fmul.dds "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|9
block|,
literal|2
block|,
name|PFLT
block|,
name|FMUL
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x840002a0
block|,
literal|"fmul.ddd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|9
block|,
literal|2
block|,
name|PFLT
block|,
name|FMUL
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84007000
block|,
literal|"fdiv.sss "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|30
block|,
literal|30
block|,
name|PFLT
block|,
name|FDIV
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84007080
block|,
literal|"fdiv.ssd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|60
block|,
literal|60
block|,
name|PFLT
block|,
name|FDIV
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84007200
block|,
literal|"fdiv.sds "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|60
block|,
literal|60
block|,
name|PFLT
block|,
name|FDIV
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84007280
block|,
literal|"fdiv.sdd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|60
block|,
literal|60
block|,
name|PFLT
block|,
name|FDIV
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84007020
block|,
literal|"fdiv.dss "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|60
block|,
literal|60
block|,
name|PFLT
block|,
name|FDIV
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x840070a0
block|,
literal|"fdiv.dsd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|60
block|,
literal|60
block|,
name|PFLT
block|,
name|FDIV
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84007220
block|,
literal|"fdiv.dds "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|60
block|,
literal|60
block|,
name|PFLT
block|,
name|FDIV
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x840072a0
block|,
literal|"fdiv.ddd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|60
block|,
literal|60
block|,
name|PFLT
block|,
name|FDIV
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84007800
block|,
literal|"fsqrt.ss "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|5
block|,
literal|1
block|,
name|PFLT
block|,
name|FLT
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84007880
block|,
literal|"fsqrt.sd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|5
block|,
literal|1
block|,
name|PFLT
block|,
name|FLT
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84007820
block|,
literal|"fsqrt.ds "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|5
block|,
literal|1
block|,
name|PFLT
block|,
name|FLT
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x840078a0
block|,
literal|"fsqrt.dd "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|6
block|,
literal|1
block|,
name|PFLT
block|,
name|FLT
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84003800
block|,
literal|"fcmp.ss  "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|5
block|,
literal|1
block|,
name|PFLT
block|,
name|FCMP
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84003880
block|,
literal|"fcmp.sd  "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|1
block|,
name|PFLT
block|,
name|FCMP
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84003a00
block|,
literal|"fcmp.ds  "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|1
block|,
name|PFLT
block|,
name|FCMP
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84003a80
block|,
literal|"fcmp.dd  "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|6
block|,
literal|1
block|,
name|PFLT
block|,
name|FCMP
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84002000
block|,
literal|"flt.s    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|5
block|,
literal|1
block|,
name|PFLT
block|,
name|FLT
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84002020
block|,
literal|"flt.d    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|6
block|,
literal|1
block|,
name|PFLT
block|,
name|FLT
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84004800
block|,
literal|"int.s    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|5
block|,
literal|1
block|,
name|PFLT
block|,
name|INT
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84004880
block|,
literal|"int.d    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|6
block|,
literal|1
block|,
name|PFLT
block|,
name|INT
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84005000
block|,
literal|"nint.s   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|5
block|,
literal|1
block|,
name|PFLT
block|,
name|INT
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84005080
block|,
literal|"nint.d   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|6
block|,
literal|1
block|,
name|PFLT
block|,
name|INT
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84005800
block|,
literal|"trnc.s   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|5
block|,
literal|1
block|,
name|PFLT
block|,
name|TRNC
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x84005880
block|,
literal|"trnc.d   "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|6
block|,
literal|1
block|,
name|PFLT
block|,
name|TRNC
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x80004800
block|,
literal|"fldcr    "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|5
block|,
literal|6
block|,
name|FCRREG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PFLT
block|,
name|FLDC
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x80008800
block|,
literal|"fstcr    "
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|5
block|,
literal|6
block|,
name|FCRREG
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PFLT
block|,
name|FSTC
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|,
literal|0x8000c800
block|,
literal|"fxcr     "
block|,
block|{
literal|21
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|16
block|,
literal|5
block|,
name|REG
block|}
block|,
block|{
literal|5
block|,
literal|6
block|,
name|FCRREG
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
name|PFLT
block|,
name|FXC
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|NULL
block|}
decl_stmt|;
end_decl_stmt

end_unit

