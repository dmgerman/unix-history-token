begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $Id: rt-mt.h,v 3.0 1992/12/14 00:14:09 davison Trn $ */
end_comment

begin_decl_stmt
name|bool
name|mt_init
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|mt_data
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Stuff internal to rt-mt.c */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|DOINIT
end_ifdef

begin_define
define|#
directive|define
name|DB_VERSION
value|2
end_define

begin_typedef
typedef|typedef
name|char
name|BYTE
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|short
name|WORD
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|long
name|LONG
typedef|;
end_typedef

begin_define
define|#
directive|define
name|ROOT_ARTICLE
value|0x0001
end_define

begin_comment
comment|/* article flag definitions */
end_comment

begin_define
define|#
directive|define
name|HAS_XREFS
value|0x0004
end_define

begin_comment
comment|/* article has an xref line */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|LONG
name|root_num
decl_stmt|;
name|WORD
name|articles
decl_stmt|;
name|WORD
name|article_cnt
decl_stmt|;
name|WORD
name|subject_cnt
decl_stmt|;
name|WORD
name|pad_hack
decl_stmt|;
block|}
name|PACKED_ROOT
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|LONG
name|num
decl_stmt|;
name|LONG
name|date
decl_stmt|;
name|WORD
name|subject
decl_stmt|,
name|author
decl_stmt|;
name|WORD
name|flags
decl_stmt|;
name|WORD
name|child_cnt
decl_stmt|;
name|WORD
name|parent
decl_stmt|;
name|WORD
name|padding
decl_stmt|;
name|WORD
name|sibling
decl_stmt|;
name|WORD
name|root
decl_stmt|;
block|}
name|PACKED_ARTICLE
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|Total
block|{
name|LONG
name|first
decl_stmt|,
name|last
decl_stmt|;
name|LONG
name|string1
decl_stmt|;
name|LONG
name|string2
decl_stmt|;
name|WORD
name|root
decl_stmt|;
name|WORD
name|article
decl_stmt|;
name|WORD
name|subject
decl_stmt|;
name|WORD
name|author
decl_stmt|;
name|WORD
name|domain
decl_stmt|;
name|WORD
name|pad_hack
decl_stmt|;
block|}
name|TOTAL
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|BYTE
name|l
index|[
sizeof|sizeof
argument_list|(
name|LONG
argument_list|)
index|]
decl_stmt|;
name|BYTE
name|w
index|[
sizeof|sizeof
argument_list|(
name|WORD
argument_list|)
index|]
decl_stmt|;
name|BYTE
name|version
decl_stmt|;
name|BYTE
name|pad_hack
decl_stmt|;
block|}
name|BMAP
typedef|;
end_typedef

begin_ifndef
ifndef|#
directive|ifndef
name|USE_XTHREAD
end_ifndef

begin_decl_stmt
specifier|static
name|char
modifier|*
name|mt_name
name|_
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|static
name|int
name|read_authors
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|int
name|read_subjects
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|int
name|read_roots
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|int
name|read_articles
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|int
name|read_ids
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|void
name|tweak_data
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|static
name|int
name|read_item
parameter_list|()
function_decl|;
end_function_decl

begin_decl_stmt
specifier|static
name|void
name|safefree
name|_
argument_list|(
operator|(
name|char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|void
name|mybytemap
name|_
argument_list|(
operator|(
name|BMAP
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|void
name|wp_bmap
argument_list|()
decl_stmt|,
name|lp_bmap
argument_list|()
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

