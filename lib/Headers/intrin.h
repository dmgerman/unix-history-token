begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* ===-------- intrin.h ---------------------------------------------------===  *  * Permission is hereby granted, free of charge, to any person obtaining a copy  * of this software and associated documentation files (the "Software"), to deal  * in the Software without restriction, including without limitation the rights  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell  * copies of the Software, and to permit persons to whom the Software is  * furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice shall be included in  * all copies or substantial portions of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  * THE SOFTWARE.  *  *===-----------------------------------------------------------------------===  */
end_comment

begin_comment
comment|/* Only include this if we're compiling for the windows platform. */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MSC_VER
end_ifndef

begin_empty
empty|#include_next<intrin.h>
end_empty

begin_else
else|#
directive|else
end_else

begin_ifndef
ifndef|#
directive|ifndef
name|__INTRIN_H
end_ifndef

begin_define
define|#
directive|define
name|__INTRIN_H
end_define

begin_comment
comment|/* First include the standard intrinsics. */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__i386__
argument_list|)
operator|||
name|defined
argument_list|(
name|__x86_64__
argument_list|)
end_if

begin_include
include|#
directive|include
file|<x86intrin.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__arm__
argument_list|)
end_if

begin_include
include|#
directive|include
file|<armintr.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* For the definition of jmp_buf. */
end_comment

begin_if
if|#
directive|if
name|__STDC_HOSTED__
end_if

begin_include
include|#
directive|include
file|<setjmp.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Define the default attributes for the functions in this file. */
end_comment

begin_define
define|#
directive|define
name|__DEFAULT_FN_ATTRS
value|__attribute__((__always_inline__, __nodebug__))
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|__MMX__
argument_list|)
comment|/* And the random ones that aren't in those files. */
name|__m64
name|_m_from_float
parameter_list|(
name|float
parameter_list|)
function_decl|;
name|float
name|_m_to_float
parameter_list|(
name|__m64
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* Other assorted instruction intrinsics. */
name|void
name|__addfsbyte
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|char
parameter_list|)
function_decl|;
name|void
name|__addfsdword
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__addfsword
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|short
parameter_list|)
function_decl|;
name|void
name|__code_seg
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__cpuid
parameter_list|(
name|int
index|[
literal|4
index|]
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__cpuidex
parameter_list|(
name|int
index|[
literal|4
index|]
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|__debugbreak
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|__int64
name|__emul
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|__int64
name|__emulu
parameter_list|(
name|unsigned
name|int
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
name|void
name|__cdecl
name|__fastfail
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
name|unsigned
name|int
name|__getcallerseflags
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__halt
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|unsigned
name|char
name|__inbyte
parameter_list|(
name|unsigned
name|short
parameter_list|)
function_decl|;
name|void
name|__inbytestring
parameter_list|(
name|unsigned
name|short
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__incfsbyte
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__incfsdword
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__incfsword
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|unsigned
name|long
name|__indword
parameter_list|(
name|unsigned
name|short
parameter_list|)
function_decl|;
name|void
name|__indwordstring
parameter_list|(
name|unsigned
name|short
parameter_list|,
name|unsigned
name|long
modifier|*
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__int2c
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|__invlpg
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|unsigned
name|short
name|__inword
parameter_list|(
name|unsigned
name|short
parameter_list|)
function_decl|;
name|void
name|__inwordstring
parameter_list|(
name|unsigned
name|short
parameter_list|,
name|unsigned
name|short
modifier|*
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__lidt
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|unsigned
name|__int64
name|__ll_lshift
parameter_list|(
name|unsigned
name|__int64
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|__int64
name|__ll_rshift
parameter_list|(
name|__int64
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|__llwpcb
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|unsigned
name|char
name|__lwpins32
parameter_list|(
name|unsigned
name|int
parameter_list|,
name|unsigned
name|int
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
name|void
name|__lwpval32
parameter_list|(
name|unsigned
name|int
parameter_list|,
name|unsigned
name|int
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
name|unsigned
name|int
name|__lzcnt
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
name|unsigned
name|short
name|__lzcnt16
parameter_list|(
name|unsigned
name|short
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__movsb
parameter_list|(
name|unsigned
name|char
modifier|*
parameter_list|,
name|unsigned
name|char
specifier|const
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__movsd
parameter_list|(
name|unsigned
name|long
modifier|*
parameter_list|,
name|unsigned
name|long
specifier|const
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__movsw
parameter_list|(
name|unsigned
name|short
modifier|*
parameter_list|,
name|unsigned
name|short
specifier|const
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__nop
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|__nvreg_restore_fence
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|__nvreg_save_fence
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|__outbyte
parameter_list|(
name|unsigned
name|short
parameter_list|,
name|unsigned
name|char
parameter_list|)
function_decl|;
name|void
name|__outbytestring
parameter_list|(
name|unsigned
name|short
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__outdword
parameter_list|(
name|unsigned
name|short
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__outdwordstring
parameter_list|(
name|unsigned
name|short
parameter_list|,
name|unsigned
name|long
modifier|*
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__outword
parameter_list|(
name|unsigned
name|short
parameter_list|,
name|unsigned
name|short
parameter_list|)
function_decl|;
name|void
name|__outwordstring
parameter_list|(
name|unsigned
name|short
parameter_list|,
name|unsigned
name|short
modifier|*
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|int
name|__popcnt
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|short
name|__popcnt16
parameter_list|(
name|unsigned
name|short
parameter_list|)
function_decl|;
name|unsigned
name|long
name|__readcr0
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|unsigned
name|long
name|__readcr2
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|long
name|__readcr3
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|unsigned
name|long
name|__readcr4
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|unsigned
name|long
name|__readcr8
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|unsigned
name|int
name|__readdr
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__i386__
specifier|static
name|__inline__
name|unsigned
name|char
name|__readfsbyte
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|long
name|__readfsdword
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|__int64
name|__readfsqword
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|short
name|__readfsword
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
endif|#
directive|endif
specifier|static
name|__inline__
name|unsigned
name|__int64
name|__readmsr
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|unsigned
name|__int64
name|__readpmc
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|unsigned
name|long
name|__segmentlimit
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__sidt
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
name|__slwpcb
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__stosb
parameter_list|(
name|unsigned
name|char
modifier|*
parameter_list|,
name|unsigned
name|char
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__stosd
parameter_list|(
name|unsigned
name|long
modifier|*
parameter_list|,
name|unsigned
name|long
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__stosw
parameter_list|(
name|unsigned
name|short
modifier|*
parameter_list|,
name|unsigned
name|short
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
name|void
name|__svm_clgi
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|__svm_invlpga
parameter_list|(
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|__svm_skinit
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|__svm_stgi
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|__svm_vmload
parameter_list|(
name|size_t
parameter_list|)
function_decl|;
name|void
name|__svm_vmrun
parameter_list|(
name|size_t
parameter_list|)
function_decl|;
name|void
name|__svm_vmsave
parameter_list|(
name|size_t
parameter_list|)
function_decl|;
name|void
name|__ud2
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|unsigned
name|__int64
name|__ull_rshift
parameter_list|(
name|unsigned
name|__int64
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|__vmx_off
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|__vmx_vmptrst
parameter_list|(
name|unsigned
name|__int64
modifier|*
parameter_list|)
function_decl|;
name|void
name|__wbinvd
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|__writecr0
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__writecr3
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
name|void
name|__writecr4
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
name|void
name|__writecr8
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
name|void
name|__writedr
parameter_list|(
name|unsigned
name|int
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
name|void
name|__writefsbyte
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|char
parameter_list|)
function_decl|;
name|void
name|__writefsdword
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__writefsqword
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|__int64
parameter_list|)
function_decl|;
name|void
name|__writefsword
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|short
parameter_list|)
function_decl|;
name|void
name|__writemsr
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|__int64
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
modifier|*
name|_AddressOfReturnAddress
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_BitScanForward
parameter_list|(
name|unsigned
name|long
modifier|*
name|_Index
parameter_list|,
name|unsigned
name|long
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_BitScanReverse
parameter_list|(
name|unsigned
name|long
modifier|*
name|_Index
parameter_list|,
name|unsigned
name|long
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_bittest
parameter_list|(
name|long
specifier|const
modifier|*
parameter_list|,
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_bittestandcomplement
parameter_list|(
name|long
modifier|*
parameter_list|,
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_bittestandreset
parameter_list|(
name|long
modifier|*
parameter_list|,
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_bittestandset
parameter_list|(
name|long
modifier|*
parameter_list|,
name|long
parameter_list|)
function_decl|;
name|unsigned
name|__int64
name|__cdecl
name|_byteswap_uint64
parameter_list|(
name|unsigned
name|__int64
parameter_list|)
function_decl|;
name|unsigned
name|long
name|__cdecl
name|_byteswap_ulong
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|unsigned
name|short
name|__cdecl
name|_byteswap_ushort
parameter_list|(
name|unsigned
name|short
parameter_list|)
function_decl|;
name|void
name|__cdecl
name|_disable
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|__cdecl
name|_enable
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|long
name|_InterlockedAddLargeStatistic
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|long
name|_Value
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|long
name|_InterlockedAnd
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|short
name|_InterlockedAnd16
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|char
name|_InterlockedAnd8
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
function_decl|;
name|unsigned
name|char
name|_interlockedbittestandreset
parameter_list|(
name|long
specifier|volatile
modifier|*
parameter_list|,
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_interlockedbittestandset
parameter_list|(
name|long
specifier|volatile
modifier|*
parameter_list|,
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|long
name|__cdecl
name|_InterlockedCompareExchange
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|long
name|_Exchange
parameter_list|,
name|long
name|_Comparand
parameter_list|)
function_decl|;
name|long
name|_InterlockedCompareExchange_HLEAcquire
parameter_list|(
name|long
specifier|volatile
modifier|*
parameter_list|,
name|long
parameter_list|,
name|long
parameter_list|)
function_decl|;
name|long
name|_InterlockedCompareExchange_HLERelease
parameter_list|(
name|long
specifier|volatile
modifier|*
parameter_list|,
name|long
parameter_list|,
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|short
name|_InterlockedCompareExchange16
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|short
name|_Exchange
parameter_list|,
name|short
name|_Comparand
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|__int64
name|_InterlockedCompareExchange64
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|__int64
name|_Exchange
parameter_list|,
name|__int64
name|_Comparand
parameter_list|)
function_decl|;
name|__int64
name|_InterlockedcompareExchange64_HLEAcquire
parameter_list|(
name|__int64
specifier|volatile
modifier|*
parameter_list|,
name|__int64
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
name|__int64
name|_InterlockedCompareExchange64_HLERelease
parameter_list|(
name|__int64
specifier|volatile
modifier|*
parameter_list|,
name|__int64
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|char
name|_InterlockedCompareExchange8
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|char
name|_Exchange
parameter_list|,
name|char
name|_Comparand
parameter_list|)
function_decl|;
name|void
modifier|*
name|_InterlockedCompareExchangePointer_HLEAcquire
parameter_list|(
name|void
modifier|*
specifier|volatile
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
name|_InterlockedCompareExchangePointer_HLERelease
parameter_list|(
name|void
modifier|*
specifier|volatile
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|long
name|__cdecl
name|_InterlockedDecrement
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Addend
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|short
name|_InterlockedDecrement16
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Addend
parameter_list|)
function_decl|;
name|long
name|_InterlockedExchange
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|long
name|_Value
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|short
name|_InterlockedExchange16
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|short
name|_Value
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|char
name|_InterlockedExchange8
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|char
name|_Value
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|long
name|__cdecl
name|_InterlockedExchangeAdd
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|long
name|_Value
parameter_list|)
function_decl|;
name|long
name|_InterlockedExchangeAdd_HLEAcquire
parameter_list|(
name|long
specifier|volatile
modifier|*
parameter_list|,
name|long
parameter_list|)
function_decl|;
name|long
name|_InterlockedExchangeAdd_HLERelease
parameter_list|(
name|long
specifier|volatile
modifier|*
parameter_list|,
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|short
name|_InterlockedExchangeAdd16
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|short
name|_Value
parameter_list|)
function_decl|;
name|__int64
name|_InterlockedExchangeAdd64_HLEAcquire
parameter_list|(
name|__int64
specifier|volatile
modifier|*
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
name|__int64
name|_InterlockedExchangeAdd64_HLERelease
parameter_list|(
name|__int64
specifier|volatile
modifier|*
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|char
name|_InterlockedExchangeAdd8
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|char
name|_Value
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|long
name|__cdecl
name|_InterlockedIncrement
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Addend
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|short
name|_InterlockedIncrement16
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Addend
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|long
name|_InterlockedOr
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|short
name|_InterlockedOr16
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|char
name|_InterlockedOr8
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|long
name|_InterlockedXor
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|short
name|_InterlockedXor16
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|char
name|_InterlockedXor8
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
function_decl|;
name|void
name|__cdecl
name|_invpcid
parameter_list|(
name|unsigned
name|int
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|long
name|__cdecl
name|_lrotl
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|long
name|__cdecl
name|_lrotr
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__attribute__
argument_list|(
operator|(
name|__deprecated__
argument_list|(
literal|"use other intrinsics or C++11 atomics instead"
argument_list|)
operator|)
argument_list|)
name|_ReadBarrier
argument_list|(
name|void
argument_list|)
decl_stmt|;
specifier|static
name|__inline__
name|void
name|__attribute__
argument_list|(
operator|(
name|__deprecated__
argument_list|(
literal|"use other intrinsics or C++11 atomics instead"
argument_list|)
operator|)
argument_list|)
name|_ReadWriteBarrier
argument_list|(
name|void
argument_list|)
decl_stmt|;
specifier|static
name|__inline__
name|void
modifier|*
name|_ReturnAddress
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|unsigned
name|int
name|_rorx_u32
parameter_list|(
name|unsigned
name|int
parameter_list|,
specifier|const
name|unsigned
name|int
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|int
name|__cdecl
name|_rotl
parameter_list|(
name|unsigned
name|int
name|_Value
parameter_list|,
name|int
name|_Shift
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|short
name|_rotl16
parameter_list|(
name|unsigned
name|short
name|_Value
parameter_list|,
name|unsigned
name|char
name|_Shift
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|__int64
name|__cdecl
name|_rotl64
parameter_list|(
name|unsigned
name|__int64
name|_Value
parameter_list|,
name|int
name|_Shift
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_rotl8
parameter_list|(
name|unsigned
name|char
name|_Value
parameter_list|,
name|unsigned
name|char
name|_Shift
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|int
name|__cdecl
name|_rotr
parameter_list|(
name|unsigned
name|int
name|_Value
parameter_list|,
name|int
name|_Shift
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|short
name|_rotr16
parameter_list|(
name|unsigned
name|short
name|_Value
parameter_list|,
name|unsigned
name|char
name|_Shift
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|__int64
name|__cdecl
name|_rotr64
parameter_list|(
name|unsigned
name|__int64
name|_Value
parameter_list|,
name|int
name|_Shift
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_rotr8
parameter_list|(
name|unsigned
name|char
name|_Value
parameter_list|,
name|unsigned
name|char
name|_Shift
parameter_list|)
function_decl|;
name|int
name|_sarx_i32
parameter_list|(
name|int
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
if|#
directive|if
name|__STDC_HOSTED__
name|int
name|__cdecl
name|_setjmp
parameter_list|(
name|jmp_buf
parameter_list|)
function_decl|;
endif|#
directive|endif
name|unsigned
name|int
name|_shlx_u32
parameter_list|(
name|unsigned
name|int
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
name|unsigned
name|int
name|_shrx_u32
parameter_list|(
name|unsigned
name|int
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
name|void
name|_Store_HLERelease
parameter_list|(
name|long
specifier|volatile
modifier|*
parameter_list|,
name|long
parameter_list|)
function_decl|;
name|void
name|_Store64_HLERelease
parameter_list|(
name|__int64
specifier|volatile
modifier|*
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
name|void
name|_StorePointer_HLERelease
parameter_list|(
name|void
modifier|*
specifier|volatile
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__attribute__
argument_list|(
operator|(
name|__deprecated__
argument_list|(
literal|"use other intrinsics or C++11 atomics instead"
argument_list|)
operator|)
argument_list|)
name|_WriteBarrier
argument_list|(
name|void
argument_list|)
decl_stmt|;
name|unsigned
name|__int32
name|xbegin
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|_xend
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|static
name|__inline__
define|#
directive|define
name|_XCR_XFEATURE_ENABLED_MASK
value|0
name|unsigned
name|__int64
name|__cdecl
name|_xgetbv
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
name|void
name|__cdecl
name|_xsetbv
parameter_list|(
name|unsigned
name|int
parameter_list|,
name|unsigned
name|__int64
parameter_list|)
function_decl|;
comment|/* These additional intrinsics are turned on in x64/amd64/x86_64 mode. */
ifdef|#
directive|ifdef
name|__x86_64__
name|void
name|__addgsbyte
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|char
parameter_list|)
function_decl|;
name|void
name|__addgsdword
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__addgsqword
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|__int64
parameter_list|)
function_decl|;
name|void
name|__addgsword
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|short
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__faststorefence
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|__incgsbyte
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__incgsdword
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__incgsqword
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__incgsword
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|unsigned
name|char
name|__lwpins64
parameter_list|(
name|unsigned
name|__int64
parameter_list|,
name|unsigned
name|int
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
name|void
name|__lwpval64
parameter_list|(
name|unsigned
name|__int64
parameter_list|,
name|unsigned
name|int
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
name|unsigned
name|__int64
name|__lzcnt64
parameter_list|(
name|unsigned
name|__int64
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__movsq
parameter_list|(
name|unsigned
name|long
name|long
modifier|*
parameter_list|,
name|unsigned
name|long
name|long
specifier|const
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|__int64
name|__popcnt64
parameter_list|(
name|unsigned
name|__int64
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|__readgsbyte
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|long
name|__readgsdword
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|__int64
name|__readgsqword
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|unsigned
name|short
name|__readgsword
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
name|unsigned
name|__int64
name|__shiftleft128
parameter_list|(
name|unsigned
name|__int64
name|_LowPart
parameter_list|,
name|unsigned
name|__int64
name|_HighPart
parameter_list|,
name|unsigned
name|char
name|_Shift
parameter_list|)
function_decl|;
name|unsigned
name|__int64
name|__shiftright128
parameter_list|(
name|unsigned
name|__int64
name|_LowPart
parameter_list|,
name|unsigned
name|__int64
name|_HighPart
parameter_list|,
name|unsigned
name|char
name|_Shift
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|void
name|__stosq
parameter_list|(
name|unsigned
name|__int64
modifier|*
parameter_list|,
name|unsigned
name|__int64
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
name|unsigned
name|char
name|__vmx_on
parameter_list|(
name|unsigned
name|__int64
modifier|*
parameter_list|)
function_decl|;
name|unsigned
name|char
name|__vmx_vmclear
parameter_list|(
name|unsigned
name|__int64
modifier|*
parameter_list|)
function_decl|;
name|unsigned
name|char
name|__vmx_vmlaunch
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|unsigned
name|char
name|__vmx_vmptrld
parameter_list|(
name|unsigned
name|__int64
modifier|*
parameter_list|)
function_decl|;
name|unsigned
name|char
name|__vmx_vmread
parameter_list|(
name|size_t
parameter_list|,
name|size_t
modifier|*
parameter_list|)
function_decl|;
name|unsigned
name|char
name|__vmx_vmresume
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|unsigned
name|char
name|__vmx_vmwrite
parameter_list|(
name|size_t
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
name|void
name|__writegsbyte
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|char
parameter_list|)
function_decl|;
name|void
name|__writegsdword
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
name|void
name|__writegsqword
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|__int64
parameter_list|)
function_decl|;
name|void
name|__writegsword
parameter_list|(
name|unsigned
name|long
parameter_list|,
name|unsigned
name|short
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_BitScanForward64
parameter_list|(
name|unsigned
name|long
modifier|*
name|_Index
parameter_list|,
name|unsigned
name|__int64
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_BitScanReverse64
parameter_list|(
name|unsigned
name|long
modifier|*
name|_Index
parameter_list|,
name|unsigned
name|__int64
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_bittest64
parameter_list|(
name|__int64
specifier|const
modifier|*
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_bittestandcomplement64
parameter_list|(
name|__int64
modifier|*
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_bittestandreset64
parameter_list|(
name|__int64
modifier|*
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_bittestandset64
parameter_list|(
name|__int64
modifier|*
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
name|unsigned
name|__int64
name|__cdecl
name|_byteswap_uint64
parameter_list|(
name|unsigned
name|__int64
parameter_list|)
function_decl|;
name|long
name|_InterlockedAnd_np
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
function_decl|;
name|short
name|_InterlockedAnd16_np
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
function_decl|;
name|__int64
name|_InterlockedAnd64_np
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
function_decl|;
name|char
name|_InterlockedAnd8_np
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
function_decl|;
name|unsigned
name|char
name|_interlockedbittestandreset64
parameter_list|(
name|__int64
specifier|volatile
modifier|*
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|char
name|_interlockedbittestandset64
parameter_list|(
name|__int64
specifier|volatile
modifier|*
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
name|long
name|_InterlockedCompareExchange_np
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|long
name|_Exchange
parameter_list|,
name|long
name|_Comparand
parameter_list|)
function_decl|;
name|unsigned
name|char
name|_InterlockedCompareExchange128
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|__int64
name|_ExchangeHigh
parameter_list|,
name|__int64
name|_ExchangeLow
parameter_list|,
name|__int64
modifier|*
name|_CompareandResult
parameter_list|)
function_decl|;
name|unsigned
name|char
name|_InterlockedCompareExchange128_np
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|__int64
name|_ExchangeHigh
parameter_list|,
name|__int64
name|_ExchangeLow
parameter_list|,
name|__int64
modifier|*
name|_ComparandResult
parameter_list|)
function_decl|;
name|short
name|_InterlockedCompareExchange16_np
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|short
name|_Exchange
parameter_list|,
name|short
name|_Comparand
parameter_list|)
function_decl|;
name|__int64
name|_InterlockedCompareExchange64_HLEAcquire
parameter_list|(
name|__int64
specifier|volatile
modifier|*
parameter_list|,
name|__int64
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
name|__int64
name|_InterlockedCompareExchange64_HLERelease
parameter_list|(
name|__int64
specifier|volatile
modifier|*
parameter_list|,
name|__int64
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
name|__int64
name|_InterlockedCompareExchange64_np
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|__int64
name|_Exchange
parameter_list|,
name|__int64
name|_Comparand
parameter_list|)
function_decl|;
name|void
modifier|*
name|_InterlockedCompareExchangePointer
parameter_list|(
name|void
modifier|*
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|void
modifier|*
name|_Exchange
parameter_list|,
name|void
modifier|*
name|_Comparand
parameter_list|)
function_decl|;
name|void
modifier|*
name|_InterlockedCompareExchangePointer_np
parameter_list|(
name|void
modifier|*
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|void
modifier|*
name|_Exchange
parameter_list|,
name|void
modifier|*
name|_Comparand
parameter_list|)
function_decl|;
name|void
modifier|*
name|_InterlockedExchangePointer
parameter_list|(
name|void
modifier|*
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|void
modifier|*
name|_Value
parameter_list|)
function_decl|;
name|long
name|_InterlockedOr_np
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
function_decl|;
name|short
name|_InterlockedOr16_np
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
function_decl|;
name|__int64
name|_InterlockedOr64_np
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
function_decl|;
name|char
name|_InterlockedOr8_np
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
function_decl|;
name|long
name|_InterlockedXor_np
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
function_decl|;
name|short
name|_InterlockedXor16_np
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
function_decl|;
name|__int64
name|_InterlockedXor64_np
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
function_decl|;
name|char
name|_InterlockedXor8_np
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
function_decl|;
name|unsigned
name|__int64
name|_rorx_u64
parameter_list|(
name|unsigned
name|__int64
parameter_list|,
specifier|const
name|unsigned
name|int
parameter_list|)
function_decl|;
name|__int64
name|_sarx_i64
parameter_list|(
name|__int64
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
if|#
directive|if
name|__STDC_HOSTED__
name|int
name|__cdecl
name|_setjmpex
parameter_list|(
name|jmp_buf
parameter_list|)
function_decl|;
endif|#
directive|endif
name|unsigned
name|__int64
name|_shlx_u64
parameter_list|(
name|unsigned
name|__int64
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
name|unsigned
name|__int64
name|_shrx_u64
parameter_list|(
name|unsigned
name|__int64
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|__int64
name|__mulh
parameter_list|(
name|__int64
parameter_list|,
name|__int64
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|__int64
name|__umulh
parameter_list|(
name|unsigned
name|__int64
parameter_list|,
name|unsigned
name|__int64
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|__int64
name|_mul128
parameter_list|(
name|__int64
parameter_list|,
name|__int64
parameter_list|,
name|__int64
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|unsigned
name|__int64
name|_umul128
parameter_list|(
name|unsigned
name|__int64
parameter_list|,
name|unsigned
name|__int64
parameter_list|,
name|unsigned
name|__int64
modifier|*
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* __x86_64__ */
if|#
directive|if
name|defined
argument_list|(
name|__x86_64__
argument_list|)
operator|||
name|defined
argument_list|(
name|__arm__
argument_list|)
specifier|static
name|__inline__
name|__int64
name|_InterlockedDecrement64
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Addend
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|__int64
name|_InterlockedExchange64
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|__int64
name|_Value
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|__int64
name|_InterlockedExchangeAdd64
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|__int64
name|_Value
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|__int64
name|_InterlockedExchangeSub64
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Subend
parameter_list|,
name|__int64
name|_Value
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|__int64
name|_InterlockedIncrement64
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Addend
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|__int64
name|_InterlockedOr64
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|__int64
name|_InterlockedXor64
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
function_decl|;
specifier|static
name|__inline__
name|__int64
name|_InterlockedAnd64
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/*----------------------------------------------------------------------------*\ |* Bit Counting and Testing \*----------------------------------------------------------------------------*/
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_bittest
parameter_list|(
name|long
specifier|const
modifier|*
name|_BitBase
parameter_list|,
name|long
name|_BitPos
parameter_list|)
block|{
return|return
operator|(
operator|*
name|_BitBase
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_bittestandcomplement
parameter_list|(
name|long
modifier|*
name|_BitBase
parameter_list|,
name|long
name|_BitPos
parameter_list|)
block|{
name|unsigned
name|char
name|_Res
init|=
operator|(
operator|*
name|_BitBase
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
decl_stmt|;
operator|*
name|_BitBase
operator|=
operator|*
name|_BitBase
operator|^
operator|(
literal|1
operator|<<
name|_BitPos
operator|)
expr_stmt|;
return|return
name|_Res
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_bittestandreset
parameter_list|(
name|long
modifier|*
name|_BitBase
parameter_list|,
name|long
name|_BitPos
parameter_list|)
block|{
name|unsigned
name|char
name|_Res
init|=
operator|(
operator|*
name|_BitBase
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
decl_stmt|;
operator|*
name|_BitBase
operator|=
operator|*
name|_BitBase
operator|&
operator|~
operator|(
literal|1
operator|<<
name|_BitPos
operator|)
expr_stmt|;
return|return
name|_Res
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_bittestandset
parameter_list|(
name|long
modifier|*
name|_BitBase
parameter_list|,
name|long
name|_BitPos
parameter_list|)
block|{
name|unsigned
name|char
name|_Res
init|=
operator|(
operator|*
name|_BitBase
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
decl_stmt|;
operator|*
name|_BitBase
operator|=
operator|*
name|_BitBase
operator||
operator|(
literal|1
operator|<<
name|_BitPos
operator|)
expr_stmt|;
return|return
name|_Res
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_interlockedbittestandset
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_BitBase
parameter_list|,
name|long
name|_BitPos
parameter_list|)
block|{
name|long
name|_PrevVal
init|=
name|__atomic_fetch_or
argument_list|(
name|_BitBase
argument_list|,
literal|1l
operator|<<
name|_BitPos
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|)
decl_stmt|;
return|return
operator|(
name|_PrevVal
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
return|;
block|}
if|#
directive|if
name|defined
argument_list|(
name|__arm__
argument_list|)
operator|||
name|defined
argument_list|(
name|__aarch64__
argument_list|)
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_interlockedbittestandset_acq
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_BitBase
parameter_list|,
name|long
name|_BitPos
parameter_list|)
block|{
name|long
name|_PrevVal
init|=
name|__atomic_fetch_or
argument_list|(
name|_BitBase
argument_list|,
literal|1l
operator|<<
name|_BitPos
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
decl_stmt|;
return|return
operator|(
name|_PrevVal
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_interlockedbittestandset_nf
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_BitBase
parameter_list|,
name|long
name|_BitPos
parameter_list|)
block|{
name|long
name|_PrevVal
init|=
name|__atomic_fetch_or
argument_list|(
name|_BitBase
argument_list|,
literal|1l
operator|<<
name|_BitPos
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
decl_stmt|;
return|return
operator|(
name|_PrevVal
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_interlockedbittestandset_rel
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_BitBase
parameter_list|,
name|long
name|_BitPos
parameter_list|)
block|{
name|long
name|_PrevVal
init|=
name|__atomic_fetch_or
argument_list|(
name|_BitBase
argument_list|,
literal|1l
operator|<<
name|_BitPos
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
decl_stmt|;
return|return
operator|(
name|_PrevVal
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
return|;
block|}
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__x86_64__
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_bittest64
parameter_list|(
name|__int64
specifier|const
modifier|*
name|_BitBase
parameter_list|,
name|__int64
name|_BitPos
parameter_list|)
block|{
return|return
operator|(
operator|*
name|_BitBase
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_bittestandcomplement64
parameter_list|(
name|__int64
modifier|*
name|_BitBase
parameter_list|,
name|__int64
name|_BitPos
parameter_list|)
block|{
name|unsigned
name|char
name|_Res
init|=
operator|(
operator|*
name|_BitBase
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
decl_stmt|;
operator|*
name|_BitBase
operator|=
operator|*
name|_BitBase
operator|^
operator|(
literal|1ll
operator|<<
name|_BitPos
operator|)
expr_stmt|;
return|return
name|_Res
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_bittestandreset64
parameter_list|(
name|__int64
modifier|*
name|_BitBase
parameter_list|,
name|__int64
name|_BitPos
parameter_list|)
block|{
name|unsigned
name|char
name|_Res
init|=
operator|(
operator|*
name|_BitBase
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
decl_stmt|;
operator|*
name|_BitBase
operator|=
operator|*
name|_BitBase
operator|&
operator|~
operator|(
literal|1ll
operator|<<
name|_BitPos
operator|)
expr_stmt|;
return|return
name|_Res
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_bittestandset64
parameter_list|(
name|__int64
modifier|*
name|_BitBase
parameter_list|,
name|__int64
name|_BitPos
parameter_list|)
block|{
name|unsigned
name|char
name|_Res
init|=
operator|(
operator|*
name|_BitBase
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
decl_stmt|;
operator|*
name|_BitBase
operator|=
operator|*
name|_BitBase
operator||
operator|(
literal|1ll
operator|<<
name|_BitPos
operator|)
expr_stmt|;
return|return
name|_Res
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|_interlockedbittestandset64
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_BitBase
parameter_list|,
name|__int64
name|_BitPos
parameter_list|)
block|{
name|long
name|long
name|_PrevVal
init|=
name|__atomic_fetch_or
argument_list|(
name|_BitBase
argument_list|,
literal|1ll
operator|<<
name|_BitPos
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|)
decl_stmt|;
return|return
operator|(
name|_PrevVal
operator|>>
name|_BitPos
operator|)
operator|&
literal|1
return|;
block|}
endif|#
directive|endif
comment|/*----------------------------------------------------------------------------*\ |* Interlocked Exchange Add \*----------------------------------------------------------------------------*/
if|#
directive|if
name|defined
argument_list|(
name|__arm__
argument_list|)
operator|||
name|defined
argument_list|(
name|__aarch64__
argument_list|)
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchangeAdd8_acq
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|char
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_fetch_add
argument_list|(
name|_Addend
argument_list|,
name|_Value
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchangeAdd8_nf
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|char
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_fetch_add
argument_list|(
name|_Addend
argument_list|,
name|_Value
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchangeAdd8_rel
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|char
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_fetch_add
argument_list|(
name|_Addend
argument_list|,
name|_Value
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchangeAdd16_acq
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|short
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_fetch_add
argument_list|(
name|_Addend
argument_list|,
name|_Value
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchangeAdd16_nf
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|short
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_fetch_add
argument_list|(
name|_Addend
argument_list|,
name|_Value
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchangeAdd16_rel
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|short
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_fetch_add
argument_list|(
name|_Addend
argument_list|,
name|_Value
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchangeAdd_acq
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|long
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_fetch_add
argument_list|(
name|_Addend
argument_list|,
name|_Value
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchangeAdd_nf
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|long
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_fetch_add
argument_list|(
name|_Addend
argument_list|,
name|_Value
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchangeAdd_rel
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|long
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_fetch_add
argument_list|(
name|_Addend
argument_list|,
name|_Value
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchangeAdd64_acq
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|__int64
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_fetch_add
argument_list|(
name|_Addend
argument_list|,
name|_Value
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchangeAdd64_nf
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|__int64
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_fetch_add
argument_list|(
name|_Addend
argument_list|,
name|_Value
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchangeAdd64_rel
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Addend
parameter_list|,
name|__int64
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_fetch_add
argument_list|(
name|_Addend
argument_list|,
name|_Value
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
endif|#
directive|endif
comment|/*----------------------------------------------------------------------------*\ |* Interlocked Increment \*----------------------------------------------------------------------------*/
if|#
directive|if
name|defined
argument_list|(
name|__arm__
argument_list|)
operator|||
name|defined
argument_list|(
name|__aarch64__
argument_list|)
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedIncrement16_acq
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_add_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedIncrement16_nf
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_add_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedIncrement16_rel
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_add_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedIncrement_acq
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_add_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedIncrement_nf
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_add_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedIncrement_rel
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_add_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedIncrement64_acq
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_add_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedIncrement64_nf
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_add_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedIncrement64_rel
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_add_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
endif|#
directive|endif
comment|/*----------------------------------------------------------------------------*\ |* Interlocked Decrement \*----------------------------------------------------------------------------*/
if|#
directive|if
name|defined
argument_list|(
name|__arm__
argument_list|)
operator|||
name|defined
argument_list|(
name|__aarch64__
argument_list|)
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedDecrement16_acq
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_sub_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedDecrement16_nf
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_sub_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedDecrement16_rel
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_sub_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedDecrement_acq
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_sub_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedDecrement_nf
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_sub_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedDecrement_rel
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_sub_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedDecrement64_acq
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_sub_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedDecrement64_nf
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_sub_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedDecrement64_rel
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|)
block|{
return|return
name|__atomic_sub_fetch
argument_list|(
name|_Value
argument_list|,
literal|1
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
endif|#
directive|endif
comment|/*----------------------------------------------------------------------------*\ |* Interlocked And \*----------------------------------------------------------------------------*/
if|#
directive|if
name|defined
argument_list|(
name|__arm__
argument_list|)
operator|||
name|defined
argument_list|(
name|__aarch64__
argument_list|)
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedAnd8_acq
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_and
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedAnd8_nf
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_and
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedAnd8_rel
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_and
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedAnd16_acq
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_and
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedAnd16_nf
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_and
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedAnd16_rel
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_and
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedAnd_acq
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_and
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedAnd_nf
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_and
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedAnd_rel
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_and
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedAnd64_acq
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_and
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedAnd64_nf
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_and
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedAnd64_rel
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_and
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
endif|#
directive|endif
comment|/*----------------------------------------------------------------------------*\ |* Interlocked Or \*----------------------------------------------------------------------------*/
if|#
directive|if
name|defined
argument_list|(
name|__arm__
argument_list|)
operator|||
name|defined
argument_list|(
name|__aarch64__
argument_list|)
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedOr8_acq
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_or
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedOr8_nf
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_or
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedOr8_rel
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_or
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedOr16_acq
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_or
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedOr16_nf
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_or
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedOr16_rel
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_or
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedOr_acq
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_or
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedOr_nf
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_or
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedOr_rel
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_or
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedOr64_acq
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_or
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedOr64_nf
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_or
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedOr64_rel
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_or
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
endif|#
directive|endif
comment|/*----------------------------------------------------------------------------*\ |* Interlocked Xor \*----------------------------------------------------------------------------*/
if|#
directive|if
name|defined
argument_list|(
name|__arm__
argument_list|)
operator|||
name|defined
argument_list|(
name|__aarch64__
argument_list|)
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedXor8_acq
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_xor
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedXor8_nf
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_xor
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedXor8_rel
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|char
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_xor
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedXor16_acq
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_xor
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedXor16_nf
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_xor
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedXor16_rel
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|short
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_xor
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedXor_acq
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_xor
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedXor_nf
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_xor
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedXor_rel
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|long
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_xor
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedXor64_acq
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_xor
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedXor64_nf
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_xor
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedXor64_rel
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Value
parameter_list|,
name|__int64
name|_Mask
parameter_list|)
block|{
return|return
name|__atomic_fetch_xor
argument_list|(
name|_Value
argument_list|,
name|_Mask
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
return|;
block|}
endif|#
directive|endif
comment|/*----------------------------------------------------------------------------*\ |* Interlocked Exchange \*----------------------------------------------------------------------------*/
if|#
directive|if
name|defined
argument_list|(
name|__arm__
argument_list|)
operator|||
name|defined
argument_list|(
name|__aarch64__
argument_list|)
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchange8_acq
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|char
name|_Value
parameter_list|)
block|{
name|__atomic_exchange
argument_list|(
name|_Target
argument_list|,
operator|&
name|_Value
argument_list|,
operator|&
name|_Value
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
expr_stmt|;
return|return
name|_Value
return|;
block|}
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchange8_nf
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|char
name|_Value
parameter_list|)
block|{
name|__atomic_exchange
argument_list|(
name|_Target
argument_list|,
operator|&
name|_Value
argument_list|,
operator|&
name|_Value
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
expr_stmt|;
return|return
name|_Value
return|;
block|}
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchange8_rel
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|char
name|_Value
parameter_list|)
block|{
name|__atomic_exchange
argument_list|(
name|_Target
argument_list|,
operator|&
name|_Value
argument_list|,
operator|&
name|_Value
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
expr_stmt|;
return|return
name|_Value
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchange16_acq
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|short
name|_Value
parameter_list|)
block|{
name|__atomic_exchange
argument_list|(
name|_Target
argument_list|,
operator|&
name|_Value
argument_list|,
operator|&
name|_Value
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
expr_stmt|;
return|return
name|_Value
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchange16_nf
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|short
name|_Value
parameter_list|)
block|{
name|__atomic_exchange
argument_list|(
name|_Target
argument_list|,
operator|&
name|_Value
argument_list|,
operator|&
name|_Value
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
expr_stmt|;
return|return
name|_Value
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchange16_rel
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|short
name|_Value
parameter_list|)
block|{
name|__atomic_exchange
argument_list|(
name|_Target
argument_list|,
operator|&
name|_Value
argument_list|,
operator|&
name|_Value
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
expr_stmt|;
return|return
name|_Value
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchange_acq
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|long
name|_Value
parameter_list|)
block|{
name|__atomic_exchange
argument_list|(
name|_Target
argument_list|,
operator|&
name|_Value
argument_list|,
operator|&
name|_Value
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
expr_stmt|;
return|return
name|_Value
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchange_nf
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|long
name|_Value
parameter_list|)
block|{
name|__atomic_exchange
argument_list|(
name|_Target
argument_list|,
operator|&
name|_Value
argument_list|,
operator|&
name|_Value
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
expr_stmt|;
return|return
name|_Value
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchange_rel
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|long
name|_Value
parameter_list|)
block|{
name|__atomic_exchange
argument_list|(
name|_Target
argument_list|,
operator|&
name|_Value
argument_list|,
operator|&
name|_Value
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
expr_stmt|;
return|return
name|_Value
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchange64_acq
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|__int64
name|_Value
parameter_list|)
block|{
name|__atomic_exchange
argument_list|(
name|_Target
argument_list|,
operator|&
name|_Value
argument_list|,
operator|&
name|_Value
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
expr_stmt|;
return|return
name|_Value
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchange64_nf
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|__int64
name|_Value
parameter_list|)
block|{
name|__atomic_exchange
argument_list|(
name|_Target
argument_list|,
operator|&
name|_Value
argument_list|,
operator|&
name|_Value
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
expr_stmt|;
return|return
name|_Value
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedExchange64_rel
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Target
parameter_list|,
name|__int64
name|_Value
parameter_list|)
block|{
name|__atomic_exchange
argument_list|(
name|_Target
argument_list|,
operator|&
name|_Value
argument_list|,
operator|&
name|_Value
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
expr_stmt|;
return|return
name|_Value
return|;
block|}
endif|#
directive|endif
comment|/*----------------------------------------------------------------------------*\ |* Interlocked Compare Exchange \*----------------------------------------------------------------------------*/
if|#
directive|if
name|defined
argument_list|(
name|__arm__
argument_list|)
operator|||
name|defined
argument_list|(
name|__aarch64__
argument_list|)
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedCompareExchange8_acq
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|char
name|_Exchange
parameter_list|,
name|char
name|_Comparand
parameter_list|)
block|{
name|__atomic_compare_exchange
argument_list|(
name|_Destination
argument_list|,
operator|&
name|_Comparand
argument_list|,
operator|&
name|_Exchange
argument_list|,
literal|0
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
expr_stmt|;
return|return
name|_Comparand
return|;
block|}
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedCompareExchange8_nf
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|char
name|_Exchange
parameter_list|,
name|char
name|_Comparand
parameter_list|)
block|{
name|__atomic_compare_exchange
argument_list|(
name|_Destination
argument_list|,
operator|&
name|_Comparand
argument_list|,
operator|&
name|_Exchange
argument_list|,
literal|0
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
expr_stmt|;
return|return
name|_Comparand
return|;
block|}
specifier|static
name|__inline__
name|char
name|__DEFAULT_FN_ATTRS
name|_InterlockedCompareExchange8_rel
parameter_list|(
name|char
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|char
name|_Exchange
parameter_list|,
name|char
name|_Comparand
parameter_list|)
block|{
name|__atomic_compare_exchange
argument_list|(
name|_Destination
argument_list|,
operator|&
name|_Comparand
argument_list|,
operator|&
name|_Exchange
argument_list|,
literal|0
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
expr_stmt|;
return|return
name|_Comparand
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedCompareExchange16_acq
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|short
name|_Exchange
parameter_list|,
name|short
name|_Comparand
parameter_list|)
block|{
name|__atomic_compare_exchange
argument_list|(
name|_Destination
argument_list|,
operator|&
name|_Comparand
argument_list|,
operator|&
name|_Exchange
argument_list|,
literal|0
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
expr_stmt|;
return|return
name|_Comparand
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedCompareExchange16_nf
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|short
name|_Exchange
parameter_list|,
name|short
name|_Comparand
parameter_list|)
block|{
name|__atomic_compare_exchange
argument_list|(
name|_Destination
argument_list|,
operator|&
name|_Comparand
argument_list|,
operator|&
name|_Exchange
argument_list|,
literal|0
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
expr_stmt|;
return|return
name|_Comparand
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedCompareExchange16_rel
parameter_list|(
name|short
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|short
name|_Exchange
parameter_list|,
name|short
name|_Comparand
parameter_list|)
block|{
name|__atomic_compare_exchange
argument_list|(
name|_Destination
argument_list|,
operator|&
name|_Comparand
argument_list|,
operator|&
name|_Exchange
argument_list|,
literal|0
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
expr_stmt|;
return|return
name|_Comparand
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedCompareExchange_acq
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|long
name|_Exchange
parameter_list|,
name|long
name|_Comparand
parameter_list|)
block|{
name|__atomic_compare_exchange
argument_list|(
name|_Destination
argument_list|,
operator|&
name|_Comparand
argument_list|,
operator|&
name|_Exchange
argument_list|,
literal|0
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
expr_stmt|;
return|return
name|_Comparand
return|;
block|}
specifier|static
name|__inline__
name|long
name|__DEFAULT_FN_ATTRS
name|_InterlockedCompareExchange_nf
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|long
name|_Exchange
parameter_list|,
name|long
name|_Comparand
parameter_list|)
block|{
name|__atomic_compare_exchange
argument_list|(
name|_Destination
argument_list|,
operator|&
name|_Comparand
argument_list|,
operator|&
name|_Exchange
argument_list|,
literal|0
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
expr_stmt|;
return|return
name|_Comparand
return|;
block|}
specifier|static
name|__inline__
name|short
name|__DEFAULT_FN_ATTRS
name|_InterlockedCompareExchange_rel
parameter_list|(
name|long
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|long
name|_Exchange
parameter_list|,
name|long
name|_Comparand
parameter_list|)
block|{
name|__atomic_compare_exchange
argument_list|(
name|_Destination
argument_list|,
operator|&
name|_Comparand
argument_list|,
operator|&
name|_Exchange
argument_list|,
literal|0
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
expr_stmt|;
return|return
name|_Comparand
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedCompareExchange64_acq
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|__int64
name|_Exchange
parameter_list|,
name|__int64
name|_Comparand
parameter_list|)
block|{
name|__atomic_compare_exchange
argument_list|(
name|_Destination
argument_list|,
operator|&
name|_Comparand
argument_list|,
operator|&
name|_Exchange
argument_list|,
literal|0
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|,
name|__ATOMIC_ACQUIRE
argument_list|)
expr_stmt|;
return|return
name|_Comparand
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedCompareExchange64_nf
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|__int64
name|_Exchange
parameter_list|,
name|__int64
name|_Comparand
parameter_list|)
block|{
name|__atomic_compare_exchange
argument_list|(
name|_Destination
argument_list|,
operator|&
name|_Comparand
argument_list|,
operator|&
name|_Exchange
argument_list|,
literal|0
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|,
name|__ATOMIC_RELAXED
argument_list|)
expr_stmt|;
return|return
name|_Comparand
return|;
block|}
specifier|static
name|__inline__
name|__int64
name|__DEFAULT_FN_ATTRS
name|_InterlockedCompareExchange64_rel
parameter_list|(
name|__int64
specifier|volatile
modifier|*
name|_Destination
parameter_list|,
name|__int64
name|_Exchange
parameter_list|,
name|__int64
name|_Comparand
parameter_list|)
block|{
name|__atomic_compare_exchange
argument_list|(
name|_Destination
argument_list|,
operator|&
name|_Comparand
argument_list|,
operator|&
name|_Exchange
argument_list|,
literal|0
argument_list|,
name|__ATOMIC_SEQ_CST
argument_list|,
name|__ATOMIC_RELEASE
argument_list|)
expr_stmt|;
return|return
name|_Comparand
return|;
block|}
endif|#
directive|endif
comment|/*----------------------------------------------------------------------------*\ |* readfs, readgs |* (Pointers in address space #256 and #257 are relative to the GS and FS |* segment registers, respectively.) \*----------------------------------------------------------------------------*/
define|#
directive|define
name|__ptr_to_addr_space
parameter_list|(
name|__addr_space_nbr
parameter_list|,
name|__type
parameter_list|,
name|__offset
parameter_list|)
define|\
value|((volatile __type __attribute__((__address_space__(__addr_space_nbr)))*) \     (__offset))
ifdef|#
directive|ifdef
name|__i386__
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|__readfsbyte
parameter_list|(
name|unsigned
name|long
name|__offset
parameter_list|)
block|{
return|return
operator|*
name|__ptr_to_addr_space
argument_list|(
literal|257
argument_list|,
argument|unsigned char
argument_list|,
argument|__offset
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|short
name|__DEFAULT_FN_ATTRS
name|__readfsword
parameter_list|(
name|unsigned
name|long
name|__offset
parameter_list|)
block|{
return|return
operator|*
name|__ptr_to_addr_space
argument_list|(
literal|257
argument_list|,
argument|unsigned short
argument_list|,
argument|__offset
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|__int64
name|__DEFAULT_FN_ATTRS
name|__readfsqword
parameter_list|(
name|unsigned
name|long
name|__offset
parameter_list|)
block|{
return|return
operator|*
name|__ptr_to_addr_space
argument_list|(
literal|257
argument_list|,
argument|unsigned __int64
argument_list|,
argument|__offset
argument_list|)
return|;
block|}
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__x86_64__
specifier|static
name|__inline__
name|unsigned
name|char
name|__DEFAULT_FN_ATTRS
name|__readgsbyte
parameter_list|(
name|unsigned
name|long
name|__offset
parameter_list|)
block|{
return|return
operator|*
name|__ptr_to_addr_space
argument_list|(
literal|256
argument_list|,
argument|unsigned char
argument_list|,
argument|__offset
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|short
name|__DEFAULT_FN_ATTRS
name|__readgsword
parameter_list|(
name|unsigned
name|long
name|__offset
parameter_list|)
block|{
return|return
operator|*
name|__ptr_to_addr_space
argument_list|(
literal|256
argument_list|,
argument|unsigned short
argument_list|,
argument|__offset
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|long
name|__DEFAULT_FN_ATTRS
name|__readgsdword
parameter_list|(
name|unsigned
name|long
name|__offset
parameter_list|)
block|{
return|return
operator|*
name|__ptr_to_addr_space
argument_list|(
literal|256
argument_list|,
argument|unsigned long
argument_list|,
argument|__offset
argument_list|)
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|__int64
name|__DEFAULT_FN_ATTRS
name|__readgsqword
parameter_list|(
name|unsigned
name|long
name|__offset
parameter_list|)
block|{
return|return
operator|*
name|__ptr_to_addr_space
argument_list|(
literal|256
argument_list|,
argument|unsigned __int64
argument_list|,
argument|__offset
argument_list|)
return|;
block|}
endif|#
directive|endif
undef|#
directive|undef
name|__ptr_to_addr_space
comment|/*----------------------------------------------------------------------------*\ |* movs, stos \*----------------------------------------------------------------------------*/
if|#
directive|if
name|defined
argument_list|(
name|__i386__
argument_list|)
operator|||
name|defined
argument_list|(
name|__x86_64__
argument_list|)
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|__movsb
parameter_list|(
name|unsigned
name|char
modifier|*
name|__dst
parameter_list|,
name|unsigned
name|char
specifier|const
modifier|*
name|__src
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
asm|__asm__("rep movsb" : : "D"(__dst), "S"(__src), "c"(__n));
block|}
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|__movsd
parameter_list|(
name|unsigned
name|long
modifier|*
name|__dst
parameter_list|,
name|unsigned
name|long
specifier|const
modifier|*
name|__src
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
asm|__asm__("rep movsl" : : "D"(__dst), "S"(__src), "c"(__n));
block|}
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|__movsw
parameter_list|(
name|unsigned
name|short
modifier|*
name|__dst
parameter_list|,
name|unsigned
name|short
specifier|const
modifier|*
name|__src
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
asm|__asm__("rep movsw" : : "D"(__dst), "S"(__src), "c"(__n));
block|}
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|__stosd
parameter_list|(
name|unsigned
name|long
modifier|*
name|__dst
parameter_list|,
name|unsigned
name|long
name|__x
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
asm|__asm__("rep stosl" : : "D"(__dst), "a"(__x), "c"(__n));
block|}
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|__stosw
parameter_list|(
name|unsigned
name|short
modifier|*
name|__dst
parameter_list|,
name|unsigned
name|short
name|__x
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
asm|__asm__("rep stosw" : : "D"(__dst), "a"(__x), "c"(__n));
block|}
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__x86_64__
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|__movsq
parameter_list|(
name|unsigned
name|long
name|long
modifier|*
name|__dst
parameter_list|,
name|unsigned
name|long
name|long
specifier|const
modifier|*
name|__src
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
asm|__asm__("rep movsq" : : "D"(__dst), "S"(__src), "c"(__n));
block|}
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|__stosq
parameter_list|(
name|unsigned
name|__int64
modifier|*
name|__dst
parameter_list|,
name|unsigned
name|__int64
name|__x
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
asm|__asm__("rep stosq" : : "D"(__dst), "a"(__x), "c"(__n));
block|}
endif|#
directive|endif
comment|/*----------------------------------------------------------------------------*\ |* Misc \*----------------------------------------------------------------------------*/
if|#
directive|if
name|defined
argument_list|(
name|__i386__
argument_list|)
operator|||
name|defined
argument_list|(
name|__x86_64__
argument_list|)
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|__cpuid
parameter_list|(
name|int
name|__info
index|[
literal|4
index|]
parameter_list|,
name|int
name|__level
parameter_list|)
block|{
asm|__asm__ ("cpuid" : "=a"(__info[0]), "=b" (__info[1]), "=c"(__info[2]), "=d"(__info[3])                    : "a"(__level));
block|}
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|__cpuidex
parameter_list|(
name|int
name|__info
index|[
literal|4
index|]
parameter_list|,
name|int
name|__level
parameter_list|,
name|int
name|__ecx
parameter_list|)
block|{
asm|__asm__ ("cpuid" : "=a"(__info[0]), "=b" (__info[1]), "=c"(__info[2]), "=d"(__info[3])                    : "a"(__level), "c"(__ecx));
block|}
specifier|static
name|__inline__
name|unsigned
name|__int64
name|__cdecl
name|__DEFAULT_FN_ATTRS
name|_xgetbv
parameter_list|(
name|unsigned
name|int
name|__xcr_no
parameter_list|)
block|{
name|unsigned
name|int
name|__eax
decl_stmt|,
name|__edx
decl_stmt|;
asm|__asm__ ("xgetbv" : "=a" (__eax), "=d" (__edx) : "c" (__xcr_no));
return|return
operator|(
operator|(
name|unsigned
name|__int64
operator|)
name|__edx
operator|<<
literal|32
operator|)
operator||
name|__eax
return|;
block|}
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|__halt
parameter_list|(
name|void
parameter_list|)
block|{
asm|__asm__
specifier|volatile
asm|("hlt");
block|}
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|__nop
parameter_list|(
name|void
parameter_list|)
block|{
asm|__asm__
specifier|volatile
asm|("nop");
block|}
endif|#
directive|endif
comment|/*----------------------------------------------------------------------------*\ |* Privileged intrinsics \*----------------------------------------------------------------------------*/
if|#
directive|if
name|defined
argument_list|(
name|__i386__
argument_list|)
operator|||
name|defined
argument_list|(
name|__x86_64__
argument_list|)
specifier|static
name|__inline__
name|unsigned
name|__int64
name|__DEFAULT_FN_ATTRS
name|__readmsr
parameter_list|(
name|unsigned
name|long
name|__register
parameter_list|)
block|{
comment|// Loads the contents of a 64-bit model specific register (MSR) specified in
comment|// the ECX register into registers EDX:EAX. The EDX register is loaded with
comment|// the high-order 32 bits of the MSR and the EAX register is loaded with the
comment|// low-order 32 bits. If less than 64 bits are implemented in the MSR being
comment|// read, the values returned to EDX:EAX in unimplemented bit locations are
comment|// undefined.
name|unsigned
name|long
name|__edx
decl_stmt|;
name|unsigned
name|long
name|__eax
decl_stmt|;
asm|__asm__ ("rdmsr" : "=d"(__edx), "=a"(__eax) : "c"(__register));
return|return
operator|(
operator|(
operator|(
name|unsigned
name|__int64
operator|)
name|__edx
operator|)
operator|<<
literal|32
operator|)
operator||
operator|(
name|unsigned
name|__int64
operator|)
name|__eax
return|;
block|}
specifier|static
name|__inline__
name|unsigned
name|long
name|__DEFAULT_FN_ATTRS
name|__readcr3
parameter_list|(
name|void
parameter_list|)
block|{
name|unsigned
name|long
name|__cr3_val
decl_stmt|;
asm|__asm__
specifier|__volatile__
asm|("mov %%cr3, %0" : "=q"(__cr3_val) : : "memory");
return|return
name|__cr3_val
return|;
block|}
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|__writecr3
parameter_list|(
name|unsigned
name|int
name|__cr3_val
parameter_list|)
block|{
asm|__asm__ ("mov %0, %%cr3" : : "q"(__cr3_val) : "memory");
block|}
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_undef
undef|#
directive|undef
name|__DEFAULT_FN_ATTRS
end_undef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __INTRIN_H */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _MSC_VER */
end_comment

end_unit

