begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*===---- xmmintrin.h - SSE intrinsics -------------------------------------===  *  * Permission is hereby granted, free of charge, to any person obtaining a copy  * of this software and associated documentation files (the "Software"), to deal  * in the Software without restriction, including without limitation the rights  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell  * copies of the Software, and to permit persons to whom the Software is  * furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice shall be included in  * all copies or substantial portions of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  * THE SOFTWARE.  *  *===-----------------------------------------------------------------------===  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__XMMINTRIN_H
end_ifndef

begin_define
define|#
directive|define
name|__XMMINTRIN_H
end_define

begin_include
include|#
directive|include
file|<mmintrin.h>
end_include

begin_typedef
typedef|typedef
name|int
name|__v4si
name|__attribute__
typedef|((
name|__vector_size__
typedef|(16)));
end_typedef

begin_typedef
typedef|typedef
name|float
name|__v4sf
name|__attribute__
typedef|((
name|__vector_size__
typedef|(16)));
end_typedef

begin_typedef
typedef|typedef
name|float
name|__m128
name|__attribute__
typedef|((
name|__vector_size__
typedef|(16)));
end_typedef

begin_comment
comment|/* This header should only be included in a hosted environment as it depends on  * a standard library to provide allocation routines. */
end_comment

begin_if
if|#
directive|if
name|__STDC_HOSTED__
end_if

begin_include
include|#
directive|include
file|<mm_malloc.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Define the default attributes for the functions in this file. */
end_comment

begin_define
define|#
directive|define
name|__DEFAULT_FN_ATTRS
value|__attribute__((__always_inline__, __nodebug__, __target__("sse")))
end_define

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_add_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
name|__a
index|[
literal|0
index|]
operator|+=
name|__b
index|[
literal|0
index|]
expr_stmt|;
return|return
name|__a
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_add_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__a
operator|+
name|__b
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_sub_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
name|__a
index|[
literal|0
index|]
operator|-=
name|__b
index|[
literal|0
index|]
expr_stmt|;
return|return
name|__a
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_sub_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__a
operator|-
name|__b
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_mul_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
name|__a
index|[
literal|0
index|]
operator|*=
name|__b
index|[
literal|0
index|]
expr_stmt|;
return|return
name|__a
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_mul_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__a
operator|*
name|__b
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_div_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
name|__a
index|[
literal|0
index|]
operator|/=
name|__b
index|[
literal|0
index|]
expr_stmt|;
return|return
name|__a
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_div_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__a
operator|/
name|__b
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_sqrt_ss
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
name|__m128
name|__c
init|=
name|__builtin_ia32_sqrtss
argument_list|(
name|__a
argument_list|)
decl_stmt|;
return|return
operator|(
name|__m128
operator|)
block|{
name|__c
index|[
literal|0
index|]
block|,
name|__a
index|[
literal|1
index|]
block|,
name|__a
index|[
literal|2
index|]
block|,
name|__a
index|[
literal|3
index|]
block|}
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_sqrt_ps
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|__builtin_ia32_sqrtps
argument_list|(
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_rcp_ss
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
name|__m128
name|__c
init|=
name|__builtin_ia32_rcpss
argument_list|(
name|__a
argument_list|)
decl_stmt|;
return|return
operator|(
name|__m128
operator|)
block|{
name|__c
index|[
literal|0
index|]
block|,
name|__a
index|[
literal|1
index|]
block|,
name|__a
index|[
literal|2
index|]
block|,
name|__a
index|[
literal|3
index|]
block|}
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_rcp_ps
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|__builtin_ia32_rcpps
argument_list|(
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_rsqrt_ss
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
name|__m128
name|__c
init|=
name|__builtin_ia32_rsqrtss
argument_list|(
name|__a
argument_list|)
decl_stmt|;
return|return
operator|(
name|__m128
operator|)
block|{
name|__c
index|[
literal|0
index|]
block|,
name|__a
index|[
literal|1
index|]
block|,
name|__a
index|[
literal|2
index|]
block|,
name|__a
index|[
literal|3
index|]
block|}
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_rsqrt_ps
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|__builtin_ia32_rsqrtps
argument_list|(
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_min_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_minss
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_min_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_minps
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_max_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_maxss
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_max_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_maxps
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_and_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m128
call|)
argument_list|(
operator|(
name|__v4si
operator|)
name|__a
operator|&
operator|(
name|__v4si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_andnot_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m128
call|)
argument_list|(
operator|~
operator|(
name|__v4si
operator|)
name|__a
operator|&
operator|(
name|__v4si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_or_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m128
call|)
argument_list|(
operator|(
name|__v4si
operator|)
name|__a
operator||
operator|(
name|__v4si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_xor_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m128
call|)
argument_list|(
operator|(
name|__v4si
operator|)
name|__a
operator|^
operator|(
name|__v4si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpeq_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpeqss
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpeq_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpeqps
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmplt_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpltss
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmplt_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpltps
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmple_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpless
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmple_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpleps
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpgt_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__builtin_ia32_cmpltss
argument_list|(
name|__b
argument_list|,
name|__a
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpgt_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpltps
argument_list|(
name|__b
argument_list|,
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpge_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__builtin_ia32_cmpless
argument_list|(
name|__b
argument_list|,
name|__a
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpge_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpleps
argument_list|(
name|__b
argument_list|,
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpneq_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpneqss
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpneq_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpneqps
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpnlt_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpnltss
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpnlt_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpnltps
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpnle_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpnless
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpnle_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpnleps
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpngt_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__builtin_ia32_cmpnltss
argument_list|(
name|__b
argument_list|,
name|__a
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpngt_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpnltps
argument_list|(
name|__b
argument_list|,
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpnge_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__builtin_ia32_cmpnless
argument_list|(
name|__b
argument_list|,
name|__a
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpnge_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpnleps
argument_list|(
name|__b
argument_list|,
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpord_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpordss
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpord_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpordps
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpunord_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpunordss
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cmpunord_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cmpunordps
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_comieq_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_comieq
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_comilt_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_comilt
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_comile_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_comile
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_comigt_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_comigt
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_comige_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_comige
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_comineq_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_comineq
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_ucomieq_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_ucomieq
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_ucomilt_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_ucomilt
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_ucomile_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_ucomile
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_ucomigt_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_ucomigt
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_ucomige_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_ucomige
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_ucomineq_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_ucomineq
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_cvtss_si32
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|__builtin_ia32_cvtss2si
argument_list|(
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_cvt_ss2si
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|_mm_cvtss_si32
argument_list|(
name|__a
argument_list|)
return|;
block|}
end_function

begin_ifdef
ifdef|#
directive|ifdef
name|__x86_64__
end_ifdef

begin_function
specifier|static
name|__inline__
name|long
name|long
name|__DEFAULT_FN_ATTRS
name|_mm_cvtss_si64
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|__builtin_ia32_cvtss2si64
argument_list|(
name|__a
argument_list|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_cvtps_pi32
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_cvtps2pi
argument_list|(
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_cvt_ps2pi
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|_mm_cvtps_pi32
argument_list|(
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_cvttss_si32
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|__a
index|[
literal|0
index|]
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_cvtt_ss2si
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|_mm_cvttss_si32
argument_list|(
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|long
name|long
name|__DEFAULT_FN_ATTRS
name|_mm_cvttss_si64
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|__a
index|[
literal|0
index|]
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_cvttps_pi32
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_cvttps2pi
argument_list|(
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_cvtt_ps2pi
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|_mm_cvttps_pi32
argument_list|(
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cvtsi32_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|int
name|__b
parameter_list|)
block|{
name|__a
index|[
literal|0
index|]
operator|=
name|__b
expr_stmt|;
return|return
name|__a
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cvt_si2ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|int
name|__b
parameter_list|)
block|{
return|return
name|_mm_cvtsi32_ss
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_ifdef
ifdef|#
directive|ifdef
name|__x86_64__
end_ifdef

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cvtsi64_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|long
name|long
name|__b
parameter_list|)
block|{
name|__a
index|[
literal|0
index|]
operator|=
name|__b
expr_stmt|;
return|return
name|__a
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cvtpi32_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m64
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_cvtpi2ps
argument_list|(
name|__a
argument_list|,
operator|(
name|__v2si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cvt_pi2ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m64
name|__b
parameter_list|)
block|{
return|return
name|_mm_cvtpi32_ps
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|float
name|__DEFAULT_FN_ATTRS
name|_mm_cvtss_f32
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|__a
index|[
literal|0
index|]
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_loadh_pi
parameter_list|(
name|__m128
name|__a
parameter_list|,
specifier|const
name|__m64
modifier|*
name|__p
parameter_list|)
block|{
typedef|typedef
name|float
name|__mm_loadh_pi_v2f32
name|__attribute__
typedef|((
name|__vector_size__
typedef|(8)));
struct|struct
name|__mm_loadh_pi_struct
block|{
name|__mm_loadh_pi_v2f32
name|__u
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|__packed__
operator|,
name|__may_alias__
operator|)
argument_list|)
struct|;
name|__mm_loadh_pi_v2f32
name|__b
init|=
operator|(
operator|(
expr|struct
name|__mm_loadh_pi_struct
operator|*
operator|)
name|__p
operator|)
operator|->
name|__u
decl_stmt|;
name|__m128
name|__bb
init|=
name|__builtin_shufflevector
argument_list|(
name|__b
argument_list|,
name|__b
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
return|return
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__bb
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_loadl_pi
parameter_list|(
name|__m128
name|__a
parameter_list|,
specifier|const
name|__m64
modifier|*
name|__p
parameter_list|)
block|{
typedef|typedef
name|float
name|__mm_loadl_pi_v2f32
name|__attribute__
typedef|((
name|__vector_size__
typedef|(8)));
struct|struct
name|__mm_loadl_pi_struct
block|{
name|__mm_loadl_pi_v2f32
name|__u
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|__packed__
operator|,
name|__may_alias__
operator|)
argument_list|)
struct|;
name|__mm_loadl_pi_v2f32
name|__b
init|=
operator|(
operator|(
expr|struct
name|__mm_loadl_pi_struct
operator|*
operator|)
name|__p
operator|)
operator|->
name|__u
decl_stmt|;
name|__m128
name|__bb
init|=
name|__builtin_shufflevector
argument_list|(
name|__b
argument_list|,
name|__b
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
return|return
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__bb
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_load_ss
parameter_list|(
specifier|const
name|float
modifier|*
name|__p
parameter_list|)
block|{
struct|struct
name|__mm_load_ss_struct
block|{
name|float
name|__u
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|__packed__
operator|,
name|__may_alias__
operator|)
argument_list|)
struct|;
name|float
name|__u
init|=
operator|(
operator|(
expr|struct
name|__mm_load_ss_struct
operator|*
operator|)
name|__p
operator|)
operator|->
name|__u
decl_stmt|;
return|return
operator|(
name|__m128
operator|)
block|{
name|__u
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_load1_ps
parameter_list|(
specifier|const
name|float
modifier|*
name|__p
parameter_list|)
block|{
struct|struct
name|__mm_load1_ps_struct
block|{
name|float
name|__u
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|__packed__
operator|,
name|__may_alias__
operator|)
argument_list|)
struct|;
name|float
name|__u
init|=
operator|(
operator|(
expr|struct
name|__mm_load1_ps_struct
operator|*
operator|)
name|__p
operator|)
operator|->
name|__u
decl_stmt|;
return|return
operator|(
name|__m128
operator|)
block|{
name|__u
block|,
name|__u
block|,
name|__u
block|,
name|__u
block|}
return|;
block|}
end_function

begin_define
define|#
directive|define
name|_mm_load_ps1
parameter_list|(
name|p
parameter_list|)
value|_mm_load1_ps(p)
end_define

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_load_ps
parameter_list|(
specifier|const
name|float
modifier|*
name|__p
parameter_list|)
block|{
return|return
operator|*
operator|(
name|__m128
operator|*
operator|)
name|__p
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_loadu_ps
parameter_list|(
specifier|const
name|float
modifier|*
name|__p
parameter_list|)
block|{
struct|struct
name|__loadu_ps
block|{
name|__m128
name|__v
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|__packed__
operator|,
name|__may_alias__
operator|)
argument_list|)
struct|;
return|return
operator|(
operator|(
expr|struct
name|__loadu_ps
operator|*
operator|)
name|__p
operator|)
operator|->
name|__v
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_loadr_ps
parameter_list|(
specifier|const
name|float
modifier|*
name|__p
parameter_list|)
block|{
name|__m128
name|__a
init|=
name|_mm_load_ps
argument_list|(
name|__p
argument_list|)
decl_stmt|;
return|return
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__a
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_set_ss
parameter_list|(
name|float
name|__w
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
block|{
name|__w
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_set1_ps
parameter_list|(
name|float
name|__w
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
block|{
name|__w
block|,
name|__w
block|,
name|__w
block|,
name|__w
block|}
return|;
block|}
end_function

begin_comment
comment|/* Microsoft specific. */
end_comment

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_set_ps1
parameter_list|(
name|float
name|__w
parameter_list|)
block|{
return|return
name|_mm_set1_ps
argument_list|(
name|__w
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_set_ps
parameter_list|(
name|float
name|__z
parameter_list|,
name|float
name|__y
parameter_list|,
name|float
name|__x
parameter_list|,
name|float
name|__w
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
block|{
name|__w
block|,
name|__x
block|,
name|__y
block|,
name|__z
block|}
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_setr_ps
parameter_list|(
name|float
name|__z
parameter_list|,
name|float
name|__y
parameter_list|,
name|float
name|__x
parameter_list|,
name|float
name|__w
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
block|{
name|__z
block|,
name|__y
block|,
name|__x
block|,
name|__w
block|}
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_setzero_ps
parameter_list|(
name|void
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_storeh_pi
parameter_list|(
name|__m64
modifier|*
name|__p
parameter_list|,
name|__m128
name|__a
parameter_list|)
block|{
name|__builtin_ia32_storehps
argument_list|(
operator|(
name|__v2si
operator|*
operator|)
name|__p
argument_list|,
name|__a
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_storel_pi
parameter_list|(
name|__m64
modifier|*
name|__p
parameter_list|,
name|__m128
name|__a
parameter_list|)
block|{
name|__builtin_ia32_storelps
argument_list|(
operator|(
name|__v2si
operator|*
operator|)
name|__p
argument_list|,
name|__a
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_store_ss
parameter_list|(
name|float
modifier|*
name|__p
parameter_list|,
name|__m128
name|__a
parameter_list|)
block|{
struct|struct
name|__mm_store_ss_struct
block|{
name|float
name|__u
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|__packed__
operator|,
name|__may_alias__
operator|)
argument_list|)
struct|;
operator|(
operator|(
expr|struct
name|__mm_store_ss_struct
operator|*
operator|)
name|__p
operator|)
operator|->
name|__u
operator|=
name|__a
index|[
literal|0
index|]
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_storeu_ps
parameter_list|(
name|float
modifier|*
name|__p
parameter_list|,
name|__m128
name|__a
parameter_list|)
block|{
name|__builtin_ia32_storeups
argument_list|(
name|__p
argument_list|,
name|__a
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_store1_ps
parameter_list|(
name|float
modifier|*
name|__p
parameter_list|,
name|__m128
name|__a
parameter_list|)
block|{
name|__a
operator|=
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__a
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|_mm_storeu_ps
argument_list|(
name|__p
argument_list|,
name|__a
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_store_ps1
parameter_list|(
name|float
modifier|*
name|__p
parameter_list|,
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|_mm_store1_ps
argument_list|(
name|__p
argument_list|,
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_store_ps
parameter_list|(
name|float
modifier|*
name|__p
parameter_list|,
name|__m128
name|__a
parameter_list|)
block|{
operator|*
operator|(
name|__m128
operator|*
operator|)
name|__p
operator|=
name|__a
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_storer_ps
parameter_list|(
name|float
modifier|*
name|__p
parameter_list|,
name|__m128
name|__a
parameter_list|)
block|{
name|__a
operator|=
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__a
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|_mm_store_ps
argument_list|(
name|__p
argument_list|,
name|__a
argument_list|)
expr_stmt|;
block|}
end_function

begin_define
define|#
directive|define
name|_MM_HINT_T0
value|3
end_define

begin_define
define|#
directive|define
name|_MM_HINT_T1
value|2
end_define

begin_define
define|#
directive|define
name|_MM_HINT_T2
value|1
end_define

begin_define
define|#
directive|define
name|_MM_HINT_NTA
value|0
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|_MSC_VER
end_ifndef

begin_comment
comment|/* FIXME: We have to #define this because "sel" must be a constant integer, and    Sema doesn't do any form of constant propagation yet. */
end_comment

begin_define
define|#
directive|define
name|_mm_prefetch
parameter_list|(
name|a
parameter_list|,
name|sel
parameter_list|)
value|(__builtin_prefetch((void *)(a), 0, (sel)))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_stream_pi
parameter_list|(
name|__m64
modifier|*
name|__p
parameter_list|,
name|__m64
name|__a
parameter_list|)
block|{
name|__builtin_ia32_movntq
argument_list|(
name|__p
argument_list|,
name|__a
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_stream_ps
parameter_list|(
name|float
modifier|*
name|__p
parameter_list|,
name|__m128
name|__a
parameter_list|)
block|{
name|__builtin_ia32_movntps
argument_list|(
name|__p
argument_list|,
name|__a
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_sfence
parameter_list|(
name|void
parameter_list|)
block|{
name|__builtin_ia32_sfence
argument_list|()
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_extract_pi16
parameter_list|(
name|__m64
name|__a
parameter_list|,
name|int
name|__n
parameter_list|)
block|{
name|__v4hi
name|__b
init|=
operator|(
name|__v4hi
operator|)
name|__a
decl_stmt|;
return|return
operator|(
name|unsigned
name|short
operator|)
name|__b
index|[
name|__n
operator|&
literal|3
index|]
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_insert_pi16
parameter_list|(
name|__m64
name|__a
parameter_list|,
name|int
name|__d
parameter_list|,
name|int
name|__n
parameter_list|)
block|{
name|__v4hi
name|__b
init|=
operator|(
name|__v4hi
operator|)
name|__a
decl_stmt|;
name|__b
index|[
name|__n
operator|&
literal|3
index|]
operator|=
name|__d
expr_stmt|;
return|return
operator|(
name|__m64
operator|)
name|__b
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_max_pi16
parameter_list|(
name|__m64
name|__a
parameter_list|,
name|__m64
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_pmaxsw
argument_list|(
operator|(
name|__v4hi
operator|)
name|__a
argument_list|,
operator|(
name|__v4hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_max_pu8
parameter_list|(
name|__m64
name|__a
parameter_list|,
name|__m64
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_pmaxub
argument_list|(
operator|(
name|__v8qi
operator|)
name|__a
argument_list|,
operator|(
name|__v8qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_min_pi16
parameter_list|(
name|__m64
name|__a
parameter_list|,
name|__m64
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_pminsw
argument_list|(
operator|(
name|__v4hi
operator|)
name|__a
argument_list|,
operator|(
name|__v4hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_min_pu8
parameter_list|(
name|__m64
name|__a
parameter_list|,
name|__m64
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_pminub
argument_list|(
operator|(
name|__v8qi
operator|)
name|__a
argument_list|,
operator|(
name|__v8qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_movemask_pi8
parameter_list|(
name|__m64
name|__a
parameter_list|)
block|{
return|return
name|__builtin_ia32_pmovmskb
argument_list|(
operator|(
name|__v8qi
operator|)
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_mulhi_pu16
parameter_list|(
name|__m64
name|__a
parameter_list|,
name|__m64
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_pmulhuw
argument_list|(
operator|(
name|__v4hi
operator|)
name|__a
argument_list|,
operator|(
name|__v4hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|_mm_shuffle_pi16
parameter_list|(
name|a
parameter_list|,
name|n
parameter_list|)
value|__extension__ ({ \   __m64 __a = (a); \   (__m64)__builtin_ia32_pshufw((__v4hi)__a, (n)); })
end_define

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_maskmove_si64
parameter_list|(
name|__m64
name|__d
parameter_list|,
name|__m64
name|__n
parameter_list|,
name|char
modifier|*
name|__p
parameter_list|)
block|{
name|__builtin_ia32_maskmovq
argument_list|(
operator|(
name|__v8qi
operator|)
name|__d
argument_list|,
operator|(
name|__v8qi
operator|)
name|__n
argument_list|,
name|__p
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_avg_pu8
parameter_list|(
name|__m64
name|__a
parameter_list|,
name|__m64
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_pavgb
argument_list|(
operator|(
name|__v8qi
operator|)
name|__a
argument_list|,
operator|(
name|__v8qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_avg_pu16
parameter_list|(
name|__m64
name|__a
parameter_list|,
name|__m64
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_pavgw
argument_list|(
operator|(
name|__v4hi
operator|)
name|__a
argument_list|,
operator|(
name|__v4hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_sad_pu8
parameter_list|(
name|__m64
name|__a
parameter_list|,
name|__m64
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_psadbw
argument_list|(
operator|(
name|__v8qi
operator|)
name|__a
argument_list|,
operator|(
name|__v8qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|unsigned
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_getcsr
parameter_list|(
name|void
parameter_list|)
block|{
return|return
name|__builtin_ia32_stmxcsr
argument_list|()
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_setcsr
parameter_list|(
name|unsigned
name|int
name|__i
parameter_list|)
block|{
name|__builtin_ia32_ldmxcsr
argument_list|(
name|__i
argument_list|)
expr_stmt|;
block|}
end_function

begin_define
define|#
directive|define
name|_mm_shuffle_ps
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|,
name|mask
parameter_list|)
value|__extension__ ({ \   __m128 __a = (a); \   __m128 __b = (b); \   (__m128)__builtin_shufflevector((__v4sf)__a, (__v4sf)__b, \                                   (mask)& 0x3, ((mask)& 0xc)>> 2, \                                   (((mask)& 0x30)>> 4) + 4, \                                   (((mask)& 0xc0)>> 6) + 4); })
end_define

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_unpackhi_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|,
literal|2
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|7
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_unpacklo_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_move_ss
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_movehl_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_movelh_ps
parameter_list|(
name|__m128
name|__a
parameter_list|,
name|__m128
name|__b
parameter_list|)
block|{
return|return
name|__builtin_shufflevector
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cvtpi16_ps
parameter_list|(
name|__m64
name|__a
parameter_list|)
block|{
name|__m64
name|__b
decl_stmt|,
name|__c
decl_stmt|;
name|__m128
name|__r
decl_stmt|;
name|__b
operator|=
name|_mm_setzero_si64
argument_list|()
expr_stmt|;
name|__b
operator|=
name|_mm_cmpgt_pi16
argument_list|(
name|__b
argument_list|,
name|__a
argument_list|)
expr_stmt|;
name|__c
operator|=
name|_mm_unpackhi_pi16
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
expr_stmt|;
name|__r
operator|=
name|_mm_setzero_ps
argument_list|()
expr_stmt|;
name|__r
operator|=
name|_mm_cvtpi32_ps
argument_list|(
name|__r
argument_list|,
name|__c
argument_list|)
expr_stmt|;
name|__r
operator|=
name|_mm_movelh_ps
argument_list|(
name|__r
argument_list|,
name|__r
argument_list|)
expr_stmt|;
name|__c
operator|=
name|_mm_unpacklo_pi16
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
expr_stmt|;
name|__r
operator|=
name|_mm_cvtpi32_ps
argument_list|(
name|__r
argument_list|,
name|__c
argument_list|)
expr_stmt|;
return|return
name|__r
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cvtpu16_ps
parameter_list|(
name|__m64
name|__a
parameter_list|)
block|{
name|__m64
name|__b
decl_stmt|,
name|__c
decl_stmt|;
name|__m128
name|__r
decl_stmt|;
name|__b
operator|=
name|_mm_setzero_si64
argument_list|()
expr_stmt|;
name|__c
operator|=
name|_mm_unpackhi_pi16
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
expr_stmt|;
name|__r
operator|=
name|_mm_setzero_ps
argument_list|()
expr_stmt|;
name|__r
operator|=
name|_mm_cvtpi32_ps
argument_list|(
name|__r
argument_list|,
name|__c
argument_list|)
expr_stmt|;
name|__r
operator|=
name|_mm_movelh_ps
argument_list|(
name|__r
argument_list|,
name|__r
argument_list|)
expr_stmt|;
name|__c
operator|=
name|_mm_unpacklo_pi16
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
expr_stmt|;
name|__r
operator|=
name|_mm_cvtpi32_ps
argument_list|(
name|__r
argument_list|,
name|__c
argument_list|)
expr_stmt|;
return|return
name|__r
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cvtpi8_ps
parameter_list|(
name|__m64
name|__a
parameter_list|)
block|{
name|__m64
name|__b
decl_stmt|;
name|__b
operator|=
name|_mm_setzero_si64
argument_list|()
expr_stmt|;
name|__b
operator|=
name|_mm_cmpgt_pi8
argument_list|(
name|__b
argument_list|,
name|__a
argument_list|)
expr_stmt|;
name|__b
operator|=
name|_mm_unpacklo_pi8
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
expr_stmt|;
return|return
name|_mm_cvtpi16_ps
argument_list|(
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cvtpu8_ps
parameter_list|(
name|__m64
name|__a
parameter_list|)
block|{
name|__m64
name|__b
decl_stmt|;
name|__b
operator|=
name|_mm_setzero_si64
argument_list|()
expr_stmt|;
name|__b
operator|=
name|_mm_unpacklo_pi8
argument_list|(
name|__a
argument_list|,
name|__b
argument_list|)
expr_stmt|;
return|return
name|_mm_cvtpi16_ps
argument_list|(
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_cvtpi32x2_ps
parameter_list|(
name|__m64
name|__a
parameter_list|,
name|__m64
name|__b
parameter_list|)
block|{
name|__m128
name|__c
decl_stmt|;
name|__c
operator|=
name|_mm_setzero_ps
argument_list|()
expr_stmt|;
name|__c
operator|=
name|_mm_cvtpi32_ps
argument_list|(
name|__c
argument_list|,
name|__b
argument_list|)
expr_stmt|;
name|__c
operator|=
name|_mm_movelh_ps
argument_list|(
name|__c
argument_list|,
name|__c
argument_list|)
expr_stmt|;
return|return
name|_mm_cvtpi32_ps
argument_list|(
name|__c
argument_list|,
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_cvtps_pi16
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
name|__m64
name|__b
decl_stmt|,
name|__c
decl_stmt|;
name|__b
operator|=
name|_mm_cvtps_pi32
argument_list|(
name|__a
argument_list|)
expr_stmt|;
name|__a
operator|=
name|_mm_movehl_ps
argument_list|(
name|__a
argument_list|,
name|__a
argument_list|)
expr_stmt|;
name|__c
operator|=
name|_mm_cvtps_pi32
argument_list|(
name|__a
argument_list|)
expr_stmt|;
return|return
name|_mm_packs_pi32
argument_list|(
name|__b
argument_list|,
name|__c
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m64
name|__DEFAULT_FN_ATTRS
name|_mm_cvtps_pi8
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
name|__m64
name|__b
decl_stmt|,
name|__c
decl_stmt|;
name|__b
operator|=
name|_mm_cvtps_pi16
argument_list|(
name|__a
argument_list|)
expr_stmt|;
name|__c
operator|=
name|_mm_setzero_si64
argument_list|()
expr_stmt|;
return|return
name|_mm_packs_pi16
argument_list|(
name|__b
argument_list|,
name|__c
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm_movemask_ps
parameter_list|(
name|__m128
name|__a
parameter_list|)
block|{
return|return
name|__builtin_ia32_movmskps
argument_list|(
name|__a
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|_MM_SHUFFLE
parameter_list|(
name|z
parameter_list|,
name|y
parameter_list|,
name|x
parameter_list|,
name|w
parameter_list|)
value|(((z)<< 6) | ((y)<< 4) | ((x)<< 2) | (w))
end_define

begin_define
define|#
directive|define
name|_MM_EXCEPT_INVALID
value|(0x0001)
end_define

begin_define
define|#
directive|define
name|_MM_EXCEPT_DENORM
value|(0x0002)
end_define

begin_define
define|#
directive|define
name|_MM_EXCEPT_DIV_ZERO
value|(0x0004)
end_define

begin_define
define|#
directive|define
name|_MM_EXCEPT_OVERFLOW
value|(0x0008)
end_define

begin_define
define|#
directive|define
name|_MM_EXCEPT_UNDERFLOW
value|(0x0010)
end_define

begin_define
define|#
directive|define
name|_MM_EXCEPT_INEXACT
value|(0x0020)
end_define

begin_define
define|#
directive|define
name|_MM_EXCEPT_MASK
value|(0x003f)
end_define

begin_define
define|#
directive|define
name|_MM_MASK_INVALID
value|(0x0080)
end_define

begin_define
define|#
directive|define
name|_MM_MASK_DENORM
value|(0x0100)
end_define

begin_define
define|#
directive|define
name|_MM_MASK_DIV_ZERO
value|(0x0200)
end_define

begin_define
define|#
directive|define
name|_MM_MASK_OVERFLOW
value|(0x0400)
end_define

begin_define
define|#
directive|define
name|_MM_MASK_UNDERFLOW
value|(0x0800)
end_define

begin_define
define|#
directive|define
name|_MM_MASK_INEXACT
value|(0x1000)
end_define

begin_define
define|#
directive|define
name|_MM_MASK_MASK
value|(0x1f80)
end_define

begin_define
define|#
directive|define
name|_MM_ROUND_NEAREST
value|(0x0000)
end_define

begin_define
define|#
directive|define
name|_MM_ROUND_DOWN
value|(0x2000)
end_define

begin_define
define|#
directive|define
name|_MM_ROUND_UP
value|(0x4000)
end_define

begin_define
define|#
directive|define
name|_MM_ROUND_TOWARD_ZERO
value|(0x6000)
end_define

begin_define
define|#
directive|define
name|_MM_ROUND_MASK
value|(0x6000)
end_define

begin_define
define|#
directive|define
name|_MM_FLUSH_ZERO_MASK
value|(0x8000)
end_define

begin_define
define|#
directive|define
name|_MM_FLUSH_ZERO_ON
value|(0x8000)
end_define

begin_define
define|#
directive|define
name|_MM_FLUSH_ZERO_OFF
value|(0x0000)
end_define

begin_define
define|#
directive|define
name|_MM_GET_EXCEPTION_MASK
parameter_list|()
value|(_mm_getcsr()& _MM_MASK_MASK)
end_define

begin_define
define|#
directive|define
name|_MM_GET_EXCEPTION_STATE
parameter_list|()
value|(_mm_getcsr()& _MM_EXCEPT_MASK)
end_define

begin_define
define|#
directive|define
name|_MM_GET_FLUSH_ZERO_MODE
parameter_list|()
value|(_mm_getcsr()& _MM_FLUSH_ZERO_MASK)
end_define

begin_define
define|#
directive|define
name|_MM_GET_ROUNDING_MODE
parameter_list|()
value|(_mm_getcsr()& _MM_ROUND_MASK)
end_define

begin_define
define|#
directive|define
name|_MM_SET_EXCEPTION_MASK
parameter_list|(
name|x
parameter_list|)
value|(_mm_setcsr((_mm_getcsr()& ~_MM_MASK_MASK) | (x)))
end_define

begin_define
define|#
directive|define
name|_MM_SET_EXCEPTION_STATE
parameter_list|(
name|x
parameter_list|)
value|(_mm_setcsr((_mm_getcsr()& ~_MM_EXCEPT_MASK) | (x)))
end_define

begin_define
define|#
directive|define
name|_MM_SET_FLUSH_ZERO_MODE
parameter_list|(
name|x
parameter_list|)
value|(_mm_setcsr((_mm_getcsr()& ~_MM_FLUSH_ZERO_MASK) | (x)))
end_define

begin_define
define|#
directive|define
name|_MM_SET_ROUNDING_MODE
parameter_list|(
name|x
parameter_list|)
value|(_mm_setcsr((_mm_getcsr()& ~_MM_ROUND_MASK) | (x)))
end_define

begin_define
define|#
directive|define
name|_MM_TRANSPOSE4_PS
parameter_list|(
name|row0
parameter_list|,
name|row1
parameter_list|,
name|row2
parameter_list|,
name|row3
parameter_list|)
define|\
value|do { \   __m128 tmp3, tmp2, tmp1, tmp0; \   tmp0 = _mm_unpacklo_ps((row0), (row1)); \   tmp2 = _mm_unpacklo_ps((row2), (row3)); \   tmp1 = _mm_unpackhi_ps((row0), (row1)); \   tmp3 = _mm_unpackhi_ps((row2), (row3)); \   (row0) = _mm_movelh_ps(tmp0, tmp2); \   (row1) = _mm_movehl_ps(tmp2, tmp0); \   (row2) = _mm_movelh_ps(tmp1, tmp3); \   (row3) = _mm_movehl_ps(tmp3, tmp1); \ } while (0)
end_define

begin_comment
comment|/* Aliases for compatibility. */
end_comment

begin_define
define|#
directive|define
name|_m_pextrw
value|_mm_extract_pi16
end_define

begin_define
define|#
directive|define
name|_m_pinsrw
value|_mm_insert_pi16
end_define

begin_define
define|#
directive|define
name|_m_pmaxsw
value|_mm_max_pi16
end_define

begin_define
define|#
directive|define
name|_m_pmaxub
value|_mm_max_pu8
end_define

begin_define
define|#
directive|define
name|_m_pminsw
value|_mm_min_pi16
end_define

begin_define
define|#
directive|define
name|_m_pminub
value|_mm_min_pu8
end_define

begin_define
define|#
directive|define
name|_m_pmovmskb
value|_mm_movemask_pi8
end_define

begin_define
define|#
directive|define
name|_m_pmulhuw
value|_mm_mulhi_pu16
end_define

begin_define
define|#
directive|define
name|_m_pshufw
value|_mm_shuffle_pi16
end_define

begin_define
define|#
directive|define
name|_m_maskmovq
value|_mm_maskmove_si64
end_define

begin_define
define|#
directive|define
name|_m_pavgb
value|_mm_avg_pu8
end_define

begin_define
define|#
directive|define
name|_m_pavgw
value|_mm_avg_pu16
end_define

begin_define
define|#
directive|define
name|_m_psadbw
value|_mm_sad_pu8
end_define

begin_define
define|#
directive|define
name|_m_
value|_mm_
end_define

begin_define
define|#
directive|define
name|_m_
value|_mm_
end_define

begin_undef
undef|#
directive|undef
name|__DEFAULT_FN_ATTRS
end_undef

begin_comment
comment|/* Ugly hack for backwards-compatibility (compatible with gcc) */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__SSE2__
argument_list|)
operator|&&
operator|!
name|__has_feature
argument_list|(
name|modules
argument_list|)
end_if

begin_include
include|#
directive|include
file|<emmintrin.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __XMMINTRIN_H */
end_comment

end_unit

