begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- PIC16ISelDAGToDAG.cpp - A dag to dag inst selector for PIC16 ------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file defines an instruction selector for the PIC16 target.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_define
define|#
directive|define
name|DEBUG_TYPE
value|"pic16-isel"
end_define

begin_include
include|#
directive|include
file|"PIC16.h"
end_include

begin_include
include|#
directive|include
file|"PIC16ISelLowering.h"
end_include

begin_include
include|#
directive|include
file|"PIC16RegisterInfo.h"
end_include

begin_include
include|#
directive|include
file|"PIC16TargetMachine.h"
end_include

begin_include
include|#
directive|include
file|"llvm/CodeGen/SelectionDAGISel.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Compiler.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Intrinsics.h"
end_include

begin_decl_stmt
name|using
name|namespace
name|llvm
decl_stmt|;
end_decl_stmt

begin_macro
name|namespace
end_macro

begin_block
block|{
name|class
name|VISIBILITY_HIDDEN
name|PIC16DAGToDAGISel
range|:
name|public
name|SelectionDAGISel
block|{
comment|/// TM - Keep a reference to PIC16TargetMachine.
name|PIC16TargetMachine
operator|&
name|TM
block|;
comment|/// PIC16Lowering - This object fully describes how to lower LLVM code to an
comment|/// PIC16-specific SelectionDAG.
name|PIC16TargetLowering
operator|&
name|PIC16Lowering
block|;
name|public
operator|:
name|explicit
name|PIC16DAGToDAGISel
argument_list|(
name|PIC16TargetMachine
operator|&
name|tm
argument_list|)
operator|:
name|SelectionDAGISel
argument_list|(
name|tm
argument_list|)
block|,
name|TM
argument_list|(
name|tm
argument_list|)
block|,
name|PIC16Lowering
argument_list|(
argument|*TM.getTargetLowering()
argument_list|)
block|{
comment|// Keep PIC16 specific DAGISel to use during the lowering
name|PIC16Lowering
operator|.
name|ISel
operator|=
name|this
block|;   }
comment|// Pass Name
name|virtual
specifier|const
name|char
operator|*
name|getPassName
argument_list|()
specifier|const
block|{
return|return
literal|"PIC16 DAG->DAG Pattern Instruction Selection"
return|;
block|}
name|virtual
name|void
name|InstructionSelect
argument_list|()
block|;
name|private
operator|:
comment|// Include the pieces autogenerated from the target description.
include|#
directive|include
file|"PIC16GenDAGISel.inc"
name|SDNode
operator|*
name|Select
argument_list|(
name|SDNode
operator|*
name|N
argument_list|)
block|;
comment|// Match direct address complex pattern.
name|bool
name|SelectDirectAddr
argument_list|(
argument|SDNode *Op
argument_list|,
argument|SDValue N
argument_list|,
argument|SDValue&Address
argument_list|)
block|;  }
decl_stmt|;
block|}
end_block

end_unit

