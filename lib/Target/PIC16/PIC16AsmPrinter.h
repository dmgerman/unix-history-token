begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- PIC16AsmPrinter.h - PIC16 LLVM assembly writer ------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file contains a printer that converts from our internal representation
end_comment

begin_comment
comment|// of machine-dependent LLVM code to PIC16 assembly language.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|PIC16ASMPRINTER_H
end_ifndef

begin_define
define|#
directive|define
name|PIC16ASMPRINTER_H
end_define

begin_include
include|#
directive|include
file|"PIC16.h"
end_include

begin_include
include|#
directive|include
file|"PIC16TargetMachine.h"
end_include

begin_include
include|#
directive|include
file|"PIC16DebugInfo.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/DebugInfo.h"
end_include

begin_include
include|#
directive|include
file|"PIC16TargetAsmInfo.h"
end_include

begin_include
include|#
directive|include
file|"llvm/CodeGen/AsmPrinter.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/CommandLine.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Target/TargetAsmInfo.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Target/TargetMachine.h"
end_include

begin_include
include|#
directive|include
file|<list>
end_include

begin_include
include|#
directive|include
file|<string>
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|struct
name|VISIBILITY_HIDDEN
name|PIC16AsmPrinter
range|:
name|public
name|AsmPrinter
block|{
name|explicit
name|PIC16AsmPrinter
argument_list|(
argument|raw_ostream&O
argument_list|,
argument|PIC16TargetMachine&TM
argument_list|,
argument|const TargetAsmInfo *T
argument_list|,
argument|CodeGenOpt::Level OL
argument_list|,
argument|bool V
argument_list|)
operator|:
name|AsmPrinter
argument_list|(
name|O
argument_list|,
name|TM
argument_list|,
name|T
argument_list|,
name|OL
argument_list|,
name|V
argument_list|)
block|,
name|DbgInfo
argument_list|(
argument|O
argument_list|,
argument|T
argument_list|)
block|{
name|PTLI
operator|=
name|TM
operator|.
name|getTargetLowering
argument_list|()
block|;
name|PTAI
operator|=
name|static_cast
operator|<
specifier|const
name|PIC16TargetAsmInfo
operator|*
operator|>
operator|(
name|T
operator|)
block|;     }
name|private
operator|:
name|virtual
specifier|const
name|char
operator|*
name|getPassName
argument_list|()
specifier|const
block|{
return|return
literal|"PIC16 Assembly Printer"
return|;
block|}
name|bool
name|runOnMachineFunction
argument_list|(
name|MachineFunction
operator|&
name|F
argument_list|)
block|;
name|void
name|printOperand
argument_list|(
argument|const MachineInstr *MI
argument_list|,
argument|int opNum
argument_list|)
block|;
name|void
name|printCCOperand
argument_list|(
argument|const MachineInstr *MI
argument_list|,
argument|int opNum
argument_list|)
block|;
name|bool
name|printInstruction
argument_list|(
specifier|const
name|MachineInstr
operator|*
name|MI
argument_list|)
block|;
comment|// definition autogenerated.
name|bool
name|printMachineInstruction
argument_list|(
specifier|const
name|MachineInstr
operator|*
name|MI
argument_list|)
block|;
name|void
name|EmitFunctionDecls
argument_list|(
name|Module
operator|&
name|M
argument_list|)
block|;
name|void
name|EmitUndefinedVars
argument_list|(
name|Module
operator|&
name|M
argument_list|)
block|;
name|void
name|EmitDefinedVars
argument_list|(
name|Module
operator|&
name|M
argument_list|)
block|;
name|void
name|EmitIData
argument_list|(
name|Module
operator|&
name|M
argument_list|)
block|;
name|void
name|EmitUData
argument_list|(
name|Module
operator|&
name|M
argument_list|)
block|;
name|void
name|EmitAutos
argument_list|(
argument|std::string FunctName
argument_list|)
block|;
name|void
name|EmitRomData
argument_list|(
name|Module
operator|&
name|M
argument_list|)
block|;
name|void
name|EmitFunctionFrame
argument_list|(
name|MachineFunction
operator|&
name|MF
argument_list|)
block|;
name|void
name|printLibcallDecls
argument_list|(
name|void
argument_list|)
block|;
name|protected
operator|:
name|bool
name|doInitialization
argument_list|(
name|Module
operator|&
name|M
argument_list|)
block|;
name|bool
name|doFinalization
argument_list|(
name|Module
operator|&
name|M
argument_list|)
block|;
name|private
operator|:
name|PIC16TargetLowering
operator|*
name|PTLI
block|;
name|PIC16DbgInfo
name|DbgInfo
block|;
specifier|const
name|PIC16TargetAsmInfo
operator|*
name|PTAI
block|;
name|std
operator|::
name|list
operator|<
specifier|const
name|char
operator|*
operator|>
name|LibcallDecls
block|;
comment|// List of extern decls.
block|}
decl_stmt|;
block|}
end_decl_stmt

begin_comment
comment|// end of namespace
end_comment

begin_endif
endif|#
directive|endif
end_endif

end_unit

