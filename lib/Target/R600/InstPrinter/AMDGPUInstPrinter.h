begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- AMDGPUInstPrinter.h - AMDGPU MC Inst -> ASM interface ---*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|/// \file
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_LIB_TARGET_R600_INSTPRINTER_AMDGPUINSTPRINTER_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_LIB_TARGET_R600_INSTPRINTER_AMDGPUINSTPRINTER_H
end_define

begin_include
include|#
directive|include
file|"llvm/ADT/StringRef.h"
end_include

begin_include
include|#
directive|include
file|"llvm/MC/MCInstPrinter.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/raw_ostream.h"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|class
name|AMDGPUInstPrinter
range|:
name|public
name|MCInstPrinter
block|{
name|public
operator|:
name|AMDGPUInstPrinter
argument_list|(
specifier|const
name|MCAsmInfo
operator|&
name|MAI
argument_list|,
specifier|const
name|MCInstrInfo
operator|&
name|MII
argument_list|,
specifier|const
name|MCRegisterInfo
operator|&
name|MRI
argument_list|)
operator|:
name|MCInstPrinter
argument_list|(
argument|MAI
argument_list|,
argument|MII
argument_list|,
argument|MRI
argument_list|)
block|{}
comment|//Autogenerated by tblgen
name|void
name|printInstruction
argument_list|(
specifier|const
name|MCInst
operator|*
name|MI
argument_list|,
name|raw_ostream
operator|&
name|O
argument_list|)
block|;
specifier|static
specifier|const
name|char
operator|*
name|getRegisterName
argument_list|(
argument|unsigned RegNo
argument_list|)
block|;
name|void
name|printInst
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|raw_ostream&O
argument_list|,
argument|StringRef Annot
argument_list|,
argument|const MCSubtargetInfo&STI
argument_list|)
name|override
block|;
specifier|static
name|void
name|printRegOperand
argument_list|(
argument|unsigned RegNo
argument_list|,
argument|raw_ostream&O
argument_list|,
argument|const MCRegisterInfo&MRI
argument_list|)
block|;
name|private
operator|:
name|void
name|printU8ImmOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printU16ImmOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printU8ImmDecOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printU16ImmDecOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printU32ImmOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printOffen
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printIdxen
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAddr64
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printMBUFOffset
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printDSOffset
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printDSOffset0
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printDSOffset1
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printGDS
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printGLC
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printSLC
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printTFE
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printRegOperand
argument_list|(
argument|unsigned RegNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printVOPDst
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printImmediate32
argument_list|(
argument|uint32_t I
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printImmediate64
argument_list|(
argument|uint64_t I
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printOperandAndMods
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printInterpSlot
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printMemOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printIfSet
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|,
argument|StringRef Asm
argument_list|,
argument|StringRef Default =
literal|""
argument_list|)
block|;
specifier|static
name|void
name|printAbs
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printClamp
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printClampSI
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printOModSI
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printLiteral
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printLast
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printNeg
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printOMOD
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printRel
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printUpdateExecMask
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printUpdatePred
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printWrite
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printSel
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printBankSwizzle
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printRSel
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printCT
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printKCache
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printSendMsg
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
specifier|static
name|void
name|printWaitFlag
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|; }
decl_stmt|;
block|}
end_decl_stmt

begin_comment
comment|// End namespace llvm
end_comment

begin_endif
endif|#
directive|endif
end_endif

end_unit

