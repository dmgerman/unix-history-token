begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/*-  * Copyright (c) 2014 Hans Petter Selasky. All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_CUSE_H_
end_ifndef

begin_define
define|#
directive|define
name|_CUSE_H_
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
include|#
directive|include
file|<fs/cuse/cuse_defs.h>
struct_decl|struct
name|cuse_dev
struct_decl|;
typedef|typedef
name|int
function_decl|(
name|cuse_open_t
function_decl|)
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|,
name|int
name|fflags
parameter_list|)
function_decl|;
typedef|typedef
name|int
function_decl|(
name|cuse_close_t
function_decl|)
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|,
name|int
name|fflags
parameter_list|)
function_decl|;
typedef|typedef
name|int
function_decl|(
name|cuse_read_t
function_decl|)
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|,
name|int
name|fflags
parameter_list|,
name|void
modifier|*
name|user_ptr
parameter_list|,
name|int
name|len
parameter_list|)
function_decl|;
typedef|typedef
name|int
function_decl|(
name|cuse_write_t
function_decl|)
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|,
name|int
name|fflags
parameter_list|,
specifier|const
name|void
modifier|*
name|user_ptr
parameter_list|,
name|int
name|len
parameter_list|)
function_decl|;
typedef|typedef
name|int
function_decl|(
name|cuse_ioctl_t
function_decl|)
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|,
name|int
name|fflags
parameter_list|,
name|unsigned
name|long
name|cmd
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|)
function_decl|;
typedef|typedef
name|int
function_decl|(
name|cuse_poll_t
function_decl|)
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|,
name|int
name|fflags
parameter_list|,
name|int
name|events
parameter_list|)
function_decl|;
struct|struct
name|cuse_methods
block|{
name|cuse_open_t
modifier|*
name|cm_open
decl_stmt|;
name|cuse_close_t
modifier|*
name|cm_close
decl_stmt|;
name|cuse_read_t
modifier|*
name|cm_read
decl_stmt|;
name|cuse_write_t
modifier|*
name|cm_write
decl_stmt|;
name|cuse_ioctl_t
modifier|*
name|cm_ioctl
decl_stmt|;
name|cuse_poll_t
modifier|*
name|cm_poll
decl_stmt|;
block|}
struct|;
name|int
name|cuse_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
name|cuse_uninit
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
modifier|*
name|cuse_vmalloc
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|int
name|cuse_is_vmalloc_addr
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
name|cuse_vmfree
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|unsigned
name|long
name|cuse_vmoffset
parameter_list|(
name|void
modifier|*
name|ptr
parameter_list|)
function_decl|;
name|int
name|cuse_alloc_unit_number_by_id
parameter_list|(
name|int
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
name|cuse_free_unit_number_by_id
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
name|cuse_alloc_unit_number
parameter_list|(
name|int
modifier|*
parameter_list|)
function_decl|;
name|int
name|cuse_free_unit_number
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|struct
name|cuse_dev
modifier|*
name|cuse_dev_create
parameter_list|(
specifier|const
name|struct
name|cuse_methods
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|uid_t
parameter_list|,
name|gid_t
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
name|void
name|cuse_dev_destroy
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
name|cuse_dev_get_priv0
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
name|cuse_dev_get_priv1
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|)
function_decl|;
name|void
name|cuse_dev_set_priv0
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
name|cuse_dev_set_priv1
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
name|cuse_set_local
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|int
name|cuse_get_local
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
name|cuse_wait_and_process
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|cuse_dev_set_per_file_handle
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
name|cuse_dev_get_per_file_handle
parameter_list|(
name|struct
name|cuse_dev
modifier|*
parameter_list|)
function_decl|;
name|int
name|cuse_copy_out
parameter_list|(
specifier|const
name|void
modifier|*
name|src
parameter_list|,
name|void
modifier|*
name|user_dst
parameter_list|,
name|int
name|len
parameter_list|)
function_decl|;
name|int
name|cuse_copy_in
parameter_list|(
specifier|const
name|void
modifier|*
name|user_src
parameter_list|,
name|void
modifier|*
name|dst
parameter_list|,
name|int
name|len
parameter_list|)
function_decl|;
name|int
name|cuse_got_peer_signal
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|cuse_poll_wakeup
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|struct
name|cuse_dev
modifier|*
name|cuse_dev_get_current
parameter_list|(
name|int
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cuse_debug_level
decl_stmt|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _CUSE_H_ */
end_comment

end_unit

