begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2002, 2004 Networks Associates Technology, Inc.  * All rights reserved.  *  * This software was developed for the FreeBSD Project by Network Associates  * Laboratories, the Security Research Division of Network Associates, Inc.  * under DARPA/SPAWAR contract N66001-01-C-8035 ("CBOSS"), as part of the  * DARPA CHATS research program.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_UGIDFW_H
end_ifndef

begin_define
define|#
directive|define
name|_UGIDFW_H
end_define

begin_function_decl
name|__BEGIN_DECLS
name|int
name|bsde_rule_to_string
parameter_list|(
name|struct
name|mac_bsdextended_rule
modifier|*
name|rule
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|buflen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bsde_parse_mode
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|,
name|mode_t
modifier|*
name|mode
parameter_list|,
name|size_t
name|buflen
parameter_list|,
name|char
modifier|*
name|errstr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bsde_parse_rule
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|,
name|struct
name|mac_bsdextended_rule
modifier|*
name|rule
parameter_list|,
name|size_t
name|buflen
parameter_list|,
name|char
modifier|*
name|errstr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bsde_parse_rule_string
parameter_list|(
specifier|const
name|char
modifier|*
name|string
parameter_list|,
name|struct
name|mac_bsdextended_rule
modifier|*
name|rule
parameter_list|,
name|size_t
name|buflen
parameter_list|,
name|char
modifier|*
name|errstr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bsde_get_mib
parameter_list|(
specifier|const
name|char
modifier|*
name|string
parameter_list|,
name|int
modifier|*
name|name
parameter_list|,
name|size_t
modifier|*
name|namelen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bsde_get_rule_count
parameter_list|(
name|size_t
name|buflen
parameter_list|,
name|char
modifier|*
name|errstr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bsde_get_rule_slots
parameter_list|(
name|size_t
name|buflen
parameter_list|,
name|char
modifier|*
name|errstr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bsde_get_rule
parameter_list|(
name|int
name|rulenum
parameter_list|,
name|struct
name|mac_bsdextended_rule
modifier|*
name|rule
parameter_list|,
name|size_t
name|errlen
parameter_list|,
name|char
modifier|*
name|errstr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bsde_delete_rule
parameter_list|(
name|int
name|rulenum
parameter_list|,
name|size_t
name|buflen
parameter_list|,
name|char
modifier|*
name|errstr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bsde_set_rule
parameter_list|(
name|int
name|rulenum
parameter_list|,
name|struct
name|mac_bsdextended_rule
modifier|*
name|rule
parameter_list|,
name|size_t
name|buflen
parameter_list|,
name|char
modifier|*
name|errstr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bsde_add_rule
parameter_list|(
name|int
modifier|*
name|rulename
parameter_list|,
name|struct
name|mac_bsdextended_rule
modifier|*
name|rule
parameter_list|,
name|size_t
name|buflen
parameter_list|,
name|char
modifier|*
name|errstr
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

end_unit

