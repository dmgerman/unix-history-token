begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- lib/ReaderWriter/ELF/AArch64/AArch64ELFReader.h --------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                             The LLVM Linker
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLD_READER_WRITER_AARCH64_AARCH64_ELF_READER_H
end_ifndef

begin_define
define|#
directive|define
name|LLD_READER_WRITER_AARCH64_AARCH64_ELF_READER_H
end_define

begin_include
include|#
directive|include
file|"AArch64ELFFile.h"
end_include

begin_include
include|#
directive|include
file|"ELFReader.h"
end_include

begin_decl_stmt
name|namespace
name|lld
block|{
name|namespace
name|elf
block|{
typedef|typedef
name|llvm
operator|::
name|object
operator|::
name|ELFType
operator|<
name|llvm
operator|::
name|support
operator|::
name|little
operator|,
literal|2
operator|,
name|true
operator|>
name|AArch64ELFType
expr_stmt|;
struct|struct
name|AArch64DynamicFileCreateELFTraits
block|{
typedef|typedef
name|llvm
operator|::
name|ErrorOr
operator|<
name|std
operator|::
name|unique_ptr
operator|<
name|lld
operator|::
name|SharedLibraryFile
operator|>>
name|result_type
expr_stmt|;
name|template
operator|<
name|class
name|ELFT
operator|>
specifier|static
name|result_type
name|create
argument_list|(
argument|std::unique_ptr<llvm::MemoryBuffer> mb
argument_list|,
argument|AArch64LinkingContext&ctx
argument_list|)
block|{
return|return
name|lld
operator|::
name|elf
operator|::
name|AArch64DynamicFile
operator|<
name|ELFT
operator|>
operator|::
name|create
argument_list|(
name|std
operator|::
name|move
argument_list|(
name|mb
argument_list|)
argument_list|,
name|ctx
argument_list|)
return|;
block|}
block|}
struct|;
struct|struct
name|AArch64ELFFileCreateELFTraits
block|{
typedef|typedef
name|llvm
operator|::
name|ErrorOr
operator|<
name|std
operator|::
name|unique_ptr
operator|<
name|lld
operator|::
name|File
operator|>>
name|result_type
expr_stmt|;
name|template
operator|<
name|class
name|ELFT
operator|>
specifier|static
name|result_type
name|create
argument_list|(
argument|std::unique_ptr<llvm::MemoryBuffer> mb
argument_list|,
argument|AArch64LinkingContext&ctx
argument_list|)
block|{
return|return
name|lld
operator|::
name|elf
operator|::
name|AArch64ELFFile
operator|<
name|ELFT
operator|>
operator|::
name|create
argument_list|(
name|std
operator|::
name|move
argument_list|(
name|mb
argument_list|)
argument_list|,
name|ctx
argument_list|)
return|;
block|}
block|}
struct|;
name|class
name|AArch64ELFObjectReader
range|:
name|public
name|ELFObjectReader
operator|<
name|AArch64ELFType
decl_stmt|,
name|AArch64ELFFileCreateELFTraits
decl_stmt|,
name|AArch64LinkingContext
decl|>
block|{
name|public
label|:
name|AArch64ELFObjectReader
argument_list|(
name|AArch64LinkingContext
operator|&
name|ctx
argument_list|)
operator|:
name|ELFObjectReader
operator|<
name|AArch64ELFType
operator|,
name|AArch64ELFFileCreateELFTraits
operator|,
name|AArch64LinkingContext
operator|>
operator|(
name|ctx
operator|,
name|llvm
operator|::
name|ELF
operator|::
name|EM_AARCH64
operator|)
block|{}
block|}
empty_stmt|;
name|class
name|AArch64ELFDSOReader
range|:
name|public
name|ELFDSOReader
operator|<
name|AArch64ELFType
decl_stmt|,
name|AArch64DynamicFileCreateELFTraits
decl_stmt|,
name|AArch64LinkingContext
decl|>
block|{
name|public
label|:
name|AArch64ELFDSOReader
argument_list|(
name|AArch64LinkingContext
operator|&
name|ctx
argument_list|)
operator|:
name|ELFDSOReader
operator|<
name|AArch64ELFType
operator|,
name|AArch64DynamicFileCreateELFTraits
operator|,
name|AArch64LinkingContext
operator|>
operator|(
name|ctx
operator|,
name|llvm
operator|::
name|ELF
operator|::
name|EM_AARCH64
operator|)
block|{}
block|}
empty_stmt|;
block|}
comment|// namespace elf
block|}
end_decl_stmt

begin_comment
comment|// namespace lld
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// LLD_READER_WRITER_AARCH64_AARCH64_ELF_READER_H
end_comment

end_unit

