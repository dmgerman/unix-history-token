begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- lib/ReaderWriter/ELF/AArch64/AArch64TargetHandler.h ----------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                             The LLVM Linker
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLD_READER_WRITER_ELF_AARCH64_AARCH64_TARGET_HANDLER_H
end_ifndef

begin_define
define|#
directive|define
name|LLD_READER_WRITER_ELF_AARCH64_AARCH64_TARGET_HANDLER_H
end_define

begin_include
include|#
directive|include
file|"AArch64RelocationHandler.h"
end_include

begin_include
include|#
directive|include
file|"ELFReader.h"
end_include

begin_include
include|#
directive|include
file|"TargetLayout.h"
end_include

begin_include
include|#
directive|include
file|"lld/Core/Simple.h"
end_include

begin_decl_stmt
name|namespace
name|lld
block|{
name|namespace
name|elf
block|{
name|class
name|AArch64LinkingContext
decl_stmt|;
name|class
name|AArch64GOTSection
decl_stmt|;
name|class
name|AArch64TargetLayout
name|final
range|:
name|public
name|TargetLayout
operator|<
name|ELF64LE
operator|>
block|{
typedef|typedef
name|llvm
operator|::
name|object
operator|::
name|Elf_Shdr_Impl
operator|<
name|ELF64LE
operator|>
name|Elf_Shdr
expr_stmt|;
name|public
operator|:
name|AArch64TargetLayout
argument_list|(
name|ELFLinkingContext
operator|&
name|ctx
argument_list|)
decl_stmt|;
name|AtomSection
operator|<
name|ELF64LE
operator|>
operator|*
name|createSection
argument_list|(
argument|StringRef name
argument_list|,
argument|int32_t type
argument_list|,
argument|DefinedAtom::ContentPermissions permissions
argument_list|,
argument|TargetLayout<ELF64LE>::SectionOrder order
argument_list|)
name|override
expr_stmt|;
specifier|const
name|std
operator|::
name|vector
operator|<
name|AArch64GOTSection
operator|*
operator|>
operator|&
name|getGOTSections
argument_list|()
specifier|const
block|{
return|return
name|_gotSections
return|;
block|}
name|uint64_t
name|getTPOffset
parameter_list|()
block|{
name|std
operator|::
name|call_once
argument_list|(
name|_tpOffOnce
argument_list|,
index|[
name|this
index|]
operator|(
operator|)
block|{
for|for
control|(
specifier|const
specifier|auto
modifier|&
name|phdr
range|:
operator|*
name|_programHeader
control|)
block|{
if|if
condition|(
name|phdr
operator|->
name|p_type
operator|==
name|llvm
operator|::
name|ELF
operator|::
name|PT_TLS
condition|)
block|{
name|_tpOff
operator|=
name|llvm
operator|::
name|RoundUpToAlignment
argument_list|(
name|TCB_SIZE
argument_list|,
name|phdr
operator|->
name|p_align
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
name|assert
argument_list|(
name|_tpOff
operator|!=
literal|0
operator|&&
literal|"TLS segment not found"
argument_list|)
expr_stmt|;
block|}
block|)
function|;
return|return
name|_tpOff
return|;
block|}
name|private
label|:
enum|enum
block|{
name|TCB_SIZE
init|=
literal|16
block|,   }
enum|;
name|private
label|:
name|std
operator|::
name|vector
operator|<
name|AArch64GOTSection
operator|*
operator|>
name|_gotSections
expr_stmt|;
name|uint64_t
name|_tpOff
init|=
literal|0
decl_stmt|;
name|std
operator|::
name|once_flag
name|_tpOffOnce
expr_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_decl_stmt
name|class
name|AArch64TargetHandler
name|final
range|:
name|public
name|TargetHandler
block|{
name|public
operator|:
name|AArch64TargetHandler
argument_list|(
name|AArch64LinkingContext
operator|&
name|ctx
argument_list|)
block|;
specifier|const
name|TargetRelocationHandler
operator|&
name|getRelocationHandler
argument_list|()
specifier|const
name|override
block|{
return|return
operator|*
name|_relocationHandler
return|;
block|}
name|std
operator|::
name|unique_ptr
operator|<
name|Reader
operator|>
name|getObjReader
argument_list|()
name|override
block|{
return|return
name|llvm
operator|::
name|make_unique
operator|<
name|ELFReader
operator|<
name|ELFFile
operator|<
name|ELF64LE
operator|>>>
operator|(
name|_ctx
operator|)
return|;
block|}
name|std
operator|::
name|unique_ptr
operator|<
name|Reader
operator|>
name|getDSOReader
argument_list|()
name|override
block|{
return|return
name|llvm
operator|::
name|make_unique
operator|<
name|ELFReader
operator|<
name|DynamicFile
operator|<
name|ELF64LE
operator|>>>
operator|(
name|_ctx
operator|)
return|;
block|}
name|std
operator|::
name|unique_ptr
operator|<
name|Writer
operator|>
name|getWriter
argument_list|()
name|override
block|;
name|private
operator|:
name|AArch64LinkingContext
operator|&
name|_ctx
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|AArch64TargetLayout
operator|>
name|_targetLayout
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|AArch64TargetRelocationHandler
operator|>
name|_relocationHandler
block|; }
decl_stmt|;
end_decl_stmt

begin_comment
unit|}
comment|// end namespace elf
end_comment

begin_comment
unit|}
comment|// end namespace lld
end_comment

begin_endif
endif|#
directive|endif
end_endif

end_unit

