begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- lib/ReaderWriter/ELF/X86_64/X86_64TargetHandler.h ------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                             The LLVM Linker
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLD_READER_WRITER_ELF_X86_64_X86_64_TARGET_HANDLER_H
end_ifndef

begin_define
define|#
directive|define
name|LLD_READER_WRITER_ELF_X86_64_X86_64_TARGET_HANDLER_H
end_define

begin_include
include|#
directive|include
file|"DefaultTargetHandler.h"
end_include

begin_include
include|#
directive|include
file|"TargetLayout.h"
end_include

begin_include
include|#
directive|include
file|"X86_64ELFFile.h"
end_include

begin_include
include|#
directive|include
file|"X86_64ELFReader.h"
end_include

begin_include
include|#
directive|include
file|"X86_64LinkingContext.h"
end_include

begin_include
include|#
directive|include
file|"X86_64RelocationHandler.h"
end_include

begin_include
include|#
directive|include
file|"lld/Core/Simple.h"
end_include

begin_decl_stmt
name|namespace
name|lld
block|{
name|namespace
name|elf
block|{
name|class
name|X86_64TargetLayout
range|:
name|public
name|TargetLayout
operator|<
name|X86_64ELFType
operator|>
block|{
name|public
operator|:
name|X86_64TargetLayout
argument_list|(
name|X86_64LinkingContext
operator|&
name|context
argument_list|)
operator|:
name|TargetLayout
argument_list|(
argument|context
argument_list|)
block|{}
name|void
name|finalizeOutputSectionLayout
argument_list|()
name|override
block|{
name|sortOutputSectionByPriority
argument_list|(
literal|".init_array"
argument_list|,
literal|".init_array"
argument_list|)
block|;
name|sortOutputSectionByPriority
argument_list|(
literal|".fini_array"
argument_list|,
literal|".fini_array"
argument_list|)
block|;   }
block|}
decl_stmt|;
name|class
name|X86_64TargetHandler
range|:
name|public
name|DefaultTargetHandler
operator|<
name|X86_64ELFType
operator|>
block|{
name|public
operator|:
name|X86_64TargetHandler
argument_list|(
name|X86_64LinkingContext
operator|&
name|context
argument_list|)
block|;
name|X86_64TargetLayout
operator|&
name|getTargetLayout
argument_list|()
name|override
block|{
return|return
operator|*
operator|(
name|_x86_64TargetLayout
operator|.
name|get
argument_list|()
operator|)
return|;
block|}
name|void
name|registerRelocationNames
argument_list|(
argument|Registry&registry
argument_list|)
name|override
block|;
specifier|const
name|X86_64TargetRelocationHandler
operator|&
name|getRelocationHandler
argument_list|()
specifier|const
name|override
block|{
return|return
operator|*
operator|(
name|_x86_64RelocationHandler
operator|.
name|get
argument_list|()
operator|)
return|;
block|}
name|std
operator|::
name|unique_ptr
operator|<
name|Reader
operator|>
name|getObjReader
argument_list|()
name|override
block|{
return|return
name|std
operator|::
name|unique_ptr
operator|<
name|Reader
operator|>
operator|(
name|new
name|X86_64ELFObjectReader
argument_list|(
name|_context
argument_list|)
operator|)
return|;
block|}
name|std
operator|::
name|unique_ptr
operator|<
name|Reader
operator|>
name|getDSOReader
argument_list|()
name|override
block|{
return|return
name|std
operator|::
name|unique_ptr
operator|<
name|Reader
operator|>
operator|(
name|new
name|X86_64ELFDSOReader
argument_list|(
name|_context
argument_list|)
operator|)
return|;
block|}
name|std
operator|::
name|unique_ptr
operator|<
name|Writer
operator|>
name|getWriter
argument_list|()
name|override
block|;
name|protected
operator|:
specifier|static
specifier|const
name|Registry
operator|::
name|KindStrings
name|kindStrings
index|[]
block|;
name|X86_64LinkingContext
operator|&
name|_context
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|X86_64TargetLayout
operator|>
name|_x86_64TargetLayout
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|X86_64TargetRelocationHandler
operator|>
name|_x86_64RelocationHandler
block|; }
decl_stmt|;
block|}
comment|// end namespace elf
block|}
end_decl_stmt

begin_comment
comment|// end namespace lld
end_comment

begin_endif
endif|#
directive|endif
end_endif

end_unit

