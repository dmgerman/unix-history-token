begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- lib/ReaderWriter/ELF/MipsELFReader.h -------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                             The LLVM Linker
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLD_READER_WRITER_ELF_MIPS_MIPS_ELF_READER_H
end_ifndef

begin_define
define|#
directive|define
name|LLD_READER_WRITER_ELF_MIPS_MIPS_ELF_READER_H
end_define

begin_include
include|#
directive|include
file|"ELFReader.h"
end_include

begin_include
include|#
directive|include
file|"MipsELFFile.h"
end_include

begin_include
include|#
directive|include
file|"MipsELFFlagsMerger.h"
end_include

begin_include
include|#
directive|include
file|"MipsLinkingContext.h"
end_include

begin_decl_stmt
name|namespace
name|lld
block|{
name|namespace
name|elf
block|{
struct|struct
name|MipsELFFileCreateTraits
block|{
typedef|typedef
name|llvm
operator|::
name|ErrorOr
operator|<
name|std
operator|::
name|unique_ptr
operator|<
name|lld
operator|::
name|File
operator|>>
name|result_type
expr_stmt|;
name|template
operator|<
name|class
name|ELFT
operator|>
specifier|static
name|result_type
name|create
argument_list|(
argument|std::unique_ptr<llvm::MemoryBuffer> mb
argument_list|,
argument|MipsLinkingContext&ctx
argument_list|)
block|{
return|return
name|lld
operator|::
name|elf
operator|::
name|MipsELFFile
operator|<
name|ELFT
operator|>
operator|::
name|create
argument_list|(
name|std
operator|::
name|move
argument_list|(
name|mb
argument_list|)
argument_list|,
name|ctx
argument_list|)
return|;
block|}
block|}
struct|;
struct|struct
name|MipsDynamicFileCreateELFTraits
block|{
typedef|typedef
name|llvm
operator|::
name|ErrorOr
operator|<
name|std
operator|::
name|unique_ptr
operator|<
name|lld
operator|::
name|SharedLibraryFile
operator|>>
name|result_type
expr_stmt|;
name|template
operator|<
name|class
name|ELFT
operator|>
specifier|static
name|result_type
name|create
argument_list|(
argument|std::unique_ptr<llvm::MemoryBuffer> mb
argument_list|,
argument|MipsLinkingContext&ctx
argument_list|)
block|{
return|return
name|lld
operator|::
name|elf
operator|::
name|MipsDynamicFile
operator|<
name|ELFT
operator|>
operator|::
name|create
argument_list|(
name|std
operator|::
name|move
argument_list|(
name|mb
argument_list|)
argument_list|,
name|ctx
argument_list|)
return|;
block|}
block|}
struct|;
name|template
operator|<
name|class
name|ELFT
operator|>
name|class
name|MipsELFObjectReader
operator|:
name|public
name|ELFObjectReader
operator|<
name|ELFT
operator|,
name|MipsELFFileCreateTraits
operator|,
name|MipsLinkingContext
operator|>
block|{
typedef|typedef
name|ELFObjectReader
operator|<
name|ELFT
operator|,
name|MipsELFFileCreateTraits
operator|,
name|MipsLinkingContext
operator|>
name|BaseReaderType
expr_stmt|;
name|public
operator|:
name|MipsELFObjectReader
argument_list|(
name|MipsLinkingContext
operator|&
name|ctx
argument_list|)
operator|:
name|BaseReaderType
argument_list|(
name|ctx
argument_list|,
name|llvm
operator|::
name|ELF
operator|::
name|EM_MIPS
argument_list|)
operator|,
name|_flagMerger
argument_list|(
argument|ctx.getELFFlagsMerger()
argument_list|)
block|{}
name|std
operator|::
name|error_code
name|loadFile
argument_list|(
argument|std::unique_ptr<MemoryBuffer> mb
argument_list|,
argument|const Registry&registry
argument_list|,
argument|std::vector<std::unique_ptr<File>>&result
argument_list|)
specifier|const
name|override
block|{
name|auto
operator|&
name|hdr
operator|=
operator|*
name|this
operator|->
name|elfHeader
argument_list|(
operator|*
name|mb
argument_list|)
block|;
if|if
condition|(
name|std
operator|::
name|error_code
name|ec
operator|=
name|_flagMerger
operator|.
name|merge
argument_list|(
name|hdr
operator|.
name|getFileClass
argument_list|()
argument_list|,
name|hdr
operator|.
name|e_flags
argument_list|)
condition|)
return|return
name|ec
return|;
return|return
name|BaseReaderType
operator|::
name|loadFile
argument_list|(
name|std
operator|::
name|move
argument_list|(
name|mb
argument_list|)
argument_list|,
name|registry
argument_list|,
name|result
argument_list|)
return|;
block|}
name|private
label|:
name|MipsELFFlagsMerger
modifier|&
name|_flagMerger
decl_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|template
operator|<
name|class
name|ELFT
operator|>
name|class
name|MipsELFDSOReader
operator|:
name|public
name|ELFDSOReader
operator|<
name|ELFT
operator|,
name|MipsDynamicFileCreateELFTraits
operator|,
name|MipsLinkingContext
operator|>
block|{
typedef|typedef
name|ELFDSOReader
operator|<
name|ELFT
operator|,
name|MipsDynamicFileCreateELFTraits
operator|,
name|MipsLinkingContext
operator|>
name|BaseReaderType
expr_stmt|;
name|public
operator|:
name|MipsELFDSOReader
argument_list|(
name|MipsLinkingContext
operator|&
name|ctx
argument_list|)
operator|:
name|BaseReaderType
argument_list|(
name|ctx
argument_list|,
name|llvm
operator|::
name|ELF
operator|::
name|EM_MIPS
argument_list|)
operator|,
name|_flagMerger
argument_list|(
argument|ctx.getELFFlagsMerger()
argument_list|)
block|{}
name|std
operator|::
name|error_code
name|loadFile
argument_list|(
argument|std::unique_ptr<MemoryBuffer> mb
argument_list|,
argument|const Registry&registry
argument_list|,
argument|std::vector<std::unique_ptr<File>>&result
argument_list|)
specifier|const
name|override
block|{
name|auto
operator|&
name|hdr
operator|=
operator|*
name|this
operator|->
name|elfHeader
argument_list|(
operator|*
name|mb
argument_list|)
block|;
if|if
condition|(
name|std
operator|::
name|error_code
name|ec
operator|=
name|_flagMerger
operator|.
name|merge
argument_list|(
name|hdr
operator|.
name|getFileClass
argument_list|()
argument_list|,
name|hdr
operator|.
name|e_flags
argument_list|)
condition|)
return|return
name|ec
return|;
end_expr_stmt

begin_return
return|return
name|BaseReaderType
operator|::
name|loadFile
argument_list|(
name|std
operator|::
name|move
argument_list|(
name|mb
argument_list|)
argument_list|,
name|registry
argument_list|,
name|result
argument_list|)
return|;
end_return

begin_decl_stmt
unit|}  private:
name|MipsELFFlagsMerger
modifier|&
name|_flagMerger
decl_stmt|;
end_decl_stmt

begin_comment
unit|};  }
comment|// namespace elf
end_comment

begin_comment
unit|}
comment|// namespace lld
end_comment

begin_endif
endif|#
directive|endif
end_endif

end_unit

