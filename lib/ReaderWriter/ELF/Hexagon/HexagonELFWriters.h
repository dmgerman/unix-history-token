begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- lib/ReaderWriter/ELF/Hexagon/HexagonELFWriters.h -------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                             The LLVM Linker
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HEXAGON_ELF_WRITERS_H
end_ifndef

begin_define
define|#
directive|define
name|HEXAGON_ELF_WRITERS_H
end_define

begin_include
include|#
directive|include
file|"HexagonLinkingContext.h"
end_include

begin_include
include|#
directive|include
file|"OutputELFWriter.h"
end_include

begin_decl_stmt
name|namespace
name|lld
block|{
name|namespace
name|elf
block|{
name|template
operator|<
name|class
name|ELFT
operator|>
name|class
name|HexagonTargetLayout
expr_stmt|;
name|template
operator|<
name|typename
name|ELFT
operator|>
name|class
name|HexagonELFWriter
block|{
name|public
operator|:
name|HexagonELFWriter
argument_list|(
name|HexagonLinkingContext
operator|&
name|context
argument_list|,
name|HexagonTargetLayout
operator|<
name|ELFT
operator|>
operator|&
name|targetLayout
argument_list|)
operator|:
name|_hexagonLinkingContext
argument_list|(
name|context
argument_list|)
block|,
name|_hexagonTargetLayout
argument_list|(
argument|targetLayout
argument_list|)
block|{}
name|protected
operator|:
name|bool
name|setELFHeader
argument_list|(
argument|ELFHeader<ELFT>&elfHeader
argument_list|)
block|{
name|elfHeader
operator|.
name|e_ident
argument_list|(
name|llvm
operator|::
name|ELF
operator|::
name|EI_VERSION
argument_list|,
literal|1
argument_list|)
block|;
name|elfHeader
operator|.
name|e_ident
argument_list|(
name|llvm
operator|::
name|ELF
operator|::
name|EI_OSABI
argument_list|,
literal|0
argument_list|)
block|;
name|elfHeader
operator|.
name|e_version
argument_list|(
literal|1
argument_list|)
block|;
name|elfHeader
operator|.
name|e_flags
argument_list|(
literal|0x3
argument_list|)
block|;
return|return
name|true
return|;
block|}
name|void
name|finalizeHexagonRuntimeAtomValues
argument_list|()
block|{
if|if
condition|(
name|_hexagonLinkingContext
operator|.
name|isDynamic
argument_list|()
condition|)
block|{
name|auto
name|gotAtomIter
init|=
name|_hexagonTargetLayout
operator|.
name|findAbsoluteAtom
argument_list|(
literal|"_GLOBAL_OFFSET_TABLE_"
argument_list|)
decl_stmt|;
name|auto
name|gotpltSection
init|=
name|_hexagonTargetLayout
operator|.
name|findOutputSection
argument_list|(
literal|".got.plt"
argument_list|)
decl_stmt|;
if|if
condition|(
name|gotpltSection
condition|)
operator|(
operator|*
name|gotAtomIter
operator|)
operator|->
name|_virtualAddr
operator|=
name|gotpltSection
operator|->
name|virtualAddr
argument_list|()
expr_stmt|;
else|else
operator|(
operator|*
name|gotAtomIter
operator|)
operator|->
name|_virtualAddr
operator|=
literal|0
expr_stmt|;
name|auto
name|dynamicAtomIter
init|=
name|_hexagonTargetLayout
operator|.
name|findAbsoluteAtom
argument_list|(
literal|"_DYNAMIC"
argument_list|)
decl_stmt|;
name|auto
name|dynamicSection
init|=
name|_hexagonTargetLayout
operator|.
name|findOutputSection
argument_list|(
literal|".dynamic"
argument_list|)
decl_stmt|;
if|if
condition|(
name|dynamicSection
condition|)
operator|(
operator|*
name|dynamicAtomIter
operator|)
operator|->
name|_virtualAddr
operator|=
name|dynamicSection
operator|->
name|virtualAddr
argument_list|()
expr_stmt|;
else|else
operator|(
operator|*
name|dynamicAtomIter
operator|)
operator|->
name|_virtualAddr
operator|=
literal|0
expr_stmt|;
block|}
block|}
name|private
operator|:
name|HexagonLinkingContext
operator|&
name|_hexagonLinkingContext
block|;
name|HexagonTargetLayout
operator|<
name|ELFT
operator|>
operator|&
name|_hexagonTargetLayout
block|; }
expr_stmt|;
block|}
comment|// elf
block|}
end_decl_stmt

begin_comment
comment|// lld
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// HEXAGON_ELF_WRITERS_H
end_comment

end_unit

