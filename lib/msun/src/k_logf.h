begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * ====================================================  * Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  *  * Developed at SunPro, a Sun Microsystems, Inc. business.  * Permission to use, copy, modify, and distribute this  * software is freely granted, provided that this notice  * is preserved.  * ====================================================  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/*  * float version of __kernel_log(x). See k_log.c for details.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|float
comment|/* |(log(1+s)-log(1-s))/s - Lg(s)|< 2**-34.24 (~[-4.95e-11, 4.97e-11]). */
name|Lg1
init|=
literal|0xaaaaaa
literal|.0p
operator|-
literal|24
decl_stmt|,
comment|/* 0.66666662693 */
name|Lg2
init|=
literal|0xccce13
literal|.0p
operator|-
literal|25
decl_stmt|,
comment|/* 0.40000972152 */
name|Lg3
init|=
literal|0x91e9ee
literal|.0p
operator|-
literal|25
decl_stmt|,
comment|/* 0.28498786688 */
name|Lg4
init|=
literal|0xf89e26
literal|.0p
operator|-
literal|26
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* 0.24279078841 */
end_comment

begin_function
specifier|static
specifier|inline
name|float
name|__kernel_logf
parameter_list|(
name|float
name|x
parameter_list|)
block|{
name|float
name|hfsq
decl_stmt|,
name|f
decl_stmt|,
name|s
decl_stmt|,
name|z
decl_stmt|,
name|R
decl_stmt|,
name|w
decl_stmt|,
name|t1
decl_stmt|,
name|t2
decl_stmt|;
name|int32_t
name|ix
decl_stmt|,
name|i
decl_stmt|,
name|j
decl_stmt|;
name|GET_FLOAT_WORD
argument_list|(
name|ix
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|f
operator|=
name|x
operator|-
operator|(
name|float
operator|)
literal|1.0
expr_stmt|;
if|if
condition|(
operator|(
literal|0x007fffff
operator|&
operator|(
literal|0x8000
operator|+
name|ix
operator|)
operator|)
operator|<
literal|0xc000
condition|)
block|{
comment|/* -2**-9<= f< 2**-9 */
if|if
condition|(
name|f
operator|==
literal|0.0f
condition|)
return|return
literal|0.0f
return|;
return|return
name|f
operator|*
name|f
operator|*
operator|(
operator|(
name|float
operator|)
literal|0.33333333333333333
operator|*
name|f
operator|-
operator|(
name|float
operator|)
literal|0.5
operator|)
return|;
block|}
name|s
operator|=
name|f
operator|/
operator|(
operator|(
name|float
operator|)
literal|2.0
operator|+
name|f
operator|)
expr_stmt|;
name|z
operator|=
name|s
operator|*
name|s
expr_stmt|;
name|ix
operator|&=
literal|0x007fffff
expr_stmt|;
name|i
operator|=
name|ix
operator|-
operator|(
literal|0x6147a
operator|<<
literal|3
operator|)
expr_stmt|;
name|w
operator|=
name|z
operator|*
name|z
expr_stmt|;
name|j
operator|=
operator|(
literal|0x6b851
operator|<<
literal|3
operator|)
operator|-
name|ix
expr_stmt|;
name|t1
operator|=
name|w
operator|*
operator|(
name|Lg2
operator|+
name|w
operator|*
name|Lg4
operator|)
expr_stmt|;
name|t2
operator|=
name|z
operator|*
operator|(
name|Lg1
operator|+
name|w
operator|*
name|Lg3
operator|)
expr_stmt|;
name|i
operator||=
name|j
expr_stmt|;
name|R
operator|=
name|t2
operator|+
name|t1
expr_stmt|;
if|if
condition|(
name|i
operator|>
literal|0
condition|)
block|{
name|hfsq
operator|=
operator|(
name|float
operator|)
literal|0.5
operator|*
name|f
operator|*
name|f
expr_stmt|;
return|return
name|s
operator|*
operator|(
name|hfsq
operator|+
name|R
operator|)
operator|-
name|hfsq
return|;
block|}
else|else
block|{
return|return
name|s
operator|*
operator|(
name|R
operator|-
name|f
operator|)
return|;
block|}
block|}
end_function

end_unit

