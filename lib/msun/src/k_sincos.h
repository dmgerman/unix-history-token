begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * ====================================================  * Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  *  * Developed at SunSoft, a Sun Microsystems, Inc. business.  * Permission to use, copy, modify, and distribute this  * software is freely granted, provided that this notice   * is preserved.  * ====================================================  *   * k_sin.c and k_cos.c merged by Steven G. Kargl.  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_decl_stmt
specifier|static
specifier|const
name|double
name|S1
init|=
operator|-
literal|1.66666666666666324348e-01
decl_stmt|,
comment|/* 0xBFC55555, 0x55555549 */
name|S2
init|=
literal|8.33333333332248946124e-03
decl_stmt|,
comment|/* 0x3F811111, 0x1110F8A6 */
name|S3
init|=
operator|-
literal|1.98412698298579493134e-04
decl_stmt|,
comment|/* 0xBF2A01A0, 0x19C161D5 */
name|S4
init|=
literal|2.75573137070700676789e-06
decl_stmt|,
comment|/* 0x3EC71DE3, 0x57B1FE7D */
name|S5
init|=
operator|-
literal|2.50507602534068634195e-08
decl_stmt|,
comment|/* 0xBE5AE5E6, 0x8A2B9CEB */
name|S6
init|=
literal|1.58969099521155010221e-10
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* 0x3DE5D93A, 0x5ACFD57C */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|double
name|C1
init|=
literal|4.16666666666666019037e-02
decl_stmt|,
comment|/* 0x3FA55555, 0x5555554C */
name|C2
init|=
operator|-
literal|1.38888888888741095749e-03
decl_stmt|,
comment|/* 0xBF56C16C, 0x16C15177 */
name|C3
init|=
literal|2.48015872894767294178e-05
decl_stmt|,
comment|/* 0x3EFA01A0, 0x19CB1590 */
name|C4
init|=
operator|-
literal|2.75573143513906633035e-07
decl_stmt|,
comment|/* 0xBE927E4F, 0x809C52AD */
name|C5
init|=
literal|2.08757232129817482790e-09
decl_stmt|,
comment|/* 0x3E21EE9E, 0xBDB4B1C4 */
name|C6
init|=
operator|-
literal|1.13596475577881948265e-11
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* 0xBDA8FAE9, 0xBE8838D4 */
end_comment

begin_function
specifier|static
specifier|inline
name|void
name|__kernel_sincos
parameter_list|(
name|double
name|x
parameter_list|,
name|double
name|y
parameter_list|,
name|int
name|iy
parameter_list|,
name|double
modifier|*
name|sn
parameter_list|,
name|double
modifier|*
name|cs
parameter_list|)
block|{
name|double
name|hz
decl_stmt|,
name|r
decl_stmt|,
name|v
decl_stmt|,
name|w
decl_stmt|,
name|z
decl_stmt|;
name|z
operator|=
name|x
operator|*
name|x
expr_stmt|;
name|w
operator|=
name|z
operator|*
name|z
expr_stmt|;
name|r
operator|=
name|S2
operator|+
name|z
operator|*
operator|(
name|S3
operator|+
name|z
operator|*
name|S4
operator|)
operator|+
name|z
operator|*
name|w
operator|*
operator|(
name|S5
operator|+
name|z
operator|*
name|S6
operator|)
expr_stmt|;
name|v
operator|=
name|z
operator|*
name|x
expr_stmt|;
if|if
condition|(
name|iy
operator|==
literal|0
condition|)
operator|*
name|sn
operator|=
name|x
operator|+
name|v
operator|*
operator|(
name|S1
operator|+
name|z
operator|*
name|r
operator|)
expr_stmt|;
else|else
operator|*
name|sn
operator|=
name|x
operator|-
operator|(
operator|(
name|z
operator|*
operator|(
name|y
operator|/
literal|2
operator|-
name|v
operator|*
name|r
operator|)
operator|-
name|y
operator|)
operator|-
name|v
operator|*
name|S1
operator|)
expr_stmt|;
name|r
operator|=
name|z
operator|*
operator|(
name|C1
operator|+
name|z
operator|*
operator|(
name|C2
operator|+
name|z
operator|*
name|C3
operator|)
operator|)
operator|+
name|w
operator|*
name|w
operator|*
operator|(
name|C4
operator|+
name|z
operator|*
operator|(
name|C5
operator|+
name|z
operator|*
name|C6
operator|)
operator|)
expr_stmt|;
name|hz
operator|=
name|z
operator|/
literal|2
expr_stmt|;
name|w
operator|=
literal|1
operator|-
name|hz
expr_stmt|;
operator|*
name|cs
operator|=
name|w
operator|+
operator|(
operator|(
operator|(
literal|1
operator|-
name|w
operator|)
operator|-
name|hz
operator|)
operator|+
operator|(
name|z
operator|*
name|r
operator|-
name|x
operator|*
name|y
operator|)
operator|)
expr_stmt|;
block|}
end_function

end_unit

