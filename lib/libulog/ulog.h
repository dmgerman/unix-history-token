begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2009 Ed Schouten<ed@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_ULOG_H_
end_ifndef

begin_define
define|#
directive|define
name|_ULOG_H_
end_define

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_include
include|#
directive|include
file|<sys/_timeval.h>
end_include

begin_comment
comment|/*  * libulog.  *  * This library is provided as a migratory tool towards<utmpx.h>.  We  * cannot yet implement<utmpx.h>, because our on-disk file format lacks  * various fields.<utmpx.h> also has some shortcomings.  Ideally we  * want to allow logging of user login records generated by unprivileged  * processes as well, provided that they hold a file descriptor to a  * pseudo-terminal master device.  *  * Unlike struct utmpx, the buffers containing the strings are not  * stored inside struct ulog_utmpx itself.  Processes should never  * handcraft these structures anyway.  *  * This library (or at least parts of it) will hopefully deprecate over  * time, when we provide the<utmpx.h> API.  */
end_comment

begin_define
define|#
directive|define
name|_UTX_USERDISPSIZE
value|16
end_define

begin_define
define|#
directive|define
name|_UTX_LINEDISPSIZE
value|8
end_define

begin_define
define|#
directive|define
name|_UTX_HOSTDISPSIZE
value|16
end_define

begin_struct
struct|struct
name|ulog_utmpx
block|{
name|char
modifier|*
name|ut_user
decl_stmt|;
if|#
directive|if
literal|0
block|char		*ut_id;
endif|#
directive|endif
name|char
modifier|*
name|ut_line
decl_stmt|;
name|char
modifier|*
name|ut_host
decl_stmt|;
if|#
directive|if
literal|0
block|pid_t		 ut_pid;
endif|#
directive|endif
name|short
name|ut_type
decl_stmt|;
define|#
directive|define
name|EMPTY
value|0
if|#
directive|if
literal|0
define|#
directive|define
name|BOOT_TIME
value|1
endif|#
directive|endif
define|#
directive|define
name|OLD_TIME
value|2
define|#
directive|define
name|NEW_TIME
value|3
define|#
directive|define
name|USER_PROCESS
value|4
if|#
directive|if
literal|0
define|#
directive|define
name|INIT_PROCESS
value|5
define|#
directive|define
name|LOGIN_PROCESS
value|6
endif|#
directive|endif
define|#
directive|define
name|DEAD_PROCESS
value|7
define|#
directive|define
name|SHUTDOWN_TIME
value|8
define|#
directive|define
name|REBOOT_TIME
value|9
name|struct
name|timeval
name|ut_tv
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|__BEGIN_DECLS
name|void
name|ulog_endutxent
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ulog_utmpx
modifier|*
name|ulog_getutxent
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_if
if|#
directive|if
literal|0
end_if

begin_endif
unit|struct ulog_utmpx *ulog_getutxid(const struct ulog_utmpx *id); struct ulog_utmpx *ulog_getutxline(const struct ulog_utmpx *line); struct ulog_utmpx *ulog_pututxline(const struct ulog_utmpx *utmpx);
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|ulog_setutxent
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ulog_login
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ulog_login_pseudo
parameter_list|(
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ulog_logout
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ulog_logout_pseudo
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_ULOG_H_ */
end_comment

end_unit

