begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|_SKEY_H_
end_ifndef

begin_define
define|#
directive|define
name|_SKEY_H_
end_define

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_comment
comment|/* Server-side data structure for reading keys file during login */
end_comment

begin_struct
struct|struct
name|skey
block|{
name|FILE
modifier|*
name|keyfile
decl_stmt|;
name|char
name|buf
index|[
literal|256
index|]
decl_stmt|;
name|char
modifier|*
name|logname
decl_stmt|;
name|int
name|n
decl_stmt|;
name|char
modifier|*
name|seed
decl_stmt|;
name|char
modifier|*
name|val
decl_stmt|;
name|long
name|recstart
decl_stmt|;
comment|/*needed so reread of buffer is efficient*/
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|_SKEY_INTERNAL
end_ifdef

begin_comment
comment|/* Client-side structure for scanning data stream for challenge */
end_comment

begin_struct
struct|struct
name|mc
block|{
name|char
name|buf
index|[
literal|256
index|]
decl_stmt|;
name|int
name|skip
decl_stmt|;
name|int
name|cnt
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|atob8
value|_sk_atob8
end_define

begin_define
define|#
directive|define
name|btoa8
value|_sk_btoa8
end_define

begin_define
define|#
directive|define
name|btoe
value|_sk_btoe
end_define

begin_define
define|#
directive|define
name|etob
value|_sk_etob
end_define

begin_define
define|#
directive|define
name|f
value|_sk_f
end_define

begin_define
define|#
directive|define
name|htoi
value|_sk_htoi
end_define

begin_define
define|#
directive|define
name|keycrunch
value|_sk_keycrunch
end_define

begin_define
define|#
directive|define
name|put8
value|_sk_put8
end_define

begin_define
define|#
directive|define
name|readpass
value|_sk_readpass
end_define

begin_define
define|#
directive|define
name|rip
value|_sk_rip
end_define

begin_define
define|#
directive|define
name|sevenbit
value|_sk_sevenbit
end_define

begin_decl_stmt
name|void
name|f
name|__P
argument_list|(
operator|(
name|char
operator|*
name|x
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|keycrunch
name|__P
argument_list|(
operator|(
name|char
operator|*
name|result
operator|,
name|char
operator|*
name|seed
operator|,
name|char
operator|*
name|passwd
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|btoe
name|__P
argument_list|(
operator|(
name|char
operator|*
name|engout
operator|,
name|char
operator|*
name|c
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|put8
name|__P
argument_list|(
operator|(
name|char
operator|*
name|out
operator|,
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atob8
name|__P
argument_list|(
operator|(
name|char
operator|*
name|out
operator|,
name|char
operator|*
name|in
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|btoa8
name|__P
argument_list|(
operator|(
name|char
operator|*
name|out
operator|,
name|char
operator|*
name|in
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|htoi
name|__P
argument_list|(
operator|(
name|char
name|c
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|etob
name|__P
argument_list|(
operator|(
name|char
operator|*
name|out
operator|,
name|char
operator|*
name|e
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|sevenbit
name|__P
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|readpass
name|__P
argument_list|(
operator|(
name|char
operator|*
name|buf
operator|,
name|int
name|n
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|rip
name|__P
argument_list|(
operator|(
name|char
operator|*
name|buf
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SKEY_INTERNAL */
end_comment

begin_comment
comment|/* Simplified application programming interface. */
end_comment

begin_include
include|#
directive|include
file|<pwd.h>
end_include

begin_decl_stmt
name|int
name|skeylookup
name|__P
argument_list|(
operator|(
expr|struct
name|skey
operator|*
name|mp
operator|,
name|char
operator|*
name|name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|skeyverify
name|__P
argument_list|(
operator|(
expr|struct
name|skey
operator|*
name|mp
operator|,
name|char
operator|*
name|response
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|skeychallenge
name|__P
argument_list|(
operator|(
expr|struct
name|skey
operator|*
name|mp
operator|,
name|char
operator|*
name|name
operator|,
name|char
operator|*
name|challenge
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|skeyinfo
name|__P
argument_list|(
operator|(
expr|struct
name|skey
operator|*
name|mp
operator|,
name|char
operator|*
name|name
operator|,
name|char
operator|*
name|ss
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|skeyaccess
name|__P
argument_list|(
operator|(
name|char
operator|*
name|user
operator|,
name|char
operator|*
name|port
operator|,
name|char
operator|*
name|host
operator|,
name|char
operator|*
name|addr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|skey_getpass
name|__P
argument_list|(
operator|(
name|char
operator|*
name|prompt
operator|,
expr|struct
name|passwd
operator|*
name|pwd
operator|,
name|int
name|pwok
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|skey_crypt
name|__P
argument_list|(
operator|(
name|char
operator|*
name|pp
operator|,
name|char
operator|*
name|salt
operator|,
expr|struct
name|passwd
operator|*
name|pwd
operator|,
name|int
name|pwok
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SKEY_H_ */
end_comment

end_unit

