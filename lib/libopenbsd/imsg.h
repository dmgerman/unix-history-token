begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$OpenBSD: imsg.h,v 1.3 2013/12/26 17:32:33 eric Exp $	*/
end_comment

begin_comment
comment|/*  * Copyright (c) 2006, 2007 Pierre-Yves Ritschard<pyr@openbsd.org>  * Copyright (c) 2006, 2007, 2008 Reyk Floeter<reyk@openbsd.org>  * Copyright (c) 2003, 2004 Henning Brauer<henning@openbsd.org>  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_IMSG_H_
end_ifndef

begin_define
define|#
directive|define
name|_IMSG_H_
end_define

begin_define
define|#
directive|define
name|IBUF_READ_SIZE
value|65535
end_define

begin_define
define|#
directive|define
name|IMSG_HEADER_SIZE
value|sizeof(struct imsg_hdr)
end_define

begin_define
define|#
directive|define
name|MAX_IMSGSIZE
value|16384
end_define

begin_struct
struct|struct
name|ibuf
block|{
name|TAILQ_ENTRY
argument_list|(
argument|ibuf
argument_list|)
name|entry
expr_stmt|;
name|u_char
modifier|*
name|buf
decl_stmt|;
name|size_t
name|size
decl_stmt|;
name|size_t
name|max
decl_stmt|;
name|size_t
name|wpos
decl_stmt|;
name|size_t
name|rpos
decl_stmt|;
name|int
name|fd
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|msgbuf
block|{
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|ibuf
argument_list|)
name|bufs
expr_stmt|;
name|u_int32_t
name|queued
decl_stmt|;
name|int
name|fd
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibuf_read
block|{
name|u_char
name|buf
index|[
name|IBUF_READ_SIZE
index|]
decl_stmt|;
name|u_char
modifier|*
name|rptr
decl_stmt|;
name|size_t
name|wpos
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|imsg_fd
block|{
name|TAILQ_ENTRY
argument_list|(
argument|imsg_fd
argument_list|)
name|entry
expr_stmt|;
name|int
name|fd
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|imsgbuf
block|{
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|imsg_fd
argument_list|)
name|fds
expr_stmt|;
name|struct
name|ibuf_read
name|r
decl_stmt|;
name|struct
name|msgbuf
name|w
decl_stmt|;
name|int
name|fd
decl_stmt|;
name|pid_t
name|pid
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|IMSGF_HASFD
value|1
end_define

begin_struct
struct|struct
name|imsg_hdr
block|{
name|u_int32_t
name|type
decl_stmt|;
name|u_int16_t
name|len
decl_stmt|;
name|u_int16_t
name|flags
decl_stmt|;
name|u_int32_t
name|peerid
decl_stmt|;
name|u_int32_t
name|pid
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|imsg
block|{
name|struct
name|imsg_hdr
name|hdr
decl_stmt|;
name|int
name|fd
decl_stmt|;
name|void
modifier|*
name|data
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* buffer.c */
end_comment

begin_function_decl
name|struct
name|ibuf
modifier|*
name|ibuf_open
parameter_list|(
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibuf
modifier|*
name|ibuf_dynamic
parameter_list|(
name|size_t
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibuf_add
parameter_list|(
name|struct
name|ibuf
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|ibuf_reserve
parameter_list|(
name|struct
name|ibuf
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|ibuf_seek
parameter_list|(
name|struct
name|ibuf
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|ibuf_size
parameter_list|(
name|struct
name|ibuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|ibuf_left
parameter_list|(
name|struct
name|ibuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ibuf_close
parameter_list|(
name|struct
name|msgbuf
modifier|*
parameter_list|,
name|struct
name|ibuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibuf_write
parameter_list|(
name|struct
name|msgbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ibuf_free
parameter_list|(
name|struct
name|ibuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|msgbuf_init
parameter_list|(
name|struct
name|msgbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|msgbuf_clear
parameter_list|(
name|struct
name|msgbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|msgbuf_write
parameter_list|(
name|struct
name|msgbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|msgbuf_drain
parameter_list|(
name|struct
name|msgbuf
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* imsg.c */
end_comment

begin_function_decl
name|void
name|imsg_init
parameter_list|(
name|struct
name|imsgbuf
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ssize_t
name|imsg_read
parameter_list|(
name|struct
name|imsgbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ssize_t
name|imsg_get
parameter_list|(
name|struct
name|imsgbuf
modifier|*
parameter_list|,
name|struct
name|imsg
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|imsg_compose
parameter_list|(
name|struct
name|imsgbuf
modifier|*
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_int32_t
parameter_list|,
name|pid_t
parameter_list|,
name|int
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|u_int16_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|imsg_composev
parameter_list|(
name|struct
name|imsgbuf
modifier|*
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_int32_t
parameter_list|,
name|pid_t
parameter_list|,
name|int
parameter_list|,
specifier|const
name|struct
name|iovec
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibuf
modifier|*
name|imsg_create
parameter_list|(
name|struct
name|imsgbuf
modifier|*
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_int32_t
parameter_list|,
name|pid_t
parameter_list|,
name|u_int16_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|imsg_add
parameter_list|(
name|struct
name|ibuf
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|u_int16_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|imsg_close
parameter_list|(
name|struct
name|imsgbuf
modifier|*
parameter_list|,
name|struct
name|ibuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|imsg_free
parameter_list|(
name|struct
name|imsg
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|imsg_flush
parameter_list|(
name|struct
name|imsgbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|imsg_clear
parameter_list|(
name|struct
name|imsgbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

