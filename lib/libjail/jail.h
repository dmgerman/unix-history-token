begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2009 James Gritton.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_JAIL_H
end_ifndef

begin_define
define|#
directive|define
name|_JAIL_H
end_define

begin_define
define|#
directive|define
name|JP_RAWVALUE
value|0x01
end_define

begin_define
define|#
directive|define
name|JP_BOOL
value|0x02
end_define

begin_define
define|#
directive|define
name|JP_NOBOOL
value|0x04
end_define

begin_define
define|#
directive|define
name|JP_JAILSYS
value|0x08
end_define

begin_define
define|#
directive|define
name|JAIL_ERRMSGLEN
value|1024
end_define

begin_decl_stmt
specifier|extern
name|char
name|jail_errmsg
index|[]
decl_stmt|;
end_decl_stmt

begin_struct
struct|struct
name|jailparam
block|{
name|char
modifier|*
name|jp_name
decl_stmt|;
name|void
modifier|*
name|jp_value
decl_stmt|;
name|size_t
name|jp_valuelen
decl_stmt|;
name|size_t
name|jp_elemlen
decl_stmt|;
name|int
name|jp_ctltype
decl_stmt|;
name|int
name|jp_structtype
decl_stmt|;
name|unsigned
name|jp_flags
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|__BEGIN_DECLS
specifier|extern
name|int
name|jail_getid
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|jail_getname
parameter_list|(
name|int
name|jid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|jail_setv
parameter_list|(
name|int
name|flags
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|jail_getv
parameter_list|(
name|int
name|flags
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|jailparam_all
parameter_list|(
name|struct
name|jailparam
modifier|*
modifier|*
name|jpp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|jailparam_init
parameter_list|(
name|struct
name|jailparam
modifier|*
name|jp
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|jailparam_import
parameter_list|(
name|struct
name|jailparam
modifier|*
name|jp
parameter_list|,
specifier|const
name|char
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|jailparam_import_raw
parameter_list|(
name|struct
name|jailparam
modifier|*
name|jp
parameter_list|,
name|void
modifier|*
name|value
parameter_list|,
name|size_t
name|valuelen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|jailparam_set
parameter_list|(
name|struct
name|jailparam
modifier|*
name|jp
parameter_list|,
name|unsigned
name|njp
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|jailparam_get
parameter_list|(
name|struct
name|jailparam
modifier|*
name|jp
parameter_list|,
name|unsigned
name|njp
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|jailparam_export
parameter_list|(
name|struct
name|jailparam
modifier|*
name|jp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|jailparam_free
parameter_list|(
name|struct
name|jailparam
modifier|*
name|jp
parameter_list|,
name|unsigned
name|njp
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _JAIL_H  */
end_comment

end_unit

