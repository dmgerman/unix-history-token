begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * This module derived from code donated to the FreeBSD Project by   * Matthew Dillon<dillon@backplane.com>  *  * Copyright (c) 1998 The FreeBSD Project  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	$Id$  */
end_comment

begin_decl_stmt
name|Prototype
name|struct
name|MemPool
modifier|*
name|DummyStructMemPool
decl_stmt|;
end_decl_stmt

begin_function_decl
name|Library
name|void
modifier|*
name|znalloc
parameter_list|(
name|struct
name|MemPool
modifier|*
name|mpool
parameter_list|,
name|iaddr_t
name|bytes
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|void
modifier|*
name|zalloc
parameter_list|(
name|struct
name|MemPool
modifier|*
name|mpool
parameter_list|,
name|iaddr_t
name|bytes
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|void
modifier|*
name|zallocAlign
parameter_list|(
name|struct
name|MemPool
modifier|*
name|mpool
parameter_list|,
name|iaddr_t
name|bytes
parameter_list|,
name|iaddr_t
name|align
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|void
modifier|*
name|zxalloc
parameter_list|(
name|struct
name|MemPool
modifier|*
name|mp
parameter_list|,
name|void
modifier|*
name|addr1
parameter_list|,
name|void
modifier|*
name|addr2
parameter_list|,
name|iaddr_t
name|bytes
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|void
modifier|*
name|znxalloc
parameter_list|(
name|struct
name|MemPool
modifier|*
name|mp
parameter_list|,
name|void
modifier|*
name|addr1
parameter_list|,
name|void
modifier|*
name|addr2
parameter_list|,
name|iaddr_t
name|bytes
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|char
modifier|*
name|zallocStr
parameter_list|(
name|struct
name|MemPool
modifier|*
name|mpool
parameter_list|,
specifier|const
name|char
modifier|*
name|s
parameter_list|,
name|int
name|slen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|void
name|zfree
parameter_list|(
name|struct
name|MemPool
modifier|*
name|mpool
parameter_list|,
name|void
modifier|*
name|ptr
parameter_list|,
name|iaddr_t
name|bytes
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|void
name|zfreeStr
parameter_list|(
name|struct
name|MemPool
modifier|*
name|mpool
parameter_list|,
name|char
modifier|*
name|s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|void
name|zinitPool
parameter_list|(
name|struct
name|MemPool
modifier|*
name|mp
parameter_list|,
specifier|const
name|char
modifier|*
name|id
parameter_list|,
name|void
function_decl|(
modifier|*
name|fpanic
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
name|ctl
parameter_list|,
modifier|...
parameter_list|)
parameter_list|,
name|int
function_decl|(
modifier|*
name|freclaim
function_decl|)
parameter_list|(
name|struct
name|MemPool
modifier|*
name|memPool
parameter_list|,
name|iaddr_t
name|bytes
parameter_list|)
parameter_list|,
name|void
modifier|*
name|pBase
parameter_list|,
name|iaddr_t
name|pSize
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|void
name|zextendPool
parameter_list|(
name|MemPool
modifier|*
name|mp
parameter_list|,
name|void
modifier|*
name|base
parameter_list|,
name|iaddr_t
name|bytes
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|void
name|zclearPool
parameter_list|(
name|struct
name|MemPool
modifier|*
name|mp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|void
name|znop
parameter_list|(
specifier|const
name|char
modifier|*
name|ctl
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|int
name|znot
parameter_list|(
name|struct
name|MemPool
modifier|*
name|memPool
parameter_list|,
name|iaddr_t
name|bytes
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Library
name|void
name|zallocstats
parameter_list|(
name|struct
name|MemPool
modifier|*
name|mp
parameter_list|)
function_decl|;
end_function_decl

end_unit

