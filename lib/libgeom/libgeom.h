begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2003 Poul-Henning Kamp  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. The names of the authors may not be used to endorse or promote  *    products derived from this software without specific prior written  *    permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_LIBGEOM_H_
end_ifndef

begin_define
define|#
directive|define
name|_LIBGEOM_H_
end_define

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_include
include|#
directive|include
file|<sys/queue.h>
end_include

begin_include
include|#
directive|include
file|<sys/time.h>
end_include

begin_include
include|#
directive|include
file|<geom/geom_ctl.h>
end_include

begin_function_decl
name|__BEGIN_DECLS
name|void
name|geom_stats_close
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|geom_stats_resync
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|geom_stats_open
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|geom_stats_snapshot_get
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|geom_stats_snapshot_free
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|geom_stats_snapshot_timestamp
parameter_list|(
name|void
modifier|*
parameter_list|,
name|struct
name|timespec
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|geom_stats_snapshot_reset
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|devstat
modifier|*
name|geom_stats_snapshot_next
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|geom_getxml
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* geom_xml2tree.c */
end_comment

begin_comment
comment|/*  * These structs are used to build the tree based on the XML.  * they're named as the kernel variant without the first '_'.  */
end_comment

begin_struct_decl
struct_decl|struct
name|gclass
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ggeom
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|gconsumer
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|gprovider
struct_decl|;
end_struct_decl

begin_expr_stmt
name|LIST_HEAD
argument_list|(
name|gconf
argument_list|,
name|gconfig
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|gident
block|{
name|void
modifier|*
name|lg_id
decl_stmt|;
name|void
modifier|*
name|lg_ptr
decl_stmt|;
enum|enum
block|{
name|ISCLASS
block|,
name|ISGEOM
block|,
name|ISPROVIDER
block|,
name|ISCONSUMER
block|}
name|lg_what
enum|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|gmesh
block|{
name|LIST_HEAD
argument_list|(
argument_list|,
argument|gclass
argument_list|)
name|lg_class
expr_stmt|;
name|struct
name|gident
modifier|*
name|lg_ident
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|gconfig
block|{
name|LIST_ENTRY
argument_list|(
argument|gconfig
argument_list|)
name|lg_config
expr_stmt|;
name|char
modifier|*
name|lg_name
decl_stmt|;
name|char
modifier|*
name|lg_val
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|gclass
block|{
name|void
modifier|*
name|lg_id
decl_stmt|;
name|char
modifier|*
name|lg_name
decl_stmt|;
name|LIST_ENTRY
argument_list|(
argument|gclass
argument_list|)
name|lg_class
expr_stmt|;
name|LIST_HEAD
argument_list|(
argument_list|,
argument|ggeom
argument_list|)
name|lg_geom
expr_stmt|;
name|struct
name|gconf
name|lg_config
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ggeom
block|{
name|void
modifier|*
name|lg_id
decl_stmt|;
name|struct
name|gclass
modifier|*
name|lg_class
decl_stmt|;
name|char
modifier|*
name|lg_name
decl_stmt|;
name|u_int
name|lg_rank
decl_stmt|;
name|LIST_ENTRY
argument_list|(
argument|ggeom
argument_list|)
name|lg_geom
expr_stmt|;
name|LIST_HEAD
argument_list|(
argument_list|,
argument|gconsumer
argument_list|)
name|lg_consumer
expr_stmt|;
name|LIST_HEAD
argument_list|(
argument_list|,
argument|gprovider
argument_list|)
name|lg_provider
expr_stmt|;
name|struct
name|gconf
name|lg_config
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|gconsumer
block|{
name|void
modifier|*
name|lg_id
decl_stmt|;
name|struct
name|ggeom
modifier|*
name|lg_geom
decl_stmt|;
name|LIST_ENTRY
argument_list|(
argument|gconsumer
argument_list|)
name|lg_consumer
expr_stmt|;
name|struct
name|gprovider
modifier|*
name|lg_provider
decl_stmt|;
name|LIST_ENTRY
argument_list|(
argument|gconsumer
argument_list|)
name|lg_consumers
expr_stmt|;
name|char
modifier|*
name|lg_mode
decl_stmt|;
name|struct
name|gconf
name|lg_config
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|gprovider
block|{
name|void
modifier|*
name|lg_id
decl_stmt|;
name|char
modifier|*
name|lg_name
decl_stmt|;
name|struct
name|ggeom
modifier|*
name|lg_geom
decl_stmt|;
name|LIST_ENTRY
argument_list|(
argument|gprovider
argument_list|)
name|lg_provider
expr_stmt|;
name|LIST_HEAD
argument_list|(
argument_list|,
argument|gconsumer
argument_list|)
name|lg_consumers
expr_stmt|;
name|char
modifier|*
name|lg_mode
decl_stmt|;
name|off_t
name|lg_mediasize
decl_stmt|;
name|u_int
name|lg_sectorsize
decl_stmt|;
name|off_t
name|lg_stripeoffset
decl_stmt|;
name|off_t
name|lg_stripesize
decl_stmt|;
name|struct
name|gconf
name|lg_config
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|struct
name|gident
modifier|*
name|geom_lookupid
parameter_list|(
name|struct
name|gmesh
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|geom_xml2tree
parameter_list|(
name|struct
name|gmesh
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|geom_gettree
parameter_list|(
name|struct
name|gmesh
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|geom_deletetree
parameter_list|(
name|struct
name|gmesh
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* geom_ctl.c */
end_comment

begin_struct_decl
struct_decl|struct
name|gctl_req
struct_decl|;
end_struct_decl

begin_ifdef
ifdef|#
directive|ifdef
name|_STDIO_H_
end_ifdef

begin_comment
comment|/* limit #include pollution */
end_comment

begin_function_decl
name|void
name|gctl_dump
parameter_list|(
name|struct
name|gctl_req
modifier|*
parameter_list|,
name|FILE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|gctl_free
parameter_list|(
name|struct
name|gctl_req
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|gctl_req
modifier|*
name|gctl_get_handle
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|gctl_issue
parameter_list|(
name|struct
name|gctl_req
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gctl_ro_param
parameter_list|(
name|struct
name|gctl_req
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gctl_rw_param
parameter_list|(
name|struct
name|gctl_req
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* geom_util.c */
end_comment

begin_function_decl
name|int
name|g_open
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|g_close
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|off_t
name|g_mediasize
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ssize_t
name|g_sectorsize
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|off_t
name|g_stripeoffset
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|off_t
name|g_stripesize
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|g_flush
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|g_delete
parameter_list|(
name|int
parameter_list|,
name|off_t
parameter_list|,
name|off_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|g_get_ident
parameter_list|(
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|g_get_name
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|g_open_by_ident
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|g_device_path
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|g_providername
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _LIBGEOM_H_ */
end_comment

end_unit

