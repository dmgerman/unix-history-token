begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2009 Stanislav Sedov<stas@FreeBSD.org>  * Copyright (c) 2017 Dell EMC  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_LIBPROCSTAT_H_
end_ifndef

begin_define
define|#
directive|define
name|_LIBPROCSTAT_H_
end_define

begin_comment
comment|/*  * XXX: sys/elf.h conflicts with zfs_context.h. Workaround this by not  * including conflicting parts when building zfs code.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|ZFS
end_ifndef

begin_include
include|#
directive|include
file|<sys/elf.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<sys/caprights.h>
end_include

begin_comment
comment|/*  * Vnode types.  */
end_comment

begin_define
define|#
directive|define
name|PS_FST_VTYPE_VNON
value|1
end_define

begin_define
define|#
directive|define
name|PS_FST_VTYPE_VREG
value|2
end_define

begin_define
define|#
directive|define
name|PS_FST_VTYPE_VDIR
value|3
end_define

begin_define
define|#
directive|define
name|PS_FST_VTYPE_VBLK
value|4
end_define

begin_define
define|#
directive|define
name|PS_FST_VTYPE_VCHR
value|5
end_define

begin_define
define|#
directive|define
name|PS_FST_VTYPE_VLNK
value|6
end_define

begin_define
define|#
directive|define
name|PS_FST_VTYPE_VSOCK
value|7
end_define

begin_define
define|#
directive|define
name|PS_FST_VTYPE_VFIFO
value|8
end_define

begin_define
define|#
directive|define
name|PS_FST_VTYPE_VBAD
value|9
end_define

begin_define
define|#
directive|define
name|PS_FST_VTYPE_UNKNOWN
value|255
end_define

begin_comment
comment|/*  * Descriptor types.  */
end_comment

begin_define
define|#
directive|define
name|PS_FST_TYPE_VNODE
value|1
end_define

begin_define
define|#
directive|define
name|PS_FST_TYPE_FIFO
value|2
end_define

begin_define
define|#
directive|define
name|PS_FST_TYPE_SOCKET
value|3
end_define

begin_define
define|#
directive|define
name|PS_FST_TYPE_PIPE
value|4
end_define

begin_define
define|#
directive|define
name|PS_FST_TYPE_PTS
value|5
end_define

begin_define
define|#
directive|define
name|PS_FST_TYPE_KQUEUE
value|6
end_define

begin_define
define|#
directive|define
name|PS_FST_TYPE_CRYPTO
value|7
end_define

begin_define
define|#
directive|define
name|PS_FST_TYPE_MQUEUE
value|8
end_define

begin_define
define|#
directive|define
name|PS_FST_TYPE_SHM
value|9
end_define

begin_define
define|#
directive|define
name|PS_FST_TYPE_SEM
value|10
end_define

begin_define
define|#
directive|define
name|PS_FST_TYPE_UNKNOWN
value|11
end_define

begin_define
define|#
directive|define
name|PS_FST_TYPE_NONE
value|12
end_define

begin_comment
comment|/*  * Special descriptor numbers.  */
end_comment

begin_define
define|#
directive|define
name|PS_FST_UFLAG_RDIR
value|0x0001
end_define

begin_define
define|#
directive|define
name|PS_FST_UFLAG_CDIR
value|0x0002
end_define

begin_define
define|#
directive|define
name|PS_FST_UFLAG_JAIL
value|0x0004
end_define

begin_define
define|#
directive|define
name|PS_FST_UFLAG_TRACE
value|0x0008
end_define

begin_define
define|#
directive|define
name|PS_FST_UFLAG_TEXT
value|0x0010
end_define

begin_define
define|#
directive|define
name|PS_FST_UFLAG_MMAP
value|0x0020
end_define

begin_define
define|#
directive|define
name|PS_FST_UFLAG_CTTY
value|0x0040
end_define

begin_comment
comment|/*  * Descriptor flags.  */
end_comment

begin_define
define|#
directive|define
name|PS_FST_FFLAG_READ
value|0x0001
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_WRITE
value|0x0002
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_NONBLOCK
value|0x0004
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_APPEND
value|0x0008
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_SHLOCK
value|0x0010
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_EXLOCK
value|0x0020
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_ASYNC
value|0x0040
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_SYNC
value|0x0080
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_NOFOLLOW
value|0x0100
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_CREAT
value|0x0200
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_TRUNC
value|0x0400
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_EXCL
value|0x0800
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_DIRECT
value|0x1000
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_EXEC
value|0x2000
end_define

begin_define
define|#
directive|define
name|PS_FST_FFLAG_HASLOCK
value|0x4000
end_define

begin_struct_decl
struct_decl|struct
name|kinfo_kstack
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|kinfo_vmentry
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|procstat
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ptrace_lwpinfo
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|rlimit
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|filestat
block|{
name|int
name|fs_type
decl_stmt|;
comment|/* Descriptor type. */
name|int
name|fs_flags
decl_stmt|;
comment|/* filestat specific flags. */
name|int
name|fs_fflags
decl_stmt|;
comment|/* Descriptor access flags. */
name|int
name|fs_uflags
decl_stmt|;
comment|/* How this file is used. */
name|int
name|fs_fd
decl_stmt|;
comment|/* File descriptor number. */
name|int
name|fs_ref_count
decl_stmt|;
comment|/* Reference count. */
name|off_t
name|fs_offset
decl_stmt|;
comment|/* Seek location. */
name|void
modifier|*
name|fs_typedep
decl_stmt|;
comment|/* Type dependent data. */
name|char
modifier|*
name|fs_path
decl_stmt|;
name|STAILQ_ENTRY
argument_list|(
argument|filestat
argument_list|)
name|next
expr_stmt|;
name|cap_rights_t
name|fs_cap_rights
decl_stmt|;
comment|/* Capability rights, if flag set. */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|vnstat
block|{
name|uint64_t
name|vn_fileid
decl_stmt|;
name|uint64_t
name|vn_size
decl_stmt|;
name|uint64_t
name|vn_dev
decl_stmt|;
name|uint64_t
name|vn_fsid
decl_stmt|;
name|char
modifier|*
name|vn_mntdir
decl_stmt|;
name|int
name|vn_type
decl_stmt|;
name|uint16_t
name|vn_mode
decl_stmt|;
name|char
name|vn_devname
index|[
name|SPECNAMELEN
operator|+
literal|1
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ptsstat
block|{
name|uint64_t
name|dev
decl_stmt|;
name|char
name|devname
index|[
name|SPECNAMELEN
operator|+
literal|1
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pipestat
block|{
name|size_t
name|buffer_cnt
decl_stmt|;
name|uint64_t
name|addr
decl_stmt|;
name|uint64_t
name|peer
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|semstat
block|{
name|uint32_t
name|value
decl_stmt|;
name|uint16_t
name|mode
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|shmstat
block|{
name|uint64_t
name|size
decl_stmt|;
name|uint16_t
name|mode
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|sockstat
block|{
name|uint64_t
name|inp_ppcb
decl_stmt|;
name|uint64_t
name|so_addr
decl_stmt|;
name|uint64_t
name|so_pcb
decl_stmt|;
name|uint64_t
name|unp_conn
decl_stmt|;
name|int
name|dom_family
decl_stmt|;
name|int
name|proto
decl_stmt|;
name|int
name|so_rcv_sb_state
decl_stmt|;
name|int
name|so_snd_sb_state
decl_stmt|;
name|struct
name|sockaddr_storage
name|sa_local
decl_stmt|;
comment|/* Socket address. */
name|struct
name|sockaddr_storage
name|sa_peer
decl_stmt|;
comment|/* Peer address. */
name|int
name|type
decl_stmt|;
name|char
name|dname
index|[
literal|32
index|]
decl_stmt|;
name|unsigned
name|int
name|sendq
decl_stmt|;
name|unsigned
name|int
name|recvq
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|STAILQ_HEAD
argument_list|(
name|filestat_list
argument_list|,
name|filestat
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function_decl
name|__BEGIN_DECLS
name|void
name|procstat_close
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_freeargv
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|)
function_decl|;
end_function_decl

begin_ifndef
ifndef|#
directive|ifndef
name|ZFS
end_ifndef

begin_function_decl
name|void
name|procstat_freeauxv
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|Elf_Auxinfo
modifier|*
name|auxv
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|procstat_freeenvv
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_freegroups
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|gid_t
modifier|*
name|groups
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_freekstack
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_kstack
modifier|*
name|kkstp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_freeprocs
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_freefiles
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|filestat_list
modifier|*
name|head
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_freeptlwpinfo
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|ptrace_lwpinfo
modifier|*
name|pl
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_freevmmap
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_vmentry
modifier|*
name|vmmap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|filestat_list
modifier|*
name|procstat_getfiles
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kp
parameter_list|,
name|int
name|mmapped
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|kinfo_proc
modifier|*
name|procstat_getprocs
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|int
name|what
parameter_list|,
name|int
name|arg
parameter_list|,
name|unsigned
name|int
modifier|*
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|procstat_get_pipe_info
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|filestat
modifier|*
name|fst
parameter_list|,
name|struct
name|pipestat
modifier|*
name|pipe
parameter_list|,
name|char
modifier|*
name|errbuf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|procstat_get_pts_info
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|filestat
modifier|*
name|fst
parameter_list|,
name|struct
name|ptsstat
modifier|*
name|pts
parameter_list|,
name|char
modifier|*
name|errbuf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|procstat_get_sem_info
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|filestat
modifier|*
name|fst
parameter_list|,
name|struct
name|semstat
modifier|*
name|sem
parameter_list|,
name|char
modifier|*
name|errbuf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|procstat_get_shm_info
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|filestat
modifier|*
name|fst
parameter_list|,
name|struct
name|shmstat
modifier|*
name|shm
parameter_list|,
name|char
modifier|*
name|errbuf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|procstat_get_socket_info
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|filestat
modifier|*
name|fst
parameter_list|,
name|struct
name|sockstat
modifier|*
name|sock
parameter_list|,
name|char
modifier|*
name|errbuf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|procstat_get_vnode_info
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|filestat
modifier|*
name|fst
parameter_list|,
name|struct
name|vnstat
modifier|*
name|vn
parameter_list|,
name|char
modifier|*
name|errbuf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
modifier|*
name|procstat_getargv
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|p
parameter_list|,
name|size_t
name|nchr
parameter_list|)
function_decl|;
end_function_decl

begin_ifndef
ifndef|#
directive|ifndef
name|ZFS
end_ifndef

begin_function_decl
name|Elf_Auxinfo
modifier|*
name|procstat_getauxv
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kp
parameter_list|,
name|unsigned
name|int
modifier|*
name|cntp
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|struct
name|ptrace_lwpinfo
modifier|*
name|procstat_getptlwpinfo
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|unsigned
name|int
modifier|*
name|cntp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
modifier|*
name|procstat_getenvv
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|p
parameter_list|,
name|size_t
name|nchr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gid_t
modifier|*
name|procstat_getgroups
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kp
parameter_list|,
name|unsigned
name|int
modifier|*
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|kinfo_kstack
modifier|*
name|procstat_getkstack
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kp
parameter_list|,
name|unsigned
name|int
modifier|*
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|procstat_getosrel
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kp
parameter_list|,
name|int
modifier|*
name|osrelp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|procstat_getpathname
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kp
parameter_list|,
name|char
modifier|*
name|pathname
parameter_list|,
name|size_t
name|maxlen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|procstat_getrlimit
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kp
parameter_list|,
name|int
name|which
parameter_list|,
name|struct
name|rlimit
modifier|*
name|rlimit
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|procstat_getumask
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kp
parameter_list|,
name|unsigned
name|short
modifier|*
name|umask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|kinfo_vmentry
modifier|*
name|procstat_getvmmap
parameter_list|(
name|struct
name|procstat
modifier|*
name|procstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kp
parameter_list|,
name|unsigned
name|int
modifier|*
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|procstat
modifier|*
name|procstat_open_core
parameter_list|(
specifier|const
name|char
modifier|*
name|filename
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|procstat
modifier|*
name|procstat_open_sysctl
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|procstat
modifier|*
name|procstat_open_kvm
parameter_list|(
specifier|const
name|char
modifier|*
name|nlistf
parameter_list|,
specifier|const
name|char
modifier|*
name|memf
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_LIBPROCSTAT_H_ */
end_comment

end_unit

