begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2011 NetApp, Inc.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY NETAPP, INC ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL NETAPP, INC OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_VMMAPI_H_
end_ifndef

begin_define
define|#
directive|define
name|_VMMAPI_H_
end_define

begin_include
include|#
directive|include
file|<sys/param.h>
end_include

begin_include
include|#
directive|include
file|<sys/cpuset.h>
end_include

begin_comment
comment|/*  * API version for out-of-tree consumers like grub-bhyve for making compile  * time decisions.  */
end_comment

begin_define
define|#
directive|define
name|VMMAPI_VERSION
value|0101
end_define

begin_comment
comment|/* 2 digit major followed by 2 digit minor */
end_comment

begin_struct_decl
struct_decl|struct
name|iovec
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|vmctx
struct_decl|;
end_struct_decl

begin_enum_decl
enum_decl|enum
name|x2apic_state
enum_decl|;
end_enum_decl

begin_comment
comment|/*  * Different styles of mapping the memory assigned to a VM into the address  * space of the controlling process.  */
end_comment

begin_enum
enum|enum
name|vm_mmap_style
block|{
name|VM_MMAP_NONE
block|,
comment|/* no mapping */
name|VM_MMAP_ALL
block|,
comment|/* fully and statically mapped */
name|VM_MMAP_SPARSE
block|,
comment|/* mappings created on-demand */
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|VM_MEM_F_INCORE
value|0x01
end_define

begin_comment
comment|/* include guest memory in core file */
end_comment

begin_function_decl
name|int
name|vm_create
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|vmctx
modifier|*
name|vm_open
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vm_destroy
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_parse_memsize
parameter_list|(
specifier|const
name|char
modifier|*
name|optarg
parameter_list|,
name|size_t
modifier|*
name|memsize
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_get_memory_seg
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|vm_paddr_t
name|gpa
parameter_list|,
name|size_t
modifier|*
name|ret_len
parameter_list|,
name|int
modifier|*
name|wired
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_setup_memory
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|size_t
name|len
parameter_list|,
name|enum
name|vm_mmap_style
name|s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|vm_map_gpa
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|vm_paddr_t
name|gaddr
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_get_gpa_pmap
parameter_list|(
name|struct
name|vmctx
modifier|*
parameter_list|,
name|uint64_t
name|gpa
parameter_list|,
name|uint64_t
modifier|*
name|pte
parameter_list|,
name|int
modifier|*
name|num
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|vm_get_lowmem_limit
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vm_set_lowmem_limit
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|uint32_t
name|limit
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vm_set_memflags
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|vm_get_lowmem_size
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|vm_get_highmem_size
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_set_desc
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|int
name|reg
parameter_list|,
name|uint64_t
name|base
parameter_list|,
name|uint32_t
name|limit
parameter_list|,
name|uint32_t
name|access
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_get_desc
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|int
name|reg
parameter_list|,
name|uint64_t
modifier|*
name|base
parameter_list|,
name|uint32_t
modifier|*
name|limit
parameter_list|,
name|uint32_t
modifier|*
name|access
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_get_seg_desc
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|int
name|reg
parameter_list|,
name|struct
name|seg_desc
modifier|*
name|seg_desc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_set_register
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|int
name|reg
parameter_list|,
name|uint64_t
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_get_register
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|int
name|reg
parameter_list|,
name|uint64_t
modifier|*
name|retval
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_run
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|struct
name|vm_exit
modifier|*
name|ret_vmexit
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_suspend
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|enum
name|vm_suspend_how
name|how
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_reinit
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_apicid2vcpu
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|apicid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_inject_exception
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|int
name|vector
parameter_list|,
name|int
name|errcode_valid
parameter_list|,
name|uint32_t
name|errcode
parameter_list|,
name|int
name|restart_instruction
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_lapic_irq
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|int
name|vector
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_lapic_local_irq
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|int
name|vector
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_lapic_msi
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|uint64_t
name|addr
parameter_list|,
name|uint64_t
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_ioapic_assert_irq
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|irq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_ioapic_deassert_irq
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|irq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_ioapic_pulse_irq
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|irq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_ioapic_pincount
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
modifier|*
name|pincount
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_isa_assert_irq
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|atpic_irq
parameter_list|,
name|int
name|ioapic_irq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_isa_deassert_irq
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|atpic_irq
parameter_list|,
name|int
name|ioapic_irq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_isa_pulse_irq
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|atpic_irq
parameter_list|,
name|int
name|ioapic_irq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_isa_set_irq_trigger
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|atpic_irq
parameter_list|,
name|enum
name|vm_intr_trigger
name|trigger
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_inject_nmi
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_capability_name2type
parameter_list|(
specifier|const
name|char
modifier|*
name|capname
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|vm_capability_type2name
parameter_list|(
name|int
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_get_capability
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|enum
name|vm_cap_type
name|cap
parameter_list|,
name|int
modifier|*
name|retval
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_set_capability
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|enum
name|vm_cap_type
name|cap
parameter_list|,
name|int
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_assign_pptdev
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|bus
parameter_list|,
name|int
name|slot
parameter_list|,
name|int
name|func
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_unassign_pptdev
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|bus
parameter_list|,
name|int
name|slot
parameter_list|,
name|int
name|func
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_map_pptdev_mmio
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|bus
parameter_list|,
name|int
name|slot
parameter_list|,
name|int
name|func
parameter_list|,
name|vm_paddr_t
name|gpa
parameter_list|,
name|size_t
name|len
parameter_list|,
name|vm_paddr_t
name|hpa
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_setup_pptdev_msi
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|int
name|bus
parameter_list|,
name|int
name|slot
parameter_list|,
name|int
name|func
parameter_list|,
name|uint64_t
name|addr
parameter_list|,
name|uint64_t
name|msg
parameter_list|,
name|int
name|numvec
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_setup_pptdev_msix
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|int
name|bus
parameter_list|,
name|int
name|slot
parameter_list|,
name|int
name|func
parameter_list|,
name|int
name|idx
parameter_list|,
name|uint64_t
name|addr
parameter_list|,
name|uint64_t
name|msg
parameter_list|,
name|uint32_t
name|vector_control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_get_intinfo
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|uint64_t
modifier|*
name|i1
parameter_list|,
name|uint64_t
modifier|*
name|i2
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_set_intinfo
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|uint64_t
name|exit_intinfo
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Return a pointer to the statistics buffer. Note that this is not MT-safe.  */
end_comment

begin_function_decl
name|uint64_t
modifier|*
name|vm_get_stats
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|struct
name|timeval
modifier|*
name|ret_tv
parameter_list|,
name|int
modifier|*
name|ret_entries
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|vm_get_stat_desc
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_get_x2apic_state
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|enum
name|x2apic_state
modifier|*
name|s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_set_x2apic_state
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|enum
name|x2apic_state
name|s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_get_hpet_capabilities
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|uint32_t
modifier|*
name|capabilities
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Translate the GLA range [gla,gla+len) into GPA segments in 'iov'.  * The 'iovcnt' should be big enough to accomodate all GPA segments.  * Returns 0 on success, 1 on a guest fault condition and -1 otherwise.  */
end_comment

begin_function_decl
name|int
name|vm_copy_setup
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|struct
name|vm_guest_paging
modifier|*
name|pg
parameter_list|,
name|uint64_t
name|gla
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|prot
parameter_list|,
name|struct
name|iovec
modifier|*
name|iov
parameter_list|,
name|int
name|iovcnt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vm_copyin
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|struct
name|iovec
modifier|*
name|guest_iov
parameter_list|,
name|void
modifier|*
name|host_dst
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vm_copyout
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
specifier|const
name|void
modifier|*
name|host_src
parameter_list|,
name|struct
name|iovec
modifier|*
name|guest_iov
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* RTC */
end_comment

begin_function_decl
name|int
name|vm_rtc_write
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|offset
parameter_list|,
name|uint8_t
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_rtc_read
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|offset
parameter_list|,
name|uint8_t
modifier|*
name|retval
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_rtc_settime
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|time_t
name|secs
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_rtc_gettime
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|time_t
modifier|*
name|secs
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Reset vcpu register state */
end_comment

begin_function_decl
name|int
name|vcpu_reset
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_active_cpus
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|cpuset_t
modifier|*
name|cpus
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_suspended_cpus
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|cpuset_t
modifier|*
name|cpus
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_activate_cpu
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * FreeBSD specific APIs  */
end_comment

begin_function_decl
name|int
name|vm_setup_freebsd_registers
parameter_list|(
name|struct
name|vmctx
modifier|*
name|ctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|uint64_t
name|rip
parameter_list|,
name|uint64_t
name|cr3
parameter_list|,
name|uint64_t
name|gdtbase
parameter_list|,
name|uint64_t
name|rsp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vm_setup_freebsd_registers_i386
parameter_list|(
name|struct
name|vmctx
modifier|*
name|vmctx
parameter_list|,
name|int
name|vcpu
parameter_list|,
name|uint32_t
name|eip
parameter_list|,
name|uint32_t
name|gdtbase
parameter_list|,
name|uint32_t
name|esp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vm_setup_freebsd_gdt
parameter_list|(
name|uint64_t
modifier|*
name|gdtr
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _VMMAPI_H_ */
end_comment

end_unit

