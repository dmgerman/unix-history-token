begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- asan_mac.h ----------------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is a part of AddressSanitizer, an address sanity checker.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// ASan-private header for asan_mac.cc
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__APPLE__
end_ifdef

begin_ifndef
ifndef|#
directive|ifndef
name|ASAN_MAC_H
end_ifndef

begin_define
define|#
directive|define
name|ASAN_MAC_H
end_define

begin_include
include|#
directive|include
file|"asan_interceptors.h"
end_include

begin_comment
comment|// TODO(glider): need to check if the OS X version is 10.6 or greater.
end_comment

begin_include
include|#
directive|include
file|<dispatch/dispatch.h>
end_include

begin_include
include|#
directive|include
file|<setjmp.h>
end_include

begin_typedef
typedef|typedef
name|void
modifier|*
name|pthread_workqueue_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|void
modifier|*
name|pthread_workitem_handle_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|dispatch_function_t
function_decl|)
parameter_list|(
name|void
modifier|*
name|block
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
modifier|*
function_decl|(
modifier|*
name|worker_t
function_decl|)
parameter_list|(
name|void
modifier|*
name|block
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|dispatch_async_f_f
function_decl|)
parameter_list|(
name|dispatch_queue_t
name|dq
parameter_list|,
name|void
modifier|*
name|ctxt
parameter_list|,
name|dispatch_function_t
name|func
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|dispatch_sync_f_f
function_decl|)
parameter_list|(
name|dispatch_queue_t
name|dq
parameter_list|,
name|void
modifier|*
name|ctxt
parameter_list|,
name|dispatch_function_t
name|func
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|dispatch_after_f_f
function_decl|)
parameter_list|(
name|dispatch_time_t
name|when
parameter_list|,
name|dispatch_queue_t
name|dq
parameter_list|,
name|void
modifier|*
name|ctxt
parameter_list|,
name|dispatch_function_t
name|func
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|dispatch_barrier_async_f_f
function_decl|)
parameter_list|(
name|dispatch_queue_t
name|dq
parameter_list|,
name|void
modifier|*
name|ctxt
parameter_list|,
name|dispatch_function_t
name|func
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|dispatch_group_async_f_f
function_decl|)
parameter_list|(
name|dispatch_group_t
name|group
parameter_list|,
name|dispatch_queue_t
name|dq
parameter_list|,
name|void
modifier|*
name|ctxt
parameter_list|,
name|dispatch_function_t
name|func
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|pthread_workqueue_additem_np_f
function_decl|)
parameter_list|(
name|pthread_workqueue_t
name|workq
parameter_list|,
name|void
modifier|*
function_decl|(
modifier|*
name|workitem_func
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|,
name|void
modifier|*
name|workitem_arg
parameter_list|,
name|pthread_workitem_handle_t
modifier|*
name|itemhandlep
parameter_list|,
name|unsigned
name|int
modifier|*
name|gencountp
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|// A wrapper for the ObjC blocks used to support libdispatch.
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|void
modifier|*
name|block
decl_stmt|;
name|dispatch_function_t
name|func
decl_stmt|;
name|int
name|parent_tid
decl_stmt|;
block|}
name|asan_block_context_t
typedef|;
end_typedef

begin_extern
extern|extern
literal|"C"
block|{
comment|// dispatch_barrier_async_f() is not declared in<dispatch/dispatch.h>.
name|void
name|dispatch_barrier_async_f
parameter_list|(
name|dispatch_queue_t
name|dq
parameter_list|,
name|void
modifier|*
name|ctxt
parameter_list|,
name|dispatch_function_t
name|func
parameter_list|)
function_decl|;
comment|// Neither is pthread_workqueue_additem_np().
name|int
name|pthread_workqueue_additem_np
parameter_list|(
name|pthread_workqueue_t
name|workq
parameter_list|,
name|void
modifier|*
function_decl|(
modifier|*
name|workitem_func
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|,
name|void
modifier|*
name|workitem_arg
parameter_list|,
name|pthread_workitem_handle_t
modifier|*
name|itemhandlep
parameter_list|,
name|unsigned
name|int
modifier|*
name|gencountp
parameter_list|)
function_decl|;
name|int
name|WRAP
function_decl|(
name|dispatch_async_f
function_decl|)
parameter_list|(
name|dispatch_queue_t
name|dq
parameter_list|,
name|void
modifier|*
name|ctxt
parameter_list|,
name|dispatch_function_t
name|func
parameter_list|)
function_decl|;
name|int
name|WRAP
function_decl|(
name|dispatch_sync_f
function_decl|)
parameter_list|(
name|dispatch_queue_t
name|dq
parameter_list|,
name|void
modifier|*
name|ctxt
parameter_list|,
name|dispatch_function_t
name|func
parameter_list|)
function_decl|;
name|int
name|WRAP
function_decl|(
name|dispatch_after_f
function_decl|)
parameter_list|(
name|dispatch_time_t
name|when
parameter_list|,
name|dispatch_queue_t
name|dq
parameter_list|,
name|void
modifier|*
name|ctxt
parameter_list|,
name|dispatch_function_t
name|func
parameter_list|)
function_decl|;
name|void
name|WRAP
function_decl|(
name|dispatch_barrier_async_f
function_decl|)
parameter_list|(
name|dispatch_queue_t
name|dq
parameter_list|,
name|void
modifier|*
name|ctxt
parameter_list|,
name|dispatch_function_t
name|func
parameter_list|)
function_decl|;
name|void
name|WRAP
function_decl|(
name|dispatch_group_async_f
function_decl|)
parameter_list|(
name|dispatch_group_t
name|group
parameter_list|,
name|dispatch_queue_t
name|dq
parameter_list|,
name|void
modifier|*
name|ctxt
parameter_list|,
name|dispatch_function_t
name|func
parameter_list|)
function_decl|;
name|int
name|WRAP
function_decl|(
name|pthread_workqueue_additem_np
function_decl|)
parameter_list|(
name|pthread_workqueue_t
name|workq
parameter_list|,
name|void
modifier|*
function_decl|(
modifier|*
name|workitem_func
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|,
name|void
modifier|*
name|workitem_arg
parameter_list|,
name|pthread_workitem_handle_t
modifier|*
name|itemhandlep
parameter_list|,
name|unsigned
name|int
modifier|*
name|gencountp
parameter_list|)
function_decl|;
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// ASAN_MAC_H
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// __APPLE__
end_comment

end_unit

