begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- asan_report.h -------------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is a part of AddressSanitizer, an address sanity checker.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// ASan-private header for error reporting functions.
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_include
include|#
directive|include
file|"asan_allocator.h"
end_include

begin_include
include|#
directive|include
file|"asan_internal.h"
end_include

begin_include
include|#
directive|include
file|"asan_thread.h"
end_include

begin_decl_stmt
name|namespace
name|__asan
block|{
struct|struct
name|StackVarDescr
block|{
name|uptr
name|beg
decl_stmt|;
name|uptr
name|size
decl_stmt|;
specifier|const
name|char
modifier|*
name|name_pos
decl_stmt|;
name|uptr
name|name_len
decl_stmt|;
block|}
struct|;
struct|struct
name|AddressDescription
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|uptr
name|name_size
decl_stmt|;
name|uptr
name|region_address
decl_stmt|;
name|uptr
name|region_size
decl_stmt|;
specifier|const
name|char
modifier|*
name|region_kind
decl_stmt|;
block|}
struct|;
comment|// The following functions prints address description depending
comment|// on the memory type (shadow/heap/stack/global).
name|void
name|DescribeHeapAddress
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|uptr
name|access_size
parameter_list|)
function_decl|;
name|bool
name|DescribeAddressIfGlobal
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|uptr
name|access_size
parameter_list|)
function_decl|;
name|bool
name|DescribeAddressRelativeToGlobal
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|uptr
name|access_size
parameter_list|,
specifier|const
name|__asan_global
modifier|&
name|g
parameter_list|)
function_decl|;
name|bool
name|IsAddressNearGlobal
parameter_list|(
name|uptr
name|addr
parameter_list|,
specifier|const
name|__asan_global
modifier|&
name|g
parameter_list|)
function_decl|;
name|bool
name|GetInfoForAddressIfGlobal
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|AddressDescription
modifier|*
name|descr
parameter_list|)
function_decl|;
name|bool
name|DescribeAddressIfShadow
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|AddressDescription
modifier|*
name|descr
init|=
name|nullptr
parameter_list|,
name|bool
name|print
init|=
name|true
parameter_list|)
function_decl|;
name|bool
name|ParseFrameDescription
argument_list|(
specifier|const
name|char
operator|*
name|frame_descr
argument_list|,
name|InternalMmapVector
operator|<
name|StackVarDescr
operator|>
operator|*
name|vars
argument_list|)
decl_stmt|;
name|bool
name|DescribeAddressIfStack
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|uptr
name|access_size
parameter_list|)
function_decl|;
comment|// Determines memory type on its own.
name|void
name|DescribeAddress
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|uptr
name|access_size
parameter_list|)
function_decl|;
name|void
name|DescribeThread
parameter_list|(
name|AsanThreadContext
modifier|*
name|context
parameter_list|)
function_decl|;
comment|// Different kinds of error reports.
name|void
name|NORETURN
name|ReportStackOverflow
parameter_list|(
specifier|const
name|SignalContext
modifier|&
name|sig
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportSIGSEGV
parameter_list|(
specifier|const
name|char
modifier|*
name|description
parameter_list|,
specifier|const
name|SignalContext
modifier|&
name|sig
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportNewDeleteSizeMismatch
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|uptr
name|delete_size
parameter_list|,
name|BufferedStackTrace
modifier|*
name|free_stack
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportDoubleFree
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|BufferedStackTrace
modifier|*
name|free_stack
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportFreeNotMalloced
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|BufferedStackTrace
modifier|*
name|free_stack
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportAllocTypeMismatch
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|BufferedStackTrace
modifier|*
name|free_stack
parameter_list|,
name|AllocType
name|alloc_type
parameter_list|,
name|AllocType
name|dealloc_type
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportMallocUsableSizeNotOwned
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|BufferedStackTrace
modifier|*
name|stack
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportSanitizerGetAllocatedSizeNotOwned
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|BufferedStackTrace
modifier|*
name|stack
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportStringFunctionMemoryRangesOverlap
parameter_list|(
specifier|const
name|char
modifier|*
name|function
parameter_list|,
specifier|const
name|char
modifier|*
name|offset1
parameter_list|,
name|uptr
name|length1
parameter_list|,
specifier|const
name|char
modifier|*
name|offset2
parameter_list|,
name|uptr
name|length2
parameter_list|,
name|BufferedStackTrace
modifier|*
name|stack
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportStringFunctionSizeOverflow
parameter_list|(
name|uptr
name|offset
parameter_list|,
name|uptr
name|size
parameter_list|,
name|BufferedStackTrace
modifier|*
name|stack
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportBadParamsToAnnotateContiguousContainer
parameter_list|(
name|uptr
name|beg
parameter_list|,
name|uptr
name|end
parameter_list|,
name|uptr
name|old_mid
parameter_list|,
name|uptr
name|new_mid
parameter_list|,
name|BufferedStackTrace
modifier|*
name|stack
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportODRViolation
parameter_list|(
specifier|const
name|__asan_global
modifier|*
name|g1
parameter_list|,
name|u32
name|stack_id1
parameter_list|,
specifier|const
name|__asan_global
modifier|*
name|g2
parameter_list|,
name|u32
name|stack_id2
parameter_list|)
function_decl|;
comment|// Mac-specific errors and warnings.
name|void
name|WarnMacFreeUnallocated
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|uptr
name|zone_ptr
parameter_list|,
specifier|const
name|char
modifier|*
name|zone_name
parameter_list|,
name|BufferedStackTrace
modifier|*
name|stack
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportMacMzReallocUnknown
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|uptr
name|zone_ptr
parameter_list|,
specifier|const
name|char
modifier|*
name|zone_name
parameter_list|,
name|BufferedStackTrace
modifier|*
name|stack
parameter_list|)
function_decl|;
name|void
name|NORETURN
name|ReportMacCfReallocUnknown
parameter_list|(
name|uptr
name|addr
parameter_list|,
name|uptr
name|zone_ptr
parameter_list|,
specifier|const
name|char
modifier|*
name|zone_name
parameter_list|,
name|BufferedStackTrace
modifier|*
name|stack
parameter_list|)
function_decl|;
block|}
end_decl_stmt

begin_comment
comment|// namespace __asan
end_comment

end_unit

