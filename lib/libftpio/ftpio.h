begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|_FTP_H_INCLUDE
end_ifndef

begin_define
define|#
directive|define
name|_FTP_H_INCLUDE
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_include
include|#
directive|include
file|<time.h>
end_include

begin_comment
comment|/*  * ----------------------------------------------------------------------------  * "THE BEER-WARE LICENSE" (Revision 42):  *<phk@login.dknet.dk> wrote this file.  As long as you retain this notice you  * can do whatever you want with this stuff. If we meet some day, and you think  * this stuff is worth it, you can buy me a beer in return.   Poul-Henning Kamp  * ----------------------------------------------------------------------------  *  * Major Changelog:  *  * Jordan K. Hubbard  * 17 Jan 1996  *  * Turned inside out. Now returns xfers as new file ids, not as a special  * `state' of FTP_t  *  * $Id: ftpio.h,v 1.8.2.1 1996/11/28 08:09:56 phk Exp $  */
end_comment

begin_comment
comment|/* Internal housekeeping data structure for FTP sessions */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
enum|enum
block|{
name|init
block|,
name|isopen
block|,
name|quit
block|}
name|con_state
enum|;
name|int
name|fd_ctrl
decl_stmt|;
name|int
name|addrtype
decl_stmt|;
name|char
modifier|*
name|host
decl_stmt|;
name|char
modifier|*
name|file
decl_stmt|;
name|int
name|errno
decl_stmt|;
name|int
name|is_binary
decl_stmt|;
name|int
name|is_passive
decl_stmt|;
name|int
name|is_verbose
decl_stmt|;
block|}
typedef|*
name|FTP_t
typedef|;
end_typedef

begin_comment
comment|/* Structure we use to match FTP error codes with readable strings */
end_comment

begin_struct
struct|struct
name|ftperr
block|{
specifier|const
name|int
name|num
decl_stmt|;
specifier|const
name|char
modifier|*
name|string
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|__BEGIN_DECLS
specifier|extern
expr|struct
name|ftperr
name|ftpErrList
index|[]
expr_stmt|;
end_expr_stmt

begin_decl_stmt
specifier|extern
name|int
specifier|const
name|ftpErrListLength
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Exported routines - deal only with FILE* type */
end_comment

begin_function_decl
specifier|extern
name|FILE
modifier|*
name|ftpLogin
parameter_list|(
name|char
modifier|*
name|host
parameter_list|,
name|char
modifier|*
name|user
parameter_list|,
name|char
modifier|*
name|passwd
parameter_list|,
name|int
name|port
parameter_list|,
name|int
name|verbose
parameter_list|,
name|int
modifier|*
name|retcode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ftpChdir
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|,
name|char
modifier|*
name|dir
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ftpErrno
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|off_t
name|ftpGetSize
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|,
name|char
modifier|*
name|file
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|FILE
modifier|*
name|ftpGet
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|,
name|char
modifier|*
name|file
parameter_list|,
name|off_t
modifier|*
name|seekto
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|FILE
modifier|*
name|ftpPut
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|,
name|char
modifier|*
name|file
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ftpAscii
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ftpBinary
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ftpPassive
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|,
name|int
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ftpVerbose
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|,
name|int
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|FILE
modifier|*
name|ftpGetURL
parameter_list|(
name|char
modifier|*
name|url
parameter_list|,
name|char
modifier|*
name|user
parameter_list|,
name|char
modifier|*
name|passwd
parameter_list|,
name|int
modifier|*
name|retcode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|FILE
modifier|*
name|ftpPutURL
parameter_list|(
name|char
modifier|*
name|url
parameter_list|,
name|char
modifier|*
name|user
parameter_list|,
name|char
modifier|*
name|passwd
parameter_list|,
name|int
modifier|*
name|retcode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|time_t
name|ftpGetModtime
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|,
name|char
modifier|*
name|s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|ftpErrString
parameter_list|(
name|int
name|errno
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _FTP_H_INCLUDE */
end_comment

end_unit

