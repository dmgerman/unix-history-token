begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2005 David Xu<davidxu@freebsd.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice unmodified, this list of conditions, and the following  *    disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SIGEV_THREAD_H_
end_ifndef

begin_define
define|#
directive|define
name|_SIGEV_THREAD_H_
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<sys/queue.h>
end_include

begin_include
include|#
directive|include
file|<setjmp.h>
end_include

begin_struct_decl
struct_decl|struct
name|sigev_thread_node
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|sigev_node
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|uintptr_t
name|sigev_id_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|sigev_dispatch_t
function_decl|)
parameter_list|(
name|struct
name|sigev_node
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|sigev_node
block|{
name|LIST_ENTRY
argument_list|(
argument|sigev_node
argument_list|)
name|sn_link
expr_stmt|;
name|LIST_ENTRY
argument_list|(
argument|sigev_node
argument_list|)
name|sn_allist
expr_stmt|;
name|TAILQ_ENTRY
argument_list|(
argument|sigev_node
argument_list|)
name|sn_actq
expr_stmt|;
name|int
name|sn_type
decl_stmt|;
name|sigev_id_t
name|sn_id
decl_stmt|;
name|sigev_dispatch_t
name|sn_dispatch
decl_stmt|;
name|union
name|sigval
name|sn_value
decl_stmt|;
name|void
modifier|*
name|sn_func
decl_stmt|;
name|int
name|sn_flags
decl_stmt|;
name|int
name|sn_gen
decl_stmt|;
name|int
name|sn_usethreadpool
decl_stmt|;
name|siginfo_t
name|sn_info
decl_stmt|;
name|struct
name|sigev_thread_node
modifier|*
name|sn_tn
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|sigev_thread_attr
block|{
name|int
name|sna_policy
decl_stmt|;
name|int
name|sna_inherit
decl_stmt|;
name|int
name|sna_prio
decl_stmt|;
name|size_t
name|sna_stacksize
decl_stmt|;
name|void
modifier|*
name|sna_stackaddr
decl_stmt|;
name|size_t
name|sna_guardsize
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|sigev_thread_node
block|{
name|TAILQ_ENTRY
argument_list|(
argument|sigev_thread_node
argument_list|)
name|tn_link
expr_stmt|;
name|pthread_t
name|tn_thread
decl_stmt|;
name|struct
name|sigev_node
modifier|*
name|tn_cur
decl_stmt|;
name|struct
name|sigev_thread_attr
name|tn_sna
decl_stmt|;
name|int
name|tn_refcount
decl_stmt|;
name|long
name|tn_lwpid
decl_stmt|;
name|jmp_buf
name|tn_jbuf
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|SNF_WORKING
value|0x01
end_define

begin_define
define|#
directive|define
name|SNF_REMOVED
value|0x02
end_define

begin_define
define|#
directive|define
name|SNF_ONESHOT
value|0x04
end_define

begin_define
define|#
directive|define
name|SNF_ACTQ
value|0x08
end_define

begin_define
define|#
directive|define
name|SNF_THREADPOOL
value|0x10
end_define

begin_define
define|#
directive|define
name|SIGEV_SIGSERVICE
value|(SIGTHR+1)
end_define

begin_function_decl
name|int
name|__sigev_check_init
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|sigev_node
modifier|*
name|__sigev_alloc
parameter_list|(
name|int
parameter_list|,
specifier|const
name|struct
name|sigevent
modifier|*
parameter_list|,
name|struct
name|sigev_node
modifier|*
parameter_list|,
name|int
name|usethreadpool
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|sigev_node
modifier|*
name|__sigev_find
parameter_list|(
name|int
parameter_list|,
name|sigev_id_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__sigev_get_sigevent
parameter_list|(
name|struct
name|sigev_node
modifier|*
parameter_list|,
name|struct
name|sigevent
modifier|*
parameter_list|,
name|sigev_id_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__sigev_register
parameter_list|(
name|struct
name|sigev_node
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__sigev_delete
parameter_list|(
name|int
parameter_list|,
name|sigev_id_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__sigev_delete_node
parameter_list|(
name|struct
name|sigev_node
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__sigev_list_lock
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__sigev_list_unlock
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__sigev_thread_list_lock
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__sigev_thread_list_unlock
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__sigev_free
parameter_list|(
name|struct
name|sigev_node
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

