begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2005-2006 Joseph Koshy  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_PMCLOG_H_
end_ifndef

begin_define
define|#
directive|define
name|_PMCLOG_H_
end_define

begin_include
include|#
directive|include
file|<sys/pmclog.h>
end_include

begin_enum
enum|enum
name|pmclog_state
block|{
name|PMCLOG_OK
block|,
name|PMCLOG_EOF
block|,
name|PMCLOG_REQUIRE_DATA
block|,
name|PMCLOG_ERROR
block|}
enum|;
end_enum

begin_struct
struct|struct
name|pmclog_ev_dropnotify
block|{ }
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_closelog
block|{ }
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_initialize
block|{
name|uint32_t
name|pl_version
decl_stmt|;
name|uint32_t
name|pl_arch
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_map_in
block|{
name|pid_t
name|pl_pid
decl_stmt|;
name|uintfptr_t
name|pl_start
decl_stmt|;
name|char
name|pl_pathname
index|[
name|PATH_MAX
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_map_out
block|{
name|pid_t
name|pl_pid
decl_stmt|;
name|uintfptr_t
name|pl_start
decl_stmt|;
name|uintfptr_t
name|pl_end
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_pcsample
block|{
name|uintfptr_t
name|pl_pc
decl_stmt|;
name|pid_t
name|pl_pid
decl_stmt|;
name|pmc_id_t
name|pl_pmcid
decl_stmt|;
name|uint32_t
name|pl_usermode
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_pmcallocate
block|{
name|uint32_t
name|pl_event
decl_stmt|;
specifier|const
name|char
modifier|*
name|pl_evname
decl_stmt|;
name|uint32_t
name|pl_flags
decl_stmt|;
name|pmc_id_t
name|pl_pmcid
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_pmcattach
block|{
name|pmc_id_t
name|pl_pmcid
decl_stmt|;
name|pid_t
name|pl_pid
decl_stmt|;
name|char
name|pl_pathname
index|[
name|PATH_MAX
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_pmcdetach
block|{
name|pmc_id_t
name|pl_pmcid
decl_stmt|;
name|pid_t
name|pl_pid
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_proccsw
block|{
name|pid_t
name|pl_pid
decl_stmt|;
name|pmc_id_t
name|pl_pmcid
decl_stmt|;
name|pmc_value_t
name|pl_value
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_procexec
block|{
name|pid_t
name|pl_pid
decl_stmt|;
name|pmc_id_t
name|pl_pmcid
decl_stmt|;
name|uintfptr_t
name|pl_entryaddr
decl_stmt|;
name|char
name|pl_pathname
index|[
name|PATH_MAX
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_procexit
block|{
name|uint32_t
name|pl_pid
decl_stmt|;
name|pmc_id_t
name|pl_pmcid
decl_stmt|;
name|pmc_value_t
name|pl_value
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_procfork
block|{
name|pid_t
name|pl_oldpid
decl_stmt|;
name|pid_t
name|pl_newpid
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_sysexit
block|{
name|pid_t
name|pl_pid
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev_userdata
block|{
name|uint32_t
name|pl_userdata
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pmclog_ev
block|{
name|enum
name|pmclog_state
name|pl_state
decl_stmt|;
comment|/* state after 'get_event()' */
name|off_t
name|pl_offset
decl_stmt|;
comment|/* byte offset in stream */
name|size_t
name|pl_count
decl_stmt|;
comment|/* count of records so far */
name|struct
name|timespec
name|pl_ts
decl_stmt|;
comment|/* log entry timestamp */
name|enum
name|pmclog_type
name|pl_type
decl_stmt|;
comment|/* type of log entry */
union|union
block|{
comment|/* log entry data */
name|struct
name|pmclog_ev_closelog
name|pl_cl
decl_stmt|;
name|struct
name|pmclog_ev_dropnotify
name|pl_dn
decl_stmt|;
name|struct
name|pmclog_ev_initialize
name|pl_i
decl_stmt|;
name|struct
name|pmclog_ev_map_in
name|pl_mi
decl_stmt|;
name|struct
name|pmclog_ev_map_out
name|pl_mo
decl_stmt|;
name|struct
name|pmclog_ev_pcsample
name|pl_s
decl_stmt|;
name|struct
name|pmclog_ev_pmcallocate
name|pl_a
decl_stmt|;
name|struct
name|pmclog_ev_pmcattach
name|pl_t
decl_stmt|;
name|struct
name|pmclog_ev_pmcdetach
name|pl_d
decl_stmt|;
name|struct
name|pmclog_ev_proccsw
name|pl_c
decl_stmt|;
name|struct
name|pmclog_ev_procexec
name|pl_x
decl_stmt|;
name|struct
name|pmclog_ev_procexit
name|pl_e
decl_stmt|;
name|struct
name|pmclog_ev_procfork
name|pl_f
decl_stmt|;
name|struct
name|pmclog_ev_sysexit
name|pl_se
decl_stmt|;
name|struct
name|pmclog_ev_userdata
name|pl_u
decl_stmt|;
block|}
name|pl_u
union|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|PMCLOG_FD_NONE
value|(-1)
end_define

begin_function_decl
name|void
modifier|*
name|pmclog_open
parameter_list|(
name|int
name|_fd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|pmclog_feed
parameter_list|(
name|void
modifier|*
name|_cookie
parameter_list|,
name|char
modifier|*
name|_data
parameter_list|,
name|int
name|_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|pmclog_read
parameter_list|(
name|void
modifier|*
name|_cookie
parameter_list|,
name|struct
name|pmclog_ev
modifier|*
name|_ev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|pmclog_close
parameter_list|(
name|void
modifier|*
name|_cookie
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

