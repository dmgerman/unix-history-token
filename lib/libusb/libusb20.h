begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/*-  * Copyright (c) 2008 Hans Petter Selasky. All rights reserved.  * Copyright (c) 2007-2008 Daniel Drake.  All rights reserved.  * Copyright (c) 2001 Johannes Erdfelt.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_LIBUSB20_H_
end_ifndef

begin_define
define|#
directive|define
name|_LIBUSB20_H_
end_define

begin_include
include|#
directive|include
file|<stdint.h>
end_include

begin_include
include|#
directive|include
file|<time.h>
end_include

begin_include
include|#
directive|include
file|<string.h>
end_include

begin_include
include|#
directive|include
file|<sys/time.h>
end_include

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<sys/endian.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
if|#
directive|if
literal|0
block|};
comment|/* style */
endif|#
directive|endif
comment|/** \ingroup misc  * Error codes. Most libusb20 functions return 0 on success or one of  * these codes on failure.  */
enum|enum
name|libusb20_error
block|{
comment|/** Success (no error) */
name|LIBUSB20_SUCCESS
init|=
literal|0
block|,
comment|/** Input/output error */
name|LIBUSB20_ERROR_IO
init|=
operator|-
literal|1
block|,
comment|/** Invalid parameter */
name|LIBUSB20_ERROR_INVALID_PARAM
init|=
operator|-
literal|2
block|,
comment|/** Access denied (insufficient permissions) */
name|LIBUSB20_ERROR_ACCESS
init|=
operator|-
literal|3
block|,
comment|/** No such device (it may have been disconnected) */
name|LIBUSB20_ERROR_NO_DEVICE
init|=
operator|-
literal|4
block|,
comment|/** Entity not found */
name|LIBUSB20_ERROR_NOT_FOUND
init|=
operator|-
literal|5
block|,
comment|/** Resource busy */
name|LIBUSB20_ERROR_BUSY
init|=
operator|-
literal|6
block|,
comment|/** Operation timed out */
name|LIBUSB20_ERROR_TIMEOUT
init|=
operator|-
literal|7
block|,
comment|/** Overflow */
name|LIBUSB20_ERROR_OVERFLOW
init|=
operator|-
literal|8
block|,
comment|/** Pipe error */
name|LIBUSB20_ERROR_PIPE
init|=
operator|-
literal|9
block|,
comment|/** System call interrupted (perhaps due to signal) */
name|LIBUSB20_ERROR_INTERRUPTED
init|=
operator|-
literal|10
block|,
comment|/** Insufficient memory */
name|LIBUSB20_ERROR_NO_MEM
init|=
operator|-
literal|11
block|,
comment|/** Operation not supported or unimplemented on this platform */
name|LIBUSB20_ERROR_NOT_SUPPORTED
init|=
operator|-
literal|12
block|,
comment|/** Other error */
name|LIBUSB20_ERROR_OTHER
init|=
operator|-
literal|99
block|, }
enum|;
comment|/** \ingroup asyncio  * libusb20_tr_get_status() values */
enum|enum
name|libusb20_transfer_status
block|{
comment|/** Transfer completed without error. Note that this does not 	 * indicate that the entire amount of requested data was 	 * transferred. */
name|LIBUSB20_TRANSFER_COMPLETED
block|,
comment|/** Callback code to start transfer */
name|LIBUSB20_TRANSFER_START
block|,
comment|/** Drain complete callback code */
name|LIBUSB20_TRANSFER_DRAINED
block|,
comment|/** Transfer failed */
name|LIBUSB20_TRANSFER_ERROR
block|,
comment|/** Transfer timed out */
name|LIBUSB20_TRANSFER_TIMED_OUT
block|,
comment|/** Transfer was cancelled */
name|LIBUSB20_TRANSFER_CANCELLED
block|,
comment|/** For bulk/interrupt endpoints: halt condition detected 	 * (endpoint stalled). For control endpoints: control request 	 * not supported. */
name|LIBUSB20_TRANSFER_STALL
block|,
comment|/** Device was disconnected */
name|LIBUSB20_TRANSFER_NO_DEVICE
block|,
comment|/** Device sent more data than requested */
name|LIBUSB20_TRANSFER_OVERFLOW
block|, }
enum|;
comment|/** \ingroup asyncio  * libusb20_tr_set_flags() values */
enum|enum
name|libusb20_transfer_flags
block|{
comment|/** Report a short frame as error */
name|LIBUSB20_TRANSFER_SINGLE_SHORT_NOT_OK
init|=
literal|0x0001
block|,
comment|/** Multiple short frames are not allowed */
name|LIBUSB20_TRANSFER_MULTI_SHORT_NOT_OK
init|=
literal|0x0002
block|,
comment|/** All transmitted frames are short terminated */
name|LIBUSB20_TRANSFER_FORCE_SHORT
init|=
literal|0x0004
block|,
comment|/** Will do a clear-stall before xfer */
name|LIBUSB20_TRANSFER_DO_CLEAR_STALL
init|=
literal|0x0008
block|, }
enum|;
comment|/** \ingroup misc  * libusb20_dev_get_mode() values  */
enum|enum
name|libusb20_device_mode
block|{
name|LIBUSB20_MODE_HOST
block|,
comment|/* default */
name|LIBUSB20_MODE_DEVICE
block|, }
enum|;
comment|/** \ingroup misc  * libusb20_dev_get_speed() values  */
enum|enum
block|{
name|LIBUSB20_SPEED_UNKNOWN
block|,
comment|/* default */
name|LIBUSB20_SPEED_LOW
block|,
name|LIBUSB20_SPEED_FULL
block|,
name|LIBUSB20_SPEED_HIGH
block|,
name|LIBUSB20_SPEED_VARIABLE
block|,
name|LIBUSB20_SPEED_SUPER
block|, }
enum|;
comment|/** \ingroup misc  * libusb20_dev_set_power() values  */
enum|enum
block|{
name|LIBUSB20_POWER_OFF
block|,
name|LIBUSB20_POWER_ON
block|,
name|LIBUSB20_POWER_SAVE
block|,
name|LIBUSB20_POWER_SUSPEND
block|,
name|LIBUSB20_POWER_RESUME
block|, }
enum|;
struct_decl|struct
name|usb_device_info
struct_decl|;
struct_decl|struct
name|libusb20_transfer
struct_decl|;
struct_decl|struct
name|libusb20_backend
struct_decl|;
struct_decl|struct
name|libusb20_backend_methods
struct_decl|;
struct_decl|struct
name|libusb20_device
struct_decl|;
struct_decl|struct
name|libusb20_device_methods
struct_decl|;
struct_decl|struct
name|libusb20_config
struct_decl|;
struct_decl|struct
name|LIBUSB20_CONTROL_SETUP_DECODED
struct_decl|;
struct_decl|struct
name|LIBUSB20_DEVICE_DESC_DECODED
struct_decl|;
typedef|typedef
name|void
function_decl|(
name|libusb20_tr_callback_t
function_decl|)
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
struct|struct
name|libusb20_quirk
block|{
name|uint16_t
name|vid
decl_stmt|;
comment|/* vendor ID */
name|uint16_t
name|pid
decl_stmt|;
comment|/* product ID */
name|uint16_t
name|bcdDeviceLow
decl_stmt|;
comment|/* low revision value, inclusive */
name|uint16_t
name|bcdDeviceHigh
decl_stmt|;
comment|/* high revision value, inclusive */
name|uint16_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
comment|/* for the future */
comment|/* quirk name, UQ_XXX, including terminating zero */
name|char
name|quirkname
index|[
literal|64
operator|-
literal|12
index|]
decl_stmt|;
block|}
struct|;
comment|/* USB transfer operations */
name|int
name|libusb20_tr_close
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|int
name|libusb20_tr_open
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|uint32_t
name|max_buf_size
parameter_list|,
name|uint32_t
name|max_frame_count
parameter_list|,
name|uint8_t
name|ep_no
parameter_list|)
function_decl|;
name|struct
name|libusb20_transfer
modifier|*
name|libusb20_tr_get_pointer
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint16_t
name|tr_index
parameter_list|)
function_decl|;
name|uint16_t
name|libusb20_tr_get_time_complete
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|uint32_t
name|libusb20_tr_get_actual_frames
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|uint32_t
name|libusb20_tr_get_actual_length
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|uint32_t
name|libusb20_tr_get_max_frames
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|uint32_t
name|libusb20_tr_get_max_packet_length
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|uint32_t
name|libusb20_tr_get_max_total_length
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|uint8_t
name|libusb20_tr_get_status
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|uint8_t
name|libusb20_tr_pending
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_callback_wrapper
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_clear_stall_sync
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_drain
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_set_buffer
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|void
modifier|*
name|buffer
parameter_list|,
name|uint16_t
name|fr_index
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_set_callback
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|libusb20_tr_callback_t
modifier|*
name|cb
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_set_flags
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|uint8_t
name|flags
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_set_length
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|uint32_t
name|length
parameter_list|,
name|uint16_t
name|fr_index
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_set_priv_sc0
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|void
modifier|*
name|sc0
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_set_priv_sc1
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|void
modifier|*
name|sc1
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_set_timeout
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|uint32_t
name|timeout
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_set_total_frames
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|uint32_t
name|nFrames
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_setup_bulk
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|void
modifier|*
name|pbuf
parameter_list|,
name|uint32_t
name|length
parameter_list|,
name|uint32_t
name|timeout
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_setup_control
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|void
modifier|*
name|psetup
parameter_list|,
name|void
modifier|*
name|pbuf
parameter_list|,
name|uint32_t
name|timeout
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_setup_intr
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|void
modifier|*
name|pbuf
parameter_list|,
name|uint32_t
name|length
parameter_list|,
name|uint32_t
name|timeout
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_setup_isoc
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|,
name|void
modifier|*
name|pbuf
parameter_list|,
name|uint32_t
name|length
parameter_list|,
name|uint16_t
name|fr_index
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_start
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_stop
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|void
name|libusb20_tr_submit
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|void
modifier|*
name|libusb20_tr_get_priv_sc0
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
name|void
modifier|*
name|libusb20_tr_get_priv_sc1
parameter_list|(
name|struct
name|libusb20_transfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
comment|/* USB device operations */
specifier|const
name|char
modifier|*
name|libusb20_dev_get_backend_name
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
name|libusb20_dev_get_desc
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_claim_interface
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint8_t
name|iface_index
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_close
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_detach_kernel_driver
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint8_t
name|iface_index
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_set_config_index
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint8_t
name|configIndex
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_get_debug
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_get_fd
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_kernel_driver_active
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint8_t
name|iface_index
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_open
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint16_t
name|transfer_max
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_process
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_release_interface
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint8_t
name|iface_index
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_request_sync
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|struct
name|LIBUSB20_CONTROL_SETUP_DECODED
modifier|*
name|setup
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|uint16_t
modifier|*
name|pactlen
parameter_list|,
name|uint32_t
name|timeout
parameter_list|,
name|uint8_t
name|flags
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_req_string_sync
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint8_t
name|index
parameter_list|,
name|uint16_t
name|langid
parameter_list|,
name|void
modifier|*
name|ptr
parameter_list|,
name|uint16_t
name|len
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_req_string_simple_sync
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint8_t
name|index
parameter_list|,
name|void
modifier|*
name|ptr
parameter_list|,
name|uint16_t
name|len
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_reset
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_set_power_mode
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint8_t
name|power_mode
parameter_list|)
function_decl|;
name|uint8_t
name|libusb20_dev_get_power_mode
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_set_alt_index
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint8_t
name|iface_index
parameter_list|,
name|uint8_t
name|alt_index
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_get_info
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|struct
name|usb_device_info
modifier|*
name|pinfo
parameter_list|)
function_decl|;
name|int
name|libusb20_dev_get_iface_desc
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint8_t
name|iface_index
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|uint8_t
name|len
parameter_list|)
function_decl|;
name|struct
name|LIBUSB20_DEVICE_DESC_DECODED
modifier|*
name|libusb20_dev_get_device_desc
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|struct
name|libusb20_config
modifier|*
name|libusb20_dev_alloc_config
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|uint8_t
name|config_index
parameter_list|)
function_decl|;
name|struct
name|libusb20_device
modifier|*
name|libusb20_dev_alloc
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|uint8_t
name|libusb20_dev_get_address
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|uint8_t
name|libusb20_dev_get_bus_number
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|uint8_t
name|libusb20_dev_get_mode
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|uint8_t
name|libusb20_dev_get_speed
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|uint8_t
name|libusb20_dev_get_config_index
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|void
name|libusb20_dev_free
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|void
name|libusb20_dev_set_debug
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|int
name|debug
parameter_list|)
function_decl|;
name|void
name|libusb20_dev_wait_process
parameter_list|(
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|int
name|timeout
parameter_list|)
function_decl|;
comment|/* USB global operations */
name|int
name|libusb20_be_get_dev_quirk
parameter_list|(
name|struct
name|libusb20_backend
modifier|*
name|pbe
parameter_list|,
name|uint16_t
name|index
parameter_list|,
name|struct
name|libusb20_quirk
modifier|*
name|pq
parameter_list|)
function_decl|;
name|int
name|libusb20_be_get_quirk_name
parameter_list|(
name|struct
name|libusb20_backend
modifier|*
name|pbe
parameter_list|,
name|uint16_t
name|index
parameter_list|,
name|struct
name|libusb20_quirk
modifier|*
name|pq
parameter_list|)
function_decl|;
name|int
name|libusb20_be_add_dev_quirk
parameter_list|(
name|struct
name|libusb20_backend
modifier|*
name|pbe
parameter_list|,
name|struct
name|libusb20_quirk
modifier|*
name|pq
parameter_list|)
function_decl|;
name|int
name|libusb20_be_remove_dev_quirk
parameter_list|(
name|struct
name|libusb20_backend
modifier|*
name|pbe
parameter_list|,
name|struct
name|libusb20_quirk
modifier|*
name|pq
parameter_list|)
function_decl|;
name|int
name|libusb20_be_get_template
parameter_list|(
name|struct
name|libusb20_backend
modifier|*
name|pbe
parameter_list|,
name|int
modifier|*
name|ptemp
parameter_list|)
function_decl|;
name|int
name|libusb20_be_set_template
parameter_list|(
name|struct
name|libusb20_backend
modifier|*
name|pbe
parameter_list|,
name|int
name|temp
parameter_list|)
function_decl|;
comment|/* USB backend operations */
name|struct
name|libusb20_backend
modifier|*
name|libusb20_be_alloc
parameter_list|(
specifier|const
name|struct
name|libusb20_backend_methods
modifier|*
name|methods
parameter_list|)
function_decl|;
name|struct
name|libusb20_backend
modifier|*
name|libusb20_be_alloc_default
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|struct
name|libusb20_backend
modifier|*
name|libusb20_be_alloc_freebsd
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|struct
name|libusb20_backend
modifier|*
name|libusb20_be_alloc_linux
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|struct
name|libusb20_backend
modifier|*
name|libusb20_be_alloc_ugen20
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|struct
name|libusb20_device
modifier|*
name|libusb20_be_device_foreach
parameter_list|(
name|struct
name|libusb20_backend
modifier|*
name|pbe
parameter_list|,
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|void
name|libusb20_be_dequeue_device
parameter_list|(
name|struct
name|libusb20_backend
modifier|*
name|pbe
parameter_list|,
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|void
name|libusb20_be_enqueue_device
parameter_list|(
name|struct
name|libusb20_backend
modifier|*
name|pbe
parameter_list|,
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|)
function_decl|;
name|void
name|libusb20_be_free
parameter_list|(
name|struct
name|libusb20_backend
modifier|*
name|pbe
parameter_list|)
function_decl|;
if|#
directive|if
literal|0
block|{
comment|/* style */
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _LIBUSB20_H_ */
end_comment

end_unit

