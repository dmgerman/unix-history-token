begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/*-  * Copyright (c) 2009 Sylvestre Gallon. All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__LIBUSB10_H__
end_ifndef

begin_define
define|#
directive|define
name|__LIBUSB10_H__
end_define

begin_include
include|#
directive|include
file|<sys/queue.h>
end_include

begin_define
define|#
directive|define
name|GET_CONTEXT
parameter_list|(
name|ctx
parameter_list|)
value|(((ctx) == NULL) ? usbi_default_context : (ctx))
end_define

begin_define
define|#
directive|define
name|UNEXPORTED
value|__attribute__((__visibility__("hidden")))
end_define

begin_define
define|#
directive|define
name|CTX_LOCK
parameter_list|(
name|ctx
parameter_list|)
value|pthread_mutex_lock(&(ctx)->ctx_lock)
end_define

begin_define
define|#
directive|define
name|CTX_TRYLOCK
parameter_list|(
name|ctx
parameter_list|)
value|pthread_mutex_trylock(&(ctx)->ctx_lock)
end_define

begin_define
define|#
directive|define
name|CTX_UNLOCK
parameter_list|(
name|ctx
parameter_list|)
value|pthread_mutex_unlock(&(ctx)->ctx_lock)
end_define

begin_define
define|#
directive|define
name|DPRINTF
parameter_list|(
name|ctx
parameter_list|,
name|dbg
parameter_list|,
name|format
parameter_list|,
name|args
modifier|...
parameter_list|)
value|do {	\     if ((ctx)->debug == dbg) {			\ 	switch (dbg) {				\ 	case LIBUSB_DEBUG_FUNCTION:		\ 		printf("LIBUSB_FUNCTION: "	\ 		    format "\n", ## args);	\ 		break;				\ 	case LIBUSB_DEBUG_TRANSFER:		\ 		printf("LIBUSB_TRANSFER: "	\ 		    format "\n", ## args);	\ 		break;				\ 	default:				\ 		break;				\ 	}					\     }						\ } while(0)
end_define

begin_comment
comment|/* internal structures */
end_comment

begin_struct
struct|struct
name|libusb_super_pollfd
block|{
name|TAILQ_ENTRY
argument_list|(
argument|libusb_super_pollfd
argument_list|)
name|entry
expr_stmt|;
name|struct
name|libusb20_device
modifier|*
name|pdev
decl_stmt|;
name|struct
name|libusb_pollfd
name|pollfd
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|libusb_super_transfer
block|{
name|TAILQ_ENTRY
argument_list|(
argument|libusb_super_transfer
argument_list|)
name|entry
expr_stmt|;
name|uint8_t
modifier|*
name|curr_data
decl_stmt|;
name|uint32_t
name|rem_len
decl_stmt|;
name|uint32_t
name|last_len
decl_stmt|;
name|uint8_t
name|flags
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|libusb_context
block|{
name|int
name|debug
decl_stmt|;
name|int
name|debug_fixed
decl_stmt|;
name|int
name|ctrl_pipe
index|[
literal|2
index|]
decl_stmt|;
name|int
name|tr_done_ref
decl_stmt|;
name|int
name|tr_done_gen
decl_stmt|;
name|pthread_mutex_t
name|ctx_lock
decl_stmt|;
name|pthread_cond_t
name|ctx_cond
decl_stmt|;
name|pthread_t
name|ctx_handler
decl_stmt|;
define|#
directive|define
name|NO_THREAD
value|((pthread_t)-1)
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|libusb_super_pollfd
argument_list|)
name|pollfds
expr_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|libusb_super_transfer
argument_list|)
name|tr_done
expr_stmt|;
name|struct
name|libusb_super_pollfd
name|ctx_poll
decl_stmt|;
name|libusb_pollfd_added_cb
name|fd_added_cb
decl_stmt|;
name|libusb_pollfd_removed_cb
name|fd_removed_cb
decl_stmt|;
name|void
modifier|*
name|fd_cb_user_data
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|libusb_device
block|{
name|int
name|refcnt
decl_stmt|;
name|uint32_t
name|claimed_interfaces
decl_stmt|;
name|struct
name|libusb_super_pollfd
name|dev_poll
decl_stmt|;
name|struct
name|libusb_context
modifier|*
name|ctx
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|libusb_super_transfer
argument_list|)
name|tr_head
expr_stmt|;
name|struct
name|libusb20_device
modifier|*
name|os_priv
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|libusb_context
modifier|*
name|usbi_default_context
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|libusb10_add_pollfd
parameter_list|(
name|libusb_context
modifier|*
name|ctx
parameter_list|,
name|struct
name|libusb_super_pollfd
modifier|*
name|pollfd
parameter_list|,
name|struct
name|libusb20_device
modifier|*
name|pdev
parameter_list|,
name|int
name|fd
parameter_list|,
name|short
name|events
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|libusb10_remove_pollfd
parameter_list|(
name|libusb_context
modifier|*
name|ctx
parameter_list|,
name|struct
name|libusb_super_pollfd
modifier|*
name|pollfd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|libusb10_cancel_all_transfer
parameter_list|(
name|libusb_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __LIBUSB10_H__ */
end_comment

end_unit

