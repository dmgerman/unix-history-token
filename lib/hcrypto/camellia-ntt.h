begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* camellia.h ver 1.2.0  *  * Copyright (c) 2006,2007  * NTT (Nippon Telegraph and Telephone Corporation) . All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *   notice, this list of conditions and the following disclaimer as  *   the first lines of this file unmodified.  * 2. Redistributions in binary form must reproduce the above copyright  *   notice, this list of conditions and the following disclaimer in the  *   documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY NTT ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL NTT BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HEADER_CAMELLIA_H
end_ifndef

begin_define
define|#
directive|define
name|HEADER_CAMELLIA_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
define|#
directive|define
name|CAMELLIA_BLOCK_SIZE
value|16
define|#
directive|define
name|CAMELLIA_TABLE_BYTE_LEN
value|272
define|#
directive|define
name|CAMELLIA_TABLE_WORD_LEN
value|(CAMELLIA_TABLE_BYTE_LEN / 4)
comment|/* u32 must be 32bit word */
typedef|typedef
name|uint32_t
name|u32
typedef|;
typedef|typedef
name|unsigned
name|char
name|u8
typedef|;
typedef|typedef
name|u32
name|KEY_TABLE_TYPE
index|[
name|CAMELLIA_TABLE_WORD_LEN
index|]
typedef|;
name|void
name|Camellia_Ekeygen
parameter_list|(
specifier|const
name|int
name|keyBitLength
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
name|rawKey
parameter_list|,
name|KEY_TABLE_TYPE
name|keyTable
parameter_list|)
function_decl|;
name|void
name|Camellia_EncryptBlock
parameter_list|(
specifier|const
name|int
name|keyBitLength
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
name|plaintext
parameter_list|,
specifier|const
name|KEY_TABLE_TYPE
name|keyTable
parameter_list|,
name|unsigned
name|char
modifier|*
name|cipherText
parameter_list|)
function_decl|;
name|void
name|Camellia_DecryptBlock
parameter_list|(
specifier|const
name|int
name|keyBitLength
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
name|cipherText
parameter_list|,
specifier|const
name|KEY_TABLE_TYPE
name|keyTable
parameter_list|,
name|unsigned
name|char
modifier|*
name|plaintext
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* HEADER_CAMELLIA_H */
end_comment

end_unit

