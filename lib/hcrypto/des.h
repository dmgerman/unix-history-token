begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2005 Kungliga Tekniska HÃ¶gskolan  * (Royal Institute of Technology, Stockholm, Sweden).  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * 3. Neither the name of the Institute nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_comment
comment|/* $Id$ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_DESperate_H
end_ifndef

begin_define
define|#
directive|define
name|_DESperate_H
value|1
end_define

begin_comment
comment|/* symbol renaming */
end_comment

begin_define
define|#
directive|define
name|_DES_ipfp_test
value|_hc_DES_ipfp_test
end_define

begin_define
define|#
directive|define
name|DES_cbc_cksum
value|hc_DES_cbc_cksum
end_define

begin_define
define|#
directive|define
name|DES_cbc_encrypt
value|hc_DES_cbc_encrypt
end_define

begin_define
define|#
directive|define
name|DES_cfb64_encrypt
value|hc_DES_cfb64_encrypt
end_define

begin_define
define|#
directive|define
name|DES_check_key_parity
value|hc_DES_check_key_parity
end_define

begin_define
define|#
directive|define
name|DES_ecb3_encrypt
value|hc_DES_ecb3_encrypt
end_define

begin_define
define|#
directive|define
name|DES_ecb_encrypt
value|hc_DES_ecb_encrypt
end_define

begin_define
define|#
directive|define
name|DES_ede3_cbc_encrypt
value|hc_DES_ede3_cbc_encrypt
end_define

begin_define
define|#
directive|define
name|DES_encrypt
value|hc_DES_encrypt
end_define

begin_define
define|#
directive|define
name|DES_generate_random_block
value|hc_DES_generate_random_block
end_define

begin_define
define|#
directive|define
name|DES_init_random_number_generator
value|hc_DES_init_random_number_generator
end_define

begin_define
define|#
directive|define
name|DES_is_weak_key
value|hc_DES_is_weak_key
end_define

begin_define
define|#
directive|define
name|DES_key_sched
value|hc_DES_key_sched
end_define

begin_define
define|#
directive|define
name|DES_new_random_key
value|hc_DES_new_random_key
end_define

begin_define
define|#
directive|define
name|DES_pcbc_encrypt
value|hc_DES_pcbc_encrypt
end_define

begin_define
define|#
directive|define
name|DES_rand_data
value|hc_DES_rand_data
end_define

begin_define
define|#
directive|define
name|DES_random_key
value|hc_DES_random_key
end_define

begin_define
define|#
directive|define
name|DES_read_password
value|hc_DES_read_password
end_define

begin_define
define|#
directive|define
name|DES_set_key
value|hc_DES_set_key
end_define

begin_define
define|#
directive|define
name|DES_set_key_checked
value|hc_DES_set_key_checked
end_define

begin_define
define|#
directive|define
name|DES_set_key_unchecked
value|hc_DES_set_key_unchecked
end_define

begin_define
define|#
directive|define
name|DES_set_key_sched
value|hc_DES_set_key_sched
end_define

begin_define
define|#
directive|define
name|DES_set_odd_parity
value|hc_DES_set_odd_parity
end_define

begin_define
define|#
directive|define
name|DES_set_random_generator_seed
value|hc_DES_set_random_generator_seed
end_define

begin_define
define|#
directive|define
name|DES_set_sequence_number
value|hc_DES_set_sequence_number
end_define

begin_define
define|#
directive|define
name|DES_string_to_key
value|hc_DES_string_to_key
end_define

begin_comment
comment|/*  *  */
end_comment

begin_define
define|#
directive|define
name|DES_CBLOCK_LEN
value|8
end_define

begin_define
define|#
directive|define
name|DES_KEY_SZ
value|8
end_define

begin_define
define|#
directive|define
name|DES_ENCRYPT
value|1
end_define

begin_define
define|#
directive|define
name|DES_DECRYPT
value|0
end_define

begin_typedef
typedef|typedef
name|unsigned
name|char
name|DES_cblock
index|[
name|DES_CBLOCK_LEN
index|]
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|DES_key_schedule
block|{
name|uint32_t
name|ks
index|[
literal|32
index|]
decl_stmt|;
block|}
name|DES_key_schedule
typedef|;
end_typedef

begin_comment
comment|/*  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HC_DEPRECATED
end_ifndef

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__GNUC__
argument_list|)
operator|&&
operator|(
operator|(
name|__GNUC__
operator|>
literal|3
operator|)
operator|||
operator|(
operator|(
name|__GNUC__
operator|==
literal|3
operator|)
operator|&&
operator|(
name|__GNUC_MINOR__
operator|>=
literal|1
operator|)
operator|)
operator|)
end_if

begin_define
define|#
directive|define
name|HC_DEPRECATED
value|__attribute__((deprecated))
end_define

begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|_MSC_VER
argument_list|)
operator|&&
operator|(
name|_MSC_VER
operator|>
literal|1200
operator|)
end_elif

begin_define
define|#
directive|define
name|HC_DEPRECATED
value|__declspec(deprecated)
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|HC_DEPRECATED
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
name|void
name|DES_set_odd_parity
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|)
function_decl|;
name|int
name|DES_check_key_parity
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|)
function_decl|;
name|int
name|DES_is_weak_key
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|)
function_decl|;
name|int
name|HC_DEPRECATED
name|DES_set_key
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|)
function_decl|;
name|int
name|DES_set_key_checked
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|)
function_decl|;
name|int
name|DES_set_key_unchecked
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|)
function_decl|;
name|int
name|DES_key_sched
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|)
function_decl|;
name|void
name|DES_string_to_key
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|DES_cblock
modifier|*
parameter_list|)
function_decl|;
name|int
name|DES_read_password
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|HC_DEPRECATED
name|DES_rand_data
parameter_list|(
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|HC_DEPRECATED
name|DES_set_random_generator_seed
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|)
function_decl|;
name|void
name|HC_DEPRECATED
name|DES_generate_random_block
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|)
function_decl|;
name|void
name|HC_DEPRECATED
name|DES_set_sequence_number
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
name|HC_DEPRECATED
name|DES_init_random_number_generator
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|)
function_decl|;
name|void
name|HC_DEPRECATED
name|DES_random_key
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|)
function_decl|;
name|int
name|HC_DEPRECATED
name|DES_new_random_key
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|)
function_decl|;
name|void
name|DES_encrypt
parameter_list|(
name|uint32_t
index|[
literal|2
index|]
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|DES_ecb_encrypt
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|,
name|DES_cblock
modifier|*
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|DES_ecb3_encrypt
parameter_list|(
name|DES_cblock
modifier|*
parameter_list|,
name|DES_cblock
modifier|*
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|DES_pcbc_encrypt
parameter_list|(
specifier|const
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|long
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|,
name|DES_cblock
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|DES_cbc_encrypt
parameter_list|(
specifier|const
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|long
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|,
name|DES_cblock
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|DES_ede3_cbc_encrypt
parameter_list|(
specifier|const
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|long
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|,
name|DES_cblock
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|DES_cfb64_encrypt
parameter_list|(
specifier|const
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|long
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|,
name|DES_cblock
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|uint32_t
name|DES_cbc_cksum
parameter_list|(
specifier|const
name|void
modifier|*
parameter_list|,
name|DES_cblock
modifier|*
parameter_list|,
name|long
parameter_list|,
name|DES_key_schedule
modifier|*
parameter_list|,
name|DES_cblock
modifier|*
parameter_list|)
function_decl|;
name|void
name|_DES_ipfp_test
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _DESperate_H */
end_comment

end_unit

