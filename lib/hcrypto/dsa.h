begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2006 Kungliga Tekniska HÃ¶gskolan  * (Royal Institute of Technology, Stockholm, Sweden).  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * 3. Neither the name of the Institute nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*  * $Id$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_HEIM_DSA_H
end_ifndef

begin_define
define|#
directive|define
name|_HEIM_DSA_H
value|1
end_define

begin_include
include|#
directive|include
file|<hcrypto/bn.h>
end_include

begin_comment
comment|/* symbol renaming */
end_comment

begin_define
define|#
directive|define
name|DSA_null_method
value|hc_DSA_null_method
end_define

begin_define
define|#
directive|define
name|DSA_new
value|hc_DSA_new
end_define

begin_define
define|#
directive|define
name|DSA_free
value|hc_DSA_free
end_define

begin_define
define|#
directive|define
name|DSA_up_ref
value|hc_DSA_up_ref
end_define

begin_define
define|#
directive|define
name|DSA_set_default_method
value|hc_DSA_set_default_method
end_define

begin_define
define|#
directive|define
name|DSA_get_default_method
value|hc_DSA_get_default_method
end_define

begin_define
define|#
directive|define
name|DSA_set_method
value|hc_DSA_set_method
end_define

begin_define
define|#
directive|define
name|DSA_get_method
value|hc_DSA_get_method
end_define

begin_define
define|#
directive|define
name|DSA_set_app_data
value|hc_DSA_set_app_data
end_define

begin_define
define|#
directive|define
name|DSA_get_app_data
value|hc_DSA_get_app_data
end_define

begin_define
define|#
directive|define
name|DSA_size
value|hc_DSA_size
end_define

begin_define
define|#
directive|define
name|DSA_verify
value|hc_DSA_verify
end_define

begin_comment
comment|/*  *  */
end_comment

begin_typedef
typedef|typedef
name|struct
name|DSA
name|DSA
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|DSA_METHOD
name|DSA_METHOD
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|DSA_SIG
name|DSA_SIG
typedef|;
end_typedef

begin_struct
struct|struct
name|DSA_SIG
block|{
name|BIGNUM
modifier|*
name|r
decl_stmt|;
name|BIGNUM
modifier|*
name|s
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|DSA_METHOD
block|{
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|DSA_SIG
modifier|*
function_decl|(
modifier|*
name|dsa_do_sign
function_decl|)
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|DSA
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|dsa_sign_setup
function_decl|)
parameter_list|(
name|DSA
modifier|*
parameter_list|,
name|BN_CTX
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|dsa_do_verify
function_decl|)
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|DSA_SIG
modifier|*
parameter_list|,
name|DSA
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|dsa_mod_exp
function_decl|)
parameter_list|(
name|DSA
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BN_CTX
modifier|*
parameter_list|,
name|BN_MONT_CTX
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bn_mod_exp
function_decl|)
parameter_list|(
name|DSA
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
parameter_list|,
name|BN_CTX
modifier|*
parameter_list|,
name|BN_MONT_CTX
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|init
function_decl|)
parameter_list|(
name|DSA
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|finish
function_decl|)
parameter_list|(
name|DSA
modifier|*
parameter_list|)
function_decl|;
name|int
name|flags
decl_stmt|;
name|void
modifier|*
name|app_data
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|DSA
block|{
name|int
name|pad
decl_stmt|;
name|long
name|version
decl_stmt|;
name|int
name|write_params
decl_stmt|;
name|BIGNUM
modifier|*
name|p
decl_stmt|;
name|BIGNUM
modifier|*
name|q
decl_stmt|;
name|BIGNUM
modifier|*
name|g
decl_stmt|;
name|BIGNUM
modifier|*
name|pub_key
decl_stmt|;
name|BIGNUM
modifier|*
name|priv_key
decl_stmt|;
name|BIGNUM
modifier|*
name|kinv
decl_stmt|;
name|BIGNUM
modifier|*
name|r
decl_stmt|;
name|int
name|flags
decl_stmt|;
name|void
modifier|*
name|method_mont_p
decl_stmt|;
name|int
name|references
decl_stmt|;
struct|struct
name|dsa_CRYPTO_EX_DATA
block|{
name|void
modifier|*
name|sk
decl_stmt|;
name|int
name|dummy
decl_stmt|;
block|}
name|ex_data
struct|;
specifier|const
name|DSA_METHOD
modifier|*
name|meth
decl_stmt|;
name|void
modifier|*
name|engine
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  *  */
end_comment

begin_function_decl
specifier|const
name|DSA_METHOD
modifier|*
name|DSA_null_method
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  *  */
end_comment

begin_function_decl
name|DSA
modifier|*
name|DSA_new
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|DSA_free
parameter_list|(
name|DSA
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|DSA_up_ref
parameter_list|(
name|DSA
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|DSA_set_default_method
parameter_list|(
specifier|const
name|DSA_METHOD
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|DSA_METHOD
modifier|*
name|DSA_get_default_method
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|DSA_METHOD
modifier|*
name|DSA_get_method
parameter_list|(
specifier|const
name|DSA
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|DSA_set_method
parameter_list|(
name|DSA
modifier|*
parameter_list|,
specifier|const
name|DSA_METHOD
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|DSA_set_app_data
parameter_list|(
name|DSA
modifier|*
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|DSA_get_app_data
parameter_list|(
name|DSA
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|DSA_size
parameter_list|(
specifier|const
name|DSA
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|DSA_verify
parameter_list|(
name|int
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|DSA
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _HEIM_DSA_H */
end_comment

end_unit

