begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2006 Kungliga Tekniska HÃ¶gskolan  * (Royal Institute of Technology, Stockholm, Sweden).  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * 3. Neither the name of the Institute nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*  * $Id$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_HEIM_DH_H
end_ifndef

begin_define
define|#
directive|define
name|_HEIM_DH_H
value|1
end_define

begin_comment
comment|/* symbol renaming */
end_comment

begin_define
define|#
directive|define
name|DH_null_method
value|hc_DH_null_method
end_define

begin_define
define|#
directive|define
name|DH_tfm_method
value|hc_DH_tfm_method
end_define

begin_define
define|#
directive|define
name|DH_ltm_method
value|hc_DH_ltm_method
end_define

begin_define
define|#
directive|define
name|DH_new
value|hc_DH_new
end_define

begin_define
define|#
directive|define
name|DH_new_method
value|hc_DH_new_method
end_define

begin_define
define|#
directive|define
name|DH_free
value|hc_DH_free
end_define

begin_define
define|#
directive|define
name|DH_up_ref
value|hc_DH_up_ref
end_define

begin_define
define|#
directive|define
name|DH_size
value|hc_DH_size
end_define

begin_define
define|#
directive|define
name|DH_set_default_method
value|hc_DH_set_default_method
end_define

begin_define
define|#
directive|define
name|DH_get_default_method
value|hc_DH_get_default_method
end_define

begin_define
define|#
directive|define
name|DH_set_method
value|hc_DH_set_method
end_define

begin_define
define|#
directive|define
name|DH_get_method
value|hc_DH_get_method
end_define

begin_define
define|#
directive|define
name|DH_set_ex_data
value|hc_DH_set_ex_data
end_define

begin_define
define|#
directive|define
name|DH_get_ex_data
value|hc_DH_get_ex_data
end_define

begin_define
define|#
directive|define
name|DH_generate_parameters_ex
value|hc_DH_generate_parameters_ex
end_define

begin_define
define|#
directive|define
name|DH_check_pubkey
value|hc_DH_check_pubkey
end_define

begin_define
define|#
directive|define
name|DH_generate_key
value|hc_DH_generate_key
end_define

begin_define
define|#
directive|define
name|DH_compute_key
value|hc_DH_compute_key
end_define

begin_define
define|#
directive|define
name|i2d_DHparams
value|hc_i2d_DHparams
end_define

begin_comment
comment|/*  *  */
end_comment

begin_typedef
typedef|typedef
name|struct
name|DH
name|DH
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|DH_METHOD
name|DH_METHOD
typedef|;
end_typedef

begin_include
include|#
directive|include
file|<hcrypto/bn.h>
end_include

begin_include
include|#
directive|include
file|<hcrypto/engine.h>
end_include

begin_struct
struct|struct
name|DH_METHOD
block|{
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|int
function_decl|(
modifier|*
name|generate_key
function_decl|)
parameter_list|(
name|DH
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|compute_key
function_decl|)
parameter_list|(
name|unsigned
name|char
modifier|*
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
parameter_list|,
name|DH
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bn_mod_exp
function_decl|)
parameter_list|(
specifier|const
name|DH
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
parameter_list|,
name|BN_CTX
modifier|*
parameter_list|,
name|BN_MONT_CTX
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|init
function_decl|)
parameter_list|(
name|DH
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|finish
function_decl|)
parameter_list|(
name|DH
modifier|*
parameter_list|)
function_decl|;
name|int
name|flags
decl_stmt|;
name|void
modifier|*
name|app_data
decl_stmt|;
name|int
function_decl|(
modifier|*
name|generate_params
function_decl|)
parameter_list|(
name|DH
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|BN_GENCB
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|DH
block|{
name|int
name|pad
decl_stmt|;
name|int
name|version
decl_stmt|;
name|BIGNUM
modifier|*
name|p
decl_stmt|;
name|BIGNUM
modifier|*
name|g
decl_stmt|;
name|long
name|length
decl_stmt|;
name|BIGNUM
modifier|*
name|pub_key
decl_stmt|;
name|BIGNUM
modifier|*
name|priv_key
decl_stmt|;
name|int
name|flags
decl_stmt|;
name|void
modifier|*
name|method_mont_p
decl_stmt|;
name|BIGNUM
modifier|*
name|q
decl_stmt|;
name|BIGNUM
modifier|*
name|j
decl_stmt|;
name|void
modifier|*
name|seed
decl_stmt|;
name|int
name|seedlen
decl_stmt|;
name|BIGNUM
modifier|*
name|counter
decl_stmt|;
name|int
name|references
decl_stmt|;
struct|struct
name|CRYPTO_EX_DATA
block|{
name|void
modifier|*
name|sk
decl_stmt|;
name|int
name|dummy
decl_stmt|;
block|}
name|ex_data
struct|;
specifier|const
name|DH_METHOD
modifier|*
name|meth
decl_stmt|;
name|ENGINE
modifier|*
name|engine
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* DH_check_pubkey return codes in `codes' argument. */
end_comment

begin_define
define|#
directive|define
name|DH_CHECK_PUBKEY_TOO_SMALL
value|1
end_define

begin_define
define|#
directive|define
name|DH_CHECK_PUBKEY_TOO_LARGE
value|2
end_define

begin_comment
comment|/*  *  */
end_comment

begin_function_decl
specifier|const
name|DH_METHOD
modifier|*
name|DH_null_method
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|DH_METHOD
modifier|*
name|DH_tfm_method
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|DH_METHOD
modifier|*
name|DH_ltm_method
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|DH
modifier|*
name|DH_new
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|DH
modifier|*
name|DH_new_method
parameter_list|(
name|ENGINE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|DH_free
parameter_list|(
name|DH
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|DH_up_ref
parameter_list|(
name|DH
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|DH_size
parameter_list|(
specifier|const
name|DH
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|DH_set_default_method
parameter_list|(
specifier|const
name|DH_METHOD
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|DH_METHOD
modifier|*
name|DH_get_default_method
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|DH_set_method
parameter_list|(
name|DH
modifier|*
parameter_list|,
specifier|const
name|DH_METHOD
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|DH_set_ex_data
parameter_list|(
name|DH
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|DH_get_ex_data
parameter_list|(
name|DH
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|DH_generate_parameters_ex
parameter_list|(
name|DH
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|BN_GENCB
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|DH_check_pubkey
parameter_list|(
specifier|const
name|DH
modifier|*
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|DH_generate_key
parameter_list|(
name|DH
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|DH_compute_key
parameter_list|(
name|unsigned
name|char
modifier|*
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
parameter_list|,
name|DH
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i2d_DHparams
parameter_list|(
name|DH
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _HEIM_DH_H */
end_comment

end_unit

