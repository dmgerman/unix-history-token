begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2004 David Xu<davidxu@freebsd.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_THREAD_DB_INT_H_
end_ifndef

begin_define
define|#
directive|define
name|_THREAD_DB_INT_H_
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<sys/queue.h>
end_include

begin_define
define|#
directive|define
name|TD_THRAGENT_FIELDS
define|\
value|struct ta_ops		*ta_ops;	\ 	TAILQ_ENTRY(td_thragent) ta_next;	\ 	struct ps_prochandle	*ph
end_define

begin_struct
struct|struct
name|ta_ops
block|{
name|td_err_e
function_decl|(
modifier|*
name|to_init
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_ta_clear_event
function_decl|)
parameter_list|(
specifier|const
name|td_thragent_t
modifier|*
parameter_list|,
name|td_thr_events_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_ta_delete
function_decl|)
parameter_list|(
name|td_thragent_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_ta_event_addr
function_decl|)
parameter_list|(
specifier|const
name|td_thragent_t
modifier|*
parameter_list|,
name|td_thr_events_e
parameter_list|,
name|td_notify_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_ta_event_getmsg
function_decl|)
parameter_list|(
specifier|const
name|td_thragent_t
modifier|*
parameter_list|,
name|td_event_msg_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_ta_map_id2thr
function_decl|)
parameter_list|(
specifier|const
name|td_thragent_t
modifier|*
parameter_list|,
name|thread_t
parameter_list|,
name|td_thrhandle_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_ta_map_lwp2thr
function_decl|)
parameter_list|(
specifier|const
name|td_thragent_t
modifier|*
parameter_list|,
name|lwpid_t
parameter_list|,
name|td_thrhandle_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_ta_new
function_decl|)
parameter_list|(
name|struct
name|ps_prochandle
modifier|*
parameter_list|,
name|td_thragent_t
modifier|*
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_ta_set_event
function_decl|)
parameter_list|(
specifier|const
name|td_thragent_t
modifier|*
parameter_list|,
name|td_thr_events_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_ta_thr_iter
function_decl|)
parameter_list|(
specifier|const
name|td_thragent_t
modifier|*
parameter_list|,
name|td_thr_iter_f
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|td_thr_state_e
parameter_list|,
name|int
parameter_list|,
name|sigset_t
modifier|*
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_ta_tsd_iter
function_decl|)
parameter_list|(
specifier|const
name|td_thragent_t
modifier|*
parameter_list|,
name|td_key_iter_f
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_clear_event
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|,
name|td_thr_events_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_dbresume
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_dbsuspend
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_event_enable
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_event_getmsg
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|,
name|td_event_msg_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_get_info
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|,
name|td_thrinfo_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_getfpregs
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|,
name|prfpregset_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_getgregs
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|,
name|prgregset_t
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_set_event
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|,
name|td_thr_events_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_setfpregs
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|,
specifier|const
name|prfpregset_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_setgregs
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|,
specifier|const
name|prgregset_t
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_validate
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|)
function_decl|;
name|td_err_e
function_decl|(
modifier|*
name|to_thr_tls_get_addr
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|void
modifier|*
modifier|*
parameter_list|)
function_decl|;
comment|/* FreeBSD specific extensions. */
name|td_err_e
function_decl|(
modifier|*
name|to_thr_sstep
function_decl|)
parameter_list|(
specifier|const
name|td_thrhandle_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|TD_DEBUG
end_ifdef

begin_define
define|#
directive|define
name|TDBG
parameter_list|(
modifier|...
parameter_list|)
value|ps_plog(__VA_ARGS__)
end_define

begin_define
define|#
directive|define
name|TDBG_FUNC
parameter_list|()
value|ps_plog("%s\n", __func__)
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|TDBG
parameter_list|(
modifier|...
parameter_list|)
end_define

begin_define
define|#
directive|define
name|TDBG_FUNC
parameter_list|()
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _THREAD_DB_INT_H_ */
end_comment

end_unit

