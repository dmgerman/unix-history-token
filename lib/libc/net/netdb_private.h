begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (C) 2005 The FreeBSD Project.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NETDB_PRIVATE_H_
end_ifndef

begin_define
define|#
directive|define
name|_NETDB_PRIVATE_H_
end_define

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_comment
comment|/* XXX: for FILE */
end_comment

begin_define
define|#
directive|define
name|NETDB_THREAD_ALLOC
parameter_list|(
name|name
parameter_list|)
define|\
value|static struct name name;						\ static thread_key_t name##_key;						\ static once_t name##_init_once = ONCE_INITIALIZER;			\ static int name##_thr_keycreated = 0;					\ \ static void name##_free(void *);					\ \ static void								\ name##_keycreate(void)							\ {									\ 	name##_thr_keycreated =						\ 	    (thr_keycreate(&name##_key, name##_free) == 0);		\ }									\ \ struct name *								\ __##name##_init(void)							\ {									\ 	struct name *he;						\ 									\ 	if (thr_main() != 0)						\ 		return (&name);						\ 	if (thr_once(&name##_init_once, name##_keycreate) != 0 ||	\ 	    !name##_thr_keycreated)					\ 		return (NULL);						\ 	if ((he = thr_getspecific(name##_key)) != NULL)			\ 		return (he);						\ 	if ((he = calloc(1, sizeof(*he))) == NULL)			\ 		return (NULL);						\ 	if (thr_setspecific(name##_key, he) == 0)			\ 		return (he);						\ 	free(he);							\ 	return (NULL);							\ }
end_define

begin_define
define|#
directive|define
name|_MAXALIASES
value|35
end_define

begin_define
define|#
directive|define
name|_MAXLINELEN
value|1024
end_define

begin_define
define|#
directive|define
name|_MAXADDRS
value|35
end_define

begin_define
define|#
directive|define
name|_HOSTBUFSIZE
value|(8 * 1024)
end_define

begin_define
define|#
directive|define
name|_NETBUFSIZE
value|1025
end_define

begin_struct
struct|struct
name|hostent_data
block|{
name|uint32_t
name|host_addr
index|[
literal|4
index|]
decl_stmt|;
comment|/* IPv4 or IPv6 */
name|char
modifier|*
name|h_addr_ptrs
index|[
name|_MAXADDRS
operator|+
literal|1
index|]
decl_stmt|;
name|char
modifier|*
name|host_aliases
index|[
name|_MAXALIASES
index|]
decl_stmt|;
name|char
name|hostbuf
index|[
name|_HOSTBUFSIZE
index|]
decl_stmt|;
name|FILE
modifier|*
name|hostf
decl_stmt|;
name|int
name|stayopen
decl_stmt|;
ifdef|#
directive|ifdef
name|YP
name|char
modifier|*
name|yp_domain
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|netent_data
block|{
name|char
modifier|*
name|net_aliases
index|[
name|_MAXALIASES
index|]
decl_stmt|;
name|char
name|netbuf
index|[
name|_NETBUFSIZE
index|]
decl_stmt|;
name|FILE
modifier|*
name|netf
decl_stmt|;
name|int
name|stayopen
decl_stmt|;
ifdef|#
directive|ifdef
name|YP
name|char
modifier|*
name|yp_domain
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|protoent_data
block|{
name|FILE
modifier|*
name|fp
decl_stmt|;
name|char
modifier|*
name|aliases
index|[
name|_MAXALIASES
index|]
decl_stmt|;
name|int
name|stayopen
decl_stmt|;
name|char
name|line
index|[
name|_MAXLINELEN
operator|+
literal|1
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|hostdata
block|{
name|struct
name|hostent
name|host
decl_stmt|;
name|char
name|data
index|[
sizeof|sizeof
argument_list|(
expr|struct
name|hostent_data
argument_list|)
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|netdata
block|{
name|struct
name|netent
name|net
decl_stmt|;
name|char
name|data
index|[
sizeof|sizeof
argument_list|(
expr|struct
name|netent_data
argument_list|)
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|protodata
block|{
name|struct
name|protoent
name|proto
decl_stmt|;
name|char
name|data
index|[
sizeof|sizeof
argument_list|(
expr|struct
name|protoent_data
argument_list|)
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|struct
name|hostdata
modifier|*
name|__hostdata_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|hostent
modifier|*
name|__hostent_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|hostent_data
modifier|*
name|__hostent_data_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|netdata
modifier|*
name|__netdata_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|netent_data
modifier|*
name|__netent_data_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|protodata
modifier|*
name|__protodata_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|protoent_data
modifier|*
name|__protoent_data_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__copy_hostent
parameter_list|(
name|struct
name|hostent
modifier|*
parameter_list|,
name|struct
name|hostent
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__copy_netent
parameter_list|(
name|struct
name|netent
modifier|*
parameter_list|,
name|struct
name|netent
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__copy_protoent
parameter_list|(
name|struct
name|protoent
modifier|*
parameter_list|,
name|struct
name|protoent
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__endprotoent_p
parameter_list|(
name|struct
name|protoent_data
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__getprotoent_p
parameter_list|(
name|struct
name|protoent
modifier|*
parameter_list|,
name|struct
name|protoent_data
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__setprotoent_p
parameter_list|(
name|int
parameter_list|,
name|struct
name|protoent_data
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|_endhostdnsent
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|_endhosthtent
parameter_list|(
name|struct
name|hostent_data
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|_endnetdnsent
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|_endnethtent
parameter_list|(
name|struct
name|netent_data
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|_map_v4v6_address
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|_map_v4v6_hostent
parameter_list|(
name|struct
name|hostent
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|_sethostdnsent
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|_sethosthtent
parameter_list|(
name|int
parameter_list|,
name|struct
name|hostent_data
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|_setnetdnsent
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|_setnethtent
parameter_list|(
name|int
parameter_list|,
name|struct
name|netent_data
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|hostent
modifier|*
name|__dns_getanswer
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|_dns_gethostbyaddr
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|_dns_gethostbyname
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|_dns_getnetbyaddr
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|_dns_getnetbyname
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|_ht_gethostbyaddr
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|_ht_gethostbyname
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|_ht_getnetbyaddr
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|_ht_getnetbyname
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|_nis_gethostbyaddr
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|_nis_gethostbyname
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|_nis_getnetbyaddr
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|_nis_getnetbyname
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|NS_CACHING
end_ifdef

begin_function_decl
name|int
name|__proto_id_func
parameter_list|(
name|char
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|,
name|va_list
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__proto_marshal_func
parameter_list|(
name|char
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__proto_unmarshal_func
parameter_list|(
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|void
modifier|*
parameter_list|,
name|va_list
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _NETDB_PRIVATE_H_ */
end_comment

end_unit

