begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2017 M. Warner Losh<imp@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_comment
comment|/*  * Forward compatibility shim to convert old stat buffer to  * new so we can call the old system call, but return data in  * the new system call's format.  */
end_comment

begin_define
define|#
directive|define
name|_WANT_FREEBSD11_STATFS
end_define

begin_include
include|#
directive|include
file|<sys/fcntl.h>
end_include

begin_include
include|#
directive|include
file|<sys/mount.h>
end_include

begin_define
define|#
directive|define
name|_WANT_FREEBSD11_STAT
end_define

begin_include
include|#
directive|include
file|<sys/stat.h>
end_include

begin_include
include|#
directive|include
file|<string.h>
end_include

begin_define
define|#
directive|define
name|INO64_FIRST
value|1200031
end_define

begin_function
specifier|static
name|__inline
name|void
name|__stat11_to_stat
parameter_list|(
specifier|const
name|struct
name|freebsd11_stat
modifier|*
name|sb11
parameter_list|,
name|struct
name|stat
modifier|*
name|sb
parameter_list|)
block|{
name|sb
operator|->
name|st_dev
operator|=
name|sb11
operator|->
name|st_dev
expr_stmt|;
name|sb
operator|->
name|st_ino
operator|=
name|sb11
operator|->
name|st_ino
expr_stmt|;
name|sb
operator|->
name|st_nlink
operator|=
name|sb11
operator|->
name|st_nlink
expr_stmt|;
name|sb
operator|->
name|st_mode
operator|=
name|sb11
operator|->
name|st_mode
expr_stmt|;
name|sb
operator|->
name|st_uid
operator|=
name|sb11
operator|->
name|st_uid
expr_stmt|;
name|sb
operator|->
name|st_gid
operator|=
name|sb11
operator|->
name|st_gid
expr_stmt|;
name|sb
operator|->
name|st_rdev
operator|=
name|sb11
operator|->
name|st_rdev
expr_stmt|;
name|sb
operator|->
name|st_atim
operator|=
name|sb11
operator|->
name|st_atim
expr_stmt|;
name|sb
operator|->
name|st_mtim
operator|=
name|sb11
operator|->
name|st_mtim
expr_stmt|;
name|sb
operator|->
name|st_ctim
operator|=
name|sb11
operator|->
name|st_ctim
expr_stmt|;
ifdef|#
directive|ifdef
name|__STAT_TIME_T_EXT
name|sb
operator|->
name|st_atim_ext
operator|=
literal|0
expr_stmt|;
name|sb
operator|->
name|st_mtim_ext
operator|=
literal|0
expr_stmt|;
name|sb
operator|->
name|st_ctim_ext
operator|=
literal|0
expr_stmt|;
name|sb
operator|->
name|st_btim_ext
operator|=
literal|0
expr_stmt|;
endif|#
directive|endif
name|sb
operator|->
name|st_birthtim
operator|=
name|sb11
operator|->
name|st_birthtim
expr_stmt|;
name|sb
operator|->
name|st_size
operator|=
name|sb11
operator|->
name|st_size
expr_stmt|;
name|sb
operator|->
name|st_blocks
operator|=
name|sb11
operator|->
name|st_blocks
expr_stmt|;
name|sb
operator|->
name|st_blksize
operator|=
name|sb11
operator|->
name|st_blksize
expr_stmt|;
name|sb
operator|->
name|st_flags
operator|=
name|sb11
operator|->
name|st_flags
expr_stmt|;
name|sb
operator|->
name|st_gen
operator|=
name|sb11
operator|->
name|st_gen
expr_stmt|;
name|sb
operator|->
name|st_padding0
operator|=
literal|0
expr_stmt|;
name|sb
operator|->
name|st_padding1
operator|=
literal|0
expr_stmt|;
name|memset
argument_list|(
name|sb
operator|->
name|st_spare
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
argument_list|(
name|sb
operator|->
name|st_spare
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|__statfs11_to_statfs
parameter_list|(
specifier|const
name|struct
name|freebsd11_statfs
modifier|*
name|sf11
parameter_list|,
name|struct
name|statfs
modifier|*
name|sf
parameter_list|)
block|{
name|sf
operator|->
name|f_version
operator|=
name|STATFS_VERSION
expr_stmt|;
name|sf
operator|->
name|f_type
operator|=
name|sf11
operator|->
name|f_type
expr_stmt|;
name|sf
operator|->
name|f_flags
operator|=
name|sf11
operator|->
name|f_flags
expr_stmt|;
name|sf
operator|->
name|f_bsize
operator|=
name|sf11
operator|->
name|f_bsize
expr_stmt|;
name|sf
operator|->
name|f_iosize
operator|=
name|sf11
operator|->
name|f_iosize
expr_stmt|;
name|sf
operator|->
name|f_blocks
operator|=
name|sf11
operator|->
name|f_blocks
expr_stmt|;
name|sf
operator|->
name|f_bfree
operator|=
name|sf11
operator|->
name|f_bfree
expr_stmt|;
name|sf
operator|->
name|f_bavail
operator|=
name|sf11
operator|->
name|f_bavail
expr_stmt|;
name|sf
operator|->
name|f_files
operator|=
name|sf11
operator|->
name|f_files
expr_stmt|;
name|sf
operator|->
name|f_ffree
operator|=
name|sf11
operator|->
name|f_ffree
expr_stmt|;
name|sf
operator|->
name|f_syncwrites
operator|=
name|sf11
operator|->
name|f_syncwrites
expr_stmt|;
name|sf
operator|->
name|f_asyncwrites
operator|=
name|sf11
operator|->
name|f_asyncwrites
expr_stmt|;
name|sf
operator|->
name|f_syncreads
operator|=
name|sf11
operator|->
name|f_syncreads
expr_stmt|;
name|sf
operator|->
name|f_asyncreads
operator|=
name|sf11
operator|->
name|f_asyncreads
expr_stmt|;
name|sf
operator|->
name|f_namemax
operator|=
name|sf11
operator|->
name|f_namemax
expr_stmt|;
name|sf
operator|->
name|f_owner
operator|=
name|sf11
operator|->
name|f_owner
expr_stmt|;
name|sf
operator|->
name|f_fsid
operator|=
name|sf11
operator|->
name|f_fsid
expr_stmt|;
name|memset
argument_list|(
name|sf
operator|->
name|f_spare
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
argument_list|(
name|sf
operator|->
name|f_spare
argument_list|)
argument_list|)
expr_stmt|;
name|memset
argument_list|(
name|sf
operator|->
name|f_charspare
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
argument_list|(
name|sf
operator|->
name|f_charspare
argument_list|)
argument_list|)
expr_stmt|;
name|strlcpy
argument_list|(
name|sf
operator|->
name|f_fstypename
argument_list|,
name|sf11
operator|->
name|f_fstypename
argument_list|,
sizeof|sizeof
argument_list|(
name|sf
operator|->
name|f_fstypename
argument_list|)
argument_list|)
expr_stmt|;
name|strlcpy
argument_list|(
name|sf
operator|->
name|f_mntfromname
argument_list|,
name|sf11
operator|->
name|f_mntfromname
argument_list|,
sizeof|sizeof
argument_list|(
name|sf
operator|->
name|f_mntfromname
argument_list|)
argument_list|)
expr_stmt|;
name|strlcpy
argument_list|(
name|sf
operator|->
name|f_mntonname
argument_list|,
name|sf11
operator|->
name|f_mntonname
argument_list|,
sizeof|sizeof
argument_list|(
name|sf
operator|->
name|f_mntonname
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

end_unit

