begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright 2013 Garrett D'Amore<garrett@damore.org>  * Copyright 2011 Nexenta Systems, Inc.  All rights reserved.  * Copyright (c) 2004 Tim J. Robbins.  * All rights reserved.  *  * Copyright (c) 2011 The FreeBSD Foundation  * All rights reserved.  * Portions of this software were developed by David Chisnall  * under sponsorship from the FreeBSD Foundation.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MBLOCAL_H_
end_ifndef

begin_define
define|#
directive|define
name|_MBLOCAL_H_
end_define

begin_include
include|#
directive|include
file|<runetype.h>
end_include

begin_include
include|#
directive|include
file|"xlocale_private.h"
end_include

begin_define
define|#
directive|define
name|SS2
value|0x008e
end_define

begin_define
define|#
directive|define
name|SS3
value|0x008f
end_define

begin_comment
comment|/*  * Conversion function pointers for current encoding.  */
end_comment

begin_struct
struct|struct
name|xlocale_ctype
block|{
name|struct
name|xlocale_component
name|header
decl_stmt|;
name|_RuneLocale
modifier|*
name|runes
decl_stmt|;
name|size_t
function_decl|(
modifier|*
name|__mbrtowc
function_decl|)
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|char
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|__mbsinit
function_decl|)
parameter_list|(
specifier|const
name|mbstate_t
modifier|*
parameter_list|)
function_decl|;
name|size_t
function_decl|(
modifier|*
name|__mbsnrtowcs
function_decl|)
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
name|size_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
name|size_t
function_decl|(
modifier|*
name|__wcrtomb
function_decl|)
parameter_list|(
name|char
modifier|*
name|__restrict
parameter_list|,
name|wchar_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
name|size_t
function_decl|(
modifier|*
name|__wcsnrtombs
function_decl|)
parameter_list|(
name|char
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
name|size_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
name|int
name|__mb_cur_max
decl_stmt|;
name|int
name|__mb_sb_limit
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|XLOCALE_CTYPE
parameter_list|(
name|x
parameter_list|)
value|((struct xlocale_ctype*)(x)->components[XLC_CTYPE])
end_define

begin_decl_stmt
specifier|extern
name|struct
name|xlocale_ctype
name|__xlocale_global_ctype
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Rune initialization function prototypes.  */
end_comment

begin_decl_stmt
name|int
name|_none_init
argument_list|(
expr|struct
name|xlocale_ctype
operator|*
argument_list|,
name|_RuneLocale
operator|*
argument_list|)
name|__hidden
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|_UTF8_init
argument_list|(
expr|struct
name|xlocale_ctype
operator|*
argument_list|,
name|_RuneLocale
operator|*
argument_list|)
name|__hidden
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|_EUC_CN_init
argument_list|(
expr|struct
name|xlocale_ctype
operator|*
argument_list|,
name|_RuneLocale
operator|*
argument_list|)
name|__hidden
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|_EUC_JP_init
argument_list|(
expr|struct
name|xlocale_ctype
operator|*
argument_list|,
name|_RuneLocale
operator|*
argument_list|)
name|__hidden
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|_EUC_KR_init
argument_list|(
expr|struct
name|xlocale_ctype
operator|*
argument_list|,
name|_RuneLocale
operator|*
argument_list|)
name|__hidden
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|_EUC_TW_init
argument_list|(
expr|struct
name|xlocale_ctype
operator|*
argument_list|,
name|_RuneLocale
operator|*
argument_list|)
name|__hidden
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|_GB18030_init
argument_list|(
expr|struct
name|xlocale_ctype
operator|*
argument_list|,
name|_RuneLocale
operator|*
argument_list|)
name|__hidden
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|_GB2312_init
argument_list|(
expr|struct
name|xlocale_ctype
operator|*
argument_list|,
name|_RuneLocale
operator|*
argument_list|)
name|__hidden
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|_GBK_init
argument_list|(
expr|struct
name|xlocale_ctype
operator|*
argument_list|,
name|_RuneLocale
operator|*
argument_list|)
name|__hidden
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|_BIG5_init
argument_list|(
expr|struct
name|xlocale_ctype
operator|*
argument_list|,
name|_RuneLocale
operator|*
argument_list|)
name|__hidden
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|_MSKanji_init
argument_list|(
expr|struct
name|xlocale_ctype
operator|*
argument_list|,
name|_RuneLocale
operator|*
argument_list|)
name|__hidden
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|_ascii_init
argument_list|(
expr|struct
name|xlocale_ctype
operator|*
argument_list|,
name|_RuneLocale
operator|*
argument_list|)
name|__hidden
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
name|size_t
function_decl|(
modifier|*
name|mbrtowc_pfn_t
function_decl|)
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|char
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|size_t
function_decl|(
modifier|*
name|wcrtomb_pfn_t
function_decl|)
parameter_list|(
name|char
modifier|*
name|__restrict
parameter_list|,
name|wchar_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_typedef

begin_function_decl
name|size_t
name|__mbsnrtowcs_std
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
name|size_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|,
name|mbrtowc_pfn_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|__wcsnrtombs_std
parameter_list|(
name|char
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
name|size_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|,
name|wcrtomb_pfn_t
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _MBLOCAL_H_ */
end_comment

end_unit

