begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2007 Robert N. M. Watson  * Copyright (c) 2015 Allan Jude<allanjude@freebsd.org>  * Copyright (c) 2017 Dell EMC  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_include
include|#
directive|include
file|<libxo/xo.h>
end_include

begin_ifndef
ifndef|#
directive|ifndef
name|PROCSTAT_H
end_ifndef

begin_define
define|#
directive|define
name|PROCSTAT_H
end_define

begin_define
define|#
directive|define
name|PROCSTAT_XO_VERSION
value|"1"
end_define

begin_enum
enum|enum
block|{
name|PS_OPT_CAPABILITIES
init|=
literal|0x01
block|,
name|PS_OPT_NOHEADER
init|=
literal|0x02
block|,
name|PS_OPT_PERTHREAD
init|=
literal|0x04
block|,
name|PS_OPT_SIGNUM
init|=
literal|0x08
block|,
name|PS_OPT_VERBOSE
init|=
literal|0x10
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|PS_SUBCOMMAND_OPTS
define|\
value|(PS_OPT_CAPABILITIES | PS_OPT_SIGNUM |	\ 	    PS_OPT_PERTHREAD | PS_OPT_VERBOSE)
end_define

begin_decl_stmt
specifier|extern
name|int
name|procstat_opts
decl_stmt|;
end_decl_stmt

begin_struct_decl
struct_decl|struct
name|kinfo_proc
struct_decl|;
end_struct_decl

begin_function_decl
name|void
name|kinfo_proc_sort
parameter_list|(
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|,
name|int
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|kinfo_proc_thread_name
parameter_list|(
specifier|const
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_args
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_auxv
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_basic
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_bin
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_cred
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_cs
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_env
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_files
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_kstack
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_ptlwpinfo
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_rlimit
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_rusage
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_sigs
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_threads
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_threads_sigs
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|procstat_vm
parameter_list|(
name|struct
name|procstat
modifier|*
name|prstat
parameter_list|,
name|struct
name|kinfo_proc
modifier|*
name|kipp
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !PROCSTAT_H */
end_comment

end_unit

