begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1992, 1993, 1996  *	Berkeley Software Design, Inc.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by Berkeley Software  *	Design, Inc.  *  * THIS SOFTWARE IS PROVIDED BY Berkeley Software Design, Inc. ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL Berkeley Software Design, Inc. BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	BSDI AsyncIO.h,v 2.2 1996/04/08 19:32:12 bostic Exp  */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__cplusplus
argument_list|)
end_if

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
name|void
name|_RegisterIO
parameter_list|(
name|int
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|()
parameter_list|)
function_decl|;
name|void
name|_AssociateIO
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|_DeAssociateIO
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|_LockIO
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|int
name|_UnlockIO
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|int
name|_LevelIO
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|int
name|_DetachIO
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|int
name|_EndIO
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|_BlockIO
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|_UnblockIO
parameter_list|(
name|void
parameter_list|)
function_decl|;
if|#
directive|if
name|defined
argument_list|(
name|__cplusplus
argument_list|)
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|_Un_RegisterIO
parameter_list|(
name|x
parameter_list|)
value|_RegisterIO((x), (void (*))0, (void *)0, (void (*))0)
end_define

end_unit

