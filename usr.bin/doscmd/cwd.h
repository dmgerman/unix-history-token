begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1992, 1993, 1996  *	Berkeley Software Design, Inc.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by Berkeley Software  *	Design, Inc.  *  * THIS SOFTWARE IS PROVIDED BY Berkeley Software Design, Inc. ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL Berkeley Software Design, Inc. BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	BSDI cwd.h,v 2.2 1996/04/08 19:32:26 bostic Exp  *  * $FreeBSD$  */
end_comment

begin_function
specifier|static
specifier|inline
name|u_char
modifier|*
name|ustrcpy
parameter_list|(
name|u_char
modifier|*
name|s1
parameter_list|,
name|u_char
modifier|*
name|s2
parameter_list|)
block|{
return|return
operator|(
operator|(
name|u_char
operator|*
operator|)
name|strcpy
argument_list|(
operator|(
name|char
operator|*
operator|)
name|s1
argument_list|,
operator|(
name|char
operator|*
operator|)
name|s2
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u_char
modifier|*
name|ustrcat
parameter_list|(
name|u_char
modifier|*
name|s1
parameter_list|,
name|u_char
modifier|*
name|s2
parameter_list|)
block|{
return|return
operator|(
operator|(
name|u_char
operator|*
operator|)
name|strcat
argument_list|(
operator|(
name|char
operator|*
operator|)
name|s1
argument_list|,
operator|(
name|char
operator|*
operator|)
name|s2
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u_char
modifier|*
name|ustrncat
parameter_list|(
name|u_char
modifier|*
name|s1
parameter_list|,
specifier|const
name|u_char
modifier|*
name|s2
parameter_list|,
name|size_t
name|n
parameter_list|)
block|{
return|return
operator|(
operator|(
name|u_char
operator|*
operator|)
name|strncat
argument_list|(
operator|(
name|char
operator|*
operator|)
name|s1
argument_list|,
operator|(
specifier|const
name|char
operator|*
operator|)
name|s2
argument_list|,
name|n
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u_char
modifier|*
name|ustrncpy
parameter_list|(
name|u_char
modifier|*
name|s1
parameter_list|,
name|u_char
modifier|*
name|s2
parameter_list|,
name|size_t
name|n
parameter_list|)
block|{
return|return
operator|(
operator|(
name|u_char
operator|*
operator|)
name|strncpy
argument_list|(
operator|(
name|char
operator|*
operator|)
name|s1
argument_list|,
operator|(
name|char
operator|*
operator|)
name|s2
argument_list|,
name|n
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ustrcmp
parameter_list|(
name|u_char
modifier|*
name|s1
parameter_list|,
name|u_char
modifier|*
name|s2
parameter_list|)
block|{
return|return
operator|(
name|strcmp
argument_list|(
operator|(
name|char
operator|*
operator|)
name|s1
argument_list|,
operator|(
name|char
operator|*
operator|)
name|s2
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ustrncmp
parameter_list|(
specifier|const
name|u_char
modifier|*
name|s1
parameter_list|,
specifier|const
name|u_char
modifier|*
name|s2
parameter_list|,
name|size_t
name|n
parameter_list|)
block|{
return|return
operator|(
name|strncmp
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
name|s1
argument_list|,
operator|(
specifier|const
name|char
operator|*
operator|)
name|s2
argument_list|,
name|n
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ustrlen
parameter_list|(
specifier|const
name|u_char
modifier|*
name|s
parameter_list|)
block|{
return|return
operator|(
name|strlen
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
name|s
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u_char
modifier|*
name|ustrrchr
parameter_list|(
name|u_char
modifier|*
name|s
parameter_list|,
name|u_char
name|c
parameter_list|)
block|{
return|return
operator|(
operator|(
name|u_char
operator|*
operator|)
name|strrchr
argument_list|(
operator|(
name|char
operator|*
operator|)
name|s
argument_list|,
name|c
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u_char
modifier|*
name|ustrdup
parameter_list|(
specifier|const
name|u_char
modifier|*
name|s
parameter_list|)
block|{
return|return
operator|(
operator|(
name|u_char
operator|*
operator|)
name|strdup
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
name|s
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ustat
parameter_list|(
name|u_char
modifier|*
name|s
parameter_list|,
name|struct
name|stat
modifier|*
name|sb
parameter_list|)
block|{
return|return
operator|(
name|stat
argument_list|(
operator|(
name|char
operator|*
operator|)
name|s
argument_list|,
name|sb
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|uaccess
parameter_list|(
name|u_char
modifier|*
name|s
parameter_list|,
name|int
name|mode
parameter_list|)
block|{
return|return
operator|(
name|access
argument_list|(
operator|(
name|char
operator|*
operator|)
name|s
argument_list|,
name|mode
argument_list|)
operator|)
return|;
block|}
end_function

begin_function_decl
specifier|extern
name|void
name|init_path
parameter_list|(
name|int
parameter_list|,
specifier|const
name|u_char
modifier|*
parameter_list|,
specifier|const
name|u_char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dos_makereadonly
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|dos_readonly
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|u_char
modifier|*
name|dos_getcwd
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|u_char
modifier|*
name|dos_getpath
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|dos_makepath
parameter_list|(
name|u_char
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|dos_match
parameter_list|(
name|u_char
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|dos_setcwd
parameter_list|(
name|u_char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|dos_to_real_path
parameter_list|(
name|u_char
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|real_to_dos
parameter_list|(
name|u_char
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dos_to_real
parameter_list|(
name|u_char
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|u_char
modifier|*
modifier|*
name|get_entries
parameter_list|(
name|u_char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|get_space
parameter_list|(
name|int
parameter_list|,
name|fsstat_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|find_first
parameter_list|(
name|u_char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|dosdir_t
modifier|*
parameter_list|,
name|find_block_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|find_next
parameter_list|(
name|dosdir_t
modifier|*
parameter_list|,
name|find_block_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

end_unit

