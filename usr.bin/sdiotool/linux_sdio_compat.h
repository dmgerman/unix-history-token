begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2017 Ilya Bakulin  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|_LINUX_SDIO_COMPAT_H_
end_ifndef

begin_define
define|#
directive|define
name|_LINUX_SDIO_COMPAT_H_
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|"linux_compat.h"
end_include

begin_comment
comment|/* Linux SDIO stack functions and definitions */
end_comment

begin_define
define|#
directive|define
name|SDIO_CCCR_ABORT
value|SD_IO_CCCR_CTL
end_define

begin_define
define|#
directive|define
name|SDIO_CCCR_IENx
value|SD_IO_CCCR_INT_ENABLE
end_define

begin_struct
struct|struct
name|sdio_func
block|{
name|struct
name|cam_device
modifier|*
name|dev
decl_stmt|;
name|uint8_t
name|num
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|u8
name|sdio_readb
parameter_list|(
name|struct
name|sdio_func
modifier|*
name|func
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|int
modifier|*
name|err_ret
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|char
name|sdio_f0_readb
parameter_list|(
name|struct
name|sdio_func
modifier|*
name|func
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|int
modifier|*
name|err_ret
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u16
name|sdio_readw
parameter_list|(
name|struct
name|sdio_func
modifier|*
name|func
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|int
modifier|*
name|err_ret
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|sdio_readl
parameter_list|(
name|struct
name|sdio_func
modifier|*
name|func
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|int
modifier|*
name|err_ret
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sdio_writeb
parameter_list|(
name|struct
name|sdio_func
modifier|*
name|func
parameter_list|,
name|u8
name|b
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|int
modifier|*
name|err_ret
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sdio_f0_writeb
parameter_list|(
name|struct
name|sdio_func
modifier|*
name|func
parameter_list|,
name|unsigned
name|char
name|b
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|int
modifier|*
name|err_ret
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sdio_writew
parameter_list|(
name|struct
name|sdio_func
modifier|*
name|func
parameter_list|,
name|u16
name|b
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|int
modifier|*
name|err_ret
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sdio_writel
parameter_list|(
name|struct
name|sdio_func
modifier|*
name|func
parameter_list|,
name|u32
name|b
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|int
modifier|*
name|err_ret
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

