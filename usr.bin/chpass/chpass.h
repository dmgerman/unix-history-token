begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1988, 1993, 1994  *	The Regents of the University of California.  All rights reserved.  * Copyright (c) 2002 Networks Associates Technology, Inc.  * All rights reserved.  *  * Portions of this software were developed for the FreeBSD Project by  * ThinkSec AS and NAI Labs, the Security Research Division of Network  * Associates, Inc.  under DARPA/SPAWAR contract N66001-01-C-8035  * ("CBOSS"), as part of the DARPA CHATS research program.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by the University of  *	California, Berkeley and its contributors.  * 4. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	@(#)chpass.h	8.4 (Berkeley) 4/2/94  * $FreeBSD$  */
end_comment

begin_struct_decl
struct_decl|struct
name|passwd
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
struct|struct
name|_entry
block|{
specifier|const
name|char
modifier|*
name|prompt
decl_stmt|;
name|int
function_decl|(
modifier|*
name|func
function_decl|)
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|struct
name|_entry
modifier|*
parameter_list|)
function_decl|;
name|int
name|restricted
decl_stmt|;
name|size_t
name|len
decl_stmt|;
name|char
modifier|*
name|except
decl_stmt|,
modifier|*
name|save
decl_stmt|;
block|}
name|ENTRY
typedef|;
end_typedef

begin_comment
comment|/* Field numbers. */
end_comment

begin_define
define|#
directive|define
name|E_BPHONE
value|8
end_define

begin_define
define|#
directive|define
name|E_HPHONE
value|9
end_define

begin_define
define|#
directive|define
name|E_LOCATE
value|10
end_define

begin_define
define|#
directive|define
name|E_NAME
value|7
end_define

begin_define
define|#
directive|define
name|E_OTHER
value|11
end_define

begin_define
define|#
directive|define
name|E_SHELL
value|13
end_define

begin_decl_stmt
specifier|extern
name|ENTRY
name|list
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|master_mode
decl_stmt|;
end_decl_stmt

begin_function_decl
name|int
name|atot
parameter_list|(
name|char
modifier|*
parameter_list|,
name|time_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|passwd
modifier|*
name|edit
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ok_shell
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|dup_shell
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p_change
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|ENTRY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p_class
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|ENTRY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p_expire
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|ENTRY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p_gecos
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|ENTRY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p_gid
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|ENTRY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p_hdir
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|ENTRY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p_login
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|ENTRY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p_passwd
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|ENTRY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p_shell
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|ENTRY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p_uid
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|ENTRY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|ttoa
parameter_list|(
name|time_t
parameter_list|)
function_decl|;
end_function_decl

end_unit

