begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|FASTMATCH_H
end_ifndef

begin_define
define|#
directive|define
name|FASTMATCH_H
value|1
end_define

begin_include
include|#
directive|include
file|<limits.h>
end_include

begin_include
include|#
directive|include
file|<regex.h>
end_include

begin_include
include|#
directive|include
file|<stdbool.h>
end_include

begin_include
include|#
directive|include
file|<wchar.h>
end_include

begin_typedef
typedef|typedef
struct|struct
block|{
name|size_t
name|wlen
decl_stmt|;
name|size_t
name|len
decl_stmt|;
name|wchar_t
modifier|*
name|wpattern
decl_stmt|;
name|bool
modifier|*
name|wescmap
decl_stmt|;
name|unsigned
name|int
name|qsBc
index|[
name|UCHAR_MAX
operator|+
literal|1
index|]
decl_stmt|;
name|unsigned
name|int
modifier|*
name|bmGs
decl_stmt|;
name|char
modifier|*
name|pattern
decl_stmt|;
name|bool
modifier|*
name|escmap
decl_stmt|;
name|unsigned
name|int
name|defBc
decl_stmt|;
name|void
modifier|*
name|qsBc_table
decl_stmt|;
name|unsigned
name|int
modifier|*
name|sbmGs
decl_stmt|;
specifier|const
name|char
modifier|*
name|re_endp
decl_stmt|;
comment|/* flags */
name|bool
name|hasdot
decl_stmt|;
name|bool
name|bol
decl_stmt|;
name|bool
name|eol
decl_stmt|;
name|bool
name|word
decl_stmt|;
name|bool
name|icase
decl_stmt|;
name|bool
name|newline
decl_stmt|;
name|bool
name|nosub
decl_stmt|;
name|bool
name|matchall
decl_stmt|;
name|bool
name|reversed
decl_stmt|;
block|}
name|fastmatch_t
typedef|;
end_typedef

begin_function_decl
specifier|extern
name|int
name|tre_fixcomp
parameter_list|(
name|fastmatch_t
modifier|*
name|preg
parameter_list|,
specifier|const
name|char
modifier|*
name|regex
parameter_list|,
name|int
name|cflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|tre_fastcomp
parameter_list|(
name|fastmatch_t
modifier|*
name|preg
parameter_list|,
specifier|const
name|char
modifier|*
name|regex
parameter_list|,
name|int
name|cflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|tre_fastexec
parameter_list|(
specifier|const
name|fastmatch_t
modifier|*
name|preg
parameter_list|,
specifier|const
name|char
modifier|*
name|string
parameter_list|,
name|size_t
name|nmatch
parameter_list|,
name|regmatch_t
name|pmatch
index|[]
parameter_list|,
name|int
name|eflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|tre_fastfree
parameter_list|(
name|fastmatch_t
modifier|*
name|preg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|tre_fixwcomp
parameter_list|(
name|fastmatch_t
modifier|*
name|preg
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|regex
parameter_list|,
name|int
name|cflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|tre_fastwcomp
parameter_list|(
name|fastmatch_t
modifier|*
name|preg
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|regex
parameter_list|,
name|int
name|cflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|tre_fastwexec
parameter_list|(
specifier|const
name|fastmatch_t
modifier|*
name|preg
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|string
parameter_list|,
name|size_t
name|nmatch
parameter_list|,
name|regmatch_t
name|pmatch
index|[]
parameter_list|,
name|int
name|eflags
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Versions with a maximum length argument and therefore the capability to    handle null characters in the middle of the strings. */
end_comment

begin_function_decl
specifier|extern
name|int
name|tre_fixncomp
parameter_list|(
name|fastmatch_t
modifier|*
name|preg
parameter_list|,
specifier|const
name|char
modifier|*
name|regex
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|cflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|tre_fastncomp
parameter_list|(
name|fastmatch_t
modifier|*
name|preg
parameter_list|,
specifier|const
name|char
modifier|*
name|regex
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|cflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|tre_fastnexec
parameter_list|(
specifier|const
name|fastmatch_t
modifier|*
name|preg
parameter_list|,
specifier|const
name|char
modifier|*
name|string
parameter_list|,
name|size_t
name|len
parameter_list|,
name|size_t
name|nmatch
parameter_list|,
name|regmatch_t
name|pmatch
index|[]
parameter_list|,
name|int
name|eflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|tre_fixwncomp
parameter_list|(
name|fastmatch_t
modifier|*
name|preg
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|regex
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|cflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|tre_fastwncomp
parameter_list|(
name|fastmatch_t
modifier|*
name|preg
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|regex
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|cflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|tre_fastwnexec
parameter_list|(
specifier|const
name|fastmatch_t
modifier|*
name|preg
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|string
parameter_list|,
name|size_t
name|len
parameter_list|,
name|size_t
name|nmatch
parameter_list|,
name|regmatch_t
name|pmatch
index|[]
parameter_list|,
name|int
name|eflags
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|fixncomp
value|tre_fixncomp
end_define

begin_define
define|#
directive|define
name|fastncomp
value|tre_fastncomp
end_define

begin_define
define|#
directive|define
name|fixcomp
value|tre_fixcomp
end_define

begin_define
define|#
directive|define
name|fastcomp
value|tre_fastcomp
end_define

begin_define
define|#
directive|define
name|fixwncomp
value|tre_fixwncomp
end_define

begin_define
define|#
directive|define
name|fastwncomp
value|tre_fastwncomp
end_define

begin_define
define|#
directive|define
name|fixwcomp
value|tre_fixwcomp
end_define

begin_define
define|#
directive|define
name|fastwcomp
value|tre_fastwcomp
end_define

begin_define
define|#
directive|define
name|fastfree
value|tre_fastfree
end_define

begin_define
define|#
directive|define
name|fastnexec
value|tre_fastnexec
end_define

begin_define
define|#
directive|define
name|fastexec
value|tre_fastexec
end_define

begin_define
define|#
directive|define
name|fastwnexec
value|tre_fastwnexec
end_define

begin_define
define|#
directive|define
name|fastwexec
value|tre_fastwexec
end_define

begin_define
define|#
directive|define
name|fixcomp
value|tre_fixcomp
end_define

begin_define
define|#
directive|define
name|fastcomp
value|tre_fastcomp
end_define

begin_define
define|#
directive|define
name|fastexec
value|tre_fastexec
end_define

begin_define
define|#
directive|define
name|fastfree
value|tre_fastfree
end_define

begin_define
define|#
directive|define
name|fixwcomp
value|tre_fixwcomp
end_define

begin_define
define|#
directive|define
name|fastwcomp
value|tre_fastwcomp
end_define

begin_define
define|#
directive|define
name|fastwexec
value|tre_fastwexec
end_define

begin_define
define|#
directive|define
name|fixncomp
value|tre_fixncomp
end_define

begin_define
define|#
directive|define
name|fastncomp
value|tre_fastncomp
end_define

begin_define
define|#
directive|define
name|fastnexec
value|tre_fastnexec
end_define

begin_define
define|#
directive|define
name|fixwncomp
value|tre_fixwncomp
end_define

begin_define
define|#
directive|define
name|fastwncomp
value|tre_fastwncomp
end_define

begin_define
define|#
directive|define
name|fastwnexec
value|tre_fastwnexec
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* FASTMATCH_H */
end_comment

end_unit

