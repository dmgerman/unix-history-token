begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$NetBSD: cclass.h,v 1.2 2008/12/05 22:51:42 christos Exp $ */
end_comment

begin_comment
comment|/*-  * Copyright (c) 1992, 1993, 1994 Henry Spencer.  * Copyright (c) 1992, 1993, 1994  *	The Regents of the University of California.  All rights reserved.  *  * This code is derived from software contributed to Berkeley by  * Henry Spencer of the University of Toronto.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	@(#)cclass.h	8.2 (Berkeley) 3/16/94  */
end_comment

begin_decl_stmt
name|RCHAR_T
name|ALNUM
index|[]
init|=
block|{
literal|'a'
block|,
literal|'l'
block|,
literal|'n'
block|,
literal|'u'
block|,
literal|'m'
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|RCHAR_T
name|ALPHA
index|[]
init|=
block|{
literal|'a'
block|,
literal|'l'
block|,
literal|'p'
block|,
literal|'h'
block|,
literal|'a'
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|RCHAR_T
name|BLANK
index|[]
init|=
block|{
literal|'b'
block|,
literal|'l'
block|,
literal|'a'
block|,
literal|'n'
block|,
literal|'k'
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|RCHAR_T
name|CNTRL
index|[]
init|=
block|{
literal|'c'
block|,
literal|'n'
block|,
literal|'t'
block|,
literal|'r'
block|,
literal|'l'
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|RCHAR_T
name|DIGIT
index|[]
init|=
block|{
literal|'d'
block|,
literal|'i'
block|,
literal|'g'
block|,
literal|'i'
block|,
literal|'t'
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|RCHAR_T
name|GRAPH
index|[]
init|=
block|{
literal|'g'
block|,
literal|'r'
block|,
literal|'a'
block|,
literal|'p'
block|,
literal|'h'
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|RCHAR_T
name|LOWER
index|[]
init|=
block|{
literal|'l'
block|,
literal|'o'
block|,
literal|'w'
block|,
literal|'e'
block|,
literal|'r'
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|RCHAR_T
name|PRINT
index|[]
init|=
block|{
literal|'p'
block|,
literal|'r'
block|,
literal|'i'
block|,
literal|'n'
block|,
literal|'t'
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|RCHAR_T
name|PUNCT
index|[]
init|=
block|{
literal|'p'
block|,
literal|'u'
block|,
literal|'n'
block|,
literal|'c'
block|,
literal|'t'
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|RCHAR_T
name|SPACE
index|[]
init|=
block|{
literal|'s'
block|,
literal|'p'
block|,
literal|'a'
block|,
literal|'c'
block|,
literal|'e'
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|RCHAR_T
name|UPPER
index|[]
init|=
block|{
literal|'u'
block|,
literal|'p'
block|,
literal|'p'
block|,
literal|'e'
block|,
literal|'r'
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|RCHAR_T
name|XDIGIT
index|[]
init|=
block|{
literal|'x'
block|,
literal|'d'
block|,
literal|'i'
block|,
literal|'g'
block|,
literal|'i'
block|,
literal|'t'
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* character-class table */
end_comment

begin_struct
specifier|static
struct|struct
name|cclass
block|{
name|RCHAR_T
modifier|*
name|name
decl_stmt|;
specifier|const
name|char
modifier|*
name|chars
decl_stmt|;
specifier|const
name|char
modifier|*
name|multis
decl_stmt|;
block|}
name|cclasses
index|[]
init|=
block|{
block|{
name|ALNUM
block|,
literal|"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\ 0123456789"
block|,
literal|""
block|}
block|,
block|{
name|ALPHA
block|,
literal|"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
block|,
literal|""
block|}
block|,
block|{
name|BLANK
block|,
literal|" \t"
block|,
literal|""
block|}
block|,
block|{
name|CNTRL
block|,
literal|"\007\b\t\n\v\f\r\1\2\3\4\5\6\16\17\20\21\22\23\24\ \25\26\27\30\31\32\33\34\35\36\37\177"
block|,
literal|""
block|}
block|,
block|{
name|DIGIT
block|,
literal|"0123456789"
block|,
literal|""
block|}
block|,
block|{
name|GRAPH
block|,
literal|"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\ 0123456789!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~"
block|,
literal|""
block|}
block|,
block|{
name|LOWER
block|,
literal|"abcdefghijklmnopqrstuvwxyz"
block|,
literal|""
block|}
block|,
block|{
name|PRINT
block|,
literal|"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\ 0123456789!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ "
block|,
literal|""
block|}
block|,
block|{
name|PUNCT
block|,
literal|"!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~"
block|,
literal|""
block|}
block|,
block|{
name|SPACE
block|,
literal|"\t\n\v\f\r "
block|,
literal|""
block|}
block|,
block|{
name|UPPER
block|,
literal|"ABCDEFGHIJKLMNOPQRSTUVWXYZ"
block|,
literal|""
block|}
block|,
block|{
name|XDIGIT
block|,
literal|"0123456789ABCDEFabcdef"
block|,
literal|""
block|}
block|,
block|{
name|NULL
block|,
literal|0
block|,
literal|""
block|}
block|, }
struct|;
end_struct

end_unit

