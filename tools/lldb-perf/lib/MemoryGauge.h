begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- MemoryGauge.h -------------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__PerfTestDriver__MemoryGauge__
end_ifndef

begin_define
define|#
directive|define
name|__PerfTestDriver__MemoryGauge__
end_define

begin_include
include|#
directive|include
file|"Gauge.h"
end_include

begin_include
include|#
directive|include
file|"Results.h"
end_include

begin_include
include|#
directive|include
file|<mach/task_info.h>
end_include

begin_decl_stmt
name|namespace
name|lldb_perf
block|{
name|class
name|MemoryStats
block|{
name|public
label|:
name|MemoryStats
argument_list|(
argument|mach_vm_size_t virtual_size =
literal|0
argument_list|,
argument|mach_vm_size_t resident_size =
literal|0
argument_list|,
argument|mach_vm_size_t max_resident_size =
literal|0
argument_list|)
empty_stmt|;
name|MemoryStats
argument_list|(
specifier|const
name|MemoryStats
operator|&
name|rhs
argument_list|)
expr_stmt|;
name|MemoryStats
modifier|&
name|operator
init|=
operator|(
specifier|const
name|MemoryStats
operator|&
name|rhs
operator|)
decl_stmt|;
name|MemoryStats
operator|&
name|operator
operator|+=
operator|(
specifier|const
name|MemoryStats
operator|&
name|rhs
operator|)
expr_stmt|;
name|MemoryStats
name|operator
operator|-
operator|(
specifier|const
name|MemoryStats
operator|&
name|rhs
operator|)
expr_stmt|;
name|MemoryStats
name|operator
operator|+
operator|(
specifier|const
name|MemoryStats
operator|&
name|rhs
operator|)
expr_stmt|;
name|MemoryStats
name|operator
operator|/
operator|(
name|size_t
name|rhs
operator|)
expr_stmt|;
name|MemoryStats
name|operator
modifier|*
parameter_list|(
specifier|const
name|MemoryStats
modifier|&
name|rhs
parameter_list|)
function_decl|;
name|mach_vm_size_t
name|GetVirtualSize
argument_list|()
specifier|const
block|{
return|return
name|m_virtual_size
return|;
block|}
name|mach_vm_size_t
name|GetResidentSize
argument_list|()
specifier|const
block|{
return|return
name|m_resident_size
return|;
block|}
name|mach_vm_size_t
name|GetMaxResidentSize
argument_list|()
specifier|const
block|{
return|return
name|m_max_resident_size
return|;
block|}
name|void
name|SetVirtualSize
parameter_list|(
name|mach_vm_size_t
name|vs
parameter_list|)
block|{
name|m_virtual_size
operator|=
name|vs
expr_stmt|;
block|}
name|void
name|SetResidentSize
parameter_list|(
name|mach_vm_size_t
name|rs
parameter_list|)
block|{
name|m_resident_size
operator|=
name|rs
expr_stmt|;
block|}
name|void
name|SetMaxResidentSize
parameter_list|(
name|mach_vm_size_t
name|mrs
parameter_list|)
block|{
name|m_max_resident_size
operator|=
name|mrs
expr_stmt|;
block|}
name|Results
operator|::
name|ResultSP
name|GetResult
argument_list|(
argument|const char *name
argument_list|,
argument|const char *description
argument_list|)
specifier|const
expr_stmt|;
name|private
label|:
name|mach_vm_size_t
name|m_virtual_size
decl_stmt|;
name|mach_vm_size_t
name|m_resident_size
decl_stmt|;
name|mach_vm_size_t
name|m_max_resident_size
decl_stmt|;
block|}
empty_stmt|;
name|class
name|MemoryGauge
range|:
name|public
name|Gauge
operator|<
name|MemoryStats
operator|>
block|{
name|public
operator|:
name|MemoryGauge
argument_list|()
block|;
name|virtual
operator|~
name|MemoryGauge
argument_list|()
block|{}
name|void
name|Start
argument_list|()
block|;
name|ValueType
name|Stop
argument_list|()
block|;
name|virtual
name|ValueType
name|GetStartValue
argument_list|()
specifier|const
block|{
return|return
name|m_start
return|;
block|}
name|virtual
name|ValueType
name|GetStopValue
argument_list|()
specifier|const
block|{
return|return
name|m_stop
return|;
block|}
name|virtual
name|ValueType
name|GetDeltaValue
argument_list|()
specifier|const
block|;
name|private
operator|:
expr|enum
name|class
name|State
block|{
name|eNeverUsed
block|,
name|eCounting
block|,
name|eStopped
block|}
block|;
name|ValueType
name|Now
argument_list|()
block|;
name|State
name|m_state
block|;
name|ValueType
name|m_start
block|;
name|ValueType
name|m_stop
block|;
name|ValueType
name|m_delta
block|; }
decl_stmt|;
name|template
operator|<
operator|>
name|Results
operator|::
name|ResultSP
name|GetResult
argument_list|(
argument|const char *description
argument_list|,
argument|MemoryStats value
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_comment
comment|// namespace lldb_perf
end_comment

begin_expr_stmt
name|lldb_perf
operator|::
name|MemoryStats
name|sqrt
argument_list|(
specifier|const
name|lldb_perf
operator|::
name|MemoryStats
operator|&
name|arg
argument_list|)
expr_stmt|;
end_expr_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// #ifndef __PerfTestDriver__MemoryGauge__
end_comment

end_unit

