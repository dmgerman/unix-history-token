begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-LTOCodeGenerator.h - LLVM Link Time Optimizer -----------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file declares the LTOCodeGenerator class.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LTO_CODE_GENERATOR_H
end_ifndef

begin_define
define|#
directive|define
name|LTO_CODE_GENERATOR_H
end_define

begin_include
include|#
directive|include
file|"llvm/Linker.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/StringMap.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/SmallVector.h"
end_include

begin_include
include|#
directive|include
file|<string>
end_include

begin_comment
comment|//
end_comment

begin_comment
comment|// C++ class which implements the opaque lto_code_gen_t
end_comment

begin_comment
comment|//
end_comment

begin_decl_stmt
name|class
name|LTOCodeGenerator
block|{
name|public
label|:
specifier|static
specifier|const
name|char
modifier|*
name|getVersionString
parameter_list|()
function_decl|;
name|LTOCodeGenerator
argument_list|()
expr_stmt|;
operator|~
name|LTOCodeGenerator
argument_list|()
expr_stmt|;
name|bool
name|addModule
argument_list|(
name|class
name|LTOModule
operator|*
argument_list|,
name|std
operator|::
name|string
operator|&
name|errMsg
argument_list|)
decl_stmt|;
name|bool
name|setDebugInfo
argument_list|(
name|lto_debug_model
argument_list|,
name|std
operator|::
name|string
operator|&
name|errMsg
argument_list|)
decl_stmt|;
name|bool
name|setCodePICModel
argument_list|(
name|lto_codegen_model
argument_list|,
name|std
operator|::
name|string
operator|&
name|errMsg
argument_list|)
decl_stmt|;
name|void
name|setGccPath
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|)
function_decl|;
name|void
name|addMustPreserveSymbol
parameter_list|(
specifier|const
name|char
modifier|*
name|sym
parameter_list|)
function_decl|;
name|bool
name|writeMergedModules
argument_list|(
specifier|const
name|char
operator|*
name|path
argument_list|,
name|std
operator|::
name|string
operator|&
name|errMsg
argument_list|)
decl_stmt|;
specifier|const
name|void
modifier|*
name|compile
argument_list|(
name|size_t
operator|*
name|length
argument_list|,
name|std
operator|::
name|string
operator|&
name|errMsg
argument_list|)
decl_stmt|;
name|void
name|setCodeGenDebugOptions
parameter_list|(
specifier|const
name|char
modifier|*
name|opts
parameter_list|)
function_decl|;
name|private
label|:
name|bool
name|generateAssemblyCode
argument_list|(
name|llvm
operator|::
name|raw_ostream
operator|&
name|out
argument_list|,
name|std
operator|::
name|string
operator|&
name|errMsg
argument_list|)
decl_stmt|;
name|bool
name|assemble
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|asmPath
argument_list|,
specifier|const
name|std
operator|::
name|string
operator|&
name|objPath
argument_list|,
name|std
operator|::
name|string
operator|&
name|errMsg
argument_list|)
decl_stmt|;
name|void
name|applyScopeRestrictions
parameter_list|()
function_decl|;
name|bool
name|determineTarget
argument_list|(
name|std
operator|::
name|string
operator|&
name|errMsg
argument_list|)
decl_stmt|;
typedef|typedef
name|llvm
operator|::
name|StringMap
operator|<
name|uint8_t
operator|>
name|StringSet
expr_stmt|;
name|llvm
operator|::
name|Linker
name|_linker
expr_stmt|;
name|llvm
operator|::
name|TargetMachine
operator|*
name|_target
expr_stmt|;
name|bool
name|_emitDwarfDebugInfo
decl_stmt|;
name|bool
name|_scopeRestrictionsDone
decl_stmt|;
name|lto_codegen_model
name|_codeModel
decl_stmt|;
name|StringSet
name|_mustPreserveSymbols
decl_stmt|;
name|llvm
operator|::
name|MemoryBuffer
operator|*
name|_nativeObjectFile
expr_stmt|;
name|std
operator|::
name|vector
operator|<
specifier|const
name|char
operator|*
operator|>
name|_codegenOptions
expr_stmt|;
name|llvm
operator|::
name|sys
operator|::
name|Path
operator|*
name|_gccPath
expr_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// LTO_CODE_GENERATOR_H
end_comment

end_unit

