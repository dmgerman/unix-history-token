begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2005 Andrey Simonenko  * Copyright (c) 2016 Maksym Sobolyev<sobomax@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_struct
struct|struct
name|uc_cfg
block|{
name|int
name|sock_type
decl_stmt|;
specifier|const
name|char
modifier|*
name|sock_type_str
decl_stmt|;
name|bool
name|debug
decl_stmt|;
specifier|const
name|char
modifier|*
name|proc_name
decl_stmt|;
name|int
name|sync_fd
index|[
literal|2
index|]
index|[
literal|2
index|]
decl_stmt|;
name|int
name|serv_sock_fd
decl_stmt|;
name|bool
name|server_flag
decl_stmt|;
name|bool
name|send_data_flag
decl_stmt|;
name|struct
name|sockaddr_un
name|serv_addr_sun
decl_stmt|;
name|bool
name|send_array_flag
decl_stmt|;
name|pid_t
name|client_pid
decl_stmt|;
struct|struct
block|{
name|char
modifier|*
name|buf_send
decl_stmt|;
name|char
modifier|*
name|buf_recv
decl_stmt|;
name|size_t
name|buf_size
decl_stmt|;
name|u_int
name|msg_num
decl_stmt|;
block|}
name|ipc_msg
struct|;
struct|struct
block|{
name|uid_t
name|uid
decl_stmt|;
name|uid_t
name|euid
decl_stmt|;
name|gid_t
name|gid
decl_stmt|;
name|gid_t
name|egid
decl_stmt|;
name|gid_t
modifier|*
name|gid_arr
decl_stmt|;
name|int
name|gid_num
decl_stmt|;
block|}
name|proc_cred
struct|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|uc_cfg
name|uc_cfg
decl_stmt|;
end_decl_stmt

begin_function_decl
name|int
name|uc_check_msghdr
parameter_list|(
specifier|const
name|struct
name|msghdr
modifier|*
name|msghdr
parameter_list|,
name|size_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_check_cmsghdr
parameter_list|(
specifier|const
name|struct
name|cmsghdr
modifier|*
name|cmsghdr
parameter_list|,
name|int
name|type
parameter_list|,
name|size_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|uc_output
parameter_list|(
specifier|const
name|char
modifier|*
name|format
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|1
operator|,
function_decl|2
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|void
name|uc_logmsgx
parameter_list|(
specifier|const
name|char
modifier|*
name|format
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|1
operator|,
function_decl|2
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|void
name|uc_dbgmsg
parameter_list|(
specifier|const
name|char
modifier|*
name|format
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|1
operator|,
function_decl|2
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|void
name|uc_logmsg
parameter_list|(
specifier|const
name|char
modifier|*
name|format
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|1
operator|,
function_decl|2
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|void
name|uc_vlogmsgx
parameter_list|(
specifier|const
name|char
modifier|*
name|format
parameter_list|,
name|va_list
name|ap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_message_recv
parameter_list|(
name|int
name|fd
parameter_list|,
name|struct
name|msghdr
modifier|*
name|msghdr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_message_send
parameter_list|(
name|int
name|fd
parameter_list|,
specifier|const
name|struct
name|msghdr
modifier|*
name|msghdr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_message_sendn
parameter_list|(
name|int
name|fd
parameter_list|,
name|struct
name|msghdr
modifier|*
name|msghdr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|uc_msghdr_init_server
parameter_list|(
name|struct
name|msghdr
modifier|*
name|msghdr
parameter_list|,
name|struct
name|iovec
modifier|*
name|iov
parameter_list|,
name|void
modifier|*
name|cmsg_data
parameter_list|,
name|size_t
name|cmsg_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|uc_msghdr_init_client
parameter_list|(
name|struct
name|msghdr
modifier|*
name|msghdr
parameter_list|,
name|struct
name|iovec
modifier|*
name|iov
parameter_list|,
name|void
modifier|*
name|cmsg_data
parameter_list|,
name|size_t
name|cmsg_size
parameter_list|,
name|int
name|type
parameter_list|,
name|size_t
name|arr_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_socket_create
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_socket_accept
parameter_list|(
name|int
name|listenfd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_socket_close
parameter_list|(
name|int
name|fd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_socket_connect
parameter_list|(
name|int
name|fd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_sync_recv
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_sync_send
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_client_fork
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|uc_client_exit
parameter_list|(
name|int
name|rv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_client_wait
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_check_groups
parameter_list|(
specifier|const
name|char
modifier|*
name|gid_arr_str
parameter_list|,
specifier|const
name|gid_t
modifier|*
name|gid_arr
parameter_list|,
specifier|const
name|char
modifier|*
name|gid_num_str
parameter_list|,
name|int
name|gid_num
parameter_list|,
name|bool
name|all_gids
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_check_scm_creds_cmsgcred
parameter_list|(
name|struct
name|cmsghdr
modifier|*
name|cmsghdr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|uc_check_scm_creds_sockcred
parameter_list|(
name|struct
name|cmsghdr
modifier|*
name|cmsghdr
parameter_list|)
function_decl|;
end_function_decl

end_unit

