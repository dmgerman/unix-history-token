begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2002 Poul-Henning Kamp  * Copyright (c) 2002 Networks Associates Technology, Inc.  * All rights reserved.  *  * This software was developed for the FreeBSD Project by Poul-Henning Kamp  * and NAI Labs, the Security Research Division of Network Associates, Inc.  * under DARPA/SPAWAR contract N66001-01-C-8035 ("CBOSS"), as part of the  * DARPA CHATS research program.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. The names of the authors may not be used to endorse or promote  *    products derived from this software without specific prior written  *    permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_include
include|#
directive|include
file|<pthread.h>
end_include

begin_decl_stmt
name|pthread_cond_t
name|ptc_up
decl_stmt|,
name|ptc_down
decl_stmt|,
name|ptc_event
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|pthread_mutex_t
name|ptm_up
decl_stmt|,
name|ptm_down
decl_stmt|,
name|ptm_event
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|CTASSERT
parameter_list|(
name|foo
parameter_list|)
end_define

begin_define
define|#
directive|define
name|DROP_GIANT
parameter_list|()
end_define

begin_define
define|#
directive|define
name|PICKUP_GIANT
parameter_list|()
end_define

begin_define
define|#
directive|define
name|EDIRIOCTL
value|-6
end_define

begin_define
define|#
directive|define
name|copyin
parameter_list|(
name|foo
parameter_list|,
name|bar
parameter_list|,
name|barf
parameter_list|)
value|0
end_define

begin_comment
comment|/* bio.h */
end_comment

begin_struct
struct|struct
name|bio
block|{
enum|enum
block|{
name|BIO_INVALID
init|=
literal|0
block|,
name|BIO_READ
init|=
literal|1
block|,
name|BIO_WRITE
init|=
literal|2
block|,
name|BIO_DELETE
init|=
literal|4
block|,
name|BIO_GETATTR
init|=
literal|8
block|,
name|BIO_SETATTR
init|=
literal|16
block|}
name|bio_cmd
enum|;
struct|struct
block|{
name|int
name|foo
decl_stmt|;
block|}
name|stats
struct|;
name|TAILQ_ENTRY
argument_list|(
argument|bio
argument_list|)
name|bio_queue
expr_stmt|;
name|TAILQ_ENTRY
argument_list|(
argument|bio
argument_list|)
name|bio_sort
expr_stmt|;
name|struct
name|g_consumer
modifier|*
name|bio_from
decl_stmt|;
name|struct
name|g_provider
modifier|*
name|bio_to
decl_stmt|;
name|void
function_decl|(
modifier|*
name|bio_done
function_decl|)
parameter_list|(
name|struct
name|bio
modifier|*
parameter_list|)
function_decl|;
name|off_t
name|bio_offset
decl_stmt|;
name|off_t
name|bio_length
decl_stmt|;
name|off_t
name|bio_completed
decl_stmt|;
name|void
modifier|*
name|bio_data
decl_stmt|;
specifier|const
name|char
modifier|*
name|bio_attribute
decl_stmt|;
comment|/* BIO_GETATTR/BIO_SETATTR */
name|int
name|bio_error
decl_stmt|;
name|u_int
name|bio_children
decl_stmt|;
comment|/* Number of spawned bios */
name|struct
name|bio
modifier|*
name|bio_linkage
decl_stmt|;
name|int
name|bio_flags
decl_stmt|;
define|#
directive|define
name|BIO_DONE
value|0x1
define|#
directive|define
name|BIO_ERROR
value|0x2
block|}
struct|;
end_struct

begin_function_decl
name|void
name|biodone
parameter_list|(
name|struct
name|bio
modifier|*
name|bp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|biowait
parameter_list|(
name|struct
name|bio
modifier|*
name|bp
parameter_list|,
specifier|const
name|char
modifier|*
name|wchan
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* geom_dev.c */
end_comment

begin_function_decl
name|void
name|g_dev_init
parameter_list|(
name|void
modifier|*
name|junk
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|g_consumer
modifier|*
name|g_dev_opendev
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|r
parameter_list|,
name|int
name|e
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|g_dev_request
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|struct
name|bio
modifier|*
name|bp
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* geom_kernsim.c */
end_comment

begin_struct
struct|struct
name|thread
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|pthread_t
name|tid
decl_stmt|;
name|int
name|pid
decl_stmt|;
name|void
modifier|*
name|wchan
decl_stmt|;
specifier|const
name|char
modifier|*
name|wmesg
decl_stmt|;
name|int
name|pipe
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|void
name|done
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rattle
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|secrethandshake
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wakeup
parameter_list|(
name|void
modifier|*
name|chan
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|int
name|tsleep
name|__P
argument_list|(
operator|(
name|void
operator|*
name|chan
operator|,
name|int
name|pri
operator|,
specifier|const
name|char
operator|*
name|wmesg
operator|,
name|int
name|timo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|PPAUSE
value|0
end_define

begin_decl_stmt
specifier|extern
name|int
name|hz
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|new_thread
parameter_list|(
name|void
modifier|*
function_decl|(
modifier|*
name|func
function_decl|)
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|)
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|int
name|bootverbose
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|KASSERT
parameter_list|(
name|cond
parameter_list|,
name|txt
parameter_list|)
value|do {if (!(cond)) {printf txt; conff("err"); abort();}} while(0)
end_define

begin_define
define|#
directive|define
name|M_WAITOK
value|0
end_define

begin_define
define|#
directive|define
name|M_NOWAIT
value|1
end_define

begin_define
define|#
directive|define
name|M_ZERO
value|2
end_define

begin_decl_stmt
specifier|extern
name|struct
name|mtx
name|Giant
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
modifier|*
name|g_malloc
parameter_list|(
name|int
name|size
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_free
parameter_list|(
name|void
modifier|*
name|ptr
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|MTX_DEF
value|0
end_define

begin_define
define|#
directive|define
name|MTX_SPIN
value|1
end_define

begin_function_decl
name|void
name|mtx_lock
parameter_list|(
name|struct
name|mtx
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mtx_lock_spin
parameter_list|(
name|struct
name|mtx
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mtx_unlock
parameter_list|(
name|struct
name|mtx
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mtx_unlock_spin
parameter_list|(
name|struct
name|mtx
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mtx_init
parameter_list|(
name|struct
name|mtx
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mtx_destroy
parameter_list|(
name|struct
name|mtx
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|MALLOC_DECLARE
parameter_list|(
name|foo
parameter_list|)
end_define

begin_comment
comment|/* */
end_comment

begin_function_decl
name|void
name|g_topology_lock
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_topology_unlock
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_topology_assert
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* geom_simdisk.c */
end_comment

begin_function_decl
name|void
name|g_simdisk_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_simdisk_destroy
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|g_geom
modifier|*
name|g_simdisk_new
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|g_geom
modifier|*
name|g_simdisk_xml_load
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
name|file
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_simdisk_xml_save
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
name|file
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_simdisk_stop
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_simdisk_restart
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|DECLARE_GEOM_CLASS
parameter_list|(
name|class
parameter_list|,
name|name
parameter_list|)
define|\
value|void name##_init(void);				\ 	void					\ 	name##_init(void)			\ 	{					\ 		g_add_class(&class);		\ 	}
end_define

begin_function_decl
name|void
name|g_aes_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_apple_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_bsd_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_mbr_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_mbrext_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_sunlabel_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|g_pc98_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|thread_sim
parameter_list|(
name|void
modifier|*
name|ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dumpf
parameter_list|(
specifier|const
name|char
modifier|*
name|file
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|conff
parameter_list|(
specifier|const
name|char
modifier|*
name|file
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sdumpf
parameter_list|(
specifier|const
name|char
modifier|*
name|file
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|THR_MAIN
value|0
end_define

begin_define
define|#
directive|define
name|THR_UP
value|1
end_define

begin_define
define|#
directive|define
name|THR_DOWN
value|2
end_define

begin_define
define|#
directive|define
name|THR_EVENT
value|3
end_define

begin_define
define|#
directive|define
name|EJUSTRETURN
value|(-2)
end_define

end_unit

