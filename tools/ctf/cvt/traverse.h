begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License, Version 1.0 only  * (the "License").  You may not use this file except in compliance  * with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2004 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_TRAVERSE_H
end_ifndef

begin_define
define|#
directive|define
name|_TRAVERSE_H
end_define

begin_pragma
pragma|#
directive|pragma
name|ident
literal|"%Z%%M%	%I%	%E% SMI"
end_pragma

begin_comment
comment|/*  * Routines used to traverse tdesc trees, invoking user-supplied callbacks  * as the tree is traversed.  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
include|#
directive|include
file|"ctftools.h"
typedef|typedef
name|int
function_decl|(
modifier|*
name|tdtrav_cb_f
function_decl|)
parameter_list|(
name|tdesc_t
modifier|*
parameter_list|,
name|tdesc_t
modifier|*
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
typedef|typedef
struct|struct
name|tdtrav_data
block|{
name|int
name|vgen
decl_stmt|;
name|tdtrav_cb_f
modifier|*
name|firstops
decl_stmt|;
name|tdtrav_cb_f
modifier|*
name|preops
decl_stmt|;
name|tdtrav_cb_f
modifier|*
name|postops
decl_stmt|;
name|void
modifier|*
name|private
decl_stmt|;
block|}
name|tdtrav_data_t
typedef|;
name|void
name|tdtrav_init
parameter_list|(
name|tdtrav_data_t
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|tdtrav_cb_f
modifier|*
parameter_list|,
name|tdtrav_cb_f
modifier|*
parameter_list|,
name|tdtrav_cb_f
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|int
name|tdtraverse
parameter_list|(
name|tdesc_t
modifier|*
parameter_list|,
name|tdesc_t
modifier|*
modifier|*
parameter_list|,
name|tdtrav_data_t
modifier|*
parameter_list|)
function_decl|;
name|int
name|iitraverse
parameter_list|(
name|iidesc_t
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|tdtrav_cb_f
modifier|*
parameter_list|,
name|tdtrav_cb_f
modifier|*
parameter_list|,
name|tdtrav_cb_f
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|int
name|iitraverse_hash
parameter_list|(
name|hash_t
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|tdtrav_cb_f
modifier|*
parameter_list|,
name|tdtrav_cb_f
modifier|*
parameter_list|,
name|tdtrav_cb_f
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|int
name|iitraverse_td
parameter_list|(
name|iidesc_t
modifier|*
name|ii
parameter_list|,
name|tdtrav_data_t
modifier|*
parameter_list|)
function_decl|;
name|int
name|tdtrav_assert
parameter_list|(
name|tdesc_t
modifier|*
parameter_list|,
name|tdesc_t
modifier|*
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _TRAVERSE_H */
end_comment

end_unit

