begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2010 by Peter Jeremy<peterjeremy@acm.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_TESTFLOAT_SPARC64_FPU_REG_H_
end_ifndef

begin_define
define|#
directive|define
name|_TESTFLOAT_SPARC64_FPU_REG_H_
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_decl_stmt
specifier|extern
name|u_int32_t
name|__fpreg
index|[
literal|64
index|]
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
name|__inline
name|u_int32_t
name|__fpu_getreg
parameter_list|(
name|int
name|r
parameter_list|)
block|{
return|return
operator|(
name|__fpreg
index|[
name|r
index|]
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|u_int64_t
name|__fpu_getreg64
parameter_list|(
name|int
name|r
parameter_list|)
block|{
return|return
operator|(
operator|(
name|u_int64_t
operator|)
name|__fpreg
index|[
name|r
index|]
operator|<<
literal|32
operator||
operator|(
name|u_int64_t
operator|)
name|__fpreg
index|[
name|r
operator|+
literal|1
index|]
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|__fpu_setreg
parameter_list|(
name|int
name|r
parameter_list|,
name|u_int32_t
name|v
parameter_list|)
block|{
name|__fpreg
index|[
name|r
index|]
operator|=
name|v
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|__fpu_setreg64
parameter_list|(
name|int
name|r
parameter_list|,
name|u_int64_t
name|v
parameter_list|)
block|{
name|__fpreg
index|[
name|r
index|]
operator|=
call|(
name|u_int32_t
call|)
argument_list|(
name|v
operator|>>
literal|32
argument_list|)
expr_stmt|;
name|__fpreg
index|[
name|r
operator|+
literal|1
index|]
operator|=
operator|(
name|u_int32_t
operator|)
name|v
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _TESTFLOAT_SPARC64_FPU_REG_H_ */
end_comment

end_unit

