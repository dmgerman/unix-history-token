begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* ===============================================================================  This C header file is part of TestFloat, Release 2a, a package of programs for testing the correctness of floating-point arithmetic complying to the IEC/IEEE Standard for Floating-Point.  Written by John R. Hauser.  More information is available through the Web page `http://HTTP.CS.Berkeley.EDU/~jhauser/arithmetic/TestFloat.html'.  THIS SOFTWARE IS DISTRIBUTED AS IS, FOR FREE.  Although reasonable effort has been made to avoid it, THIS SOFTWARE MAY CONTAIN FAULTS THAT WILL AT TIMES RESULT IN INCORRECT BEHAVIOR.  USE OF THIS SOFTWARE IS RESTRICTED TO PERSONS AND ORGANIZATIONS WHO CAN AND WILL TAKE FULL RESPONSIBILITY FOR ANY AND ALL LOSSES, COSTS, OR OTHER PROBLEMS ARISING FROM ITS USE.  Derivative works are acceptable, even for commercial purposes, so long as (1) they include prominent notice that the work is derivative, and (2) they include prominent notice akin to these four paragraphs for those parts of this code that are retained.  =============================================================================== */
end_comment

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_decl_stmt
specifier|extern
specifier|volatile
name|flag
name|stop
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|trueName
decl_stmt|,
modifier|*
name|testName
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|flag
name|forever
decl_stmt|,
name|errorStop
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|uint32
name|maxErrorCount
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|flag
name|checkNaNs
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int8
modifier|*
name|trueFlagsPtr
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|int8
function_decl|(
modifier|*
name|testFlagsFunctionPtr
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|functionName
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|roundingPrecisionName
decl_stmt|,
modifier|*
name|roundingModeName
decl_stmt|,
modifier|*
name|tininessModeName
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|flag
name|anyErrors
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|writeFunctionName
parameter_list|(
name|FILE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|exitWithStatus
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|void
name|test_a_int32_z_float32
argument_list|(
name|float32
argument_list|(
name|int32
argument_list|)
argument_list|,
name|float32
argument_list|(
name|int32
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_a_int32_z_float64
argument_list|(
name|float64
argument_list|(
name|int32
argument_list|)
argument_list|,
name|float64
argument_list|(
name|int32
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|FLOATX80
end_ifdef

begin_decl_stmt
name|void
name|test_a_int32_z_floatx80
argument_list|(
name|floatx80
argument_list|(
name|int32
argument_list|)
argument_list|,
name|floatx80
argument_list|(
name|int32
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|FLOAT128
end_ifdef

begin_decl_stmt
name|void
name|test_a_int32_z_float128
argument_list|(
name|float128
argument_list|(
name|int32
argument_list|)
argument_list|,
name|float128
argument_list|(
name|int32
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|BITS64
end_ifdef

begin_decl_stmt
name|void
name|test_a_int64_z_float32
argument_list|(
name|float32
argument_list|(
name|int64
argument_list|)
argument_list|,
name|float32
argument_list|(
name|int64
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_a_int64_z_float64
argument_list|(
name|float64
argument_list|(
name|int64
argument_list|)
argument_list|,
name|float64
argument_list|(
name|int64
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|FLOATX80
end_ifdef

begin_decl_stmt
name|void
name|test_a_int64_z_floatx80
argument_list|(
name|floatx80
argument_list|(
name|int64
argument_list|)
argument_list|,
name|floatx80
argument_list|(
name|int64
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|FLOAT128
end_ifdef

begin_decl_stmt
name|void
name|test_a_int64_z_float128
argument_list|(
name|float128
argument_list|(
name|int64
argument_list|)
argument_list|,
name|float128
argument_list|(
name|int64
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|void
name|test_a_float32_z_int32
argument_list|(
name|int32
argument_list|(
name|float32
argument_list|)
argument_list|,
name|int32
argument_list|(
name|float32
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|BITS64
end_ifdef

begin_decl_stmt
name|void
name|test_a_float32_z_int64
argument_list|(
name|int64
argument_list|(
name|float32
argument_list|)
argument_list|,
name|int64
argument_list|(
name|float32
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|void
name|test_a_float32_z_float64
argument_list|(
name|float64
argument_list|(
name|float32
argument_list|)
argument_list|,
name|float64
argument_list|(
name|float32
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|FLOATX80
end_ifdef

begin_decl_stmt
name|void
name|test_a_float32_z_floatx80
argument_list|(
name|floatx80
argument_list|(
name|float32
argument_list|)
argument_list|,
name|floatx80
argument_list|(
name|float32
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|FLOAT128
end_ifdef

begin_decl_stmt
name|void
name|test_a_float32_z_float128
argument_list|(
name|float128
argument_list|(
name|float32
argument_list|)
argument_list|,
name|float128
argument_list|(
name|float32
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|void
name|test_az_float32
argument_list|(
name|float32
argument_list|(
name|float32
argument_list|)
argument_list|,
name|float32
argument_list|(
name|float32
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_ab_float32_z_flag
argument_list|(
name|flag
argument_list|(
name|float32
argument_list|,
name|float32
argument_list|)
argument_list|,
name|flag
argument_list|(
name|float32
argument_list|,
name|float32
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_abz_float32
argument_list|(
name|float32
argument_list|(
name|float32
argument_list|,
name|float32
argument_list|)
argument_list|,
name|float32
argument_list|(
name|float32
argument_list|,
name|float32
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_a_float64_z_int32
argument_list|(
name|int32
argument_list|(
name|float64
argument_list|)
argument_list|,
name|int32
argument_list|(
name|float64
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|BITS64
end_ifdef

begin_decl_stmt
name|void
name|test_a_float64_z_int64
argument_list|(
name|int64
argument_list|(
name|float64
argument_list|)
argument_list|,
name|int64
argument_list|(
name|float64
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|void
name|test_a_float64_z_float32
argument_list|(
name|float32
argument_list|(
name|float64
argument_list|)
argument_list|,
name|float32
argument_list|(
name|float64
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|FLOATX80
end_ifdef

begin_decl_stmt
name|void
name|test_a_float64_z_floatx80
argument_list|(
name|floatx80
argument_list|(
name|float64
argument_list|)
argument_list|,
name|floatx80
argument_list|(
name|float64
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|FLOAT128
end_ifdef

begin_decl_stmt
name|void
name|test_a_float64_z_float128
argument_list|(
name|float128
argument_list|(
name|float64
argument_list|)
argument_list|,
name|float128
argument_list|(
name|float64
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|void
name|test_az_float64
argument_list|(
name|float64
argument_list|(
name|float64
argument_list|)
argument_list|,
name|float64
argument_list|(
name|float64
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_ab_float64_z_flag
argument_list|(
name|flag
argument_list|(
name|float64
argument_list|,
name|float64
argument_list|)
argument_list|,
name|flag
argument_list|(
name|float64
argument_list|,
name|float64
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_abz_float64
argument_list|(
name|float64
argument_list|(
name|float64
argument_list|,
name|float64
argument_list|)
argument_list|,
name|float64
argument_list|(
name|float64
argument_list|,
name|float64
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|FLOATX80
end_ifdef

begin_decl_stmt
name|void
name|test_a_floatx80_z_int32
argument_list|(
name|int32
argument_list|(
name|floatx80
argument_list|)
argument_list|,
name|int32
argument_list|(
name|floatx80
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|BITS64
end_ifdef

begin_decl_stmt
name|void
name|test_a_floatx80_z_int64
argument_list|(
name|int64
argument_list|(
name|floatx80
argument_list|)
argument_list|,
name|int64
argument_list|(
name|floatx80
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|void
name|test_a_floatx80_z_float32
argument_list|(
name|float32
argument_list|(
name|floatx80
argument_list|)
argument_list|,
name|float32
argument_list|(
name|floatx80
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_a_floatx80_z_float64
argument_list|(
name|float64
argument_list|(
name|floatx80
argument_list|)
argument_list|,
name|float64
argument_list|(
name|floatx80
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|FLOAT128
end_ifdef

begin_decl_stmt
name|void
name|test_a_floatx80_z_float128
argument_list|(
name|float128
argument_list|(
name|floatx80
argument_list|)
argument_list|,
name|float128
argument_list|(
name|floatx80
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|void
name|test_az_floatx80
argument_list|(
name|floatx80
argument_list|(
name|floatx80
argument_list|)
argument_list|,
name|floatx80
argument_list|(
name|floatx80
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_ab_floatx80_z_flag
argument_list|(
name|flag
argument_list|(
name|floatx80
argument_list|,
name|floatx80
argument_list|)
argument_list|,
name|flag
argument_list|(
name|floatx80
argument_list|,
name|floatx80
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_abz_floatx80
argument_list|(
name|floatx80
argument_list|(
name|floatx80
argument_list|,
name|floatx80
argument_list|)
argument_list|,
name|floatx80
argument_list|(
name|floatx80
argument_list|,
name|floatx80
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|FLOAT128
end_ifdef

begin_decl_stmt
name|void
name|test_a_float128_z_int32
argument_list|(
name|int32
argument_list|(
name|float128
argument_list|)
argument_list|,
name|int32
argument_list|(
name|float128
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|BITS64
end_ifdef

begin_decl_stmt
name|void
name|test_a_float128_z_int64
argument_list|(
name|int64
argument_list|(
name|float128
argument_list|)
argument_list|,
name|int64
argument_list|(
name|float128
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|void
name|test_a_float128_z_float32
argument_list|(
name|float32
argument_list|(
name|float128
argument_list|)
argument_list|,
name|float32
argument_list|(
name|float128
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_a_float128_z_float64
argument_list|(
name|float64
argument_list|(
name|float128
argument_list|)
argument_list|,
name|float64
argument_list|(
name|float128
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|FLOATX80
end_ifdef

begin_decl_stmt
name|void
name|test_a_float128_z_floatx80
argument_list|(
name|floatx80
argument_list|(
name|float128
argument_list|)
argument_list|,
name|floatx80
argument_list|(
name|float128
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|void
name|test_az_float128
argument_list|(
name|float128
argument_list|(
name|float128
argument_list|)
argument_list|,
name|float128
argument_list|(
name|float128
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_ab_float128_z_flag
argument_list|(
name|flag
argument_list|(
name|float128
argument_list|,
name|float128
argument_list|)
argument_list|,
name|flag
argument_list|(
name|float128
argument_list|,
name|float128
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|test_abz_float128
argument_list|(
name|float128
argument_list|(
name|float128
argument_list|,
name|float128
argument_list|)
argument_list|,
name|float128
argument_list|(
name|float128
argument_list|,
name|float128
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

