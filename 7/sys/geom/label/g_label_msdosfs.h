begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2006 Tobias Reifenberger  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_comment
comment|/*  * Conversion macros for little endian encoded unsigned integers  * in byte streams to the local unsigned integer format.  */
end_comment

begin_define
define|#
directive|define
name|UINT16BYTES
parameter_list|(
name|p
parameter_list|)
value|((uint32_t)((p)[0] + (256*(p)[1])))
end_define

begin_define
define|#
directive|define
name|UINT32BYTES
parameter_list|(
name|p
parameter_list|)
value|((uint32_t)((p)[0] + (256*(p)[1]) +		\ 	    (65536*(p)[2]) + (16777216*(p)[3])))
end_define

begin_comment
comment|/*  * All following structures are according to:  *  * Microsoft Extensible Firmware Initiative FAT32 File System Specification  * FAT: General Overview of On-Disk Format  * Version 1.03, December 6, 2000  * Microsoft Corporation  */
end_comment

begin_comment
comment|/*  * FAT boot sector and boot parameter block for  * FAT12 and FAT16 volumes  */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|fat_bsbpb
block|{
comment|/* common fields */
name|uint8_t
name|BS_jmpBoot
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|BS_OEMName
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|BPB_BytsPerSec
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_SecPerClus
decl_stmt|;
name|uint8_t
name|BPB_RsvdSecCnt
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_NumFATs
decl_stmt|;
name|uint8_t
name|BPB_RootEntCnt
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_TotSec16
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_Media
decl_stmt|;
name|uint8_t
name|BPB_FATSz16
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_SecPerTrack
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_NumHeads
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_HiddSec
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|BPB_TotSec32
index|[
literal|4
index|]
decl_stmt|;
comment|/* FAT12/FAT16 only fields */
name|uint8_t
name|BS_DrvNum
decl_stmt|;
name|uint8_t
name|BS_Reserved1
decl_stmt|;
name|uint8_t
name|BS_BootSig
decl_stmt|;
name|uint8_t
name|BS_VolID
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|BS_VolLab
index|[
literal|11
index|]
decl_stmt|;
name|uint8_t
name|BS_FilSysType
index|[
literal|8
index|]
decl_stmt|;
block|}
name|FAT_BSBPB
typedef|;
end_typedef

begin_comment
comment|/* 62 bytes */
end_comment

begin_comment
comment|/*  * FAT boot sector and boot parameter block for  * FAT32 volumes  */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|fat32_bsbpb
block|{
comment|/* common fields */
name|uint8_t
name|BS_jmpBoot
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|BS_OEMName
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|BPB_BytsPerSec
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_SecPerClus
decl_stmt|;
name|uint8_t
name|BPB_RsvdSecCnt
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_NumFATs
decl_stmt|;
name|uint8_t
name|BPB_RootEntCnt
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_TotSec16
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_Media
decl_stmt|;
name|uint8_t
name|BPB_FATSz16
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_SecPerTrack
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_NumHeads
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_HiddSec
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|BPB_TotSec32
index|[
literal|4
index|]
decl_stmt|;
comment|/* FAT32 only fields */
name|uint8_t
name|BPB_FATSz32
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|BPB_ExtFlags
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_FSVer
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_RootClus
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|BPB_FSInfo
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_BkBootSec
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|BPB_Reserved
index|[
literal|12
index|]
decl_stmt|;
name|uint8_t
name|BS_DrvNum
decl_stmt|;
name|uint8_t
name|BS_Reserved1
decl_stmt|;
name|uint8_t
name|BS_BootSig
decl_stmt|;
name|uint8_t
name|BS_VolID
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|BS_VolLab
index|[
literal|11
index|]
decl_stmt|;
name|uint8_t
name|BS_FilSysType
index|[
literal|8
index|]
decl_stmt|;
block|}
name|FAT32_BSBPB
typedef|;
end_typedef

begin_comment
comment|/* 90 bytes */
end_comment

begin_comment
comment|/*  * FAT directory entry structure  */
end_comment

begin_define
define|#
directive|define
name|FAT_DES_ATTR_READ_ONLY
value|0x01
end_define

begin_define
define|#
directive|define
name|FAT_DES_ATTR_HIDDEN
value|0x02
end_define

begin_define
define|#
directive|define
name|FAT_DES_ATTR_SYSTEM
value|0x04
end_define

begin_define
define|#
directive|define
name|FAT_DES_ATTR_VOLUME_ID
value|0x08
end_define

begin_define
define|#
directive|define
name|FAT_DES_ATTR_DIRECTORY
value|0x10
end_define

begin_define
define|#
directive|define
name|FAT_DES_ATTR_ARCHIVE
value|0x20
end_define

begin_define
define|#
directive|define
name|FAT_DES_ATTR_LONG_NAME
value|(FAT_DES_ATTR_READ_ONLY |		\ 				 FAT_DES_ATTR_HIDDEN |			\ 				 FAT_DES_ATTR_SYSTEM |			\ 				 FAT_DES_ATTR_VOLUME_ID)
end_define

begin_typedef
typedef|typedef
struct|struct
name|fat_des
block|{
name|uint8_t
name|DIR_Name
index|[
literal|11
index|]
decl_stmt|;
name|uint8_t
name|DIR_Attr
decl_stmt|;
name|uint8_t
name|DIR_NTRes
decl_stmt|;
name|uint8_t
name|DIR_CrtTimeTenth
decl_stmt|;
name|uint8_t
name|DIR_CrtTime
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|DIR_CrtDate
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|DIR_LstAccDate
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|DIR_FstClusHI
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|DIR_WrtTime
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|DIR_WrtDate
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|DIR_FstClusLO
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|DIR_FileSize
index|[
literal|4
index|]
decl_stmt|;
block|}
name|FAT_DES
typedef|;
end_typedef

end_unit

