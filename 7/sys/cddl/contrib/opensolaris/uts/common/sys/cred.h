begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2006 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_comment
comment|/*	Copyright (c) 1983, 1984, 1985, 1986, 1987, 1988, 1989 AT&T	*/
end_comment

begin_comment
comment|/*	  All Rights Reserved  	*/
end_comment

begin_comment
comment|/*  * Portions of this source code were derived from Berkeley 4.3 BSD  * under license from the Regents of the University of California.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_CRED_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_CRED_H
end_define

begin_pragma
pragma|#
directive|pragma
name|ident
literal|"%Z%%M%	%I%	%E% SMI"
end_pragma

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/*  * The credential is an opaque kernel private data structure defined in  *<sys/cred_impl.h>.  */
typedef|typedef
name|struct
name|cred
name|cred_t
typedef|;
ifdef|#
directive|ifdef
name|_KERNEL
define|#
directive|define
name|CRED
parameter_list|()
value|curthread->t_cred
struct_decl|struct
name|proc
struct_decl|;
comment|/* cred.h is included in proc.h */
struct_decl|struct
name|prcred
struct_decl|;
struct_decl|struct
name|auditinfo_addr
struct_decl|;
comment|/* cred.h is included in audit.h */
specifier|extern
name|int
name|ngroups_max
decl_stmt|;
comment|/*  * kcred is used when you need all privileges.  */
specifier|extern
name|struct
name|cred
modifier|*
name|kcred
decl_stmt|;
specifier|extern
name|void
name|cred_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|crhold
parameter_list|(
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|crfree
parameter_list|(
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cred_t
modifier|*
name|cralloc
parameter_list|(
name|void
parameter_list|)
function_decl|;
comment|/* all but ref uninitialized */
specifier|extern
name|cred_t
modifier|*
name|crget
parameter_list|(
name|void
parameter_list|)
function_decl|;
comment|/* initialized */
specifier|extern
name|cred_t
modifier|*
name|crcopy
parameter_list|(
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|crcopy_to
parameter_list|(
name|cred_t
modifier|*
parameter_list|,
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cred_t
modifier|*
name|crdup
parameter_list|(
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|crdup_to
parameter_list|(
name|cred_t
modifier|*
parameter_list|,
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cred_t
modifier|*
name|crgetcred
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|crset
parameter_list|(
name|struct
name|proc
modifier|*
parameter_list|,
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|groupmember
parameter_list|(
name|gid_t
parameter_list|,
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|supgroupmember
parameter_list|(
name|gid_t
parameter_list|,
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|hasprocperm
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|,
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|prochasprocperm
parameter_list|(
name|struct
name|proc
modifier|*
parameter_list|,
name|struct
name|proc
modifier|*
parameter_list|,
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|crcmp
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|,
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cred_t
modifier|*
name|zone_kcred
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|uid_t
name|crgetuid
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|uid_t
name|crgetruid
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|uid_t
name|crgetsuid
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|gid_t
name|crgetgid
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|gid_t
name|crgetrgid
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|gid_t
name|crgetsgid
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|zoneid_t
name|crgetzoneid
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|projid_t
name|crgetprojid
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
specifier|const
name|struct
name|auditinfo_addr
modifier|*
name|crgetauinfo
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|struct
name|auditinfo_addr
modifier|*
name|crgetauinfo_modifiable
parameter_list|(
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|uint_t
name|crgetref
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
specifier|const
name|gid_t
modifier|*
name|crgetgroups
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|crgetngroups
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
comment|/*  * Sets real, effective and/or saved uid/gid;  * -1 argument accepted as "no change".  */
specifier|extern
name|int
name|crsetresuid
parameter_list|(
name|cred_t
modifier|*
parameter_list|,
name|uid_t
parameter_list|,
name|uid_t
parameter_list|,
name|uid_t
parameter_list|)
function_decl|;
specifier|extern
name|int
name|crsetresgid
parameter_list|(
name|cred_t
modifier|*
parameter_list|,
name|gid_t
parameter_list|,
name|gid_t
parameter_list|,
name|gid_t
parameter_list|)
function_decl|;
comment|/*  * Sets real, effective and saved uids/gids all to the same  * values.  Both values must be non-negative and<= MAXUID  */
specifier|extern
name|int
name|crsetugid
parameter_list|(
name|cred_t
modifier|*
parameter_list|,
name|uid_t
parameter_list|,
name|gid_t
parameter_list|)
function_decl|;
specifier|extern
name|int
name|crsetgroups
parameter_list|(
name|cred_t
modifier|*
parameter_list|,
name|int
parameter_list|,
name|gid_t
modifier|*
parameter_list|)
function_decl|;
comment|/*  * Private interface for setting zone association of credential.  */
struct_decl|struct
name|zone
struct_decl|;
specifier|extern
name|void
name|crsetzone
parameter_list|(
name|cred_t
modifier|*
parameter_list|,
name|struct
name|zone
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|struct
name|zone
modifier|*
name|crgetzone
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
comment|/*  * Private interface for setting project id in credential.  */
specifier|extern
name|void
name|crsetprojid
parameter_list|(
name|cred_t
modifier|*
parameter_list|,
name|projid_t
parameter_list|)
function_decl|;
comment|/*  * Private interface for nfs.  */
specifier|extern
name|cred_t
modifier|*
name|crnetadjust
parameter_list|(
name|cred_t
modifier|*
parameter_list|)
function_decl|;
comment|/*  * Private interface for procfs.  */
specifier|extern
name|void
name|cred2prcred
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|,
name|struct
name|prcred
modifier|*
parameter_list|)
function_decl|;
comment|/*  * Private interfaces for Rampart Trusted Solaris.  */
struct_decl|struct
name|ts_label_s
struct_decl|;
specifier|extern
name|struct
name|ts_label_s
modifier|*
name|crgetlabel
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|boolean_t
name|crisremote
parameter_list|(
specifier|const
name|cred_t
modifier|*
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* _KERNEL */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_CRED_H */
end_comment

end_unit

