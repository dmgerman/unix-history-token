begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.  *  * This program is free software; you can redistribute it and/or modify it  * under the terms of version 2 of the GNU General Public License as  * published by the Free Software Foundation.  *  * This program is distributed in the hope that it would be useful, but  * WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  *  * Further, this software is distributed without any warranty that it is  * free of the rightful claim of any third person regarding infringement  * or the like.  Any license provided herein, whether implied or  * otherwise, applies only to this software file.  Patent licenses, if  * any, provided herein do not apply to combinations of this program with  * other software, or any other product whatsoever.  *  * You should have received a copy of the GNU General Public License along  * with this program; if not, write the Free Software Foundation, Inc., 59  * Temple Place - Suite 330, Boston MA 02111-1307, USA.  *  * Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,  * Mountain View, CA  94043, or:  *  * http://www.sgi.com  *  * For further information regarding this notice, see:  *  * http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__XFS_STATS_H__
end_ifndef

begin_define
define|#
directive|define
name|__XFS_STATS_H__
end_define

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|XFS_STATS_OFF
argument_list|)
end_if

begin_comment
comment|/*  * XFS global statistics  */
end_comment

begin_struct
struct|struct
name|xfsstats
block|{
define|#
directive|define
name|XFSSTAT_END_EXTENT_ALLOC
value|4
name|__uint32_t
name|xs_allocx
decl_stmt|;
name|__uint32_t
name|xs_allocb
decl_stmt|;
name|__uint32_t
name|xs_freex
decl_stmt|;
name|__uint32_t
name|xs_freeb
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_ALLOC_BTREE
value|(XFSSTAT_END_EXTENT_ALLOC+4)
name|__uint32_t
name|xs_abt_lookup
decl_stmt|;
name|__uint32_t
name|xs_abt_compare
decl_stmt|;
name|__uint32_t
name|xs_abt_insrec
decl_stmt|;
name|__uint32_t
name|xs_abt_delrec
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_BLOCK_MAPPING
value|(XFSSTAT_END_ALLOC_BTREE+7)
name|__uint32_t
name|xs_blk_mapr
decl_stmt|;
name|__uint32_t
name|xs_blk_mapw
decl_stmt|;
name|__uint32_t
name|xs_blk_unmap
decl_stmt|;
name|__uint32_t
name|xs_add_exlist
decl_stmt|;
name|__uint32_t
name|xs_del_exlist
decl_stmt|;
name|__uint32_t
name|xs_look_exlist
decl_stmt|;
name|__uint32_t
name|xs_cmp_exlist
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_BLOCK_MAP_BTREE
value|(XFSSTAT_END_BLOCK_MAPPING+4)
name|__uint32_t
name|xs_bmbt_lookup
decl_stmt|;
name|__uint32_t
name|xs_bmbt_compare
decl_stmt|;
name|__uint32_t
name|xs_bmbt_insrec
decl_stmt|;
name|__uint32_t
name|xs_bmbt_delrec
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_DIRECTORY_OPS
value|(XFSSTAT_END_BLOCK_MAP_BTREE+4)
name|__uint32_t
name|xs_dir_lookup
decl_stmt|;
name|__uint32_t
name|xs_dir_create
decl_stmt|;
name|__uint32_t
name|xs_dir_remove
decl_stmt|;
name|__uint32_t
name|xs_dir_getdents
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_TRANSACTIONS
value|(XFSSTAT_END_DIRECTORY_OPS+3)
name|__uint32_t
name|xs_trans_sync
decl_stmt|;
name|__uint32_t
name|xs_trans_async
decl_stmt|;
name|__uint32_t
name|xs_trans_empty
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_INODE_OPS
value|(XFSSTAT_END_TRANSACTIONS+7)
name|__uint32_t
name|xs_ig_attempts
decl_stmt|;
name|__uint32_t
name|xs_ig_found
decl_stmt|;
name|__uint32_t
name|xs_ig_frecycle
decl_stmt|;
name|__uint32_t
name|xs_ig_missed
decl_stmt|;
name|__uint32_t
name|xs_ig_dup
decl_stmt|;
name|__uint32_t
name|xs_ig_reclaims
decl_stmt|;
name|__uint32_t
name|xs_ig_attrchg
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_LOG_OPS
value|(XFSSTAT_END_INODE_OPS+5)
name|__uint32_t
name|xs_log_writes
decl_stmt|;
name|__uint32_t
name|xs_log_blocks
decl_stmt|;
name|__uint32_t
name|xs_log_noiclogs
decl_stmt|;
name|__uint32_t
name|xs_log_force
decl_stmt|;
name|__uint32_t
name|xs_log_force_sleep
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_TAIL_PUSHING
value|(XFSSTAT_END_LOG_OPS+10)
name|__uint32_t
name|xs_try_logspace
decl_stmt|;
name|__uint32_t
name|xs_sleep_logspace
decl_stmt|;
name|__uint32_t
name|xs_push_ail
decl_stmt|;
name|__uint32_t
name|xs_push_ail_success
decl_stmt|;
name|__uint32_t
name|xs_push_ail_pushbuf
decl_stmt|;
name|__uint32_t
name|xs_push_ail_pinned
decl_stmt|;
name|__uint32_t
name|xs_push_ail_locked
decl_stmt|;
name|__uint32_t
name|xs_push_ail_flushing
decl_stmt|;
name|__uint32_t
name|xs_push_ail_restarts
decl_stmt|;
name|__uint32_t
name|xs_push_ail_flush
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_WRITE_CONVERT
value|(XFSSTAT_END_TAIL_PUSHING+2)
name|__uint32_t
name|xs_xstrat_quick
decl_stmt|;
name|__uint32_t
name|xs_xstrat_split
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_READ_WRITE_OPS
value|(XFSSTAT_END_WRITE_CONVERT+2)
name|__uint32_t
name|xs_write_calls
decl_stmt|;
name|__uint32_t
name|xs_read_calls
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_ATTRIBUTE_OPS
value|(XFSSTAT_END_READ_WRITE_OPS+4)
name|__uint32_t
name|xs_attr_get
decl_stmt|;
name|__uint32_t
name|xs_attr_set
decl_stmt|;
name|__uint32_t
name|xs_attr_remove
decl_stmt|;
name|__uint32_t
name|xs_attr_list
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_INODE_CLUSTER
value|(XFSSTAT_END_ATTRIBUTE_OPS+3)
name|__uint32_t
name|xs_iflush_count
decl_stmt|;
name|__uint32_t
name|xs_icluster_flushcnt
decl_stmt|;
name|__uint32_t
name|xs_icluster_flushinode
decl_stmt|;
define|#
directive|define
name|XFSSTAT_END_VNODE_OPS
value|(XFSSTAT_END_INODE_CLUSTER+8)
name|__uint32_t
name|vn_active
decl_stmt|;
comment|/* # vnodes not on free lists */
name|__uint32_t
name|vn_alloc
decl_stmt|;
comment|/* # times vn_alloc called */
name|__uint32_t
name|vn_get
decl_stmt|;
comment|/* # times vn_get called */
name|__uint32_t
name|vn_hold
decl_stmt|;
comment|/* # times vn_hold called */
name|__uint32_t
name|vn_rele
decl_stmt|;
comment|/* # times vn_rele called */
name|__uint32_t
name|vn_reclaim
decl_stmt|;
comment|/* # times vn_reclaim called */
name|__uint32_t
name|vn_remove
decl_stmt|;
comment|/* # times vn_remove called */
name|__uint32_t
name|vn_free
decl_stmt|;
comment|/* # times vn_free called */
define|#
directive|define
name|XFSSTAT_END_BUF
value|(XFSSTAT_END_VNODE_OPS+9)
name|__uint32_t
name|pb_get
decl_stmt|;
name|__uint32_t
name|pb_create
decl_stmt|;
name|__uint32_t
name|pb_get_locked
decl_stmt|;
name|__uint32_t
name|pb_get_locked_waited
decl_stmt|;
name|__uint32_t
name|pb_busy_locked
decl_stmt|;
name|__uint32_t
name|pb_miss_locked
decl_stmt|;
name|__uint32_t
name|pb_page_retries
decl_stmt|;
name|__uint32_t
name|pb_page_found
decl_stmt|;
name|__uint32_t
name|pb_get_read
decl_stmt|;
comment|/* Extra precision counters */
name|__uint64_t
name|xs_xstrat_bytes
decl_stmt|;
name|__uint64_t
name|xs_write_bytes
decl_stmt|;
name|__uint64_t
name|xs_read_bytes
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|xfsstats
name|xfsstats
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|XFS_STATS_INC
parameter_list|(
name|count
parameter_list|)
value|( xfsstats.count++ )
end_define

begin_define
define|#
directive|define
name|XFS_STATS_DEC
parameter_list|(
name|count
parameter_list|)
value|( xfsstats.count-- )
end_define

begin_define
define|#
directive|define
name|XFS_STATS_ADD
parameter_list|(
name|count
parameter_list|,
name|inc
parameter_list|)
value|( xfsstats.count += (inc) )
end_define

begin_function_decl
specifier|extern
name|void
name|xfs_init_procfs
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|xfs_cleanup_procfs
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* !CONFIG_PROC_FS */
end_comment

begin_define
define|#
directive|define
name|XFS_STATS_INC
parameter_list|(
name|count
parameter_list|)
end_define

begin_define
define|#
directive|define
name|XFS_STATS_DEC
parameter_list|(
name|count
parameter_list|)
end_define

begin_define
define|#
directive|define
name|XFS_STATS_ADD
parameter_list|(
name|count
parameter_list|,
name|inc
parameter_list|)
end_define

begin_function
specifier|static
name|__inline
name|void
name|xfs_init_procfs
parameter_list|(
name|void
parameter_list|)
block|{ }
end_function

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_function
specifier|static
name|__inline
name|void
name|xfs_cleanup_procfs
parameter_list|(
name|void
parameter_list|)
block|{ }
end_function

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !CONFIG_PROC_FS */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __XFS_STATS_H__ */
end_comment

end_unit

