begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * wpa_supplicant: TLSv1 client (RFC 2246)  * Copyright (c) 2006, Jouni Malinen<j@w1.fi>  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License version 2 as  * published by the Free Software Foundation.  *  * Alternatively, this software may be distributed under the terms of BSD  * license.  *  * See README and COPYING for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|TLSV1_CLIENT_H
end_ifndef

begin_define
define|#
directive|define
name|TLSV1_CLIENT_H
end_define

begin_struct_decl
struct_decl|struct
name|tlsv1_client
struct_decl|;
end_struct_decl

begin_function_decl
name|int
name|tlsv1_client_global_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|tlsv1_client_global_deinit
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|tlsv1_client
modifier|*
name|tlsv1_client_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|tlsv1_client_deinit
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_established
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_prf
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
specifier|const
name|char
modifier|*
name|label
parameter_list|,
name|int
name|server_random_first
parameter_list|,
name|u8
modifier|*
name|out
parameter_list|,
name|size_t
name|out_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
modifier|*
name|tlsv1_client_handshake
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
specifier|const
name|u8
modifier|*
name|in_data
parameter_list|,
name|size_t
name|in_len
parameter_list|,
name|size_t
modifier|*
name|out_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_encrypt
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
specifier|const
name|u8
modifier|*
name|in_data
parameter_list|,
name|size_t
name|in_len
parameter_list|,
name|u8
modifier|*
name|out_data
parameter_list|,
name|size_t
name|out_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_decrypt
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
specifier|const
name|u8
modifier|*
name|in_data
parameter_list|,
name|size_t
name|in_len
parameter_list|,
name|u8
modifier|*
name|out_data
parameter_list|,
name|size_t
name|out_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_get_cipher
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|buflen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_shutdown
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_resumed
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_hello_ext
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
name|int
name|ext_type
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_get_keys
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
name|struct
name|tls_keys
modifier|*
name|keys
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_set_master_key
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
specifier|const
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_get_keyblock_size
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_set_cipher_list
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
name|u8
modifier|*
name|ciphers
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_set_ca_cert
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
specifier|const
name|char
modifier|*
name|cert
parameter_list|,
specifier|const
name|u8
modifier|*
name|cert_blob
parameter_list|,
name|size_t
name|cert_blob_len
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_set_client_cert
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
specifier|const
name|char
modifier|*
name|cert
parameter_list|,
specifier|const
name|u8
modifier|*
name|cert_blob
parameter_list|,
name|size_t
name|cert_blob_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_set_private_key
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
specifier|const
name|char
modifier|*
name|private_key
parameter_list|,
specifier|const
name|char
modifier|*
name|private_key_passwd
parameter_list|,
specifier|const
name|u8
modifier|*
name|private_key_blob
parameter_list|,
name|size_t
name|private_key_blob_len
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* TLSV1_CLIENT_H */
end_comment

end_unit

