begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2003 Peter Wemm.  * Copyright (c) 1990 The Regents of the University of California.  * All rights reserved.  *  * This code is derived from software contributed to Berkeley by  * William Jolitz.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 4. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	from: @(#)frame.h	5.2 (Berkeley) 1/18/91  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MACHINE_FRAME_H_
end_ifndef

begin_define
define|#
directive|define
name|_MACHINE_FRAME_H_
value|1
end_define

begin_comment
comment|/*  * System stack frames.  */
end_comment

begin_comment
comment|/*  * Exception/Trap Stack Frame  *  * The ordering of this is specifically so that we can take first 6  * the syscall arguments directly from the beginning of the frame.  */
end_comment

begin_struct
struct|struct
name|trapframe
block|{
name|register_t
name|tf_rdi
decl_stmt|;
name|register_t
name|tf_rsi
decl_stmt|;
name|register_t
name|tf_rdx
decl_stmt|;
name|register_t
name|tf_rcx
decl_stmt|;
name|register_t
name|tf_r8
decl_stmt|;
name|register_t
name|tf_r9
decl_stmt|;
name|register_t
name|tf_rax
decl_stmt|;
name|register_t
name|tf_rbx
decl_stmt|;
name|register_t
name|tf_rbp
decl_stmt|;
name|register_t
name|tf_r10
decl_stmt|;
name|register_t
name|tf_r11
decl_stmt|;
name|register_t
name|tf_r12
decl_stmt|;
name|register_t
name|tf_r13
decl_stmt|;
name|register_t
name|tf_r14
decl_stmt|;
name|register_t
name|tf_r15
decl_stmt|;
name|register_t
name|tf_trapno
decl_stmt|;
name|register_t
name|tf_addr
decl_stmt|;
name|register_t
name|tf_flags
decl_stmt|;
comment|/* below portion defined in hardware */
name|register_t
name|tf_err
decl_stmt|;
name|register_t
name|tf_rip
decl_stmt|;
name|register_t
name|tf_cs
decl_stmt|;
name|register_t
name|tf_rflags
decl_stmt|;
name|register_t
name|tf_rsp
decl_stmt|;
name|register_t
name|tf_ss
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Interrupt stack frame */
end_comment

begin_struct
struct|struct
name|intrframe
block|{
name|register_t
name|if_rdi
decl_stmt|;
name|register_t
name|if_rsi
decl_stmt|;
name|register_t
name|if_rdx
decl_stmt|;
name|register_t
name|if_rcx
decl_stmt|;
name|register_t
name|if_r8
decl_stmt|;
name|register_t
name|if_r9
decl_stmt|;
name|register_t
name|if_rax
decl_stmt|;
name|register_t
name|if_rbx
decl_stmt|;
name|register_t
name|if_rbp
decl_stmt|;
name|register_t
name|if_r10
decl_stmt|;
name|register_t
name|if_r11
decl_stmt|;
name|register_t
name|if_r12
decl_stmt|;
name|register_t
name|if_r13
decl_stmt|;
name|register_t
name|if_r14
decl_stmt|;
name|register_t
name|if_r15
decl_stmt|;
name|register_t
label|:
literal|64
expr_stmt|;
comment|/* compat with trap frame - trapno */
name|register_t
label|:
literal|64
expr_stmt|;
comment|/* compat with trap frame - addr */
name|register_t
label|:
literal|64
expr_stmt|;
comment|/* compat with trap frame - flags */
name|register_t
label|:
literal|64
expr_stmt|;
comment|/* compat with trap frame - err */
comment|/* below portion defined in hardware */
name|register_t
name|if_rip
decl_stmt|;
name|register_t
name|if_cs
decl_stmt|;
name|register_t
name|if_rflags
decl_stmt|;
name|register_t
name|if_rsp
decl_stmt|;
name|register_t
name|if_ss
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* frame of clock (same as interrupt frame) */
end_comment

begin_struct
struct|struct
name|clockframe
block|{
name|register_t
name|cf_rdi
decl_stmt|;
name|register_t
name|cf_rsi
decl_stmt|;
name|register_t
name|cf_rdx
decl_stmt|;
name|register_t
name|cf_rcx
decl_stmt|;
name|register_t
name|cf_r8
decl_stmt|;
name|register_t
name|cf_r9
decl_stmt|;
name|register_t
name|cf_rax
decl_stmt|;
name|register_t
name|cf_rbx
decl_stmt|;
name|register_t
name|cf_rbp
decl_stmt|;
name|register_t
name|cf_r10
decl_stmt|;
name|register_t
name|cf_r11
decl_stmt|;
name|register_t
name|cf_r12
decl_stmt|;
name|register_t
name|cf_r13
decl_stmt|;
name|register_t
name|cf_r14
decl_stmt|;
name|register_t
name|cf_r15
decl_stmt|;
name|register_t
label|:
literal|64
expr_stmt|;
comment|/* compat with trap frame - trapno */
name|register_t
label|:
literal|64
expr_stmt|;
comment|/* compat with trap frame - addr */
name|register_t
label|:
literal|64
expr_stmt|;
comment|/* compat with trap frame - flags */
name|register_t
label|:
literal|64
expr_stmt|;
comment|/* compat with trap frame - err */
comment|/* below portion defined in hardware */
name|register_t
name|cf_rip
decl_stmt|;
name|register_t
name|cf_cs
decl_stmt|;
name|register_t
name|cf_rflags
decl_stmt|;
name|register_t
name|cf_rsp
decl_stmt|;
name|register_t
name|cf_ss
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|kdb_trap
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|,
name|struct
name|trapframe
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _MACHINE_FRAME_H_ */
end_comment

end_unit

