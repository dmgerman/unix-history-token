begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2012 Intel Corporation  * Copyright (c) 2009 Marcel Moolenaar  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MACHINE_BUS_H_
end_ifndef

begin_define
define|#
directive|define
name|_MACHINE_BUS_H_
end_define

begin_include
include|#
directive|include
file|<sys/systm.h>
end_include

begin_include
include|#
directive|include
file|<x86/bus.h>
end_include

begin_define
define|#
directive|define
name|KASSERT_BUS_SPACE_MEM_ONLY
parameter_list|(
name|tag
parameter_list|)
define|\
value|KASSERT((tag) == X86_BUS_SPACE_MEM,                 \ 	    ("%s: can only handle mem space", __func__))
end_define

begin_function
specifier|static
name|__inline
name|uint64_t
name|bus_space_read_8
parameter_list|(
name|bus_space_tag_t
name|tag
parameter_list|,
name|bus_space_handle_t
name|bsh
parameter_list|,
name|bus_size_t
name|ofs
parameter_list|)
block|{
name|KASSERT_BUS_SPACE_MEM_ONLY
argument_list|(
name|tag
argument_list|)
expr_stmt|;
return|return
operator|(
operator|*
operator|(
specifier|volatile
name|uint64_t
operator|*
operator|)
operator|(
name|bsh
operator|+
name|ofs
operator|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|bus_space_write_8
parameter_list|(
name|bus_space_tag_t
name|tag
parameter_list|,
name|bus_space_handle_t
name|bsh
parameter_list|,
name|bus_size_t
name|ofs
parameter_list|,
name|uint64_t
name|val
parameter_list|)
block|{
name|KASSERT_BUS_SPACE_MEM_ONLY
argument_list|(
name|tag
argument_list|)
expr_stmt|;
operator|*
operator|(
specifier|volatile
name|uint64_t
operator|*
operator|)
operator|(
name|bsh
operator|+
name|ofs
operator|)
operator|=
name|val
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|bus_space_read_region_8
parameter_list|(
name|bus_space_tag_t
name|tag
parameter_list|,
name|bus_space_handle_t
name|bsh
parameter_list|,
name|bus_size_t
name|ofs
parameter_list|,
name|uint64_t
modifier|*
name|bufp
parameter_list|,
name|size_t
name|count
parameter_list|)
block|{
specifier|volatile
name|uint64_t
modifier|*
name|bsp
decl_stmt|;
name|KASSERT_BUS_SPACE_MEM_ONLY
argument_list|(
name|tag
argument_list|)
expr_stmt|;
name|bsp
operator|=
operator|(
name|void
operator|*
operator|)
operator|(
name|bsh
operator|+
name|ofs
operator|)
expr_stmt|;
while|while
condition|(
name|count
operator|--
operator|>
literal|0
condition|)
operator|*
name|bufp
operator|++
operator|=
operator|*
name|bsp
operator|++
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|bus_space_write_region_8
parameter_list|(
name|bus_space_tag_t
name|tag
parameter_list|,
name|bus_space_handle_t
name|bsh
parameter_list|,
name|bus_size_t
name|ofs
parameter_list|,
name|uint64_t
specifier|const
modifier|*
name|bufp
parameter_list|,
name|size_t
name|count
parameter_list|)
block|{
specifier|volatile
name|uint64_t
modifier|*
name|bsp
decl_stmt|;
name|KASSERT_BUS_SPACE_MEM_ONLY
argument_list|(
name|tag
argument_list|)
expr_stmt|;
name|bsp
operator|=
operator|(
name|void
operator|*
operator|)
operator|(
name|bsh
operator|+
name|ofs
operator|)
expr_stmt|;
while|while
condition|(
name|count
operator|--
operator|>
literal|0
condition|)
operator|*
name|bsp
operator|++
operator|=
operator|*
name|bufp
operator|++
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|bus_space_set_region_8
parameter_list|(
name|bus_space_tag_t
name|tag
parameter_list|,
name|bus_space_handle_t
name|bsh
parameter_list|,
name|bus_size_t
name|ofs
parameter_list|,
name|uint64_t
name|val
parameter_list|,
name|size_t
name|count
parameter_list|)
block|{
specifier|volatile
name|uint64_t
modifier|*
name|bsp
decl_stmt|;
name|KASSERT_BUS_SPACE_MEM_ONLY
argument_list|(
name|tag
argument_list|)
expr_stmt|;
name|bsp
operator|=
operator|(
name|void
operator|*
operator|)
operator|(
name|bsh
operator|+
name|ofs
operator|)
expr_stmt|;
while|while
condition|(
name|count
operator|--
operator|>
literal|0
condition|)
operator|*
name|bsp
operator|++
operator|=
name|val
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|bus_space_copy_region_8
parameter_list|(
name|bus_space_tag_t
name|tag
parameter_list|,
name|bus_space_handle_t
name|sbsh
parameter_list|,
name|bus_size_t
name|sofs
parameter_list|,
name|bus_space_handle_t
name|dbsh
parameter_list|,
name|bus_size_t
name|dofs
parameter_list|,
name|size_t
name|count
parameter_list|)
block|{
specifier|volatile
name|uint64_t
modifier|*
name|dst
decl_stmt|,
modifier|*
name|src
decl_stmt|;
name|KASSERT_BUS_SPACE_MEM_ONLY
argument_list|(
name|tag
argument_list|)
expr_stmt|;
name|src
operator|=
operator|(
name|void
operator|*
operator|)
operator|(
name|sbsh
operator|+
name|sofs
operator|)
expr_stmt|;
name|dst
operator|=
operator|(
name|void
operator|*
operator|)
operator|(
name|dbsh
operator|+
name|dofs
operator|)
expr_stmt|;
if|if
condition|(
name|src
operator|<
name|dst
condition|)
block|{
name|src
operator|+=
name|count
operator|-
literal|1
expr_stmt|;
name|dst
operator|+=
name|count
operator|-
literal|1
expr_stmt|;
while|while
condition|(
name|count
operator|--
operator|>
literal|0
condition|)
operator|*
name|dst
operator|--
operator|=
operator|*
name|src
operator|--
expr_stmt|;
block|}
else|else
block|{
while|while
condition|(
name|count
operator|--
operator|>
literal|0
condition|)
operator|*
name|dst
operator|++
operator|=
operator|*
name|src
operator|++
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|bus_space_read_multi_8
parameter_list|(
name|bus_space_tag_t
name|tag
parameter_list|,
name|bus_space_handle_t
name|bsh
parameter_list|,
name|bus_size_t
name|ofs
parameter_list|,
name|uint64_t
modifier|*
name|bufp
parameter_list|,
name|size_t
name|count
parameter_list|)
block|{
name|KASSERT_BUS_SPACE_MEM_ONLY
argument_list|(
name|tag
argument_list|)
expr_stmt|;
while|while
condition|(
name|count
operator|--
operator|>
literal|0
condition|)
operator|*
name|bufp
operator|++
operator|=
operator|*
operator|(
specifier|volatile
name|uint64_t
operator|*
operator|)
operator|(
name|bsh
operator|+
name|ofs
operator|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|bus_space_write_multi_8
parameter_list|(
name|bus_space_tag_t
name|tag
parameter_list|,
name|bus_space_handle_t
name|bsh
parameter_list|,
name|bus_size_t
name|ofs
parameter_list|,
name|uint64_t
specifier|const
modifier|*
name|bufp
parameter_list|,
name|size_t
name|count
parameter_list|)
block|{
name|KASSERT_BUS_SPACE_MEM_ONLY
argument_list|(
name|tag
argument_list|)
expr_stmt|;
while|while
condition|(
name|count
operator|--
operator|>
literal|0
condition|)
operator|*
operator|(
specifier|volatile
name|uint64_t
operator|*
operator|)
operator|(
name|bsh
operator|+
name|ofs
operator|)
operator|=
operator|*
name|bufp
operator|++
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|bus_space_set_multi_8
parameter_list|(
name|bus_space_tag_t
name|tag
parameter_list|,
name|bus_space_handle_t
name|bsh
parameter_list|,
name|bus_size_t
name|ofs
parameter_list|,
name|uint64_t
name|val
parameter_list|,
name|size_t
name|count
parameter_list|)
block|{
name|KASSERT_BUS_SPACE_MEM_ONLY
argument_list|(
name|tag
argument_list|)
expr_stmt|;
while|while
condition|(
name|count
operator|--
operator|>
literal|0
condition|)
operator|*
operator|(
specifier|volatile
name|uint64_t
operator|*
operator|)
operator|(
name|bsh
operator|+
name|ofs
operator|)
operator|=
name|val
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*_MACHINE_BUS_H_*/
end_comment

end_unit

