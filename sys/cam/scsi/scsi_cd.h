begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2000 Kenneth D. Merry  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions, and the following disclaimer,  *    without modification, immediately at the beginning of the file.  * 2. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  */
end_comment

begin_comment
comment|/*  * Written by Julian Elischer (julian@tfs.com)  * for TRW Financial Systems.  *  * TRW Financial Systems, in accordance with their agreement with Carnegie  * Mellon University, makes this software available to CMU to distribute  * or use in any manner that they see fit as long as this message is kept with  * the software. For this reason TFS also grants any other persons or  * organisations permission to use or modify this software.  *  * TFS supplies this software to be publicly redistributed  * on the understanding that TFS is not responsible for the correct  * functioning of this software in any circumstances.  *  * Ported to run under 386BSD by Julian Elischer (julian@tfs.com) Sept 1992  *  *	from: scsi_cd.h,v 1.10 1997/02/22 09:44:28 peter Exp $  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SCSI_SCSI_CD_H
end_ifndef

begin_define
define|#
directive|define
name|_SCSI_SCSI_CD_H
value|1
end_define

begin_comment
comment|/*  *	Define two bits always in the same place in byte 2 (flag byte)  */
end_comment

begin_define
define|#
directive|define
name|CD_RELADDR
value|0x01
end_define

begin_define
define|#
directive|define
name|CD_MSF
value|0x02
end_define

begin_comment
comment|/*  * SCSI command format  */
end_comment

begin_struct
struct|struct
name|scsi_pause
block|{
name|u_int8_t
name|op_code
decl_stmt|;
name|u_int8_t
name|byte2
decl_stmt|;
name|u_int8_t
name|unused
index|[
literal|6
index|]
decl_stmt|;
name|u_int8_t
name|resume
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|PA_PAUSE
value|1
end_define

begin_define
define|#
directive|define
name|PA_RESUME
value|0
end_define

begin_struct
struct|struct
name|scsi_play_msf
block|{
name|u_int8_t
name|op_code
decl_stmt|;
name|u_int8_t
name|byte2
decl_stmt|;
name|u_int8_t
name|unused
decl_stmt|;
name|u_int8_t
name|start_m
decl_stmt|;
name|u_int8_t
name|start_s
decl_stmt|;
name|u_int8_t
name|start_f
decl_stmt|;
name|u_int8_t
name|end_m
decl_stmt|;
name|u_int8_t
name|end_s
decl_stmt|;
name|u_int8_t
name|end_f
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_play_track
block|{
name|u_int8_t
name|op_code
decl_stmt|;
name|u_int8_t
name|byte2
decl_stmt|;
name|u_int8_t
name|unused
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|start_track
decl_stmt|;
name|u_int8_t
name|start_index
decl_stmt|;
name|u_int8_t
name|unused1
decl_stmt|;
name|u_int8_t
name|end_track
decl_stmt|;
name|u_int8_t
name|end_index
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_play_10
block|{
name|u_int8_t
name|op_code
decl_stmt|;
name|u_int8_t
name|byte2
decl_stmt|;
name|u_int8_t
name|blk_addr
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|unused
decl_stmt|;
name|u_int8_t
name|xfer_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_play_12
block|{
name|u_int8_t
name|op_code
decl_stmt|;
name|u_int8_t
name|byte2
decl_stmt|;
comment|/* same as above */
name|u_int8_t
name|blk_addr
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|xfer_len
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|unused
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_play_rel_12
block|{
name|u_int8_t
name|op_code
decl_stmt|;
name|u_int8_t
name|byte2
decl_stmt|;
comment|/* same as above */
name|u_int8_t
name|blk_addr
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|xfer_len
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|track
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_header
block|{
name|u_int8_t
name|op_code
decl_stmt|;
name|u_int8_t
name|byte2
decl_stmt|;
name|u_int8_t
name|blk_addr
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|unused
decl_stmt|;
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_subchannel
block|{
name|u_int8_t
name|op_code
decl_stmt|;
name|u_int8_t
name|byte1
decl_stmt|;
name|u_int8_t
name|byte2
decl_stmt|;
define|#
directive|define
name|SRS_SUBQ
value|0x40
name|u_int8_t
name|subchan_format
decl_stmt|;
name|u_int8_t
name|unused
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|track
decl_stmt|;
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_toc
block|{
name|u_int8_t
name|op_code
decl_stmt|;
name|u_int8_t
name|byte2
decl_stmt|;
name|u_int8_t
name|unused
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|from_track
decl_stmt|;
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_struct
struct|struct
name|scsi_read_cd_capacity
block|{
name|u_int8_t
name|op_code
decl_stmt|;
name|u_int8_t
name|byte2
decl_stmt|;
name|u_int8_t
name|addr_3
decl_stmt|;
comment|/* Most Significant */
name|u_int8_t
name|addr_2
decl_stmt|;
name|u_int8_t
name|addr_1
decl_stmt|;
name|u_int8_t
name|addr_0
decl_stmt|;
comment|/* Least Significant */
name|u_int8_t
name|unused
index|[
literal|3
index|]
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_set_speed
block|{
name|u_int8_t
name|opcode
decl_stmt|;
name|u_int8_t
name|byte2
decl_stmt|;
name|u_int8_t
name|readspeed
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|writespeed
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|5
index|]
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_report_key
block|{
name|u_int8_t
name|opcode
decl_stmt|;
name|u_int8_t
name|reserved0
decl_stmt|;
name|u_int8_t
name|lba
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|reserved1
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|alloc_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|agid_keyformat
decl_stmt|;
define|#
directive|define
name|RK_KF_AGID_MASK
value|0xc0
define|#
directive|define
name|RK_KF_AGID_SHIFT
value|6
define|#
directive|define
name|RK_KF_KEYFORMAT_MASK
value|0x3f
define|#
directive|define
name|RK_KF_AGID
value|0x00
define|#
directive|define
name|RK_KF_CHALLENGE
value|0x01
define|#
directive|define
name|RF_KF_KEY1
value|0x02
define|#
directive|define
name|RK_KF_KEY2
value|0x03
define|#
directive|define
name|RF_KF_TITLE
value|0x04
define|#
directive|define
name|RF_KF_ASF
value|0x05
define|#
directive|define
name|RK_KF_RPC_SET
value|0x06
define|#
directive|define
name|RF_KF_RPC_REPORT
value|0x08
define|#
directive|define
name|RF_KF_INV_AGID
value|0x3f
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * See the report key structure for key format and AGID definitions.  */
end_comment

begin_struct
struct|struct
name|scsi_send_key
block|{
name|u_int8_t
name|opcode
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|7
index|]
decl_stmt|;
name|u_int8_t
name|param_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|agid_keyformat
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_structure
block|{
name|u_int8_t
name|opcode
decl_stmt|;
name|u_int8_t
name|reserved
decl_stmt|;
name|u_int8_t
name|address
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|layer_number
decl_stmt|;
name|u_int8_t
name|format
decl_stmt|;
define|#
directive|define
name|RDS_FORMAT_PHYSICAL
value|0x00
define|#
directive|define
name|RDS_FORMAT_COPYRIGHT
value|0x01
define|#
directive|define
name|RDS_FORMAT_DISC_KEY
value|0x02
define|#
directive|define
name|RDS_FORMAT_BCA
value|0x03
define|#
directive|define
name|RDS_FORMAT_MANUFACTURER
value|0x04
define|#
directive|define
name|RDS_FORMAT_CMGS_CPM
value|0x05
define|#
directive|define
name|RDS_FORMAT_PROT_DISCID
value|0x06
define|#
directive|define
name|RDS_FORMAT_DISC_KEY_BLOCK
value|0x07
define|#
directive|define
name|RDS_FORMAT_DDS
value|0x08
define|#
directive|define
name|RDS_FORMAT_DVDRAM_MEDIA_STAT
value|0x09
define|#
directive|define
name|RDS_FORMAT_SPARE_AREA
value|0x0a
define|#
directive|define
name|RDS_FORMAT_RMD_BORDEROUT
value|0x0c
define|#
directive|define
name|RDS_FORMAT_RMD
value|0x0d
define|#
directive|define
name|RDS_FORMAT_LEADIN
value|0x0e
define|#
directive|define
name|RDS_FORMAT_DISC_ID
value|0x0f
define|#
directive|define
name|RDS_FORMAT_DCB
value|0x30
define|#
directive|define
name|RDS_FORMAT_WRITE_PROT
value|0xc0
define|#
directive|define
name|RDS_FORMAT_STRUCTURE_LIST
value|0xff
name|u_int8_t
name|alloc_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|agid
decl_stmt|;
name|u_int8_t
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Opcodes  */
end_comment

begin_define
define|#
directive|define
name|READ_CD_CAPACITY
value|0x25
end_define

begin_comment
comment|/* slightly different from disk */
end_comment

begin_define
define|#
directive|define
name|READ_SUBCHANNEL
value|0x42
end_define

begin_comment
comment|/* cdrom read Subchannel */
end_comment

begin_define
define|#
directive|define
name|READ_TOC
value|0x43
end_define

begin_comment
comment|/* cdrom read TOC */
end_comment

begin_define
define|#
directive|define
name|READ_HEADER
value|0x44
end_define

begin_comment
comment|/* cdrom read header */
end_comment

begin_define
define|#
directive|define
name|PLAY_10
value|0x45
end_define

begin_comment
comment|/* cdrom play  'play audio' mode */
end_comment

begin_define
define|#
directive|define
name|PLAY_MSF
value|0x47
end_define

begin_comment
comment|/* cdrom play Min,Sec,Frames mode */
end_comment

begin_define
define|#
directive|define
name|PLAY_TRACK
value|0x48
end_define

begin_comment
comment|/* cdrom play track/index mode */
end_comment

begin_define
define|#
directive|define
name|PLAY_TRACK_REL
value|0x49
end_define

begin_comment
comment|/* cdrom play track/index mode */
end_comment

begin_define
define|#
directive|define
name|PAUSE
value|0x4b
end_define

begin_comment
comment|/* cdrom pause in 'play audio' mode */
end_comment

begin_define
define|#
directive|define
name|SEND_KEY
value|0xa3
end_define

begin_comment
comment|/* dvd send key command */
end_comment

begin_define
define|#
directive|define
name|REPORT_KEY
value|0xa4
end_define

begin_comment
comment|/* dvd report key command */
end_comment

begin_define
define|#
directive|define
name|PLAY_12
value|0xa5
end_define

begin_comment
comment|/* cdrom pause in 'play audio' mode */
end_comment

begin_define
define|#
directive|define
name|PLAY_TRACK_REL_BIG
value|0xa9
end_define

begin_comment
comment|/* cdrom play track/index mode */
end_comment

begin_define
define|#
directive|define
name|READ_DVD_STRUCTURE
value|0xad
end_define

begin_comment
comment|/* read dvd structure */
end_comment

begin_define
define|#
directive|define
name|SET_CD_SPEED
value|0xbb
end_define

begin_comment
comment|/* set c/dvd speed */
end_comment

begin_struct
struct|struct
name|scsi_report_key_data_header
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_report_key_data_agid
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|5
index|]
decl_stmt|;
name|u_int8_t
name|agid
decl_stmt|;
define|#
directive|define
name|RKD_AGID_MASK
value|0xc0
define|#
directive|define
name|RKD_AGID_SHIFT
value|6
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_report_key_data_challenge
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved0
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|challenge_key
index|[
literal|10
index|]
decl_stmt|;
name|u_int8_t
name|reserved1
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_report_key_data_key1_key2
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved0
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|key1
index|[
literal|5
index|]
decl_stmt|;
name|u_int8_t
name|reserved1
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_report_key_data_title
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved0
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|byte0
decl_stmt|;
define|#
directive|define
name|RKD_TITLE_CPM
value|0x80
define|#
directive|define
name|RKD_TITLE_CPM_SHIFT
value|7
define|#
directive|define
name|RKD_TITLE_CP_SEC
value|0x40
define|#
directive|define
name|RKD_TITLE_CP_SEC_SHIFT
value|6
define|#
directive|define
name|RKD_TITLE_CMGS_MASK
value|0x30
define|#
directive|define
name|RKD_TITLE_CMGS_SHIFT
value|4
define|#
directive|define
name|RKD_TITLE_CMGS_NO_RST
value|0x00
define|#
directive|define
name|RKD_TITLE_CMGS_RSVD
value|0x10
define|#
directive|define
name|RKD_TITLE_CMGS_1_GEN
value|0x20
define|#
directive|define
name|RKD_TITLE_CMGS_NO_COPY
value|0x30
name|u_int8_t
name|title_key
index|[
literal|5
index|]
decl_stmt|;
name|u_int8_t
name|reserved1
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_report_key_data_asf
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|5
index|]
decl_stmt|;
name|u_int8_t
name|success
decl_stmt|;
define|#
directive|define
name|RKD_ASF_SUCCESS
value|0x01
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_report_key_data_rpc
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|rpc_scheme0
decl_stmt|;
define|#
directive|define
name|RKD_RPC_SCHEME_UNKNOWN
value|0x00
define|#
directive|define
name|RKD_RPC_SCHEME_PHASE_II
value|0x01
name|u_int8_t
name|reserved0
decl_stmt|;
name|u_int8_t
name|byte4
decl_stmt|;
define|#
directive|define
name|RKD_RPC_TYPE_MASK
value|0xC0
define|#
directive|define
name|RKD_RPC_TYPE_SHIFT
value|6
define|#
directive|define
name|RKD_RPC_TYPE_NONE
value|0x00
define|#
directive|define
name|RKD_RPC_TYPE_SET
value|0x40
define|#
directive|define
name|RKD_RPC_TYPE_LAST_CHANCE
value|0x80
define|#
directive|define
name|RKD_RPC_TYPE_PERM
value|0xC0
define|#
directive|define
name|RKD_RPC_VENDOR_RESET_MASK
value|0x38
define|#
directive|define
name|RKD_RPC_VENDOR_RESET_SHIFT
value|3
define|#
directive|define
name|RKD_RPC_USER_RESET_MASK
value|0x07
define|#
directive|define
name|RKD_RPC_USER_RESET_SHIFT
value|0
name|u_int8_t
name|region_mask
decl_stmt|;
name|u_int8_t
name|rpc_scheme1
decl_stmt|;
name|u_int8_t
name|reserved1
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_send_key_data_rpc
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved0
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|region_code
decl_stmt|;
name|u_int8_t
name|reserved1
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Common header for the return data from the READ DVD STRUCTURE command.  */
end_comment

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_header
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_layer_desc
block|{
name|u_int8_t
name|book_type_version
decl_stmt|;
define|#
directive|define
name|RDSD_BOOK_TYPE_DVD_ROM
value|0x00
define|#
directive|define
name|RDSD_BOOK_TYPE_DVD_RAM
value|0x10
define|#
directive|define
name|RDSD_BOOK_TYPE_DVD_R
value|0x20
define|#
directive|define
name|RDSD_BOOK_TYPE_DVD_RW
value|0x30
define|#
directive|define
name|RDSD_BOOK_TYPE_DVD_PRW
value|0x90
define|#
directive|define
name|RDSD_BOOK_TYPE_MASK
value|0xf0
define|#
directive|define
name|RDSD_BOOK_TYPE_SHIFT
value|4
define|#
directive|define
name|RDSD_BOOK_VERSION_MASK
value|0x0f
comment|/* 	 * The lower 4 bits of this field is referred to as the "minimum 	 * rate" field in MMC2, and the "maximum rate" field in MMC3.  Ugh. 	 */
name|u_int8_t
name|disc_size_max_rate
decl_stmt|;
define|#
directive|define
name|RDSD_DISC_SIZE_120MM
value|0x00
define|#
directive|define
name|RDSD_DISC_SIZE_80MM
value|0x10
define|#
directive|define
name|RDSD_DISC_SIZE_MASK
value|0xf0
define|#
directive|define
name|RDSD_DISC_SIZE_SHIFT
value|4
define|#
directive|define
name|RDSD_MAX_RATE_0252
value|0x00
define|#
directive|define
name|RDSD_MAX_RATE_0504
value|0x01
define|#
directive|define
name|RDSD_MAX_RATE_1008
value|0x02
define|#
directive|define
name|RDSD_MAX_RATE_NOT_SPEC
value|0x0f
define|#
directive|define
name|RDSD_MAX_RATE_MASK
value|0x0f
name|u_int8_t
name|layer_info
decl_stmt|;
define|#
directive|define
name|RDSD_NUM_LAYERS_MASK
value|0x60
define|#
directive|define
name|RDSD_NUM_LAYERS_SHIFT
value|5
define|#
directive|define
name|RDSD_NL_ONE_LAYER
value|0x00
define|#
directive|define
name|RDSD_NL_TWO_LAYERS
value|0x20
define|#
directive|define
name|RDSD_TRACK_PATH_MASK
value|0x10
define|#
directive|define
name|RDSD_TRACK_PATH_SHIFT
value|4
define|#
directive|define
name|RDSD_TP_PTP
value|0x00
define|#
directive|define
name|RDSD_TP_OTP
value|0x10
define|#
directive|define
name|RDSD_LAYER_TYPE_RO
value|0x01
define|#
directive|define
name|RDSD_LAYER_TYPE_RECORD
value|0x02
define|#
directive|define
name|RDSD_LAYER_TYPE_RW
value|0x04
define|#
directive|define
name|RDSD_LAYER_TYPE_MASK
value|0x0f
name|u_int8_t
name|density
decl_stmt|;
define|#
directive|define
name|RDSD_LIN_DENSITY_0267
value|0x00
define|#
directive|define
name|RDSD_LIN_DENSITY_0293
value|0x10
define|#
directive|define
name|RDSD_LIN_DENSITY_0409_0435
value|0x20
define|#
directive|define
name|RDSD_LIN_DENSITY_0280_0291
value|0x40
comment|/* XXX MMC2 uses 0.176um/bit instead of 0.353 as in MMC3 */
define|#
directive|define
name|RDSD_LIN_DENSITY_0353
value|0x80
define|#
directive|define
name|RDSD_LIN_DENSITY_MASK
value|0xf0
define|#
directive|define
name|RDSD_LIN_DENSITY_SHIFT
value|4
define|#
directive|define
name|RDSD_TRACK_DENSITY_074
value|0x00
define|#
directive|define
name|RDSD_TRACK_DENSITY_080
value|0x01
define|#
directive|define
name|RDSD_TRACK_DENSITY_0615
value|0x02
define|#
directive|define
name|RDSD_TRACK_DENSITY_MASK
value|0x0f
name|u_int8_t
name|zeros0
decl_stmt|;
name|u_int8_t
name|main_data_start
index|[
literal|3
index|]
decl_stmt|;
define|#
directive|define
name|RDSD_MAIN_DATA_START_DVD_RO
value|0x30000
define|#
directive|define
name|RDSD_MAIN_DATA_START_DVD_RW
value|0x31000
name|u_int8_t
name|zeros1
decl_stmt|;
name|u_int8_t
name|main_data_end
index|[
literal|3
index|]
decl_stmt|;
name|u_int8_t
name|zeros2
decl_stmt|;
name|u_int8_t
name|end_sector_layer0
index|[
literal|3
index|]
decl_stmt|;
name|u_int8_t
name|bca
decl_stmt|;
define|#
directive|define
name|RDSD_BCA
value|0x80
define|#
directive|define
name|RDSD_BCA_MASK
value|0x80
define|#
directive|define
name|RDSD_BCA_SHIFT
value|7
name|u_int8_t
name|media_specific
index|[
literal|2031
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_physical
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|struct
name|scsi_read_dvd_struct_data_layer_desc
name|layer_desc
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_copyright
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved0
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|cps_type
decl_stmt|;
define|#
directive|define
name|RDSD_CPS_NOT_PRESENT
value|0x00
define|#
directive|define
name|RDSD_CPS_DATA_EXISTS
value|0x01
name|u_int8_t
name|region_info
decl_stmt|;
name|u_int8_t
name|reserved1
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_disc_key
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|disc_key
index|[
literal|2048
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_bca
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|bca_info
index|[
literal|188
index|]
decl_stmt|;
comment|/* XXX 12-188 bytes */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_manufacturer
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|manuf_info
index|[
literal|2048
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_copy_manage
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved0
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|byte4
decl_stmt|;
define|#
directive|define
name|RDSD_CPM_NO_COPYRIGHT
value|0x00
define|#
directive|define
name|RDSD_CPM_HAS_COPYRIGHT
value|0x80
define|#
directive|define
name|RDSD_CPM_MASK
value|0x80
define|#
directive|define
name|RDSD_CMGS_COPY_ALLOWED
value|0x00
define|#
directive|define
name|RDSD_CMGS_ONE_COPY
value|0x20
define|#
directive|define
name|RDSD_CMGS_NO_COPIES
value|0x30
define|#
directive|define
name|RDSD_CMGS_MASK
value|0x30
name|u_int8_t
name|reserved1
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_prot_discid
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|prot_discid_data
index|[
literal|16
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_disc_key_blk
block|{
comment|/* 	 * Length is 0x6ffe == 28670 for CPRM, 0x3002 == 12990 for CSS2. 	 */
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
decl_stmt|;
name|u_int8_t
name|total_packs
decl_stmt|;
name|u_int8_t
name|disc_key_pack_data
index|[
literal|28668
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_dds
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|dds_info
index|[
literal|2048
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_medium_status
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved0
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|byte4
decl_stmt|;
define|#
directive|define
name|RDSD_MS_CARTRIDGE
value|0x80
define|#
directive|define
name|RDSD_MS_OUT
value|0x40
define|#
directive|define
name|RDSD_MS_MSWI
value|0x08
define|#
directive|define
name|RDSD_MS_CWP
value|0x04
define|#
directive|define
name|RDSD_MS_PWP
value|0x02
name|u_int8_t
name|disc_type_id
decl_stmt|;
define|#
directive|define
name|RDSD_DT_NEED_CARTRIDGE
value|0x00
define|#
directive|define
name|RDSD_DT_NO_CART_NEEDED
value|0x01
name|u_int8_t
name|reserved1
decl_stmt|;
name|u_int8_t
name|ram_swi_info
decl_stmt|;
define|#
directive|define
name|RDSD_SWI_NO_BARE
value|0x01
define|#
directive|define
name|RDSD_SWI_UNSPEC
value|0xff
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_spare_area
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|unused_primary
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|unused_supl
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|allocated_supl
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_rmd_borderout
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|rmd
index|[
literal|30720
index|]
decl_stmt|;
comment|/* maximum is 30720 bytes */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_rmd
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|last_sector_num
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|rmd_bytes
index|[
literal|32768
index|]
decl_stmt|;
comment|/* This is the maximum */
block|}
struct|;
end_struct

begin_comment
comment|/*  * XXX KDM this is the MMC2 version of the structure.  * The variable positions have changed (in a semi-conflicting way) in the  * MMC3 spec, although the overall length of the structure is the same.  */
end_comment

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_leadin
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved0
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|field_id_1
decl_stmt|;
name|u_int8_t
name|app_code
decl_stmt|;
name|u_int8_t
name|disc_physical_data
decl_stmt|;
name|u_int8_t
name|last_addr
index|[
literal|3
index|]
decl_stmt|;
name|u_int8_t
name|reserved1
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|field_id_2
decl_stmt|;
name|u_int8_t
name|rwp
decl_stmt|;
name|u_int8_t
name|rwp_wavelength
decl_stmt|;
name|u_int8_t
name|optimum_write_strategy
decl_stmt|;
name|u_int8_t
name|reserved2
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|field_id_3
decl_stmt|;
name|u_int8_t
name|manuf_id_17_12
index|[
literal|6
index|]
decl_stmt|;
name|u_int8_t
name|reserved3
decl_stmt|;
name|u_int8_t
name|field_id_4
decl_stmt|;
name|u_int8_t
name|manuf_id_11_6
index|[
literal|6
index|]
decl_stmt|;
name|u_int8_t
name|reserved4
decl_stmt|;
name|u_int8_t
name|field_id_5
decl_stmt|;
name|u_int8_t
name|manuf_id_5_0
index|[
literal|6
index|]
decl_stmt|;
name|u_int8_t
name|reserved5
index|[
literal|25
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_disc_id
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|random_num
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|year
index|[
literal|4
index|]
decl_stmt|;
name|u_int8_t
name|month
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|day
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|hour
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|minute
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|second
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_generic_dcb
block|{
name|u_int8_t
name|content_desc
index|[
literal|4
index|]
decl_stmt|;
define|#
directive|define
name|SCSI_RCB
name|u_int8_t
name|unknown_desc_actions
index|[
literal|4
index|]
decl_stmt|;
define|#
directive|define
name|RDSD_ACTION_RECORDING
value|0x0001
define|#
directive|define
name|RDSD_ACTION_READING
value|0x0002
define|#
directive|define
name|RDSD_ACTION_FORMAT
value|0x0004
define|#
directive|define
name|RDSD_ACTION_MODIFY_DCB
value|0x0008
name|u_int8_t
name|vendor_id
index|[
literal|32
index|]
decl_stmt|;
name|u_int8_t
name|dcb_data
index|[
literal|32728
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_dvd_struct_data_dcb
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|struct
name|scsi_read_dvd_struct_data_generic_dcb
name|dcb
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|read_dvd_struct_write_prot
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved0
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|write_prot_status
decl_stmt|;
define|#
directive|define
name|RDSD_WPS_MSWI
value|0x08
define|#
directive|define
name|RDSD_WPS_CWP
value|0x04
define|#
directive|define
name|RDSD_WPS_PWP
value|0x02
define|#
directive|define
name|RDSD_WPS_SWPP
value|0x01
name|u_int8_t
name|reserved
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|read_dvd_struct_list_entry
block|{
name|u_int8_t
name|format_code
decl_stmt|;
name|u_int8_t
name|sds_rds
decl_stmt|;
define|#
directive|define
name|RDSD_SDS_NOT_WRITEABLE
value|0x00
define|#
directive|define
name|RDSD_SDS_WRITEABLE
value|0x80
define|#
directive|define
name|RDSD_SDS_MASK
value|0x80
define|#
directive|define
name|RDSD_RDS_NOT_READABLE
value|0x00
define|#
directive|define
name|RDSD_RDS_READABLE
value|0x40
define|#
directive|define
name|RDSD_RDS_MASK
value|0x40
name|u_int8_t
name|struct_len
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|read_dvd_struct_data_list
block|{
name|u_int8_t
name|data_len
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|struct
name|read_dvd_struct_list_entry
name|entries
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_read_cd_cap_data
block|{
name|u_int8_t
name|addr_3
decl_stmt|;
comment|/* Most significant */
name|u_int8_t
name|addr_2
decl_stmt|;
name|u_int8_t
name|addr_1
decl_stmt|;
name|u_int8_t
name|addr_0
decl_stmt|;
comment|/* Least significant */
name|u_int8_t
name|length_3
decl_stmt|;
comment|/* Most significant */
name|u_int8_t
name|length_2
decl_stmt|;
name|u_int8_t
name|length_1
decl_stmt|;
name|u_int8_t
name|length_0
decl_stmt|;
comment|/* Least significant */
block|}
struct|;
end_struct

begin_union
union|union
name|cd_pages
block|{
struct|struct
name|audio_page
block|{
name|u_int8_t
name|page_code
decl_stmt|;
define|#
directive|define
name|CD_PAGE_CODE
value|0x3F
define|#
directive|define
name|AUDIO_PAGE
value|0x0e
define|#
directive|define
name|CD_PAGE_PS
value|0x80
name|u_int8_t
name|param_len
decl_stmt|;
name|u_int8_t
name|flags
decl_stmt|;
define|#
directive|define
name|CD_PA_SOTC
value|0x02
define|#
directive|define
name|CD_PA_IMMED
value|0x04
name|u_int8_t
name|unused
index|[
literal|2
index|]
decl_stmt|;
name|u_int8_t
name|format_lba
decl_stmt|;
define|#
directive|define
name|CD_PA_FORMAT_LBA
value|0x0F
define|#
directive|define
name|CD_PA_APR_VALID
value|0x80
name|u_int8_t
name|lb_per_sec
index|[
literal|2
index|]
decl_stmt|;
struct|struct
name|port_control
block|{
name|u_int8_t
name|channels
decl_stmt|;
define|#
directive|define
name|CHANNEL
value|0x0F
define|#
directive|define
name|CHANNEL_0
value|1
define|#
directive|define
name|CHANNEL_1
value|2
define|#
directive|define
name|CHANNEL_2
value|4
define|#
directive|define
name|CHANNEL_3
value|8
define|#
directive|define
name|LEFT_CHANNEL
value|CHANNEL_0
define|#
directive|define
name|RIGHT_CHANNEL
value|CHANNEL_1
name|u_int8_t
name|volume
decl_stmt|;
block|}
name|port
index|[
literal|4
index|]
struct|;
define|#
directive|define
name|LEFT_PORT
value|0
define|#
directive|define
name|RIGHT_PORT
value|1
block|}
name|audio
struct|;
block|}
union|;
end_union

begin_struct
struct|struct
name|cd_mode_data
block|{
name|struct
name|scsi_mode_header_6
name|header
decl_stmt|;
name|struct
name|scsi_mode_blk_desc
name|blk_desc
decl_stmt|;
name|union
name|cd_pages
name|page
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|__BEGIN_DECLS
name|void
name|scsi_report_key
parameter_list|(
name|struct
name|ccb_scsiio
modifier|*
name|csio
parameter_list|,
name|u_int32_t
name|retries
parameter_list|,
name|void
function_decl|(
modifier|*
name|cbfcnp
function_decl|)
parameter_list|(
name|struct
name|cam_periph
modifier|*
parameter_list|,
name|union
name|ccb
modifier|*
parameter_list|)
parameter_list|,
name|u_int8_t
name|tag_action
parameter_list|,
name|u_int32_t
name|lba
parameter_list|,
name|u_int8_t
name|agid
parameter_list|,
name|u_int8_t
name|key_format
parameter_list|,
name|u_int8_t
modifier|*
name|data_ptr
parameter_list|,
name|u_int32_t
name|dxfer_len
parameter_list|,
name|u_int8_t
name|sense_len
parameter_list|,
name|u_int32_t
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|scsi_send_key
parameter_list|(
name|struct
name|ccb_scsiio
modifier|*
name|csio
parameter_list|,
name|u_int32_t
name|retries
parameter_list|,
name|void
function_decl|(
modifier|*
name|cbfcnp
function_decl|)
parameter_list|(
name|struct
name|cam_periph
modifier|*
parameter_list|,
name|union
name|ccb
modifier|*
parameter_list|)
parameter_list|,
name|u_int8_t
name|tag_action
parameter_list|,
name|u_int8_t
name|agid
parameter_list|,
name|u_int8_t
name|key_format
parameter_list|,
name|u_int8_t
modifier|*
name|data_ptr
parameter_list|,
name|u_int32_t
name|dxfer_len
parameter_list|,
name|u_int8_t
name|sense_len
parameter_list|,
name|u_int32_t
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|scsi_read_dvd_structure
parameter_list|(
name|struct
name|ccb_scsiio
modifier|*
name|csio
parameter_list|,
name|u_int32_t
name|retries
parameter_list|,
name|void
function_decl|(
modifier|*
name|cbfcnp
function_decl|)
parameter_list|(
name|struct
name|cam_periph
modifier|*
parameter_list|,
name|union
name|ccb
modifier|*
parameter_list|)
parameter_list|,
name|u_int8_t
name|tag_action
parameter_list|,
name|u_int32_t
name|address
parameter_list|,
name|u_int8_t
name|layer_number
parameter_list|,
name|u_int8_t
name|format
parameter_list|,
name|u_int8_t
name|agid
parameter_list|,
name|u_int8_t
modifier|*
name|data_ptr
parameter_list|,
name|u_int32_t
name|dxfer_len
parameter_list|,
name|u_int8_t
name|sense_len
parameter_list|,
name|u_int32_t
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*_SCSI_SCSI_CD_H*/
end_comment

end_unit

