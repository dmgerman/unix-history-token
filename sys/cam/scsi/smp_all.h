begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2010 Spectra Logic Corporation  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions, and the following disclaimer,  *    without modification.  * 2. Redistributions in binary form must reproduce at minimum a disclaimer  *    substantially similar to the "NO WARRANTY" disclaimer below  *    ("Disclaimer") and any redistribution must be conditioned upon  *    including a substantially similar Disclaimer requirement for further  *    binary redistribution.  *  * NO WARRANTY  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGES.  *  * $Id: //depot/users/kenm/FreeBSD-test/sys/cam/scsi/smp_all.h#4 $  * $FreeBSD$  */
end_comment

begin_comment
comment|/*  * Serial Management Protocol definitions.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SCSI_SMP_ALL_H
end_ifndef

begin_define
define|#
directive|define
name|_SCSI_SMP_ALL_H
value|1
end_define

begin_define
define|#
directive|define
name|SMP_FRAME_TYPE_REQUEST
value|0x40
end_define

begin_define
define|#
directive|define
name|SMP_FRAME_TYPE_RESPONSE
value|0x41
end_define

begin_define
define|#
directive|define
name|SMP_WORD_LEN
value|4
end_define

begin_define
define|#
directive|define
name|SMP_CRC_LEN
value|4
end_define

begin_comment
comment|/*  * SMP Functions (current as of SPL Revision 7)  */
end_comment

begin_comment
comment|/* 0x00 to 0x7f: SMP input functions */
end_comment

begin_comment
comment|/* 0x00 to 0x0f: General SMP input functions */
end_comment

begin_define
define|#
directive|define
name|SMP_FUNC_REPORT_GENERAL
value|0x00
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_REPORT_MANUF_INFO
value|0x01
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_REPORT_SC_STATUS
value|0x03
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_REPORT_ZONE_PERM_TBL
value|0x04
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_REPORT_ZONE_MAN_PWD
value|0x05
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_REPORT_BROADCAST
value|0x06
end_define

begin_comment
comment|/* 0x10 to 0x1f: Phy-based SMP input functions */
end_comment

begin_define
define|#
directive|define
name|SMP_FUNC_DISCOVER
value|0x10
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_REPORT_PHY_ERR_LOG
value|0x11
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_REPORT_PHY_SATA
value|0x12
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_REPORT_ROUTE_INFO
value|0x13
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_REPORT_PHY_EVENT
value|0x14
end_define

begin_comment
comment|/* 0x20 to 0x2f: Descriptor list-based SMP input functions */
end_comment

begin_define
define|#
directive|define
name|SMP_FUNC_DISCOVER_LIST
value|0x20
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_REPORT_PHY_EVENT_LIST
value|0x21
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_REPORT_EXP_RTL
value|0x22
end_define

begin_comment
comment|/* 0x30 to 0x3f: Reserved for SMP input functions */
end_comment

begin_comment
comment|/* 0x40 to 0x7f: Vendor specific */
end_comment

begin_comment
comment|/* 0x80 to 0xff: SMP output functions */
end_comment

begin_comment
comment|/* 0x80 to 0x8f: General SMP output functions */
end_comment

begin_define
define|#
directive|define
name|SMP_FUNC_CONFIG_GENERAL
value|0x80
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_ENABLE_DISABLE_ZONING
value|0x81
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_ZONED_BROADCAST
value|0x85
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_ZONE_LOCK
value|0x86
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_ZONE_ACTIVATE
value|0x87
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_ZONE_UNLOCK
value|0x88
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_CONFIG_ZM_PWD
value|0x89
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_CONFIG_ZONE_PHY_INFO
value|0x8a
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_CONFIG_ZONE_PERM_TBL
value|0x8b
end_define

begin_comment
comment|/* 0x90 to 0x9f: Phy-based SMP output functions */
end_comment

begin_define
define|#
directive|define
name|SMP_FUNC_CONFIG_ROUTE_INFO
value|0x90
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_PHY_CONTROL
value|0x91
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_PHY_TEST_FUNC
value|0x92
end_define

begin_define
define|#
directive|define
name|SMP_FUNC_CONFIG_PHY_EVENT
value|0x93
end_define

begin_comment
comment|/* 0xa0 to 0xbf: Reserved for SMP output functions */
end_comment

begin_comment
comment|/* 0xc0 to 0xff: Vendor specific */
end_comment

begin_comment
comment|/*  * Function Results (current as of SPL Revision 7)  */
end_comment

begin_define
define|#
directive|define
name|SMP_FR_ACCEPTED
value|0x00
end_define

begin_define
define|#
directive|define
name|SMP_FR_UNKNOWN_FUNC
value|0x01
end_define

begin_define
define|#
directive|define
name|SMP_FR_FUNCTION_FAILED
value|0x02
end_define

begin_define
define|#
directive|define
name|SMP_FR_INVALID_REQ_FRAME_LEN
value|0x03
end_define

begin_define
define|#
directive|define
name|SMP_FR_INVALID_EXP_CHG_CNT
value|0x04
end_define

begin_define
define|#
directive|define
name|SMP_FR_BUSY
value|0x05
end_define

begin_define
define|#
directive|define
name|SMP_FR_INCOMPLETE_DESC_LIST
value|0x06
end_define

begin_define
define|#
directive|define
name|SMP_FR_PHY_DOES_NOT_EXIST
value|0x10
end_define

begin_define
define|#
directive|define
name|SMP_FR_INDEX_DOES_NOT_EXIST
value|0x11
end_define

begin_define
define|#
directive|define
name|SMP_FR_PHY_DOES_NOT_SUP_SATA
value|0x12
end_define

begin_define
define|#
directive|define
name|SMP_FR_UNKNOWN_PHY_OP
value|0x13
end_define

begin_define
define|#
directive|define
name|SMP_FR_UNKNOWN_PHY_TEST_FUNC
value|0x14
end_define

begin_define
define|#
directive|define
name|SMP_FR_PHY_TEST_FUNC_INPROG
value|0x15
end_define

begin_define
define|#
directive|define
name|SMP_FR_PHY_VACANT
value|0x16
end_define

begin_define
define|#
directive|define
name|SMP_FR_UNKNOWN_PHY_EVENT_SRC
value|0x17
end_define

begin_define
define|#
directive|define
name|SMP_FR_UNKNOWN_DESC_TYPE
value|0x18
end_define

begin_define
define|#
directive|define
name|SMP_FR_UNKNOWN_PHY_FILTER
value|0x19
end_define

begin_define
define|#
directive|define
name|SMP_FR_AFFILIATION_VIOLATION
value|0x1a
end_define

begin_define
define|#
directive|define
name|SMP_FR_SMP_ZONE_VIOLATION
value|0x20
end_define

begin_define
define|#
directive|define
name|SMP_FR_NO_MGMT_ACCESS_RIGHTS
value|0x21
end_define

begin_define
define|#
directive|define
name|SMP_FR_UNKNOWN_ED_ZONING_VAL
value|0x22
end_define

begin_define
define|#
directive|define
name|SMP_FR_ZONE_LOCK_VIOLATION
value|0x23
end_define

begin_define
define|#
directive|define
name|SMP_FR_NOT_ACTIVATED
value|0x24
end_define

begin_define
define|#
directive|define
name|SMP_FR_ZG_OUT_OF_RANGE
value|0x25
end_define

begin_define
define|#
directive|define
name|SMP_FR_NO_PHYS_PRESENCE
value|0x26
end_define

begin_define
define|#
directive|define
name|SMP_FR_SAVING_NOT_SUP
value|0x27
end_define

begin_define
define|#
directive|define
name|SMP_FR_SRC_ZONE_DNE
value|0x28
end_define

begin_define
define|#
directive|define
name|SMP_FR_DISABLED_PWD_NOT_SUP
value|0x29
end_define

begin_comment
comment|/*  * REPORT GENERAL request and response, current as of SPL Revision 7.  */
end_comment

begin_struct
struct|struct
name|smp_report_general_request
block|{
name|uint8_t
name|frame_type
decl_stmt|;
name|uint8_t
name|function
decl_stmt|;
name|uint8_t
name|response_len
decl_stmt|;
name|uint8_t
name|request_len
decl_stmt|;
name|uint8_t
name|crc
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|smp_report_general_response
block|{
name|uint8_t
name|frame_type
decl_stmt|;
name|uint8_t
name|function
decl_stmt|;
name|uint8_t
name|function_result
decl_stmt|;
name|uint8_t
name|response_len
decl_stmt|;
define|#
directive|define
name|SMP_RG_RESPONSE_LEN
value|0x11
name|uint8_t
name|expander_change_count
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|expander_route_indexes
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|long_response
decl_stmt|;
define|#
directive|define
name|SMP_RG_LONG_RESPONSE
value|0x80
name|uint8_t
name|num_phys
decl_stmt|;
name|uint8_t
name|config_bits0
decl_stmt|;
define|#
directive|define
name|SMP_RG_TABLE_TO_TABLE_SUP
value|0x80
define|#
directive|define
name|SMP_RG_ZONE_CONFIGURING
value|0x40
define|#
directive|define
name|SMP_RG_SELF_CONFIGURING
value|0x20
define|#
directive|define
name|SMP_RG_STP_CONTINUE_AWT
value|0x10
define|#
directive|define
name|SMP_RG_OPEN_REJECT_RETRY_SUP
value|0x08
define|#
directive|define
name|SMP_RG_CONFIGURES_OTHERS
value|0x04
define|#
directive|define
name|SMP_RG_CONFIGURING
value|0x02
define|#
directive|define
name|SMP_RG_EXT_CONFIG_ROUTE_TABLE
value|0x01
name|uint8_t
name|reserved0
decl_stmt|;
name|uint8_t
name|encl_logical_id
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|reserved1
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|reserved2
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|stp_bus_inact_time_limit
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|stp_max_conn_time_limit
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|stp_smp_it_nexus_loss_time
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|config_bits1
decl_stmt|;
define|#
directive|define
name|SMP_RG_NUM_ZONE_GROUPS_MASK
value|0xc0
define|#
directive|define
name|SMP_RG_NUM_ZONE_GROUPS_SHIFT
value|6
define|#
directive|define
name|SMP_RG_ZONE_LOCKED
value|0x10
define|#
directive|define
name|SMP_RG_PP_SUPPORTED
value|0x08
define|#
directive|define
name|SMP_RG_PP_ASSERTED
value|0x04
define|#
directive|define
name|SMP_RG_ZONING_SUPPORTED
value|0x02
define|#
directive|define
name|SMP_RG_ZONING_ENABLED
value|0x01
name|uint8_t
name|config_bits2
decl_stmt|;
define|#
directive|define
name|SMP_RG_SAVING
value|0x10
define|#
directive|define
name|SMP_RG_SAVING_ZM_PWD_SUP
value|0x08
define|#
directive|define
name|SMP_RG_SAVING_PHY_INFO_SUP
value|0x04
define|#
directive|define
name|SMP_RG_SAVING_ZPERM_TAB_SUP
value|0x02
define|#
directive|define
name|SMP_RG_SAVING_ZENABLED_SUP
value|0x01
name|uint8_t
name|max_num_routed_addrs
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|active_zm_address
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|zone_lock_inact_time_limit
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|reserved3
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|reserved4
decl_stmt|;
name|uint8_t
name|first_encl_conn_el_index
decl_stmt|;
name|uint8_t
name|num_encl_conn_el_indexes
decl_stmt|;
name|uint8_t
name|reserved5
decl_stmt|;
name|uint8_t
name|reduced_functionality
decl_stmt|;
define|#
directive|define
name|SMP_RG_REDUCED_FUNCTIONALITY
value|0x80
name|uint8_t
name|time_to_reduced_func
decl_stmt|;
name|uint8_t
name|initial_time_to_reduced_func
decl_stmt|;
name|uint8_t
name|max_reduced_func_time
decl_stmt|;
name|uint8_t
name|last_sc_stat_desc_index
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|max_sc_stat_descs
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|last_phy_evl_desc_index
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|max_stored_pel_descs
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|stp_reject_to_open_limit
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|reserved6
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|crc
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * REPORT MANUFACTURER INFORMATION request and response, current as of SPL  * Revision 7.  */
end_comment

begin_struct
struct|struct
name|smp_report_manuf_info_request
block|{
name|uint8_t
name|frame_type
decl_stmt|;
name|uint8_t
name|function
decl_stmt|;
name|uint8_t
name|response_len
decl_stmt|;
name|uint8_t
name|request_len
decl_stmt|;
define|#
directive|define
name|SMP_RMI_REQUEST_LEN
value|0x00
name|uint8_t
name|crc
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|smp_report_manuf_info_response
block|{
name|uint8_t
name|frame_type
decl_stmt|;
name|uint8_t
name|function
decl_stmt|;
name|uint8_t
name|function_result
decl_stmt|;
name|uint8_t
name|response_len
decl_stmt|;
define|#
directive|define
name|SMP_RMI_RESPONSE_LEN
value|0x0e
name|uint8_t
name|expander_change_count
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|reserved0
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|sas_11_format
decl_stmt|;
define|#
directive|define
name|SMP_RMI_SAS11_FORMAT
value|0x01
name|uint8_t
name|reserved1
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|vendor
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|product
index|[
literal|16
index|]
decl_stmt|;
name|uint8_t
name|revision
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|comp_vendor
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|comp_id
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|comp_revision
decl_stmt|;
name|uint8_t
name|reserved2
decl_stmt|;
name|uint8_t
name|vendor_specific
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|crc
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * DISCOVER request and response, current as of SPL Revision 7.  */
end_comment

begin_struct
struct|struct
name|smp_discover_request
block|{
name|uint8_t
name|frame_type
decl_stmt|;
name|uint8_t
name|function
decl_stmt|;
name|uint8_t
name|response_len
decl_stmt|;
name|uint8_t
name|request_len
decl_stmt|;
define|#
directive|define
name|SMP_DIS_REQUEST_LEN
value|0x02
name|uint8_t
name|reserved0
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|ignore_zone_group
decl_stmt|;
define|#
directive|define
name|SMP_DIS_IGNORE_ZONE_GROUP
value|0x01
name|uint8_t
name|phy
decl_stmt|;
name|uint8_t
name|reserved1
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|crc
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|smp_discover_response
block|{
name|uint8_t
name|frame_type
decl_stmt|;
name|uint8_t
name|function
decl_stmt|;
name|uint8_t
name|function_result
decl_stmt|;
name|uint8_t
name|response_len
decl_stmt|;
define|#
directive|define
name|SMP_DIS_RESPONSE_LEN
value|0x20
name|uint8_t
name|expander_change_count
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|reserved0
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|phy
decl_stmt|;
name|uint8_t
name|reserved1
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|attached_device
decl_stmt|;
define|#
directive|define
name|SMP_DIS_AD_TYPE_MASK
value|0x70
define|#
directive|define
name|SMP_DIS_AD_TYPE_NONE
value|0x00
define|#
directive|define
name|SMP_DIS_AD_TYPE_SAS_SATA
value|0x10
define|#
directive|define
name|SMP_DIS_AD_TYPE_EXP
value|0x20
define|#
directive|define
name|SMP_DIS_AD_TYPE_EXP_OLD
value|0x30
define|#
directive|define
name|SMP_DIS_ATTACH_REASON_MASK
value|0x0f
name|uint8_t
name|neg_logical_link_rate
decl_stmt|;
define|#
directive|define
name|SMP_DIS_LR_MASK
value|0x0f
define|#
directive|define
name|SMP_DIS_LR_DISABLED
value|0x01
define|#
directive|define
name|SMP_DIS_LR_PHY_RES_PROB
value|0x02
define|#
directive|define
name|SMP_DIS_LR_SPINUP_HOLD
value|0x03
define|#
directive|define
name|SMP_DIS_LR_PORT_SEL
value|0x04
define|#
directive|define
name|SMP_DIS_LR_RESET_IN_PROG
value|0x05
define|#
directive|define
name|SMP_DIS_LR_UNSUP_PHY_ATTACHED
value|0x06
define|#
directive|define
name|SMP_DIS_LR_G1_15GBPS
value|0x08
define|#
directive|define
name|SMP_DIS_LR_G2_30GBPS
value|0x09
define|#
directive|define
name|SMP_DIS_LR_G3_60GBPS
value|0x0a
name|uint8_t
name|config_bits0
decl_stmt|;
define|#
directive|define
name|SMP_DIS_ATTACHED_SSP_INIT
value|0x08
define|#
directive|define
name|SMP_DIS_ATTACHED_STP_INIT
value|0x04
define|#
directive|define
name|SMP_DIS_ATTACHED_SMP_INIT
value|0x02
define|#
directive|define
name|SMP_DIS_ATTACHED_SATA_HOST
value|0x01
name|uint8_t
name|config_bits1
decl_stmt|;
define|#
directive|define
name|SMP_DIS_ATTACHED_SATA_PORTSEL
value|0x80
define|#
directive|define
name|SMP_DIS_STP_BUFFER_TOO_SMALL
value|0x10
define|#
directive|define
name|SMP_DIS_ATTACHED_SSP_TARG
value|0x08
define|#
directive|define
name|SMP_DIS_ATTACHED_STP_TARG
value|0x04
define|#
directive|define
name|SMP_DIS_ATTACHED_SMP_TARG
value|0x02
define|#
directive|define
name|SMP_DIS_ATTACHED_SATA_DEV
value|0x01
name|uint8_t
name|sas_address
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|attached_sas_address
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|attached_phy_id
decl_stmt|;
name|uint8_t
name|config_bits2
decl_stmt|;
define|#
directive|define
name|SMP_DIS_ATT_SLUMB_CAP
value|0x10
define|#
directive|define
name|SMP_DIS_ATT_PAR_CAP
value|0x08
define|#
directive|define
name|SMP_DIS_ATT_IN_ZPSDS_PER
value|0x04
define|#
directive|define
name|SMP_DIS_ATT_REQ_IN_ZPSDS
value|0x02
define|#
directive|define
name|SMP_DIS_ATT_BREAK_RPL_CAP
value|0x01
name|uint8_t
name|reserved2
index|[
literal|6
index|]
decl_stmt|;
name|uint8_t
name|link_rate0
decl_stmt|;
define|#
directive|define
name|SMP_DIS_PROG_MIN_LR_MASK
value|0xf0
define|#
directive|define
name|SMP_DIS_PROG_MIN_LR_SHIFT
value|4
define|#
directive|define
name|SMP_DIS_HARD_MIN_LR_MASK
value|0x0f
name|uint8_t
name|link_rate1
decl_stmt|;
define|#
directive|define
name|SMP_DIS_PROG_MAX_LR_MAX
value|0xf0
define|#
directive|define
name|SMP_DIS_PROG_MAX_LR_SHIFT
value|4
define|#
directive|define
name|SMP_DIS_HARD_MAX_LR_MASK
value|0x0f
name|uint8_t
name|phy_change_count
decl_stmt|;
name|uint8_t
name|pp_timeout
decl_stmt|;
define|#
directive|define
name|SMP_DIS_VIRTUAL_PHY
value|0x80
define|#
directive|define
name|SMP_DIS_PP_TIMEOUT_MASK
value|0x0f
name|uint8_t
name|routing_attr
decl_stmt|;
name|uint8_t
name|conn_type
decl_stmt|;
name|uint8_t
name|conn_el_index
decl_stmt|;
name|uint8_t
name|conn_phys_link
decl_stmt|;
name|uint8_t
name|config_bits3
decl_stmt|;
define|#
directive|define
name|SMP_DIS_PHY_POW_COND_MASK
value|0xc0
define|#
directive|define
name|SMP_DIS_PHY_POW_COND_SHIFT
value|6
define|#
directive|define
name|SMP_DIS_SAS_SLUMB_CAP
value|0x08
define|#
directive|define
name|SMP_DIS_SAS_PART_CAP
value|0x04
define|#
directive|define
name|SMP_DIS_SATA_SLUMB_CAP
value|0x02
define|#
directive|define
name|SMP_DIS_SATA_PART_CAP
value|0x01
name|uint8_t
name|config_bits4
decl_stmt|;
define|#
directive|define
name|SMP_DIS_SAS_SLUMB_ENB
value|0x08
define|#
directive|define
name|SMP_DIS_SAS_PART_ENB
value|0x04
define|#
directive|define
name|SMP_DIS_SATA_SLUMB_ENB
value|0x02
define|#
directive|define
name|SMP_DIS_SATA_PART_ENB
value|0x01
name|uint8_t
name|vendor_spec
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|attached_dev_name
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|config_bits5
decl_stmt|;
define|#
directive|define
name|SMP_DIS_REQ_IN_ZPSDS_CHG
value|0x40
define|#
directive|define
name|SMP_DIS_IN_ZPSDS_PER
value|0x20
define|#
directive|define
name|SMP_DIS_REQ_IN_ZPSDS
value|0x10
define|#
directive|define
name|SMP_DIS_ZG_PER
value|0x04
define|#
directive|define
name|SMP_DIS_IN_ZPSDS
value|0x02
define|#
directive|define
name|SMP_DIS_ZONING_ENB
value|0x01
name|uint8_t
name|reserved3
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|zone_group
decl_stmt|;
name|uint8_t
name|self_config_status
decl_stmt|;
name|uint8_t
name|self_config_levels_comp
decl_stmt|;
name|uint8_t
name|reserved4
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|self_config_sas_addr
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|prog_phy_cap
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|current_phy_cap
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|attached_phy_cap
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|reserved5
index|[
literal|6
index|]
decl_stmt|;
name|uint8_t
name|neg_phys_link_rate
decl_stmt|;
define|#
directive|define
name|SMP_DIS_REASON_MASK
value|0xf0
define|#
directive|define
name|SMP_DIS_REASON_SHIFT
value|4
define|#
directive|define
name|SMP_DIS_PHYS_LR_MASK
value|0x0f
name|uint8_t
name|config_bits6
decl_stmt|;
define|#
directive|define
name|SMP_DIS_OPTICAL_MODE_ENB
value|0x04
define|#
directive|define
name|SMP_DIS_NEG_SSC
value|0x02
define|#
directive|define
name|SMP_DIS_HW_MUX_SUP
value|0x01
name|uint8_t
name|config_bits7
decl_stmt|;
define|#
directive|define
name|SMP_DIS_DEF_IN_ZPSDS_PER
value|0x20
define|#
directive|define
name|SMP_DIS_DEF_REQ_IN_ZPSDS
value|0x10
define|#
directive|define
name|SMP_DIS_DEF_ZG_PER
value|0x04
define|#
directive|define
name|SMP_DIS_DEF_ZONING_ENB
value|0x01
name|uint8_t
name|reserved6
decl_stmt|;
name|uint8_t
name|reserved7
decl_stmt|;
name|uint8_t
name|default_zone_group
decl_stmt|;
name|uint8_t
name|config_bits8
decl_stmt|;
define|#
directive|define
name|SMP_DIS_SAVED_IN_ZPSDS_PER
value|0x20
define|#
directive|define
name|SMP_DIS_SAVED_REQ_IN_SPSDS
value|0x10
define|#
directive|define
name|SMP_DIS_SAVED_ZG_PER
value|0x04
define|#
directive|define
name|SMP_DIS_SAVED_ZONING_ENB
value|0x01
name|uint8_t
name|reserved8
decl_stmt|;
name|uint8_t
name|reserved9
decl_stmt|;
name|uint8_t
name|saved_zone_group
decl_stmt|;
name|uint8_t
name|config_bits9
decl_stmt|;
define|#
directive|define
name|SMP_DIS_SHADOW_IN_ZPSDS_PER
value|0x20
define|#
directive|define
name|SMP_DIS_SHADOW_IN_REQ_IN_ZPSDS
value|0x10
define|#
directive|define
name|SMP_DIS_SHADOW_ZG_PER
value|0x04
name|uint8_t
name|reserved10
decl_stmt|;
name|uint8_t
name|reserved11
decl_stmt|;
name|uint8_t
name|shadow_zone_group
decl_stmt|;
name|uint8_t
name|device_slot_num
decl_stmt|;
name|uint8_t
name|device_slot_group_num
decl_stmt|;
name|uint8_t
name|device_slot_group_out_conn
index|[
literal|6
index|]
decl_stmt|;
name|uint8_t
name|stp_buffer_size
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|reserved12
decl_stmt|;
name|uint8_t
name|reserved13
decl_stmt|;
name|uint8_t
name|crc
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * PHY CONTROL request and response.  Current as of SPL Revision 7.  */
end_comment

begin_struct
struct|struct
name|smp_phy_control_request
block|{
name|uint8_t
name|frame_type
decl_stmt|;
name|uint8_t
name|function
decl_stmt|;
name|uint8_t
name|response_len
decl_stmt|;
define|#
directive|define
name|SMP_PC_RESPONSE_LEN
value|0x00
name|uint8_t
name|request_len
decl_stmt|;
define|#
directive|define
name|SMP_PC_REQUEST_LEN
value|0x09
name|uint8_t
name|expected_exp_chg_cnt
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|reserved0
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|phy
decl_stmt|;
name|uint8_t
name|phy_operation
decl_stmt|;
define|#
directive|define
name|SMP_PC_PHY_OP_NOP
value|0x00
define|#
directive|define
name|SMP_PC_PHY_OP_LINK_RESET
value|0x01
define|#
directive|define
name|SMP_PC_PHY_OP_HARD_RESET
value|0x02
define|#
directive|define
name|SMP_PC_PHY_OP_DISABLE
value|0x03
define|#
directive|define
name|SMP_PC_PHY_OP_CLEAR_ERR_LOG
value|0x05
define|#
directive|define
name|SMP_PC_PHY_OP_CLEAR_AFFILIATON
value|0x06
define|#
directive|define
name|SMP_PC_PHY_OP_TRANS_SATA_PSS
value|0x07
define|#
directive|define
name|SMP_PC_PHY_OP_CLEAR_STP_ITN_LS
value|0x08
define|#
directive|define
name|SMP_PC_PHY_OP_SET_ATT_DEV_NAME
value|0x09
name|uint8_t
name|update_pp_timeout
decl_stmt|;
define|#
directive|define
name|SMP_PC_UPDATE_PP_TIMEOUT
value|0x01
name|uint8_t
name|reserved1
index|[
literal|12
index|]
decl_stmt|;
name|uint8_t
name|attached_device_name
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|prog_min_phys_link_rate
decl_stmt|;
define|#
directive|define
name|SMP_PC_PROG_MIN_PL_RATE_MASK
value|0xf0
define|#
directive|define
name|SMP_PC_PROG_MIN_PL_RATE_SHIFT
value|4
name|uint8_t
name|prog_max_phys_link_rate
decl_stmt|;
define|#
directive|define
name|SMP_PC_PROG_MAX_PL_RATE_MASK
value|0xf0
define|#
directive|define
name|SMP_PC_PROG_MAX_PL_RATE_SHIFT
value|4
name|uint8_t
name|config_bits0
decl_stmt|;
define|#
directive|define
name|SMP_PC_SP_NC
value|0x00
define|#
directive|define
name|SMP_PC_SP_DISABLE
value|0x02
define|#
directive|define
name|SMP_PC_SP_ENABLE
value|0x01
define|#
directive|define
name|SMP_PC_SAS_SLUMBER_NC
value|0x00
define|#
directive|define
name|SMP_PC_SAS_SLUMBER_DISABLE
value|0x80
define|#
directive|define
name|SMP_PC_SAS_SLUMBER_ENABLE
value|0x40
define|#
directive|define
name|SMP_PC_SAS_SLUMBER_MASK
value|0xc0
define|#
directive|define
name|SMP_PC_SAS_SLUMBER_SHIFT
value|6
define|#
directive|define
name|SMP_PC_SAS_PARTIAL_NC
value|0x00
define|#
directive|define
name|SMP_PC_SAS_PARTIAL_DISABLE
value|0x20
define|#
directive|define
name|SMP_PC_SAS_PARTIAL_ENABLE
value|0x10
define|#
directive|define
name|SMP_PC_SAS_PARTIAL_MASK
value|0x30
define|#
directive|define
name|SMP_PC_SAS_PARTIAL_SHIFT
value|4
define|#
directive|define
name|SMP_PC_SATA_SLUMBER_NC
value|0x00
define|#
directive|define
name|SMP_PC_SATA_SLUMBER_DISABLE
value|0x08
define|#
directive|define
name|SMP_PC_SATA_SLUMBER_ENABLE
value|0x04
define|#
directive|define
name|SMP_PC_SATA_SLUMBER_MASK
value|0x0c
define|#
directive|define
name|SMP_PC_SATA_SLUMBER_SHIFT
value|2
define|#
directive|define
name|SMP_PC_SATA_PARTIAL_NC
value|0x00
define|#
directive|define
name|SMP_PC_SATA_PARTIAL_DISABLE
value|0x02
define|#
directive|define
name|SMP_PC_SATA_PARTIAL_ENABLE
value|0x01
define|#
directive|define
name|SMP_PC_SATA_PARTIAL_MASK
value|0x03
define|#
directive|define
name|SMP_PC_SATA_PARTIAL_SHIFT
value|0
name|uint8_t
name|reserved2
decl_stmt|;
name|uint8_t
name|pp_timeout_value
decl_stmt|;
define|#
directive|define
name|SMP_PC_PP_TIMEOUT_MASK
value|0x0f
name|uint8_t
name|reserved3
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|crc
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|smp_phy_control_response
block|{
name|uint8_t
name|frame_type
decl_stmt|;
name|uint8_t
name|function
decl_stmt|;
name|uint8_t
name|function_result
decl_stmt|;
name|uint8_t
name|response_len
decl_stmt|;
define|#
directive|define
name|SMP_PC_RESPONSE_LEN
value|0x00
name|uint8_t
name|crc
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|__BEGIN_DECLS
specifier|const
name|char
modifier|*
name|smp_error_desc
parameter_list|(
name|int
name|function_result
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|smp_command_desc
parameter_list|(
name|uint8_t
name|cmd_num
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|smp_command_decode
parameter_list|(
name|uint8_t
modifier|*
name|smp_request
parameter_list|,
name|int
name|request_len
parameter_list|,
name|struct
name|sbuf
modifier|*
name|sb
parameter_list|,
name|char
modifier|*
name|line_prefix
parameter_list|,
name|int
name|first_line_len
parameter_list|,
name|int
name|line_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|smp_command_sbuf
parameter_list|(
name|struct
name|ccb_smpio
modifier|*
name|smpio
parameter_list|,
name|struct
name|sbuf
modifier|*
name|sb
parameter_list|,
name|char
modifier|*
name|line_prefix
parameter_list|,
name|int
name|first_line_len
parameter_list|,
name|int
name|line_len
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|_KERNEL
end_ifdef

begin_function_decl
name|void
name|smp_error_sbuf
parameter_list|(
name|struct
name|ccb_smpio
modifier|*
name|smpio
parameter_list|,
name|struct
name|sbuf
modifier|*
name|sb
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* !_KERNEL*/
end_comment

begin_function_decl
name|void
name|smp_error_sbuf
parameter_list|(
name|struct
name|cam_device
modifier|*
name|device
parameter_list|,
name|struct
name|ccb_smpio
modifier|*
name|smpio
parameter_list|,
name|struct
name|sbuf
modifier|*
name|sb
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _KERNEL/!_KERNEL */
end_comment

begin_function_decl
name|void
name|smp_report_general_sbuf
parameter_list|(
name|struct
name|smp_report_general_response
modifier|*
name|response
parameter_list|,
name|int
name|response_len
parameter_list|,
name|struct
name|sbuf
modifier|*
name|sb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|smp_report_manuf_info_sbuf
parameter_list|(
name|struct
name|smp_report_manuf_info_response
modifier|*
name|response
parameter_list|,
name|int
name|response_len
parameter_list|,
name|struct
name|sbuf
modifier|*
name|sb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|smp_report_general
parameter_list|(
name|struct
name|ccb_smpio
modifier|*
name|smpio
parameter_list|,
name|uint32_t
name|retries
parameter_list|,
name|void
function_decl|(
modifier|*
name|cbfcnp
function_decl|)
parameter_list|(
name|struct
name|cam_periph
modifier|*
parameter_list|,
name|union
name|ccb
modifier|*
parameter_list|)
parameter_list|,
name|struct
name|smp_report_general_request
modifier|*
name|request
parameter_list|,
name|int
name|request_len
parameter_list|,
name|uint8_t
modifier|*
name|response
parameter_list|,
name|int
name|response_len
parameter_list|,
name|int
name|long_response
parameter_list|,
name|uint32_t
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|smp_discover
parameter_list|(
name|struct
name|ccb_smpio
modifier|*
name|smpio
parameter_list|,
name|uint32_t
name|retries
parameter_list|,
name|void
function_decl|(
modifier|*
name|cbfcnp
function_decl|)
parameter_list|(
name|struct
name|cam_periph
modifier|*
parameter_list|,
name|union
name|ccb
modifier|*
parameter_list|)
parameter_list|,
name|struct
name|smp_discover_request
modifier|*
name|request
parameter_list|,
name|int
name|request_len
parameter_list|,
name|uint8_t
modifier|*
name|response
parameter_list|,
name|int
name|response_len
parameter_list|,
name|int
name|long_response
parameter_list|,
name|int
name|ignore_zone_group
parameter_list|,
name|int
name|phy
parameter_list|,
name|uint32_t
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|smp_report_manuf_info
parameter_list|(
name|struct
name|ccb_smpio
modifier|*
name|smpio
parameter_list|,
name|uint32_t
name|retries
parameter_list|,
name|void
function_decl|(
modifier|*
name|cbfcnp
function_decl|)
parameter_list|(
name|struct
name|cam_periph
modifier|*
parameter_list|,
name|union
name|ccb
modifier|*
parameter_list|)
parameter_list|,
name|struct
name|smp_report_manuf_info_request
modifier|*
name|request
parameter_list|,
name|int
name|request_len
parameter_list|,
name|uint8_t
modifier|*
name|response
parameter_list|,
name|int
name|response_len
parameter_list|,
name|int
name|long_response
parameter_list|,
name|uint32_t
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|smp_phy_control
parameter_list|(
name|struct
name|ccb_smpio
modifier|*
name|smpio
parameter_list|,
name|uint32_t
name|retries
parameter_list|,
name|void
function_decl|(
modifier|*
name|cbfcnp
function_decl|)
parameter_list|(
name|struct
name|cam_periph
modifier|*
parameter_list|,
name|union
name|ccb
modifier|*
parameter_list|)
parameter_list|,
name|struct
name|smp_phy_control_request
modifier|*
name|request
parameter_list|,
name|int
name|request_len
parameter_list|,
name|uint8_t
modifier|*
name|response
parameter_list|,
name|int
name|response_len
parameter_list|,
name|int
name|long_response
parameter_list|,
name|uint32_t
name|expected_exp_change_count
parameter_list|,
name|int
name|phy
parameter_list|,
name|int
name|phy_op
parameter_list|,
name|int
name|update_pp_timeout_val
parameter_list|,
name|uint64_t
name|attached_device_name
parameter_list|,
name|int
name|prog_min_prl
parameter_list|,
name|int
name|prog_max_prl
parameter_list|,
name|int
name|slumber_partial
parameter_list|,
name|int
name|pp_timeout_value
parameter_list|,
name|uint32_t
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*_SCSI_SMP_ALL_H*/
end_comment

end_unit

