begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2003 Silicon Graphics International Corp.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions, and the following disclaimer,  *    without modification.  * 2. Redistributions in binary form must reproduce at minimum a disclaimer  *    substantially similar to the "NO WARRANTY" disclaimer below  *    ("Disclaimer") and any redistribution must be conditioned upon  *    including a substantially similar Disclaimer requirement for further  *    binary redistribution.  *  * NO WARRANTY  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGES.  *  * $Id: //depot/users/kenm/FreeBSD-test2/sys/cam/ctl/ctl_util.h#2 $  * $FreeBSD$  */
end_comment

begin_comment
comment|/*  * CAM Target Layer SCSI library interface  *  * Author: Ken Merry<ken@FreeBSD.org>  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_CTL_UTIL_H
end_ifndef

begin_define
define|#
directive|define
name|_CTL_UTIL_H
value|1
end_define

begin_function_decl
name|__BEGIN_DECLS
name|void
name|ctl_scsi_tur
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_inquiry
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|uint8_t
modifier|*
name|data_ptr
parameter_list|,
name|int32_t
name|data_len
parameter_list|,
name|uint8_t
name|byte2
parameter_list|,
name|uint8_t
name|page_code
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_request_sense
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|uint8_t
modifier|*
name|data_ptr
parameter_list|,
name|int32_t
name|data_len
parameter_list|,
name|uint8_t
name|byte2
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_report_luns
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|uint8_t
modifier|*
name|data_ptr
parameter_list|,
name|uint32_t
name|data_len
parameter_list|,
name|uint8_t
name|select_report
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_read_write_buffer
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|uint8_t
modifier|*
name|data_ptr
parameter_list|,
name|uint32_t
name|data_len
parameter_list|,
name|int
name|read_buffer
parameter_list|,
name|uint8_t
name|mode
parameter_list|,
name|uint8_t
name|buffer_id
parameter_list|,
name|uint32_t
name|buffer_offset
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_read_write
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|uint8_t
modifier|*
name|data_ptr
parameter_list|,
name|uint32_t
name|data_len
parameter_list|,
name|int
name|read_op
parameter_list|,
name|uint8_t
name|byte2
parameter_list|,
name|int
name|minimum_cdb_size
parameter_list|,
name|uint64_t
name|lba
parameter_list|,
name|uint32_t
name|num_blocks
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_read_capacity
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|uint8_t
modifier|*
name|data_ptr
parameter_list|,
name|uint32_t
name|data_len
parameter_list|,
name|uint32_t
name|addr
parameter_list|,
name|int
name|reladr
parameter_list|,
name|int
name|pmi
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_read_capacity_16
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|uint8_t
modifier|*
name|data_ptr
parameter_list|,
name|uint32_t
name|data_len
parameter_list|,
name|uint64_t
name|addr
parameter_list|,
name|int
name|reladr
parameter_list|,
name|int
name|pmi
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_mode_sense
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|uint8_t
modifier|*
name|data_ptr
parameter_list|,
name|uint32_t
name|data_len
parameter_list|,
name|int
name|dbd
parameter_list|,
name|int
name|llbaa
parameter_list|,
name|uint8_t
name|page_code
parameter_list|,
name|uint8_t
name|pc
parameter_list|,
name|uint8_t
name|subpage
parameter_list|,
name|int
name|minimum_cdb_size
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_start_stop
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|load_eject
parameter_list|,
name|int
name|immediate
parameter_list|,
name|int
name|power_conditions
parameter_list|,
name|int
name|onoffline
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_sync_cache
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|int
name|immed
parameter_list|,
name|int
name|reladr
parameter_list|,
name|int
name|minimum_cdb_size
parameter_list|,
name|uint64_t
name|starting_lba
parameter_list|,
name|uint32_t
name|block_count
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_persistent_res_in
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|uint8_t
modifier|*
name|data_ptr
parameter_list|,
name|uint32_t
name|data_len
parameter_list|,
name|int
name|action
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_persistent_res_out
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|uint8_t
modifier|*
name|data_ptr
parameter_list|,
name|uint32_t
name|data_len
parameter_list|,
name|int
name|action
parameter_list|,
name|int
name|type
parameter_list|,
name|uint64_t
name|key
parameter_list|,
name|uint64_t
name|sa_key
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_maintenance_in
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|uint8_t
modifier|*
name|data_ptr
parameter_list|,
name|uint32_t
name|data_len
parameter_list|,
name|uint8_t
name|action
parameter_list|,
name|ctl_tag_type
name|tag_type
parameter_list|,
name|uint8_t
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_ifndef
ifndef|#
directive|ifndef
name|_KERNEL
end_ifndef

begin_function_decl
name|union
name|ctl_io
modifier|*
name|ctl_scsi_alloc_io
parameter_list|(
name|struct
name|ctl_id
name|initid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_scsi_free_io
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_KERNEL */
end_comment

begin_function_decl
name|void
name|ctl_scsi_zero_io
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|ctl_scsi_task_string
parameter_list|(
name|struct
name|ctl_taskio
modifier|*
name|taskio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_io_error_sbuf
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|struct
name|scsi_inquiry_data
modifier|*
name|inq_data
parameter_list|,
name|struct
name|sbuf
modifier|*
name|sb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|ctl_io_error_string
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|struct
name|scsi_inquiry_data
modifier|*
name|inq_data
parameter_list|,
name|char
modifier|*
name|str
parameter_list|,
name|int
name|str_len
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|_KERNEL
end_ifdef

begin_function_decl
name|void
name|ctl_io_error_print
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|struct
name|scsi_inquiry_data
modifier|*
name|inq_data
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* _KERNEL */
end_comment

begin_function_decl
name|void
name|ctl_io_error_print
parameter_list|(
name|union
name|ctl_io
modifier|*
name|io
parameter_list|,
name|struct
name|scsi_inquiry_data
modifier|*
name|inq_data
parameter_list|,
name|FILE
modifier|*
name|ofile
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _KERNEL */
end_comment

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _CTL_UTIL_H */
end_comment

begin_comment
comment|/*  * vim: ts=8  */
end_comment

end_unit

