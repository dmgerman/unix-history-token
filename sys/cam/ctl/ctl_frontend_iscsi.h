begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2012 The FreeBSD Foundation  * All rights reserved.  *  * This software was developed by Edward Tomasz Napierala under sponsorship  * from the FreeBSD Foundation.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|CTL_FRONTEND_ISCSI_H
end_ifndef

begin_define
define|#
directive|define
name|CTL_FRONTEND_ISCSI_H
end_define

begin_define
define|#
directive|define
name|CFISCSI_TARGET_STATE_INVALID
value|0
end_define

begin_define
define|#
directive|define
name|CFISCSI_TARGET_STATE_ACTIVE
value|1
end_define

begin_define
define|#
directive|define
name|CFISCSI_TARGET_STATE_DYING
value|2
end_define

begin_struct
struct|struct
name|cfiscsi_target
block|{
name|TAILQ_ENTRY
argument_list|(
argument|cfiscsi_target
argument_list|)
name|ct_next
expr_stmt|;
name|struct
name|cfiscsi_softc
modifier|*
name|ct_softc
decl_stmt|;
specifier|volatile
name|u_int
name|ct_refcount
decl_stmt|;
name|char
name|ct_name
index|[
name|CTL_ISCSI_NAME_LEN
index|]
decl_stmt|;
name|char
name|ct_alias
index|[
name|CTL_ISCSI_ALIAS_LEN
index|]
decl_stmt|;
name|uint16_t
name|ct_tag
decl_stmt|;
name|int
name|ct_state
decl_stmt|;
name|int
name|ct_online
decl_stmt|;
name|int
name|ct_target_id
decl_stmt|;
name|struct
name|ctl_port
name|ct_port
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cfiscsi_data_wait
block|{
name|TAILQ_ENTRY
argument_list|(
argument|cfiscsi_data_wait
argument_list|)
name|cdw_next
expr_stmt|;
name|union
name|ctl_io
modifier|*
name|cdw_ctl_io
decl_stmt|;
name|uint32_t
name|cdw_target_transfer_tag
decl_stmt|;
name|uint32_t
name|cdw_initiator_task_tag
decl_stmt|;
name|int
name|cdw_sg_index
decl_stmt|;
name|char
modifier|*
name|cdw_sg_addr
decl_stmt|;
name|size_t
name|cdw_sg_len
decl_stmt|;
name|uint32_t
name|cdw_r2t_end
decl_stmt|;
name|uint32_t
name|cdw_datasn
decl_stmt|;
name|void
modifier|*
name|cdw_icl_prv
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|CFISCSI_SESSION_STATE_INVALID
value|0
end_define

begin_define
define|#
directive|define
name|CFISCSI_SESSION_STATE_BHS
value|1
end_define

begin_define
define|#
directive|define
name|CFISCSI_SESSION_STATE_AHS
value|2
end_define

begin_define
define|#
directive|define
name|CFISCSI_SESSION_STATE_HEADER_DIGEST
value|3
end_define

begin_define
define|#
directive|define
name|CFISCSI_SESSION_STATE_DATA
value|4
end_define

begin_define
define|#
directive|define
name|CFISCSI_SESSION_STATE_DATA_DIGEST
value|5
end_define

begin_struct
struct|struct
name|cfiscsi_session
block|{
name|TAILQ_ENTRY
argument_list|(
argument|cfiscsi_session
argument_list|)
name|cs_next
expr_stmt|;
name|struct
name|mtx
name|cs_lock
decl_stmt|;
name|struct
name|icl_conn
modifier|*
name|cs_conn
decl_stmt|;
name|uint32_t
name|cs_cmdsn
decl_stmt|;
name|uint32_t
name|cs_statsn
decl_stmt|;
name|uint32_t
name|cs_target_transfer_tag
decl_stmt|;
specifier|volatile
name|u_int
name|cs_outstanding_ctl_pdus
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|cfiscsi_data_wait
argument_list|)
name|cs_waiting_for_data_out
expr_stmt|;
name|struct
name|cfiscsi_target
modifier|*
name|cs_target
decl_stmt|;
name|struct
name|callout
name|cs_callout
decl_stmt|;
name|int
name|cs_timeout
decl_stmt|;
name|struct
name|cv
name|cs_maintenance_cv
decl_stmt|;
name|bool
name|cs_terminating
decl_stmt|;
name|bool
name|cs_tasks_aborted
decl_stmt|;
name|size_t
name|cs_max_data_segment_length
decl_stmt|;
name|size_t
name|cs_max_burst_length
decl_stmt|;
name|bool
name|cs_immediate_data
decl_stmt|;
name|char
name|cs_initiator_name
index|[
name|CTL_ISCSI_NAME_LEN
index|]
decl_stmt|;
name|char
name|cs_initiator_addr
index|[
name|CTL_ISCSI_ADDR_LEN
index|]
decl_stmt|;
name|char
name|cs_initiator_alias
index|[
name|CTL_ISCSI_ALIAS_LEN
index|]
decl_stmt|;
name|char
name|cs_initiator_isid
index|[
literal|6
index|]
decl_stmt|;
name|char
name|cs_initiator_id
index|[
name|CTL_ISCSI_NAME_LEN
operator|+
literal|5
operator|+
literal|6
operator|+
literal|1
index|]
decl_stmt|;
name|unsigned
name|int
name|cs_id
decl_stmt|;
name|int
name|cs_ctl_initid
decl_stmt|;
ifdef|#
directive|ifdef
name|ICL_KERNEL_PROXY
name|struct
name|sockaddr
modifier|*
name|cs_initiator_sa
decl_stmt|;
name|int
name|cs_portal_id
decl_stmt|;
name|bool
name|cs_login_phase
decl_stmt|;
name|bool
name|cs_waiting_for_ctld
decl_stmt|;
name|struct
name|cv
name|cs_login_cv
decl_stmt|;
name|struct
name|icl_pdu
modifier|*
name|cs_login_pdu
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|ICL_KERNEL_PROXY
end_ifdef

begin_struct_decl
struct_decl|struct
name|icl_listen
struct_decl|;
end_struct_decl

begin_endif
endif|#
directive|endif
end_endif

begin_struct
struct|struct
name|cfiscsi_softc
block|{
name|struct
name|mtx
name|lock
decl_stmt|;
name|char
name|port_name
index|[
literal|32
index|]
decl_stmt|;
name|int
name|online
decl_stmt|;
name|int
name|last_target_id
decl_stmt|;
name|unsigned
name|int
name|last_session_id
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|cfiscsi_target
argument_list|)
name|targets
expr_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|cfiscsi_session
argument_list|)
name|sessions
expr_stmt|;
name|struct
name|cv
name|sessions_cv
decl_stmt|;
ifdef|#
directive|ifdef
name|ICL_KERNEL_PROXY
name|struct
name|icl_listen
modifier|*
name|listener
decl_stmt|;
name|struct
name|cv
name|accept_cv
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !CTL_FRONTEND_ISCSI_H */
end_comment

end_unit

