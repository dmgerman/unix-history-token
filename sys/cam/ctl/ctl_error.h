begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2003 Silicon Graphics International Corp.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions, and the following disclaimer,  *    without modification.  * 2. Redistributions in binary form must reproduce at minimum a disclaimer  *    substantially similar to the "NO WARRANTY" disclaimer below  *    ("Disclaimer") and any redistribution must be conditioned upon  *    including a substantially similar Disclaimer requirement for further  *    binary redistribution.  *  * NO WARRANTY  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGES.  *  * $Id: //depot/users/kenm/FreeBSD-test2/sys/cam/ctl/ctl_error.h#1 $  * $FreeBSD$  */
end_comment

begin_comment
comment|/*  * Function definitions for various error reporting routines used both  * within CTL and various CTL clients.  *  * Author: Ken Merry<ken@FreeBSD.org>  */
end_comment

begin_include
include|#
directive|include
file|<machine/stdarg.h>
end_include

begin_ifndef
ifndef|#
directive|ifndef
name|_CTL_ERROR_H_
end_ifndef

begin_define
define|#
directive|define
name|_CTL_ERROR_H_
end_define

begin_typedef
typedef|typedef
enum|enum
block|{
name|CTL_SENSE_NOT_SPECIFIED
block|,
name|CTL_SENSE_FIXED
block|,
name|CTL_SENSE_DESCRIPTOR
block|}
name|ctl_sense_format
typedef|;
end_typedef

begin_function_decl
name|void
name|ctl_set_sense_data_va
parameter_list|(
name|struct
name|scsi_sense_data
modifier|*
name|sense_data
parameter_list|,
name|void
modifier|*
name|lun
parameter_list|,
name|scsi_sense_data_type
name|sense_format
parameter_list|,
name|int
name|current_error
parameter_list|,
name|int
name|sense_key
parameter_list|,
name|int
name|asc
parameter_list|,
name|int
name|ascq
parameter_list|,
name|va_list
name|ap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_sense_data
parameter_list|(
name|struct
name|scsi_sense_data
modifier|*
name|sense_data
parameter_list|,
name|void
modifier|*
name|lun
parameter_list|,
name|scsi_sense_data_type
name|sense_format
parameter_list|,
name|int
name|current_error
parameter_list|,
name|int
name|sense_key
parameter_list|,
name|int
name|asc
parameter_list|,
name|int
name|ascq
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_sense
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|,
name|int
name|current_error
parameter_list|,
name|int
name|sense_key
parameter_list|,
name|int
name|asc
parameter_list|,
name|int
name|ascq
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_sense_to_desc
parameter_list|(
name|struct
name|scsi_sense_data_fixed
modifier|*
name|sense_src
parameter_list|,
name|struct
name|scsi_sense_data_desc
modifier|*
name|sense_dest
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_sense_to_fixed
parameter_list|(
name|struct
name|scsi_sense_data_desc
modifier|*
name|sense_src
parameter_list|,
name|struct
name|scsi_sense_data_fixed
modifier|*
name|sense_dest
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ctl_sense_format
name|ctl_get_sense_format
parameter_list|(
name|struct
name|scsi_sense_data
modifier|*
name|sense_data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_ua
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|,
name|int
name|asc
parameter_list|,
name|int
name|ascq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ctl_ua_type
name|ctl_build_ua
parameter_list|(
name|ctl_ua_type
name|ua_type
parameter_list|,
name|struct
name|scsi_sense_data
modifier|*
name|sense
parameter_list|,
name|ctl_sense_format
name|sense_format
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_overlapped_cmd
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_overlapped_tag
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|,
name|uint8_t
name|tag
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_invalid_field
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|,
name|int
name|sks_valid
parameter_list|,
name|int
name|command
parameter_list|,
name|int
name|field
parameter_list|,
name|int
name|bit_valid
parameter_list|,
name|int
name|bit
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_invalid_opcode
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_param_len_error
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_already_locked
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_unsupported_lun
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_lun_standby
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_internal_failure
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|,
name|int
name|sks_valid
parameter_list|,
name|uint16_t
name|retry_count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_medium_error
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_aborted
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_lba_out_of_range
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_lun_stopped
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_lun_not_ready
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_illegal_pr_release
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_medium_format_corrupted
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_medium_magazine_inaccessible
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_data_phase_error
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_reservation_conflict
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_queue_full
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_busy
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ctl_set_success
parameter_list|(
name|struct
name|ctl_scsiio
modifier|*
name|ctsio
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _CTL_ERROR_H_ */
end_comment

end_unit

