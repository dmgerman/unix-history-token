begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$NetBSD: ntfs_subr.h,v 1.8 1999/10/10 14:48:37 jdolecek Exp $	*/
end_comment

begin_comment
comment|/*-  * Copyright (c) 1998, 1999 Semen Ustimenko  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_define
define|#
directive|define
name|VA_LOADED
value|0x0001
end_define

begin_define
define|#
directive|define
name|VA_PRELOADED
value|0x0002
end_define

begin_struct
struct|struct
name|ntvattr
block|{
name|LIST_ENTRY
argument_list|(
argument|ntvattr
argument_list|)
name|va_list
expr_stmt|;
name|u_int32_t
name|va_vflag
decl_stmt|;
name|struct
name|vnode
modifier|*
name|va_vp
decl_stmt|;
name|struct
name|ntnode
modifier|*
name|va_ip
decl_stmt|;
name|u_int32_t
name|va_flag
decl_stmt|;
name|u_int32_t
name|va_type
decl_stmt|;
name|u_int8_t
name|va_namelen
decl_stmt|;
name|char
name|va_name
index|[
name|NTFS_MAXATTRNAME
index|]
decl_stmt|;
name|u_int32_t
name|va_compression
decl_stmt|;
name|u_int32_t
name|va_compressalg
decl_stmt|;
name|u_int32_t
name|va_datalen
decl_stmt|;
name|u_int32_t
name|va_allocated
decl_stmt|;
name|cn_t
name|va_vcnstart
decl_stmt|;
name|cn_t
name|va_vcnend
decl_stmt|;
name|u_int16_t
name|va_index
decl_stmt|;
union|union
block|{
struct|struct
block|{
name|cn_t
modifier|*
name|cn
decl_stmt|;
name|cn_t
modifier|*
name|cl
decl_stmt|;
name|u_long
name|cnt
decl_stmt|;
block|}
name|vrun
struct|;
name|caddr_t
name|datap
decl_stmt|;
name|struct
name|attr_name
modifier|*
name|name
decl_stmt|;
name|struct
name|attr_indexroot
modifier|*
name|iroot
decl_stmt|;
name|struct
name|attr_indexalloc
modifier|*
name|ialloc
decl_stmt|;
block|}
name|va_d
union|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|va_vruncn
value|va_d.vrun.cn
end_define

begin_define
define|#
directive|define
name|va_vruncl
value|va_d.vrun.cl
end_define

begin_define
define|#
directive|define
name|va_vruncnt
value|va_d.vrun.cnt
end_define

begin_define
define|#
directive|define
name|va_datap
value|va_d.datap
end_define

begin_define
define|#
directive|define
name|va_a_name
value|va_d.name
end_define

begin_define
define|#
directive|define
name|va_a_iroot
value|va_d.iroot
end_define

begin_define
define|#
directive|define
name|va_a_ialloc
value|va_d.ialloc
end_define

begin_struct_decl
struct_decl|struct
name|componentname
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|fnode
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|uio
struct_decl|;
end_struct_decl

begin_decl_stmt
name|int
name|ntfs_procfixups
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
name|u_int32_t
operator|,
name|caddr_t
operator|,
name|size_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_parserun
name|__P
argument_list|(
operator|(
name|cn_t
operator|*
operator|,
name|cn_t
operator|*
operator|,
name|u_int8_t
operator|*
operator|,
name|u_long
operator|,
name|u_long
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_runtocn
name|__P
argument_list|(
operator|(
name|cn_t
operator|*
operator|,
expr|struct
name|ntfsmount
operator|*
operator|,
name|u_int8_t
operator|*
operator|,
name|u_long
operator|,
name|cn_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_readntvattr_plain
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|ntnode
operator|*
operator|,
expr|struct
name|ntvattr
operator|*
operator|,
name|off_t
operator|,
name|size_t
operator|,
name|void
operator|*
operator|,
name|size_t
operator|*
operator|,
expr|struct
name|uio
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_readattr_plain
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|ntnode
operator|*
operator|,
name|u_int32_t
operator|,
name|char
operator|*
operator|,
name|off_t
operator|,
name|size_t
operator|,
name|void
operator|*
operator|,
name|size_t
operator|*
operator|,
expr|struct
name|uio
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_readattr
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|ntnode
operator|*
operator|,
name|u_int32_t
operator|,
name|char
operator|*
operator|,
name|off_t
operator|,
name|size_t
operator|,
name|void
operator|*
operator|,
expr|struct
name|uio
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_filesize
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|fnode
operator|*
operator|,
name|u_int64_t
operator|*
operator|,
name|u_int64_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_times
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|ntnode
operator|*
operator|,
name|ntfs_times_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|timespec
name|ntfs_nttimetounix
name|__P
argument_list|(
operator|(
name|u_int64_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_ntreaddir
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|fnode
operator|*
operator|,
name|u_int32_t
operator|,
expr|struct
name|attr_indexentry
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
name|ntfs_u28
name|__P
argument_list|(
operator|(
name|wchar
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_runtovrun
name|__P
argument_list|(
operator|(
name|cn_t
operator|*
operator|*
operator|,
name|cn_t
operator|*
operator|*
operator|,
name|u_long
operator|*
operator|,
name|u_int8_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_attrtontvattr
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|ntvattr
operator|*
operator|*
operator|,
expr|struct
name|attr
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ntfs_freentvattr
name|__P
argument_list|(
operator|(
expr|struct
name|ntvattr
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_loadntvattrs
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|vnode
operator|*
operator|,
name|caddr_t
operator|,
expr|struct
name|ntvattr
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|ntvattr
modifier|*
name|ntfs_findntvattr
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|ntnode
operator|*
operator|,
name|u_int32_t
operator|,
name|cn_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_ntlookupfile
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|vnode
operator|*
operator|,
expr|struct
name|componentname
operator|*
operator|,
expr|struct
name|vnode
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_isnamepermitted
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|attr_indexentry
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_ntvattrrele
name|__P
argument_list|(
operator|(
expr|struct
name|ntvattr
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_ntvattrget
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|ntnode
operator|*
operator|,
name|u_int32_t
operator|,
specifier|const
name|char
operator|*
operator|,
name|cn_t
operator|,
expr|struct
name|ntvattr
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_ntlookup
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
name|ino_t
operator|,
expr|struct
name|ntnode
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_ntget
name|__P
argument_list|(
operator|(
expr|struct
name|ntnode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ntfs_ntref
name|__P
argument_list|(
operator|(
expr|struct
name|ntnode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ntfs_ntrele
name|__P
argument_list|(
operator|(
expr|struct
name|ntnode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ntfs_ntput
name|__P
argument_list|(
operator|(
expr|struct
name|ntnode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_loadntnode
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|ntnode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_writentvattr_plain
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|ntnode
operator|*
operator|,
expr|struct
name|ntvattr
operator|*
operator|,
name|off_t
operator|,
name|size_t
operator|,
name|void
operator|*
operator|,
name|size_t
operator|*
operator|,
expr|struct
name|uio
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_writeattr_plain
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|ntnode
operator|*
operator|,
name|u_int32_t
operator|,
name|char
operator|*
operator|,
name|off_t
operator|,
name|size_t
operator|,
name|void
operator|*
operator|,
name|size_t
operator|*
operator|,
expr|struct
name|uio
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ntfs_toupper_init
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_toupper_use
name|__P
argument_list|(
operator|(
expr|struct
name|mount
operator|*
operator|,
expr|struct
name|ntfsmount
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ntfs_toupper_unuse
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ntfs_fget
name|__P
argument_list|(
operator|(
expr|struct
name|ntfsmount
operator|*
operator|,
expr|struct
name|ntnode
operator|*
operator|,
name|int
operator|,
name|char
operator|*
operator|,
expr|struct
name|fnode
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ntfs_frele
name|__P
argument_list|(
operator|(
expr|struct
name|fnode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

end_unit

