begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2003 Pawel Jakub Dawidek<pjd@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_G_STRIPE_H_
end_ifndef

begin_define
define|#
directive|define
name|_G_STRIPE_H_
end_define

begin_include
include|#
directive|include
file|<sys/endian.h>
end_include

begin_define
define|#
directive|define
name|G_STRIPE_CLASS_NAME
value|"STRIPE"
end_define

begin_define
define|#
directive|define
name|G_STRIPE_MAGIC
value|"GEOM::STRIPE"
end_define

begin_define
define|#
directive|define
name|G_STRIPE_VERSION
value|1
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|_KERNEL
end_ifdef

begin_define
define|#
directive|define
name|G_STRIPE_TYPE_MANUAL
value|0
end_define

begin_define
define|#
directive|define
name|G_STRIPE_TYPE_AUTOMATIC
value|1
end_define

begin_define
define|#
directive|define
name|G_STRIPE_DEBUG
parameter_list|(
name|lvl
parameter_list|,
modifier|...
parameter_list|)
value|do {				\ 	if (g_stripe_debug>= (lvl)) {					\ 		printf("GEOM_STRIPE");					\ 		if (g_stripe_debug> 0)					\ 			printf("[%u]", lvl);				\ 		printf(": ");						\ 		printf(__VA_ARGS__);					\ 		printf("\n");						\ 	}								\ } while (0)
end_define

begin_define
define|#
directive|define
name|G_STRIPE_LOGREQ
parameter_list|(
name|bp
parameter_list|,
modifier|...
parameter_list|)
value|do {				\ 	if (g_stripe_debug>= 2) {					\ 		printf("GEOM_STRIPE[2]: ");				\ 		printf(__VA_ARGS__);					\ 		printf(" ");						\ 		g_print_bio(bp);					\ 		printf("\n");						\ 	}								\ } while (0)
end_define

begin_struct
struct|struct
name|g_stripe_softc
block|{
name|u_int
name|sc_type
decl_stmt|;
comment|/* provider type */
name|struct
name|g_geom
modifier|*
name|sc_geom
decl_stmt|;
name|struct
name|g_provider
modifier|*
name|sc_provider
decl_stmt|;
name|char
name|sc_name
index|[
literal|16
index|]
decl_stmt|;
comment|/* stripe name */
name|uint32_t
name|sc_id
decl_stmt|;
comment|/* stripe unique ID */
name|struct
name|g_consumer
modifier|*
modifier|*
name|sc_disks
decl_stmt|;
name|uint16_t
name|sc_ndisks
decl_stmt|;
name|uint32_t
name|sc_stripesize
decl_stmt|;
name|uint32_t
name|sc_stripebits
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _KERNEL */
end_comment

begin_struct
struct|struct
name|g_stripe_metadata
block|{
name|char
name|md_magic
index|[
literal|16
index|]
decl_stmt|;
comment|/* Magic value. */
name|uint32_t
name|md_version
decl_stmt|;
comment|/* Version number. */
name|char
name|md_name
index|[
literal|16
index|]
decl_stmt|;
comment|/* Stripe name. */
name|uint32_t
name|md_id
decl_stmt|;
comment|/* Unique ID. */
name|uint16_t
name|md_no
decl_stmt|;
comment|/* Disk number. */
name|uint16_t
name|md_all
decl_stmt|;
comment|/* Number of all disks. */
name|uint32_t
name|md_stripesize
decl_stmt|;
comment|/* Stripe size. */
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|stripe_metadata_encode
parameter_list|(
specifier|const
name|struct
name|g_stripe_metadata
modifier|*
name|md
parameter_list|,
name|u_char
modifier|*
name|data
parameter_list|)
block|{
name|bcopy
argument_list|(
name|md
operator|->
name|md_magic
argument_list|,
name|data
argument_list|,
sizeof|sizeof
argument_list|(
name|md
operator|->
name|md_magic
argument_list|)
argument_list|)
expr_stmt|;
name|le32enc
argument_list|(
name|data
operator|+
literal|16
argument_list|,
name|md
operator|->
name|md_version
argument_list|)
expr_stmt|;
name|bcopy
argument_list|(
name|md
operator|->
name|md_name
argument_list|,
name|data
operator|+
literal|20
argument_list|,
sizeof|sizeof
argument_list|(
name|md
operator|->
name|md_name
argument_list|)
argument_list|)
expr_stmt|;
name|le32enc
argument_list|(
name|data
operator|+
literal|36
argument_list|,
name|md
operator|->
name|md_id
argument_list|)
expr_stmt|;
name|le16enc
argument_list|(
name|data
operator|+
literal|40
argument_list|,
name|md
operator|->
name|md_no
argument_list|)
expr_stmt|;
name|le16enc
argument_list|(
name|data
operator|+
literal|42
argument_list|,
name|md
operator|->
name|md_all
argument_list|)
expr_stmt|;
name|le32enc
argument_list|(
name|data
operator|+
literal|44
argument_list|,
name|md
operator|->
name|md_stripesize
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|stripe_metadata_decode
parameter_list|(
specifier|const
name|u_char
modifier|*
name|data
parameter_list|,
name|struct
name|g_stripe_metadata
modifier|*
name|md
parameter_list|)
block|{
name|bcopy
argument_list|(
name|data
argument_list|,
name|md
operator|->
name|md_magic
argument_list|,
sizeof|sizeof
argument_list|(
name|md
operator|->
name|md_magic
argument_list|)
argument_list|)
expr_stmt|;
name|md
operator|->
name|md_version
operator|=
name|le32dec
argument_list|(
name|data
operator|+
literal|16
argument_list|)
expr_stmt|;
name|bcopy
argument_list|(
name|data
operator|+
literal|20
argument_list|,
name|md
operator|->
name|md_name
argument_list|,
sizeof|sizeof
argument_list|(
name|md
operator|->
name|md_name
argument_list|)
argument_list|)
expr_stmt|;
name|md
operator|->
name|md_id
operator|=
name|le32dec
argument_list|(
name|data
operator|+
literal|36
argument_list|)
expr_stmt|;
name|md
operator|->
name|md_no
operator|=
name|le16dec
argument_list|(
name|data
operator|+
literal|40
argument_list|)
expr_stmt|;
name|md
operator|->
name|md_all
operator|=
name|le16dec
argument_list|(
name|data
operator|+
literal|42
argument_list|)
expr_stmt|;
name|md
operator|->
name|md_stripesize
operator|=
name|le32dec
argument_list|(
name|data
operator|+
literal|44
argument_list|)
expr_stmt|;
block|}
end_function

begin_ifndef
ifndef|#
directive|ifndef
name|BITCOUNT
end_ifndef

begin_define
define|#
directive|define
name|BITCOUNT
parameter_list|(
name|x
parameter_list|)
value|(((BX_(x) + (BX_(x)>> 4))& 0x0F0F0F0F) % 255)
end_define

begin_define
define|#
directive|define
name|BX_
parameter_list|(
name|x
parameter_list|)
value|((x) - (((x)>> 1)& 0x77777777) -		\ 			 (((x)>> 2)& 0x33333333) - (((x)>> 3)& 0x11111111))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _G_STRIPE_H_ */
end_comment

end_unit

