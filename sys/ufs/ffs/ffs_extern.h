begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$NetBSD: ffs_extern.h,v 1.40 2004/06/04 07:43:56 he Exp $	*/
end_comment

begin_comment
comment|/*-  * Copyright (c) 1991, 1993, 1994  *	The Regents of the University of California.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	@(#)ffs_extern.h	8.6 (Berkeley) 3/30/95  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_UFS_FFS_FFS_EXTERN_H_
end_ifndef

begin_define
define|#
directive|define
name|_UFS_FFS_FFS_EXTERN_H_
end_define

begin_comment
comment|/*  * Sysctl values for the fast filesystem.  */
end_comment

begin_define
define|#
directive|define
name|FFS_CLUSTERREAD
value|1
end_define

begin_comment
comment|/* cluster reading enabled */
end_comment

begin_define
define|#
directive|define
name|FFS_CLUSTERWRITE
value|2
end_define

begin_comment
comment|/* cluster writing enabled */
end_comment

begin_define
define|#
directive|define
name|FFS_REALLOCBLKS
value|3
end_define

begin_comment
comment|/* block reallocation enabled */
end_comment

begin_define
define|#
directive|define
name|FFS_ASYNCFREE
value|4
end_define

begin_comment
comment|/* asynchronous block freeing enabled */
end_comment

begin_define
define|#
directive|define
name|FFS_LOG_CHANGEOPT
value|5
end_define

begin_comment
comment|/* log optimalization strategy change */
end_comment

begin_define
define|#
directive|define
name|FFS_MAXID
value|6
end_define

begin_comment
comment|/* number of valid ffs ids */
end_comment

begin_define
define|#
directive|define
name|FFS_NAMES
value|{ \ 	{ 0, 0 }, \ 	{ "doclusterread", CTLTYPE_INT }, \ 	{ "doclusterwrite", CTLTYPE_INT }, \ 	{ "doreallocblks", CTLTYPE_INT }, \ 	{ "doasyncfree", CTLTYPE_INT }, \ 	{ "log_changeopt", CTLTYPE_INT }, \ }
end_define

begin_struct_decl
struct_decl|struct
name|buf
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|fid
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|fs
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|inode
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ufs1_dinode
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ufs2_dinode
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|mount
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|nameidata
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|proc
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|statvfs
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|timeval
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|timespec
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ucred
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ufsmount
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|uio
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|vnode
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|mbuf
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|cg
struct_decl|;
end_struct_decl

begin_decl_stmt
specifier|extern
name|struct
name|pool
name|ffs_inode_pool
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* memory pool for inodes */
end_comment

begin_decl_stmt
specifier|extern
name|struct
name|pool
name|ffs_dinode1_pool
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* memory pool for UFS1 dinodes */
end_comment

begin_decl_stmt
specifier|extern
name|struct
name|pool
name|ffs_dinode2_pool
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* memory pool for UFS2 dinodes */
end_comment

begin_decl_stmt
name|__BEGIN_DECLS
comment|/* ffs_alloc.c */
name|int
name|ffs_alloc
name|__P
argument_list|(
operator|(
expr|struct
name|inode
operator|*
operator|,
name|daddr_t
operator|,
name|daddr_t
operator|,
name|int
operator|,
expr|struct
name|ucred
operator|*
operator|,
name|daddr_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_realloccg
name|__P
argument_list|(
operator|(
expr|struct
name|inode
operator|*
operator|,
name|daddr_t
operator|,
name|daddr_t
operator|,
name|int
operator|,
name|int
operator|,
expr|struct
name|ucred
operator|*
operator|,
expr|struct
name|buf
operator|*
operator|*
operator|,
name|daddr_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_reallocblks
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_valloc
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|daddr_t
name|ffs_blkpref_ufs1
name|__P
argument_list|(
operator|(
expr|struct
name|inode
operator|*
operator|,
name|daddr_t
operator|,
name|int
operator|,
name|int32_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|daddr_t
name|ffs_blkpref_ufs2
name|__P
argument_list|(
operator|(
expr|struct
name|inode
operator|*
operator|,
name|daddr_t
operator|,
name|int
operator|,
name|int64_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_blkfree
name|__P
argument_list|(
operator|(
expr|struct
name|fs
operator|*
operator|,
expr|struct
name|vnode
operator|*
operator|,
name|daddr_t
operator|,
name|long
operator|,
name|ino_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_vfree
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_clusteracct
name|__P
argument_list|(
operator|(
expr|struct
name|fs
operator|*
operator|,
expr|struct
name|cg
operator|*
operator|,
name|int32_t
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_checkfreefile
name|__P
argument_list|(
operator|(
expr|struct
name|fs
operator|*
operator|,
expr|struct
name|vnode
operator|*
operator|,
name|ino_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* ffs_balloc.c */
end_comment

begin_decl_stmt
name|int
name|ffs_balloc
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* ffs_bswap.c */
end_comment

begin_decl_stmt
name|void
name|ffs_sb_swap
name|__P
argument_list|(
operator|(
expr|struct
name|fs
operator|*
operator|,
expr|struct
name|fs
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_dinode1_swap
name|__P
argument_list|(
operator|(
expr|struct
name|ufs1_dinode
operator|*
operator|,
expr|struct
name|ufs1_dinode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_dinode2_swap
name|__P
argument_list|(
operator|(
expr|struct
name|ufs2_dinode
operator|*
operator|,
expr|struct
name|ufs2_dinode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_csum_swap
name|__P
argument_list|(
operator|(
expr|struct
name|csum
operator|*
operator|,
expr|struct
name|csum
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_csumtotal_swap
name|__P
argument_list|(
operator|(
expr|struct
name|csum_total
operator|*
operator|,
expr|struct
name|csum_total
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_cg_swap
name|__P
argument_list|(
operator|(
expr|struct
name|cg
operator|*
operator|,
expr|struct
name|cg
operator|*
operator|,
expr|struct
name|fs
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* ffs_inode.c */
end_comment

begin_decl_stmt
name|int
name|ffs_update
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_truncate
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* ffs_subr.c */
end_comment

begin_decl_stmt
name|void
name|ffs_load_inode
name|__P
argument_list|(
operator|(
expr|struct
name|buf
operator|*
operator|,
expr|struct
name|inode
operator|*
operator|,
expr|struct
name|fs
operator|*
operator|,
name|ino_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_blkatoff
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_freefile
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_fragacct
name|__P
argument_list|(
operator|(
expr|struct
name|fs
operator|*
operator|,
name|int
operator|,
name|int32_t
index|[]
operator|,
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|DIAGNOSTIC
end_ifdef

begin_decl_stmt
name|void
name|ffs_checkoverlap
name|__P
argument_list|(
operator|(
expr|struct
name|buf
operator|*
operator|,
expr|struct
name|inode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|int
name|ffs_isblock
name|__P
argument_list|(
operator|(
expr|struct
name|fs
operator|*
operator|,
name|u_char
operator|*
operator|,
name|int32_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_isfreeblock
name|__P
argument_list|(
operator|(
expr|struct
name|fs
operator|*
operator|,
name|u_char
operator|*
operator|,
name|int32_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_clrblock
name|__P
argument_list|(
operator|(
expr|struct
name|fs
operator|*
operator|,
name|u_char
operator|*
operator|,
name|int32_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_setblock
name|__P
argument_list|(
operator|(
expr|struct
name|fs
operator|*
operator|,
name|u_char
operator|*
operator|,
name|int32_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* ffs_vfsops.c */
end_comment

begin_decl_stmt
name|void
name|ffs_init
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_reinit
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_done
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_mountroot
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_mount
name|__P
argument_list|(
operator|(
expr|struct
name|mount
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
name|void
operator|*
operator|,
expr|struct
name|nameidata
operator|*
operator|,
expr|struct
name|proc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_reload
name|__P
argument_list|(
operator|(
expr|struct
name|mount
operator|*
operator|,
expr|struct
name|ucred
operator|*
operator|,
expr|struct
name|proc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_mountfs
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
operator|,
expr|struct
name|mount
operator|*
operator|,
expr|struct
name|proc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_unmount
name|__P
argument_list|(
operator|(
expr|struct
name|mount
operator|*
operator|,
name|int
operator|,
expr|struct
name|proc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_flushfiles
name|__P
argument_list|(
operator|(
expr|struct
name|mount
operator|*
operator|,
name|int
operator|,
expr|struct
name|proc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_statvfs
name|__P
argument_list|(
operator|(
expr|struct
name|mount
operator|*
operator|,
expr|struct
name|statvfs
operator|*
operator|,
expr|struct
name|proc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_sync
name|__P
argument_list|(
operator|(
expr|struct
name|mount
operator|*
operator|,
name|int
operator|,
expr|struct
name|ucred
operator|*
operator|,
expr|struct
name|proc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_vget
name|__P
argument_list|(
operator|(
expr|struct
name|mount
operator|*
operator|,
name|ino_t
operator|,
expr|struct
name|vnode
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_fhtovp
name|__P
argument_list|(
operator|(
expr|struct
name|mount
operator|*
operator|,
expr|struct
name|fid
operator|*
operator|,
expr|struct
name|vnode
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_vptofh
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
operator|,
expr|struct
name|fid
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_sbupdate
name|__P
argument_list|(
operator|(
expr|struct
name|ufsmount
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_cgupdate
name|__P
argument_list|(
operator|(
expr|struct
name|ufsmount
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* ffs_appleufs.c */
end_comment

begin_decl_stmt
name|u_int16_t
name|ffs_appleufs_cksum
name|__P
argument_list|(
operator|(
specifier|const
expr|struct
name|appleufslabel
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_appleufs_validate
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
expr|struct
name|appleufslabel
operator|*
operator|,
expr|struct
name|appleufslabel
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_appleufs_set
name|__P
argument_list|(
operator|(
expr|struct
name|appleufslabel
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
name|time_t
operator|,
name|uint64_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* ffs_vnops.c */
end_comment

begin_decl_stmt
name|int
name|ffs_read
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_write
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_fsync
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_reclaim
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_getpages
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ffs_putpages
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|ffs_gop_size
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
operator|,
name|off_t
operator|,
name|off_t
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|SYSCTL_SETUP_PROTO
end_ifdef

begin_expr_stmt
name|SYSCTL_SETUP_PROTO
argument_list|(
name|sysctl_vfs_ffs_setup
argument_list|)
expr_stmt|;
end_expr_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* SYSCTL_SETUP_PROTO */
end_comment

begin_function_decl
name|__END_DECLS
comment|/*  * Snapshot function prototypes.  */
name|int
name|ffs_snapblkfree
parameter_list|(
name|struct
name|fs
modifier|*
parameter_list|,
name|struct
name|vnode
modifier|*
parameter_list|,
name|daddr_t
parameter_list|,
name|long
parameter_list|,
name|ino_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_snapremove
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ffs_snapshot
parameter_list|(
name|struct
name|mount
modifier|*
parameter_list|,
name|struct
name|vnode
modifier|*
parameter_list|,
name|struct
name|timespec
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_snapshot_mount
parameter_list|(
name|struct
name|mount
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_snapshot_unmount
parameter_list|(
name|struct
name|mount
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_snapgone
parameter_list|(
name|struct
name|inode
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Soft dependency function prototypes.  */
end_comment

begin_decl_stmt
name|void
name|softdep_initialize
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|softdep_reinitialize
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|softdep_mount
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
operator|,
expr|struct
name|mount
operator|*
operator|,
expr|struct
name|fs
operator|*
operator|,
expr|struct
name|ucred
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|softdep_flushworklist
name|__P
argument_list|(
operator|(
expr|struct
name|mount
operator|*
operator|,
name|int
operator|*
operator|,
expr|struct
name|proc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|softdep_flushfiles
name|__P
argument_list|(
operator|(
expr|struct
name|mount
operator|*
operator|,
name|int
operator|,
expr|struct
name|proc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|softdep_update_inodeblock
name|__P
argument_list|(
operator|(
expr|struct
name|inode
operator|*
operator|,
expr|struct
name|buf
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|softdep_load_inodeblock
name|__P
argument_list|(
operator|(
expr|struct
name|inode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|softdep_freefile
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|softdep_setup_freeblocks
name|__P
argument_list|(
operator|(
expr|struct
name|inode
operator|*
operator|,
name|off_t
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|softdep_setup_inomapdep
name|__P
argument_list|(
operator|(
expr|struct
name|buf
operator|*
operator|,
expr|struct
name|inode
operator|*
operator|,
name|ino_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|softdep_setup_blkmapdep
name|__P
argument_list|(
operator|(
expr|struct
name|buf
operator|*
operator|,
expr|struct
name|fs
operator|*
operator|,
name|daddr_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|softdep_setup_allocdirect
name|__P
argument_list|(
operator|(
expr|struct
name|inode
operator|*
operator|,
name|daddr_t
operator|,
name|daddr_t
operator|,
name|daddr_t
operator|,
name|long
operator|,
name|long
operator|,
expr|struct
name|buf
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|softdep_setup_allocindir_meta
name|__P
argument_list|(
operator|(
expr|struct
name|buf
operator|*
operator|,
expr|struct
name|inode
operator|*
operator|,
expr|struct
name|buf
operator|*
operator|,
name|int
operator|,
name|daddr_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|softdep_setup_allocindir_page
name|__P
argument_list|(
operator|(
expr|struct
name|inode
operator|*
operator|,
name|daddr_t
operator|,
expr|struct
name|buf
operator|*
operator|,
name|int
operator|,
name|daddr_t
operator|,
name|daddr_t
operator|,
expr|struct
name|buf
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|softdep_fsync_mountdev
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|softdep_sync_metadata
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_extern
extern|extern int (**ffs_vnodeop_p
end_extern

begin_expr_stmt
unit|)
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_extern
extern|extern int (**ffs_specop_p
end_extern

begin_expr_stmt
unit|)
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_extern
extern|extern int (**ffs_fifoop_p
end_extern

begin_expr_stmt
unit|)
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_UFS_FFS_FFS_EXTERN_H_ */
end_comment

end_unit

