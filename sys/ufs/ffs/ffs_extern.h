begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1991, 1993, 1994  *	The Regents of the University of California.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by the University of  *	California, Berkeley and its contributors.  * 4. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	@(#)ffs_extern.h	8.6 (Berkeley) 3/30/95  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_UFS_FFS_EXTERN_H
end_ifndef

begin_define
define|#
directive|define
name|_UFS_FFS_EXTERN_H
end_define

begin_struct_decl
struct_decl|struct
name|buf
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|cg
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|fid
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|fs
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|inode
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|malloc_type
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|mount
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|thread
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|sockaddr
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|statfs
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ucred
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|vnode
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|vop_fsync_args
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|vop_reallocblks_args
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|vop_copyonwrite_args
struct_decl|;
end_struct_decl

begin_function_decl
name|int
name|ffs_alloc
parameter_list|(
name|struct
name|inode
modifier|*
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|int
parameter_list|,
name|struct
name|ucred
modifier|*
parameter_list|,
name|ufs2_daddr_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ffs_balloc_ufs1
parameter_list|(
name|struct
name|vnode
modifier|*
name|a_vp
parameter_list|,
name|off_t
name|a_startoffset
parameter_list|,
name|int
name|a_size
parameter_list|,
name|struct
name|ucred
modifier|*
name|a_cred
parameter_list|,
name|int
name|a_flags
parameter_list|,
name|struct
name|buf
modifier|*
modifier|*
name|a_bpp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ffs_balloc_ufs2
parameter_list|(
name|struct
name|vnode
modifier|*
name|a_vp
parameter_list|,
name|off_t
name|a_startoffset
parameter_list|,
name|int
name|a_size
parameter_list|,
name|struct
name|ucred
modifier|*
name|a_cred
parameter_list|,
name|int
name|a_flags
parameter_list|,
name|struct
name|buf
modifier|*
modifier|*
name|a_bpp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ffs_blkatoff
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|off_t
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|struct
name|buf
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_blkfree
parameter_list|(
name|struct
name|fs
modifier|*
parameter_list|,
name|struct
name|vnode
modifier|*
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|long
parameter_list|,
name|ino_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ufs2_daddr_t
name|ffs_blkpref_ufs1
parameter_list|(
name|struct
name|inode
modifier|*
parameter_list|,
name|ufs_lbn_t
parameter_list|,
name|int
parameter_list|,
name|ufs1_daddr_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ufs2_daddr_t
name|ffs_blkpref_ufs2
parameter_list|(
name|struct
name|inode
modifier|*
parameter_list|,
name|ufs_lbn_t
parameter_list|,
name|int
parameter_list|,
name|ufs2_daddr_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_clrblock
parameter_list|(
name|struct
name|fs
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|ufs1_daddr_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_clusteracct
parameter_list|(
name|struct
name|fs
modifier|*
parameter_list|,
name|struct
name|cg
modifier|*
parameter_list|,
name|ufs1_daddr_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|vfs_fhtovp_t
name|ffs_fhtovp
decl_stmt|;
end_decl_stmt

begin_function_decl
name|int
name|ffs_flushfiles
parameter_list|(
name|struct
name|mount
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|thread
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_fragacct
parameter_list|(
name|struct
name|fs
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int32_t
index|[]
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ffs_freefile
parameter_list|(
name|struct
name|fs
modifier|*
parameter_list|,
name|struct
name|vnode
modifier|*
parameter_list|,
name|ino_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ffs_isblock
parameter_list|(
name|struct
name|fs
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|ufs1_daddr_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_load_inode
parameter_list|(
name|struct
name|buf
modifier|*
parameter_list|,
name|struct
name|inode
modifier|*
parameter_list|,
name|struct
name|malloc_type
modifier|*
parameter_list|,
name|struct
name|fs
modifier|*
parameter_list|,
name|ino_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ffs_mountroot
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|vfs_mount_t
name|ffs_mount
decl_stmt|;
end_decl_stmt

begin_function_decl
name|int
name|ffs_reallocblks
parameter_list|(
name|struct
name|vop_reallocblks_args
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ffs_realloccg
parameter_list|(
name|struct
name|inode
modifier|*
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|struct
name|ucred
modifier|*
parameter_list|,
name|struct
name|buf
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_setblock
parameter_list|(
name|struct
name|fs
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|ufs1_daddr_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ffs_snapblkfree
parameter_list|(
name|struct
name|fs
modifier|*
parameter_list|,
name|struct
name|vnode
modifier|*
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|long
parameter_list|,
name|ino_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_snapremove
parameter_list|(
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ffs_snapshot
parameter_list|(
name|struct
name|mount
modifier|*
name|mp
parameter_list|,
name|char
modifier|*
name|snapfile
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_snapshot_mount
parameter_list|(
name|struct
name|mount
modifier|*
name|mp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ffs_snapshot_unmount
parameter_list|(
name|struct
name|mount
modifier|*
name|mp
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|vfs_statfs_t
name|ffs_statfs
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|vfs_sync_t
name|ffs_sync
decl_stmt|;
end_decl_stmt

begin_function_decl
name|int
name|ffs_truncate
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|off_t
parameter_list|,
name|int
parameter_list|,
name|struct
name|ucred
modifier|*
parameter_list|,
name|struct
name|thread
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|vfs_unmount_t
name|ffs_unmount
decl_stmt|;
end_decl_stmt

begin_function_decl
name|int
name|ffs_update
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ffs_valloc
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|ucred
modifier|*
parameter_list|,
name|struct
name|vnode
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ffs_vfree
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|ino_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|vfs_vget_t
name|ffs_vget
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|vfs_vptofh_t
name|ffs_vptofh
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|vop_t
modifier|*
modifier|*
name|ffs_vnodeop_p
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|vop_t
modifier|*
modifier|*
name|ffs_specop_p
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|vop_t
modifier|*
modifier|*
name|ffs_fifoop_p
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Soft update function prototypes.  */
end_comment

begin_function_decl
name|void
name|softdep_initialize
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|softdep_uninitialize
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|softdep_mount
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|struct
name|mount
modifier|*
parameter_list|,
name|struct
name|fs
modifier|*
parameter_list|,
name|struct
name|ucred
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|softdep_flushworklist
parameter_list|(
name|struct
name|mount
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|struct
name|thread
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|softdep_flushfiles
parameter_list|(
name|struct
name|mount
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|thread
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|softdep_update_inodeblock
parameter_list|(
name|struct
name|inode
modifier|*
parameter_list|,
name|struct
name|buf
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|softdep_load_inodeblock
parameter_list|(
name|struct
name|inode
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|softdep_freefile
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|ino_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|softdep_request_cleanup
parameter_list|(
name|struct
name|fs
modifier|*
parameter_list|,
name|struct
name|vnode
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|softdep_setup_freeblocks
parameter_list|(
name|struct
name|inode
modifier|*
parameter_list|,
name|off_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|softdep_setup_inomapdep
parameter_list|(
name|struct
name|buf
modifier|*
parameter_list|,
name|struct
name|inode
modifier|*
parameter_list|,
name|ino_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|softdep_setup_blkmapdep
parameter_list|(
name|struct
name|buf
modifier|*
parameter_list|,
name|struct
name|fs
modifier|*
parameter_list|,
name|ufs2_daddr_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|softdep_setup_allocdirect
parameter_list|(
name|struct
name|inode
modifier|*
parameter_list|,
name|ufs_lbn_t
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|long
parameter_list|,
name|long
parameter_list|,
name|struct
name|buf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|softdep_setup_allocext
parameter_list|(
name|struct
name|inode
modifier|*
parameter_list|,
name|ufs_lbn_t
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|long
parameter_list|,
name|long
parameter_list|,
name|struct
name|buf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|softdep_setup_allocindir_meta
parameter_list|(
name|struct
name|buf
modifier|*
parameter_list|,
name|struct
name|inode
modifier|*
parameter_list|,
name|struct
name|buf
modifier|*
parameter_list|,
name|int
parameter_list|,
name|ufs2_daddr_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|softdep_setup_allocindir_page
parameter_list|(
name|struct
name|inode
modifier|*
parameter_list|,
name|ufs_lbn_t
parameter_list|,
name|struct
name|buf
modifier|*
parameter_list|,
name|int
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|ufs2_daddr_t
parameter_list|,
name|struct
name|buf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|softdep_fsync_mountdev
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|softdep_sync_metadata
parameter_list|(
name|struct
name|vop_fsync_args
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* XXX incorrectly moved to mount.h - should be indirect function */
end_comment

begin_if
if|#
directive|if
literal|0
end_if

begin_endif
unit|int	softdep_fsync(struct vnode *vp);
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_UFS_FFS_EXTERN_H */
end_comment

end_unit

