begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2008 Ed Schouten<ed@FreeBSD.org>  * All rights reserved.  *  * Portions of this software were developed under sponsorship from Snow  * B.V., the Netherlands.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_TTYQUEUE_H_
end_ifndef

begin_define
define|#
directive|define
name|_SYS_TTYQUEUE_H_
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_TTY_H_
end_ifndef

begin_error
error|#
directive|error
literal|"can only be included through<sys/tty.h>"
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_SYS_TTY_H_ */
end_comment

begin_struct_decl
struct_decl|struct
name|tty
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ttyinq_block
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ttyoutq_block
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|uio
struct_decl|;
end_struct_decl

begin_comment
comment|/* Data input queue. */
end_comment

begin_struct
struct|struct
name|ttyinq
block|{
name|TAILQ_HEAD
argument_list|(
argument|ttyinq_bhead
argument_list|,
argument|ttyinq_block
argument_list|)
name|ti_list
expr_stmt|;
name|struct
name|ttyinq_block
modifier|*
name|ti_startblock
decl_stmt|;
name|struct
name|ttyinq_block
modifier|*
name|ti_reprintblock
decl_stmt|;
name|struct
name|ttyinq_block
modifier|*
name|ti_lastblock
decl_stmt|;
name|unsigned
name|int
name|ti_begin
decl_stmt|;
name|unsigned
name|int
name|ti_linestart
decl_stmt|;
name|unsigned
name|int
name|ti_reprint
decl_stmt|;
name|unsigned
name|int
name|ti_end
decl_stmt|;
name|unsigned
name|int
name|ti_nblocks
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|TTYINQ_DATASIZE
value|128
end_define

begin_comment
comment|/* Data output queue. */
end_comment

begin_struct
struct|struct
name|ttyoutq
block|{
name|STAILQ_HEAD
argument_list|(
argument_list|,
argument|ttyoutq_block
argument_list|)
name|to_list
expr_stmt|;
name|struct
name|ttyoutq_block
modifier|*
name|to_lastblock
decl_stmt|;
name|unsigned
name|int
name|to_begin
decl_stmt|;
name|unsigned
name|int
name|to_end
decl_stmt|;
name|unsigned
name|int
name|to_nblocks
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|TTYOUTQ_DATASIZE
value|(256 - sizeof(STAILQ_ENTRY(ttyoutq_block)))
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|_KERNEL
end_ifdef

begin_comment
comment|/* Input queue handling routines. */
end_comment

begin_function_decl
name|void
name|ttyinq_setsize
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|,
name|struct
name|tty
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ttyinq_read_uio
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|,
name|struct
name|tty
modifier|*
parameter_list|,
name|struct
name|uio
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|ttyinq_write
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ttyinq_write_nofrag
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ttyinq_canonicalize
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|ttyinq_findchar
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ttyinq_flush
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ttyinq_peekchar
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ttyinq_unputchar
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ttyinq_reprintpos_set
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ttyinq_reprintpos_reset
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
name|__inline
name|size_t
name|ttyinq_getsize
parameter_list|(
name|struct
name|ttyinq
modifier|*
name|ti
parameter_list|)
block|{
return|return
operator|(
name|ti
operator|->
name|ti_nblocks
operator|*
name|TTYINQ_DATASIZE
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|size_t
name|ttyinq_bytesleft
parameter_list|(
name|struct
name|ttyinq
modifier|*
name|ti
parameter_list|)
block|{
name|size_t
name|len
decl_stmt|;
comment|/* Make sure the usage never exceeds the length. */
name|len
operator|=
name|ti
operator|->
name|ti_nblocks
operator|*
name|TTYINQ_DATASIZE
expr_stmt|;
name|MPASS
argument_list|(
name|len
operator|>=
name|ti
operator|->
name|ti_end
argument_list|)
expr_stmt|;
return|return
operator|(
name|len
operator|-
name|ti
operator|->
name|ti_end
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|size_t
name|ttyinq_bytescanonicalized
parameter_list|(
name|struct
name|ttyinq
modifier|*
name|ti
parameter_list|)
block|{
name|MPASS
argument_list|(
name|ti
operator|->
name|ti_begin
operator|<=
name|ti
operator|->
name|ti_linestart
argument_list|)
expr_stmt|;
return|return
operator|(
name|ti
operator|->
name|ti_linestart
operator|-
name|ti
operator|->
name|ti_begin
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|size_t
name|ttyinq_bytesline
parameter_list|(
name|struct
name|ttyinq
modifier|*
name|ti
parameter_list|)
block|{
name|MPASS
argument_list|(
name|ti
operator|->
name|ti_linestart
operator|<=
name|ti
operator|->
name|ti_end
argument_list|)
expr_stmt|;
return|return
operator|(
name|ti
operator|->
name|ti_end
operator|-
name|ti
operator|->
name|ti_linestart
operator|)
return|;
block|}
end_function

begin_comment
comment|/* Input buffer iteration. */
end_comment

begin_typedef
typedef|typedef
name|void
name|ttyinq_line_iterator_t
parameter_list|(
name|void
modifier|*
parameter_list|,
name|char
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_typedef

begin_function_decl
name|void
name|ttyinq_line_iterate_from_linestart
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|,
name|ttyinq_line_iterator_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ttyinq_line_iterate_from_reprintpos
parameter_list|(
name|struct
name|ttyinq
modifier|*
parameter_list|,
name|ttyinq_line_iterator_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Output queue handling routines. */
end_comment

begin_function_decl
name|void
name|ttyoutq_flush
parameter_list|(
name|struct
name|ttyoutq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ttyoutq_setsize
parameter_list|(
name|struct
name|ttyoutq
modifier|*
parameter_list|,
name|struct
name|tty
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|ttyoutq_read
parameter_list|(
name|struct
name|ttyoutq
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ttyoutq_read_uio
parameter_list|(
name|struct
name|ttyoutq
modifier|*
parameter_list|,
name|struct
name|tty
modifier|*
parameter_list|,
name|struct
name|uio
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|ttyoutq_write
parameter_list|(
name|struct
name|ttyoutq
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ttyoutq_write_nofrag
parameter_list|(
name|struct
name|ttyoutq
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
name|__inline
name|size_t
name|ttyoutq_getsize
parameter_list|(
name|struct
name|ttyoutq
modifier|*
name|to
parameter_list|)
block|{
return|return
operator|(
name|to
operator|->
name|to_nblocks
operator|*
name|TTYOUTQ_DATASIZE
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|size_t
name|ttyoutq_bytesleft
parameter_list|(
name|struct
name|ttyoutq
modifier|*
name|to
parameter_list|)
block|{
name|size_t
name|len
decl_stmt|;
comment|/* Make sure the usage never exceeds the length. */
name|len
operator|=
name|to
operator|->
name|to_nblocks
operator|*
name|TTYOUTQ_DATASIZE
expr_stmt|;
name|MPASS
argument_list|(
name|len
operator|>=
name|to
operator|->
name|to_end
argument_list|)
expr_stmt|;
return|return
operator|(
name|len
operator|-
name|to
operator|->
name|to_end
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|size_t
name|ttyoutq_bytesused
parameter_list|(
name|struct
name|ttyoutq
modifier|*
name|to
parameter_list|)
block|{
return|return
operator|(
name|to
operator|->
name|to_end
operator|-
name|to
operator|->
name|to_begin
operator|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _KERNEL */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_SYS_TTYQUEUE_H_ */
end_comment

end_unit

