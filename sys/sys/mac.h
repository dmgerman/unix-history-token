begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1999, 2000, 2001, 2002 Robert N. M. Watson  * Copyright (c) 2001, 2002 Networks Associates Technology, Inc.  * All rights reserved.  *  * This software was developed by Robert Watson for the TrustedBSD Project.  *  * This software was developed for the FreeBSD Project in part by NAI Labs,  * the Security Research Division of Network Associates, Inc. under  * DARPA/SPAWAR contract N66001-01-C-8035 ("CBOSS"), as part of the DARPA  * CHATS research program.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. The names of the authors may not be used to endorse or promote  *    products derived from this software without specific prior written  *    permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_comment
comment|/*  * Userland/kernel interface for Mandatory Access Control.  *  * The POSIX.1e implementation page may be reached at:  * http://www.trustedbsd.org/  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_MAC_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_MAC_H
end_define

begin_include
include|#
directive|include
file|<sys/_label.h>
end_include

begin_ifndef
ifndef|#
directive|ifndef
name|_POSIX_MAC
end_ifndef

begin_define
define|#
directive|define
name|_POSIX_MAC
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * XXXMAC: The single MAC extended attribute will be deprecated once  * compound EA writes on a single target file can be performed cleanly  * with UFS2.  */
end_comment

begin_define
define|#
directive|define
name|FREEBSD_MAC_EXTATTR_NAME
value|"freebsd.mac"
end_define

begin_define
define|#
directive|define
name|FREEBSD_MAC_EXTATTR_NAMESPACE
value|EXTATTR_NAMESPACE_SYSTEM
end_define

begin_comment
comment|/*  * MAC framework-related constants and limits.  */
end_comment

begin_define
define|#
directive|define
name|MAC_MAX_POLICY_NAME
value|32
end_define

begin_comment
comment|/*  * XXXMAC: Per-policy structures will be moved from mac.h to per-policy  * include files once the revised user interface is available.  */
end_comment

begin_comment
comment|/*  * Structures and constants associated with a Biba Integrity policy.  * mac_biba represents a Biba label, with mb_type determining its properties,  * and mb_grade represents the hierarchal grade if valid for the current  * mb_type.  These structures will move to mac_biba.h once we have dymamic  * labels exposed to userland.  */
end_comment

begin_struct
struct|struct
name|mac_biba_element
block|{
name|u_short
name|mbe_type
decl_stmt|;
name|u_short
name|mbe_grade
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Biba labels consist of two components: a single label, and a label  * range.  Depending on the context, one or both may be used; the mb_flags  * field permits the provider to indicate what fields are intended for  * use.  */
end_comment

begin_struct
struct|struct
name|mac_biba
block|{
name|int
name|mb_flags
decl_stmt|;
name|struct
name|mac_biba_element
name|mb_single
decl_stmt|;
name|struct
name|mac_biba_element
name|mb_rangelow
decl_stmt|,
name|mb_rangehigh
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Structures and constants associated with a Multi-Level Security policy.  * mac_mls represents an MLS label, with mm_type determining its properties,  * and mm_level represents the hierarchal sensitivity level if valid for the  * current mm_type.  These structures will move to mac_mls.h once we have  * dynamic labels exposed to userland.  */
end_comment

begin_struct
struct|struct
name|mac_mls_element
block|{
name|u_short
name|mme_type
decl_stmt|;
name|u_short
name|mme_level
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * MLS labels consist of two components: a single label, and a label  * range.  Depending on the context, one or both may be used; the mb_flags  * field permits the provider to indicate what fields are intended for  * use.  */
end_comment

begin_struct
struct|struct
name|mac_mls
block|{
name|int
name|mm_flags
decl_stmt|;
name|struct
name|mac_mls_element
name|mm_single
decl_stmt|;
name|struct
name|mac_mls_element
name|mm_rangelow
decl_stmt|,
name|mm_rangehigh
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Structures and constants associated with a Type Enforcement policy.  * mac_te represents a Type Enforcement label.  */
end_comment

begin_define
define|#
directive|define
name|MAC_TE_TYPE_MAXLEN
value|32
end_define

begin_struct
struct|struct
name|mac_te
block|{
name|char
name|mt_type
index|[
name|MAC_TE_TYPE_MAXLEN
operator|+
literal|1
index|]
decl_stmt|;
comment|/* TE type */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mac_sebsd
block|{
name|uint32_t
name|ms_psid
decl_stmt|;
comment|/* persistent sid storage */
block|}
struct|;
end_struct

begin_comment
comment|/*  * Composite structures and constants which combine the various policy  * elements into common structures to be associated with subjects and  * objects.  */
end_comment

begin_struct
struct|struct
name|mac
block|{
name|int
name|m_macflags
decl_stmt|;
name|struct
name|mac_biba
name|m_biba
decl_stmt|;
name|struct
name|mac_mls
name|m_mls
decl_stmt|;
name|struct
name|mac_te
name|m_te
decl_stmt|;
name|struct
name|mac_sebsd
name|m_sebsd
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|mac
modifier|*
name|mac_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|MAC_FLAG_INITIALIZED
value|0x00000001
end_define

begin_comment
comment|/* Is initialized. */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_KERNEL
end_ifndef

begin_comment
comment|/*  * POSIX.1e functions visible in the application namespace.  */
end_comment

begin_function_decl
name|int
name|mac_dominate
parameter_list|(
specifier|const
name|mac_t
name|_labela
parameter_list|,
specifier|const
name|mac_t
name|_labelb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_equal
parameter_list|(
specifier|const
name|mac_t
name|labela
parameter_list|,
specifier|const
name|mac_t
name|_labelb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_free
parameter_list|(
name|void
modifier|*
name|_buf_p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|mac_t
name|mac_from_text
parameter_list|(
specifier|const
name|char
modifier|*
name|_text_p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|mac_t
name|mac_get_fd
parameter_list|(
name|int
name|_fildes
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|mac_t
name|mac_get_file
parameter_list|(
specifier|const
name|char
modifier|*
name|_path_p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|mac_t
name|mac_get_proc
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|mac_t
name|mac_glb
parameter_list|(
specifier|const
name|mac_t
name|_labela
parameter_list|,
specifier|const
name|mac_t
name|_labelb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|mac_t
name|mac_lub
parameter_list|(
specifier|const
name|mac_t
name|_labela
parameter_list|,
specifier|const
name|mac_t
name|_labelb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_set_fd
parameter_list|(
name|int
name|_fildes
parameter_list|,
specifier|const
name|mac_t
name|_label
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_set_file
parameter_list|(
specifier|const
name|char
modifier|*
name|_path_p
parameter_list|,
name|mac_t
name|_label
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_set_proc
parameter_list|(
specifier|const
name|mac_t
name|_label
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ssize_t
name|mac_size
parameter_list|(
name|mac_t
name|_label
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|mac_to_text
parameter_list|(
specifier|const
name|mac_t
name|_label
parameter_list|,
name|size_t
modifier|*
name|_len_p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_valid
parameter_list|(
specifier|const
name|mac_t
name|_label
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Extensions to POSIX.1e visible in the application namespace.  */
end_comment

begin_function_decl
name|int
name|mac_is_present_np
parameter_list|(
specifier|const
name|char
modifier|*
name|_policyname
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_syscall
parameter_list|(
specifier|const
name|char
modifier|*
name|_policyname
parameter_list|,
name|int
name|call
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * System calls wrapped by some POSIX.1e functions.  */
end_comment

begin_function_decl
name|int
name|__mac_get_fd
parameter_list|(
name|int
name|_fd
parameter_list|,
name|struct
name|mac
modifier|*
name|_mac_p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__mac_get_file
parameter_list|(
specifier|const
name|char
modifier|*
name|_path_p
parameter_list|,
name|struct
name|mac
modifier|*
name|_mac_p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__mac_get_proc
parameter_list|(
name|struct
name|mac
modifier|*
name|_mac_p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__mac_set_fd
parameter_list|(
name|int
name|fd
parameter_list|,
name|struct
name|mac
modifier|*
name|_mac_p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__mac_set_file
parameter_list|(
specifier|const
name|char
modifier|*
name|_path_p
parameter_list|,
name|struct
name|mac
modifier|*
name|_mac_p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__mac_set_proc
parameter_list|(
name|struct
name|mac
modifier|*
name|_mac_p
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* _KERNEL */
end_comment

begin_comment
comment|/*  * Kernel functions to manage and evaluate labels.  */
end_comment

begin_struct_decl
struct_decl|struct
name|bpf_d
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|componentname
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|devfs_dirent
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ifnet
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ifreq
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ipq
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|mbuf
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|mount
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|proc
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|sockaddr
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|socket
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|pipe
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|timespec
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ucred
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|uio
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|vattr
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|vnode
struct_decl|;
end_struct_decl

begin_include
include|#
directive|include
file|<sys/acl.h>
end_include

begin_comment
comment|/* XXX acl_type_t */
end_comment

begin_struct_decl
struct_decl|struct
name|vop_refreshlabel_args
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|vop_setlabel_args
struct_decl|;
end_struct_decl

begin_comment
comment|/*  * Label operations.  */
end_comment

begin_function_decl
name|void
name|mac_init_bpfdesc
parameter_list|(
name|struct
name|bpf_d
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_init_cred
parameter_list|(
name|struct
name|ucred
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_init_devfsdirent
parameter_list|(
name|struct
name|devfs_dirent
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_init_ifnet
parameter_list|(
name|struct
name|ifnet
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_init_ipq
parameter_list|(
name|struct
name|ipq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_init_socket
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_init_pipe
parameter_list|(
name|struct
name|pipe
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_init_mbuf
parameter_list|(
name|struct
name|mbuf
modifier|*
name|m
parameter_list|,
name|int
name|how
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_init_mount
parameter_list|(
name|struct
name|mount
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_init_vnode
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_destroy_bpfdesc
parameter_list|(
name|struct
name|bpf_d
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_destroy_cred
parameter_list|(
name|struct
name|ucred
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_destroy_devfsdirent
parameter_list|(
name|struct
name|devfs_dirent
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_destroy_ifnet
parameter_list|(
name|struct
name|ifnet
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_destroy_ipq
parameter_list|(
name|struct
name|ipq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_destroy_socket
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_destroy_pipe
parameter_list|(
name|struct
name|pipe
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_destroy_mbuf
parameter_list|(
name|struct
name|mbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_destroy_mount
parameter_list|(
name|struct
name|mount
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_destroy_vnode
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Labeling event operations: file system objects, and things that  * look a lot like file system objects.  */
end_comment

begin_function_decl
name|void
name|mac_create_devfs_device
parameter_list|(
name|dev_t
name|dev
parameter_list|,
name|struct
name|devfs_dirent
modifier|*
name|de
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_devfs_directory
parameter_list|(
name|char
modifier|*
name|dirname
parameter_list|,
name|int
name|dirnamelen
parameter_list|,
name|struct
name|devfs_dirent
modifier|*
name|de
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_devfs_vnode
parameter_list|(
name|struct
name|devfs_dirent
modifier|*
name|de
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_vnode
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|parent
parameter_list|,
name|struct
name|vnode
modifier|*
name|child
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_mount
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|mount
modifier|*
name|mp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_root_mount
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|mount
modifier|*
name|mp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_relabel_vnode
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|struct
name|label
modifier|*
name|newlabel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_update_devfsdirent
parameter_list|(
name|struct
name|devfs_dirent
modifier|*
name|de
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_update_procfsvnode
parameter_list|(
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|struct
name|ucred
modifier|*
name|cred
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_update_vnode_from_mount
parameter_list|(
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|struct
name|mount
modifier|*
name|mp
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Labeling event operations: IPC objects.  */
end_comment

begin_function_decl
name|void
name|mac_create_mbuf_from_socket
parameter_list|(
name|struct
name|socket
modifier|*
name|so
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_socket
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|socket
modifier|*
name|socket
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_socket_from_socket
parameter_list|(
name|struct
name|socket
modifier|*
name|oldsocket
parameter_list|,
name|struct
name|socket
modifier|*
name|newsocket
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_set_socket_peer_from_mbuf
parameter_list|(
name|struct
name|mbuf
modifier|*
name|mbuf
parameter_list|,
name|struct
name|socket
modifier|*
name|socket
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_set_socket_peer_from_socket
parameter_list|(
name|struct
name|socket
modifier|*
name|oldsocket
parameter_list|,
name|struct
name|socket
modifier|*
name|newsocket
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_pipe
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|pipe
modifier|*
name|pipe
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Labeling event operations: network objects.  */
end_comment

begin_function_decl
name|void
name|mac_create_bpfdesc
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|bpf_d
modifier|*
name|bpf_d
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_ifnet
parameter_list|(
name|struct
name|ifnet
modifier|*
name|ifp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_ipq
parameter_list|(
name|struct
name|mbuf
modifier|*
name|fragment
parameter_list|,
name|struct
name|ipq
modifier|*
name|ipq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_datagram_from_ipq
parameter_list|(
name|struct
name|ipq
modifier|*
name|ipq
parameter_list|,
name|struct
name|mbuf
modifier|*
name|datagram
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_fragment
parameter_list|(
name|struct
name|mbuf
modifier|*
name|datagram
parameter_list|,
name|struct
name|mbuf
modifier|*
name|fragment
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_mbuf_from_mbuf
parameter_list|(
name|struct
name|mbuf
modifier|*
name|oldmbuf
parameter_list|,
name|struct
name|mbuf
modifier|*
name|newmbuf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_mbuf_linklayer
parameter_list|(
name|struct
name|ifnet
modifier|*
name|ifnet
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_mbuf_from_bpfdesc
parameter_list|(
name|struct
name|bpf_d
modifier|*
name|bpf_d
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_mbuf_from_ifnet
parameter_list|(
name|struct
name|ifnet
modifier|*
name|ifnet
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_mbuf_multicast_encap
parameter_list|(
name|struct
name|mbuf
modifier|*
name|oldmbuf
parameter_list|,
name|struct
name|ifnet
modifier|*
name|ifnet
parameter_list|,
name|struct
name|mbuf
modifier|*
name|newmbuf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_mbuf_netlayer
parameter_list|(
name|struct
name|mbuf
modifier|*
name|oldmbuf
parameter_list|,
name|struct
name|mbuf
modifier|*
name|newmbuf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_fragment_match
parameter_list|(
name|struct
name|mbuf
modifier|*
name|fragment
parameter_list|,
name|struct
name|ipq
modifier|*
name|ipq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_update_ipq
parameter_list|(
name|struct
name|mbuf
modifier|*
name|fragment
parameter_list|,
name|struct
name|ipq
modifier|*
name|ipq
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Labeling event operations: processes.  */
end_comment

begin_function_decl
name|void
name|mac_create_cred
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred_parent
parameter_list|,
name|struct
name|ucred
modifier|*
name|cred_child
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_execve_transition
parameter_list|(
name|struct
name|ucred
modifier|*
name|old
parameter_list|,
name|struct
name|ucred
modifier|*
name|new
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_execve_will_transition
parameter_list|(
name|struct
name|ucred
modifier|*
name|old
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_proc0
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mac_create_proc1
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Access control checks. */
end_comment

begin_function_decl
name|int
name|mac_check_bpfdesc_receive
parameter_list|(
name|struct
name|bpf_d
modifier|*
name|bpf_d
parameter_list|,
name|struct
name|ifnet
modifier|*
name|ifnet
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_cred_visible
parameter_list|(
name|struct
name|ucred
modifier|*
name|u1
parameter_list|,
name|struct
name|ucred
modifier|*
name|u2
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_ifnet_transmit
parameter_list|(
name|struct
name|ifnet
modifier|*
name|ifnet
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_mount_stat
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|mount
modifier|*
name|mp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_pipe_ioctl
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|pipe
modifier|*
name|pipe
parameter_list|,
name|unsigned
name|long
name|cmd
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_pipe_poll
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|pipe
modifier|*
name|pipe
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_pipe_read
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|pipe
modifier|*
name|pipe
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_pipe_stat
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|pipe
modifier|*
name|pipe
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_pipe_write
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|pipe
modifier|*
name|pipe
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_proc_debug
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|proc
modifier|*
name|proc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_proc_sched
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|proc
modifier|*
name|proc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_proc_signal
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|proc
modifier|*
name|proc
parameter_list|,
name|int
name|signum
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_socket_bind
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|socket
modifier|*
name|so
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|sockaddr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_socket_connect
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|socket
modifier|*
name|so
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|sockaddr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_socket_deliver
parameter_list|(
name|struct
name|socket
modifier|*
name|so
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_socket_listen
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|socket
modifier|*
name|so
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_socket_visible
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|socket
modifier|*
name|so
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_access
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_chdir
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|dvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_chroot
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|dvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_create
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|dvp
parameter_list|,
name|struct
name|componentname
modifier|*
name|cnp
parameter_list|,
name|struct
name|vattr
modifier|*
name|vap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_delete
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|dvp
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|struct
name|componentname
modifier|*
name|cnp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_deleteacl
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|acl_type_t
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_exec
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_getacl
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|acl_type_t
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_getextattr
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|int
name|attrnamespace
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|struct
name|uio
modifier|*
name|uio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_lookup
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|dvp
parameter_list|,
name|struct
name|componentname
modifier|*
name|cnp
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* XXX This u_char should be vm_prot_t! */
end_comment

begin_function_decl
name|u_char
name|mac_check_vnode_mmap_prot
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|int
name|newmapping
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_open
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|mode_t
name|acc_mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_poll
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_read
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_readdir
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_readlink
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_rename_from
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|dvp
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|struct
name|componentname
modifier|*
name|cnp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_rename_to
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|dvp
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|int
name|samedir
parameter_list|,
name|struct
name|componentname
modifier|*
name|cnp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_revoke
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_setacl
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|acl_type_t
name|type
parameter_list|,
name|struct
name|acl
modifier|*
name|acl
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_setextattr
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|int
name|attrnamespace
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|struct
name|uio
modifier|*
name|uio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_setflags
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|u_long
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_setmode
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|mode_t
name|mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_setowner
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|uid_t
name|uid
parameter_list|,
name|gid_t
name|gid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_setutimes
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|struct
name|timespec
name|atime
parameter_list|,
name|struct
name|timespec
name|mtime
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_stat
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_check_vnode_write
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|vnode
modifier|*
name|vp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_getsockopt_label_get
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|socket
modifier|*
name|so
parameter_list|,
name|struct
name|mac
modifier|*
name|extmac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_getsockopt_peerlabel_get
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|socket
modifier|*
name|so
parameter_list|,
name|struct
name|mac
modifier|*
name|extmac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_ioctl_ifnet_get
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|ifreq
modifier|*
name|ifr
parameter_list|,
name|struct
name|ifnet
modifier|*
name|ifnet
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_ioctl_ifnet_set
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|ifreq
modifier|*
name|ifr
parameter_list|,
name|struct
name|ifnet
modifier|*
name|ifnet
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_setsockopt_label_set
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|socket
modifier|*
name|so
parameter_list|,
name|struct
name|mac
modifier|*
name|extmac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mac_pipe_label_set
parameter_list|(
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|pipe
modifier|*
name|pipe
parameter_list|,
name|struct
name|label
modifier|*
name|label
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Calls to help various file systems implement labeling functionality  * using their existing EA implementation.  */
end_comment

begin_function_decl
name|int
name|vop_stdcreatevnode_ea
parameter_list|(
name|struct
name|vnode
modifier|*
name|dvp
parameter_list|,
name|struct
name|vnode
modifier|*
name|tvp
parameter_list|,
name|struct
name|ucred
modifier|*
name|cred
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vop_stdrefreshlabel_ea
parameter_list|(
name|struct
name|vop_refreshlabel_args
modifier|*
name|ap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vop_stdsetlabel_ea
parameter_list|(
name|struct
name|vop_setlabel_args
modifier|*
name|ap
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _KERNEL */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_SYS_MAC_H */
end_comment

end_unit

