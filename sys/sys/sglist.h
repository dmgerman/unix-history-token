begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2008 Yahoo!, Inc.  * All rights reserved.  * Written by: John Baldwin<jhb@FreeBSD.org>  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. Neither the name of the author nor the names of any co-contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_comment
comment|/*  * A scatter/gather list describes a group of physical address ranges.  * Each physical address range consists of a starting address and a  * length.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__SGLIST_H__
end_ifndef

begin_define
define|#
directive|define
name|__SGLIST_H__
end_define

begin_include
include|#
directive|include
file|<sys/refcount.h>
end_include

begin_struct
struct|struct
name|sglist_seg
block|{
name|vm_paddr_t
name|ss_paddr
decl_stmt|;
name|size_t
name|ss_len
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|sglist
block|{
name|struct
name|sglist_seg
modifier|*
name|sg_segs
decl_stmt|;
name|int
name|sg_refs
decl_stmt|;
name|u_short
name|sg_nseg
decl_stmt|;
name|u_short
name|sg_maxseg
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|bio
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|mbuf
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|uio
struct_decl|;
end_struct_decl

begin_function
specifier|static
name|__inline
name|void
name|sglist_init
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|,
name|u_short
name|maxsegs
parameter_list|,
name|struct
name|sglist_seg
modifier|*
name|segs
parameter_list|)
block|{
name|sg
operator|->
name|sg_segs
operator|=
name|segs
expr_stmt|;
name|sg
operator|->
name|sg_nseg
operator|=
literal|0
expr_stmt|;
name|sg
operator|->
name|sg_maxseg
operator|=
name|maxsegs
expr_stmt|;
name|refcount_init
argument_list|(
operator|&
name|sg
operator|->
name|sg_refs
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|sglist_reset
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|)
block|{
name|sg
operator|->
name|sg_nseg
operator|=
literal|0
expr_stmt|;
block|}
end_function

begin_expr_stmt
specifier|static
name|__inline
expr|struct
name|sglist
operator|*
name|sglist_hold
argument_list|(
argument|struct sglist *sg
argument_list|)
block|{
name|refcount_acquire
argument_list|(
operator|&
name|sg
operator|->
name|sg_refs
argument_list|)
block|;
return|return
operator|(
name|sg
operator|)
return|;
block|}
end_expr_stmt

begin_function_decl
name|struct
name|sglist
modifier|*
name|sglist_alloc
parameter_list|(
name|int
name|nsegs
parameter_list|,
name|int
name|mflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_append
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_append_bio
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|,
name|struct
name|bio
modifier|*
name|bp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_append_mbuf
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_append_phys
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|,
name|vm_paddr_t
name|paddr
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_append_uio
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|,
name|struct
name|uio
modifier|*
name|uio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_append_user
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|,
name|struct
name|thread
modifier|*
name|td
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_append_vmpages
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|,
name|vm_page_t
modifier|*
name|m
parameter_list|,
name|size_t
name|pgoff
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|sglist
modifier|*
name|sglist_build
parameter_list|(
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|mflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|sglist
modifier|*
name|sglist_clone
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|,
name|int
name|mflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_consume_uio
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|,
name|struct
name|uio
modifier|*
name|uio
parameter_list|,
name|size_t
name|resid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_count
parameter_list|(
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_count_vmpages
parameter_list|(
name|vm_page_t
modifier|*
name|m
parameter_list|,
name|size_t
name|pgoff
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sglist_free
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_join
parameter_list|(
name|struct
name|sglist
modifier|*
name|first
parameter_list|,
name|struct
name|sglist
modifier|*
name|second
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|sglist_length
parameter_list|(
name|struct
name|sglist
modifier|*
name|sg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_slice
parameter_list|(
name|struct
name|sglist
modifier|*
name|original
parameter_list|,
name|struct
name|sglist
modifier|*
modifier|*
name|slice
parameter_list|,
name|size_t
name|offset
parameter_list|,
name|size_t
name|length
parameter_list|,
name|int
name|mflags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sglist_split
parameter_list|(
name|struct
name|sglist
modifier|*
name|original
parameter_list|,
name|struct
name|sglist
modifier|*
modifier|*
name|head
parameter_list|,
name|size_t
name|length
parameter_list|,
name|int
name|mflags
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !__SGLIST_H__ */
end_comment

end_unit

