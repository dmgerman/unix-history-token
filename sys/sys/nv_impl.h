begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2013 The FreeBSD Foundation  * All rights reserved.  *  * This software was developed by Pawel Jakub Dawidek under sponsorship from  * the FreeBSD Foundation.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NV_IMPL_H_
end_ifndef

begin_define
define|#
directive|define
name|_NV_IMPL_H_
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|_NVPAIR_T_DECLARED
end_ifndef

begin_define
define|#
directive|define
name|_NVPAIR_T_DECLARED
end_define

begin_struct_decl
struct_decl|struct
name|nvpair
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|struct
name|nvpair
name|nvpair_t
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|NV_TYPE_NVLIST_UP
value|255
end_define

begin_define
define|#
directive|define
name|NV_TYPE_FIRST
value|NV_TYPE_NULL
end_define

begin_define
define|#
directive|define
name|NV_TYPE_LAST
value|NV_TYPE_BINARY
end_define

begin_define
define|#
directive|define
name|NV_FLAG_BIG_ENDIAN
value|0x80
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|_KERNEL
end_ifdef

begin_define
define|#
directive|define
name|nv_malloc
parameter_list|(
name|size
parameter_list|)
value|malloc((size), M_NVLIST, M_WAITOK)
end_define

begin_define
define|#
directive|define
name|nv_calloc
parameter_list|(
name|n
parameter_list|,
name|size
parameter_list|)
value|malloc((n) * (size), M_NVLIST, \ 					    M_WAITOK | M_ZERO)
end_define

begin_define
define|#
directive|define
name|nv_realloc
parameter_list|(
name|buf
parameter_list|,
name|size
parameter_list|)
value|realloc((buf), (size), M_NVLIST, \ 					    M_WAITOK)
end_define

begin_define
define|#
directive|define
name|nv_free
parameter_list|(
name|buf
parameter_list|)
value|free((buf), M_NVLIST)
end_define

begin_define
define|#
directive|define
name|nv_strdup
parameter_list|(
name|buf
parameter_list|)
value|strdup((buf), M_NVLIST)
end_define

begin_define
define|#
directive|define
name|nv_vasprintf
parameter_list|(
name|ptr
parameter_list|,
modifier|...
parameter_list|)
value|vasprintf(ptr, M_NVLIST, __VA_ARGS__)
end_define

begin_define
define|#
directive|define
name|SAVE_ERRNO
parameter_list|(
name|var
parameter_list|)
value|((void)(var))
end_define

begin_define
define|#
directive|define
name|RESTORE_ERRNO
parameter_list|(
name|var
parameter_list|)
value|((void)(var))
end_define

begin_define
define|#
directive|define
name|ERRNO_OR_DEFAULT
parameter_list|(
define|default)	(default)
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|nv_malloc
parameter_list|(
name|size
parameter_list|)
value|malloc((size))
end_define

begin_define
define|#
directive|define
name|nv_calloc
parameter_list|(
name|n
parameter_list|,
name|size
parameter_list|)
value|calloc((n), (size))
end_define

begin_define
define|#
directive|define
name|nv_realloc
parameter_list|(
name|buf
parameter_list|,
name|size
parameter_list|)
value|realloc((buf), (size))
end_define

begin_define
define|#
directive|define
name|nv_free
parameter_list|(
name|buf
parameter_list|)
value|free((buf))
end_define

begin_define
define|#
directive|define
name|nv_strdup
parameter_list|(
name|buf
parameter_list|)
value|strdup((buf))
end_define

begin_define
define|#
directive|define
name|nv_vasprintf
parameter_list|(
name|ptr
parameter_list|,
modifier|...
parameter_list|)
value|vasprintf(ptr, __VA_ARGS__)
end_define

begin_define
define|#
directive|define
name|SAVE_ERRNO
parameter_list|(
name|var
parameter_list|)
value|(var) = errno
end_define

begin_define
define|#
directive|define
name|RESTORE_ERRNO
parameter_list|(
name|var
parameter_list|)
value|errno = (var)
end_define

begin_define
define|#
directive|define
name|ERRNO_OR_DEFAULT
parameter_list|(
define|default)	(errno == 0 ? (default) : errno)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|int
modifier|*
name|nvlist_descriptors
parameter_list|(
specifier|const
name|nvlist_t
modifier|*
name|nvl
parameter_list|,
name|size_t
modifier|*
name|nitemsp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|nvlist_ndescriptors
parameter_list|(
specifier|const
name|nvlist_t
modifier|*
name|nvl
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvlist_first_nvpair
parameter_list|(
specifier|const
name|nvlist_t
modifier|*
name|nvl
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvlist_next_nvpair
parameter_list|(
specifier|const
name|nvlist_t
modifier|*
name|nvl
parameter_list|,
specifier|const
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvlist_prev_nvpair
parameter_list|(
specifier|const
name|nvlist_t
modifier|*
name|nvl
parameter_list|,
specifier|const
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nvlist_add_nvpair
parameter_list|(
name|nvlist_t
modifier|*
name|nvl
parameter_list|,
specifier|const
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nvlist_move_nvpair
parameter_list|(
name|nvlist_t
modifier|*
name|nvl
parameter_list|,
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nvlist_set_parent
parameter_list|(
name|nvlist_t
modifier|*
name|nvl
parameter_list|,
name|nvpair_t
modifier|*
name|parent
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|nvpair_t
modifier|*
name|nvlist_get_nvpair
parameter_list|(
specifier|const
name|nvlist_t
modifier|*
name|nvl
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvlist_take_nvpair
parameter_list|(
name|nvlist_t
modifier|*
name|nvl
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Function removes the given nvpair from the nvlist. */
end_comment

begin_function_decl
name|void
name|nvlist_remove_nvpair
parameter_list|(
name|nvlist_t
modifier|*
name|nvl
parameter_list|,
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nvlist_free_nvpair
parameter_list|(
name|nvlist_t
modifier|*
name|nvl
parameter_list|,
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nvpair_type
parameter_list|(
specifier|const
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|nvpair_name
parameter_list|(
specifier|const
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_clone
parameter_list|(
specifier|const
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_create_null
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_create_bool
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|bool
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_create_number
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|uint64_t
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_create_string
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_create_stringf
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
name|valuefmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_create_stringv
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
name|valuefmt
parameter_list|,
name|va_list
name|valueap
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_create_nvlist
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|nvlist_t
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_create_descriptor
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_create_binary
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|void
modifier|*
name|value
parameter_list|,
name|size_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_move_string
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|char
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_move_nvlist
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|nvlist_t
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_move_descriptor
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_move_binary
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|void
modifier|*
name|value
parameter_list|,
name|size_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|nvpair_get_bool
parameter_list|(
specifier|const
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint64_t
name|nvpair_get_number
parameter_list|(
specifier|const
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|nvpair_get_string
parameter_list|(
specifier|const
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|nvlist_t
modifier|*
name|nvpair_get_nvlist
parameter_list|(
specifier|const
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nvpair_get_descriptor
parameter_list|(
specifier|const
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|void
modifier|*
name|nvpair_get_binary
parameter_list|(
specifier|const
name|nvpair_t
modifier|*
name|nvp
parameter_list|,
name|size_t
modifier|*
name|sizep
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nvpair_free
parameter_list|(
name|nvpair_t
modifier|*
name|nvp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createf_null
parameter_list|(
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|1
operator|,
function_decl|2
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createf_bool
parameter_list|(
name|bool
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createf_number
parameter_list|(
name|uint64_t
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createf_string
parameter_list|(
specifier|const
name|char
modifier|*
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createf_nvlist
parameter_list|(
specifier|const
name|nvlist_t
modifier|*
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createf_descriptor
parameter_list|(
name|int
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createf_binary
parameter_list|(
specifier|const
name|void
modifier|*
name|value
parameter_list|,
name|size_t
name|size
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|3
operator|,
function_decl|4
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createv_null
parameter_list|(
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
name|va_list
name|nameap
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|1
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createv_bool
parameter_list|(
name|bool
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
name|va_list
name|nameap
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createv_number
parameter_list|(
name|uint64_t
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
name|va_list
name|nameap
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createv_string
parameter_list|(
specifier|const
name|char
modifier|*
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
name|va_list
name|nameap
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createv_nvlist
parameter_list|(
specifier|const
name|nvlist_t
modifier|*
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
name|va_list
name|nameap
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createv_descriptor
parameter_list|(
name|int
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
name|va_list
name|nameap
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_createv_binary
parameter_list|(
specifier|const
name|void
modifier|*
name|value
parameter_list|,
name|size_t
name|size
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
name|va_list
name|nameap
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|3
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_movef_string
parameter_list|(
name|char
modifier|*
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_movef_nvlist
parameter_list|(
name|nvlist_t
modifier|*
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_movef_descriptor
parameter_list|(
name|int
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_movef_binary
parameter_list|(
name|void
modifier|*
name|value
parameter_list|,
name|size_t
name|size
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|3
operator|,
function_decl|4
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_movev_string
parameter_list|(
name|char
modifier|*
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
name|va_list
name|nameap
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_movev_nvlist
parameter_list|(
name|nvlist_t
modifier|*
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
name|va_list
name|nameap
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_movev_descriptor
parameter_list|(
name|int
name|value
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
name|va_list
name|nameap
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|2
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|nvpair_t
modifier|*
name|nvpair_movev_binary
parameter_list|(
name|void
modifier|*
name|value
parameter_list|,
name|size_t
name|size
parameter_list|,
specifier|const
name|char
modifier|*
name|namefmt
parameter_list|,
name|va_list
name|nameap
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|3
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_NV_IMPL_H_ */
end_comment

end_unit

