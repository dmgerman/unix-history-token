begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$FreeBSD$	*/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SKEIN_IV_H_
end_ifndef

begin_define
define|#
directive|define
name|_SKEIN_IV_H_
end_define

begin_include
include|#
directive|include
file|"skein.h"
end_include

begin_comment
comment|/* get Skein macros and types */
end_comment

begin_comment
comment|/* ***************** Pre-computed Skein IVs ******************* ** ** NOTE: these values are not "magic" constants, but ** are generated using the Threefish block function. ** They are pre-computed here only for speed; i.e., to ** avoid the need for a Threefish call during Init(). ** ** The IV for any fixed hash length may be pre-computed. ** Only the most common values are included here. ** ************************************************************ **/
end_comment

begin_define
define|#
directive|define
name|MK_64
value|SKEIN_MK_64
end_define

begin_comment
comment|/* blkSize =  256 bits. hashSize =  128 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN_256_IV_128
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0xE1111906
argument_list|,
literal|0x964D7260
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x883DAAA7
argument_list|,
literal|0x7C8D811C
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x10080DF4
argument_list|,
literal|0x91960F7A
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xCCF7DDE5
argument_list|,
literal|0xB45BC1C2
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* blkSize =  256 bits. hashSize =  160 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN_256_IV_160
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0x14202314
argument_list|,
literal|0x72825E98
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x2AC4E9A2
argument_list|,
literal|0x5A77E590
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xD47A5856
argument_list|,
literal|0x8838D63E
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x2DD2E496
argument_list|,
literal|0x8586AB7D
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* blkSize =  256 bits. hashSize =  224 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN_256_IV_224
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0xC6098A8C
argument_list|,
literal|0x9AE5EA0B
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x876D5686
argument_list|,
literal|0x08C5191C
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x99CB88D7
argument_list|,
literal|0xD7F53884
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x384BDDB1
argument_list|,
literal|0xAEDDB5DE
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* blkSize =  256 bits. hashSize =  256 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN_256_IV_256
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0xFC9DA860
argument_list|,
literal|0xD048B449
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x2FCA6647
argument_list|,
literal|0x9FA7D833
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xB33BC389
argument_list|,
literal|0x6656840F
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x6A54E920
argument_list|,
literal|0xFDE8DA69
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* blkSize =  512 bits. hashSize =  128 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN_512_IV_128
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0xA8BC7BF3
argument_list|,
literal|0x6FBF9F52
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x1E9872CE
argument_list|,
literal|0xBD1AF0AA
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x309B1790
argument_list|,
literal|0xB32190D3
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xBCFBB854
argument_list|,
literal|0x3F94805C
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x0DA61BCD
argument_list|,
literal|0x6E31B11B
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x1A18EBEA
argument_list|,
literal|0xD46A32E3
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xA2CC5B18
argument_list|,
literal|0xCE84AA82
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x6982AB28
argument_list|,
literal|0x9D46982D
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* blkSize =  512 bits. hashSize =  160 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN_512_IV_160
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0x28B81A2A
argument_list|,
literal|0xE013BD91
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xC2F11668
argument_list|,
literal|0xB5BDF78F
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x1760D8F3
argument_list|,
literal|0xF6A56F12
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x4FB74758
argument_list|,
literal|0x8239904F
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x21EDE07F
argument_list|,
literal|0x7EAF5056
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xD908922E
argument_list|,
literal|0x63ED70B8
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xB8EC76FF
argument_list|,
literal|0xECCB52FA
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x01A47BB8
argument_list|,
literal|0xA3F27A6E
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* blkSize =  512 bits. hashSize =  224 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN_512_IV_224
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0xCCD06162
argument_list|,
literal|0x48677224
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xCBA65CF3
argument_list|,
literal|0xA92339EF
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x8CCD69D6
argument_list|,
literal|0x52FF4B64
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x398AED7B
argument_list|,
literal|0x3AB890B4
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x0F59D1B1
argument_list|,
literal|0x457D2BD0
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x6776FE65
argument_list|,
literal|0x75D4EB3D
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x99FBC70E
argument_list|,
literal|0x997413E9
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x9E2CFCCF
argument_list|,
literal|0xE1C41EF7
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* blkSize =  512 bits. hashSize =  256 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN_512_IV_256
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0xCCD044A1
argument_list|,
literal|0x2FDB3E13
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xE8359030
argument_list|,
literal|0x1A79A9EB
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x55AEA061
argument_list|,
literal|0x4F816E6F
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x2A2767A4
argument_list|,
literal|0xAE9B94DB
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xEC06025E
argument_list|,
literal|0x74DD7683
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xE7A436CD
argument_list|,
literal|0xC4746251
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xC36FBAF9
argument_list|,
literal|0x393AD185
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x3EEDBA18
argument_list|,
literal|0x33EDFC13
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* blkSize =  512 bits. hashSize =  384 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN_512_IV_384
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0xA3F6C6BF
argument_list|,
literal|0x3A75EF5F
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xB0FEF9CC
argument_list|,
literal|0xFD84FAA4
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x9D77DD66
argument_list|,
literal|0x3D770CFE
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xD798CBF3
argument_list|,
literal|0xB468FDDA
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x1BC4A666
argument_list|,
literal|0x8A0E4465
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x7ED7D434
argument_list|,
literal|0xE5807407
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x548FC1AC
argument_list|,
literal|0xD4EC44D6
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x266E1754
argument_list|,
literal|0x6AA18FF8
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* blkSize =  512 bits. hashSize =  512 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN_512_IV_512
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0x4903ADFF
argument_list|,
literal|0x749C51CE
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x0D95DE39
argument_list|,
literal|0x9746DF03
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x8FD19341
argument_list|,
literal|0x27C79BCE
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x9A255629
argument_list|,
literal|0xFF352CB1
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x5DB62599
argument_list|,
literal|0xDF6CA7B0
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xEABE394C
argument_list|,
literal|0xA9D5C3F4
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x991112C7
argument_list|,
literal|0x1A75B523
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xAE18A40B
argument_list|,
literal|0x660FCC33
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* blkSize = 1024 bits. hashSize =  384 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN1024_IV_384
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0x5102B6B8
argument_list|,
literal|0xC1894A35
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xFEEBC9E3
argument_list|,
literal|0xFE8AF11A
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x0C807F06
argument_list|,
literal|0xE32BED71
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x60C13A52
argument_list|,
literal|0xB41A91F6
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x9716D35D
argument_list|,
literal|0xD4917C38
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xE780DF12
argument_list|,
literal|0x6FD31D3A
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x797846B6
argument_list|,
literal|0xC898303A
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xB172C2A8
argument_list|,
literal|0xB3572A3B
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xC9BC8203
argument_list|,
literal|0xA6104A6C
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x65909338
argument_list|,
literal|0xD75624F4
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x94BCC568
argument_list|,
literal|0x4B3F81A0
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x3EBBF51E
argument_list|,
literal|0x10ECFD46
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x2DF50F0B
argument_list|,
literal|0xEEB08542
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x3B5A6530
argument_list|,
literal|0x0DBC6516
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x484B9CD2
argument_list|,
literal|0x167BBCE1
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x2D136947
argument_list|,
literal|0xD4CBAFEA
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* blkSize = 1024 bits. hashSize =  512 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN1024_IV_512
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0xCAEC0E5D
argument_list|,
literal|0x7C1B1B18
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xA01B0E04
argument_list|,
literal|0x5F03E802
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x33840451
argument_list|,
literal|0xED912885
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x374AFB04
argument_list|,
literal|0xEAEC2E1C
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xDF25A0E2
argument_list|,
literal|0x813581F7
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xE4004093
argument_list|,
literal|0x8B12F9D2
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xA662D539
argument_list|,
literal|0xC2ED39B6
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xFA8B85CF
argument_list|,
literal|0x45D8C75A
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x8316ED8E
argument_list|,
literal|0x29EDE796
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x053289C0
argument_list|,
literal|0x2E9F91B8
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xC3F8EF1D
argument_list|,
literal|0x6D518B73
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xBDCEC3C4
argument_list|,
literal|0xD5EF332E
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x549A7E52
argument_list|,
literal|0x22974487
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x67070872
argument_list|,
literal|0x5B749816
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xB9CD28FB
argument_list|,
literal|0xF0581BD1
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x0E2940B8
argument_list|,
literal|0x15804974
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* blkSize = 1024 bits. hashSize = 1024 bits */
end_comment

begin_decl_stmt
specifier|const
name|u64b_t
name|SKEIN1024_IV_1024
index|[]
init|=
block|{
name|MK_64
argument_list|(
literal|0xD593DA07
argument_list|,
literal|0x41E72355
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x15B5E511
argument_list|,
literal|0xAC73E00C
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x5180E5AE
argument_list|,
literal|0xBAF2C4F0
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x03BD41D3
argument_list|,
literal|0xFCBCAFAF
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x1CAEC6FD
argument_list|,
literal|0x1983A898
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x6E510B8B
argument_list|,
literal|0xCDD0589F
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x77E2BDFD
argument_list|,
literal|0xC6394ADA
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xC11E1DB5
argument_list|,
literal|0x24DCB0A3
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0xD6D14AF9
argument_list|,
literal|0xC6329AB5
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x6A9B0BFC
argument_list|,
literal|0x6EB67E0D
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x9243C60D
argument_list|,
literal|0xCCFF1332
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x1A1F1DDE
argument_list|,
literal|0x743F02D4
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x0996753C
argument_list|,
literal|0x10ED0BB8
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x6572DD22
argument_list|,
literal|0xF2B4969A
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x61FD3062
argument_list|,
literal|0xD00A579A
argument_list|)
block|,
name|MK_64
argument_list|(
literal|0x1DE0536E
argument_list|,
literal|0x8682E539
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SKEIN_IV_H_ */
end_comment

end_unit

