begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright 2013 John-Mark Gurney<jmg@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_include
include|#
directive|include
file|<crypto/aesni/aesni_os.h>
end_include

begin_include
include|#
directive|include
file|<wmmintrin.h>
end_include

begin_function
specifier|static
specifier|inline
name|void
name|aesni_enc8
parameter_list|(
name|int
name|rounds
parameter_list|,
specifier|const
name|__m128i
modifier|*
name|keysched
parameter_list|,
name|__m128i
name|a
parameter_list|,
name|__m128i
name|b
parameter_list|,
name|__m128i
name|c
parameter_list|,
name|__m128i
name|d
parameter_list|,
name|__m128i
name|e
parameter_list|,
name|__m128i
name|f
parameter_list|,
name|__m128i
name|g
parameter_list|,
name|__m128i
name|h
parameter_list|,
name|__m128i
name|out
index|[
literal|8
index|]
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|a
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|b
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|c
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|d
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|e
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|f
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|g
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|h
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|rounds
condition|;
name|i
operator|++
control|)
block|{
name|a
operator|=
name|_mm_aesenc_si128
argument_list|(
name|a
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|b
operator|=
name|_mm_aesenc_si128
argument_list|(
name|b
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|c
operator|=
name|_mm_aesenc_si128
argument_list|(
name|c
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|d
operator|=
name|_mm_aesenc_si128
argument_list|(
name|d
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|e
operator|=
name|_mm_aesenc_si128
argument_list|(
name|e
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|f
operator|=
name|_mm_aesenc_si128
argument_list|(
name|f
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|g
operator|=
name|_mm_aesenc_si128
argument_list|(
name|g
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|h
operator|=
name|_mm_aesenc_si128
argument_list|(
name|h
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
name|out
index|[
literal|0
index|]
operator|=
name|_mm_aesenclast_si128
argument_list|(
name|a
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|1
index|]
operator|=
name|_mm_aesenclast_si128
argument_list|(
name|b
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|2
index|]
operator|=
name|_mm_aesenclast_si128
argument_list|(
name|c
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|3
index|]
operator|=
name|_mm_aesenclast_si128
argument_list|(
name|d
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|4
index|]
operator|=
name|_mm_aesenclast_si128
argument_list|(
name|e
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|5
index|]
operator|=
name|_mm_aesenclast_si128
argument_list|(
name|f
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|6
index|]
operator|=
name|_mm_aesenclast_si128
argument_list|(
name|g
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|7
index|]
operator|=
name|_mm_aesenclast_si128
argument_list|(
name|h
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|aesni_dec8
parameter_list|(
name|int
name|rounds
parameter_list|,
specifier|const
name|__m128i
modifier|*
name|keysched
parameter_list|,
name|__m128i
name|a
parameter_list|,
name|__m128i
name|b
parameter_list|,
name|__m128i
name|c
parameter_list|,
name|__m128i
name|d
parameter_list|,
name|__m128i
name|e
parameter_list|,
name|__m128i
name|f
parameter_list|,
name|__m128i
name|g
parameter_list|,
name|__m128i
name|h
parameter_list|,
name|__m128i
name|out
index|[
literal|8
index|]
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|a
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|b
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|c
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|d
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|e
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|f
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|g
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
name|h
operator|^=
name|keysched
index|[
literal|0
index|]
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|rounds
condition|;
name|i
operator|++
control|)
block|{
name|a
operator|=
name|_mm_aesdec_si128
argument_list|(
name|a
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|b
operator|=
name|_mm_aesdec_si128
argument_list|(
name|b
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|c
operator|=
name|_mm_aesdec_si128
argument_list|(
name|c
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|d
operator|=
name|_mm_aesdec_si128
argument_list|(
name|d
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|e
operator|=
name|_mm_aesdec_si128
argument_list|(
name|e
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|f
operator|=
name|_mm_aesdec_si128
argument_list|(
name|f
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|g
operator|=
name|_mm_aesdec_si128
argument_list|(
name|g
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|h
operator|=
name|_mm_aesdec_si128
argument_list|(
name|h
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
name|out
index|[
literal|0
index|]
operator|=
name|_mm_aesdeclast_si128
argument_list|(
name|a
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|1
index|]
operator|=
name|_mm_aesdeclast_si128
argument_list|(
name|b
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|2
index|]
operator|=
name|_mm_aesdeclast_si128
argument_list|(
name|c
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|3
index|]
operator|=
name|_mm_aesdeclast_si128
argument_list|(
name|d
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|4
index|]
operator|=
name|_mm_aesdeclast_si128
argument_list|(
name|e
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|5
index|]
operator|=
name|_mm_aesdeclast_si128
argument_list|(
name|f
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|6
index|]
operator|=
name|_mm_aesdeclast_si128
argument_list|(
name|g
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
name|out
index|[
literal|7
index|]
operator|=
name|_mm_aesdeclast_si128
argument_list|(
name|h
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|__m128i
name|aesni_enc
parameter_list|(
name|int
name|rounds
parameter_list|,
specifier|const
name|__m128i
modifier|*
name|keysched
parameter_list|,
specifier|const
name|__m128i
name|from
parameter_list|)
block|{
name|__m128i
name|tmp
decl_stmt|;
name|int
name|i
decl_stmt|;
name|tmp
operator|=
name|from
operator|^
name|keysched
index|[
literal|0
index|]
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|rounds
condition|;
name|i
operator|++
control|)
name|tmp
operator|=
name|_mm_aesenc_si128
argument_list|(
name|tmp
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
return|return
name|_mm_aesenclast_si128
argument_list|(
name|tmp
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|__m128i
name|aesni_dec
parameter_list|(
name|int
name|rounds
parameter_list|,
specifier|const
name|__m128i
modifier|*
name|keysched
parameter_list|,
specifier|const
name|__m128i
name|from
parameter_list|)
block|{
name|__m128i
name|tmp
decl_stmt|;
name|int
name|i
decl_stmt|;
name|tmp
operator|=
name|from
operator|^
name|keysched
index|[
literal|0
index|]
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|rounds
condition|;
name|i
operator|++
control|)
name|tmp
operator|=
name|_mm_aesdec_si128
argument_list|(
name|tmp
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
return|return
name|_mm_aesdeclast_si128
argument_list|(
name|tmp
argument_list|,
name|keysched
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
return|;
block|}
end_function

end_unit

