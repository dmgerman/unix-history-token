begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  *	$Id: isofs_node.h,v 1.4 1993/11/25 01:32:26 wollman Exp $  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_ISOFS_ISOFS_NODE_H_
end_ifndef

begin_define
define|#
directive|define
name|_ISOFS_ISOFS_NODE_H_
value|1
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|iso_cln
decl_stmt|;
comment|/* Child link */
name|unsigned
name|iso_pln
decl_stmt|;
comment|/* Parents link */
name|struct
name|timeval
name|iso_atime
decl_stmt|;
comment|/* time of last access */
name|struct
name|timeval
name|iso_mtime
decl_stmt|;
comment|/* time of last modification */
name|struct
name|timeval
name|iso_ctime
decl_stmt|;
comment|/* time file changed */
name|u_short
name|iso_mode
decl_stmt|;
comment|/* files access mode and type */
name|uid_t
name|iso_uid
decl_stmt|;
comment|/* owner user id */
name|gid_t
name|iso_gid
decl_stmt|;
comment|/* owner group id */
block|}
name|ISO_RRIP_INODE
typedef|;
end_typedef

begin_struct
struct|struct
name|iso_node
block|{
name|struct
name|iso_node
modifier|*
name|i_chain
index|[
literal|2
index|]
decl_stmt|;
comment|/* hash chain, MUST be first */
name|struct
name|vnode
modifier|*
name|i_vnode
decl_stmt|;
comment|/* vnode associated with this inode */
name|struct
name|vnode
modifier|*
name|i_devvp
decl_stmt|;
comment|/* vnode for block I/O */
name|u_long
name|i_flag
decl_stmt|;
comment|/* see below */
name|dev_t
name|i_dev
decl_stmt|;
comment|/* device where inode resides */
name|ino_t
name|i_number
decl_stmt|;
comment|/* the identity of the inode */
name|struct
name|iso_mnt
modifier|*
name|i_mnt
decl_stmt|;
comment|/* filesystem associated with this inode */
name|struct
name|lockf
modifier|*
name|i_lockf
decl_stmt|;
comment|/* head of byte-level lock list */
name|long
name|i_diroff
decl_stmt|;
comment|/* offset in dir, where we found last entry */
name|off_t
name|i_endoff
decl_stmt|;
comment|/* end of useful stuff in directory */
name|long
name|i_spare0
decl_stmt|;
name|long
name|i_spare1
decl_stmt|;
name|int
name|iso_reclen
decl_stmt|;
name|int
name|iso_extlen
decl_stmt|;
name|int
name|iso_extent
decl_stmt|;
name|int
name|i_size
decl_stmt|;
name|int
name|iso_flags
decl_stmt|;
name|int
name|iso_unit_size
decl_stmt|;
name|int
name|iso_interleave_gap
decl_stmt|;
name|int
name|iso_volume_seq
decl_stmt|;
name|int
name|iso_namelen
decl_stmt|;
comment|/* ISO9660/RRIP name len */
name|int
name|iso_parent
decl_stmt|;
comment|/* byte offset in beginning of dir record */
name|int
name|iso_parent_ext
decl_stmt|;
comment|/* block number of dir record */
name|ISO_RRIP_INODE
name|inode
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|i_forw
value|i_chain[0]
end_define

begin_define
define|#
directive|define
name|i_back
value|i_chain[1]
end_define

begin_comment
comment|/* flags */
end_comment

begin_define
define|#
directive|define
name|ILOCKED
value|0x0001
end_define

begin_comment
comment|/* inode is locked */
end_comment

begin_define
define|#
directive|define
name|IWANT
value|0x0002
end_define

begin_comment
comment|/* some process waiting on lock */
end_comment

begin_define
define|#
directive|define
name|IACC
value|0x0020
end_define

begin_comment
comment|/* inode access time to be updated */
end_comment

begin_define
define|#
directive|define
name|VTOI
parameter_list|(
name|vp
parameter_list|)
value|((struct iso_node *)(vp)->v_data)
end_define

begin_define
define|#
directive|define
name|ITOV
parameter_list|(
name|ip
parameter_list|)
value|((ip)->i_vnode)
end_define

begin_define
define|#
directive|define
name|ISO_ILOCK
parameter_list|(
name|ip
parameter_list|)
value|iso_ilock(ip)
end_define

begin_define
define|#
directive|define
name|ISO_IUNLOCK
parameter_list|(
name|ip
parameter_list|)
value|iso_iunlock(ip)
end_define

begin_comment
comment|/*  * Prototypes for ISOFS vnode operations  */
end_comment

begin_decl_stmt
name|int
name|isofs_lookup
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|,
expr|struct
name|nameidata
operator|*
name|ndp
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_open
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|,
name|int
name|mode
operator|,
expr|struct
name|ucred
operator|*
name|cred
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_close
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|,
name|int
name|fflag
operator|,
expr|struct
name|ucred
operator|*
name|cred
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_access
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|,
name|int
name|mode
operator|,
expr|struct
name|ucred
operator|*
name|cred
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_getattr
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|,
expr|struct
name|vattr
operator|*
name|vap
operator|,
expr|struct
name|ucred
operator|*
name|cred
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_read
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|,
expr|struct
name|uio
operator|*
name|uio
operator|,
name|int
name|ioflag
operator|,
expr|struct
name|ucred
operator|*
name|cred
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_ioctl
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|,
name|int
name|command
operator|,
name|caddr_t
name|data
operator|,
name|int
name|fflag
operator|,
expr|struct
name|ucred
operator|*
name|cred
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_select
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|,
name|int
name|which
operator|,
name|int
name|fflags
operator|,
expr|struct
name|ucred
operator|*
name|cred
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_mmap
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|,
name|int
name|fflags
operator|,
expr|struct
name|ucred
operator|*
name|cred
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_seek
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|,
name|off_t
name|oldoff
operator|,
name|off_t
name|newoff
operator|,
expr|struct
name|ucred
operator|*
name|cred
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_readdir
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|,
expr|struct
name|uio
operator|*
name|uio
operator|,
expr|struct
name|ucred
operator|*
name|cred
operator|,
name|int
operator|*
name|eofflagp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_abortop
name|__P
argument_list|(
operator|(
expr|struct
name|nameidata
operator|*
name|ndp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_inactive
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|,
expr|struct
name|proc
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_reclaim
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_lock
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_unlock
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_strategy
name|__P
argument_list|(
operator|(
expr|struct
name|buf
operator|*
name|bp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|isofs_print
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofs_islocked
name|__P
argument_list|(
operator|(
expr|struct
name|vnode
operator|*
name|vp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* From isofs_node.c: */
end_comment

begin_struct_decl
struct_decl|struct
name|iso_directory_record
struct_decl|;
end_struct_decl

begin_function_decl
specifier|extern
name|void
name|isofs_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|iso_iget
parameter_list|(
name|struct
name|iso_node
modifier|*
parameter_list|,
name|ino_t
parameter_list|,
name|struct
name|iso_node
modifier|*
modifier|*
parameter_list|,
name|struct
name|iso_directory_record
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|iso_iput
parameter_list|(
name|struct
name|iso_node
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|iso_ilock
parameter_list|(
name|struct
name|iso_node
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|iso_iunlock
parameter_list|(
name|struct
name|iso_node
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|iso_blkatoff
parameter_list|(
name|struct
name|iso_node
modifier|*
parameter_list|,
name|off_t
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|struct
name|buf
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _ISOFS_ISOFS_NODE_H_ */
end_comment

end_unit

