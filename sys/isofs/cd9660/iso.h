begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1994  *	The Regents of the University of California.  All rights reserved.  *  * This code is derived from software contributed to Berkeley  * by Pace Willisson (pace@blitz.com).  The Rock Ridge Extension  * Support code is derived from software contributed to Berkeley  * by Atsushi Murai (amurai@spec.co.jp).  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by the University of  *	California, Berkeley and its contributors.  * 4. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	@(#)iso.h	8.6 (Berkeley) 5/10/95  * $Id: iso.h,v 1.15 1997/05/04 16:17:49 joerg Exp $  */
end_comment

begin_define
define|#
directive|define
name|ISODCL
parameter_list|(
name|from
parameter_list|,
name|to
parameter_list|)
value|(to - from + 1)
end_define

begin_struct
struct|struct
name|iso_volume_descriptor
block|{
name|char
name|type
index|[
name|ISODCL
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|id
index|[
name|ISODCL
argument_list|(
literal|2
argument_list|,
literal|6
argument_list|)
index|]
decl_stmt|;
name|char
name|version
index|[
name|ISODCL
argument_list|(
literal|7
argument_list|,
literal|7
argument_list|)
index|]
decl_stmt|;
name|char
name|unused
index|[
name|ISODCL
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|)
index|]
decl_stmt|;
name|char
name|type_sierra
index|[
name|ISODCL
argument_list|(
literal|9
argument_list|,
literal|9
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|id_sierra
index|[
name|ISODCL
argument_list|(
literal|10
argument_list|,
literal|14
argument_list|)
index|]
decl_stmt|;
name|char
name|version_sierra
index|[
name|ISODCL
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|)
index|]
decl_stmt|;
name|char
name|data
index|[
name|ISODCL
argument_list|(
literal|16
argument_list|,
literal|2048
argument_list|)
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* volume descriptor types */
end_comment

begin_define
define|#
directive|define
name|ISO_VD_PRIMARY
value|1
end_define

begin_define
define|#
directive|define
name|ISO_VD_END
value|255
end_define

begin_define
define|#
directive|define
name|ISO_STANDARD_ID
value|"CD001"
end_define

begin_define
define|#
directive|define
name|ISO_ECMA_ID
value|"CDW01"
end_define

begin_define
define|#
directive|define
name|ISO_SIERRA_ID
value|"CDROM"
end_define

begin_struct
struct|struct
name|iso_primary_descriptor
block|{
name|char
name|type
index|[
name|ISODCL
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|id
index|[
name|ISODCL
argument_list|(
literal|2
argument_list|,
literal|6
argument_list|)
index|]
decl_stmt|;
name|char
name|version
index|[
name|ISODCL
argument_list|(
literal|7
argument_list|,
literal|7
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|unused1
index|[
name|ISODCL
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|)
index|]
decl_stmt|;
name|char
name|system_id
index|[
name|ISODCL
argument_list|(
literal|9
argument_list|,
literal|40
argument_list|)
index|]
decl_stmt|;
comment|/* achars */
name|char
name|volume_id
index|[
name|ISODCL
argument_list|(
literal|41
argument_list|,
literal|72
argument_list|)
index|]
decl_stmt|;
comment|/* dchars */
name|char
name|unused2
index|[
name|ISODCL
argument_list|(
literal|73
argument_list|,
literal|80
argument_list|)
index|]
decl_stmt|;
name|char
name|volume_space_size
index|[
name|ISODCL
argument_list|(
literal|81
argument_list|,
literal|88
argument_list|)
index|]
decl_stmt|;
comment|/* 733 */
name|char
name|unused3
index|[
name|ISODCL
argument_list|(
literal|89
argument_list|,
literal|120
argument_list|)
index|]
decl_stmt|;
name|char
name|volume_set_size
index|[
name|ISODCL
argument_list|(
literal|121
argument_list|,
literal|124
argument_list|)
index|]
decl_stmt|;
comment|/* 723 */
name|char
name|volume_sequence_number
index|[
name|ISODCL
argument_list|(
literal|125
argument_list|,
literal|128
argument_list|)
index|]
decl_stmt|;
comment|/* 723 */
name|char
name|logical_block_size
index|[
name|ISODCL
argument_list|(
literal|129
argument_list|,
literal|132
argument_list|)
index|]
decl_stmt|;
comment|/* 723 */
name|char
name|path_table_size
index|[
name|ISODCL
argument_list|(
literal|133
argument_list|,
literal|140
argument_list|)
index|]
decl_stmt|;
comment|/* 733 */
name|char
name|type_l_path_table
index|[
name|ISODCL
argument_list|(
literal|141
argument_list|,
literal|144
argument_list|)
index|]
decl_stmt|;
comment|/* 731 */
name|char
name|opt_type_l_path_table
index|[
name|ISODCL
argument_list|(
literal|145
argument_list|,
literal|148
argument_list|)
index|]
decl_stmt|;
comment|/* 731 */
name|char
name|type_m_path_table
index|[
name|ISODCL
argument_list|(
literal|149
argument_list|,
literal|152
argument_list|)
index|]
decl_stmt|;
comment|/* 732 */
name|char
name|opt_type_m_path_table
index|[
name|ISODCL
argument_list|(
literal|153
argument_list|,
literal|156
argument_list|)
index|]
decl_stmt|;
comment|/* 732 */
name|char
name|root_directory_record
index|[
name|ISODCL
argument_list|(
literal|157
argument_list|,
literal|190
argument_list|)
index|]
decl_stmt|;
comment|/* 9.1 */
name|char
name|volume_set_id
index|[
name|ISODCL
argument_list|(
literal|191
argument_list|,
literal|318
argument_list|)
index|]
decl_stmt|;
comment|/* dchars */
name|char
name|publisher_id
index|[
name|ISODCL
argument_list|(
literal|319
argument_list|,
literal|446
argument_list|)
index|]
decl_stmt|;
comment|/* achars */
name|char
name|preparer_id
index|[
name|ISODCL
argument_list|(
literal|447
argument_list|,
literal|574
argument_list|)
index|]
decl_stmt|;
comment|/* achars */
name|char
name|application_id
index|[
name|ISODCL
argument_list|(
literal|575
argument_list|,
literal|702
argument_list|)
index|]
decl_stmt|;
comment|/* achars */
name|char
name|copyright_file_id
index|[
name|ISODCL
argument_list|(
literal|703
argument_list|,
literal|739
argument_list|)
index|]
decl_stmt|;
comment|/* 7.5 dchars */
name|char
name|abstract_file_id
index|[
name|ISODCL
argument_list|(
literal|740
argument_list|,
literal|776
argument_list|)
index|]
decl_stmt|;
comment|/* 7.5 dchars */
name|char
name|bibliographic_file_id
index|[
name|ISODCL
argument_list|(
literal|777
argument_list|,
literal|813
argument_list|)
index|]
decl_stmt|;
comment|/* 7.5 dchars */
name|char
name|creation_date
index|[
name|ISODCL
argument_list|(
literal|814
argument_list|,
literal|830
argument_list|)
index|]
decl_stmt|;
comment|/* 8.4.26.1 */
name|char
name|modification_date
index|[
name|ISODCL
argument_list|(
literal|831
argument_list|,
literal|847
argument_list|)
index|]
decl_stmt|;
comment|/* 8.4.26.1 */
name|char
name|expiration_date
index|[
name|ISODCL
argument_list|(
literal|848
argument_list|,
literal|864
argument_list|)
index|]
decl_stmt|;
comment|/* 8.4.26.1 */
name|char
name|effective_date
index|[
name|ISODCL
argument_list|(
literal|865
argument_list|,
literal|881
argument_list|)
index|]
decl_stmt|;
comment|/* 8.4.26.1 */
name|char
name|file_structure_version
index|[
name|ISODCL
argument_list|(
literal|882
argument_list|,
literal|882
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|unused4
index|[
name|ISODCL
argument_list|(
literal|883
argument_list|,
literal|883
argument_list|)
index|]
decl_stmt|;
name|char
name|application_data
index|[
name|ISODCL
argument_list|(
literal|884
argument_list|,
literal|1395
argument_list|)
index|]
decl_stmt|;
name|char
name|unused5
index|[
name|ISODCL
argument_list|(
literal|1396
argument_list|,
literal|2048
argument_list|)
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|ISO_DEFAULT_BLOCK_SIZE
value|2048
end_define

begin_struct
struct|struct
name|iso_sierra_primary_descriptor
block|{
name|char
name|unknown1
index|[
name|ISODCL
argument_list|(
literal|1
argument_list|,
literal|8
argument_list|)
index|]
decl_stmt|;
comment|/* 733 */
name|char
name|type
index|[
name|ISODCL
argument_list|(
literal|9
argument_list|,
literal|9
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|id
index|[
name|ISODCL
argument_list|(
literal|10
argument_list|,
literal|14
argument_list|)
index|]
decl_stmt|;
name|char
name|version
index|[
name|ISODCL
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|unused1
index|[
name|ISODCL
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
index|]
decl_stmt|;
name|char
name|system_id
index|[
name|ISODCL
argument_list|(
literal|17
argument_list|,
literal|48
argument_list|)
index|]
decl_stmt|;
comment|/* achars */
name|char
name|volume_id
index|[
name|ISODCL
argument_list|(
literal|49
argument_list|,
literal|80
argument_list|)
index|]
decl_stmt|;
comment|/* dchars */
name|char
name|unused2
index|[
name|ISODCL
argument_list|(
literal|81
argument_list|,
literal|88
argument_list|)
index|]
decl_stmt|;
name|char
name|volume_space_size
index|[
name|ISODCL
argument_list|(
literal|89
argument_list|,
literal|96
argument_list|)
index|]
decl_stmt|;
comment|/* 733 */
name|char
name|unused3
index|[
name|ISODCL
argument_list|(
literal|97
argument_list|,
literal|128
argument_list|)
index|]
decl_stmt|;
name|char
name|volume_set_size
index|[
name|ISODCL
argument_list|(
literal|129
argument_list|,
literal|132
argument_list|)
index|]
decl_stmt|;
comment|/* 723 */
name|char
name|volume_sequence_number
index|[
name|ISODCL
argument_list|(
literal|133
argument_list|,
literal|136
argument_list|)
index|]
decl_stmt|;
comment|/* 723 */
name|char
name|logical_block_size
index|[
name|ISODCL
argument_list|(
literal|137
argument_list|,
literal|140
argument_list|)
index|]
decl_stmt|;
comment|/* 723 */
name|char
name|path_table_size
index|[
name|ISODCL
argument_list|(
literal|141
argument_list|,
literal|148
argument_list|)
index|]
decl_stmt|;
comment|/* 733 */
name|char
name|type_l_path_table
index|[
name|ISODCL
argument_list|(
literal|149
argument_list|,
literal|152
argument_list|)
index|]
decl_stmt|;
comment|/* 731 */
name|char
name|opt_type_l_path_table
index|[
name|ISODCL
argument_list|(
literal|153
argument_list|,
literal|156
argument_list|)
index|]
decl_stmt|;
comment|/* 731 */
name|char
name|unknown2
index|[
name|ISODCL
argument_list|(
literal|157
argument_list|,
literal|160
argument_list|)
index|]
decl_stmt|;
comment|/* 731 */
name|char
name|unknown3
index|[
name|ISODCL
argument_list|(
literal|161
argument_list|,
literal|164
argument_list|)
index|]
decl_stmt|;
comment|/* 731 */
name|char
name|type_m_path_table
index|[
name|ISODCL
argument_list|(
literal|165
argument_list|,
literal|168
argument_list|)
index|]
decl_stmt|;
comment|/* 732 */
name|char
name|opt_type_m_path_table
index|[
name|ISODCL
argument_list|(
literal|169
argument_list|,
literal|172
argument_list|)
index|]
decl_stmt|;
comment|/* 732 */
name|char
name|unknown4
index|[
name|ISODCL
argument_list|(
literal|173
argument_list|,
literal|176
argument_list|)
index|]
decl_stmt|;
comment|/* 732 */
name|char
name|unknown5
index|[
name|ISODCL
argument_list|(
literal|177
argument_list|,
literal|180
argument_list|)
index|]
decl_stmt|;
comment|/* 732 */
name|char
name|root_directory_record
index|[
name|ISODCL
argument_list|(
literal|181
argument_list|,
literal|214
argument_list|)
index|]
decl_stmt|;
comment|/* 9.1 */
name|char
name|volume_set_id
index|[
name|ISODCL
argument_list|(
literal|215
argument_list|,
literal|342
argument_list|)
index|]
decl_stmt|;
comment|/* dchars */
name|char
name|publisher_id
index|[
name|ISODCL
argument_list|(
literal|343
argument_list|,
literal|470
argument_list|)
index|]
decl_stmt|;
comment|/* achars */
name|char
name|preparer_id
index|[
name|ISODCL
argument_list|(
literal|471
argument_list|,
literal|598
argument_list|)
index|]
decl_stmt|;
comment|/* achars */
name|char
name|application_id
index|[
name|ISODCL
argument_list|(
literal|599
argument_list|,
literal|726
argument_list|)
index|]
decl_stmt|;
comment|/* achars */
name|char
name|copyright_id
index|[
name|ISODCL
argument_list|(
literal|727
argument_list|,
literal|790
argument_list|)
index|]
decl_stmt|;
comment|/* achars */
name|char
name|creation_date
index|[
name|ISODCL
argument_list|(
literal|791
argument_list|,
literal|806
argument_list|)
index|]
decl_stmt|;
comment|/* ? */
name|char
name|modification_date
index|[
name|ISODCL
argument_list|(
literal|807
argument_list|,
literal|822
argument_list|)
index|]
decl_stmt|;
comment|/* ? */
name|char
name|expiration_date
index|[
name|ISODCL
argument_list|(
literal|823
argument_list|,
literal|838
argument_list|)
index|]
decl_stmt|;
comment|/* ? */
name|char
name|effective_date
index|[
name|ISODCL
argument_list|(
literal|839
argument_list|,
literal|854
argument_list|)
index|]
decl_stmt|;
comment|/* ? */
name|char
name|file_structure_version
index|[
name|ISODCL
argument_list|(
literal|855
argument_list|,
literal|855
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|unused4
index|[
name|ISODCL
argument_list|(
literal|856
argument_list|,
literal|2048
argument_list|)
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|iso_directory_record
block|{
name|char
name|length
index|[
name|ISODCL
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|ext_attr_length
index|[
name|ISODCL
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|u_char
name|extent
index|[
name|ISODCL
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
index|]
decl_stmt|;
comment|/* 733 */
name|u_char
name|size
index|[
name|ISODCL
argument_list|(
literal|11
argument_list|,
literal|18
argument_list|)
index|]
decl_stmt|;
comment|/* 733 */
name|char
name|date
index|[
name|ISODCL
argument_list|(
literal|19
argument_list|,
literal|25
argument_list|)
index|]
decl_stmt|;
comment|/* 7 by 711 */
name|char
name|flags
index|[
name|ISODCL
argument_list|(
literal|26
argument_list|,
literal|26
argument_list|)
index|]
decl_stmt|;
name|char
name|file_unit_size
index|[
name|ISODCL
argument_list|(
literal|27
argument_list|,
literal|27
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|interleave
index|[
name|ISODCL
argument_list|(
literal|28
argument_list|,
literal|28
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|volume_sequence_number
index|[
name|ISODCL
argument_list|(
literal|29
argument_list|,
literal|32
argument_list|)
index|]
decl_stmt|;
comment|/* 723 */
name|char
name|name_len
index|[
name|ISODCL
argument_list|(
literal|33
argument_list|,
literal|33
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|name
index|[
literal|1
index|]
decl_stmt|;
comment|/* XXX */
block|}
struct|;
end_struct

begin_comment
comment|/* can't take sizeof(iso_directory_record), because of possible alignment    of the last entry (34 instead of 33) */
end_comment

begin_define
define|#
directive|define
name|ISO_DIRECTORY_RECORD_SIZE
value|33
end_define

begin_struct
struct|struct
name|iso_extended_attributes
block|{
name|u_char
name|owner
index|[
name|ISODCL
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|)
index|]
decl_stmt|;
comment|/* 723 */
name|u_char
name|group
index|[
name|ISODCL
argument_list|(
literal|5
argument_list|,
literal|8
argument_list|)
index|]
decl_stmt|;
comment|/* 723 */
name|u_char
name|perm
index|[
name|ISODCL
argument_list|(
literal|9
argument_list|,
literal|10
argument_list|)
index|]
decl_stmt|;
comment|/* 9.5.3 */
name|char
name|ctime
index|[
name|ISODCL
argument_list|(
literal|11
argument_list|,
literal|27
argument_list|)
index|]
decl_stmt|;
comment|/* 8.4.26.1 */
name|char
name|mtime
index|[
name|ISODCL
argument_list|(
literal|28
argument_list|,
literal|44
argument_list|)
index|]
decl_stmt|;
comment|/* 8.4.26.1 */
name|char
name|xtime
index|[
name|ISODCL
argument_list|(
literal|45
argument_list|,
literal|61
argument_list|)
index|]
decl_stmt|;
comment|/* 8.4.26.1 */
name|char
name|ftime
index|[
name|ISODCL
argument_list|(
literal|62
argument_list|,
literal|78
argument_list|)
index|]
decl_stmt|;
comment|/* 8.4.26.1 */
name|char
name|recfmt
index|[
name|ISODCL
argument_list|(
literal|79
argument_list|,
literal|79
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|recattr
index|[
name|ISODCL
argument_list|(
literal|80
argument_list|,
literal|80
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|u_char
name|reclen
index|[
name|ISODCL
argument_list|(
literal|81
argument_list|,
literal|84
argument_list|)
index|]
decl_stmt|;
comment|/* 723 */
name|char
name|system_id
index|[
name|ISODCL
argument_list|(
literal|85
argument_list|,
literal|116
argument_list|)
index|]
decl_stmt|;
comment|/* achars */
name|char
name|system_use
index|[
name|ISODCL
argument_list|(
literal|117
argument_list|,
literal|180
argument_list|)
index|]
decl_stmt|;
name|char
name|version
index|[
name|ISODCL
argument_list|(
literal|181
argument_list|,
literal|181
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|len_esc
index|[
name|ISODCL
argument_list|(
literal|182
argument_list|,
literal|182
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|char
name|reserved
index|[
name|ISODCL
argument_list|(
literal|183
argument_list|,
literal|246
argument_list|)
index|]
decl_stmt|;
name|u_char
name|len_au
index|[
name|ISODCL
argument_list|(
literal|247
argument_list|,
literal|250
argument_list|)
index|]
decl_stmt|;
comment|/* 723 */
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|KERNEL
end_ifdef

begin_comment
comment|/* CD-ROM Format type */
end_comment

begin_enum
enum|enum
name|ISO_FTYPE
block|{
name|ISO_FTYPE_DEFAULT
block|,
name|ISO_FTYPE_9660
block|,
name|ISO_FTYPE_RRIP
block|,
name|ISO_FTYPE_ECMA
block|,
name|ISO_FTYPE_HIGH_SIERRA
block|}
enum|;
end_enum

begin_ifndef
ifndef|#
directive|ifndef
name|ISOFSMNT_ROOT
end_ifndef

begin_define
define|#
directive|define
name|ISOFSMNT_ROOT
value|0
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_struct
struct|struct
name|iso_mnt
block|{
name|int
name|im_flags
decl_stmt|;
name|struct
name|mount
modifier|*
name|im_mountp
decl_stmt|;
name|dev_t
name|im_dev
decl_stmt|;
name|struct
name|vnode
modifier|*
name|im_devvp
decl_stmt|;
name|int
name|logical_block_size
decl_stmt|;
name|int
name|im_bshift
decl_stmt|;
name|int
name|im_bmask
decl_stmt|;
name|int
name|volume_space_size
decl_stmt|;
name|struct
name|netexport
name|im_export
decl_stmt|;
name|char
name|root
index|[
name|ISODCL
argument_list|(
literal|157
argument_list|,
literal|190
argument_list|)
index|]
decl_stmt|;
name|int
name|root_extent
decl_stmt|;
name|int
name|root_size
decl_stmt|;
name|enum
name|ISO_FTYPE
name|iso_ftype
decl_stmt|;
name|int
name|rr_skip
decl_stmt|;
name|int
name|rr_skip0
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|VFSTOISOFS
parameter_list|(
name|mp
parameter_list|)
value|((struct iso_mnt *)((mp)->mnt_data))
end_define

begin_define
define|#
directive|define
name|blkoff
parameter_list|(
name|imp
parameter_list|,
name|loc
parameter_list|)
value|((loc)& (imp)->im_bmask)
end_define

begin_define
define|#
directive|define
name|lblktosize
parameter_list|(
name|imp
parameter_list|,
name|blk
parameter_list|)
value|((blk)<< (imp)->im_bshift)
end_define

begin_define
define|#
directive|define
name|lblkno
parameter_list|(
name|imp
parameter_list|,
name|loc
parameter_list|)
value|((loc)>> (imp)->im_bshift)
end_define

begin_define
define|#
directive|define
name|blksize
parameter_list|(
name|imp
parameter_list|,
name|ip
parameter_list|,
name|lbn
parameter_list|)
value|((imp)->logical_block_size)
end_define

begin_decl_stmt
name|int
name|cd9660_vget_internal
name|__P
argument_list|(
operator|(
expr|struct
name|mount
operator|*
operator|,
name|ino_t
operator|,
expr|struct
name|vnode
operator|*
operator|*
operator|,
name|int
operator|,
expr|struct
name|iso_directory_record
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|cd9660_init
name|__P
argument_list|(
operator|(
expr|struct
name|vfsconf
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|cd9660_sysctl
value|((int (*) __P((int *, u_int, void *, size_t *, void *, \                                     size_t, struct proc *)))eopnotsupp)
end_define

begin_decl_stmt
specifier|extern
name|vop_t
modifier|*
modifier|*
name|cd9660_vnodeop_p
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|vop_t
modifier|*
modifier|*
name|cd9660_specop_p
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|vop_t
modifier|*
modifier|*
name|cd9660_fifoop_p
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|isofncmp
name|__P
argument_list|(
operator|(
name|u_char
operator|*
operator|,
name|int
operator|,
name|u_char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|isofntrans
name|__P
argument_list|(
operator|(
name|u_char
operator|*
operator|,
name|int
operator|,
name|u_char
operator|*
operator|,
name|u_short
operator|*
operator|,
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|ino_t
name|isodirino
name|__P
argument_list|(
operator|(
expr|struct
name|iso_directory_record
operator|*
operator|,
expr|struct
name|iso_mnt
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* KERNEL */
end_comment

begin_comment
comment|/*  * The isonum_xxx functions are inlined anyway, and could come handy even  * outside the kernel.  Thus we don't hide them here.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|int
name|isonum_711
name|__P
argument_list|(
operator|(
name|u_char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
name|__inline
name|int
name|isonum_711
parameter_list|(
name|p
parameter_list|)
name|u_char
modifier|*
name|p
decl_stmt|;
block|{
return|return
operator|*
name|p
return|;
block|}
end_function

begin_decl_stmt
specifier|static
name|__inline
name|int
name|isonum_712
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
name|__inline
name|int
name|isonum_712
parameter_list|(
name|p
parameter_list|)
name|char
modifier|*
name|p
decl_stmt|;
block|{
return|return
operator|*
name|p
return|;
block|}
end_function

begin_ifndef
ifndef|#
directive|ifndef
name|UNALIGNED_ACCESS
end_ifndef

begin_decl_stmt
specifier|static
name|__inline
name|int
name|isonum_723
name|__P
argument_list|(
operator|(
name|u_char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
name|__inline
name|int
name|isonum_723
parameter_list|(
name|p
parameter_list|)
name|u_char
modifier|*
name|p
decl_stmt|;
block|{
return|return
operator|*
name|p
operator||
operator|(
name|p
index|[
literal|1
index|]
operator|<<
literal|8
operator|)
return|;
block|}
end_function

begin_decl_stmt
specifier|static
name|__inline
name|int
name|isonum_733
name|__P
argument_list|(
operator|(
name|u_char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
name|__inline
name|int
name|isonum_733
parameter_list|(
name|p
parameter_list|)
name|u_char
modifier|*
name|p
decl_stmt|;
block|{
return|return
operator|*
name|p
operator||
operator|(
name|p
index|[
literal|1
index|]
operator|<<
literal|8
operator|)
operator||
operator|(
name|p
index|[
literal|2
index|]
operator|<<
literal|16
operator|)
operator||
operator|(
name|p
index|[
literal|3
index|]
operator|<<
literal|24
operator|)
return|;
block|}
end_function

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* UNALIGNED_ACCESS */
end_comment

begin_if
if|#
directive|if
name|BYTE_ORDER
operator|==
name|LITTLE_ENDIAN
end_if

begin_decl_stmt
specifier|static
name|__inline
name|int
name|isonum_723
argument_list|(
name|p
argument_list|)
name|u_char
modifier|*
name|p
block|{
return|return
operator|*
operator|(
name|u_int16t
operator|*
operator|)
name|p
return|;
block|}
end_decl_stmt

begin_function
specifier|static
name|__inline
name|int
name|isonum_733
parameter_list|(
name|p
parameter_list|)
name|u_char
modifier|*
name|p
decl_stmt|;
block|{
return|return
operator|*
operator|(
name|u_int32t
operator|*
operator|)
name|p
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
name|BYTE_ORDER
operator|==
name|BIG_ENDIAN
end_if

begin_decl_stmt
specifier|static
name|__inline
name|int
name|isonum_723
argument_list|(
name|p
argument_list|)
name|u_char
modifier|*
name|p
block|{
return|return
operator|*
operator|(
name|u_int16t
operator|*
operator|)
operator|(
name|p
operator|+
literal|2
operator|)
return|;
block|}
end_decl_stmt

begin_function
specifier|static
name|__inline
name|int
name|isonum_733
parameter_list|(
name|p
parameter_list|)
name|u_char
modifier|*
name|p
decl_stmt|;
block|{
return|return
operator|*
operator|(
name|u_int32t
operator|*
operator|)
operator|(
name|p
operator|+
literal|4
operator|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* UNALIGNED_ACCESS */
end_comment

begin_comment
comment|/*  * Associated files have a leading '='.  */
end_comment

begin_define
define|#
directive|define
name|ASSOCCHAR
value|'='
end_define

end_unit

