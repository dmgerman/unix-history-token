begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1993, 1994  *	The Regents of the University of California.  All rights reserved.  *  * This code is derived from software contributed to Berkeley  * by Pace Willisson (pace@blitz.com).  The Rock Ridge Extension  * Support code is derived from software contributed to Berkeley  * by Atsushi Murai (amurai@spec.co.jp).  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by the University of  *	California, Berkeley and its contributors.  * 4. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	@(#)cd9660_rrip.h	8.1 (Berkeley) 1/21/94  * $Id: cd9660_rrip.h,v 1.2 1994/08/02 07:41:30 davidg Exp $  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|char
name|type
index|[
name|ISODCL
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
index|]
decl_stmt|;
name|unsigned
name|char
name|length
index|[
name|ISODCL
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
index|]
decl_stmt|;
comment|/* 711 */
name|unsigned
name|char
name|version
index|[
name|ISODCL
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
index|]
decl_stmt|;
block|}
name|ISO_SUSP_HEADER
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|ISO_SUSP_HEADER
name|h
decl_stmt|;
name|char
name|mode_l
index|[
name|ISODCL
argument_list|(
literal|4
argument_list|,
literal|7
argument_list|)
index|]
decl_stmt|;
comment|/* 731 */
name|char
name|mode_m
index|[
name|ISODCL
argument_list|(
literal|8
argument_list|,
literal|11
argument_list|)
index|]
decl_stmt|;
comment|/* 732 */
name|char
name|links_l
index|[
name|ISODCL
argument_list|(
literal|12
argument_list|,
literal|15
argument_list|)
index|]
decl_stmt|;
comment|/* 731 */
name|char
name|links_m
index|[
name|ISODCL
argument_list|(
literal|16
argument_list|,
literal|19
argument_list|)
index|]
decl_stmt|;
comment|/* 732 */
name|char
name|uid_l
index|[
name|ISODCL
argument_list|(
literal|20
argument_list|,
literal|23
argument_list|)
index|]
decl_stmt|;
comment|/* 731 */
name|char
name|uid_m
index|[
name|ISODCL
argument_list|(
literal|24
argument_list|,
literal|27
argument_list|)
index|]
decl_stmt|;
comment|/* 732 */
name|char
name|gid_l
index|[
name|ISODCL
argument_list|(
literal|28
argument_list|,
literal|31
argument_list|)
index|]
decl_stmt|;
comment|/* 731 */
name|char
name|gid_m
index|[
name|ISODCL
argument_list|(
literal|32
argument_list|,
literal|35
argument_list|)
index|]
decl_stmt|;
comment|/* 732 */
block|}
name|ISO_RRIP_ATTR
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|ISO_SUSP_HEADER
name|h
decl_stmt|;
name|char
name|dev_t_high_l
index|[
name|ISODCL
argument_list|(
literal|4
argument_list|,
literal|7
argument_list|)
index|]
decl_stmt|;
comment|/* 731 */
name|char
name|dev_t_high_m
index|[
name|ISODCL
argument_list|(
literal|8
argument_list|,
literal|11
argument_list|)
index|]
decl_stmt|;
comment|/* 732 */
name|char
name|dev_t_low_l
index|[
name|ISODCL
argument_list|(
literal|12
argument_list|,
literal|15
argument_list|)
index|]
decl_stmt|;
comment|/* 731 */
name|char
name|dev_t_low_m
index|[
name|ISODCL
argument_list|(
literal|16
argument_list|,
literal|19
argument_list|)
index|]
decl_stmt|;
comment|/* 732 */
block|}
name|ISO_RRIP_DEVICE
typedef|;
end_typedef

begin_define
define|#
directive|define
name|ISO_SUSP_CFLAG_CONTINUE
value|0x01
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_CFLAG_CURRENT
value|0x02
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_CFLAG_PARENT
value|0x04
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_CFLAG_ROOT
value|0x08
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_CFLAG_VOLROOT
value|0x10
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_CFLAG_HOST
value|0x20
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|u_char
name|cflag
index|[
name|ISODCL
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
index|]
decl_stmt|;
name|u_char
name|clen
index|[
name|ISODCL
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
index|]
decl_stmt|;
name|u_char
name|name
index|[
literal|0
index|]
decl_stmt|;
block|}
name|ISO_RRIP_SLINK_COMPONENT
typedef|;
end_typedef

begin_define
define|#
directive|define
name|ISO_RRIP_SLSIZ
value|2
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|ISO_SUSP_HEADER
name|h
decl_stmt|;
name|u_char
name|flags
index|[
name|ISODCL
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
index|]
decl_stmt|;
name|u_char
name|component
index|[
name|ISODCL
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
index|]
decl_stmt|;
block|}
name|ISO_RRIP_SLINK
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|ISO_SUSP_HEADER
name|h
decl_stmt|;
name|char
name|flags
index|[
name|ISODCL
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
index|]
decl_stmt|;
block|}
name|ISO_RRIP_ALTNAME
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|ISO_SUSP_HEADER
name|h
decl_stmt|;
name|char
name|dir_loc
index|[
name|ISODCL
argument_list|(
literal|4
argument_list|,
literal|11
argument_list|)
index|]
decl_stmt|;
comment|/* 733 */
block|}
name|ISO_RRIP_CLINK
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|ISO_SUSP_HEADER
name|h
decl_stmt|;
name|char
name|dir_loc
index|[
name|ISODCL
argument_list|(
literal|4
argument_list|,
literal|11
argument_list|)
index|]
decl_stmt|;
comment|/* 733 */
block|}
name|ISO_RRIP_PLINK
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|ISO_SUSP_HEADER
name|h
decl_stmt|;
block|}
name|ISO_RRIP_RELDIR
typedef|;
end_typedef

begin_define
define|#
directive|define
name|ISO_SUSP_TSTAMP_FORM17
value|0x80
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_TSTAMP_FORM7
value|0x00
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_TSTAMP_CREAT
value|0x01
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_TSTAMP_MODIFY
value|0x02
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_TSTAMP_ACCESS
value|0x04
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_TSTAMP_ATTR
value|0x08
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_TSTAMP_BACKUP
value|0x10
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_TSTAMP_EXPIRE
value|0x20
end_define

begin_define
define|#
directive|define
name|ISO_SUSP_TSTAMP_EFFECT
value|0x40
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|ISO_SUSP_HEADER
name|h
decl_stmt|;
name|unsigned
name|char
name|flags
index|[
name|ISODCL
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
index|]
decl_stmt|;
name|unsigned
name|char
name|time
index|[
name|ISODCL
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
index|]
decl_stmt|;
block|}
name|ISO_RRIP_TSTAMP
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|ISO_SUSP_HEADER
name|h
decl_stmt|;
name|unsigned
name|char
name|flags
index|[
name|ISODCL
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
index|]
decl_stmt|;
block|}
name|ISO_RRIP_IDFLAG
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|ISO_SUSP_HEADER
name|h
decl_stmt|;
name|char
name|len_id
index|[
name|ISODCL
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
index|]
decl_stmt|;
name|char
name|len_des
index|[
name|ISODCL
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
index|]
decl_stmt|;
name|char
name|len_src
index|[
name|ISODCL
argument_list|(
literal|6
argument_list|,
literal|6
argument_list|)
index|]
decl_stmt|;
name|char
name|version
index|[
name|ISODCL
argument_list|(
literal|7
argument_list|,
literal|7
argument_list|)
index|]
decl_stmt|;
block|}
name|ISO_RRIP_EXTREF
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|ISO_SUSP_HEADER
name|h
decl_stmt|;
name|char
name|check
index|[
name|ISODCL
argument_list|(
literal|4
argument_list|,
literal|5
argument_list|)
index|]
decl_stmt|;
name|char
name|skip
index|[
name|ISODCL
argument_list|(
literal|6
argument_list|,
literal|6
argument_list|)
index|]
decl_stmt|;
block|}
name|ISO_RRIP_OFFSET
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|ISO_SUSP_HEADER
name|h
decl_stmt|;
name|char
name|location
index|[
name|ISODCL
argument_list|(
literal|4
argument_list|,
literal|11
argument_list|)
index|]
decl_stmt|;
name|char
name|offset
index|[
name|ISODCL
argument_list|(
literal|12
argument_list|,
literal|19
argument_list|)
index|]
decl_stmt|;
name|char
name|length
index|[
name|ISODCL
argument_list|(
literal|20
argument_list|,
literal|27
argument_list|)
index|]
decl_stmt|;
block|}
name|ISO_RRIP_CONT
typedef|;
end_typedef

end_unit

