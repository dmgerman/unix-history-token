begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2007 Pawel Jakub Dawidek<pjd@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_OPENSOLARIS_SYS_SID_H_
end_ifndef

begin_define
define|#
directive|define
name|_OPENSOLARIS_SYS_SID_H_
end_define

begin_typedef
typedef|typedef
struct|struct
name|ksiddomain
block|{
name|char
modifier|*
name|kd_name
decl_stmt|;
comment|/* Domain part of SID */
name|uint_t
name|kd_len
decl_stmt|;
block|}
name|ksiddomain_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|void
name|ksid_t
typedef|;
end_typedef

begin_function
specifier|static
name|__inline
name|ksiddomain_t
modifier|*
name|ksid_lookupdomain
parameter_list|(
specifier|const
name|char
modifier|*
name|domain
parameter_list|)
block|{
name|ksiddomain_t
modifier|*
name|kd
decl_stmt|;
name|size_t
name|len
decl_stmt|;
name|len
operator|=
name|strlen
argument_list|(
name|domain
argument_list|)
operator|+
literal|1
expr_stmt|;
name|kd
operator|=
name|kmem_alloc
argument_list|(
sizeof|sizeof
argument_list|(
operator|*
name|kd
argument_list|)
argument_list|,
name|KM_SLEEP
argument_list|)
expr_stmt|;
name|kd
operator|->
name|kd_len
operator|=
operator|(
name|uint_t
operator|)
name|len
expr_stmt|;
name|kd
operator|->
name|kd_name
operator|=
name|kmem_alloc
argument_list|(
name|len
argument_list|,
name|KM_SLEEP
argument_list|)
expr_stmt|;
name|strcpy
argument_list|(
name|kd
operator|->
name|kd_name
argument_list|,
name|domain
argument_list|)
expr_stmt|;
return|return
operator|(
name|kd
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|ksiddomain_rele
parameter_list|(
name|ksiddomain_t
modifier|*
name|kd
parameter_list|)
block|{
name|kmem_free
argument_list|(
name|kd
operator|->
name|kd_name
argument_list|,
name|kd
operator|->
name|kd_len
argument_list|)
expr_stmt|;
name|kmem_free
argument_list|(
name|kd
argument_list|,
sizeof|sizeof
argument_list|(
operator|*
name|kd
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _OPENSOLARIS_SYS_SID_H_ */
end_comment

end_unit

