begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_FS_ZFS_DIR_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_FS_ZFS_DIR_H
end_define

begin_pragma
pragma|#
directive|pragma
name|ident
literal|"%Z%%M%	%I%	%E% SMI"
end_pragma

begin_include
include|#
directive|include
file|<sys/pathname.h>
end_include

begin_include
include|#
directive|include
file|<sys/dmu.h>
end_include

begin_include
include|#
directive|include
file|<sys/zfs_znode.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* zfs_dirent_lock() flags */
define|#
directive|define
name|ZNEW
value|0x0001
comment|/* entry should not exist */
define|#
directive|define
name|ZEXISTS
value|0x0002
comment|/* entry should exist */
define|#
directive|define
name|ZSHARED
value|0x0004
comment|/* shared access (zfs_dirlook()) */
define|#
directive|define
name|ZXATTR
value|0x0008
comment|/* we want the xattr dir */
define|#
directive|define
name|ZRENAMING
value|0x0010
comment|/* znode is being renamed */
define|#
directive|define
name|ZCILOOK
value|0x0020
comment|/* case-insensitive lookup requested */
define|#
directive|define
name|ZCIEXACT
value|0x0040
comment|/* c-i requires c-s match (rename) */
define|#
directive|define
name|ZHAVELOCK
value|0x0080
comment|/* z_name_lock is already held */
comment|/* mknode flags */
define|#
directive|define
name|IS_ROOT_NODE
value|0x01
comment|/* create a root node */
define|#
directive|define
name|IS_XATTR
value|0x02
comment|/* create an extended attribute node */
define|#
directive|define
name|IS_REPLAY
value|0x04
comment|/* we are replaying intent log */
specifier|extern
name|int
name|zfs_dirent_lock
parameter_list|(
name|zfs_dirlock_t
modifier|*
modifier|*
parameter_list|,
name|znode_t
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|znode_t
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|,
name|pathname_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|zfs_dirent_unlock
parameter_list|(
name|zfs_dirlock_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|zfs_link_create
parameter_list|(
name|zfs_dirlock_t
modifier|*
parameter_list|,
name|znode_t
modifier|*
parameter_list|,
name|dmu_tx_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|int
name|zfs_link_destroy
parameter_list|(
name|zfs_dirlock_t
modifier|*
parameter_list|,
name|znode_t
modifier|*
parameter_list|,
name|dmu_tx_t
modifier|*
parameter_list|,
name|int
parameter_list|,
name|boolean_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|zfs_dirlook
parameter_list|(
name|znode_t
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|vnode_t
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|,
name|pathname_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|zfs_mknode
parameter_list|(
name|znode_t
modifier|*
parameter_list|,
name|vattr_t
modifier|*
parameter_list|,
name|dmu_tx_t
modifier|*
parameter_list|,
name|cred_t
modifier|*
parameter_list|,
name|uint_t
parameter_list|,
name|znode_t
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
name|zfs_acl_t
modifier|*
parameter_list|,
name|zfs_fuid_info_t
modifier|*
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|zfs_rmnode
parameter_list|(
name|znode_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|zfs_dl_name_switch
parameter_list|(
name|zfs_dirlock_t
modifier|*
name|dl
parameter_list|,
name|char
modifier|*
name|new
parameter_list|,
name|char
modifier|*
modifier|*
name|old
parameter_list|)
function_decl|;
specifier|extern
name|boolean_t
name|zfs_dirempty
parameter_list|(
name|znode_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|zfs_unlinked_add
parameter_list|(
name|znode_t
modifier|*
parameter_list|,
name|dmu_tx_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|zfs_unlinked_drain
parameter_list|(
name|zfsvfs_t
modifier|*
name|zfsvfs
parameter_list|)
function_decl|;
specifier|extern
name|int
name|zfs_sticky_remove_access
parameter_list|(
name|znode_t
modifier|*
parameter_list|,
name|znode_t
modifier|*
parameter_list|,
name|cred_t
modifier|*
name|cr
parameter_list|)
function_decl|;
specifier|extern
name|int
name|zfs_get_xattrdir
parameter_list|(
name|znode_t
modifier|*
parameter_list|,
name|vnode_t
modifier|*
modifier|*
parameter_list|,
name|cred_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|int
name|zfs_make_xattrdir
parameter_list|(
name|znode_t
modifier|*
parameter_list|,
name|vattr_t
modifier|*
parameter_list|,
name|vnode_t
modifier|*
modifier|*
parameter_list|,
name|cred_t
modifier|*
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_FS_ZFS_DIR_H */
end_comment

end_unit

