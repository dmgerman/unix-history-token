begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_comment
comment|/*  * Copyright (c) 2013, 2014 by Delphix. All rights reserved.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_RANGE_TREE_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_RANGE_TREE_H
end_define

begin_include
include|#
directive|include
file|<sys/avl.h>
end_include

begin_include
include|#
directive|include
file|<sys/dmu.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
define|#
directive|define
name|RANGE_TREE_HISTOGRAM_SIZE
value|64
typedef|typedef
name|struct
name|range_tree_ops
name|range_tree_ops_t
typedef|;
typedef|typedef
struct|struct
name|range_tree
block|{
name|avl_tree_t
name|rt_root
decl_stmt|;
comment|/* offset-ordered segment AVL tree */
name|uint64_t
name|rt_space
decl_stmt|;
comment|/* sum of all segments in the map */
name|range_tree_ops_t
modifier|*
name|rt_ops
decl_stmt|;
name|void
modifier|*
name|rt_arg
decl_stmt|;
comment|/* 	 * The rt_histogram maintains a histogram of ranges. Each bucket, 	 * rt_histogram[i], contains the number of ranges whose size is: 	 * 2^i<= size of range in bytes< 2^(i+1) 	 */
name|uint64_t
name|rt_histogram
index|[
name|RANGE_TREE_HISTOGRAM_SIZE
index|]
decl_stmt|;
name|kmutex_t
modifier|*
name|rt_lock
decl_stmt|;
comment|/* pointer to lock that protects map */
block|}
name|range_tree_t
typedef|;
typedef|typedef
struct|struct
name|range_seg
block|{
name|avl_node_t
name|rs_node
decl_stmt|;
comment|/* AVL node */
name|avl_node_t
name|rs_pp_node
decl_stmt|;
comment|/* AVL picker-private node */
name|uint64_t
name|rs_start
decl_stmt|;
comment|/* starting offset of this segment */
name|uint64_t
name|rs_end
decl_stmt|;
comment|/* ending offset (non-inclusive) */
block|}
name|range_seg_t
typedef|;
struct|struct
name|range_tree_ops
block|{
name|void
function_decl|(
modifier|*
name|rtop_create
function_decl|)
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|rtop_destroy
function_decl|)
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|rtop_add
function_decl|)
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|,
name|range_seg_t
modifier|*
name|rs
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|rtop_remove
function_decl|)
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|,
name|range_seg_t
modifier|*
name|rs
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|rtop_vacate
function_decl|)
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
block|}
struct|;
typedef|typedef
name|void
name|range_tree_func_t
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|,
name|uint64_t
name|start
parameter_list|,
name|uint64_t
name|size
parameter_list|)
function_decl|;
name|void
name|range_tree_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|range_tree_fini
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|range_tree_t
modifier|*
name|range_tree_create
parameter_list|(
name|range_tree_ops_t
modifier|*
name|ops
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|,
name|kmutex_t
modifier|*
name|lp
parameter_list|)
function_decl|;
name|void
name|range_tree_destroy
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|)
function_decl|;
name|boolean_t
name|range_tree_contains
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|,
name|uint64_t
name|start
parameter_list|,
name|uint64_t
name|size
parameter_list|)
function_decl|;
name|uint64_t
name|range_tree_space
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|)
function_decl|;
name|void
name|range_tree_verify
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|,
name|uint64_t
name|start
parameter_list|,
name|uint64_t
name|size
parameter_list|)
function_decl|;
name|void
name|range_tree_swap
parameter_list|(
name|range_tree_t
modifier|*
modifier|*
name|rtsrc
parameter_list|,
name|range_tree_t
modifier|*
modifier|*
name|rtdst
parameter_list|)
function_decl|;
name|void
name|range_tree_stat_verify
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|)
function_decl|;
name|void
name|range_tree_add
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|,
name|uint64_t
name|start
parameter_list|,
name|uint64_t
name|size
parameter_list|)
function_decl|;
name|void
name|range_tree_remove
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|,
name|uint64_t
name|start
parameter_list|,
name|uint64_t
name|size
parameter_list|)
function_decl|;
name|void
name|range_tree_clear
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|,
name|uint64_t
name|start
parameter_list|,
name|uint64_t
name|size
parameter_list|)
function_decl|;
name|void
name|range_tree_vacate
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|,
name|range_tree_func_t
modifier|*
name|func
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
name|void
name|range_tree_walk
parameter_list|(
name|range_tree_t
modifier|*
name|rt
parameter_list|,
name|range_tree_func_t
modifier|*
name|func
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_RANGE_TREE_H */
end_comment

end_unit

