begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2010 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_comment
comment|/*  * Copyright (c) 2012 by Delphix. All rights reserved.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_TXG_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_TXG_H
end_define

begin_include
include|#
directive|include
file|<sys/spa.h>
end_include

begin_include
include|#
directive|include
file|<sys/zfs_context.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
define|#
directive|define
name|TXG_CONCURRENT_STATES
value|3
comment|/* open, quiescing, syncing	*/
define|#
directive|define
name|TXG_SIZE
value|4
comment|/* next power of 2	*/
define|#
directive|define
name|TXG_MASK
value|(TXG_SIZE - 1)
comment|/* mask for size	*/
define|#
directive|define
name|TXG_INITIAL
value|TXG_SIZE
comment|/* initial txg 		*/
define|#
directive|define
name|TXG_IDX
value|(txg& TXG_MASK)
comment|/* Number of txgs worth of frees we defer adding to in-core spacemaps */
define|#
directive|define
name|TXG_DEFER_SIZE
value|2
define|#
directive|define
name|TXG_WAIT
value|1ULL
define|#
directive|define
name|TXG_NOWAIT
value|2ULL
typedef|typedef
name|struct
name|tx_cpu
name|tx_cpu_t
typedef|;
typedef|typedef
struct|struct
name|txg_handle
block|{
name|tx_cpu_t
modifier|*
name|th_cpu
decl_stmt|;
name|uint64_t
name|th_txg
decl_stmt|;
block|}
name|txg_handle_t
typedef|;
typedef|typedef
struct|struct
name|txg_node
block|{
name|struct
name|txg_node
modifier|*
name|tn_next
index|[
name|TXG_SIZE
index|]
decl_stmt|;
name|uint8_t
name|tn_member
index|[
name|TXG_SIZE
index|]
decl_stmt|;
block|}
name|txg_node_t
typedef|;
typedef|typedef
struct|struct
name|txg_list
block|{
name|kmutex_t
name|tl_lock
decl_stmt|;
name|size_t
name|tl_offset
decl_stmt|;
name|txg_node_t
modifier|*
name|tl_head
index|[
name|TXG_SIZE
index|]
decl_stmt|;
block|}
name|txg_list_t
typedef|;
struct_decl|struct
name|dsl_pool
struct_decl|;
specifier|extern
name|void
name|txg_init
parameter_list|(
name|struct
name|dsl_pool
modifier|*
name|dp
parameter_list|,
name|uint64_t
name|txg
parameter_list|)
function_decl|;
specifier|extern
name|void
name|txg_fini
parameter_list|(
name|struct
name|dsl_pool
modifier|*
name|dp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|txg_sync_start
parameter_list|(
name|struct
name|dsl_pool
modifier|*
name|dp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|txg_sync_stop
parameter_list|(
name|struct
name|dsl_pool
modifier|*
name|dp
parameter_list|)
function_decl|;
specifier|extern
name|uint64_t
name|txg_hold_open
parameter_list|(
name|struct
name|dsl_pool
modifier|*
name|dp
parameter_list|,
name|txg_handle_t
modifier|*
name|txghp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|txg_rele_to_quiesce
parameter_list|(
name|txg_handle_t
modifier|*
name|txghp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|txg_rele_to_sync
parameter_list|(
name|txg_handle_t
modifier|*
name|txghp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|txg_register_callbacks
parameter_list|(
name|txg_handle_t
modifier|*
name|txghp
parameter_list|,
name|list_t
modifier|*
name|tx_callbacks
parameter_list|)
function_decl|;
comment|/*  * Delay the caller by the specified number of ticks or until  * the txg closes (whichever comes first).  This is intended  * to be used to throttle writers when the system nears its  * capacity.  */
specifier|extern
name|void
name|txg_delay
parameter_list|(
name|struct
name|dsl_pool
modifier|*
name|dp
parameter_list|,
name|uint64_t
name|txg
parameter_list|,
name|int
name|ticks
parameter_list|)
function_decl|;
comment|/*  * Wait until the given transaction group has finished syncing.  * Try to make this happen as soon as possible (eg. kick off any  * necessary syncs immediately).  If txg==0, wait for the currently open  * txg to finish syncing.  */
specifier|extern
name|void
name|txg_wait_synced
parameter_list|(
name|struct
name|dsl_pool
modifier|*
name|dp
parameter_list|,
name|uint64_t
name|txg
parameter_list|)
function_decl|;
comment|/*  * Wait until the given transaction group, or one after it, is  * the open transaction group.  Try to make this happen as soon  * as possible (eg. kick off any necessary syncs immediately).  * If txg == 0, wait for the next open txg.  */
specifier|extern
name|void
name|txg_wait_open
parameter_list|(
name|struct
name|dsl_pool
modifier|*
name|dp
parameter_list|,
name|uint64_t
name|txg
parameter_list|)
function_decl|;
comment|/*  * Returns TRUE if we are "backed up" waiting for the syncing  * transaction to complete; otherwise returns FALSE.  */
specifier|extern
name|boolean_t
name|txg_stalled
parameter_list|(
name|struct
name|dsl_pool
modifier|*
name|dp
parameter_list|)
function_decl|;
comment|/* returns TRUE if someone is waiting for the next txg to sync */
specifier|extern
name|boolean_t
name|txg_sync_waiting
parameter_list|(
name|struct
name|dsl_pool
modifier|*
name|dp
parameter_list|)
function_decl|;
comment|/*  * Per-txg object lists.  */
define|#
directive|define
name|TXG_CLEAN
parameter_list|(
name|txg
parameter_list|)
value|((txg) - 1)
specifier|extern
name|void
name|txg_list_create
parameter_list|(
name|txg_list_t
modifier|*
name|tl
parameter_list|,
name|size_t
name|offset
parameter_list|)
function_decl|;
specifier|extern
name|void
name|txg_list_destroy
parameter_list|(
name|txg_list_t
modifier|*
name|tl
parameter_list|)
function_decl|;
specifier|extern
name|boolean_t
name|txg_list_empty
parameter_list|(
name|txg_list_t
modifier|*
name|tl
parameter_list|,
name|uint64_t
name|txg
parameter_list|)
function_decl|;
specifier|extern
name|int
name|txg_list_add
parameter_list|(
name|txg_list_t
modifier|*
name|tl
parameter_list|,
name|void
modifier|*
name|p
parameter_list|,
name|uint64_t
name|txg
parameter_list|)
function_decl|;
specifier|extern
name|int
name|txg_list_add_tail
parameter_list|(
name|txg_list_t
modifier|*
name|tl
parameter_list|,
name|void
modifier|*
name|p
parameter_list|,
name|uint64_t
name|txg
parameter_list|)
function_decl|;
specifier|extern
name|void
modifier|*
name|txg_list_remove
parameter_list|(
name|txg_list_t
modifier|*
name|tl
parameter_list|,
name|uint64_t
name|txg
parameter_list|)
function_decl|;
specifier|extern
name|void
modifier|*
name|txg_list_remove_this
parameter_list|(
name|txg_list_t
modifier|*
name|tl
parameter_list|,
name|void
modifier|*
name|p
parameter_list|,
name|uint64_t
name|txg
parameter_list|)
function_decl|;
specifier|extern
name|int
name|txg_list_member
parameter_list|(
name|txg_list_t
modifier|*
name|tl
parameter_list|,
name|void
modifier|*
name|p
parameter_list|,
name|uint64_t
name|txg
parameter_list|)
function_decl|;
specifier|extern
name|void
modifier|*
name|txg_list_head
parameter_list|(
name|txg_list_t
modifier|*
name|tl
parameter_list|,
name|uint64_t
name|txg
parameter_list|)
function_decl|;
specifier|extern
name|void
modifier|*
name|txg_list_next
parameter_list|(
name|txg_list_t
modifier|*
name|tl
parameter_list|,
name|void
modifier|*
name|p
parameter_list|,
name|uint64_t
name|txg
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_TXG_H */
end_comment

end_unit

