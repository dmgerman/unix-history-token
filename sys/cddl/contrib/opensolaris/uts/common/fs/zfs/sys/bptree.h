begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright (c) 2013 by Delphix. All rights reserved.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_BPTREE_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_BPTREE_H
end_define

begin_include
include|#
directive|include
file|<sys/spa.h>
end_include

begin_include
include|#
directive|include
file|<sys/zio.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
typedef|typedef
struct|struct
name|bptree_phys
block|{
name|uint64_t
name|bt_begin
decl_stmt|;
name|uint64_t
name|bt_end
decl_stmt|;
name|uint64_t
name|bt_bytes
decl_stmt|;
name|uint64_t
name|bt_comp
decl_stmt|;
name|uint64_t
name|bt_uncomp
decl_stmt|;
block|}
name|bptree_phys_t
typedef|;
typedef|typedef
struct|struct
name|bptree_entry_phys
block|{
name|blkptr_t
name|be_bp
decl_stmt|;
name|uint64_t
name|be_birth_txg
decl_stmt|;
comment|/* only delete blocks born after this txg */
name|zbookmark_t
name|be_zb
decl_stmt|;
comment|/* holds traversal resume point if needed */
block|}
name|bptree_entry_phys_t
typedef|;
typedef|typedef
name|int
name|bptree_itor_t
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|,
specifier|const
name|blkptr_t
modifier|*
name|bp
parameter_list|,
name|dmu_tx_t
modifier|*
name|tx
parameter_list|)
function_decl|;
name|uint64_t
name|bptree_alloc
parameter_list|(
name|objset_t
modifier|*
name|os
parameter_list|,
name|dmu_tx_t
modifier|*
name|tx
parameter_list|)
function_decl|;
name|int
name|bptree_free
parameter_list|(
name|objset_t
modifier|*
name|os
parameter_list|,
name|uint64_t
name|obj
parameter_list|,
name|dmu_tx_t
modifier|*
name|tx
parameter_list|)
function_decl|;
name|boolean_t
name|bptree_is_empty
parameter_list|(
name|objset_t
modifier|*
name|os
parameter_list|,
name|uint64_t
name|obj
parameter_list|)
function_decl|;
name|void
name|bptree_add
parameter_list|(
name|objset_t
modifier|*
name|os
parameter_list|,
name|uint64_t
name|obj
parameter_list|,
name|blkptr_t
modifier|*
name|bp
parameter_list|,
name|uint64_t
name|birth_txg
parameter_list|,
name|uint64_t
name|bytes
parameter_list|,
name|uint64_t
name|comp
parameter_list|,
name|uint64_t
name|uncomp
parameter_list|,
name|dmu_tx_t
modifier|*
name|tx
parameter_list|)
function_decl|;
name|int
name|bptree_iterate
parameter_list|(
name|objset_t
modifier|*
name|os
parameter_list|,
name|uint64_t
name|obj
parameter_list|,
name|boolean_t
name|free
parameter_list|,
name|bptree_itor_t
name|func
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|,
name|dmu_tx_t
modifier|*
name|tx
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_BPTREE_H */
end_comment

end_unit

