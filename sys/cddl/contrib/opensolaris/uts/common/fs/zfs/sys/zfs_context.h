begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_comment
comment|/*  * Copyright 2011 Nexenta Systems, Inc.  All rights reserved.  * Copyright (c) 2012 by Delphix. All rights reserved.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_ZFS_CONTEXT_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_ZFS_CONTEXT_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
include|#
directive|include
file|<sys/param.h>
include|#
directive|include
file|<sys/stdint.h>
include|#
directive|include
file|<sys/note.h>
include|#
directive|include
file|<sys/kernel.h>
include|#
directive|include
file|<sys/debug.h>
include|#
directive|include
file|<sys/systm.h>
include|#
directive|include
file|<sys/proc.h>
include|#
directive|include
file|<sys/sysmacros.h>
include|#
directive|include
file|<sys/bitmap.h>
include|#
directive|include
file|<sys/cmn_err.h>
include|#
directive|include
file|<sys/kmem.h>
include|#
directive|include
file|<sys/taskq.h>
include|#
directive|include
file|<sys/taskqueue.h>
include|#
directive|include
file|<sys/systm.h>
include|#
directive|include
file|<sys/conf.h>
include|#
directive|include
file|<sys/mutex.h>
include|#
directive|include
file|<sys/rwlock.h>
include|#
directive|include
file|<sys/kcondvar.h>
include|#
directive|include
file|<sys/random.h>
include|#
directive|include
file|<sys/byteorder.h>
include|#
directive|include
file|<sys/systm.h>
include|#
directive|include
file|<sys/list.h>
include|#
directive|include
file|<sys/zfs_debug.h>
include|#
directive|include
file|<sys/sysevent.h>
include|#
directive|include
file|<sys/uio.h>
include|#
directive|include
file|<sys/dirent.h>
include|#
directive|include
file|<sys/time.h>
include|#
directive|include
file|<sys/uio.h>
include|#
directive|include
file|<sys/fcntl.h>
include|#
directive|include
file|<sys/limits.h>
include|#
directive|include
file|<sys/string.h>
include|#
directive|include
file|<sys/bio.h>
include|#
directive|include
file|<sys/buf.h>
include|#
directive|include
file|<sys/cred.h>
include|#
directive|include
file|<sys/sdt.h>
include|#
directive|include
file|<sys/file.h>
include|#
directive|include
file|<sys/vfs.h>
include|#
directive|include
file|<sys/sysctl.h>
include|#
directive|include
file|<sys/sbuf.h>
include|#
directive|include
file|<sys/priv.h>
include|#
directive|include
file|<sys/kdb.h>
include|#
directive|include
file|<sys/ktr.h>
include|#
directive|include
file|<sys/stack.h>
include|#
directive|include
file|<sys/lockf.h>
include|#
directive|include
file|<sys/pathname.h>
include|#
directive|include
file|<sys/policy.h>
include|#
directive|include
file|<sys/refstr.h>
include|#
directive|include
file|<sys/zone.h>
include|#
directive|include
file|<sys/eventhandler.h>
include|#
directive|include
file|<sys/extattr.h>
include|#
directive|include
file|<sys/misc.h>
include|#
directive|include
file|<sys/sig.h>
include|#
directive|include
file|<sys/osd.h>
include|#
directive|include
file|<sys/sysevent/dev.h>
include|#
directive|include
file|<sys/sysevent/eventdefs.h>
include|#
directive|include
file|<sys/u8_textprep.h>
include|#
directive|include
file|<sys/fm/util.h>
include|#
directive|include
file|<sys/sunddi.h>
ifdef|#
directive|ifdef
name|illumos
include|#
directive|include
file|<sys/cyclic.h>
else|#
directive|else
comment|/* FreeBSD */
include|#
directive|include
file|<sys/callout.h>
endif|#
directive|endif
include|#
directive|include
file|<machine/stdarg.h>
include|#
directive|include
file|<vm/vm.h>
include|#
directive|include
file|<vm/vm_page.h>
include|#
directive|include
file|<vm/vm_object.h>
include|#
directive|include
file|<vm/vm_pager.h>
include|#
directive|include
file|<vm/vm_kern.h>
include|#
directive|include
file|<vm/vm_map.h>
comment|/* There is clash. vm_map.h defines the two below and vdev_cache.c use them. */
ifdef|#
directive|ifdef
name|min_offset
undef|#
directive|undef
name|min_offset
endif|#
directive|endif
ifdef|#
directive|ifdef
name|max_offset
undef|#
directive|undef
name|max_offset
endif|#
directive|endif
include|#
directive|include
file|<vm/vm_extern.h>
include|#
directive|include
file|<vm/vnode_pager.h>
define|#
directive|define
name|CPU_SEQID
value|(curcpu)
define|#
directive|define
name|tsd_create
parameter_list|(
name|keyp
parameter_list|,
name|destructor
parameter_list|)
value|do {				\ 	*(keyp) = osd_thread_register((destructor));			\ 	KASSERT(*(keyp)> 0, ("cannot register OSD"));			\ } while (0)
define|#
directive|define
name|tsd_destroy
parameter_list|(
name|keyp
parameter_list|)
value|osd_thread_deregister(*(keyp))
define|#
directive|define
name|tsd_get
parameter_list|(
name|key
parameter_list|)
value|osd_thread_get(curthread, (key))
define|#
directive|define
name|tsd_set
parameter_list|(
name|key
parameter_list|,
name|value
parameter_list|)
value|osd_thread_set(curthread, (key), (value))
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|extern
name|int
name|zfs_debug_level
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|mtx
name|zfs_debug_mtx
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|ZFS_LOG
parameter_list|(
name|lvl
parameter_list|,
modifier|...
parameter_list|)
value|do {					\ 	if (((lvl)& 0xff)<= zfs_debug_level) {			\ 		mtx_lock(&zfs_debug_mtx);				\ 		printf("%s:%u[%d]: ", __func__, __LINE__, (lvl));	\ 		printf(__VA_ARGS__);					\ 		printf("\n");						\ 		if ((lvl)& 0x100)					\ 			kdb_backtrace();				\ 		mtx_unlock(&zfs_debug_mtx);				\ 	}								\ } while (0)
end_define

begin_define
define|#
directive|define
name|sys_shutdown
value|rebooting
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_ZFS_CONTEXT_H */
end_comment

end_unit

