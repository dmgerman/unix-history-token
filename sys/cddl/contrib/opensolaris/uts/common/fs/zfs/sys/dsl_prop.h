begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2008 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_DSL_PROP_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_DSL_PROP_H
end_define

begin_pragma
pragma|#
directive|pragma
name|ident
literal|"%Z%%M%	%I%	%E% SMI"
end_pragma

begin_include
include|#
directive|include
file|<sys/dmu.h>
end_include

begin_include
include|#
directive|include
file|<sys/dsl_pool.h>
end_include

begin_include
include|#
directive|include
file|<sys/zfs_context.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
struct_decl|struct
name|dsl_dataset
struct_decl|;
struct_decl|struct
name|dsl_dir
struct_decl|;
comment|/* The callback func may not call into the DMU or DSL! */
typedef|typedef
name|void
function_decl|(
name|dsl_prop_changed_cb_t
function_decl|)
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|,
name|uint64_t
name|newval
parameter_list|)
function_decl|;
typedef|typedef
struct|struct
name|dsl_prop_cb_record
block|{
name|list_node_t
name|cbr_node
decl_stmt|;
comment|/* link on dd_prop_cbs */
name|struct
name|dsl_dataset
modifier|*
name|cbr_ds
decl_stmt|;
specifier|const
name|char
modifier|*
name|cbr_propname
decl_stmt|;
name|dsl_prop_changed_cb_t
modifier|*
name|cbr_func
decl_stmt|;
name|void
modifier|*
name|cbr_arg
decl_stmt|;
block|}
name|dsl_prop_cb_record_t
typedef|;
name|int
name|dsl_prop_register
parameter_list|(
name|struct
name|dsl_dataset
modifier|*
name|ds
parameter_list|,
specifier|const
name|char
modifier|*
name|propname
parameter_list|,
name|dsl_prop_changed_cb_t
modifier|*
name|callback
parameter_list|,
name|void
modifier|*
name|cbarg
parameter_list|)
function_decl|;
name|int
name|dsl_prop_unregister
parameter_list|(
name|struct
name|dsl_dataset
modifier|*
name|ds
parameter_list|,
specifier|const
name|char
modifier|*
name|propname
parameter_list|,
name|dsl_prop_changed_cb_t
modifier|*
name|callback
parameter_list|,
name|void
modifier|*
name|cbarg
parameter_list|)
function_decl|;
name|int
name|dsl_prop_numcb
parameter_list|(
name|struct
name|dsl_dataset
modifier|*
name|ds
parameter_list|)
function_decl|;
name|int
name|dsl_prop_get
parameter_list|(
specifier|const
name|char
modifier|*
name|ddname
parameter_list|,
specifier|const
name|char
modifier|*
name|propname
parameter_list|,
name|int
name|intsz
parameter_list|,
name|int
name|numints
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|char
modifier|*
name|setpoint
parameter_list|)
function_decl|;
name|int
name|dsl_prop_get_integer
parameter_list|(
specifier|const
name|char
modifier|*
name|ddname
parameter_list|,
specifier|const
name|char
modifier|*
name|propname
parameter_list|,
name|uint64_t
modifier|*
name|valuep
parameter_list|,
name|char
modifier|*
name|setpoint
parameter_list|)
function_decl|;
name|int
name|dsl_prop_get_all
parameter_list|(
name|objset_t
modifier|*
name|os
parameter_list|,
name|nvlist_t
modifier|*
modifier|*
name|nvp
parameter_list|,
name|boolean_t
name|local
parameter_list|)
function_decl|;
name|int
name|dsl_prop_get_ds
parameter_list|(
name|struct
name|dsl_dataset
modifier|*
name|ds
parameter_list|,
specifier|const
name|char
modifier|*
name|propname
parameter_list|,
name|int
name|intsz
parameter_list|,
name|int
name|numints
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|char
modifier|*
name|setpoint
parameter_list|)
function_decl|;
name|int
name|dsl_prop_get_dd
parameter_list|(
name|struct
name|dsl_dir
modifier|*
name|dd
parameter_list|,
specifier|const
name|char
modifier|*
name|propname
parameter_list|,
name|int
name|intsz
parameter_list|,
name|int
name|numints
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|char
modifier|*
name|setpoint
parameter_list|)
function_decl|;
name|int
name|dsl_prop_set
parameter_list|(
specifier|const
name|char
modifier|*
name|ddname
parameter_list|,
specifier|const
name|char
modifier|*
name|propname
parameter_list|,
name|int
name|intsz
parameter_list|,
name|int
name|numints
parameter_list|,
specifier|const
name|void
modifier|*
name|buf
parameter_list|)
function_decl|;
name|void
name|dsl_prop_set_uint64_sync
parameter_list|(
name|dsl_dir_t
modifier|*
name|dd
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|uint64_t
name|val
parameter_list|,
name|cred_t
modifier|*
name|cr
parameter_list|,
name|dmu_tx_t
modifier|*
name|tx
parameter_list|)
function_decl|;
name|void
name|dsl_prop_nvlist_add_uint64
parameter_list|(
name|nvlist_t
modifier|*
name|nv
parameter_list|,
name|zfs_prop_t
name|prop
parameter_list|,
name|uint64_t
name|value
parameter_list|)
function_decl|;
name|void
name|dsl_prop_nvlist_add_string
parameter_list|(
name|nvlist_t
modifier|*
name|nv
parameter_list|,
name|zfs_prop_t
name|prop
parameter_list|,
specifier|const
name|char
modifier|*
name|value
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_DSL_PROP_H */
end_comment

end_unit

