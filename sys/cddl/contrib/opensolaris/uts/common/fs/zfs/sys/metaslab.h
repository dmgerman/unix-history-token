begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.  * Copyright (c) 2011, 2014 by Delphix. All rights reserved.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_METASLAB_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_METASLAB_H
end_define

begin_include
include|#
directive|include
file|<sys/spa.h>
end_include

begin_include
include|#
directive|include
file|<sys/space_map.h>
end_include

begin_include
include|#
directive|include
file|<sys/txg.h>
end_include

begin_include
include|#
directive|include
file|<sys/zio.h>
end_include

begin_include
include|#
directive|include
file|<sys/avl.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
typedef|typedef
struct|struct
name|metaslab_ops
block|{
name|uint64_t
function_decl|(
modifier|*
name|msop_alloc
function_decl|)
parameter_list|(
name|metaslab_t
modifier|*
name|msp
parameter_list|,
name|uint64_t
name|size
parameter_list|)
function_decl|;
block|}
name|metaslab_ops_t
typedef|;
specifier|extern
name|metaslab_ops_t
modifier|*
name|zfs_metaslab_ops
decl_stmt|;
name|metaslab_t
modifier|*
name|metaslab_init
parameter_list|(
name|metaslab_group_t
modifier|*
parameter_list|,
name|uint64_t
parameter_list|,
name|uint64_t
parameter_list|,
name|uint64_t
parameter_list|)
function_decl|;
name|void
name|metaslab_fini
parameter_list|(
name|metaslab_t
modifier|*
parameter_list|)
function_decl|;
name|void
name|metaslab_load_wait
parameter_list|(
name|metaslab_t
modifier|*
parameter_list|)
function_decl|;
name|int
name|metaslab_load
parameter_list|(
name|metaslab_t
modifier|*
parameter_list|)
function_decl|;
name|void
name|metaslab_unload
parameter_list|(
name|metaslab_t
modifier|*
parameter_list|)
function_decl|;
name|void
name|metaslab_sync
parameter_list|(
name|metaslab_t
modifier|*
parameter_list|,
name|uint64_t
parameter_list|)
function_decl|;
name|void
name|metaslab_sync_done
parameter_list|(
name|metaslab_t
modifier|*
parameter_list|,
name|uint64_t
parameter_list|)
function_decl|;
name|void
name|metaslab_sync_reassess
parameter_list|(
name|metaslab_group_t
modifier|*
parameter_list|)
function_decl|;
name|uint64_t
name|metaslab_block_maxsize
parameter_list|(
name|metaslab_t
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|METASLAB_HINTBP_FAVOR
value|0x0
define|#
directive|define
name|METASLAB_HINTBP_AVOID
value|0x1
define|#
directive|define
name|METASLAB_GANG_HEADER
value|0x2
define|#
directive|define
name|METASLAB_GANG_CHILD
value|0x4
define|#
directive|define
name|METASLAB_GANG_AVOID
value|0x8
name|int
name|metaslab_alloc
parameter_list|(
name|spa_t
modifier|*
parameter_list|,
name|metaslab_class_t
modifier|*
parameter_list|,
name|uint64_t
parameter_list|,
name|blkptr_t
modifier|*
parameter_list|,
name|int
parameter_list|,
name|uint64_t
parameter_list|,
name|blkptr_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
name|metaslab_free
parameter_list|(
name|spa_t
modifier|*
parameter_list|,
specifier|const
name|blkptr_t
modifier|*
parameter_list|,
name|uint64_t
parameter_list|,
name|boolean_t
parameter_list|)
function_decl|;
name|int
name|metaslab_claim
parameter_list|(
name|spa_t
modifier|*
parameter_list|,
specifier|const
name|blkptr_t
modifier|*
parameter_list|,
name|uint64_t
parameter_list|)
function_decl|;
name|void
name|metaslab_check_free
parameter_list|(
name|spa_t
modifier|*
parameter_list|,
specifier|const
name|blkptr_t
modifier|*
parameter_list|)
function_decl|;
name|metaslab_class_t
modifier|*
name|metaslab_class_create
parameter_list|(
name|spa_t
modifier|*
parameter_list|,
name|metaslab_ops_t
modifier|*
parameter_list|)
function_decl|;
name|void
name|metaslab_class_destroy
parameter_list|(
name|metaslab_class_t
modifier|*
parameter_list|)
function_decl|;
name|int
name|metaslab_class_validate
parameter_list|(
name|metaslab_class_t
modifier|*
parameter_list|)
function_decl|;
name|void
name|metaslab_class_histogram_verify
parameter_list|(
name|metaslab_class_t
modifier|*
parameter_list|)
function_decl|;
name|uint64_t
name|metaslab_class_fragmentation
parameter_list|(
name|metaslab_class_t
modifier|*
parameter_list|)
function_decl|;
name|uint64_t
name|metaslab_class_expandable_space
parameter_list|(
name|metaslab_class_t
modifier|*
parameter_list|)
function_decl|;
name|void
name|metaslab_class_space_update
parameter_list|(
name|metaslab_class_t
modifier|*
parameter_list|,
name|int64_t
parameter_list|,
name|int64_t
parameter_list|,
name|int64_t
parameter_list|,
name|int64_t
parameter_list|)
function_decl|;
name|uint64_t
name|metaslab_class_get_alloc
parameter_list|(
name|metaslab_class_t
modifier|*
parameter_list|)
function_decl|;
name|uint64_t
name|metaslab_class_get_space
parameter_list|(
name|metaslab_class_t
modifier|*
parameter_list|)
function_decl|;
name|uint64_t
name|metaslab_class_get_dspace
parameter_list|(
name|metaslab_class_t
modifier|*
parameter_list|)
function_decl|;
name|uint64_t
name|metaslab_class_get_deferred
parameter_list|(
name|metaslab_class_t
modifier|*
parameter_list|)
function_decl|;
name|uint64_t
name|metaslab_class_get_minblocksize
parameter_list|(
name|metaslab_class_t
modifier|*
name|mc
parameter_list|)
function_decl|;
name|metaslab_group_t
modifier|*
name|metaslab_group_create
parameter_list|(
name|metaslab_class_t
modifier|*
parameter_list|,
name|vdev_t
modifier|*
parameter_list|)
function_decl|;
name|void
name|metaslab_group_destroy
parameter_list|(
name|metaslab_group_t
modifier|*
parameter_list|)
function_decl|;
name|void
name|metaslab_group_activate
parameter_list|(
name|metaslab_group_t
modifier|*
parameter_list|)
function_decl|;
name|void
name|metaslab_group_passivate
parameter_list|(
name|metaslab_group_t
modifier|*
parameter_list|)
function_decl|;
name|uint64_t
name|metaslab_group_get_space
parameter_list|(
name|metaslab_group_t
modifier|*
parameter_list|)
function_decl|;
name|void
name|metaslab_group_histogram_verify
parameter_list|(
name|metaslab_group_t
modifier|*
parameter_list|)
function_decl|;
name|uint64_t
name|metaslab_group_fragmentation
parameter_list|(
name|metaslab_group_t
modifier|*
parameter_list|)
function_decl|;
name|void
name|metaslab_group_histogram_remove
parameter_list|(
name|metaslab_group_t
modifier|*
parameter_list|,
name|metaslab_t
modifier|*
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_METASLAB_H */
end_comment

end_unit

