begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_ZCONF_H
end_ifndef

begin_define
define|#
directive|define
name|_ZCONF_H
end_define

begin_pragma
pragma|#
directive|pragma
name|ident
literal|"%Z%%M%	%I%	%E% SMI"
end_pragma

begin_include
include|#
directive|include
file|<sys/param.h>
end_include

begin_include
include|#
directive|include
file|<sys/systm.h>
end_include

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/*  * We don't want to turn on zlib's debugging.  */
undef|#
directive|undef
name|DEBUG
comment|/*  * We define our own memory allocation and deallocation routines that use kmem.  */
define|#
directive|define
name|MY_ZCALLOC
comment|/*  * We don't define HAVE_MEMCPY here, but do in zutil.c, and implement our  * our versions of zmemcpy(), zmemzero(), and zmemcmp().  */
comment|/*  * We have a sufficiently capable compiler as to not need zlib's compiler hack.  */
define|#
directive|define
name|NO_DUMMY_DECL
define|#
directive|define
name|compressBound
parameter_list|(
name|len
parameter_list|)
value|(len + (len>> 12) + (len>> 14) + 11)
define|#
directive|define
name|z_off_t
value|off_t
define|#
directive|define
name|OF
parameter_list|(
name|p
parameter_list|)
value|p
define|#
directive|define
name|ZEXTERN
value|extern
define|#
directive|define
name|ZEXPORT
define|#
directive|define
name|ZEXPORTVA
define|#
directive|define
name|FAR
define|#
directive|define
name|deflateInit_
value|z_deflateInit_
define|#
directive|define
name|deflate
value|z_deflate
define|#
directive|define
name|deflateEnd
value|z_deflateEnd
define|#
directive|define
name|inflateInit_
value|z_inflateInit_
define|#
directive|define
name|inflate
value|z_inflate
define|#
directive|define
name|inflateEnd
value|z_inflateEnd
define|#
directive|define
name|deflateInit2_
value|z_deflateInit2_
define|#
directive|define
name|deflateSetDictionary
value|z_deflateSetDictionary
define|#
directive|define
name|deflateCopy
value|z_deflateCopy
define|#
directive|define
name|deflateReset
value|z_deflateReset
define|#
directive|define
name|deflateParams
value|z_deflateParams
define|#
directive|define
name|deflateBound
value|z_deflateBound
define|#
directive|define
name|deflatePrime
value|z_deflatePrime
define|#
directive|define
name|inflateInit2_
value|z_inflateInit2_
define|#
directive|define
name|inflateSetDictionary
value|z_inflateSetDictionary
define|#
directive|define
name|inflateSync
value|z_inflateSync
define|#
directive|define
name|inflateSyncPoint
value|z_inflateSyncPoint
define|#
directive|define
name|inflateCopy
value|z_inflateCopy
define|#
directive|define
name|inflateReset
value|z_inflateReset
define|#
directive|define
name|inflateBack
value|z_inflateBack
define|#
directive|define
name|inflateBackEnd
value|z_inflateBackEnd
define|#
directive|define
name|compress
value|zz_compress
define|#
directive|define
name|compress2
value|zz_compress2
define|#
directive|define
name|uncompress
value|zz_uncompress
define|#
directive|define
name|adler32
value|z_adler32
define|#
directive|define
name|crc32
value|z_crc32
define|#
directive|define
name|get_crc_table
value|z_get_crc_table
define|#
directive|define
name|zError
value|z_zError
define|#
directive|define
name|MAX_MEM_LEVEL
value|9
define|#
directive|define
name|MAX_WBITS
value|15
typedef|typedef
name|unsigned
name|char
name|Byte
typedef|;
typedef|typedef
name|unsigned
name|int
name|uInt
typedef|;
typedef|typedef
name|unsigned
name|long
name|uLong
typedef|;
typedef|typedef
name|Byte
name|Bytef
typedef|;
typedef|typedef
name|char
name|charf
typedef|;
typedef|typedef
name|int
name|intf
typedef|;
typedef|typedef
name|uInt
name|uIntf
typedef|;
typedef|typedef
name|uLong
name|uLongf
typedef|;
typedef|typedef
name|void
modifier|*
name|voidpc
typedef|;
typedef|typedef
name|void
modifier|*
name|voidpf
typedef|;
typedef|typedef
name|void
modifier|*
name|voidp
typedef|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _ZCONF_H */
end_comment

end_unit

