begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright (c) 2004, 2010, Oracle and/or its affiliates. All rights reserved.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_FM_PROTOCOL_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_FM_PROTOCOL_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
ifdef|#
directive|ifdef
name|_KERNEL
include|#
directive|include
file|<sys/varargs.h>
include|#
directive|include
file|<sys/nvpair.h>
else|#
directive|else
include|#
directive|include
file|<libnvpair.h>
include|#
directive|include
file|<stdarg.h>
endif|#
directive|endif
comment|/* FM common member names */
define|#
directive|define
name|FM_CLASS
value|"class"
define|#
directive|define
name|FM_VERSION
value|"version"
comment|/* FM protocol category 1 class names */
define|#
directive|define
name|FM_EREPORT_CLASS
value|"ereport"
define|#
directive|define
name|FM_FAULT_CLASS
value|"fault"
define|#
directive|define
name|FM_DEFECT_CLASS
value|"defect"
define|#
directive|define
name|FM_RSRC_CLASS
value|"resource"
define|#
directive|define
name|FM_LIST_EVENT
value|"list"
define|#
directive|define
name|FM_IREPORT_CLASS
value|"ireport"
comment|/* FM list.* event class values */
define|#
directive|define
name|FM_LIST_SUSPECT_CLASS
value|FM_LIST_EVENT ".suspect"
define|#
directive|define
name|FM_LIST_ISOLATED_CLASS
value|FM_LIST_EVENT ".isolated"
define|#
directive|define
name|FM_LIST_REPAIRED_CLASS
value|FM_LIST_EVENT ".repaired"
define|#
directive|define
name|FM_LIST_UPDATED_CLASS
value|FM_LIST_EVENT ".updated"
define|#
directive|define
name|FM_LIST_RESOLVED_CLASS
value|FM_LIST_EVENT ".resolved"
comment|/* ereport class subcategory values */
define|#
directive|define
name|FM_ERROR_CPU
value|"cpu"
define|#
directive|define
name|FM_ERROR_IO
value|"io"
comment|/* ereport version and payload member names */
define|#
directive|define
name|FM_EREPORT_VERS0
value|0
define|#
directive|define
name|FM_EREPORT_VERSION
value|FM_EREPORT_VERS0
comment|/* ereport payload member names */
define|#
directive|define
name|FM_EREPORT_DETECTOR
value|"detector"
define|#
directive|define
name|FM_EREPORT_ENA
value|"ena"
comment|/* list.* event payload member names */
define|#
directive|define
name|FM_LIST_EVENT_SIZE
value|"list-sz"
comment|/* ireport.* event payload member names */
define|#
directive|define
name|FM_IREPORT_DETECTOR
value|"detector"
define|#
directive|define
name|FM_IREPORT_UUID
value|"uuid"
define|#
directive|define
name|FM_IREPORT_PRIORITY
value|"pri"
define|#
directive|define
name|FM_IREPORT_ATTRIBUTES
value|"attr"
comment|/*  * list.suspect, isolated, updated, repaired and resolved  * versions/payload member names.  */
define|#
directive|define
name|FM_SUSPECT_UUID
value|"uuid"
define|#
directive|define
name|FM_SUSPECT_DIAG_CODE
value|"code"
define|#
directive|define
name|FM_SUSPECT_DIAG_TIME
value|"diag-time"
define|#
directive|define
name|FM_SUSPECT_DE
value|"de"
define|#
directive|define
name|FM_SUSPECT_FAULT_LIST
value|"fault-list"
define|#
directive|define
name|FM_SUSPECT_FAULT_SZ
value|"fault-list-sz"
define|#
directive|define
name|FM_SUSPECT_FAULT_STATUS
value|"fault-status"
define|#
directive|define
name|FM_SUSPECT_INJECTED
value|"__injected"
define|#
directive|define
name|FM_SUSPECT_MESSAGE
value|"message"
define|#
directive|define
name|FM_SUSPECT_RETIRE
value|"retire"
define|#
directive|define
name|FM_SUSPECT_RESPONSE
value|"response"
define|#
directive|define
name|FM_SUSPECT_SEVERITY
value|"severity"
define|#
directive|define
name|FM_SUSPECT_VERS0
value|0
define|#
directive|define
name|FM_SUSPECT_VERSION
value|FM_SUSPECT_VERS0
define|#
directive|define
name|FM_SUSPECT_FAULTY
value|0x1
define|#
directive|define
name|FM_SUSPECT_UNUSABLE
value|0x2
define|#
directive|define
name|FM_SUSPECT_NOT_PRESENT
value|0x4
define|#
directive|define
name|FM_SUSPECT_DEGRADED
value|0x8
define|#
directive|define
name|FM_SUSPECT_REPAIRED
value|0x10
define|#
directive|define
name|FM_SUSPECT_REPLACED
value|0x20
define|#
directive|define
name|FM_SUSPECT_ACQUITTED
value|0x40
comment|/* fault event versions and payload member names */
define|#
directive|define
name|FM_FAULT_VERS0
value|0
define|#
directive|define
name|FM_FAULT_VERSION
value|FM_FAULT_VERS0
define|#
directive|define
name|FM_FAULT_ASRU
value|"asru"
define|#
directive|define
name|FM_FAULT_FRU
value|"fru"
define|#
directive|define
name|FM_FAULT_FRU_LABEL
value|"fru-label"
define|#
directive|define
name|FM_FAULT_CERTAINTY
value|"certainty"
define|#
directive|define
name|FM_FAULT_RESOURCE
value|"resource"
define|#
directive|define
name|FM_FAULT_LOCATION
value|"location"
comment|/* resource event versions and payload member names */
define|#
directive|define
name|FM_RSRC_VERS0
value|0
define|#
directive|define
name|FM_RSRC_VERSION
value|FM_RSRC_VERS0
define|#
directive|define
name|FM_RSRC_RESOURCE
value|"resource"
comment|/* resource.fm.asru.* payload member names */
define|#
directive|define
name|FM_RSRC_ASRU_UUID
value|"uuid"
define|#
directive|define
name|FM_RSRC_ASRU_CODE
value|"code"
define|#
directive|define
name|FM_RSRC_ASRU_FAULTY
value|"faulty"
define|#
directive|define
name|FM_RSRC_ASRU_REPAIRED
value|"repaired"
define|#
directive|define
name|FM_RSRC_ASRU_REPLACED
value|"replaced"
define|#
directive|define
name|FM_RSRC_ASRU_ACQUITTED
value|"acquitted"
define|#
directive|define
name|FM_RSRC_ASRU_RESOLVED
value|"resolved"
define|#
directive|define
name|FM_RSRC_ASRU_UNUSABLE
value|"unusable"
define|#
directive|define
name|FM_RSRC_ASRU_EVENT
value|"event"
comment|/* resource.fm.xprt.* versions and payload member names */
define|#
directive|define
name|FM_RSRC_XPRT_VERS0
value|0
define|#
directive|define
name|FM_RSRC_XPRT_VERSION
value|FM_RSRC_XPRT_VERS0
define|#
directive|define
name|FM_RSRC_XPRT_UUID
value|"uuid"
define|#
directive|define
name|FM_RSRC_XPRT_SUBCLASS
value|"subclass"
define|#
directive|define
name|FM_RSRC_XPRT_FAULT_STATUS
value|"fault-status"
define|#
directive|define
name|FM_RSRC_XPRT_FAULT_HAS_ASRU
value|"fault-has-asru"
comment|/*  * FM ENA Format Macros  */
define|#
directive|define
name|ENA_FORMAT_MASK
value|0x3
define|#
directive|define
name|ENA_FORMAT
parameter_list|(
name|ena
parameter_list|)
value|((ena)& ENA_FORMAT_MASK)
comment|/* ENA format types */
define|#
directive|define
name|FM_ENA_FMT0
value|0
define|#
directive|define
name|FM_ENA_FMT1
value|1
define|#
directive|define
name|FM_ENA_FMT2
value|2
comment|/* Format 1 */
define|#
directive|define
name|ENA_FMT1_GEN_MASK
value|0x00000000000003FCull
define|#
directive|define
name|ENA_FMT1_ID_MASK
value|0xFFFFFFFFFFFFFC00ull
define|#
directive|define
name|ENA_FMT1_CPUID_MASK
value|0x00000000000FFC00ull
define|#
directive|define
name|ENA_FMT1_TIME_MASK
value|0xFFFFFFFFFFF00000ull
define|#
directive|define
name|ENA_FMT1_GEN_SHFT
value|2
define|#
directive|define
name|ENA_FMT1_ID_SHFT
value|10
define|#
directive|define
name|ENA_FMT1_CPUID_SHFT
value|ENA_FMT1_ID_SHFT
define|#
directive|define
name|ENA_FMT1_TIME_SHFT
value|20
comment|/* Format 2 */
define|#
directive|define
name|ENA_FMT2_GEN_MASK
value|0x00000000000003FCull
define|#
directive|define
name|ENA_FMT2_ID_MASK
value|0xFFFFFFFFFFFFFC00ull
define|#
directive|define
name|ENA_FMT2_TIME_MASK
value|ENA_FMT2_ID_MASK
define|#
directive|define
name|ENA_FMT2_GEN_SHFT
value|2
define|#
directive|define
name|ENA_FMT2_ID_SHFT
value|10
define|#
directive|define
name|ENA_FMT2_TIME_SHFT
value|ENA_FMT2_ID_SHFT
comment|/* Common FMRI type names */
define|#
directive|define
name|FM_FMRI_AUTHORITY
value|"authority"
define|#
directive|define
name|FM_FMRI_SCHEME
value|"scheme"
define|#
directive|define
name|FM_FMRI_SVC_AUTHORITY
value|"svc-authority"
define|#
directive|define
name|FM_FMRI_FACILITY
value|"facility"
comment|/* FMRI authority-type member names */
define|#
directive|define
name|FM_FMRI_AUTH_CHASSIS
value|"chassis-id"
define|#
directive|define
name|FM_FMRI_AUTH_PRODUCT_SN
value|"product-sn"
define|#
directive|define
name|FM_FMRI_AUTH_PRODUCT
value|"product-id"
define|#
directive|define
name|FM_FMRI_AUTH_DOMAIN
value|"domain-id"
define|#
directive|define
name|FM_FMRI_AUTH_SERVER
value|"server-id"
define|#
directive|define
name|FM_FMRI_AUTH_HOST
value|"host-id"
define|#
directive|define
name|FM_AUTH_VERS0
value|0
define|#
directive|define
name|FM_FMRI_AUTH_VERSION
value|FM_AUTH_VERS0
comment|/* scheme name values */
define|#
directive|define
name|FM_FMRI_SCHEME_FMD
value|"fmd"
define|#
directive|define
name|FM_FMRI_SCHEME_DEV
value|"dev"
define|#
directive|define
name|FM_FMRI_SCHEME_HC
value|"hc"
define|#
directive|define
name|FM_FMRI_SCHEME_SVC
value|"svc"
define|#
directive|define
name|FM_FMRI_SCHEME_CPU
value|"cpu"
define|#
directive|define
name|FM_FMRI_SCHEME_MEM
value|"mem"
define|#
directive|define
name|FM_FMRI_SCHEME_MOD
value|"mod"
define|#
directive|define
name|FM_FMRI_SCHEME_PKG
value|"pkg"
define|#
directive|define
name|FM_FMRI_SCHEME_LEGACY
value|"legacy-hc"
define|#
directive|define
name|FM_FMRI_SCHEME_ZFS
value|"zfs"
define|#
directive|define
name|FM_FMRI_SCHEME_SW
value|"sw"
comment|/* Scheme versions */
define|#
directive|define
name|FMD_SCHEME_VERSION0
value|0
define|#
directive|define
name|FM_FMD_SCHEME_VERSION
value|FMD_SCHEME_VERSION0
define|#
directive|define
name|DEV_SCHEME_VERSION0
value|0
define|#
directive|define
name|FM_DEV_SCHEME_VERSION
value|DEV_SCHEME_VERSION0
define|#
directive|define
name|FM_HC_VERS0
value|0
define|#
directive|define
name|FM_HC_SCHEME_VERSION
value|FM_HC_VERS0
define|#
directive|define
name|CPU_SCHEME_VERSION0
value|0
define|#
directive|define
name|CPU_SCHEME_VERSION1
value|1
define|#
directive|define
name|FM_CPU_SCHEME_VERSION
value|CPU_SCHEME_VERSION1
define|#
directive|define
name|MEM_SCHEME_VERSION0
value|0
define|#
directive|define
name|FM_MEM_SCHEME_VERSION
value|MEM_SCHEME_VERSION0
define|#
directive|define
name|MOD_SCHEME_VERSION0
value|0
define|#
directive|define
name|FM_MOD_SCHEME_VERSION
value|MOD_SCHEME_VERSION0
define|#
directive|define
name|PKG_SCHEME_VERSION0
value|0
define|#
directive|define
name|FM_PKG_SCHEME_VERSION
value|PKG_SCHEME_VERSION0
define|#
directive|define
name|LEGACY_SCHEME_VERSION0
value|0
define|#
directive|define
name|FM_LEGACY_SCHEME_VERSION
value|LEGACY_SCHEME_VERSION0
define|#
directive|define
name|SVC_SCHEME_VERSION0
value|0
define|#
directive|define
name|FM_SVC_SCHEME_VERSION
value|SVC_SCHEME_VERSION0
define|#
directive|define
name|ZFS_SCHEME_VERSION0
value|0
define|#
directive|define
name|FM_ZFS_SCHEME_VERSION
value|ZFS_SCHEME_VERSION0
define|#
directive|define
name|SW_SCHEME_VERSION0
value|0
define|#
directive|define
name|FM_SW_SCHEME_VERSION
value|SW_SCHEME_VERSION0
comment|/* hc scheme member names */
define|#
directive|define
name|FM_FMRI_HC_SERIAL_ID
value|"serial"
define|#
directive|define
name|FM_FMRI_HC_PART
value|"part"
define|#
directive|define
name|FM_FMRI_HC_REVISION
value|"revision"
define|#
directive|define
name|FM_FMRI_HC_ROOT
value|"hc-root"
define|#
directive|define
name|FM_FMRI_HC_LIST_SZ
value|"hc-list-sz"
define|#
directive|define
name|FM_FMRI_HC_LIST
value|"hc-list"
define|#
directive|define
name|FM_FMRI_HC_SPECIFIC
value|"hc-specific"
comment|/* facility member names */
define|#
directive|define
name|FM_FMRI_FACILITY_NAME
value|"facility-name"
define|#
directive|define
name|FM_FMRI_FACILITY_TYPE
value|"facility-type"
comment|/* hc-list version and member names */
define|#
directive|define
name|FM_FMRI_HC_NAME
value|"hc-name"
define|#
directive|define
name|FM_FMRI_HC_ID
value|"hc-id"
define|#
directive|define
name|HC_LIST_VERSION0
value|0
define|#
directive|define
name|FM_HC_LIST_VERSION
value|HC_LIST_VERSION0
comment|/* hc-specific member names */
define|#
directive|define
name|FM_FMRI_HC_SPECIFIC_OFFSET
value|"offset"
define|#
directive|define
name|FM_FMRI_HC_SPECIFIC_PHYSADDR
value|"physaddr"
comment|/* fmd module scheme member names */
define|#
directive|define
name|FM_FMRI_FMD_NAME
value|"mod-name"
define|#
directive|define
name|FM_FMRI_FMD_VERSION
value|"mod-version"
comment|/* dev scheme member names */
define|#
directive|define
name|FM_FMRI_DEV_ID
value|"devid"
define|#
directive|define
name|FM_FMRI_DEV_TGTPTLUN0
value|"target-port-l0id"
define|#
directive|define
name|FM_FMRI_DEV_PATH
value|"device-path"
comment|/* pkg scheme member names */
define|#
directive|define
name|FM_FMRI_PKG_BASEDIR
value|"pkg-basedir"
define|#
directive|define
name|FM_FMRI_PKG_INST
value|"pkg-inst"
define|#
directive|define
name|FM_FMRI_PKG_VERSION
value|"pkg-version"
comment|/* svc scheme member names */
define|#
directive|define
name|FM_FMRI_SVC_NAME
value|"svc-name"
define|#
directive|define
name|FM_FMRI_SVC_INSTANCE
value|"svc-instance"
define|#
directive|define
name|FM_FMRI_SVC_CONTRACT_ID
value|"svc-contract-id"
comment|/* svc-authority member names */
define|#
directive|define
name|FM_FMRI_SVC_AUTH_SCOPE
value|"scope"
define|#
directive|define
name|FM_FMRI_SVC_AUTH_SYSTEM_FQN
value|"system-fqn"
comment|/* cpu scheme member names */
define|#
directive|define
name|FM_FMRI_CPU_ID
value|"cpuid"
define|#
directive|define
name|FM_FMRI_CPU_SERIAL_ID
value|"serial"
define|#
directive|define
name|FM_FMRI_CPU_MASK
value|"cpumask"
define|#
directive|define
name|FM_FMRI_CPU_VID
value|"cpuvid"
define|#
directive|define
name|FM_FMRI_CPU_CPUFRU
value|"cpufru"
define|#
directive|define
name|FM_FMRI_CPU_CACHE_INDEX
value|"cacheindex"
define|#
directive|define
name|FM_FMRI_CPU_CACHE_WAY
value|"cacheway"
define|#
directive|define
name|FM_FMRI_CPU_CACHE_BIT
value|"cachebit"
define|#
directive|define
name|FM_FMRI_CPU_CACHE_TYPE
value|"cachetype"
define|#
directive|define
name|FM_FMRI_CPU_CACHE_TYPE_L2
value|0
define|#
directive|define
name|FM_FMRI_CPU_CACHE_TYPE_L3
value|1
comment|/* legacy-hc scheme member names */
define|#
directive|define
name|FM_FMRI_LEGACY_HC
value|"component"
define|#
directive|define
name|FM_FMRI_LEGACY_HC_PREFIX
value|FM_FMRI_SCHEME_HC":///" \     FM_FMRI_LEGACY_HC"="
comment|/* mem scheme member names */
define|#
directive|define
name|FM_FMRI_MEM_UNUM
value|"unum"
define|#
directive|define
name|FM_FMRI_MEM_SERIAL_ID
value|"serial"
define|#
directive|define
name|FM_FMRI_MEM_PHYSADDR
value|"physaddr"
define|#
directive|define
name|FM_FMRI_MEM_MEMCONFIG
value|"memconfig"
define|#
directive|define
name|FM_FMRI_MEM_OFFSET
value|"offset"
comment|/* mod scheme member names */
define|#
directive|define
name|FM_FMRI_MOD_PKG
value|"mod-pkg"
define|#
directive|define
name|FM_FMRI_MOD_NAME
value|"mod-name"
define|#
directive|define
name|FM_FMRI_MOD_ID
value|"mod-id"
define|#
directive|define
name|FM_FMRI_MOD_DESC
value|"mod-desc"
comment|/* zfs scheme member names */
define|#
directive|define
name|FM_FMRI_ZFS_POOL
value|"pool"
define|#
directive|define
name|FM_FMRI_ZFS_VDEV
value|"vdev"
comment|/* sw scheme member names - extra indentation for members of an nvlist */
define|#
directive|define
name|FM_FMRI_SW_OBJ
value|"object"
define|#
directive|define
name|FM_FMRI_SW_OBJ_PATH
value|"path"
define|#
directive|define
name|FM_FMRI_SW_OBJ_ROOT
value|"root"
define|#
directive|define
name|FM_FMRI_SW_OBJ_PKG
value|"pkg"
define|#
directive|define
name|FM_FMRI_SW_SITE
value|"site"
define|#
directive|define
name|FM_FMRI_SW_SITE_TOKEN
value|"token"
define|#
directive|define
name|FM_FMRI_SW_SITE_MODULE
value|"module"
define|#
directive|define
name|FM_FMRI_SW_SITE_FILE
value|"file"
define|#
directive|define
name|FM_FMRI_SW_SITE_LINE
value|"line"
define|#
directive|define
name|FM_FMRI_SW_SITE_FUNC
value|"func"
define|#
directive|define
name|FM_FMRI_SW_CTXT
value|"context"
define|#
directive|define
name|FM_FMRI_SW_CTXT_ORIGIN
value|"origin"
define|#
directive|define
name|FM_FMRI_SW_CTXT_EXECNAME
value|"execname"
define|#
directive|define
name|FM_FMRI_SW_CTXT_PID
value|"pid"
define|#
directive|define
name|FM_FMRI_SW_CTXT_ZONE
value|"zone"
define|#
directive|define
name|FM_FMRI_SW_CTXT_CTID
value|"ctid"
define|#
directive|define
name|FM_FMRI_SW_CTXT_STACK
value|"stack"
specifier|extern
name|nv_alloc_t
modifier|*
name|fm_nva_xcreate
parameter_list|(
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
specifier|extern
name|void
name|fm_nva_xdestroy
parameter_list|(
name|nv_alloc_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|nvlist_t
modifier|*
name|fm_nvlist_create
parameter_list|(
name|nv_alloc_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|fm_nvlist_destroy
parameter_list|(
name|nvlist_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
define|#
directive|define
name|FM_NVA_FREE
value|0
comment|/* free allocator on nvlist_destroy */
define|#
directive|define
name|FM_NVA_RETAIN
value|1
comment|/* keep allocator on nvlist_destroy */
specifier|extern
name|void
name|fm_ereport_set
parameter_list|(
name|nvlist_t
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|uint64_t
parameter_list|,
specifier|const
name|nvlist_t
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
specifier|extern
name|void
name|fm_payload_set
parameter_list|(
name|nvlist_t
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
specifier|extern
name|int
name|i_fm_payload_set
parameter_list|(
name|nvlist_t
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
specifier|extern
name|void
name|fm_fmri_hc_set
parameter_list|(
name|nvlist_t
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|nvlist_t
modifier|*
parameter_list|,
name|nvlist_t
modifier|*
parameter_list|,
name|int
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
specifier|extern
name|void
name|fm_fmri_dev_set
parameter_list|(
name|nvlist_t
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|nvlist_t
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|fm_fmri_de_set
parameter_list|(
name|nvlist_t
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|nvlist_t
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|fm_fmri_cpu_set
parameter_list|(
name|nvlist_t
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|nvlist_t
modifier|*
parameter_list|,
name|uint32_t
parameter_list|,
name|uint8_t
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|fm_fmri_mem_set
parameter_list|(
name|nvlist_t
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|nvlist_t
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|uint64_t
parameter_list|)
function_decl|;
specifier|extern
name|void
name|fm_authority_set
parameter_list|(
name|nvlist_t
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|fm_fmri_zfs_set
parameter_list|(
name|nvlist_t
modifier|*
parameter_list|,
name|int
parameter_list|,
name|uint64_t
parameter_list|,
name|uint64_t
parameter_list|)
function_decl|;
specifier|extern
name|void
name|fm_fmri_hc_create
parameter_list|(
name|nvlist_t
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|nvlist_t
modifier|*
parameter_list|,
name|nvlist_t
modifier|*
parameter_list|,
name|nvlist_t
modifier|*
parameter_list|,
name|int
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
specifier|extern
name|uint64_t
name|fm_ena_increment
parameter_list|(
name|uint64_t
parameter_list|)
function_decl|;
specifier|extern
name|uint64_t
name|fm_ena_generate
parameter_list|(
name|uint64_t
parameter_list|,
name|uchar_t
parameter_list|)
function_decl|;
specifier|extern
name|uint64_t
name|fm_ena_generation_get
parameter_list|(
name|uint64_t
parameter_list|)
function_decl|;
specifier|extern
name|uchar_t
name|fm_ena_format_get
parameter_list|(
name|uint64_t
parameter_list|)
function_decl|;
specifier|extern
name|uint64_t
name|fm_ena_id_get
parameter_list|(
name|uint64_t
parameter_list|)
function_decl|;
specifier|extern
name|uint64_t
name|fm_ena_time_get
parameter_list|(
name|uint64_t
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_FM_PROTOCOL_H */
end_comment

end_unit

