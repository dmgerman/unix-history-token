begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_U8_TEXTPREP_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_U8_TEXTPREP_H
end_define

begin_pragma
pragma|#
directive|pragma
name|ident
literal|"%Z%%M%	%I%	%E% SMI"
end_pragma

begin_include
include|#
directive|include
file|<sys/isa_defs.h>
end_include

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<sys/errno.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/*  * UTF-8 text preparation functions and their macros.  *  * Among the macros defined, U8_CANON_DECOMP, U8_COMPAT_DECOMP, and  * U8_CANON_COMP are not public interfaces and must not be used directly  * at the flag input argument.  */
define|#
directive|define
name|U8_STRCMP_CS
value|(0x00000001)
define|#
directive|define
name|U8_STRCMP_CI_UPPER
value|(0x00000002)
define|#
directive|define
name|U8_STRCMP_CI_LOWER
value|(0x00000004)
define|#
directive|define
name|U8_CANON_DECOMP
value|(0x00000010)
define|#
directive|define
name|U8_COMPAT_DECOMP
value|(0x00000020)
define|#
directive|define
name|U8_CANON_COMP
value|(0x00000040)
define|#
directive|define
name|U8_STRCMP_NFD
value|(U8_CANON_DECOMP)
define|#
directive|define
name|U8_STRCMP_NFC
value|(U8_CANON_DECOMP | U8_CANON_COMP)
define|#
directive|define
name|U8_STRCMP_NFKD
value|(U8_COMPAT_DECOMP)
define|#
directive|define
name|U8_STRCMP_NFKC
value|(U8_COMPAT_DECOMP | U8_CANON_COMP)
define|#
directive|define
name|U8_TEXTPREP_TOUPPER
value|(U8_STRCMP_CI_UPPER)
define|#
directive|define
name|U8_TEXTPREP_TOLOWER
value|(U8_STRCMP_CI_LOWER)
define|#
directive|define
name|U8_TEXTPREP_NFD
value|(U8_STRCMP_NFD)
define|#
directive|define
name|U8_TEXTPREP_NFC
value|(U8_STRCMP_NFC)
define|#
directive|define
name|U8_TEXTPREP_NFKD
value|(U8_STRCMP_NFKD)
define|#
directive|define
name|U8_TEXTPREP_NFKC
value|(U8_STRCMP_NFKC)
define|#
directive|define
name|U8_TEXTPREP_IGNORE_NULL
value|(0x00010000)
define|#
directive|define
name|U8_TEXTPREP_IGNORE_INVALID
value|(0x00020000)
define|#
directive|define
name|U8_TEXTPREP_NOWAIT
value|(0x00040000)
define|#
directive|define
name|U8_UNICODE_320
value|(0)
define|#
directive|define
name|U8_UNICODE_500
value|(1)
define|#
directive|define
name|U8_UNICODE_LATEST
value|(U8_UNICODE_500)
define|#
directive|define
name|U8_VALIDATE_ENTIRE
value|(0x00100000)
define|#
directive|define
name|U8_VALIDATE_CHECK_ADDITIONAL
value|(0x00200000)
define|#
directive|define
name|U8_VALIDATE_UCS2_RANGE
value|(0x00400000)
define|#
directive|define
name|U8_ILLEGAL_CHAR
value|(-1)
define|#
directive|define
name|U8_OUT_OF_RANGE_CHAR
value|(-2)
specifier|extern
name|int
name|u8_validate
parameter_list|(
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|u8_strcmp
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|int
parameter_list|,
name|size_t
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|size_t
name|u8_textprep_str
parameter_list|(
name|char
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|,
name|int
parameter_list|,
name|size_t
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_U8_TEXTPREP_H */
end_comment

end_unit

