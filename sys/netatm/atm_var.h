begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  *  * ===================================  * HARP  |  Host ATM Research Platform  * ===================================  *  *  * This Host ATM Research Platform ("HARP") file (the "Software") is  * made available by Network Computing Services, Inc. ("NetworkCS")  * "AS IS".  NetworkCS does not provide maintenance, improvements or  * support of any kind.  *  * NETWORKCS MAKES NO WARRANTIES OR REPRESENTATIONS, EXPRESS OR IMPLIED,  * INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY  * AND FITNESS FOR A PARTICULAR PURPOSE, AS TO ANY ELEMENT OF THE  * SOFTWARE OR ANY SUPPORT PROVIDED IN CONNECTION WITH THIS SOFTWARE.  * In no event shall NetworkCS be responsible for any damages, including  * but not limited to consequential damages, arising from or relating to  * any use of the Software or related support.  *  * Copyright 1994-1998 Network Computing Services, Inc.  *  * Copies of this Software may be made, however, the above copyright  * notice must be reproduced on all copies.  *  *	@(#) $FreeBSD$  *  */
end_comment

begin_comment
comment|/*  * Core ATM Services  * -----------------  *  * ATM system variables  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NETATM_ATM_VAR_H
end_ifndef

begin_define
define|#
directive|define
name|_NETATM_ATM_VAR_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|_KERNEL
end_ifdef

begin_comment
comment|/*  * Global variable declarations  */
end_comment

begin_comment
comment|/* atm_aal5.c */
end_comment

begin_if
if|#
directive|if
operator|(
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|&&
operator|(
name|BSD
operator|>=
literal|199506
operator|)
operator|)
end_if

begin_decl_stmt
specifier|extern
name|struct
name|pr_usrreqs
name|atm_aal5_usrreqs
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* atm_proto.c */
end_comment

begin_decl_stmt
specifier|extern
name|struct
name|domain
name|atmdomain
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* atm_subr.c */
end_comment

begin_decl_stmt
specifier|extern
name|struct
name|atm_pif
modifier|*
name|atm_interface_head
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|atm_ncm
modifier|*
name|atm_netconv_head
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|Atm_endpoint
modifier|*
name|atm_endpoints
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|sp_info
modifier|*
name|atm_pool_head
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|stackq_entry
modifier|*
name|atm_stackq_head
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|stackq_entry
modifier|*
name|atm_stackq_tail
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|ifqueue
name|atm_intrq
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|sgi
end_ifdef

begin_decl_stmt
specifier|extern
name|int
name|atm_intr_index
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|extern
name|struct
name|atm_sock_stat
name|atm_sock_stat
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|atm_init
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|atm_version
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|atm_debug
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|timeval
name|atm_debugtime
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|atm_dev_print
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|atm_print_data
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|sp_info
name|atm_attributes_pool
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* atm_usrreq.c */
end_comment

begin_if
if|#
directive|if
operator|(
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|&&
operator|(
name|BSD
operator|>=
literal|199506
operator|)
operator|)
end_if

begin_decl_stmt
specifier|extern
name|struct
name|pr_usrreqs
name|atm_dgram_usrreqs
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * Global function declarations  */
end_comment

begin_comment
comment|/* atm_aal5.c */
end_comment

begin_decl_stmt
name|int
name|atm_aal5_ctloutput
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
expr|struct
name|sockopt
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_aal5_init
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* atm_cm.c */
end_comment

begin_decl_stmt
name|int
name|atm_cm_connect
name|__P
argument_list|(
operator|(
name|Atm_endpoint
operator|*
operator|,
name|void
operator|*
operator|,
name|Atm_attributes
operator|*
operator|,
name|Atm_connection
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_listen
name|__P
argument_list|(
operator|(
name|Atm_endpoint
operator|*
operator|,
name|void
operator|*
operator|,
name|Atm_attributes
operator|*
operator|,
name|Atm_connection
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_addllc
name|__P
argument_list|(
operator|(
name|Atm_endpoint
operator|*
operator|,
name|void
operator|*
operator|,
expr|struct
name|attr_llc
operator|*
operator|,
name|Atm_connection
operator|*
operator|,
name|Atm_connection
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_addparty
name|__P
argument_list|(
operator|(
name|Atm_connection
operator|*
operator|,
name|int
operator|,
expr|struct
name|t_atm_sap
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_dropparty
name|__P
argument_list|(
operator|(
name|Atm_connection
operator|*
operator|,
name|int
operator|,
expr|struct
name|t_atm_cause
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_release
name|__P
argument_list|(
operator|(
name|Atm_connection
operator|*
operator|,
expr|struct
name|t_atm_cause
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_abort
name|__P
argument_list|(
operator|(
name|Atm_connvc
operator|*
operator|,
expr|struct
name|t_atm_cause
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_incoming
name|__P
argument_list|(
operator|(
expr|struct
name|vccb
operator|*
operator|,
name|Atm_attributes
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_cm_connected
name|__P
argument_list|(
operator|(
name|Atm_connvc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_cm_cleared
name|__P
argument_list|(
operator|(
name|Atm_connvc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Atm_connection
modifier|*
name|atm_cm_match
name|__P
argument_list|(
operator|(
name|Atm_attributes
operator|*
operator|,
name|Atm_connection
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_cpcs_ctl
name|__P
argument_list|(
operator|(
name|int
operator|,
name|Atm_connection
operator|*
operator|,
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_cpcs_data
name|__P
argument_list|(
operator|(
name|Atm_connection
operator|*
operator|,
name|KBuffer
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_saal_ctl
name|__P
argument_list|(
operator|(
name|int
operator|,
name|Atm_connection
operator|*
operator|,
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_saal_data
name|__P
argument_list|(
operator|(
name|Atm_connection
operator|*
operator|,
name|KBuffer
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_sscop_ctl
name|__P
argument_list|(
operator|(
name|int
operator|,
name|Atm_connection
operator|*
operator|,
name|void
operator|*
operator|,
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_cm_sscop_data
name|__P
argument_list|(
operator|(
name|Atm_connection
operator|*
operator|,
name|KBuffer
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_endpoint_register
name|__P
argument_list|(
operator|(
name|Atm_endpoint
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_endpoint_deregister
name|__P
argument_list|(
operator|(
name|Atm_endpoint
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* atm_device.c */
end_comment

begin_decl_stmt
name|int
name|atm_dev_inst
name|__P
argument_list|(
operator|(
expr|struct
name|stack_defn
operator|*
operator|*
operator|,
name|Atm_connvc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_dev_lower
name|__P
argument_list|(
operator|(
name|int
operator|,
name|void
operator|*
operator|,
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
modifier|*
name|atm_dev_alloc
name|__P
argument_list|(
operator|(
name|u_int
operator|,
name|u_int
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_dev_free
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_if
if|#
directive|if
name|defined
argument_list|(
name|sun4m
argument_list|)
end_if

begin_decl_stmt
name|void
modifier|*
name|atm_dma_map
name|__P
argument_list|(
operator|(
name|caddr_t
operator|,
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_dma_free
name|__P
argument_list|(
operator|(
name|caddr_t
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|KBuffer
modifier|*
name|atm_dev_compress
name|__P
argument_list|(
operator|(
name|KBuffer
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Cmn_vcc
modifier|*
name|atm_dev_vcc_find
name|__P
argument_list|(
operator|(
name|Cmn_unit
operator|*
operator|,
name|u_int
operator|,
name|u_int
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_dev_pdu_print
name|__P
argument_list|(
operator|(
name|Cmn_unit
operator|*
operator|,
name|Cmn_vcc
operator|*
operator|,
name|KBuffer
operator|*
operator|,
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* atm_if.c */
end_comment

begin_decl_stmt
name|int
name|atm_physif_register
name|__P
argument_list|(
operator|(
name|Cmn_unit
operator|*
operator|,
name|char
operator|*
operator|,
expr|struct
name|stack_defn
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_physif_deregister
name|__P
argument_list|(
operator|(
name|Cmn_unit
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_physif_freenifs
name|__P
argument_list|(
operator|(
expr|struct
name|atm_pif
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_netconv_register
name|__P
argument_list|(
operator|(
expr|struct
name|atm_ncm
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_netconv_deregister
name|__P
argument_list|(
operator|(
expr|struct
name|atm_ncm
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_nif_attach
name|__P
argument_list|(
operator|(
expr|struct
name|atm_nif
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_nif_detach
name|__P
argument_list|(
operator|(
expr|struct
name|atm_nif
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_nif_setaddr
name|__P
argument_list|(
operator|(
expr|struct
name|atm_nif
operator|*
operator|,
expr|struct
name|ifaddr
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_if
if|#
directive|if
operator|(
name|defined
argument_list|(
name|BSD
argument_list|)
operator|&&
operator|(
name|BSD
operator|>=
literal|199103
operator|)
operator|)
end_if

begin_decl_stmt
name|int
name|atm_ifoutput
name|__P
argument_list|(
operator|(
expr|struct
name|ifnet
operator|*
operator|,
name|KBuffer
operator|*
operator|,
expr|struct
name|sockaddr
operator|*
operator|,
expr|struct
name|rtentry
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
name|int
name|atm_ifoutput
name|__P
argument_list|(
operator|(
expr|struct
name|ifnet
operator|*
operator|,
name|KBuffer
operator|*
operator|,
expr|struct
name|sockaddr
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|struct
name|atm_pif
modifier|*
name|atm_pifname
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|atm_nif
modifier|*
name|atm_nifname
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* atm_proto.c */
end_comment

begin_if
if|#
directive|if
operator|(
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|&&
operator|(
name|BSD
operator|>=
literal|199506
operator|)
operator|)
end_if

begin_decl_stmt
name|int
name|atm_proto_notsupp1
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_proto_notsupp2
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
expr|struct
name|sockaddr
operator|*
operator|,
expr|struct
name|thread
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_proto_notsupp3
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
expr|struct
name|sockaddr
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_proto_notsupp4
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
name|int
operator|,
name|KBuffer
operator|*
operator|,
expr|struct
name|sockaddr
operator|*
operator|,
name|KBuffer
operator|*
operator|,
expr|struct
name|thread
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* atm_signal.c */
end_comment

begin_decl_stmt
name|int
name|atm_sigmgr_register
name|__P
argument_list|(
operator|(
expr|struct
name|sigmgr
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_sigmgr_deregister
name|__P
argument_list|(
operator|(
expr|struct
name|sigmgr
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_sigmgr_attach
name|__P
argument_list|(
operator|(
expr|struct
name|atm_pif
operator|*
operator|,
name|u_char
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_sigmgr_detach
name|__P
argument_list|(
operator|(
expr|struct
name|atm_pif
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_stack_register
name|__P
argument_list|(
operator|(
expr|struct
name|stack_defn
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_stack_deregister
name|__P
argument_list|(
operator|(
expr|struct
name|stack_defn
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_create_stack
name|__P
argument_list|(
operator|(
name|Atm_connvc
operator|*
operator|,
expr|struct
name|stack_list
operator|*
operator|,
name|void
argument_list|(
argument|*
argument_list|)
name|__P
argument_list|(
operator|(
name|int
operator|,
name|void
operator|*
operator|,
name|int
operator|,
name|int
operator|)
argument_list|)
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* atm_socket.c */
end_comment

begin_decl_stmt
name|int
name|atm_sock_attach
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
name|u_long
operator|,
name|u_long
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_sock_detach
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_sock_bind
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
expr|struct
name|sockaddr
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_sock_listen
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
name|Atm_endpoint
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_sock_connect
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
expr|struct
name|sockaddr
operator|*
operator|,
name|Atm_endpoint
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_sock_disconnect
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_sock_sockaddr
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
expr|struct
name|sockaddr
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_sock_peeraddr
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
expr|struct
name|sockaddr
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_sock_setopt
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
expr|struct
name|sockopt
operator|*
operator|,
name|Atm_pcb
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_sock_getopt
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
expr|struct
name|sockopt
operator|*
operator|,
name|Atm_pcb
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_sock_connected
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_sock_cleared
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|,
expr|struct
name|t_atm_cause
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* atm_subr.c */
end_comment

begin_decl_stmt
name|void
name|atm_initialize
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
modifier|*
name|atm_allocate
name|__P
argument_list|(
operator|(
expr|struct
name|sp_info
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_free
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_release_pool
name|__P
argument_list|(
operator|(
expr|struct
name|sp_info
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_timeout
name|__P
argument_list|(
operator|(
expr|struct
name|atm_time
operator|*
operator|,
name|int
operator|,
name|void
argument_list|(
argument|*
argument_list|)
name|__P
argument_list|(
operator|(
expr|struct
name|atm_time
operator|*
operator|)
argument_list|)
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_untimeout
name|__P
argument_list|(
operator|(
expr|struct
name|atm_time
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|atm_stack_enq
name|__P
argument_list|(
operator|(
name|int
operator|,
name|void
argument_list|(
argument|*
argument_list|)
name|__P
argument_list|(
operator|(
name|int
operator|,
name|void
operator|*
operator|,
name|int
operator|,
name|int
operator|)
argument_list|)
operator|,
name|void
operator|*
operator|,
name|Atm_connvc
operator|*
operator|,
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_stack_drain
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_intr
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|atm_pdu_print
name|__P
argument_list|(
operator|(
name|KBuffer
operator|*
operator|,
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* atm_usrreq.c */
end_comment

begin_if
if|#
directive|if
operator|(
operator|!
operator|(
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|&&
operator|(
name|BSD
operator|>=
literal|199506
operator|)
operator|)
operator|)
end_if

begin_decl_stmt
name|int
name|atm_dgram_usrreq
name|__P
argument_list|(
operator|(
expr|struct
name|socket
operator|*
operator|,
name|int
operator|,
name|KBuffer
operator|*
operator|,
name|KBuffer
operator|*
operator|,
name|KBuffer
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _KERNEL */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _NETATM_ATM_VAR_H */
end_comment

end_unit

