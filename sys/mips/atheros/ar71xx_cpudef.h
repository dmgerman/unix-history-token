begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2010 Adrian Chadd  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__AR71XX_CPUDEF_H__
end_ifndef

begin_define
define|#
directive|define
name|__AR71XX_CPUDEF_H__
end_define

begin_struct
struct|struct
name|ar71xx_cpu_def
block|{
name|void
function_decl|(
modifier|*
name|detect_mem_size
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|detect_sys_frequency
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|ar71xx_chip_device_stop
function_decl|)
parameter_list|(
name|uint32_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|ar71xx_chip_device_start
function_decl|)
parameter_list|(
name|uint32_t
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|ar71xx_chip_device_stopped
function_decl|)
parameter_list|(
name|uint32_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|ar71xx_chip_set_pll_ge
function_decl|)
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|ar71xx_chip_set_mii_speed
function_decl|)
parameter_list|(
name|uint32_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|ar71xx_chip_ddr_flush_ge
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|uint32_t
function_decl|(
modifier|*
name|ar71xx_chip_get_eth_pll
function_decl|)
parameter_list|(
name|unsigned
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
comment|/* 	 * From Linux - Handling this IRQ is a bit special. 	 * AR71xx - AR71XX_DDR_REG_FLUSH_PCI 	 * AR724x - AR724X_DDR_REG_FLUSH_PCIE 	 * AR91xx - AR91XX_DDR_REG_FLUSH_WMAC 	 * 	 * These are set when STATUSF_IP2 is set in regiser c0. 	 * This flush is done before the IRQ is handled to make 	 * sure the driver correctly sees any memory updates. 	 */
name|void
function_decl|(
modifier|*
name|ar71xx_chip_ddr_flush_ip2
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
comment|/* 	 * The USB peripheral init code is subtly different for 	 * each chip. 	 */
name|void
function_decl|(
modifier|*
name|ar71xx_chip_init_usb_peripheral
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|ar71xx_cpu_def
modifier|*
name|ar71xx_cpu_ops
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
specifier|inline
name|void
name|ar71xx_detect_sys_frequency
parameter_list|(
name|void
parameter_list|)
block|{
name|ar71xx_cpu_ops
operator|->
name|detect_sys_frequency
argument_list|()
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ar71xx_device_stop
parameter_list|(
name|uint32_t
name|mask
parameter_list|)
block|{
name|ar71xx_cpu_ops
operator|->
name|ar71xx_chip_device_stop
argument_list|(
name|mask
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ar71xx_device_start
parameter_list|(
name|uint32_t
name|mask
parameter_list|)
block|{
name|ar71xx_cpu_ops
operator|->
name|ar71xx_chip_device_start
argument_list|(
name|mask
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ar71xx_device_stopped
parameter_list|(
name|uint32_t
name|mask
parameter_list|)
block|{
return|return
name|ar71xx_cpu_ops
operator|->
name|ar71xx_chip_device_stopped
argument_list|(
name|mask
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ar71xx_device_set_pll_ge
parameter_list|(
name|int
name|unit
parameter_list|,
name|int
name|speed
parameter_list|)
block|{
name|ar71xx_cpu_ops
operator|->
name|ar71xx_chip_set_pll_ge
argument_list|(
name|unit
argument_list|,
name|speed
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ar71xx_device_set_mii_speed
parameter_list|(
name|int
name|unit
parameter_list|,
name|int
name|speed
parameter_list|)
block|{
name|ar71xx_cpu_ops
operator|->
name|ar71xx_chip_set_mii_speed
argument_list|(
name|unit
argument_list|,
name|speed
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ar71xx_device_flush_ddr_ge
parameter_list|(
name|int
name|unit
parameter_list|)
block|{
name|ar71xx_cpu_ops
operator|->
name|ar71xx_chip_ddr_flush_ge
argument_list|(
name|unit
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ar71xx_init_usb_peripheral
parameter_list|(
name|void
parameter_list|)
block|{
name|ar71xx_cpu_ops
operator|->
name|ar71xx_chip_init_usb_peripheral
argument_list|()
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ar71xx_device_ddr_flush_ip2
parameter_list|(
name|void
parameter_list|)
block|{
name|ar71xx_cpu_ops
operator|->
name|ar71xx_chip_ddr_flush_ip2
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/* XXX shouldn't be here! */
end_comment

begin_decl_stmt
specifier|extern
name|uint32_t
name|u_ar71xx_cpu_freq
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|uint32_t
name|u_ar71xx_ahb_freq
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|uint32_t
name|u_ar71xx_ddr_freq
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
specifier|inline
name|uint64_t
name|ar71xx_cpu_freq
parameter_list|(
name|void
parameter_list|)
block|{
return|return
name|u_ar71xx_cpu_freq
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|uint64_t
name|ar71xx_ahb_freq
parameter_list|(
name|void
parameter_list|)
block|{
return|return
name|u_ar71xx_ahb_freq
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|uint64_t
name|ar71xx_ddr_freq
parameter_list|(
name|void
parameter_list|)
block|{
return|return
name|u_ar71xx_ddr_freq
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

end_unit

