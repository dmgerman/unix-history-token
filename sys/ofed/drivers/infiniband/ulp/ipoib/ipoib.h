begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2004, 2005 Topspin Communications.  All rights reserved.  * Copyright (c) 2005 Sun Microsystems, Inc. All rights reserved.  * Copyright (c) 2004 Voltaire, Inc. All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_IPOIB_H
end_ifndef

begin_define
define|#
directive|define
name|_IPOIB_H
end_define

begin_include
include|#
directive|include
file|"opt_inet.h"
end_include

begin_include
include|#
directive|include
file|"opt_inet6.h"
end_include

begin_include
include|#
directive|include
file|"opt_ofed.h"
end_include

begin_include
include|#
directive|include
file|<sys/param.h>
end_include

begin_include
include|#
directive|include
file|<sys/systm.h>
end_include

begin_include
include|#
directive|include
file|<sys/kernel.h>
end_include

begin_include
include|#
directive|include
file|<sys/lock.h>
end_include

begin_include
include|#
directive|include
file|<sys/malloc.h>
end_include

begin_include
include|#
directive|include
file|<sys/mbuf.h>
end_include

begin_include
include|#
directive|include
file|<sys/random.h>
end_include

begin_include
include|#
directive|include
file|<sys/rwlock.h>
end_include

begin_include
include|#
directive|include
file|<sys/socket.h>
end_include

begin_include
include|#
directive|include
file|<sys/sockio.h>
end_include

begin_include
include|#
directive|include
file|<sys/sysctl.h>
end_include

begin_include
include|#
directive|include
file|<net/if.h>
end_include

begin_include
include|#
directive|include
file|<net/if_var.h>
end_include

begin_include
include|#
directive|include
file|<net/if_arp.h>
end_include

begin_include
include|#
directive|include
file|<net/netisr.h>
end_include

begin_include
include|#
directive|include
file|<net/route.h>
end_include

begin_include
include|#
directive|include
file|<net/if_llc.h>
end_include

begin_include
include|#
directive|include
file|<net/if_dl.h>
end_include

begin_include
include|#
directive|include
file|<net/if_types.h>
end_include

begin_include
include|#
directive|include
file|<net/bpf.h>
end_include

begin_include
include|#
directive|include
file|<net/if_llatbl.h>
end_include

begin_include
include|#
directive|include
file|<net/vnet.h>
end_include

begin_if
if|#
directive|if
name|defined
argument_list|(
name|INET
argument_list|)
operator|||
name|defined
argument_list|(
name|INET6
argument_list|)
end_if

begin_include
include|#
directive|include
file|<netinet/in.h>
end_include

begin_include
include|#
directive|include
file|<netinet/in_var.h>
end_include

begin_include
include|#
directive|include
file|<netinet/if_ether.h>
end_include

begin_include
include|#
directive|include
file|<netinet/ip_var.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|INET6
end_ifdef

begin_include
include|#
directive|include
file|<netinet6/nd6.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<security/mac/mac_framework.h>
end_include

begin_include
include|#
directive|include
file|<linux/list.h>
end_include

begin_include
include|#
directive|include
file|<linux/workqueue.h>
end_include

begin_include
include|#
directive|include
file|<linux/kref.h>
end_include

begin_include
include|#
directive|include
file|<linux/mutex.h>
end_include

begin_include
include|#
directive|include
file|<linux/rbtree.h>
end_include

begin_include
include|#
directive|include
file|<asm/atomic.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_verbs.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_pack.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_sa.h>
end_include

begin_comment
comment|/* constants */
end_comment

begin_define
define|#
directive|define
name|INFINIBAND_ALEN
value|20
end_define

begin_comment
comment|/* Octets in IPoIB HW addr */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|IPOIB_CM
end_ifdef

begin_define
define|#
directive|define
name|CONFIG_INFINIBAND_IPOIB_CM
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|IPOIB_DEBUG
end_ifdef

begin_define
define|#
directive|define
name|CONFIG_INFINIBAND_IPOIB_DEBUG
end_define

begin_define
define|#
directive|define
name|CONFIG_INFINIBAND_IPOIB_DEBUG_DATA
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_enum
enum|enum
name|ipoib_flush_level
block|{
name|IPOIB_FLUSH_LIGHT
block|,
name|IPOIB_FLUSH_NORMAL
block|,
name|IPOIB_FLUSH_HEAVY
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|IPOIB_ENCAP_LEN
init|=
literal|4
block|,
name|IPOIB_HEADER_LEN
init|=
name|IPOIB_ENCAP_LEN
operator|+
name|INFINIBAND_ALEN
block|,
name|IPOIB_UD_MAX_MTU
init|=
literal|4
operator|*
literal|1024
block|,
comment|//	IPOIB_UD_RX_SG		  = (IPOIB_UD_MAX_MTU / MJUMPAGESIZE),
name|IPOIB_UD_RX_SG
init|=
literal|2
block|,
name|IPOIB_UD_TX_SG
init|=
operator|(
name|IPOIB_UD_MAX_MTU
operator|/
name|MCLBYTES
operator|)
operator|+
literal|2
block|,
name|IPOIB_CM_MAX_MTU
init|=
operator|(
literal|64
operator|*
literal|1024
operator|)
block|,
name|IPOIB_CM_TX_SG
init|=
operator|(
name|IPOIB_CM_MAX_MTU
operator|/
name|MCLBYTES
operator|)
operator|+
literal|2
block|,
name|IPOIB_CM_RX_SG
init|=
operator|(
name|IPOIB_CM_MAX_MTU
operator|/
name|MJUMPAGESIZE
operator|)
block|,
name|IPOIB_RX_RING_SIZE
init|=
literal|256
block|,
name|IPOIB_TX_RING_SIZE
init|=
literal|128
block|,
name|IPOIB_MAX_RX_SG
init|=
name|MAX
argument_list|(
name|IPOIB_CM_RX_SG
argument_list|,
name|IPOIB_UD_RX_SG
argument_list|)
block|,
name|IPOIB_MAX_TX_SG
init|=
name|MAX
argument_list|(
name|IPOIB_CM_TX_SG
argument_list|,
name|IPOIB_UD_TX_SG
argument_list|)
block|,
name|IPOIB_MAX_QUEUE_SIZE
init|=
literal|8192
block|,
name|IPOIB_MIN_QUEUE_SIZE
init|=
literal|2
block|,
name|IPOIB_CM_MAX_CONN_QP
init|=
literal|4096
block|,
name|IPOIB_NUM_WC
init|=
literal|4
block|,
name|IPOIB_MAX_PATH_REC_QUEUE
init|=
literal|3
block|,
name|IPOIB_MAX_MCAST_QUEUE
init|=
literal|3
block|,
name|IPOIB_FLAG_OPER_UP
init|=
literal|0
block|,
name|IPOIB_FLAG_INITIALIZED
init|=
literal|1
block|,
name|IPOIB_FLAG_ADMIN_UP
init|=
literal|2
block|,
name|IPOIB_PKEY_ASSIGNED
init|=
literal|3
block|,
name|IPOIB_PKEY_STOP
init|=
literal|4
block|,
name|IPOIB_FLAG_SUBINTERFACE
init|=
literal|5
block|,
name|IPOIB_MCAST_RUN
init|=
literal|6
block|,
name|IPOIB_STOP_REAPER
init|=
literal|7
block|,
name|IPOIB_FLAG_UMCAST
init|=
literal|10
block|,
name|IPOIB_FLAG_CSUM
init|=
literal|11
block|,
name|IPOIB_MAX_BACKOFF_SECONDS
init|=
literal|16
block|,
name|IPOIB_MCAST_FLAG_FOUND
init|=
literal|0
block|,
comment|/* used in set_multicast_list */
name|IPOIB_MCAST_FLAG_SENDONLY
init|=
literal|1
block|,
name|IPOIB_MCAST_FLAG_BUSY
init|=
literal|2
block|,
comment|/* joining or already joined */
name|IPOIB_MCAST_FLAG_ATTACHED
init|=
literal|3
block|,
name|IPOIB_MAX_LRO_DESCRIPTORS
init|=
literal|8
block|,
name|IPOIB_LRO_MAX_AGGR
init|=
literal|64
block|,
name|MAX_SEND_CQE
init|=
literal|16
block|,
name|IPOIB_CM_COPYBREAK
init|=
literal|256
block|, }
enum|;
end_enum

begin_define
define|#
directive|define
name|IPOIB_OP_RECV
value|(1ul<< 31)
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_INFINIBAND_IPOIB_CM
end_ifdef

begin_define
define|#
directive|define
name|IPOIB_OP_CM
value|(1ul<< 30)
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|IPOIB_OP_CM
value|(0)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* structs */
end_comment

begin_struct
struct|struct
name|ipoib_header
block|{
name|u8
name|hwaddr
index|[
name|INFINIBAND_ALEN
index|]
decl_stmt|;
name|__be16
name|proto
decl_stmt|;
name|u16
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ipoib_pseudoheader
block|{
name|u8
name|hwaddr
index|[
name|INFINIBAND_ALEN
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Used for all multicast joins (broadcast, IPv4 mcast and IPv6 mcast) */
end_comment

begin_struct
struct|struct
name|ipoib_mcast
block|{
name|struct
name|ib_sa_mcmember_rec
name|mcmember
decl_stmt|;
name|struct
name|ib_sa_multicast
modifier|*
name|mc
decl_stmt|;
name|struct
name|ipoib_ah
modifier|*
name|ah
decl_stmt|;
name|struct
name|rb_node
name|rb_node
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
name|unsigned
name|long
name|created
decl_stmt|;
name|unsigned
name|long
name|backoff
decl_stmt|;
name|unsigned
name|long
name|flags
decl_stmt|;
name|unsigned
name|char
name|logcount
decl_stmt|;
name|struct
name|ifqueue
name|pkt_queue
decl_stmt|;
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ipoib_cm_rx_buf
block|{
name|struct
name|mbuf
modifier|*
name|mb
decl_stmt|;
name|u64
name|mapping
index|[
name|IPOIB_CM_RX_SG
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ipoib_cm_tx_buf
block|{
name|struct
name|mbuf
modifier|*
name|mb
decl_stmt|;
name|u64
name|mapping
index|[
name|IPOIB_CM_TX_SG
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ipoib_rx_buf
block|{
name|struct
name|mbuf
modifier|*
name|mb
decl_stmt|;
name|u64
name|mapping
index|[
name|IPOIB_UD_RX_SG
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ipoib_tx_buf
block|{
name|struct
name|mbuf
modifier|*
name|mb
decl_stmt|;
name|u64
name|mapping
index|[
name|IPOIB_UD_TX_SG
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|ib_cm_id
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|ipoib_cm_data
block|{
name|__be32
name|qpn
decl_stmt|;
comment|/* High byte MUST be ignored on receive */
name|__be32
name|mtu
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Quoting 10.3.1 Queue Pair and EE Context States:  *  * Note, for QPs that are associated with an SRQ, the Consumer should take the  * QP through the Error State before invoking a Destroy QP or a Modify QP to the  * Reset State.  The Consumer may invoke the Destroy QP without first performing  * a Modify QP to the Error State and waiting for the Affiliated Asynchronous  * Last WQE Reached Event. However, if the Consumer does not wait for the  * Affiliated Asynchronous Last WQE Reached Event, then WQE and Data Segment  * leakage may occur. Therefore, it is good programming practice to tear down a  * QP that is associated with an SRQ by using the following process:  *  * - Put the QP in the Error State  * - Wait for the Affiliated Asynchronous Last WQE Reached Event;  * - either:  *       drain the CQ by invoking the Poll CQ verb and either wait for CQ  *       to be empty or the number of Poll CQ operations has exceeded  *       CQ capacity size;  * - or  *       post another WR that completes on the same CQ and wait for this  *       WR to return as a WC;  * - and then invoke a Destroy QP or Reset QP.  *  * We use the second option and wait for a completion on the  * same CQ before destroying QPs attached to our SRQ.  */
end_comment

begin_enum
enum|enum
name|ipoib_cm_state
block|{
name|IPOIB_CM_RX_LIVE
block|,
name|IPOIB_CM_RX_ERROR
block|,
comment|/* Ignored by stale task */
name|IPOIB_CM_RX_FLUSH
comment|/* Last WQE Reached event observed */
block|}
enum|;
end_enum

begin_struct
struct|struct
name|ipoib_cm_rx
block|{
name|struct
name|ib_cm_id
modifier|*
name|id
decl_stmt|;
name|struct
name|ib_qp
modifier|*
name|qp
decl_stmt|;
name|struct
name|ipoib_cm_rx_buf
modifier|*
name|rx_ring
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
decl_stmt|;
name|unsigned
name|long
name|jiffies
decl_stmt|;
name|enum
name|ipoib_cm_state
name|state
decl_stmt|;
name|int
name|recv_count
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ipoib_cm_tx
block|{
name|struct
name|ib_cm_id
modifier|*
name|id
decl_stmt|;
name|struct
name|ib_qp
modifier|*
name|qp
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
decl_stmt|;
name|struct
name|ipoib_path
modifier|*
name|path
decl_stmt|;
name|struct
name|ipoib_cm_tx_buf
modifier|*
name|tx_ring
decl_stmt|;
name|unsigned
name|tx_head
decl_stmt|;
name|unsigned
name|tx_tail
decl_stmt|;
name|unsigned
name|long
name|flags
decl_stmt|;
name|u32
name|mtu
decl_stmt|;
comment|/* remote specified mtu, with grh. */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ipoib_cm_dev_priv
block|{
name|struct
name|ib_srq
modifier|*
name|srq
decl_stmt|;
name|struct
name|ipoib_cm_rx_buf
modifier|*
name|srq_ring
decl_stmt|;
name|struct
name|ib_cm_id
modifier|*
name|id
decl_stmt|;
name|struct
name|list_head
name|passive_ids
decl_stmt|;
comment|/* state: LIVE */
name|struct
name|list_head
name|rx_error_list
decl_stmt|;
comment|/* state: ERROR */
name|struct
name|list_head
name|rx_flush_list
decl_stmt|;
comment|/* state: FLUSH, drain not started */
name|struct
name|list_head
name|rx_drain_list
decl_stmt|;
comment|/* state: FLUSH, drain started */
name|struct
name|list_head
name|rx_reap_list
decl_stmt|;
comment|/* state: FLUSH, drain done */
name|struct
name|work_struct
name|start_task
decl_stmt|;
name|struct
name|work_struct
name|reap_task
decl_stmt|;
name|struct
name|work_struct
name|mb_task
decl_stmt|;
name|struct
name|work_struct
name|rx_reap_task
decl_stmt|;
name|struct
name|delayed_work
name|stale_task
decl_stmt|;
name|struct
name|ifqueue
name|mb_queue
decl_stmt|;
name|struct
name|list_head
name|start_list
decl_stmt|;
name|struct
name|list_head
name|reap_list
decl_stmt|;
name|struct
name|ib_sge
name|rx_sge
index|[
name|IPOIB_CM_RX_SG
index|]
decl_stmt|;
name|struct
name|ib_recv_wr
name|rx_wr
decl_stmt|;
name|int
name|nonsrq_conn_qp
decl_stmt|;
name|int
name|max_cm_mtu
decl_stmt|;
comment|/* Actual buf size. */
name|int
name|num_frags
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ipoib_ethtool_st
block|{
name|u16
name|coalesce_usecs
decl_stmt|;
name|u16
name|max_coalesced_frames
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Device private locking: network stack tx_lock protects members used  * in TX fast path, lock protects everything else.  lock nests inside  * of tx_lock (ie tx_lock must be acquired first if needed).  */
end_comment

begin_struct
struct|struct
name|ipoib_dev_priv
block|{
name|spinlock_t
name|lock
decl_stmt|;
name|spinlock_t
name|drain_lock
decl_stmt|;
name|struct
name|ifnet
modifier|*
name|dev
decl_stmt|;
name|u8
name|broadcastaddr
index|[
name|INFINIBAND_ALEN
index|]
decl_stmt|;
name|unsigned
name|long
name|flags
decl_stmt|;
name|int
name|gone
decl_stmt|;
name|struct
name|mutex
name|vlan_mutex
decl_stmt|;
name|struct
name|rb_root
name|path_tree
decl_stmt|;
name|struct
name|list_head
name|path_list
decl_stmt|;
name|struct
name|ipoib_mcast
modifier|*
name|broadcast
decl_stmt|;
name|struct
name|list_head
name|multicast_list
decl_stmt|;
name|struct
name|rb_root
name|multicast_tree
decl_stmt|;
name|struct
name|delayed_work
name|pkey_poll_task
decl_stmt|;
name|struct
name|delayed_work
name|mcast_task
decl_stmt|;
name|struct
name|work_struct
name|carrier_on_task
decl_stmt|;
name|struct
name|work_struct
name|flush_light
decl_stmt|;
name|struct
name|work_struct
name|flush_normal
decl_stmt|;
name|struct
name|work_struct
name|flush_heavy
decl_stmt|;
name|struct
name|work_struct
name|restart_task
decl_stmt|;
name|struct
name|delayed_work
name|ah_reap_task
decl_stmt|;
name|struct
name|ib_device
modifier|*
name|ca
decl_stmt|;
name|u8
name|port
decl_stmt|;
name|u16
name|pkey
decl_stmt|;
name|u16
name|pkey_index
decl_stmt|;
name|struct
name|ib_pd
modifier|*
name|pd
decl_stmt|;
name|struct
name|ib_mr
modifier|*
name|mr
decl_stmt|;
name|struct
name|ib_cq
modifier|*
name|recv_cq
decl_stmt|;
name|struct
name|ib_cq
modifier|*
name|send_cq
decl_stmt|;
name|struct
name|ib_qp
modifier|*
name|qp
decl_stmt|;
name|u32
name|qkey
decl_stmt|;
name|union
name|ib_gid
name|local_gid
decl_stmt|;
name|u16
name|local_lid
decl_stmt|;
name|unsigned
name|int
name|admin_mtu
decl_stmt|;
comment|/* User selected MTU, no GRH. */
name|unsigned
name|int
name|mcast_mtu
decl_stmt|;
comment|/* Minus GRH bytes, from mcast group. */
name|unsigned
name|int
name|max_ib_mtu
decl_stmt|;
comment|/* Without header, actual buf size. */
name|struct
name|ipoib_rx_buf
modifier|*
name|rx_ring
decl_stmt|;
name|struct
name|ipoib_tx_buf
modifier|*
name|tx_ring
decl_stmt|;
name|unsigned
name|tx_head
decl_stmt|;
name|unsigned
name|tx_tail
decl_stmt|;
name|struct
name|ib_sge
name|tx_sge
index|[
name|IPOIB_MAX_TX_SG
index|]
decl_stmt|;
name|struct
name|ib_send_wr
name|tx_wr
decl_stmt|;
name|unsigned
name|tx_outstanding
decl_stmt|;
name|struct
name|ib_wc
name|send_wc
index|[
name|MAX_SEND_CQE
index|]
decl_stmt|;
name|struct
name|ib_recv_wr
name|rx_wr
decl_stmt|;
name|struct
name|ib_sge
name|rx_sge
index|[
name|IPOIB_MAX_RX_SG
index|]
decl_stmt|;
name|struct
name|ib_wc
name|ibwc
index|[
name|IPOIB_NUM_WC
index|]
decl_stmt|;
name|struct
name|list_head
name|dead_ahs
decl_stmt|;
name|struct
name|ib_event_handler
name|event_handler
decl_stmt|;
name|struct
name|ifnet
modifier|*
name|parent
decl_stmt|;
name|struct
name|list_head
name|child_intfs
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_INFINIBAND_IPOIB_CM
name|struct
name|ipoib_cm_dev_priv
name|cm
decl_stmt|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|CONFIG_INFINIBAND_IPOIB_DEBUG
name|struct
name|list_head
name|fs_list
decl_stmt|;
name|struct
name|dentry
modifier|*
name|mcg_dentry
decl_stmt|;
name|struct
name|dentry
modifier|*
name|path_dentry
decl_stmt|;
endif|#
directive|endif
name|int
name|hca_caps
decl_stmt|;
name|struct
name|ipoib_ethtool_st
name|ethtool
decl_stmt|;
name|struct
name|timer_list
name|poll_timer
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ipoib_ah
block|{
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
decl_stmt|;
name|struct
name|ib_ah
modifier|*
name|ah
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
name|struct
name|kref
name|ref
decl_stmt|;
name|unsigned
name|last_send
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ipoib_path
block|{
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
decl_stmt|;
name|struct
name|rb_node
name|rb_node
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_INFINIBAND_IPOIB_CM
name|uint8_t
name|hwaddr
index|[
name|INFINIBAND_ALEN
index|]
decl_stmt|;
name|struct
name|ipoib_cm_tx
modifier|*
name|cm
decl_stmt|;
endif|#
directive|endif
name|struct
name|ipoib_ah
modifier|*
name|ah
decl_stmt|;
name|struct
name|ib_sa_path_rec
name|pathrec
decl_stmt|;
name|struct
name|ifqueue
name|queue
decl_stmt|;
name|int
name|query_id
decl_stmt|;
name|struct
name|ib_sa_query
modifier|*
name|query
decl_stmt|;
name|struct
name|completion
name|done
decl_stmt|;
name|int
name|valid
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* UD Only transmits encap len but we want the two sizes to be symmetrical. */
end_comment

begin_define
define|#
directive|define
name|IPOIB_UD_MTU
parameter_list|(
name|ib_mtu
parameter_list|)
value|(ib_mtu - IPOIB_ENCAP_LEN)
end_define

begin_define
define|#
directive|define
name|IPOIB_CM_MTU
parameter_list|(
name|ib_mtu
parameter_list|)
value|(ib_mtu - 0x10)
end_define

begin_define
define|#
directive|define
name|IPOIB_IS_MULTICAST
parameter_list|(
name|addr
parameter_list|)
value|((addr)[4] == 0xff)
end_define

begin_decl_stmt
specifier|extern
name|struct
name|workqueue_struct
modifier|*
name|ipoib_workqueue
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|IPOIB_MTAP_PROTO
parameter_list|(
name|_ifp
parameter_list|,
name|_m
parameter_list|,
name|_proto
parameter_list|)
define|\
value|do {								\ 	if (bpf_peers_present((_ifp)->if_bpf)) {		\ 		M_ASSERTVALID(_m);				\ 		ipoib_mtap_proto((_ifp), (_m), (_proto));	\ 	}							\ } while (0)
end_define

begin_comment
comment|/* functions */
end_comment

begin_function_decl
name|void
name|ipoib_mtap_proto
parameter_list|(
name|struct
name|ifnet
modifier|*
name|ifp
parameter_list|,
name|struct
name|mbuf
modifier|*
name|mb
parameter_list|,
name|uint16_t
name|proto
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_ib_completion
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|cq
parameter_list|,
name|void
modifier|*
name|dev_ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_send_comp_handler
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|cq
parameter_list|,
name|void
modifier|*
name|dev_ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ipoib_ah
modifier|*
name|ipoib_create_ah
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
parameter_list|,
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ib_ah_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_free_ah
parameter_list|(
name|struct
name|kref
modifier|*
name|kref
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_put_ah
parameter_list|(
name|struct
name|ipoib_ah
modifier|*
name|ah
parameter_list|)
block|{
name|kref_put
argument_list|(
operator|&
name|ah
operator|->
name|ref
argument_list|,
name|ipoib_free_ah
argument_list|)
expr_stmt|;
block|}
end_function

begin_function_decl
name|int
name|ipoib_open
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_add_pkey_attr
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_add_umcast_attr
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_demux
parameter_list|(
name|struct
name|ifnet
modifier|*
name|ifp
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m
parameter_list|,
name|u_short
name|proto
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_send
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|mbuf
modifier|*
name|mb
parameter_list|,
name|struct
name|ipoib_ah
modifier|*
name|address
parameter_list|,
name|u32
name|qpn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_reap_ah
parameter_list|(
name|struct
name|work_struct
modifier|*
name|work
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_mark_paths_invalid
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_flush_paths
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ipoib_dev_priv
modifier|*
name|ipoib_intf_alloc
parameter_list|(
specifier|const
name|char
modifier|*
name|format
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_ib_dev_init
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ib_device
modifier|*
name|ca
parameter_list|,
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_ib_dev_flush_light
parameter_list|(
name|struct
name|work_struct
modifier|*
name|work
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_ib_dev_flush_normal
parameter_list|(
name|struct
name|work_struct
modifier|*
name|work
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_ib_dev_flush_heavy
parameter_list|(
name|struct
name|work_struct
modifier|*
name|work
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_pkey_event
parameter_list|(
name|struct
name|work_struct
modifier|*
name|work
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_ib_dev_cleanup
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_ib_dev_open
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_ib_dev_up
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_ib_dev_down
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|int
name|flush
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_ib_dev_stop
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|int
name|flush
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_dev_init
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ib_device
modifier|*
name|ca
parameter_list|,
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_dev_cleanup
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_mcast_join_task
parameter_list|(
name|struct
name|work_struct
modifier|*
name|work
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_mcast_carrier_on_task
parameter_list|(
name|struct
name|work_struct
modifier|*
name|work
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_mcast_send
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|void
modifier|*
name|mgid
parameter_list|,
name|struct
name|mbuf
modifier|*
name|mb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_mcast_restart_task
parameter_list|(
name|struct
name|work_struct
modifier|*
name|work
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_mcast_restart
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_mcast_start_thread
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_mcast_stop_thread
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|int
name|flush
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_mcast_dev_down
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_mcast_dev_flush
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_path_free
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ipoib_path
modifier|*
name|path
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_INFINIBAND_IPOIB_DEBUG
end_ifdef

begin_function_decl
name|struct
name|ipoib_mcast_iter
modifier|*
name|ipoib_mcast_iter_init
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_mcast_iter_next
parameter_list|(
name|struct
name|ipoib_mcast_iter
modifier|*
name|iter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_mcast_iter_read
parameter_list|(
name|struct
name|ipoib_mcast_iter
modifier|*
name|iter
parameter_list|,
name|union
name|ib_gid
modifier|*
name|gid
parameter_list|,
name|unsigned
name|long
modifier|*
name|created
parameter_list|,
name|unsigned
name|int
modifier|*
name|queuelen
parameter_list|,
name|unsigned
name|int
modifier|*
name|complete
parameter_list|,
name|unsigned
name|int
modifier|*
name|send_only
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ipoib_path_iter
modifier|*
name|ipoib_path_iter_init
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_path_iter_next
parameter_list|(
name|struct
name|ipoib_path_iter
modifier|*
name|iter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_path_iter_read
parameter_list|(
name|struct
name|ipoib_path_iter
modifier|*
name|iter
parameter_list|,
name|struct
name|ipoib_path
modifier|*
name|path
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|int
name|ipoib_change_mtu
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|int
name|new_mtu
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_mcast_attach
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|u16
name|mlid
parameter_list|,
name|union
name|ib_gid
modifier|*
name|mgid
parameter_list|,
name|int
name|set_qkey
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_init_qp
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_transport_dev_init
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ib_device
modifier|*
name|ca
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_transport_dev_cleanup
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_event
parameter_list|(
name|struct
name|ib_event_handler
modifier|*
name|handler
parameter_list|,
name|struct
name|ib_event
modifier|*
name|record
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_pkey_poll
parameter_list|(
name|struct
name|work_struct
modifier|*
name|work
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_pkey_dev_delay_open
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_drain_cq
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_dma_map_tx
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ca
parameter_list|,
name|struct
name|ipoib_tx_buf
modifier|*
name|tx_req
parameter_list|,
name|int
name|max
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_dma_unmap_tx
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ca
parameter_list|,
name|struct
name|ipoib_tx_buf
modifier|*
name|tx_req
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_poll_tx
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_dma_unmap_rx
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ipoib_rx_buf
modifier|*
name|rx_req
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_dma_mb
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|mbuf
modifier|*
name|mb
parameter_list|,
name|unsigned
name|int
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|mbuf
modifier|*
name|ipoib_alloc_map_mb
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ipoib_rx_buf
modifier|*
name|rx_req
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_set_ethtool_ops
parameter_list|(
name|struct
name|ifnet
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_set_dev_features
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ib_device
modifier|*
name|hca
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_INFINIBAND_IPOIB_CM
end_ifdef

begin_define
define|#
directive|define
name|IPOIB_FLAGS_RC
value|0x80
end_define

begin_define
define|#
directive|define
name|IPOIB_FLAGS_UC
value|0x40
end_define

begin_comment
comment|/* We don't support UC connections at the moment */
end_comment

begin_define
define|#
directive|define
name|IPOIB_CM_SUPPORTED
parameter_list|(
name|ha
parameter_list|)
value|(ha[0]& (IPOIB_FLAGS_RC))
end_define

begin_decl_stmt
specifier|extern
name|int
name|ipoib_max_conn_qp
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
specifier|inline
name|int
name|ipoib_cm_admin_enabled
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{
return|return
name|IPOIB_CM_SUPPORTED
argument_list|(
name|IF_LLADDR
argument_list|(
name|priv
operator|->
name|dev
argument_list|)
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ipoib_cm_enabled
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|uint8_t
modifier|*
name|hwaddr
parameter_list|)
block|{
return|return
name|IPOIB_CM_SUPPORTED
argument_list|(
name|hwaddr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ipoib_cm_up
parameter_list|(
name|struct
name|ipoib_path
modifier|*
name|path
parameter_list|)
block|{
return|return
name|test_bit
argument_list|(
name|IPOIB_FLAG_OPER_UP
argument_list|,
operator|&
name|path
operator|->
name|cm
operator|->
name|flags
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|ipoib_cm_tx
modifier|*
name|ipoib_cm_get
parameter_list|(
name|struct
name|ipoib_path
modifier|*
name|path
parameter_list|)
block|{
return|return
name|path
operator|->
name|cm
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_cm_set
parameter_list|(
name|struct
name|ipoib_path
modifier|*
name|path
parameter_list|,
name|struct
name|ipoib_cm_tx
modifier|*
name|tx
parameter_list|)
block|{
name|path
operator|->
name|cm
operator|=
name|tx
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ipoib_cm_has_srq
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{
return|return
operator|!
operator|!
name|priv
operator|->
name|cm
operator|.
name|srq
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|int
name|ipoib_cm_max_mtu
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{
return|return
name|priv
operator|->
name|cm
operator|.
name|max_cm_mtu
return|;
block|}
end_function

begin_function_decl
name|void
name|ipoib_cm_send
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|mbuf
modifier|*
name|mb
parameter_list|,
name|struct
name|ipoib_cm_tx
modifier|*
name|tx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_cm_dev_open
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_cm_dev_stop
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_cm_dev_init
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_cm_add_mode_attr
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_cm_dev_cleanup
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ipoib_cm_tx
modifier|*
name|ipoib_cm_create_tx
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ipoib_path
modifier|*
name|path
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_cm_destroy_tx
parameter_list|(
name|struct
name|ipoib_cm_tx
modifier|*
name|tx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_cm_mb_too_long
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|mbuf
modifier|*
name|mb
parameter_list|,
name|unsigned
name|int
name|mtu
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_cm_handle_rx_wc
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ib_wc
modifier|*
name|wc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_cm_handle_tx_wc
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ib_wc
modifier|*
name|wc
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_struct_decl
struct_decl|struct
name|ipoib_cm_tx
struct_decl|;
end_struct_decl

begin_define
define|#
directive|define
name|ipoib_max_conn_qp
value|0
end_define

begin_function
specifier|static
specifier|inline
name|int
name|ipoib_cm_admin_enabled
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ipoib_cm_enabled
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|uint8_t
modifier|*
name|hwaddr
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ipoib_cm_up
parameter_list|(
name|struct
name|ipoib_path
modifier|*
name|path
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|ipoib_cm_tx
modifier|*
name|ipoib_cm_get
parameter_list|(
name|struct
name|ipoib_path
modifier|*
name|path
parameter_list|)
block|{
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_cm_set
parameter_list|(
name|struct
name|ipoib_path
modifier|*
name|path
parameter_list|,
name|struct
name|ipoib_cm_tx
modifier|*
name|tx
parameter_list|)
block|{ }
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ipoib_cm_has_srq
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|int
name|ipoib_cm_max_mtu
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_cm_send
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|mbuf
modifier|*
name|mb
parameter_list|,
name|struct
name|ipoib_cm_tx
modifier|*
name|tx
parameter_list|)
block|{
return|return;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ipoib_cm_dev_open
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_cm_dev_stop
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{
return|return;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ipoib_cm_dev_init
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{
return|return
operator|-
name|ENOSYS
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_cm_dev_cleanup
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{
return|return;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|ipoib_cm_tx
modifier|*
name|ipoib_cm_create_tx
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ipoib_path
modifier|*
name|path
parameter_list|)
block|{
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_cm_destroy_tx
parameter_list|(
name|struct
name|ipoib_cm_tx
modifier|*
name|tx
parameter_list|)
block|{
return|return;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ipoib_cm_add_mode_attr
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_cm_mb_too_long
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|mbuf
modifier|*
name|mb
parameter_list|,
name|unsigned
name|int
name|mtu
parameter_list|)
block|{
name|m_freem
argument_list|(
name|mb
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_cm_handle_rx_wc
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ib_wc
modifier|*
name|wc
parameter_list|)
block|{ }
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_cm_handle_tx_wc
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|,
name|struct
name|ib_wc
modifier|*
name|wc
parameter_list|)
block|{ }
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_INFINIBAND_IPOIB_DEBUG
end_ifdef

begin_function_decl
name|void
name|ipoib_create_debug_files
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_delete_debug_files
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ipoib_register_debugfs
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipoib_unregister_debugfs
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_create_debug_files
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{ }
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_delete_debug_files
parameter_list|(
name|struct
name|ipoib_dev_priv
modifier|*
name|priv
parameter_list|)
block|{ }
end_function

begin_function
specifier|static
specifier|inline
name|int
name|ipoib_register_debugfs
parameter_list|(
name|void
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ipoib_unregister_debugfs
parameter_list|(
name|void
parameter_list|)
block|{ }
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|ipoib_printk
parameter_list|(
name|level
parameter_list|,
name|priv
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|printk(level "%s: " format, if_name(((struct ipoib_dev_priv *) priv)->dev), ## arg)
end_define

begin_define
define|#
directive|define
name|ipoib_warn
parameter_list|(
name|priv
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|ipoib_printk(KERN_WARNING, priv, format , ## arg)
end_define

begin_decl_stmt
specifier|extern
name|int
name|ipoib_sendq_size
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ipoib_recvq_size
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|ib_sa_client
name|ipoib_sa_client
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_INFINIBAND_IPOIB_DEBUG
end_ifdef

begin_decl_stmt
specifier|extern
name|int
name|ipoib_debug_level
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|ipoib_dbg
parameter_list|(
name|priv
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|do {						\ 		if (ipoib_debug_level> 0)			\ 			ipoib_printk(KERN_DEBUG, priv, format , ## arg); \ 	} while (0)
end_define

begin_define
define|#
directive|define
name|ipoib_dbg_mcast
parameter_list|(
name|priv
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|do {						\ 		if (mcast_debug_level> 0)		\ 			ipoib_printk(KERN_DEBUG, priv, format , ## arg); \ 	} while (0)
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* CONFIG_INFINIBAND_IPOIB_DEBUG */
end_comment

begin_define
define|#
directive|define
name|ipoib_dbg
parameter_list|(
name|priv
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|do { (void) (priv); } while (0)
end_define

begin_define
define|#
directive|define
name|ipoib_dbg_mcast
parameter_list|(
name|priv
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|do { (void) (priv); } while (0)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* CONFIG_INFINIBAND_IPOIB_DEBUG */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_INFINIBAND_IPOIB_DEBUG_DATA
end_ifdef

begin_define
define|#
directive|define
name|ipoib_dbg_data
parameter_list|(
name|priv
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|do {						\ 		if (data_debug_level> 0)		\ 			ipoib_printk(KERN_DEBUG, priv, format , ## arg); \ 	} while (0)
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* CONFIG_INFINIBAND_IPOIB_DEBUG_DATA */
end_comment

begin_define
define|#
directive|define
name|ipoib_dbg_data
parameter_list|(
name|priv
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|do { (void) (priv); } while (0)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* CONFIG_INFINIBAND_IPOIB_DEBUG_DATA */
end_comment

begin_define
define|#
directive|define
name|IPOIB_QPN
parameter_list|(
name|ha
parameter_list|)
value|(be32_to_cpup((__be32 *) ha)& 0xffffff)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _IPOIB_H */
end_comment

end_unit

