begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2004, 2005, Voltaire, Inc. All rights reserved.  * Copyright (c) 2005 Intel Corporation. All rights reserved.  * Copyright (c) 2005 Sun Microsystems, Inc. All rights reserved.  * Copyright (c) 2009 HNR Consulting. All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__IB_MAD_PRIV_H__
end_ifndef

begin_define
define|#
directive|define
name|__IB_MAD_PRIV_H__
end_define

begin_include
include|#
directive|include
file|<linux/completion.h>
end_include

begin_include
include|#
directive|include
file|<linux/err.h>
end_include

begin_include
include|#
directive|include
file|<linux/workqueue.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_mad.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_smi.h>
end_include

begin_include
include|#
directive|include
file|<rdma/opa_smi.h>
end_include

begin_define
define|#
directive|define
name|IB_MAD_QPS_CORE
value|2
end_define

begin_comment
comment|/* Always QP0 and QP1 as a minimum */
end_comment

begin_comment
comment|/* QP and CQ parameters */
end_comment

begin_define
define|#
directive|define
name|IB_MAD_QP_SEND_SIZE
value|128
end_define

begin_define
define|#
directive|define
name|IB_MAD_QP_RECV_SIZE
value|512
end_define

begin_define
define|#
directive|define
name|IB_MAD_QP_MIN_SIZE
value|64
end_define

begin_define
define|#
directive|define
name|IB_MAD_QP_MAX_SIZE
value|8192
end_define

begin_define
define|#
directive|define
name|IB_MAD_SEND_REQ_MAX_SG
value|2
end_define

begin_define
define|#
directive|define
name|IB_MAD_RECV_REQ_MAX_SG
value|1
end_define

begin_define
define|#
directive|define
name|IB_MAD_SEND_Q_PSN
value|0
end_define

begin_comment
comment|/* Registration table sizes */
end_comment

begin_define
define|#
directive|define
name|MAX_MGMT_CLASS
value|80
end_define

begin_define
define|#
directive|define
name|MAX_MGMT_VERSION
value|0x83
end_define

begin_define
define|#
directive|define
name|MAX_MGMT_OUI
value|8
end_define

begin_define
define|#
directive|define
name|MAX_MGMT_VENDOR_RANGE2
value|(IB_MGMT_CLASS_VENDOR_RANGE2_END - \ 				IB_MGMT_CLASS_VENDOR_RANGE2_START + 1)
end_define

begin_struct
struct|struct
name|ib_mad_list_head
block|{
name|struct
name|list_head
name|list
decl_stmt|;
name|struct
name|ib_cqe
name|cqe
decl_stmt|;
name|struct
name|ib_mad_queue
modifier|*
name|mad_queue
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_private_header
block|{
name|struct
name|ib_mad_list_head
name|mad_list
decl_stmt|;
name|struct
name|ib_mad_recv_wc
name|recv_wc
decl_stmt|;
name|struct
name|ib_wc
name|wc
decl_stmt|;
name|u64
name|mapping
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_private
block|{
name|struct
name|ib_mad_private_header
name|header
decl_stmt|;
name|size_t
name|mad_size
decl_stmt|;
name|struct
name|ib_grh
name|grh
decl_stmt|;
name|u8
name|mad
index|[
literal|0
index|]
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_struct
struct|struct
name|ib_rmpp_segment
block|{
name|struct
name|list_head
name|list
decl_stmt|;
name|u32
name|num
decl_stmt|;
name|u8
name|data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_agent_private
block|{
name|struct
name|list_head
name|agent_list
decl_stmt|;
name|struct
name|ib_mad_agent
name|agent
decl_stmt|;
name|struct
name|ib_mad_reg_req
modifier|*
name|reg_req
decl_stmt|;
name|struct
name|ib_mad_qp_info
modifier|*
name|qp_info
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|list_head
name|send_list
decl_stmt|;
name|struct
name|list_head
name|wait_list
decl_stmt|;
name|struct
name|list_head
name|done_list
decl_stmt|;
name|struct
name|delayed_work
name|timed_work
decl_stmt|;
name|unsigned
name|long
name|timeout
decl_stmt|;
name|struct
name|list_head
name|local_list
decl_stmt|;
name|struct
name|work_struct
name|local_work
decl_stmt|;
name|struct
name|list_head
name|rmpp_list
decl_stmt|;
name|atomic_t
name|refcount
decl_stmt|;
name|struct
name|completion
name|comp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_snoop_private
block|{
name|struct
name|ib_mad_agent
name|agent
decl_stmt|;
name|struct
name|ib_mad_qp_info
modifier|*
name|qp_info
decl_stmt|;
name|int
name|snoop_index
decl_stmt|;
name|int
name|mad_snoop_flags
decl_stmt|;
name|atomic_t
name|refcount
decl_stmt|;
name|struct
name|completion
name|comp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_send_wr_private
block|{
name|struct
name|ib_mad_list_head
name|mad_list
decl_stmt|;
name|struct
name|list_head
name|agent_list
decl_stmt|;
name|struct
name|ib_mad_agent_private
modifier|*
name|mad_agent_priv
decl_stmt|;
name|struct
name|ib_mad_send_buf
name|send_buf
decl_stmt|;
name|u64
name|header_mapping
decl_stmt|;
name|u64
name|payload_mapping
decl_stmt|;
name|struct
name|ib_ud_wr
name|send_wr
decl_stmt|;
name|struct
name|ib_sge
name|sg_list
index|[
name|IB_MAD_SEND_REQ_MAX_SG
index|]
decl_stmt|;
name|__be64
name|tid
decl_stmt|;
name|unsigned
name|long
name|timeout
decl_stmt|;
name|int
name|max_retries
decl_stmt|;
name|int
name|retries_left
decl_stmt|;
name|int
name|retry
decl_stmt|;
name|int
name|refcount
decl_stmt|;
name|enum
name|ib_wc_status
name|status
decl_stmt|;
comment|/* RMPP control */
name|struct
name|list_head
name|rmpp_list
decl_stmt|;
name|struct
name|ib_rmpp_segment
modifier|*
name|last_ack_seg
decl_stmt|;
name|struct
name|ib_rmpp_segment
modifier|*
name|cur_seg
decl_stmt|;
name|int
name|last_ack
decl_stmt|;
name|int
name|seg_num
decl_stmt|;
name|int
name|newwin
decl_stmt|;
name|int
name|pad
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_local_private
block|{
name|struct
name|list_head
name|completion_list
decl_stmt|;
name|struct
name|ib_mad_private
modifier|*
name|mad_priv
decl_stmt|;
name|struct
name|ib_mad_agent_private
modifier|*
name|recv_mad_agent
decl_stmt|;
name|struct
name|ib_mad_send_wr_private
modifier|*
name|mad_send_wr
decl_stmt|;
name|size_t
name|return_wc_byte_len
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_mgmt_method_table
block|{
name|struct
name|ib_mad_agent_private
modifier|*
name|agent
index|[
name|IB_MGMT_MAX_METHODS
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_mgmt_class_table
block|{
name|struct
name|ib_mad_mgmt_method_table
modifier|*
name|method_table
index|[
name|MAX_MGMT_CLASS
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_mgmt_vendor_class
block|{
name|u8
name|oui
index|[
name|MAX_MGMT_OUI
index|]
index|[
literal|3
index|]
decl_stmt|;
name|struct
name|ib_mad_mgmt_method_table
modifier|*
name|method_table
index|[
name|MAX_MGMT_OUI
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_mgmt_vendor_class_table
block|{
name|struct
name|ib_mad_mgmt_vendor_class
modifier|*
name|vendor_class
index|[
name|MAX_MGMT_VENDOR_RANGE2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_mgmt_version_table
block|{
name|struct
name|ib_mad_mgmt_class_table
modifier|*
name|class
decl_stmt|;
name|struct
name|ib_mad_mgmt_vendor_class_table
modifier|*
name|vendor
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_queue
block|{
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
name|int
name|count
decl_stmt|;
name|int
name|max_active
decl_stmt|;
name|struct
name|ib_mad_qp_info
modifier|*
name|qp_info
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_qp_info
block|{
name|struct
name|ib_mad_port_private
modifier|*
name|port_priv
decl_stmt|;
name|struct
name|ib_qp
modifier|*
name|qp
decl_stmt|;
name|struct
name|ib_mad_queue
name|send_queue
decl_stmt|;
name|struct
name|ib_mad_queue
name|recv_queue
decl_stmt|;
name|struct
name|list_head
name|overflow_list
decl_stmt|;
name|spinlock_t
name|snoop_lock
decl_stmt|;
name|struct
name|ib_mad_snoop_private
modifier|*
modifier|*
name|snoop_table
decl_stmt|;
name|int
name|snoop_table_size
decl_stmt|;
name|atomic_t
name|snoop_count
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_mad_port_private
block|{
name|struct
name|list_head
name|port_list
decl_stmt|;
name|struct
name|ib_device
modifier|*
name|device
decl_stmt|;
name|int
name|port_num
decl_stmt|;
name|struct
name|ib_cq
modifier|*
name|cq
decl_stmt|;
name|struct
name|ib_pd
modifier|*
name|pd
decl_stmt|;
name|spinlock_t
name|reg_lock
decl_stmt|;
name|struct
name|ib_mad_mgmt_version_table
name|version
index|[
name|MAX_MGMT_VERSION
index|]
decl_stmt|;
name|struct
name|list_head
name|agent_list
decl_stmt|;
name|struct
name|workqueue_struct
modifier|*
name|wq
decl_stmt|;
name|struct
name|ib_mad_qp_info
name|qp_info
index|[
name|IB_MAD_QPS_CORE
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|ib_send_mad
parameter_list|(
name|struct
name|ib_mad_send_wr_private
modifier|*
name|mad_send_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mad_send_wr_private
modifier|*
name|ib_find_send_mad
parameter_list|(
specifier|const
name|struct
name|ib_mad_agent_private
modifier|*
name|mad_agent_priv
parameter_list|,
specifier|const
name|struct
name|ib_mad_recv_wc
modifier|*
name|mad_recv_wc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ib_mad_complete_send_wr
parameter_list|(
name|struct
name|ib_mad_send_wr_private
modifier|*
name|mad_send_wr
parameter_list|,
name|struct
name|ib_mad_send_wc
modifier|*
name|mad_send_wc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ib_mark_mad_done
parameter_list|(
name|struct
name|ib_mad_send_wr_private
modifier|*
name|mad_send_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ib_reset_mad_timeout
parameter_list|(
name|struct
name|ib_mad_send_wr_private
modifier|*
name|mad_send_wr
parameter_list|,
name|int
name|timeout_ms
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __IB_MAD_PRIV_H__ */
end_comment

end_unit

