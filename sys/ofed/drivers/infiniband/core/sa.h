begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2004 Topspin Communications.  All rights reserved.  * Copyright (c) 2005 Voltaire, Inc.  All rights reserved.  * Copyright (c) 2006 Intel Corporation.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SA_H
end_ifndef

begin_define
define|#
directive|define
name|SA_H
end_define

begin_include
include|#
directive|include
file|<rdma/ib_sa.h>
end_include

begin_function
specifier|static
specifier|inline
name|void
name|ib_sa_client_get
parameter_list|(
name|struct
name|ib_sa_client
modifier|*
name|client
parameter_list|)
block|{
name|atomic_inc
argument_list|(
operator|&
name|client
operator|->
name|users
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ib_sa_client_put
parameter_list|(
name|struct
name|ib_sa_client
modifier|*
name|client
parameter_list|)
block|{
if|if
condition|(
name|atomic_dec_and_test
argument_list|(
operator|&
name|client
operator|->
name|users
argument_list|)
condition|)
name|complete
argument_list|(
operator|&
name|client
operator|->
name|comp
argument_list|)
expr_stmt|;
block|}
end_function

begin_function_decl
name|int
name|ib_sa_check_selector
parameter_list|(
name|ib_sa_comp_mask
name|comp_mask
parameter_list|,
name|ib_sa_comp_mask
name|selector_mask
parameter_list|,
name|ib_sa_comp_mask
name|value_mask
parameter_list|,
name|u8
name|selector
parameter_list|,
name|u8
name|src_value
parameter_list|,
name|u8
name|dst_value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ib_sa_pack_attr
parameter_list|(
name|void
modifier|*
name|dst
parameter_list|,
name|void
modifier|*
name|src
parameter_list|,
name|int
name|attr_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ib_sa_unpack_attr
parameter_list|(
name|void
modifier|*
name|dst
parameter_list|,
name|void
modifier|*
name|src
parameter_list|,
name|int
name|attr_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ib_sa_path_rec_query
parameter_list|(
name|struct
name|ib_sa_client
modifier|*
name|client
parameter_list|,
name|struct
name|ib_device
modifier|*
name|device
parameter_list|,
name|u8
name|port_num
parameter_list|,
name|struct
name|ib_sa_path_rec
modifier|*
name|rec
parameter_list|,
name|ib_sa_comp_mask
name|comp_mask
parameter_list|,
name|int
name|timeout_ms
parameter_list|,
name|gfp_t
name|gfp_mask
parameter_list|,
name|void
function_decl|(
modifier|*
name|callback
function_decl|)
parameter_list|(
name|int
name|status
parameter_list|,
name|struct
name|ib_sa_path_rec
modifier|*
name|resp
parameter_list|,
name|void
modifier|*
name|context
parameter_list|)
parameter_list|,
name|void
modifier|*
name|context
parameter_list|,
name|struct
name|ib_sa_query
modifier|*
modifier|*
name|sa_query
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sa_db_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sa_db_cleanup
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ib_sa_mcmember_rec_query
parameter_list|(
name|struct
name|ib_sa_client
modifier|*
name|client
parameter_list|,
name|struct
name|ib_device
modifier|*
name|device
parameter_list|,
name|u8
name|port_num
parameter_list|,
name|u8
name|method
parameter_list|,
name|struct
name|ib_sa_mcmember_rec
modifier|*
name|rec
parameter_list|,
name|ib_sa_comp_mask
name|comp_mask
parameter_list|,
name|int
name|timeout_ms
parameter_list|,
name|gfp_t
name|gfp_mask
parameter_list|,
name|void
function_decl|(
modifier|*
name|callback
function_decl|)
parameter_list|(
name|int
name|status
parameter_list|,
name|struct
name|ib_sa_mcmember_rec
modifier|*
name|resp
parameter_list|,
name|void
modifier|*
name|context
parameter_list|)
parameter_list|,
name|void
modifier|*
name|context
parameter_list|,
name|struct
name|ib_sa_query
modifier|*
modifier|*
name|sa_query
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mcast_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mcast_cleanup
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ib_sa_informinfo_query
parameter_list|(
name|struct
name|ib_sa_client
modifier|*
name|client
parameter_list|,
name|struct
name|ib_device
modifier|*
name|device
parameter_list|,
name|u8
name|port_num
parameter_list|,
name|struct
name|ib_sa_inform
modifier|*
name|rec
parameter_list|,
name|int
name|timeout_ms
parameter_list|,
name|gfp_t
name|gfp_mask
parameter_list|,
name|void
function_decl|(
modifier|*
name|callback
function_decl|)
parameter_list|(
name|int
name|status
parameter_list|,
name|struct
name|ib_sa_inform
modifier|*
name|resp
parameter_list|,
name|void
modifier|*
name|context
parameter_list|)
parameter_list|,
name|void
modifier|*
name|context
parameter_list|,
name|struct
name|ib_sa_query
modifier|*
modifier|*
name|sa_query
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|notice_dispatch
parameter_list|(
name|struct
name|ib_device
modifier|*
name|device
parameter_list|,
name|u8
name|port_num
parameter_list|,
name|struct
name|ib_sa_notice
modifier|*
name|notice
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|notice_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|notice_cleanup
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* SA_H */
end_comment

end_unit

