begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2006, 2007 Cisco Systems.  All rights reserved.  * Copyright (c) 2007, 2008 Mellanox Technologies. All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MLX4_IB_H
end_ifndef

begin_define
define|#
directive|define
name|MLX4_IB_H
end_define

begin_include
include|#
directive|include
file|<linux/compiler.h>
end_include

begin_include
include|#
directive|include
file|<linux/list.h>
end_include

begin_include
include|#
directive|include
file|<linux/mutex.h>
end_include

begin_include
include|#
directive|include
file|<linux/idr.h>
end_include

begin_include
include|#
directive|include
file|<linux/rbtree.h>
end_include

begin_include
include|#
directive|include
file|<linux/notifier.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_verbs.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_umem.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_mad.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_sa.h>
end_include

begin_include
include|#
directive|include
file|<linux/mlx4/device.h>
end_include

begin_include
include|#
directive|include
file|<linux/mlx4/doorbell.h>
end_include

begin_define
define|#
directive|define
name|MLX4_IB_DRV_NAME
value|"mlx4_ib"
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|pr_fmt
end_ifdef

begin_undef
undef|#
directive|undef
name|pr_fmt
end_undef

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|pr_fmt
parameter_list|(
name|fmt
parameter_list|)
value|"<" MLX4_IB_DRV_NAME "> %s: " fmt, __func__
end_define

begin_define
define|#
directive|define
name|mlx4_ib_warn
parameter_list|(
name|ibdev
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|dev_warn((ibdev)->dma_device, MLX4_IB_DRV_NAME ": " format, ## arg)
end_define

begin_define
define|#
directive|define
name|mlx4_ib_info
parameter_list|(
name|ibdev
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|dev_info((ibdev)->dma_device, MLX4_IB_DRV_NAME ": " format, ## arg)
end_define

begin_enum
enum|enum
block|{
name|MLX4_IB_SQ_MIN_WQE_SHIFT
init|=
literal|6
block|,
name|MLX4_IB_MAX_HEADROOM
init|=
literal|2048
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|MLX4_IB_SQ_HEADROOM
parameter_list|(
name|shift
parameter_list|)
value|((MLX4_IB_MAX_HEADROOM>> (shift)) + 1)
end_define

begin_define
define|#
directive|define
name|MLX4_IB_SQ_MAX_SPARE
value|(MLX4_IB_SQ_HEADROOM(MLX4_IB_SQ_MIN_WQE_SHIFT))
end_define

begin_comment
comment|/*module param to indicate if SM assigns the alias_GUID*/
end_comment

begin_decl_stmt
specifier|extern
name|int
name|mlx4_ib_sm_guid_assign
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|proc_dir_entry
modifier|*
name|mlx4_mrs_dir_entry
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|MLX4_IB_UC_STEER_QPN_ALIGN
value|1
end_define

begin_define
define|#
directive|define
name|MLX4_IB_UC_MAX_NUM_QPS
value|(256 * 1024)
end_define

begin_define
define|#
directive|define
name|MLX4_IB_MMAP_CMD_MASK
value|0xFF
end_define

begin_define
define|#
directive|define
name|MLX4_IB_MMAP_CMD_BITS
value|8
end_define

begin_struct
struct|struct
name|mlx4_ib_ucontext
block|{
name|struct
name|ib_ucontext
name|ibucontext
decl_stmt|;
name|struct
name|mlx4_uar
name|uar
decl_stmt|;
name|struct
name|list_head
name|db_page_list
decl_stmt|;
name|struct
name|mutex
name|db_page_mutex
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_pd
block|{
name|struct
name|ib_pd
name|ibpd
decl_stmt|;
name|u32
name|pdn
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_xrcd
block|{
name|struct
name|ib_xrcd
name|ibxrcd
decl_stmt|;
name|u32
name|xrcdn
decl_stmt|;
name|struct
name|ib_pd
modifier|*
name|pd
decl_stmt|;
name|struct
name|ib_cq
modifier|*
name|cq
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_cq_buf
block|{
name|struct
name|mlx4_buf
name|buf
decl_stmt|;
name|struct
name|mlx4_mtt
name|mtt
decl_stmt|;
name|int
name|entry_size
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_cq_resize
block|{
name|struct
name|mlx4_ib_cq_buf
name|buf
decl_stmt|;
name|int
name|cqe
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_shared_mr_info
block|{
name|int
name|mr_id
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|umem
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_cq
block|{
name|struct
name|ib_cq
name|ibcq
decl_stmt|;
name|struct
name|mlx4_cq
name|mcq
decl_stmt|;
name|struct
name|mlx4_ib_cq_buf
name|buf
decl_stmt|;
name|struct
name|mlx4_ib_cq_resize
modifier|*
name|resize_buf
decl_stmt|;
name|struct
name|mlx4_db
name|db
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|mutex
name|resize_mutex
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|umem
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|resize_umem
decl_stmt|;
name|int
name|create_flags
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_mr
block|{
name|struct
name|ib_mr
name|ibmr
decl_stmt|;
name|struct
name|mlx4_mr
name|mmr
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|umem
decl_stmt|;
name|struct
name|mlx4_shared_mr_info
modifier|*
name|smr_info
decl_stmt|;
name|atomic_t
name|invalidated
decl_stmt|;
name|struct
name|completion
name|invalidation_comp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_mw
block|{
name|struct
name|ib_mw
name|ibmw
decl_stmt|;
name|struct
name|mlx4_mw
name|mmw
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_fast_reg_page_list
block|{
name|struct
name|ib_fast_reg_page_list
name|ibfrpl
decl_stmt|;
name|__be64
modifier|*
name|mapped_page_list
decl_stmt|;
name|dma_addr_t
name|map
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_fmr
block|{
name|struct
name|ib_fmr
name|ibfmr
decl_stmt|;
name|struct
name|mlx4_fmr
name|mfmr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_flow
block|{
name|struct
name|ib_flow
name|ibflow
decl_stmt|;
comment|/* translating DMFS verbs sniffer rule to FW API requires two reg IDs */
name|u64
name|reg_id
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_wq
block|{
name|u64
modifier|*
name|wrid
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
name|int
name|wqe_cnt
decl_stmt|;
name|int
name|max_post
decl_stmt|;
name|int
name|max_gs
decl_stmt|;
name|int
name|offset
decl_stmt|;
name|int
name|wqe_shift
decl_stmt|;
name|unsigned
name|head
decl_stmt|;
name|unsigned
name|tail
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|mlx4_ib_qp_flags
block|{
name|MLX4_IB_QP_LSO
init|=
name|IB_QP_CREATE_IPOIB_UD_LSO
block|,
name|MLX4_IB_QP_BLOCK_MULTICAST_LOOPBACK
init|=
name|IB_QP_CREATE_BLOCK_MULTICAST_LOOPBACK
block|,
name|MLX4_IB_QP_CAP_CROSS_CHANNEL
init|=
name|IB_QP_CREATE_CROSS_CHANNEL
block|,
name|MLX4_IB_QP_CAP_MANAGED_SEND
init|=
name|IB_QP_CREATE_MANAGED_SEND
block|,
name|MLX4_IB_QP_CAP_MANAGED_RECV
init|=
name|IB_QP_CREATE_MANAGED_RECV
block|,
name|MLX4_IB_QP_NETIF
init|=
name|IB_QP_CREATE_NETIF_QP
block|,
name|MLX4_IB_SRIOV_TUNNEL_QP
init|=
literal|1
operator|<<
literal|30
block|,
name|MLX4_IB_SRIOV_SQP
init|=
literal|1
operator|<<
literal|31
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx4_ib_gid_entry
block|{
name|struct
name|list_head
name|list
decl_stmt|;
name|union
name|ib_gid
name|gid
decl_stmt|;
name|int
name|added
decl_stmt|;
name|u8
name|port
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|mlx4_ib_mmap_cmd
block|{
name|MLX4_IB_MMAP_UAR_PAGE
init|=
literal|0
block|,
name|MLX4_IB_MMAP_BLUE_FLAME_PAGE
init|=
literal|1
block|,
name|MLX4_IB_MMAP_GET_CONTIGUOUS_PAGES
init|=
literal|2
block|,
name|MLX4_IB_MMAP_GET_HW_CLOCK
init|=
literal|3
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|mlx4_ib_qp_type
block|{
comment|/* 	 * IB_QPT_SMI and IB_QPT_GSI have to be the first two entries 	 * here (and in that order) since the MAD layer uses them as 	 * indices into a 2-entry table. 	 */
name|MLX4_IB_QPT_SMI
init|=
name|IB_QPT_SMI
block|,
name|MLX4_IB_QPT_GSI
init|=
name|IB_QPT_GSI
block|,
name|MLX4_IB_QPT_RC
init|=
name|IB_QPT_RC
block|,
name|MLX4_IB_QPT_UC
init|=
name|IB_QPT_UC
block|,
name|MLX4_IB_QPT_UD
init|=
name|IB_QPT_UD
block|,
name|MLX4_IB_QPT_RAW_IPV6
init|=
name|IB_QPT_RAW_IPV6
block|,
name|MLX4_IB_QPT_RAW_ETHERTYPE
init|=
name|IB_QPT_RAW_ETHERTYPE
block|,
name|MLX4_IB_QPT_RAW_PACKET
init|=
name|IB_QPT_RAW_PACKET
block|,
name|MLX4_IB_QPT_XRC_INI
init|=
name|IB_QPT_XRC_INI
block|,
name|MLX4_IB_QPT_XRC_TGT
init|=
name|IB_QPT_XRC_TGT
block|,
name|MLX4_IB_QPT_PROXY_SMI_OWNER
init|=
literal|1
operator|<<
literal|16
block|,
name|MLX4_IB_QPT_PROXY_SMI
init|=
literal|1
operator|<<
literal|17
block|,
name|MLX4_IB_QPT_PROXY_GSI
init|=
literal|1
operator|<<
literal|18
block|,
name|MLX4_IB_QPT_TUN_SMI_OWNER
init|=
literal|1
operator|<<
literal|19
block|,
name|MLX4_IB_QPT_TUN_SMI
init|=
literal|1
operator|<<
literal|20
block|,
name|MLX4_IB_QPT_TUN_GSI
init|=
literal|1
operator|<<
literal|21
block|, }
enum|;
end_enum

begin_define
define|#
directive|define
name|MLX4_IB_QPT_ANY_SRIOV
value|(MLX4_IB_QPT_PROXY_SMI_OWNER | \ 	MLX4_IB_QPT_PROXY_SMI | MLX4_IB_QPT_PROXY_GSI | MLX4_IB_QPT_TUN_SMI_OWNER | \ 	MLX4_IB_QPT_TUN_SMI | MLX4_IB_QPT_TUN_GSI)
end_define

begin_enum
enum|enum
name|mlx4_ib_mad_ifc_flags
block|{
name|MLX4_MAD_IFC_IGNORE_MKEY
init|=
literal|1
block|,
name|MLX4_MAD_IFC_IGNORE_BKEY
init|=
literal|2
block|,
name|MLX4_MAD_IFC_IGNORE_KEYS
init|=
operator|(
name|MLX4_MAD_IFC_IGNORE_MKEY
operator||
name|MLX4_MAD_IFC_IGNORE_BKEY
operator|)
block|,
name|MLX4_MAD_IFC_NET_VIEW
init|=
literal|4
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_NUM_TUNNEL_BUFS
init|=
literal|256
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx4_ib_tunnel_header
block|{
name|struct
name|mlx4_av
name|av
decl_stmt|;
name|__be32
name|remote_qpn
decl_stmt|;
name|__be32
name|qkey
decl_stmt|;
name|__be16
name|vlan
decl_stmt|;
name|u8
name|mac
index|[
literal|6
index|]
decl_stmt|;
name|__be16
name|pkey_index
decl_stmt|;
name|u8
name|reserved
index|[
literal|6
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_buf
block|{
name|void
modifier|*
name|addr
decl_stmt|;
name|dma_addr_t
name|map
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_rcv_tunnel_hdr
block|{
name|__be32
name|flags_src_qp
decl_stmt|;
comment|/* flags[6:5] is defined for VLANs: 			      * 0x0 - no vlan was in the packet 			      * 0x01 - C-VLAN was in the packet */
name|u8
name|g_ml_path
decl_stmt|;
comment|/* gid bit stands for ipv6/4 header in RoCE */
name|u8
name|reserved
decl_stmt|;
name|__be16
name|pkey_index
decl_stmt|;
name|__be16
name|sl_vid
decl_stmt|;
name|__be16
name|slid_mac_47_32
decl_stmt|;
name|__be32
name|mac_31_0
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_proxy_sqp_hdr
block|{
name|struct
name|ib_grh
name|grh
decl_stmt|;
name|struct
name|mlx4_rcv_tunnel_hdr
name|tun
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_roce_smac_vlan_info
block|{
name|u64
name|smac
decl_stmt|;
name|int
name|smac_index
decl_stmt|;
name|int
name|smac_port
decl_stmt|;
name|u64
name|candidate_smac
decl_stmt|;
name|int
name|candidate_smac_index
decl_stmt|;
name|int
name|candidate_smac_port
decl_stmt|;
name|u16
name|vid
decl_stmt|;
name|int
name|vlan_index
decl_stmt|;
name|int
name|vlan_port
decl_stmt|;
name|u16
name|candidate_vid
decl_stmt|;
name|int
name|candidate_vlan_index
decl_stmt|;
name|int
name|candidate_vlan_port
decl_stmt|;
name|int
name|update_vid
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_qpg_data
block|{
name|unsigned
name|long
modifier|*
name|tss_bitmap
decl_stmt|;
name|unsigned
name|long
modifier|*
name|rss_bitmap
decl_stmt|;
name|struct
name|mlx4_ib_qp
modifier|*
name|qpg_parent
decl_stmt|;
name|int
name|tss_qpn_base
decl_stmt|;
name|int
name|rss_qpn_base
decl_stmt|;
name|u32
name|tss_child_count
decl_stmt|;
name|u32
name|rss_child_count
decl_stmt|;
name|u32
name|qpg_tss_mask_sz
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_qp
block|{
name|struct
name|ib_qp
name|ibqp
decl_stmt|;
name|struct
name|mlx4_qp
name|mqp
decl_stmt|;
name|struct
name|mlx4_buf
name|buf
decl_stmt|;
name|struct
name|mlx4_db
name|db
decl_stmt|;
name|struct
name|mlx4_ib_wq
name|rq
decl_stmt|;
name|u32
name|doorbell_qpn
decl_stmt|;
name|__be32
name|sq_signal_bits
decl_stmt|;
name|unsigned
name|sq_next_wqe
decl_stmt|;
name|int
name|sq_max_wqes_per_wr
decl_stmt|;
name|int
name|sq_spare_wqes
decl_stmt|;
name|struct
name|mlx4_ib_wq
name|sq
decl_stmt|;
name|enum
name|mlx4_ib_qp_type
name|mlx4_ib_qp_type
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|umem
decl_stmt|;
name|struct
name|mlx4_mtt
name|mtt
decl_stmt|;
name|int
name|buf_size
decl_stmt|;
name|struct
name|mutex
name|mutex
decl_stmt|;
name|u16
name|xrcdn
decl_stmt|;
name|u32
name|flags
decl_stmt|;
name|u8
name|port
decl_stmt|;
name|u8
name|alt_port
decl_stmt|;
name|u8
name|atomic_rd_en
decl_stmt|;
name|u8
name|resp_depth
decl_stmt|;
name|u8
name|sq_no_prefetch
decl_stmt|;
name|u8
name|state
decl_stmt|;
name|int
name|mlx_type
decl_stmt|;
name|enum
name|ib_qpg_type
name|qpg_type
decl_stmt|;
name|struct
name|mlx4_ib_qpg_data
modifier|*
name|qpg_data
decl_stmt|;
name|struct
name|list_head
name|gid_list
decl_stmt|;
name|struct
name|list_head
name|steering_rules
decl_stmt|;
name|struct
name|mlx4_ib_buf
modifier|*
name|sqp_proxy_rcv
decl_stmt|;
name|struct
name|mlx4_roce_smac_vlan_info
name|pri
decl_stmt|;
name|struct
name|mlx4_roce_smac_vlan_info
name|alt
decl_stmt|;
name|struct
name|list_head
name|rules_list
decl_stmt|;
name|u64
name|reg_id
decl_stmt|;
name|int
name|max_inline_data
decl_stmt|;
name|struct
name|mlx4_bf
name|bf
decl_stmt|;
comment|/* 	 * Experimental data 	 */
name|int
name|max_inlr_data
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_srq
block|{
name|struct
name|ib_srq
name|ibsrq
decl_stmt|;
name|struct
name|mlx4_srq
name|msrq
decl_stmt|;
name|struct
name|mlx4_buf
name|buf
decl_stmt|;
name|struct
name|mlx4_db
name|db
decl_stmt|;
name|u64
modifier|*
name|wrid
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
name|int
name|head
decl_stmt|;
name|int
name|tail
decl_stmt|;
name|u16
name|wqe_ctr
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|umem
decl_stmt|;
name|struct
name|mlx4_mtt
name|mtt
decl_stmt|;
name|struct
name|mutex
name|mutex
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_ah
block|{
name|struct
name|ib_ah
name|ibah
decl_stmt|;
name|union
name|mlx4_ext_av
name|av
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/****************************************/
end_comment

begin_comment
comment|/* alias guid support */
end_comment

begin_comment
comment|/****************************************/
end_comment

begin_define
define|#
directive|define
name|NUM_PORT_ALIAS_GUID
value|2
end_define

begin_define
define|#
directive|define
name|NUM_ALIAS_GUID_IN_REC
value|8
end_define

begin_define
define|#
directive|define
name|NUM_ALIAS_GUID_REC_IN_PORT
value|16
end_define

begin_define
define|#
directive|define
name|GUID_REC_SIZE
value|8
end_define

begin_define
define|#
directive|define
name|NUM_ALIAS_GUID_PER_PORT
value|128
end_define

begin_define
define|#
directive|define
name|MLX4_NOT_SET_GUID
value|(0x00LL)
end_define

begin_define
define|#
directive|define
name|MLX4_GUID_FOR_DELETE_VAL
value|(~(0x00LL))
end_define

begin_comment
comment|/****************************************/
end_comment

begin_comment
comment|/* ioctl codes */
end_comment

begin_comment
comment|/****************************************/
end_comment

begin_define
define|#
directive|define
name|MLX4_IOC_MAGIC
value|'m'
end_define

begin_define
define|#
directive|define
name|MLX4_IOCHWCLOCKOFFSET
value|_IOR(MLX4_IOC_MAGIC, 1, int)
end_define

begin_enum
enum|enum
name|mlx4_guid_alias_rec_status
block|{
name|MLX4_GUID_INFO_STATUS_IDLE
block|,
name|MLX4_GUID_INFO_STATUS_SET
block|,
name|MLX4_GUID_INFO_STATUS_PENDING
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|mlx4_guid_alias_rec_ownership
block|{
name|MLX4_GUID_DRIVER_ASSIGN
block|,
name|MLX4_GUID_SYSADMIN_ASSIGN
block|,
name|MLX4_GUID_NONE_ASSIGN
block|,
comment|/*init state of each record*/
block|}
enum|;
end_enum

begin_enum
enum|enum
name|mlx4_guid_alias_rec_method
block|{
name|MLX4_GUID_INFO_RECORD_SET
init|=
name|IB_MGMT_METHOD_SET
block|,
name|MLX4_GUID_INFO_RECORD_DELETE
init|=
name|IB_SA_METHOD_DELETE
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx4_sriov_alias_guid_info_rec_det
block|{
name|u8
name|all_recs
index|[
name|GUID_REC_SIZE
operator|*
name|NUM_ALIAS_GUID_IN_REC
index|]
decl_stmt|;
name|ib_sa_comp_mask
name|guid_indexes
decl_stmt|;
comment|/*indicates what from the 8 records are valid*/
name|enum
name|mlx4_guid_alias_rec_status
name|status
decl_stmt|;
comment|/*indicates the administraively status of the record.*/
name|u8
name|method
decl_stmt|;
comment|/*set or delete*/
name|enum
name|mlx4_guid_alias_rec_ownership
name|ownership
decl_stmt|;
comment|/*indicates who assign that alias_guid record*/
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_sriov_alias_guid_port_rec_det
block|{
name|struct
name|mlx4_sriov_alias_guid_info_rec_det
name|all_rec_per_port
index|[
name|NUM_ALIAS_GUID_REC_IN_PORT
index|]
decl_stmt|;
name|struct
name|workqueue_struct
modifier|*
name|wq
decl_stmt|;
name|struct
name|delayed_work
name|alias_guid_work
decl_stmt|;
name|u8
name|port
decl_stmt|;
name|struct
name|mlx4_sriov_alias_guid
modifier|*
name|parent
decl_stmt|;
name|struct
name|list_head
name|cb_list
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_sriov_alias_guid
block|{
name|struct
name|mlx4_sriov_alias_guid_port_rec_det
name|ports_guid
index|[
name|MLX4_MAX_PORTS
index|]
decl_stmt|;
name|spinlock_t
name|ag_work_lock
decl_stmt|;
name|struct
name|ib_sa_client
modifier|*
name|sa_client
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_demux_work
block|{
name|struct
name|work_struct
name|work
decl_stmt|;
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
decl_stmt|;
name|int
name|slave
decl_stmt|;
name|int
name|do_init
decl_stmt|;
name|u8
name|port
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_tun_tx_buf
block|{
name|struct
name|mlx4_ib_buf
name|buf
decl_stmt|;
name|struct
name|ib_ah
modifier|*
name|ah
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_demux_pv_qp
block|{
name|struct
name|ib_qp
modifier|*
name|qp
decl_stmt|;
name|enum
name|ib_qp_type
name|proxy_qpt
decl_stmt|;
name|struct
name|mlx4_ib_buf
modifier|*
name|ring
decl_stmt|;
name|struct
name|mlx4_ib_tun_tx_buf
modifier|*
name|tx_ring
decl_stmt|;
name|spinlock_t
name|tx_lock
decl_stmt|;
name|unsigned
name|tx_ix_head
decl_stmt|;
name|unsigned
name|tx_ix_tail
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|mlx4_ib_demux_pv_state
block|{
name|DEMUX_PV_STATE_DOWN
block|,
name|DEMUX_PV_STATE_STARTING
block|,
name|DEMUX_PV_STATE_ACTIVE
block|,
name|DEMUX_PV_STATE_DOWNING
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx4_ib_demux_pv_ctx
block|{
name|int
name|port
decl_stmt|;
name|int
name|slave
decl_stmt|;
name|enum
name|mlx4_ib_demux_pv_state
name|state
decl_stmt|;
name|int
name|has_smi
decl_stmt|;
name|struct
name|ib_device
modifier|*
name|ib_dev
decl_stmt|;
name|struct
name|ib_cq
modifier|*
name|cq
decl_stmt|;
name|struct
name|ib_pd
modifier|*
name|pd
decl_stmt|;
name|struct
name|ib_mr
modifier|*
name|mr
decl_stmt|;
name|struct
name|work_struct
name|work
decl_stmt|;
name|struct
name|workqueue_struct
modifier|*
name|wq
decl_stmt|;
name|struct
name|mlx4_ib_demux_pv_qp
name|qp
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_demux_ctx
block|{
name|struct
name|ib_device
modifier|*
name|ib_dev
decl_stmt|;
name|int
name|port
decl_stmt|;
name|struct
name|workqueue_struct
modifier|*
name|wq
decl_stmt|;
name|struct
name|workqueue_struct
modifier|*
name|ud_wq
decl_stmt|;
name|spinlock_t
name|ud_lock
decl_stmt|;
name|__be64
name|subnet_prefix
decl_stmt|;
name|__be64
name|guid_cache
index|[
literal|128
index|]
decl_stmt|;
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
decl_stmt|;
comment|/* the following lock protects both mcg_table and mcg_mgid0_list */
name|struct
name|mutex
name|mcg_table_lock
decl_stmt|;
name|struct
name|rb_root
name|mcg_table
decl_stmt|;
name|struct
name|list_head
name|mcg_mgid0_list
decl_stmt|;
name|struct
name|workqueue_struct
modifier|*
name|mcg_wq
decl_stmt|;
name|struct
name|mlx4_ib_demux_pv_ctx
modifier|*
modifier|*
name|tun
decl_stmt|;
name|atomic_t
name|tid
decl_stmt|;
name|int
name|flushing
decl_stmt|;
comment|/* flushing the work queue */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_sriov
block|{
name|struct
name|mlx4_ib_demux_ctx
name|demux
index|[
name|MLX4_MAX_PORTS
index|]
decl_stmt|;
name|struct
name|mlx4_ib_demux_pv_ctx
modifier|*
name|sqps
index|[
name|MLX4_MAX_PORTS
index|]
decl_stmt|;
comment|/* when using this spinlock you should use "irq" because 	 * it may be called from interrupt context.*/
name|spinlock_t
name|going_down_lock
decl_stmt|;
name|int
name|is_going_down
decl_stmt|;
name|struct
name|mlx4_sriov_alias_guid
name|alias_guid
decl_stmt|;
comment|/* CM paravirtualization fields */
name|struct
name|list_head
name|cm_list
decl_stmt|;
name|spinlock_t
name|id_map_lock
decl_stmt|;
name|struct
name|rb_root
name|sl_id_map
decl_stmt|;
name|struct
name|idr
name|pv_id_table
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_iboe
block|{
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|net_device
modifier|*
name|netdevs
index|[
name|MLX4_MAX_PORTS
index|]
decl_stmt|;
name|struct
name|net_device
modifier|*
name|masters
index|[
name|MLX4_MAX_PORTS
index|]
decl_stmt|;
name|struct
name|notifier_block
name|nb
decl_stmt|;
name|struct
name|notifier_block
name|nb_inet
decl_stmt|;
name|union
name|ib_gid
name|gid_table
index|[
name|MLX4_MAX_PORTS
index|]
index|[
literal|128
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pkey_mgt
block|{
name|u8
name|virt2phys_pkey
index|[
name|MLX4_MFUNC_MAX
index|]
index|[
name|MLX4_MAX_PORTS
index|]
index|[
name|MLX4_MAX_PORT_PKEYS
index|]
decl_stmt|;
name|u16
name|phys_pkey_cache
index|[
name|MLX4_MAX_PORTS
index|]
index|[
name|MLX4_MAX_PORT_PKEYS
index|]
decl_stmt|;
name|struct
name|list_head
name|pkey_port_list
index|[
name|MLX4_MFUNC_MAX
index|]
decl_stmt|;
name|struct
name|kobject
modifier|*
name|device_parent
index|[
name|MLX4_MFUNC_MAX
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_iov_sysfs_attr
block|{
name|void
modifier|*
name|ctx
decl_stmt|;
name|struct
name|kobject
modifier|*
name|kobj
decl_stmt|;
name|unsigned
name|long
name|data
decl_stmt|;
name|u32
name|entry_num
decl_stmt|;
name|char
name|name
index|[
literal|15
index|]
decl_stmt|;
name|struct
name|device_attribute
name|dentry
decl_stmt|;
name|struct
name|device
modifier|*
name|dev
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_iov_sysfs_attr_ar
block|{
name|struct
name|mlx4_ib_iov_sysfs_attr
name|dentries
index|[
literal|3
operator|*
name|NUM_ALIAS_GUID_PER_PORT
operator|+
literal|1
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_iov_port
block|{
name|char
name|name
index|[
literal|100
index|]
decl_stmt|;
name|u8
name|num
decl_stmt|;
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
name|struct
name|mlx4_ib_iov_sysfs_attr_ar
modifier|*
name|dentr_ar
decl_stmt|;
name|struct
name|ib_port_attr
name|attr
decl_stmt|;
name|struct
name|kobject
modifier|*
name|cur_port
decl_stmt|;
name|struct
name|kobject
modifier|*
name|admin_alias_parent
decl_stmt|;
name|struct
name|kobject
modifier|*
name|gids_parent
decl_stmt|;
name|struct
name|kobject
modifier|*
name|pkeys_parent
decl_stmt|;
name|struct
name|kobject
modifier|*
name|mcgs_parent
decl_stmt|;
name|struct
name|mlx4_ib_iov_sysfs_attr
name|mcg_dentry
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_counter
block|{
name|int
name|counter_index
decl_stmt|;
name|int
name|status
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_dev
block|{
name|struct
name|ib_device
name|ib_dev
decl_stmt|;
name|struct
name|mlx4_dev
modifier|*
name|dev
decl_stmt|;
name|int
name|num_ports
decl_stmt|;
name|struct
name|mlx4_uar
name|priv_uar
decl_stmt|;
name|u32
name|priv_pdn
decl_stmt|;
name|MLX4_DECLARE_DOORBELL_LOCK
argument_list|(
name|uar_lock
argument_list|)
expr_stmt|;
name|struct
name|ib_mad_agent
modifier|*
name|send_agent
index|[
name|MLX4_MAX_PORTS
index|]
index|[
literal|2
index|]
decl_stmt|;
name|struct
name|ib_ah
modifier|*
name|sm_ah
index|[
name|MLX4_MAX_PORTS
index|]
decl_stmt|;
name|spinlock_t
name|sm_lock
decl_stmt|;
name|struct
name|mlx4_ib_sriov
name|sriov
decl_stmt|;
name|struct
name|mutex
name|cap_mask_mutex
decl_stmt|;
name|bool
name|ib_active
decl_stmt|;
name|struct
name|mlx4_ib_iboe
name|iboe
decl_stmt|;
name|struct
name|mlx4_ib_counter
name|counters
index|[
name|MLX4_MAX_PORTS
index|]
decl_stmt|;
name|int
modifier|*
name|eq_table
decl_stmt|;
name|int
name|eq_added
decl_stmt|;
name|struct
name|kobject
modifier|*
name|iov_parent
decl_stmt|;
name|struct
name|kobject
modifier|*
name|ports_parent
decl_stmt|;
name|struct
name|kobject
modifier|*
name|dev_ports_parent
index|[
name|MLX4_MFUNC_MAX
index|]
decl_stmt|;
name|struct
name|mlx4_ib_iov_port
name|iov_ports
index|[
name|MLX4_MAX_PORTS
index|]
decl_stmt|;
name|struct
name|pkey_mgt
name|pkeys
decl_stmt|;
name|unsigned
name|long
modifier|*
name|ib_uc_qpns_bitmap
decl_stmt|;
name|int
name|steer_qpn_count
decl_stmt|;
name|int
name|steer_qpn_base
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_event_work
block|{
name|struct
name|work_struct
name|work
decl_stmt|;
name|struct
name|mlx4_ib_dev
modifier|*
name|ib_dev
decl_stmt|;
name|struct
name|mlx4_eqe
name|ib_eqe
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_ib_qp_tunnel_init_attr
block|{
name|struct
name|ib_qp_init_attr
name|init_attr
decl_stmt|;
name|int
name|slave
decl_stmt|;
name|enum
name|ib_qp_type
name|proxy_qp_type
decl_stmt|;
name|u8
name|port
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_dev
modifier|*
name|to_mdev
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibdev
argument_list|,
expr|struct
name|mlx4_ib_dev
argument_list|,
name|ib_dev
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_ucontext
modifier|*
name|to_mucontext
parameter_list|(
name|struct
name|ib_ucontext
modifier|*
name|ibucontext
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibucontext
argument_list|,
expr|struct
name|mlx4_ib_ucontext
argument_list|,
name|ibucontext
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_pd
modifier|*
name|to_mpd
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|ibpd
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibpd
argument_list|,
expr|struct
name|mlx4_ib_pd
argument_list|,
name|ibpd
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_xrcd
modifier|*
name|to_mxrcd
parameter_list|(
name|struct
name|ib_xrcd
modifier|*
name|ibxrcd
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibxrcd
argument_list|,
expr|struct
name|mlx4_ib_xrcd
argument_list|,
name|ibxrcd
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_cq
modifier|*
name|to_mcq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibcq
argument_list|,
expr|struct
name|mlx4_ib_cq
argument_list|,
name|ibcq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_cq
modifier|*
name|to_mibcq
parameter_list|(
name|struct
name|mlx4_cq
modifier|*
name|mcq
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|mcq
argument_list|,
expr|struct
name|mlx4_ib_cq
argument_list|,
name|mcq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_mr
modifier|*
name|to_mmr
parameter_list|(
name|struct
name|ib_mr
modifier|*
name|ibmr
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibmr
argument_list|,
expr|struct
name|mlx4_ib_mr
argument_list|,
name|ibmr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_mw
modifier|*
name|to_mmw
parameter_list|(
name|struct
name|ib_mw
modifier|*
name|ibmw
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibmw
argument_list|,
expr|struct
name|mlx4_ib_mw
argument_list|,
name|ibmw
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_fast_reg_page_list
modifier|*
name|to_mfrpl
parameter_list|(
name|struct
name|ib_fast_reg_page_list
modifier|*
name|ibfrpl
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibfrpl
argument_list|,
expr|struct
name|mlx4_ib_fast_reg_page_list
argument_list|,
name|ibfrpl
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_fmr
modifier|*
name|to_mfmr
parameter_list|(
name|struct
name|ib_fmr
modifier|*
name|ibfmr
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibfmr
argument_list|,
expr|struct
name|mlx4_ib_fmr
argument_list|,
name|ibfmr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_flow
modifier|*
name|to_mflow
parameter_list|(
name|struct
name|ib_flow
modifier|*
name|ibflow
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibflow
argument_list|,
expr|struct
name|mlx4_ib_flow
argument_list|,
name|ibflow
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_qp
modifier|*
name|to_mqp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibqp
argument_list|,
expr|struct
name|mlx4_ib_qp
argument_list|,
name|ibqp
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_qp
modifier|*
name|to_mibqp
parameter_list|(
name|struct
name|mlx4_qp
modifier|*
name|mqp
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|mqp
argument_list|,
expr|struct
name|mlx4_ib_qp
argument_list|,
name|mqp
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_srq
modifier|*
name|to_msrq
parameter_list|(
name|struct
name|ib_srq
modifier|*
name|ibsrq
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibsrq
argument_list|,
expr|struct
name|mlx4_ib_srq
argument_list|,
name|ibsrq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_srq
modifier|*
name|to_mibsrq
parameter_list|(
name|struct
name|mlx4_srq
modifier|*
name|msrq
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|msrq
argument_list|,
expr|struct
name|mlx4_ib_srq
argument_list|,
name|msrq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_ib_ah
modifier|*
name|to_mah
parameter_list|(
name|struct
name|ib_ah
modifier|*
name|ibah
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibah
argument_list|,
expr|struct
name|mlx4_ib_ah
argument_list|,
name|ibah
argument_list|)
return|;
block|}
end_function

begin_function_decl
name|int
name|mlx4_ib_init_sriov
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_close_sriov
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_db_map_user
parameter_list|(
name|struct
name|mlx4_ib_ucontext
modifier|*
name|context
parameter_list|,
name|unsigned
name|long
name|virt
parameter_list|,
name|struct
name|mlx4_db
modifier|*
name|db
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_db_unmap_user
parameter_list|(
name|struct
name|mlx4_ib_ucontext
modifier|*
name|context
parameter_list|,
name|struct
name|mlx4_db
modifier|*
name|db
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mr
modifier|*
name|mlx4_ib_get_dma_mr
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|int
name|acc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_umem_write_mtt
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_mtt
modifier|*
name|mtt
parameter_list|,
name|struct
name|ib_umem
modifier|*
name|umem
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_umem_calc_optimal_mtt_size
parameter_list|(
name|struct
name|ib_umem
modifier|*
name|umem
parameter_list|,
name|u64
name|start_va
parameter_list|,
name|int
modifier|*
name|num_of_mtts
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mr
modifier|*
name|mlx4_ib_reg_user_mr
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|u64
name|start
parameter_list|,
name|u64
name|length
parameter_list|,
name|u64
name|virt_addr
parameter_list|,
name|int
name|access_flags
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|,
name|int
name|mr_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_dereg_mr
parameter_list|(
name|struct
name|ib_mr
modifier|*
name|mr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mw
modifier|*
name|mlx4_ib_alloc_mw
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|enum
name|ib_mw_type
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_bind_mw
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ib_mw
modifier|*
name|mw
parameter_list|,
name|struct
name|ib_mw_bind
modifier|*
name|mw_bind
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_dealloc_mw
parameter_list|(
name|struct
name|ib_mw
modifier|*
name|mw
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mr
modifier|*
name|mlx4_ib_alloc_fast_reg_mr
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|int
name|max_page_list_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_fast_reg_page_list
modifier|*
name|mlx4_ib_alloc_fast_reg_page_list
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|int
name|page_list_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_free_fast_reg_page_list
parameter_list|(
name|struct
name|ib_fast_reg_page_list
modifier|*
name|page_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_modify_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|cq
parameter_list|,
name|struct
name|ib_cq_attr
modifier|*
name|cq_attr
parameter_list|,
name|int
name|cq_attr_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_resize_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|,
name|int
name|entries
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_ignore_overrun_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_cq
modifier|*
name|mlx4_ib_create_cq
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|struct
name|ib_cq_init_attr
modifier|*
name|attr
parameter_list|,
name|struct
name|ib_ucontext
modifier|*
name|context
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_destroy_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|cq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_poll_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|,
name|int
name|num_entries
parameter_list|,
name|struct
name|ib_wc
modifier|*
name|wc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_arm_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|cq
parameter_list|,
name|enum
name|ib_cq_notify_flags
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__mlx4_ib_cq_clean
parameter_list|(
name|struct
name|mlx4_ib_cq
modifier|*
name|cq
parameter_list|,
name|u32
name|qpn
parameter_list|,
name|struct
name|mlx4_ib_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_cq_clean
parameter_list|(
name|struct
name|mlx4_ib_cq
modifier|*
name|cq
parameter_list|,
name|u32
name|qpn
parameter_list|,
name|struct
name|mlx4_ib_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_ah
modifier|*
name|mlx4_ib_create_ah
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ib_ah_attr
modifier|*
name|ah_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_query_ah
parameter_list|(
name|struct
name|ib_ah
modifier|*
name|ibah
parameter_list|,
name|struct
name|ib_ah_attr
modifier|*
name|ah_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_destroy_ah
parameter_list|(
name|struct
name|ib_ah
modifier|*
name|ah
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_srq
modifier|*
name|mlx4_ib_create_srq
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ib_srq_init_attr
modifier|*
name|init_attr
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_modify_srq
parameter_list|(
name|struct
name|ib_srq
modifier|*
name|ibsrq
parameter_list|,
name|struct
name|ib_srq_attr
modifier|*
name|attr
parameter_list|,
name|enum
name|ib_srq_attr_mask
name|attr_mask
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_query_srq
parameter_list|(
name|struct
name|ib_srq
modifier|*
name|srq
parameter_list|,
name|struct
name|ib_srq_attr
modifier|*
name|srq_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_destroy_srq
parameter_list|(
name|struct
name|ib_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_free_srq_wqe
parameter_list|(
name|struct
name|mlx4_ib_srq
modifier|*
name|srq
parameter_list|,
name|int
name|wqe_index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_post_srq_recv
parameter_list|(
name|struct
name|ib_srq
modifier|*
name|ibsrq
parameter_list|,
name|struct
name|ib_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ib_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_qp
modifier|*
name|mlx4_ib_create_qp
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ib_qp_init_attr
modifier|*
name|init_attr
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_destroy_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_modify_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ib_qp_attr
modifier|*
name|attr
parameter_list|,
name|int
name|attr_mask
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_query_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ib_qp_attr
modifier|*
name|qp_attr
parameter_list|,
name|int
name|qp_attr_mask
parameter_list|,
name|struct
name|ib_qp_init_attr
modifier|*
name|qp_init_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_post_send
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ib_send_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ib_send_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_post_recv
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ib_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ib_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_MAD_IFC
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|int
name|mad_ifc_flags
parameter_list|,
name|int
name|port
parameter_list|,
name|struct
name|ib_wc
modifier|*
name|in_wc
parameter_list|,
name|struct
name|ib_grh
modifier|*
name|in_grh
parameter_list|,
name|void
modifier|*
name|in_mad
parameter_list|,
name|void
modifier|*
name|response_mad
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_process_mad
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|int
name|mad_flags
parameter_list|,
name|u8
name|port_num
parameter_list|,
name|struct
name|ib_wc
modifier|*
name|in_wc
parameter_list|,
name|struct
name|ib_grh
modifier|*
name|in_grh
parameter_list|,
name|struct
name|ib_mad
modifier|*
name|in_mad
parameter_list|,
name|struct
name|ib_mad
modifier|*
name|out_mad
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_mad_init
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_mad_cleanup
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_fmr
modifier|*
name|mlx4_ib_fmr_alloc
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|int
name|mr_access_flags
parameter_list|,
name|struct
name|ib_fmr_attr
modifier|*
name|fmr_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_map_phys_fmr
parameter_list|(
name|struct
name|ib_fmr
modifier|*
name|ibfmr
parameter_list|,
name|u64
modifier|*
name|page_list
parameter_list|,
name|int
name|npages
parameter_list|,
name|u64
name|iova
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_unmap_fmr
parameter_list|(
name|struct
name|list_head
modifier|*
name|fmr_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_fmr_dealloc
parameter_list|(
name|struct
name|ib_fmr
modifier|*
name|fmr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__mlx4_ib_query_port
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|u8
name|port
parameter_list|,
name|struct
name|ib_port_attr
modifier|*
name|props
parameter_list|,
name|int
name|netw_view
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__mlx4_ib_query_pkey
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|u8
name|port
parameter_list|,
name|u16
name|index
parameter_list|,
name|u16
modifier|*
name|pkey
parameter_list|,
name|int
name|netw_view
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__mlx4_ib_query_gid
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|u8
name|port
parameter_list|,
name|int
name|index
parameter_list|,
name|union
name|ib_gid
modifier|*
name|gid
parameter_list|,
name|int
name|netw_view
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_resolve_grh
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
specifier|const
name|struct
name|ib_ah_attr
modifier|*
name|ah_attr
parameter_list|,
name|u8
modifier|*
name|mac
parameter_list|,
name|int
modifier|*
name|is_mcast
parameter_list|,
name|u8
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_query_if_stat
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|counter_index
parameter_list|,
name|union
name|mlx4_counter
modifier|*
name|counter
parameter_list|,
name|u8
name|clear
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|int
name|mlx4_ib_ah_grh_present
parameter_list|(
name|struct
name|mlx4_ib_ah
modifier|*
name|ah
parameter_list|)
block|{
name|u8
name|port
init|=
name|be32_to_cpu
argument_list|(
name|ah
operator|->
name|av
operator|.
name|ib
operator|.
name|port_pd
argument_list|)
operator|>>
literal|24
operator|&
literal|3
decl_stmt|;
if|if
condition|(
name|rdma_port_get_link_layer
argument_list|(
name|ah
operator|->
name|ibah
operator|.
name|device
argument_list|,
name|port
argument_list|)
operator|==
name|IB_LINK_LAYER_ETHERNET
condition|)
return|return
literal|1
return|;
return|return
operator|!
operator|!
operator|(
name|ah
operator|->
name|av
operator|.
name|ib
operator|.
name|g_slid
operator|&
literal|0x80
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|mlx4_ib_qp_has_rq
parameter_list|(
name|struct
name|ib_qp_init_attr
modifier|*
name|attr
parameter_list|)
block|{
if|if
condition|(
name|attr
operator|->
name|qp_type
operator|==
name|IB_QPT_XRC_INI
operator|||
name|attr
operator|->
name|qp_type
operator|==
name|IB_QPT_XRC_TGT
condition|)
return|return
literal|0
return|;
return|return
operator|!
name|attr
operator|->
name|srq
return|;
block|}
end_function

begin_function_decl
name|int
name|mlx4_ib_mcg_port_init
parameter_list|(
name|struct
name|mlx4_ib_demux_ctx
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_mcg_port_cleanup
parameter_list|(
name|struct
name|mlx4_ib_demux_ctx
modifier|*
name|ctx
parameter_list|,
name|int
name|destroy_wq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|clean_vf_mcast
parameter_list|(
name|struct
name|mlx4_ib_demux_ctx
modifier|*
name|ctx
parameter_list|,
name|int
name|slave
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_mcg_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_mcg_destroy
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_find_real_gid
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|u8
name|port
parameter_list|,
name|__be64
name|guid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_mcg_multiplex_handler
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|int
name|port
parameter_list|,
name|int
name|slave
parameter_list|,
name|struct
name|ib_sa_mad
modifier|*
name|sa_mad
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_mcg_demux_handler
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|int
name|port
parameter_list|,
name|int
name|slave
parameter_list|,
name|struct
name|ib_sa_mad
modifier|*
name|mad
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_add_mc
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|mdev
parameter_list|,
name|struct
name|mlx4_ib_qp
modifier|*
name|mqp
parameter_list|,
name|union
name|ib_gid
modifier|*
name|gid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_dispatch_event
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|port_num
parameter_list|,
name|enum
name|ib_event_type
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_tunnels_update_work
parameter_list|(
name|struct
name|work_struct
modifier|*
name|work
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_send_to_slave
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|int
name|slave
parameter_list|,
name|u8
name|port
parameter_list|,
name|enum
name|ib_qp_type
name|qpt
parameter_list|,
name|struct
name|ib_wc
modifier|*
name|wc
parameter_list|,
name|struct
name|ib_grh
modifier|*
name|grh
parameter_list|,
name|struct
name|ib_mad
modifier|*
name|mad
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_send_to_wire
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|int
name|slave
parameter_list|,
name|u8
name|port
parameter_list|,
name|enum
name|ib_qp_type
name|dest_qpt
parameter_list|,
name|u16
name|pkey_index
parameter_list|,
name|u32
name|remote_qpn
parameter_list|,
name|u32
name|qkey
parameter_list|,
name|struct
name|ib_ah_attr
modifier|*
name|attr
parameter_list|,
name|u8
modifier|*
name|s_mac
parameter_list|,
name|struct
name|ib_mad
modifier|*
name|mad
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|__be64
name|mlx4_ib_get_new_demux_tid
parameter_list|(
name|struct
name|mlx4_ib_demux_ctx
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_demux_cm_handler
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|int
name|port
parameter_list|,
name|int
modifier|*
name|slave
parameter_list|,
name|struct
name|ib_mad
modifier|*
name|mad
parameter_list|,
name|int
name|is_eth
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_multiplex_cm_handler
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|int
name|port
parameter_list|,
name|int
name|slave_id
parameter_list|,
name|struct
name|ib_mad
modifier|*
name|mad
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_cm_paravirt_init
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_cm_paravirt_clean
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|int
name|slave_id
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* alias guid support */
end_comment

begin_function_decl
name|void
name|mlx4_ib_init_alias_guid_work
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_init_alias_guid_service
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_destroy_alias_guid_service
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_invalidate_all_guid_record
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_notify_slaves_on_guid_change
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|int
name|block_num
parameter_list|,
name|u8
name|port_num
parameter_list|,
name|u8
modifier|*
name|p_data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_update_cache_on_guid_change
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|int
name|block_num
parameter_list|,
name|u8
name|port_num
parameter_list|,
name|u8
modifier|*
name|p_data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|add_sysfs_port_mcg_attr
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|device
parameter_list|,
name|int
name|port_num
parameter_list|,
name|struct
name|attribute
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|del_sysfs_port_mcg_attr
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|device
parameter_list|,
name|int
name|port_num
parameter_list|,
name|struct
name|attribute
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ib_sa_comp_mask
name|mlx4_ib_get_aguid_comp_mask_from_ix
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_device_register_sysfs
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|device
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_device_unregister_sysfs
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|device
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|__be64
name|mlx4_ib_gen_node_guid
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_steer_qp_alloc
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|int
name|count
parameter_list|,
name|int
modifier|*
name|qpn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_ib_steer_qp_free
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|qpn
parameter_list|,
name|int
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_steer_qp_reg
parameter_list|(
name|struct
name|mlx4_ib_dev
modifier|*
name|mdev
parameter_list|,
name|struct
name|mlx4_ib_qp
modifier|*
name|mqp
parameter_list|,
name|int
name|is_attach
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_ib_query_device
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|struct
name|ib_device_attr
modifier|*
name|props
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* MLX4_IB_H */
end_comment

end_unit

