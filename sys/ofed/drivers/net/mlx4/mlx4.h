begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2004, 2005 Topspin Communications.  All rights reserved.  * Copyright (c) 2005 Sun Microsystems, Inc. All rights reserved.  * Copyright (c) 2005, 2006, 2007 Cisco Systems.  All rights reserved.  * Copyright (c) 2005, 2006, 2007, 2008 Mellanox Technologies. All rights reserved.  * Copyright (c) 2004 Voltaire, Inc. All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MLX4_H
end_ifndef

begin_define
define|#
directive|define
name|MLX4_H
end_define

begin_include
include|#
directive|include
file|<linux/mutex.h>
end_include

begin_include
include|#
directive|include
file|<linux/radix-tree.h>
end_include

begin_include
include|#
directive|include
file|<linux/timer.h>
end_include

begin_include
include|#
directive|include
file|<linux/workqueue.h>
end_include

begin_include
include|#
directive|include
file|<linux/mlx4/device.h>
end_include

begin_include
include|#
directive|include
file|<linux/mlx4/driver.h>
end_include

begin_include
include|#
directive|include
file|<linux/mlx4/doorbell.h>
end_include

begin_define
define|#
directive|define
name|DRV_NAME
value|"mlx4_core"
end_define

begin_define
define|#
directive|define
name|PFX
value|DRV_NAME ": "
end_define

begin_define
define|#
directive|define
name|DRV_VERSION
value|"1.0-ofed1.5.2"
end_define

begin_define
define|#
directive|define
name|DRV_RELDATE
value|"August 4, 2010"
end_define

begin_enum
enum|enum
block|{
name|MLX4_HCR_BASE
init|=
literal|0x80680
block|,
name|MLX4_HCR_SIZE
init|=
literal|0x0001c
block|,
name|MLX4_CLR_INT_SIZE
init|=
literal|0x00008
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_MGM_ENTRY_SIZE
init|=
literal|0x100
block|,
name|MLX4_QP_PER_MGM
init|=
literal|4
operator|*
operator|(
name|MLX4_MGM_ENTRY_SIZE
operator|/
literal|16
operator|-
literal|2
operator|)
block|,
name|MLX4_MTT_ENTRY_PER_SEG
init|=
literal|8
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_NUM_PDS
init|=
literal|1
operator|<<
literal|15
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_CMPT_TYPE_QP
init|=
literal|0
block|,
name|MLX4_CMPT_TYPE_SRQ
init|=
literal|1
block|,
name|MLX4_CMPT_TYPE_CQ
init|=
literal|2
block|,
name|MLX4_CMPT_TYPE_EQ
init|=
literal|3
block|,
name|MLX4_CMPT_NUM_TYPE
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_CMPT_SHIFT
init|=
literal|24
block|,
name|MLX4_NUM_CMPTS
init|=
name|MLX4_CMPT_NUM_TYPE
operator|<<
name|MLX4_CMPT_SHIFT
block|}
enum|;
end_enum

begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_MLX4_DEBUG
end_ifdef

begin_decl_stmt
specifier|extern
name|int
name|mlx4_debug_level
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* CONFIG_MLX4_DEBUG */
end_comment

begin_define
define|#
directive|define
name|mlx4_debug_level
value|(0)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* CONFIG_MLX4_DEBUG */
end_comment

begin_define
define|#
directive|define
name|mlx4_dbg
parameter_list|(
name|mdev
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|do {								\ 		if (mlx4_debug_level)					\ 			dev_printk(KERN_DEBUG,&mdev->pdev->dev, format, ## arg); \ 	} while (0)
end_define

begin_define
define|#
directive|define
name|mlx4_err
parameter_list|(
name|mdev
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|dev_err(&mdev->pdev->dev, format, ## arg)
end_define

begin_define
define|#
directive|define
name|mlx4_info
parameter_list|(
name|mdev
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|dev_info(&mdev->pdev->dev, format, ## arg)
end_define

begin_define
define|#
directive|define
name|mlx4_warn
parameter_list|(
name|mdev
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|dev_warn(&mdev->pdev->dev, format, ## arg)
end_define

begin_decl_stmt
specifier|extern
name|int
name|mlx4_blck_lb
decl_stmt|;
end_decl_stmt

begin_struct
struct|struct
name|mlx4_bitmap
block|{
name|u32
name|last
decl_stmt|;
name|u32
name|top
decl_stmt|;
name|u32
name|max
decl_stmt|;
name|u32
name|reserved_top
decl_stmt|;
name|u32
name|mask
decl_stmt|;
name|u32
name|avail
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
name|unsigned
name|long
modifier|*
name|table
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_buddy
block|{
name|unsigned
name|long
modifier|*
modifier|*
name|bits
decl_stmt|;
name|unsigned
name|int
modifier|*
name|num_free
decl_stmt|;
name|int
name|max_order
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|mlx4_icm
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|mlx4_icm_table
block|{
name|u64
name|virt
decl_stmt|;
name|int
name|num_icm
decl_stmt|;
name|int
name|num_obj
decl_stmt|;
name|int
name|obj_size
decl_stmt|;
name|int
name|lowmem
decl_stmt|;
name|int
name|coherent
decl_stmt|;
name|struct
name|mutex
name|mutex
decl_stmt|;
name|struct
name|mlx4_icm
modifier|*
modifier|*
name|icm
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_eq
block|{
name|struct
name|mlx4_dev
modifier|*
name|dev
decl_stmt|;
name|void
name|__iomem
modifier|*
name|doorbell
decl_stmt|;
name|int
name|eqn
decl_stmt|;
name|u32
name|cons_index
decl_stmt|;
name|u16
name|irq
decl_stmt|;
name|u16
name|have_irq
decl_stmt|;
name|int
name|nent
decl_stmt|;
name|int
name|load
decl_stmt|;
name|struct
name|mlx4_buf_list
modifier|*
name|page_list
decl_stmt|;
name|struct
name|mlx4_mtt
name|mtt
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_profile
block|{
name|int
name|num_qp
decl_stmt|;
name|int
name|rdmarc_per_qp
decl_stmt|;
name|int
name|num_srq
decl_stmt|;
name|int
name|num_cq
decl_stmt|;
name|int
name|num_mcg
decl_stmt|;
name|int
name|num_mpt
decl_stmt|;
name|int
name|num_mtt
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_fw
block|{
name|u64
name|clr_int_base
decl_stmt|;
name|u64
name|catas_offset
decl_stmt|;
name|struct
name|mlx4_icm
modifier|*
name|fw_icm
decl_stmt|;
name|struct
name|mlx4_icm
modifier|*
name|aux_icm
decl_stmt|;
name|u32
name|catas_size
decl_stmt|;
name|u16
name|fw_pages
decl_stmt|;
name|u8
name|clr_int_bar
decl_stmt|;
name|u8
name|catas_bar
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_cmd
block|{
name|struct
name|pci_pool
modifier|*
name|pool
decl_stmt|;
name|void
name|__iomem
modifier|*
name|hcr
decl_stmt|;
name|struct
name|mutex
name|hcr_mutex
decl_stmt|;
name|struct
name|semaphore
name|poll_sem
decl_stmt|;
name|struct
name|semaphore
name|event_sem
decl_stmt|;
name|int
name|max_cmds
decl_stmt|;
name|spinlock_t
name|context_lock
decl_stmt|;
name|int
name|free_head
decl_stmt|;
name|struct
name|mlx4_cmd_context
modifier|*
name|context
decl_stmt|;
name|u16
name|token_mask
decl_stmt|;
name|u8
name|use_events
decl_stmt|;
name|u8
name|toggle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_uar_table
block|{
name|struct
name|mlx4_bitmap
name|bitmap
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_mr_table
block|{
name|struct
name|mlx4_bitmap
name|mpt_bitmap
decl_stmt|;
name|struct
name|mlx4_buddy
name|mtt_buddy
decl_stmt|;
name|u64
name|mtt_base
decl_stmt|;
name|u64
name|mpt_base
decl_stmt|;
name|struct
name|mlx4_icm_table
name|mtt_table
decl_stmt|;
name|struct
name|mlx4_icm_table
name|dmpt_table
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_cq_table
block|{
name|struct
name|mlx4_bitmap
name|bitmap
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|radix_tree_root
name|tree
decl_stmt|;
name|struct
name|mlx4_icm_table
name|table
decl_stmt|;
name|struct
name|mlx4_icm_table
name|cmpt_table
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_eq_table
block|{
name|struct
name|mlx4_bitmap
name|bitmap
decl_stmt|;
name|char
modifier|*
name|irq_names
decl_stmt|;
name|void
name|__iomem
modifier|*
name|clr_int
decl_stmt|;
name|void
name|__iomem
modifier|*
modifier|*
name|uar_map
decl_stmt|;
name|u32
name|clr_mask
decl_stmt|;
name|struct
name|mlx4_eq
modifier|*
name|eq
decl_stmt|;
name|struct
name|mlx4_icm_table
name|table
decl_stmt|;
name|struct
name|mlx4_icm_table
name|cmpt_table
decl_stmt|;
name|int
name|have_irq
decl_stmt|;
name|u8
name|inta_pin
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_srq_table
block|{
name|struct
name|mlx4_bitmap
name|bitmap
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|mlx4_icm_table
name|table
decl_stmt|;
name|struct
name|mlx4_icm_table
name|cmpt_table
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_qp_table
block|{
name|struct
name|mlx4_bitmap
name|bitmap
decl_stmt|;
name|u32
name|rdmarc_base
decl_stmt|;
name|int
name|rdmarc_shift
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|mlx4_icm_table
name|qp_table
decl_stmt|;
name|struct
name|mlx4_icm_table
name|auxc_table
decl_stmt|;
name|struct
name|mlx4_icm_table
name|altc_table
decl_stmt|;
name|struct
name|mlx4_icm_table
name|rdmarc_table
decl_stmt|;
name|struct
name|mlx4_icm_table
name|cmpt_table
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_mcg_table
block|{
name|struct
name|mutex
name|mutex
decl_stmt|;
name|struct
name|mlx4_bitmap
name|bitmap
decl_stmt|;
name|struct
name|mlx4_icm_table
name|table
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_catas_err
block|{
name|u32
name|__iomem
modifier|*
name|map
decl_stmt|;
name|struct
name|timer_list
name|timer
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|MLX4_MAX_MAC_NUM
value|128
end_define

begin_define
define|#
directive|define
name|MLX4_MAC_TABLE_SIZE
value|(MLX4_MAX_MAC_NUM<< 3)
end_define

begin_struct
struct|struct
name|mlx4_mac_table
block|{
name|__be64
name|entries
index|[
name|MLX4_MAX_MAC_NUM
index|]
decl_stmt|;
name|int
name|refs
index|[
name|MLX4_MAX_MAC_NUM
index|]
decl_stmt|;
name|struct
name|mutex
name|mutex
decl_stmt|;
name|int
name|total
decl_stmt|;
name|int
name|max
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|MLX4_MAX_VLAN_NUM
value|128
end_define

begin_define
define|#
directive|define
name|MLX4_VLAN_TABLE_SIZE
value|(MLX4_MAX_VLAN_NUM<< 2)
end_define

begin_struct
struct|struct
name|mlx4_vlan_table
block|{
name|__be32
name|entries
index|[
name|MLX4_MAX_VLAN_NUM
index|]
decl_stmt|;
name|int
name|refs
index|[
name|MLX4_MAX_VLAN_NUM
index|]
decl_stmt|;
name|struct
name|mutex
name|mutex
decl_stmt|;
name|int
name|total
decl_stmt|;
name|int
name|max
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_port_info
block|{
name|struct
name|mlx4_dev
modifier|*
name|dev
decl_stmt|;
name|int
name|port
decl_stmt|;
name|char
name|dev_name
index|[
literal|16
index|]
decl_stmt|;
name|struct
name|device_attribute
name|port_attr
decl_stmt|;
name|enum
name|mlx4_port_type
name|tmp_type
decl_stmt|;
name|struct
name|mlx4_mac_table
name|mac_table
decl_stmt|;
name|struct
name|mlx4_vlan_table
name|vlan_table
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_sense
block|{
name|struct
name|mlx4_dev
modifier|*
name|dev
decl_stmt|;
name|u8
name|do_sense_port
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u8
name|sense_allowed
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|struct
name|delayed_work
name|sense_poll
decl_stmt|;
name|struct
name|workqueue_struct
modifier|*
name|sense_wq
decl_stmt|;
name|u32
name|resched
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|mutex
name|drv_mutex
decl_stmt|;
end_decl_stmt

begin_struct
struct|struct
name|mlx4_priv
block|{
name|struct
name|mlx4_dev
name|dev
decl_stmt|;
name|struct
name|list_head
name|dev_list
decl_stmt|;
name|struct
name|list_head
name|ctx_list
decl_stmt|;
name|spinlock_t
name|ctx_lock
decl_stmt|;
name|struct
name|list_head
name|pgdir_list
decl_stmt|;
name|struct
name|mutex
name|pgdir_mutex
decl_stmt|;
name|struct
name|mlx4_fw
name|fw
decl_stmt|;
name|struct
name|mlx4_cmd
name|cmd
decl_stmt|;
name|struct
name|mlx4_bitmap
name|pd_bitmap
decl_stmt|;
name|struct
name|mlx4_bitmap
name|xrcd_bitmap
decl_stmt|;
name|struct
name|mlx4_uar_table
name|uar_table
decl_stmt|;
name|struct
name|mlx4_mr_table
name|mr_table
decl_stmt|;
name|struct
name|mlx4_cq_table
name|cq_table
decl_stmt|;
name|struct
name|mlx4_eq_table
name|eq_table
decl_stmt|;
name|struct
name|mlx4_srq_table
name|srq_table
decl_stmt|;
name|struct
name|mlx4_qp_table
name|qp_table
decl_stmt|;
name|struct
name|mlx4_mcg_table
name|mcg_table
decl_stmt|;
name|struct
name|mlx4_bitmap
name|counters_bitmap
decl_stmt|;
name|struct
name|list_head
name|bf_list
decl_stmt|;
name|struct
name|mutex
name|bf_mutex
decl_stmt|;
name|struct
name|mlx4_catas_err
name|catas_err
decl_stmt|;
name|void
name|__iomem
modifier|*
name|clr_base
decl_stmt|;
name|struct
name|mlx4_uar
name|driver_uar
decl_stmt|;
name|void
name|__iomem
modifier|*
name|kar
decl_stmt|;
name|struct
name|mlx4_port_info
name|port
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|struct
name|device_attribute
name|trigger_attr
decl_stmt|;
name|int
name|trig
decl_stmt|;
name|int
name|changed_ports
decl_stmt|;
name|struct
name|mlx4_sense
name|sense
decl_stmt|;
name|struct
name|mutex
name|port_mutex
decl_stmt|;
name|int
name|iboe_counter_index
index|[
name|MLX4_MAX_PORTS
index|]
decl_stmt|;
name|struct
name|io_mapping
modifier|*
name|bf_mapping
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|mlx4_priv
modifier|*
name|mlx4_priv
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|dev
argument_list|,
expr|struct
name|mlx4_priv
argument_list|,
name|dev
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|MLX4_SENSE_RANGE
value|(HZ * 3)
end_define

begin_decl_stmt
specifier|extern
name|struct
name|workqueue_struct
modifier|*
name|mlx4_wq
decl_stmt|;
end_decl_stmt

begin_function_decl
name|u32
name|mlx4_bitmap_alloc
parameter_list|(
name|struct
name|mlx4_bitmap
modifier|*
name|bitmap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_bitmap_free
parameter_list|(
name|struct
name|mlx4_bitmap
modifier|*
name|bitmap
parameter_list|,
name|u32
name|obj
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|mlx4_bitmap_alloc_range
parameter_list|(
name|struct
name|mlx4_bitmap
modifier|*
name|bitmap
parameter_list|,
name|int
name|cnt
parameter_list|,
name|int
name|align
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_bitmap_free_range
parameter_list|(
name|struct
name|mlx4_bitmap
modifier|*
name|bitmap
parameter_list|,
name|u32
name|obj
parameter_list|,
name|int
name|cnt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|mlx4_bitmap_avail
parameter_list|(
name|struct
name|mlx4_bitmap
modifier|*
name|bitmap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_bitmap_init
parameter_list|(
name|struct
name|mlx4_bitmap
modifier|*
name|bitmap
parameter_list|,
name|u32
name|num
parameter_list|,
name|u32
name|mask
parameter_list|,
name|u32
name|reserved_bot
parameter_list|,
name|u32
name|resetrved_top
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_bitmap_cleanup
parameter_list|(
name|struct
name|mlx4_bitmap
modifier|*
name|bitmap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_reset
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_alloc_eq_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_free_eq_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_init_pd_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_init_xrcd_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_init_uar_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_init_mr_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_init_eq_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_init_cq_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_init_qp_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_init_srq_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_init_mcg_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cleanup_pd_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cleanup_uar_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cleanup_mr_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cleanup_eq_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cleanup_cq_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cleanup_qp_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cleanup_srq_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cleanup_mcg_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cleanup_xrcd_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_start_catas_poll
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_stop_catas_poll
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_catas_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_restart_one
parameter_list|(
name|struct
name|pci_dev
modifier|*
name|pdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_register_device
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_unregister_device
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_dispatch_event
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|enum
name|mlx4_dev_event
name|type
parameter_list|,
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|mlx4_find_get_prot_dev
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|enum
name|mlx4_prot
name|proto
parameter_list|,
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_struct_decl
struct_decl|struct
name|mlx4_dev_cap
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|mlx4_init_hca_param
struct_decl|;
end_struct_decl

begin_function_decl
name|u64
name|mlx4_make_profile
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_profile
modifier|*
name|request
parameter_list|,
name|struct
name|mlx4_dev_cap
modifier|*
name|dev_cap
parameter_list|,
name|struct
name|mlx4_init_hca_param
modifier|*
name|init_hca
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_cmd_init
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cmd_cleanup
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cmd_event
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u16
name|token
parameter_list|,
name|u8
name|status
parameter_list|,
name|u64
name|out_param
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_cmd_use_events
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cmd_use_polling
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cq_completion
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|cqn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cq_event
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|cqn
parameter_list|,
name|int
name|event_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_qp_event
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|qpn
parameter_list|,
name|int
name|event_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_srq_event
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|srqn
parameter_list|,
name|int
name|event_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_handle_catas_err
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_do_sense_ports
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|enum
name|mlx4_port_type
modifier|*
name|stype
parameter_list|,
name|enum
name|mlx4_port_type
modifier|*
name|defaults
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_start_sense
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_stop_sense
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_sense_init
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_sense_cleanup
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_check_port_params
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|enum
name|mlx4_port_type
modifier|*
name|port_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_change_port_types
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|enum
name|mlx4_port_type
modifier|*
name|port_types
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_init_mac_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_mac_table
modifier|*
name|table
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_init_vlan_table
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_vlan_table
modifier|*
name|table
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_SET_PORT
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_get_port_ib_caps
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|port
parameter_list|,
name|__be32
modifier|*
name|caps
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* MLX4_H */
end_comment

end_unit

