begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2006 Cisco Systems, Inc.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MLX4_DRIVER_H
end_ifndef

begin_define
define|#
directive|define
name|MLX4_DRIVER_H
end_define

begin_include
include|#
directive|include
file|<linux/device.h>
end_include

begin_struct_decl
struct_decl|struct
name|mlx4_dev
struct_decl|;
end_struct_decl

begin_enum
enum|enum
name|mlx4_dev_event
block|{
name|MLX4_DEV_EVENT_CATASTROPHIC_ERROR
block|,
name|MLX4_DEV_EVENT_PORT_UP
block|,
name|MLX4_DEV_EVENT_PORT_DOWN
block|,
name|MLX4_DEV_EVENT_PORT_REINIT
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|mlx4_query_reply
block|{
name|MLX4_QUERY_NOT_MINE
init|=
operator|-
literal|1
block|,
name|MLX4_QUERY_MINE_NOPORT
init|=
literal|0
block|}
enum|;
end_enum

begin_enum
enum|enum
name|mlx4_prot
block|{
name|MLX4_PROT_IB
block|,
name|MLX4_PROT_EN
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|mlx4_mcast_prot
block|{
name|MLX4_MCAST_PROT_IB
init|=
literal|0
block|,
name|MLX4_MCAST_PROT_EN
init|=
literal|1
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx4_interface
block|{
name|void
modifier|*
function_decl|(
modifier|*
name|add
function_decl|)
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|remove
function_decl|)
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|context
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|event
function_decl|)
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|context
parameter_list|,
name|enum
name|mlx4_dev_event
name|event
parameter_list|,
name|int
name|port
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|get_prot_dev
function_decl|)
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|context
parameter_list|,
name|u8
name|port
parameter_list|)
function_decl|;
name|enum
name|mlx4_prot
name|protocol
decl_stmt|;
name|enum
name|mlx4_query_reply
function_decl|(
modifier|*
name|query
function_decl|)
parameter_list|(
name|void
modifier|*
name|context
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|struct
name|list_head
name|list
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|mlx4_register_interface
parameter_list|(
name|struct
name|mlx4_interface
modifier|*
name|intf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_unregister_interface
parameter_list|(
name|struct
name|mlx4_interface
modifier|*
name|intf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|mlx4_get_prot_dev
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|enum
name|mlx4_prot
name|proto
parameter_list|,
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|mlx4_dev
modifier|*
name|mlx4_query_interface
parameter_list|(
name|void
modifier|*
parameter_list|,
name|int
modifier|*
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_set_iboe_counter
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|index
parameter_list|,
name|u8
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_get_iboe_counter
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* MLX4_DRIVER_H */
end_comment

end_unit

