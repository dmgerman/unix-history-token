begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2006, 2007 Cisco Systems, Inc.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *	- Redistributions of source code must retain the above  *	  copyright notice, this list of conditions and the following  *	  disclaimer.  *  *	- Redistributions in binary form must reproduce the above  *	  copyright notice, this list of conditions and the following  *	  disclaimer in the documentation and/or other materials  *	  provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MLX4_DEVICE_H
end_ifndef

begin_define
define|#
directive|define
name|MLX4_DEVICE_H
end_define

begin_include
include|#
directive|include
file|<linux/pci.h>
end_include

begin_include
include|#
directive|include
file|<linux/completion.h>
end_include

begin_include
include|#
directive|include
file|<linux/radix-tree.h>
end_include

begin_include
include|#
directive|include
file|<asm/atomic.h>
end_include

begin_include
include|#
directive|include
file|<linux/mlx4/driver.h>
end_include

begin_enum
enum|enum
block|{
name|MLX4_FLAG_MSI_X
init|=
literal|1
operator|<<
literal|0
block|,
name|MLX4_FLAG_OLD_PORT_CMDS
init|=
literal|1
operator|<<
literal|1
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_MAX_PORTS
init|=
literal|2
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_BOARD_ID_LEN
init|=
literal|64
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_DEV_CAP_FLAG_RC
init|=
literal|1
operator|<<
literal|0
block|,
name|MLX4_DEV_CAP_FLAG_UC
init|=
literal|1
operator|<<
literal|1
block|,
name|MLX4_DEV_CAP_FLAG_UD
init|=
literal|1
operator|<<
literal|2
block|,
name|MLX4_DEV_CAP_FLAG_XRC
init|=
literal|1
operator|<<
literal|3
block|,
name|MLX4_DEV_CAP_FLAG_SRQ
init|=
literal|1
operator|<<
literal|6
block|,
name|MLX4_DEV_CAP_FLAG_IPOIB_CSUM
init|=
literal|1
operator|<<
literal|7
block|,
name|MLX4_DEV_CAP_FLAG_BAD_PKEY_CNTR
init|=
literal|1
operator|<<
literal|8
block|,
name|MLX4_DEV_CAP_FLAG_BAD_QKEY_CNTR
init|=
literal|1
operator|<<
literal|9
block|,
name|MLX4_DEV_CAP_FLAG_DPDP
init|=
literal|1
operator|<<
literal|12
block|,
name|MLX4_DEV_CAP_FLAG_RAW_ETY
init|=
literal|1
operator|<<
literal|13
block|,
name|MLX4_DEV_CAP_FLAG_BLH
init|=
literal|1
operator|<<
literal|15
block|,
name|MLX4_DEV_CAP_FLAG_MEM_WINDOW
init|=
literal|1
operator|<<
literal|16
block|,
name|MLX4_DEV_CAP_FLAG_APM
init|=
literal|1
operator|<<
literal|17
block|,
name|MLX4_DEV_CAP_FLAG_ATOMIC
init|=
literal|1
operator|<<
literal|18
block|,
name|MLX4_DEV_CAP_FLAG_RAW_MCAST
init|=
literal|1
operator|<<
literal|19
block|,
name|MLX4_DEV_CAP_FLAG_UD_AV_PORT
init|=
literal|1
operator|<<
literal|20
block|,
name|MLX4_DEV_CAP_FLAG_UD_MCAST
init|=
literal|1
operator|<<
literal|21
block|,
name|MLX4_DEV_CAP_FLAG_IBOE
init|=
literal|1
operator|<<
literal|30
block|,
name|MLX4_DEV_CAP_FLAG_FC_T11
init|=
literal|1
operator|<<
literal|31
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_BMME_FLAG_LOCAL_INV
init|=
literal|1
operator|<<
literal|6
block|,
name|MLX4_BMME_FLAG_REMOTE_INV
init|=
literal|1
operator|<<
literal|7
block|,
name|MLX4_BMME_FLAG_TYPE_2_WIN
init|=
literal|1
operator|<<
literal|9
block|,
name|MLX4_BMME_FLAG_RESERVED_LKEY
init|=
literal|1
operator|<<
literal|10
block|,
name|MLX4_BMME_FLAG_FAST_REG_WR
init|=
literal|1
operator|<<
literal|11
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|mlx4_event
block|{
name|MLX4_EVENT_TYPE_COMP
init|=
literal|0x00
block|,
name|MLX4_EVENT_TYPE_PATH_MIG
init|=
literal|0x01
block|,
name|MLX4_EVENT_TYPE_COMM_EST
init|=
literal|0x02
block|,
name|MLX4_EVENT_TYPE_SQ_DRAINED
init|=
literal|0x03
block|,
name|MLX4_EVENT_TYPE_SRQ_QP_LAST_WQE
init|=
literal|0x13
block|,
name|MLX4_EVENT_TYPE_SRQ_LIMIT
init|=
literal|0x14
block|,
name|MLX4_EVENT_TYPE_CQ_ERROR
init|=
literal|0x04
block|,
name|MLX4_EVENT_TYPE_WQ_CATAS_ERROR
init|=
literal|0x05
block|,
name|MLX4_EVENT_TYPE_EEC_CATAS_ERROR
init|=
literal|0x06
block|,
name|MLX4_EVENT_TYPE_PATH_MIG_FAILED
init|=
literal|0x07
block|,
name|MLX4_EVENT_TYPE_WQ_INVAL_REQ_ERROR
init|=
literal|0x10
block|,
name|MLX4_EVENT_TYPE_WQ_ACCESS_ERROR
init|=
literal|0x11
block|,
name|MLX4_EVENT_TYPE_SRQ_CATAS_ERROR
init|=
literal|0x12
block|,
name|MLX4_EVENT_TYPE_LOCAL_CATAS_ERROR
init|=
literal|0x08
block|,
name|MLX4_EVENT_TYPE_PORT_CHANGE
init|=
literal|0x09
block|,
name|MLX4_EVENT_TYPE_EQ_OVERFLOW
init|=
literal|0x0f
block|,
name|MLX4_EVENT_TYPE_ECC_DETECT
init|=
literal|0x0e
block|,
name|MLX4_EVENT_TYPE_CMD
init|=
literal|0x0a
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_PORT_CHANGE_SUBTYPE_DOWN
init|=
literal|1
block|,
name|MLX4_PORT_CHANGE_SUBTYPE_ACTIVE
init|=
literal|4
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_PERM_LOCAL_READ
init|=
literal|1
operator|<<
literal|10
block|,
name|MLX4_PERM_LOCAL_WRITE
init|=
literal|1
operator|<<
literal|11
block|,
name|MLX4_PERM_REMOTE_READ
init|=
literal|1
operator|<<
literal|12
block|,
name|MLX4_PERM_REMOTE_WRITE
init|=
literal|1
operator|<<
literal|13
block|,
name|MLX4_PERM_ATOMIC
init|=
literal|1
operator|<<
literal|14
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_OPCODE_NOP
init|=
literal|0x00
block|,
name|MLX4_OPCODE_SEND_INVAL
init|=
literal|0x01
block|,
name|MLX4_OPCODE_RDMA_WRITE
init|=
literal|0x08
block|,
name|MLX4_OPCODE_RDMA_WRITE_IMM
init|=
literal|0x09
block|,
name|MLX4_OPCODE_SEND
init|=
literal|0x0a
block|,
name|MLX4_OPCODE_SEND_IMM
init|=
literal|0x0b
block|,
name|MLX4_OPCODE_LSO
init|=
literal|0x0e
block|,
name|MLX4_OPCODE_BIG_LSO
init|=
literal|0x2e
block|,
name|MLX4_OPCODE_RDMA_READ
init|=
literal|0x10
block|,
name|MLX4_OPCODE_ATOMIC_CS
init|=
literal|0x11
block|,
name|MLX4_OPCODE_ATOMIC_FA
init|=
literal|0x12
block|,
name|MLX4_OPCODE_MASKED_ATOMIC_CS
init|=
literal|0x14
block|,
name|MLX4_OPCODE_MASKED_ATOMIC_FA
init|=
literal|0x15
block|,
name|MLX4_OPCODE_BIND_MW
init|=
literal|0x18
block|,
name|MLX4_OPCODE_FMR
init|=
literal|0x19
block|,
name|MLX4_OPCODE_LOCAL_INVAL
init|=
literal|0x1b
block|,
name|MLX4_OPCODE_CONFIG_CMD
init|=
literal|0x1f
block|,
name|MLX4_RECV_OPCODE_RDMA_WRITE_IMM
init|=
literal|0x00
block|,
name|MLX4_RECV_OPCODE_SEND
init|=
literal|0x01
block|,
name|MLX4_RECV_OPCODE_SEND_IMM
init|=
literal|0x02
block|,
name|MLX4_RECV_OPCODE_SEND_INVAL
init|=
literal|0x03
block|,
name|MLX4_CQE_OPCODE_ERROR
init|=
literal|0x1e
block|,
name|MLX4_CQE_OPCODE_RESIZE
init|=
literal|0x16
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_STAT_RATE_OFFSET
init|=
literal|5
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX4_MTT_FLAG_PRESENT
init|=
literal|1
block|}
enum|;
end_enum

begin_enum
enum|enum
name|mlx4_qp_region
block|{
name|MLX4_QP_REGION_FW
init|=
literal|0
block|,
name|MLX4_QP_REGION_ETH_ADDR
block|,
name|MLX4_QP_REGION_FC_ADDR
block|,
name|MLX4_NUM_QP_REGION
block|}
enum|;
end_enum

begin_enum
enum|enum
name|mlx4_port_type
block|{
name|MLX4_PORT_TYPE_NONE
init|=
literal|0
block|,
name|MLX4_PORT_TYPE_IB
init|=
literal|1
block|,
name|MLX4_PORT_TYPE_ETH
init|=
literal|2
block|,
name|MLX4_PORT_TYPE_AUTO
init|=
literal|3
block|}
enum|;
end_enum

begin_enum
enum|enum
name|mlx4_special_vlan_idx
block|{
name|MLX4_NO_VLAN_IDX
init|=
literal|0
block|,
name|MLX4_VLAN_MISS_IDX
block|,
name|MLX4_VLAN_REGULAR
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|MLX4_LEAST_ATTACHED_VECTOR
value|0xffffffff
end_define

begin_enum
enum|enum
block|{
name|MLX4_CUNTERS_DISABLED
block|,
name|MLX4_CUNTERS_BASIC
block|,
name|MLX4_CUNTERS_EXT
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MAX_FAST_REG_PAGES
init|=
literal|511
block|, }
enum|;
end_enum

begin_function
specifier|static
specifier|inline
name|u64
name|mlx4_fw_ver
parameter_list|(
name|u64
name|major
parameter_list|,
name|u64
name|minor
parameter_list|,
name|u64
name|subminor
parameter_list|)
block|{
return|return
operator|(
name|major
operator|<<
literal|32
operator|)
operator||
operator|(
name|minor
operator|<<
literal|16
operator|)
operator||
name|subminor
return|;
block|}
end_function

begin_struct
struct|struct
name|mlx4_caps
block|{
name|u64
name|fw_ver
decl_stmt|;
name|int
name|num_ports
decl_stmt|;
name|int
name|vl_cap
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|ib_mtu_cap
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|__be32
name|ib_port_def_cap
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u64
name|def_mac
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|eth_mtu_cap
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|gid_table_len
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|pkey_table_len
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|trans_type
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|vendor_oui
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|wavelength
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u64
name|trans_code
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|local_ca_ack_delay
decl_stmt|;
name|int
name|num_uars
decl_stmt|;
name|int
name|bf_reg_size
decl_stmt|;
name|int
name|bf_regs_per_page
decl_stmt|;
name|int
name|max_sq_sg
decl_stmt|;
name|int
name|max_rq_sg
decl_stmt|;
name|int
name|num_qps
decl_stmt|;
name|int
name|max_wqes
decl_stmt|;
name|int
name|max_sq_desc_sz
decl_stmt|;
name|int
name|max_rq_desc_sz
decl_stmt|;
name|int
name|max_qp_init_rdma
decl_stmt|;
name|int
name|max_qp_dest_rdma
decl_stmt|;
name|int
name|sqp_start
decl_stmt|;
name|int
name|num_srqs
decl_stmt|;
name|int
name|max_srq_wqes
decl_stmt|;
name|int
name|max_srq_sge
decl_stmt|;
name|int
name|reserved_srqs
decl_stmt|;
name|int
name|num_cqs
decl_stmt|;
name|int
name|max_cqes
decl_stmt|;
name|int
name|reserved_cqs
decl_stmt|;
name|int
name|num_eqs
decl_stmt|;
name|int
name|reserved_eqs
decl_stmt|;
name|int
name|num_comp_vectors
decl_stmt|;
name|int
name|num_mpts
decl_stmt|;
name|int
name|num_mtt_segs
decl_stmt|;
name|int
name|mtts_per_seg
decl_stmt|;
name|int
name|fmr_reserved_mtts
decl_stmt|;
name|int
name|reserved_mtts
decl_stmt|;
name|int
name|reserved_mrws
decl_stmt|;
name|int
name|reserved_uars
decl_stmt|;
name|int
name|num_mgms
decl_stmt|;
name|int
name|num_amgms
decl_stmt|;
name|int
name|reserved_mcgs
decl_stmt|;
name|int
name|num_qp_per_mgm
decl_stmt|;
name|int
name|num_pds
decl_stmt|;
name|int
name|reserved_pds
decl_stmt|;
name|int
name|mtt_entry_sz
decl_stmt|;
name|int
name|reserved_xrcds
decl_stmt|;
name|int
name|max_xrcds
decl_stmt|;
name|u32
name|max_msg_sz
decl_stmt|;
name|u32
name|page_size_cap
decl_stmt|;
name|u64
name|flags
decl_stmt|;
name|u32
name|bmme_flags
decl_stmt|;
name|u32
name|reserved_lkey
decl_stmt|;
name|u16
name|stat_rate_support
decl_stmt|;
name|int
name|udp_rss
decl_stmt|;
name|int
name|loopback_support
decl_stmt|;
name|int
name|wol
decl_stmt|;
name|u8
name|port_width_cap
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|max_gso_sz
decl_stmt|;
name|int
name|reserved_qps_cnt
index|[
name|MLX4_NUM_QP_REGION
index|]
decl_stmt|;
name|int
name|reserved_qps
decl_stmt|;
name|int
name|reserved_qps_base
index|[
name|MLX4_NUM_QP_REGION
index|]
decl_stmt|;
name|int
name|log_num_macs
decl_stmt|;
name|int
name|log_num_vlans
decl_stmt|;
name|int
name|log_num_prios
decl_stmt|;
name|enum
name|mlx4_port_type
name|port_type
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u8
name|supported_type
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|enum
name|mlx4_port_type
name|port_mask
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|enum
name|mlx4_port_type
name|possible_type
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u8
name|counters_mode
decl_stmt|;
name|u32
name|max_basic_counters
decl_stmt|;
name|u32
name|max_ext_counters
decl_stmt|;
name|u32
name|mc_promisc_mode
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_buf_list
block|{
name|void
modifier|*
name|buf
decl_stmt|;
name|dma_addr_t
name|map
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_buf
block|{
name|struct
name|mlx4_buf_list
name|direct
decl_stmt|;
name|struct
name|mlx4_buf_list
modifier|*
name|page_list
decl_stmt|;
name|int
name|nbufs
decl_stmt|;
name|int
name|npages
decl_stmt|;
name|int
name|page_shift
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_mtt
block|{
name|u32
name|first_seg
decl_stmt|;
name|int
name|order
decl_stmt|;
name|int
name|page_shift
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
block|{
name|MLX4_DB_PER_PAGE
init|=
name|PAGE_SIZE
operator|/
literal|4
block|}
enum|;
end_enum

begin_struct
struct|struct
name|mlx4_db_pgdir
block|{
name|struct
name|list_head
name|list
decl_stmt|;
name|DECLARE_BITMAP
argument_list|(
name|order0
argument_list|,
name|MLX4_DB_PER_PAGE
argument_list|)
expr_stmt|;
name|DECLARE_BITMAP
argument_list|(
name|order1
argument_list|,
name|MLX4_DB_PER_PAGE
operator|/
literal|2
argument_list|)
expr_stmt|;
name|unsigned
name|long
modifier|*
name|bits
index|[
literal|2
index|]
decl_stmt|;
name|__be32
modifier|*
name|db_page
decl_stmt|;
name|dma_addr_t
name|db_dma
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|mlx4_ib_user_db_page
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|mlx4_db
block|{
name|__be32
modifier|*
name|db
decl_stmt|;
union|union
block|{
name|struct
name|mlx4_db_pgdir
modifier|*
name|pgdir
decl_stmt|;
name|struct
name|mlx4_ib_user_db_page
modifier|*
name|user_page
decl_stmt|;
block|}
name|u
union|;
name|dma_addr_t
name|dma
decl_stmt|;
name|int
name|index
decl_stmt|;
name|int
name|order
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_hwq_resources
block|{
name|struct
name|mlx4_db
name|db
decl_stmt|;
name|struct
name|mlx4_mtt
name|mtt
decl_stmt|;
name|struct
name|mlx4_buf
name|buf
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_mr
block|{
name|struct
name|mlx4_mtt
name|mtt
decl_stmt|;
name|u64
name|iova
decl_stmt|;
name|u64
name|size
decl_stmt|;
name|u32
name|key
decl_stmt|;
name|u32
name|pd
decl_stmt|;
name|u32
name|access
decl_stmt|;
name|int
name|enabled
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_fmr
block|{
name|struct
name|mlx4_mr
name|mr
decl_stmt|;
name|struct
name|mlx4_mpt_entry
modifier|*
name|mpt
decl_stmt|;
name|__be64
modifier|*
name|mtts
decl_stmt|;
name|dma_addr_t
name|dma_handle
decl_stmt|;
name|int
name|max_pages
decl_stmt|;
name|int
name|max_maps
decl_stmt|;
name|int
name|maps
decl_stmt|;
name|u8
name|page_shift
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_uar
block|{
name|unsigned
name|long
name|pfn
decl_stmt|;
name|int
name|index
decl_stmt|;
name|struct
name|list_head
name|bf_list
decl_stmt|;
name|unsigned
name|free_bf_bmap
decl_stmt|;
name|void
name|__iomem
modifier|*
name|map
decl_stmt|;
name|void
name|__iomem
modifier|*
name|bf_map
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_bf
block|{
name|unsigned
name|long
name|offset
decl_stmt|;
name|int
name|buf_size
decl_stmt|;
name|struct
name|mlx4_uar
modifier|*
name|uar
decl_stmt|;
name|void
name|__iomem
modifier|*
name|reg
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_cq
block|{
name|void
function_decl|(
modifier|*
name|comp
function_decl|)
parameter_list|(
name|struct
name|mlx4_cq
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|event
function_decl|)
parameter_list|(
name|struct
name|mlx4_cq
modifier|*
parameter_list|,
name|enum
name|mlx4_event
parameter_list|)
function_decl|;
name|struct
name|mlx4_uar
modifier|*
name|uar
decl_stmt|;
name|u32
name|cons_index
decl_stmt|;
name|__be32
modifier|*
name|set_ci_db
decl_stmt|;
name|__be32
modifier|*
name|arm_db
decl_stmt|;
name|int
name|arm_sn
decl_stmt|;
name|int
name|cqn
decl_stmt|;
name|unsigned
name|vector
decl_stmt|;
name|atomic_t
name|refcount
decl_stmt|;
name|struct
name|completion
name|free
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_qp
block|{
name|void
function_decl|(
modifier|*
name|event
function_decl|)
parameter_list|(
name|struct
name|mlx4_qp
modifier|*
parameter_list|,
name|enum
name|mlx4_event
parameter_list|)
function_decl|;
name|int
name|qpn
decl_stmt|;
name|atomic_t
name|refcount
decl_stmt|;
name|struct
name|completion
name|free
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_srq
block|{
name|void
function_decl|(
modifier|*
name|event
function_decl|)
parameter_list|(
name|struct
name|mlx4_srq
modifier|*
parameter_list|,
name|enum
name|mlx4_event
parameter_list|)
function_decl|;
name|int
name|srqn
decl_stmt|;
name|int
name|max
decl_stmt|;
name|int
name|max_gs
decl_stmt|;
name|int
name|wqe_shift
decl_stmt|;
name|atomic_t
name|refcount
decl_stmt|;
name|struct
name|completion
name|free
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_av
block|{
name|__be32
name|port_pd
decl_stmt|;
name|u8
name|reserved1
decl_stmt|;
name|u8
name|g_slid
decl_stmt|;
name|__be16
name|dlid
decl_stmt|;
name|u8
name|reserved2
decl_stmt|;
name|u8
name|gid_index
decl_stmt|;
name|u8
name|stat_rate
decl_stmt|;
name|u8
name|hop_limit
decl_stmt|;
name|__be32
name|sl_tclass_flowlabel
decl_stmt|;
name|u8
name|dgid
index|[
literal|16
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_eth_av
block|{
name|__be32
name|port_pd
decl_stmt|;
name|u8
name|reserved1
decl_stmt|;
name|u8
name|smac_idx
decl_stmt|;
name|u16
name|reserved2
decl_stmt|;
name|u8
name|reserved3
decl_stmt|;
name|u8
name|gid_index
decl_stmt|;
name|u8
name|stat_rate
decl_stmt|;
name|u8
name|hop_limit
decl_stmt|;
name|__be32
name|sl_tclass_flowlabel
decl_stmt|;
name|u8
name|dgid
index|[
literal|16
index|]
decl_stmt|;
name|u32
name|reserved4
index|[
literal|2
index|]
decl_stmt|;
name|__be16
name|vlan
decl_stmt|;
name|u8
name|mac
index|[
literal|6
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_union
union|union
name|mlx4_ext_av
block|{
name|struct
name|mlx4_av
name|ib
decl_stmt|;
name|struct
name|mlx4_eth_av
name|eth
decl_stmt|;
block|}
union|;
end_union

begin_struct
struct|struct
name|mlx4_counters
block|{
name|__be32
name|counter_mode
decl_stmt|;
name|__be32
name|num_ifc
decl_stmt|;
name|u32
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|__be64
name|rx_frames
decl_stmt|;
name|__be64
name|rx_bytes
decl_stmt|;
name|__be64
name|tx_frames
decl_stmt|;
name|__be64
name|tx_bytes
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_counters_ext
block|{
name|__be32
name|counter_mode
decl_stmt|;
name|__be32
name|num_ifc
decl_stmt|;
name|u32
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|__be64
name|rx_uni_frames
decl_stmt|;
name|__be64
name|rx_uni_bytes
decl_stmt|;
name|__be64
name|rx_mcast_frames
decl_stmt|;
name|__be64
name|rx_mcast_bytes
decl_stmt|;
name|__be64
name|rx_bcast_frames
decl_stmt|;
name|__be64
name|rx_bcast_bytes
decl_stmt|;
name|__be64
name|rx_nobuf_frames
decl_stmt|;
name|__be64
name|rx_nobuf_bytes
decl_stmt|;
name|__be64
name|rx_err_frames
decl_stmt|;
name|__be64
name|rx_err_bytes
decl_stmt|;
name|__be64
name|tx_uni_frames
decl_stmt|;
name|__be64
name|tx_uni_bytes
decl_stmt|;
name|__be64
name|tx_mcast_frames
decl_stmt|;
name|__be64
name|tx_mcast_bytes
decl_stmt|;
name|__be64
name|tx_bcast_frames
decl_stmt|;
name|__be64
name|tx_bcast_bytes
decl_stmt|;
name|__be64
name|tx_nobuf_frames
decl_stmt|;
name|__be64
name|tx_nobuf_bytes
decl_stmt|;
name|__be64
name|tx_err_frames
decl_stmt|;
name|__be64
name|tx_err_bytes
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_dev
block|{
name|struct
name|pci_dev
modifier|*
name|pdev
decl_stmt|;
name|unsigned
name|long
name|flags
decl_stmt|;
name|struct
name|mlx4_caps
name|caps
decl_stmt|;
name|struct
name|radix_tree_root
name|qp_table_tree
decl_stmt|;
name|struct
name|radix_tree_root
name|srq_table_tree
decl_stmt|;
name|u32
name|rev_id
decl_stmt|;
name|char
name|board_id
index|[
name|MLX4_BOARD_ID_LEN
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_init_port_param
block|{
name|int
name|set_guid0
decl_stmt|;
name|int
name|set_node_guid
decl_stmt|;
name|int
name|set_si_guid
decl_stmt|;
name|u16
name|mtu
decl_stmt|;
name|int
name|port_width_cap
decl_stmt|;
name|u16
name|vl_cap
decl_stmt|;
name|u16
name|max_gid
decl_stmt|;
name|u16
name|max_pkey
decl_stmt|;
name|u64
name|guid0
decl_stmt|;
name|u64
name|node_guid
decl_stmt|;
name|u64
name|si_guid
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|void
name|mlx4_query_steer_cap
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
modifier|*
name|log_mac
parameter_list|,
name|int
modifier|*
name|log_vlan
parameter_list|,
name|int
modifier|*
name|log_prio
parameter_list|)
block|{
operator|*
name|log_mac
operator|=
name|dev
operator|->
name|caps
operator|.
name|log_num_macs
expr_stmt|;
operator|*
name|log_vlan
operator|=
name|dev
operator|->
name|caps
operator|.
name|log_num_vlans
expr_stmt|;
operator|*
name|log_prio
operator|=
name|dev
operator|->
name|caps
operator|.
name|log_num_prios
expr_stmt|;
block|}
end_function

begin_define
define|#
directive|define
name|mlx4_foreach_port
parameter_list|(
name|port
parameter_list|,
name|dev
parameter_list|,
name|type
parameter_list|)
define|\
value|for ((port) = 1; (port)<= (dev)->caps.num_ports; (port)++)	\ 		if ((type) == (dev)->caps.port_mask[(port)])
end_define

begin_define
define|#
directive|define
name|mlx4_foreach_ib_transport_port
parameter_list|(
name|port
parameter_list|,
name|dev
parameter_list|)
define|\
value|for ((port) = 1; (port)<= (dev)->caps.num_ports; (port)++)       \ 		if (((dev)->caps.port_mask[port] == MLX4_PORT_TYPE_IB) || \ 			((dev)->caps.flags& MLX4_DEV_CAP_FLAG_IBOE))
end_define

begin_function_decl
name|int
name|mlx4_buf_alloc
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|size
parameter_list|,
name|int
name|max_direct
parameter_list|,
name|struct
name|mlx4_buf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_buf_free
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|size
parameter_list|,
name|struct
name|mlx4_buf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|void
modifier|*
name|mlx4_buf_offset
parameter_list|(
name|struct
name|mlx4_buf
modifier|*
name|buf
parameter_list|,
name|int
name|offset
parameter_list|)
block|{
if|if
condition|(
name|buf
operator|->
name|direct
operator|.
name|buf
operator|!=
name|NULL
condition|)
return|return
name|buf
operator|->
name|direct
operator|.
name|buf
operator|+
name|offset
return|;
else|else
return|return
name|buf
operator|->
name|page_list
index|[
name|offset
operator|>>
name|PAGE_SHIFT
index|]
operator|.
name|buf
operator|+
operator|(
name|offset
operator|&
operator|(
name|PAGE_SIZE
operator|-
literal|1
operator|)
operator|)
return|;
block|}
end_function

begin_function_decl
name|int
name|mlx4_pd_alloc
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
modifier|*
name|pdn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_pd_free
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|pdn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_xrcd_alloc
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
modifier|*
name|xrcdn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_xrcd_free
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|xrcdn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_uar_alloc
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_uar
modifier|*
name|uar
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_uar_free
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_uar
modifier|*
name|uar
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_bf_alloc
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_bf
modifier|*
name|bf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_bf_free
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_bf
modifier|*
name|bf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_mtt_init
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|npages
parameter_list|,
name|int
name|page_shift
parameter_list|,
name|struct
name|mlx4_mtt
modifier|*
name|mtt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_mtt_cleanup
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_mtt
modifier|*
name|mtt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u64
name|mlx4_mtt_addr
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_mtt
modifier|*
name|mtt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_wol_read
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u64
modifier|*
name|config
parameter_list|,
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_wol_write
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u64
name|config
parameter_list|,
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_mr_reserve_range
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|cnt
parameter_list|,
name|int
name|align
parameter_list|,
name|u32
modifier|*
name|base_mridx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_mr_release_range
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|base_mridx
parameter_list|,
name|int
name|cnt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_mr_alloc_reserved
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|mridx
parameter_list|,
name|u32
name|pd
parameter_list|,
name|u64
name|iova
parameter_list|,
name|u64
name|size
parameter_list|,
name|u32
name|access
parameter_list|,
name|int
name|npages
parameter_list|,
name|int
name|page_shift
parameter_list|,
name|struct
name|mlx4_mr
modifier|*
name|mr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_mr_alloc
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|pd
parameter_list|,
name|u64
name|iova
parameter_list|,
name|u64
name|size
parameter_list|,
name|u32
name|access
parameter_list|,
name|int
name|npages
parameter_list|,
name|int
name|page_shift
parameter_list|,
name|struct
name|mlx4_mr
modifier|*
name|mr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_mr_free_reserved
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_mr
modifier|*
name|mr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_mr_free
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_mr
modifier|*
name|mr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_mr_enable
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_mr
modifier|*
name|mr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_write_mtt
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_mtt
modifier|*
name|mtt
parameter_list|,
name|int
name|start_index
parameter_list|,
name|int
name|npages
parameter_list|,
name|u64
modifier|*
name|page_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_buf_write_mtt
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_mtt
modifier|*
name|mtt
parameter_list|,
name|struct
name|mlx4_buf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_db_alloc
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_db
modifier|*
name|db
parameter_list|,
name|int
name|order
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_db_free
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_db
modifier|*
name|db
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_alloc_hwq_res
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_hwq_resources
modifier|*
name|wqres
parameter_list|,
name|int
name|size
parameter_list|,
name|int
name|max_direct
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_free_hwq_res
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|mdev
parameter_list|,
name|struct
name|mlx4_hwq_resources
modifier|*
name|wqres
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_cq_alloc
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|nent
parameter_list|,
name|struct
name|mlx4_mtt
modifier|*
name|mtt
parameter_list|,
name|struct
name|mlx4_uar
modifier|*
name|uar
parameter_list|,
name|u64
name|db_rec
parameter_list|,
name|struct
name|mlx4_cq
modifier|*
name|cq
parameter_list|,
name|unsigned
name|vector
parameter_list|,
name|int
name|collapsed
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_cq_free
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_cq
modifier|*
name|cq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_qp_reserve_range
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|cnt
parameter_list|,
name|int
name|align
parameter_list|,
name|int
modifier|*
name|base
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_qp_release_range
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|base_qpn
parameter_list|,
name|int
name|cnt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_qp_alloc
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|qpn
parameter_list|,
name|struct
name|mlx4_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_qp_free
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_srq_alloc
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|pdn
parameter_list|,
name|u32
name|cqn
parameter_list|,
name|u16
name|xrcd
parameter_list|,
name|struct
name|mlx4_mtt
modifier|*
name|mtt
parameter_list|,
name|u64
name|db_rec
parameter_list|,
name|struct
name|mlx4_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_srq_free
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_srq_arm
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_srq
modifier|*
name|srq
parameter_list|,
name|int
name|limit_watermark
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_srq_query
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_srq
modifier|*
name|srq
parameter_list|,
name|int
modifier|*
name|limit_watermark
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_INIT_PORT
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_CLOSE_PORT
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_multicast_attach
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_qp
modifier|*
name|qp
parameter_list|,
name|u8
name|gid
index|[
literal|16
index|]
parameter_list|,
name|int
name|block_mcast_loopback
parameter_list|,
name|enum
name|mlx4_mcast_prot
name|prot
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_multicast_detach
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_qp
modifier|*
name|qp
parameter_list|,
name|u8
name|gid
index|[
literal|16
index|]
parameter_list|,
name|enum
name|mlx4_mcast_prot
name|prot
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_register_mac
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|port
parameter_list|,
name|u64
name|mac
parameter_list|,
name|int
modifier|*
name|index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_unregister_mac
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|port
parameter_list|,
name|int
name|index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_find_cached_vlan
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|port
parameter_list|,
name|u16
name|vid
parameter_list|,
name|int
modifier|*
name|idx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_register_vlan
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|port
parameter_list|,
name|u16
name|vlan
parameter_list|,
name|int
modifier|*
name|index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_unregister_vlan
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|port
parameter_list|,
name|int
name|index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_map_phys_fmr_fbo
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_fmr
modifier|*
name|fmr
parameter_list|,
name|u64
modifier|*
name|page_list
parameter_list|,
name|int
name|npages
parameter_list|,
name|u64
name|iova
parameter_list|,
name|u32
name|fbo
parameter_list|,
name|u32
name|len
parameter_list|,
name|u32
modifier|*
name|lkey
parameter_list|,
name|u32
modifier|*
name|rkey
parameter_list|,
name|int
name|same_key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_map_phys_fmr
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_fmr
modifier|*
name|fmr
parameter_list|,
name|u64
modifier|*
name|page_list
parameter_list|,
name|int
name|npages
parameter_list|,
name|u64
name|iova
parameter_list|,
name|u32
modifier|*
name|lkey
parameter_list|,
name|u32
modifier|*
name|rkey
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_fmr_alloc_reserved
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|mridx
parameter_list|,
name|u32
name|pd
parameter_list|,
name|u32
name|access
parameter_list|,
name|int
name|max_pages
parameter_list|,
name|int
name|max_maps
parameter_list|,
name|u8
name|page_shift
parameter_list|,
name|struct
name|mlx4_fmr
modifier|*
name|fmr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_fmr_alloc
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|pd
parameter_list|,
name|u32
name|access
parameter_list|,
name|int
name|max_pages
parameter_list|,
name|int
name|max_maps
parameter_list|,
name|u8
name|page_shift
parameter_list|,
name|struct
name|mlx4_fmr
modifier|*
name|fmr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_fmr_enable
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_fmr
modifier|*
name|fmr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_fmr_unmap
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_fmr
modifier|*
name|fmr
parameter_list|,
name|u32
modifier|*
name|lkey
parameter_list|,
name|u32
modifier|*
name|rkey
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_fmr_free_reserved
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_fmr
modifier|*
name|fmr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_fmr_free
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_fmr
modifier|*
name|fmr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_SYNC_TPT
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_query_diag_counters
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|mlx4_dev
parameter_list|,
name|int
name|array_length
parameter_list|,
name|u8
name|op_modifier
parameter_list|,
name|u32
name|in_offset
index|[]
parameter_list|,
name|u32
name|counter_out
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_test_interrupts
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_get_fc_t11_settings
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
modifier|*
name|enable_pre_t11
parameter_list|,
name|int
modifier|*
name|t11_supported
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_counter_alloc
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
modifier|*
name|idx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_counter_free
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|idx
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* MLX4_DEVICE_H */
end_comment

end_unit

