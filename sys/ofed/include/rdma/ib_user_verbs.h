begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2005 Topspin Communications.  All rights reserved.  * Copyright (c) 2005, 2006 Cisco Systems.  All rights reserved.  * Copyright (c) 2005 PathScale, Inc.  All rights reserved.  * Copyright (c) 2006 Mellanox Technologies.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|IB_USER_VERBS_H
end_ifndef

begin_define
define|#
directive|define
name|IB_USER_VERBS_H
end_define

begin_include
include|#
directive|include
file|<linux/types.h>
end_include

begin_comment
comment|/*  * Increment this value if any changes that break userspace ABI  * compatibility are made.  */
end_comment

begin_define
define|#
directive|define
name|IB_USER_VERBS_ABI_VERSION
value|6
end_define

begin_enum
enum|enum
block|{
name|IB_USER_VERBS_CMD_GET_CONTEXT
block|,
name|IB_USER_VERBS_CMD_QUERY_DEVICE
block|,
name|IB_USER_VERBS_CMD_QUERY_PORT
block|,
name|IB_USER_VERBS_CMD_ALLOC_PD
block|,
name|IB_USER_VERBS_CMD_DEALLOC_PD
block|,
name|IB_USER_VERBS_CMD_CREATE_AH
block|,
name|IB_USER_VERBS_CMD_MODIFY_AH
block|,
name|IB_USER_VERBS_CMD_QUERY_AH
block|,
name|IB_USER_VERBS_CMD_DESTROY_AH
block|,
name|IB_USER_VERBS_CMD_REG_MR
block|,
name|IB_USER_VERBS_CMD_REG_SMR
block|,
name|IB_USER_VERBS_CMD_REREG_MR
block|,
name|IB_USER_VERBS_CMD_QUERY_MR
block|,
name|IB_USER_VERBS_CMD_DEREG_MR
block|,
name|IB_USER_VERBS_CMD_ALLOC_MW
block|,
name|IB_USER_VERBS_CMD_BIND_MW
block|,
name|IB_USER_VERBS_CMD_DEALLOC_MW
block|,
name|IB_USER_VERBS_CMD_CREATE_COMP_CHANNEL
block|,
name|IB_USER_VERBS_CMD_CREATE_CQ
block|,
name|IB_USER_VERBS_CMD_RESIZE_CQ
block|,
name|IB_USER_VERBS_CMD_DESTROY_CQ
block|,
name|IB_USER_VERBS_CMD_POLL_CQ
block|,
name|IB_USER_VERBS_CMD_PEEK_CQ
block|,
name|IB_USER_VERBS_CMD_REQ_NOTIFY_CQ
block|,
name|IB_USER_VERBS_CMD_CREATE_QP
block|,
name|IB_USER_VERBS_CMD_QUERY_QP
block|,
name|IB_USER_VERBS_CMD_MODIFY_QP
block|,
name|IB_USER_VERBS_CMD_DESTROY_QP
block|,
name|IB_USER_VERBS_CMD_POST_SEND
block|,
name|IB_USER_VERBS_CMD_POST_RECV
block|,
name|IB_USER_VERBS_CMD_ATTACH_MCAST
block|,
name|IB_USER_VERBS_CMD_DETACH_MCAST
block|,
name|IB_USER_VERBS_CMD_CREATE_SRQ
block|,
name|IB_USER_VERBS_CMD_MODIFY_SRQ
block|,
name|IB_USER_VERBS_CMD_QUERY_SRQ
block|,
name|IB_USER_VERBS_CMD_DESTROY_SRQ
block|,
name|IB_USER_VERBS_CMD_POST_SRQ_RECV
block|,
name|IB_USER_VERBS_CMD_CREATE_XRC_SRQ
block|,
name|IB_USER_VERBS_CMD_OPEN_XRC_DOMAIN
block|,
name|IB_USER_VERBS_CMD_CLOSE_XRC_DOMAIN
block|,
name|IB_USER_VERBS_CMD_CREATE_XRC_RCV_QP
block|,
name|IB_USER_VERBS_CMD_MODIFY_XRC_RCV_QP
block|,
name|IB_USER_VERBS_CMD_QUERY_XRC_RCV_QP
block|,
name|IB_USER_VERBS_CMD_REG_XRC_RCV_QP
block|,
name|IB_USER_VERBS_CMD_UNREG_XRC_RCV_QP
block|, }
enum|;
end_enum

begin_comment
comment|/*  * Make sure that all structs defined in this file remain laid out so  * that they pack the same way on 32-bit and 64-bit architectures (to  * avoid incompatibility between 32-bit userspace and 64-bit kernels).  * Specifically:  *  - Do not use pointer types -- pass pointers in __u64 instead.  *  - Make sure that any structure larger than 4 bytes is padded to a  *    multiple of 8 bytes.  Otherwise the structure size will be  *    different between 32-bit and 64-bit architectures.  */
end_comment

begin_struct
struct|struct
name|ib_uverbs_async_event_desc
block|{
name|__u64
name|element
decl_stmt|;
name|__u32
name|event_type
decl_stmt|;
comment|/* enum ib_event_type */
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_comp_event_desc
block|{
name|__u64
name|cq_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * All commands from userspace should start with a __u32 command field  * followed by __u16 in_words and out_words fields (which give the  * length of the command block and response buffer if any in 32-bit  * words).  The kernel driver will read these fields first and read  * the rest of the command struct based on these value.  */
end_comment

begin_struct
struct|struct
name|ib_uverbs_cmd_hdr
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_get_context
block|{
name|__u64
name|response
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_get_context_resp
block|{
name|__u32
name|async_fd
decl_stmt|;
name|__u32
name|num_comp_vectors
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_query_device
block|{
name|__u64
name|response
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_query_device_resp
block|{
name|__u64
name|fw_ver
decl_stmt|;
name|__be64
name|node_guid
decl_stmt|;
name|__be64
name|sys_image_guid
decl_stmt|;
name|__u64
name|max_mr_size
decl_stmt|;
name|__u64
name|page_size_cap
decl_stmt|;
name|__u32
name|vendor_id
decl_stmt|;
name|__u32
name|vendor_part_id
decl_stmt|;
name|__u32
name|hw_ver
decl_stmt|;
name|__u32
name|max_qp
decl_stmt|;
name|__u32
name|max_qp_wr
decl_stmt|;
name|__u32
name|device_cap_flags
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|max_sge_rd
decl_stmt|;
name|__u32
name|max_cq
decl_stmt|;
name|__u32
name|max_cqe
decl_stmt|;
name|__u32
name|max_mr
decl_stmt|;
name|__u32
name|max_pd
decl_stmt|;
name|__u32
name|max_qp_rd_atom
decl_stmt|;
name|__u32
name|max_ee_rd_atom
decl_stmt|;
name|__u32
name|max_res_rd_atom
decl_stmt|;
name|__u32
name|max_qp_init_rd_atom
decl_stmt|;
name|__u32
name|max_ee_init_rd_atom
decl_stmt|;
name|__u32
name|atomic_cap
decl_stmt|;
name|__u32
name|max_ee
decl_stmt|;
name|__u32
name|max_rdd
decl_stmt|;
name|__u32
name|max_mw
decl_stmt|;
name|__u32
name|max_raw_ipv6_qp
decl_stmt|;
name|__u32
name|max_raw_ethy_qp
decl_stmt|;
name|__u32
name|max_mcast_grp
decl_stmt|;
name|__u32
name|max_mcast_qp_attach
decl_stmt|;
name|__u32
name|max_total_mcast_qp_attach
decl_stmt|;
name|__u32
name|max_ah
decl_stmt|;
name|__u32
name|max_fmr
decl_stmt|;
name|__u32
name|max_map_per_fmr
decl_stmt|;
name|__u32
name|max_srq
decl_stmt|;
name|__u32
name|max_srq_wr
decl_stmt|;
name|__u32
name|max_srq_sge
decl_stmt|;
name|__u16
name|max_pkeys
decl_stmt|;
name|__u8
name|local_ca_ack_delay
decl_stmt|;
name|__u8
name|phys_port_cnt
decl_stmt|;
name|__u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_query_port
block|{
name|__u64
name|response
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|reserved
index|[
literal|7
index|]
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_query_port_resp
block|{
name|__u32
name|port_cap_flags
decl_stmt|;
name|__u32
name|max_msg_sz
decl_stmt|;
name|__u32
name|bad_pkey_cntr
decl_stmt|;
name|__u32
name|qkey_viol_cntr
decl_stmt|;
name|__u32
name|gid_tbl_len
decl_stmt|;
name|__u16
name|pkey_tbl_len
decl_stmt|;
name|__u16
name|lid
decl_stmt|;
name|__u16
name|sm_lid
decl_stmt|;
name|__u8
name|state
decl_stmt|;
name|__u8
name|max_mtu
decl_stmt|;
name|__u8
name|active_mtu
decl_stmt|;
name|__u8
name|lmc
decl_stmt|;
name|__u8
name|max_vl_num
decl_stmt|;
name|__u8
name|sm_sl
decl_stmt|;
name|__u8
name|subnet_timeout
decl_stmt|;
name|__u8
name|init_type_reply
decl_stmt|;
name|__u8
name|active_width
decl_stmt|;
name|__u8
name|active_speed
decl_stmt|;
name|__u8
name|phys_state
decl_stmt|;
name|__u8
name|link_layer
decl_stmt|;
name|__u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_alloc_pd
block|{
name|__u64
name|response
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_alloc_pd_resp
block|{
name|__u32
name|pd_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_dealloc_pd
block|{
name|__u32
name|pd_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_reg_mr
block|{
name|__u64
name|response
decl_stmt|;
name|__u64
name|start
decl_stmt|;
name|__u64
name|length
decl_stmt|;
name|__u64
name|hca_va
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|access_flags
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_reg_mr_resp
block|{
name|__u32
name|mr_handle
decl_stmt|;
name|__u32
name|lkey
decl_stmt|;
name|__u32
name|rkey
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_dereg_mr
block|{
name|__u32
name|mr_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_comp_channel
block|{
name|__u64
name|response
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_comp_channel_resp
block|{
name|__u32
name|fd
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_cq
block|{
name|__u64
name|response
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|cqe
decl_stmt|;
name|__u32
name|comp_vector
decl_stmt|;
name|__s32
name|comp_channel
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_cq_resp
block|{
name|__u32
name|cq_handle
decl_stmt|;
name|__u32
name|cqe
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_resize_cq
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|cq_handle
decl_stmt|;
name|__u32
name|cqe
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_resize_cq_resp
block|{
name|__u32
name|cqe
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_poll_cq
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|cq_handle
decl_stmt|;
name|__u32
name|ne
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_wc
block|{
name|__u64
name|wr_id
decl_stmt|;
name|__u32
name|status
decl_stmt|;
name|__u32
name|opcode
decl_stmt|;
name|__u32
name|vendor_err
decl_stmt|;
name|__u32
name|byte_len
decl_stmt|;
union|union
block|{
name|__u32
name|imm_data
decl_stmt|;
name|__u32
name|invalidate_rkey
decl_stmt|;
block|}
name|ex
union|;
name|__u32
name|qp_num
decl_stmt|;
name|__u32
name|src_qp
decl_stmt|;
name|__u32
name|wc_flags
decl_stmt|;
name|__u16
name|pkey_index
decl_stmt|;
name|__u16
name|slid
decl_stmt|;
name|__u8
name|sl
decl_stmt|;
name|__u8
name|dlid_path_bits
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_poll_cq_resp
block|{
name|__u32
name|count
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|struct
name|ib_uverbs_wc
name|wc
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_req_notify_cq
block|{
name|__u32
name|cq_handle
decl_stmt|;
name|__u32
name|solicited_only
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_destroy_cq
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|cq_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_destroy_cq_resp
block|{
name|__u32
name|comp_events_reported
decl_stmt|;
name|__u32
name|async_events_reported
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_global_route
block|{
name|__u8
name|dgid
index|[
literal|16
index|]
decl_stmt|;
name|__u32
name|flow_label
decl_stmt|;
name|__u8
name|sgid_index
decl_stmt|;
name|__u8
name|hop_limit
decl_stmt|;
name|__u8
name|traffic_class
decl_stmt|;
name|__u8
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_ah_attr
block|{
name|struct
name|ib_uverbs_global_route
name|grh
decl_stmt|;
name|__u16
name|dlid
decl_stmt|;
name|__u8
name|sl
decl_stmt|;
name|__u8
name|src_path_bits
decl_stmt|;
name|__u8
name|static_rate
decl_stmt|;
name|__u8
name|is_global
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_qp_attr
block|{
name|__u32
name|qp_attr_mask
decl_stmt|;
name|__u32
name|qp_state
decl_stmt|;
name|__u32
name|cur_qp_state
decl_stmt|;
name|__u32
name|path_mtu
decl_stmt|;
name|__u32
name|path_mig_state
decl_stmt|;
name|__u32
name|qkey
decl_stmt|;
name|__u32
name|rq_psn
decl_stmt|;
name|__u32
name|sq_psn
decl_stmt|;
name|__u32
name|dest_qp_num
decl_stmt|;
name|__u32
name|qp_access_flags
decl_stmt|;
name|struct
name|ib_uverbs_ah_attr
name|ah_attr
decl_stmt|;
name|struct
name|ib_uverbs_ah_attr
name|alt_ah_attr
decl_stmt|;
comment|/* ib_qp_cap */
name|__u32
name|max_send_wr
decl_stmt|;
name|__u32
name|max_recv_wr
decl_stmt|;
name|__u32
name|max_send_sge
decl_stmt|;
name|__u32
name|max_recv_sge
decl_stmt|;
name|__u32
name|max_inline_data
decl_stmt|;
name|__u16
name|pkey_index
decl_stmt|;
name|__u16
name|alt_pkey_index
decl_stmt|;
name|__u8
name|en_sqd_async_notify
decl_stmt|;
name|__u8
name|sq_draining
decl_stmt|;
name|__u8
name|max_rd_atomic
decl_stmt|;
name|__u8
name|max_dest_rd_atomic
decl_stmt|;
name|__u8
name|min_rnr_timer
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|timeout
decl_stmt|;
name|__u8
name|retry_cnt
decl_stmt|;
name|__u8
name|rnr_retry
decl_stmt|;
name|__u8
name|alt_port_num
decl_stmt|;
name|__u8
name|alt_timeout
decl_stmt|;
name|__u8
name|reserved
index|[
literal|5
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_qp
block|{
name|__u64
name|response
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|send_cq_handle
decl_stmt|;
name|__u32
name|recv_cq_handle
decl_stmt|;
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|max_send_wr
decl_stmt|;
name|__u32
name|max_recv_wr
decl_stmt|;
name|__u32
name|max_send_sge
decl_stmt|;
name|__u32
name|max_recv_sge
decl_stmt|;
name|__u32
name|max_inline_data
decl_stmt|;
name|__u8
name|sq_sig_all
decl_stmt|;
name|__u8
name|qp_type
decl_stmt|;
name|__u8
name|is_srq
decl_stmt|;
name|__u8
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_qp_resp
block|{
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|qpn
decl_stmt|;
name|__u32
name|max_send_wr
decl_stmt|;
name|__u32
name|max_recv_wr
decl_stmt|;
name|__u32
name|max_send_sge
decl_stmt|;
name|__u32
name|max_recv_sge
decl_stmt|;
name|__u32
name|max_inline_data
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * This struct needs to remain a multiple of 8 bytes to keep the  * alignment of the modify QP parameters.  */
end_comment

begin_struct
struct|struct
name|ib_uverbs_qp_dest
block|{
name|__u8
name|dgid
index|[
literal|16
index|]
decl_stmt|;
name|__u32
name|flow_label
decl_stmt|;
name|__u16
name|dlid
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|__u8
name|sgid_index
decl_stmt|;
name|__u8
name|hop_limit
decl_stmt|;
name|__u8
name|traffic_class
decl_stmt|;
name|__u8
name|sl
decl_stmt|;
name|__u8
name|src_path_bits
decl_stmt|;
name|__u8
name|static_rate
decl_stmt|;
name|__u8
name|is_global
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_query_qp
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|attr_mask
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_query_qp_resp
block|{
name|struct
name|ib_uverbs_qp_dest
name|dest
decl_stmt|;
name|struct
name|ib_uverbs_qp_dest
name|alt_dest
decl_stmt|;
name|__u32
name|max_send_wr
decl_stmt|;
name|__u32
name|max_recv_wr
decl_stmt|;
name|__u32
name|max_send_sge
decl_stmt|;
name|__u32
name|max_recv_sge
decl_stmt|;
name|__u32
name|max_inline_data
decl_stmt|;
name|__u32
name|qkey
decl_stmt|;
name|__u32
name|rq_psn
decl_stmt|;
name|__u32
name|sq_psn
decl_stmt|;
name|__u32
name|dest_qp_num
decl_stmt|;
name|__u32
name|qp_access_flags
decl_stmt|;
name|__u16
name|pkey_index
decl_stmt|;
name|__u16
name|alt_pkey_index
decl_stmt|;
name|__u8
name|qp_state
decl_stmt|;
name|__u8
name|cur_qp_state
decl_stmt|;
name|__u8
name|path_mtu
decl_stmt|;
name|__u8
name|path_mig_state
decl_stmt|;
name|__u8
name|sq_draining
decl_stmt|;
name|__u8
name|max_rd_atomic
decl_stmt|;
name|__u8
name|max_dest_rd_atomic
decl_stmt|;
name|__u8
name|min_rnr_timer
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|timeout
decl_stmt|;
name|__u8
name|retry_cnt
decl_stmt|;
name|__u8
name|rnr_retry
decl_stmt|;
name|__u8
name|alt_port_num
decl_stmt|;
name|__u8
name|alt_timeout
decl_stmt|;
name|__u8
name|sq_sig_all
decl_stmt|;
name|__u8
name|reserved
index|[
literal|5
index|]
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_modify_qp
block|{
name|struct
name|ib_uverbs_qp_dest
name|dest
decl_stmt|;
name|struct
name|ib_uverbs_qp_dest
name|alt_dest
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|attr_mask
decl_stmt|;
name|__u32
name|qkey
decl_stmt|;
name|__u32
name|rq_psn
decl_stmt|;
name|__u32
name|sq_psn
decl_stmt|;
name|__u32
name|dest_qp_num
decl_stmt|;
name|__u32
name|qp_access_flags
decl_stmt|;
name|__u16
name|pkey_index
decl_stmt|;
name|__u16
name|alt_pkey_index
decl_stmt|;
name|__u8
name|qp_state
decl_stmt|;
name|__u8
name|cur_qp_state
decl_stmt|;
name|__u8
name|path_mtu
decl_stmt|;
name|__u8
name|path_mig_state
decl_stmt|;
name|__u8
name|en_sqd_async_notify
decl_stmt|;
name|__u8
name|max_rd_atomic
decl_stmt|;
name|__u8
name|max_dest_rd_atomic
decl_stmt|;
name|__u8
name|min_rnr_timer
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|timeout
decl_stmt|;
name|__u8
name|retry_cnt
decl_stmt|;
name|__u8
name|rnr_retry
decl_stmt|;
name|__u8
name|alt_port_num
decl_stmt|;
name|__u8
name|alt_timeout
decl_stmt|;
name|__u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_modify_qp_resp
block|{ }
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_destroy_qp
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_destroy_qp_resp
block|{
name|__u32
name|events_reported
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * The ib_uverbs_sge structure isn't used anywhere, since we assume  * the ib_sge structure is packed the same way on 32-bit and 64-bit  * architectures in both kernel and user space.  It's just here to  * document the ABI.  */
end_comment

begin_struct
struct|struct
name|ib_uverbs_sge
block|{
name|__u64
name|addr
decl_stmt|;
name|__u32
name|length
decl_stmt|;
name|__u32
name|lkey
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_send_wr
block|{
name|__u64
name|wr_id
decl_stmt|;
name|__u32
name|num_sge
decl_stmt|;
name|__u32
name|opcode
decl_stmt|;
name|__u32
name|send_flags
decl_stmt|;
union|union
block|{
name|__u32
name|imm_data
decl_stmt|;
name|__u32
name|invalidate_rkey
decl_stmt|;
block|}
name|ex
union|;
union|union
block|{
struct|struct
block|{
name|__u64
name|remote_addr
decl_stmt|;
name|__u32
name|rkey
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
name|rdma
struct|;
struct|struct
block|{
name|__u64
name|remote_addr
decl_stmt|;
name|__u64
name|compare_add
decl_stmt|;
name|__u64
name|swap
decl_stmt|;
name|__u32
name|rkey
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
name|atomic
struct|;
struct|struct
block|{
name|__u32
name|ah
decl_stmt|;
name|__u32
name|remote_qpn
decl_stmt|;
name|__u32
name|remote_qkey
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
name|ud
struct|;
block|}
name|wr
union|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_post_send
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|wr_count
decl_stmt|;
name|__u32
name|sge_count
decl_stmt|;
name|__u32
name|wqe_size
decl_stmt|;
name|struct
name|ib_uverbs_send_wr
name|send_wr
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_post_send_resp
block|{
name|__u32
name|bad_wr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_recv_wr
block|{
name|__u64
name|wr_id
decl_stmt|;
name|__u32
name|num_sge
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_post_recv
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|wr_count
decl_stmt|;
name|__u32
name|sge_count
decl_stmt|;
name|__u32
name|wqe_size
decl_stmt|;
name|struct
name|ib_uverbs_recv_wr
name|recv_wr
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_post_recv_resp
block|{
name|__u32
name|bad_wr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_post_srq_recv
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|wr_count
decl_stmt|;
name|__u32
name|sge_count
decl_stmt|;
name|__u32
name|wqe_size
decl_stmt|;
name|struct
name|ib_uverbs_recv_wr
name|recv
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_post_srq_recv_resp
block|{
name|__u32
name|bad_wr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_ah
block|{
name|__u64
name|response
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|struct
name|ib_uverbs_ah_attr
name|attr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_ah_resp
block|{
name|__u32
name|ah_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_destroy_ah
block|{
name|__u32
name|ah_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_attach_mcast
block|{
name|__u8
name|gid
index|[
literal|16
index|]
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u16
name|mlid
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_detach_mcast
block|{
name|__u8
name|gid
index|[
literal|16
index|]
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u16
name|mlid
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_srq
block|{
name|__u64
name|response
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|srq_limit
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_xrc_srq
block|{
name|__u64
name|response
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|srq_limit
decl_stmt|;
name|__u32
name|xrcd_handle
decl_stmt|;
name|__u32
name|xrc_cq
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_srq_resp
block|{
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_modify_srq
block|{
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|attr_mask
decl_stmt|;
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|srq_limit
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_query_srq
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_query_srq_resp
block|{
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|srq_limit
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_destroy_srq
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_destroy_srq_resp
block|{
name|__u32
name|events_reported
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_open_xrc_domain
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|fd
decl_stmt|;
name|__u32
name|oflags
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_open_xrc_domain_resp
block|{
name|__u32
name|xrcd_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_close_xrc_domain
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|xrcd_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_xrc_rcv_qp
block|{
name|__u64
name|response
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|xrc_domain_handle
decl_stmt|;
name|__u32
name|max_send_wr
decl_stmt|;
name|__u32
name|max_recv_wr
decl_stmt|;
name|__u32
name|max_send_sge
decl_stmt|;
name|__u32
name|max_recv_sge
decl_stmt|;
name|__u32
name|max_inline_data
decl_stmt|;
name|__u8
name|sq_sig_all
decl_stmt|;
name|__u8
name|qp_type
decl_stmt|;
name|__u8
name|reserved
index|[
literal|6
index|]
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_xrc_rcv_qp_resp
block|{
name|__u32
name|qpn
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_modify_xrc_rcv_qp
block|{
name|__u32
name|xrc_domain_handle
decl_stmt|;
name|__u32
name|qp_num
decl_stmt|;
name|struct
name|ib_uverbs_qp_dest
name|dest
decl_stmt|;
name|struct
name|ib_uverbs_qp_dest
name|alt_dest
decl_stmt|;
name|__u32
name|attr_mask
decl_stmt|;
name|__u32
name|qkey
decl_stmt|;
name|__u32
name|rq_psn
decl_stmt|;
name|__u32
name|sq_psn
decl_stmt|;
name|__u32
name|dest_qp_num
decl_stmt|;
name|__u32
name|qp_access_flags
decl_stmt|;
name|__u16
name|pkey_index
decl_stmt|;
name|__u16
name|alt_pkey_index
decl_stmt|;
name|__u8
name|qp_state
decl_stmt|;
name|__u8
name|cur_qp_state
decl_stmt|;
name|__u8
name|path_mtu
decl_stmt|;
name|__u8
name|path_mig_state
decl_stmt|;
name|__u8
name|en_sqd_async_notify
decl_stmt|;
name|__u8
name|max_rd_atomic
decl_stmt|;
name|__u8
name|max_dest_rd_atomic
decl_stmt|;
name|__u8
name|min_rnr_timer
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|timeout
decl_stmt|;
name|__u8
name|retry_cnt
decl_stmt|;
name|__u8
name|rnr_retry
decl_stmt|;
name|__u8
name|alt_port_num
decl_stmt|;
name|__u8
name|alt_timeout
decl_stmt|;
name|__u8
name|reserved
index|[
literal|6
index|]
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_query_xrc_rcv_qp
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|xrc_domain_handle
decl_stmt|;
name|__u32
name|qp_num
decl_stmt|;
name|__u32
name|attr_mask
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_reg_xrc_rcv_qp
block|{
name|__u32
name|xrc_domain_handle
decl_stmt|;
name|__u32
name|qp_num
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_unreg_xrc_rcv_qp
block|{
name|__u32
name|xrc_domain_handle
decl_stmt|;
name|__u32
name|qp_num
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* IB_USER_VERBS_H */
end_comment

end_unit

