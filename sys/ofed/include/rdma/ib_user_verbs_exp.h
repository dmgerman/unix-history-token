begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2005 Topspin Communications.  All rights reserved.  * Copyright (c) 2005, 2006 Cisco Systems.  All rights reserved.  * Copyright (c) 2005 PathScale, Inc.  All rights reserved.  * Copyright (c) 2006 Mellanox Technologies.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|IB_USER_VERBS_EXP_H
end_ifndef

begin_define
define|#
directive|define
name|IB_USER_VERBS_EXP_H
end_define

begin_include
include|#
directive|include
file|<rdma/ib_user_verbs.h>
end_include

begin_enum
enum|enum
block|{
name|IB_USER_VERBS_EXP_CMD_FIRST
init|=
literal|64
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|IB_USER_VERBS_EXP_CMD_CREATE_QP
block|,
name|IB_USER_VERBS_EXP_CMD_MODIFY_CQ
block|,
name|IB_USER_VERBS_EXP_CMD_MODIFY_QP
block|,
name|IB_USER_VERBS_EXP_CMD_CREATE_CQ
block|,
name|IB_USER_VERBS_EXP_CMD_QUERY_DEVICE
block|,
name|IB_USER_VERBS_EXP_CMD_CREATE_DCT
block|,
name|IB_USER_VERBS_EXP_CMD_DESTROY_DCT
block|,
name|IB_USER_VERBS_EXP_CMD_QUERY_DCT
block|, }
enum|;
end_enum

begin_comment
comment|/*  * Make sure that all structs defined in this file remain laid out so  * that they pack the same way on 32-bit and 64-bit architectures (to  * avoid incompatibility between 32-bit userspace and 64-bit kernels).  * Specifically:  *  - Do not use pointer types -- pass pointers in __u64 instead.  *  - Make sure that any structure larger than 4 bytes is padded to a  *    multiple of 8 bytes.  Otherwise the structure size will be  *    different between 32-bit and 64-bit architectures.  */
end_comment

begin_enum
enum|enum
name|ib_uverbs_exp_create_qp_comp_mask
block|{
name|IB_UVERBS_EXP_CREATE_QP_CAP_FLAGS
init|=
operator|(
literal|1ULL
operator|<<
literal|0
operator|)
block|,
name|IB_UVERBS_EXP_CREATE_QP_INL_RECV
init|=
operator|(
literal|1ULL
operator|<<
literal|1
operator|)
block|,
name|IB_UVERBS_EXP_CREATE_QP_QPG
init|=
operator|(
literal|1ULL
operator|<<
literal|2
operator|)
block|}
enum|;
end_enum

begin_struct
struct|struct
name|ib_uverbs_qpg_init_attrib
block|{
name|__u32
name|tss_child_count
decl_stmt|;
name|__u32
name|rss_child_count
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_qpg
block|{
name|__u32
name|qpg_type
decl_stmt|;
union|union
block|{
struct|struct
block|{
name|__u32
name|parent_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
name|struct
name|ib_uverbs_qpg_init_attrib
name|parent_attrib
decl_stmt|;
block|}
union|;
name|__u32
name|reserved2
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_exp_create_qp
block|{
name|__u64
name|comp_mask
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|send_cq_handle
decl_stmt|;
name|__u32
name|recv_cq_handle
decl_stmt|;
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|max_send_wr
decl_stmt|;
name|__u32
name|max_recv_wr
decl_stmt|;
name|__u32
name|max_send_sge
decl_stmt|;
name|__u32
name|max_recv_sge
decl_stmt|;
name|__u32
name|max_inline_data
decl_stmt|;
name|__u8
name|sq_sig_all
decl_stmt|;
name|__u8
name|qp_type
decl_stmt|;
name|__u8
name|is_srq
decl_stmt|;
name|__u8
name|reserved
decl_stmt|;
name|__u64
name|qp_cap_flags
decl_stmt|;
name|__u32
name|max_inl_recv
decl_stmt|;
name|__u32
name|reserved1
decl_stmt|;
name|struct
name|ib_uverbs_qpg
name|qpg
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|ib_uverbs_exp_create_qp_resp_comp_mask
block|{
name|IB_UVERBS_EXP_CREATE_QP_RESP_INL_RECV
init|=
operator|(
literal|1ULL
operator|<<
literal|0
operator|)
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|ib_uverbs_exp_create_qp_resp
block|{
name|__u64
name|comp_mask
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|qpn
decl_stmt|;
name|__u32
name|max_send_wr
decl_stmt|;
name|__u32
name|max_recv_wr
decl_stmt|;
name|__u32
name|max_send_sge
decl_stmt|;
name|__u32
name|max_recv_sge
decl_stmt|;
name|__u32
name|max_inline_data
decl_stmt|;
name|__u32
name|max_inl_recv
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_dct
block|{
name|__u64
name|comp_mask
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|cq_handle
decl_stmt|;
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|access_flags
decl_stmt|;
name|__u32
name|flow_label
decl_stmt|;
name|__u64
name|dc_key
decl_stmt|;
name|__u8
name|min_rnr_timer
decl_stmt|;
name|__u8
name|tclass
decl_stmt|;
name|__u8
name|port
decl_stmt|;
name|__u8
name|pkey_index
decl_stmt|;
name|__u8
name|gid_index
decl_stmt|;
name|__u8
name|hop_limit
decl_stmt|;
name|__u8
name|mtu
decl_stmt|;
name|__u8
name|rsvd
decl_stmt|;
name|__u32
name|create_flags
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_create_dct_resp
block|{
name|__u32
name|dct_handle
decl_stmt|;
name|__u32
name|dctn
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_destroy_dct
block|{
name|__u64
name|comp_mask
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_destroy_dct_resp
block|{
name|__u64
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_query_dct
block|{
name|__u64
name|comp_mask
decl_stmt|;
name|__u64
name|dct_handle
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_query_dct_resp
block|{
name|__u64
name|dc_key
decl_stmt|;
name|__u32
name|access_flags
decl_stmt|;
name|__u32
name|flow_label
decl_stmt|;
name|__u32
name|key_violations
decl_stmt|;
name|__u8
name|port
decl_stmt|;
name|__u8
name|min_rnr_timer
decl_stmt|;
name|__u8
name|tclass
decl_stmt|;
name|__u8
name|mtu
decl_stmt|;
name|__u8
name|pkey_index
decl_stmt|;
name|__u8
name|gid_index
decl_stmt|;
name|__u8
name|hop_limit
decl_stmt|;
name|__u8
name|state
decl_stmt|;
name|__u32
name|rsvd
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_exp_query_device
block|{
name|__u64
name|comp_mask
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_uverbs_exp_query_device_resp
block|{
name|__u64
name|comp_mask
decl_stmt|;
name|struct
name|ib_uverbs_query_device_resp
name|base
decl_stmt|;
name|__u64
name|timestamp_mask
decl_stmt|;
name|__u64
name|hca_core_clock
decl_stmt|;
name|__u64
name|device_cap_flags2
decl_stmt|;
name|__u32
name|dc_rd_req
decl_stmt|;
name|__u32
name|dc_rd_res
decl_stmt|;
name|__u32
name|inline_recv_sz
decl_stmt|;
name|__u32
name|max_rss_tbl_sz
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* IB_USER_VERBS_EXP_H */
end_comment

end_unit

