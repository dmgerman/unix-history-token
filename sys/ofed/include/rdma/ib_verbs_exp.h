begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2004 Mellanox Technologies Ltd.  All rights reserved.  * Copyright (c) 2004 Infinicon Corporation.  All rights reserved.  * Copyright (c) 2004 Intel Corporation.  All rights reserved.  * Copyright (c) 2004 Topspin Corporation.  All rights reserved.  * Copyright (c) 2004 Voltaire Corporation.  All rights reserved.  * Copyright (c) 2005 Sun Microsystems, Inc. All rights reserved.  * Copyright (c) 2005, 2006, 2007 Cisco Systems.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|IB_VERBS_EXP_H
end_ifndef

begin_define
define|#
directive|define
name|IB_VERBS_EXP_H
end_define

begin_include
include|#
directive|include
file|<rdma/ib_verbs.h>
end_include

begin_enum
enum|enum
name|ib_exp_device_cap_flags2
block|{
name|IB_EXP_DEVICE_DC_TRANSPORT
init|=
literal|1
operator|<<
literal|0
block|,
name|IB_EXP_DEVICE_QPG
init|=
literal|1
operator|<<
literal|1
block|,
name|IB_EXP_DEVICE_UD_RSS
init|=
literal|1
operator|<<
literal|2
block|,
name|IB_EXP_DEVICE_UD_TSS
init|=
literal|1
operator|<<
literal|3
block|}
enum|;
end_enum

begin_enum
enum|enum
name|ib_exp_device_attr_comp_mask
block|{
name|IB_EXP_DEVICE_ATTR_WITH_TIMESTAMP_MASK
init|=
literal|1ULL
operator|<<
literal|1
block|,
name|IB_EXP_DEVICE_ATTR_WITH_HCA_CORE_CLOCK
init|=
literal|1ULL
operator|<<
literal|2
block|,
name|IB_EXP_DEVICE_ATTR_CAP_FLAGS2
init|=
literal|1ULL
operator|<<
literal|3
block|,
name|IB_EXP_DEVICE_ATTR_DC_REQ_RD
init|=
literal|1ULL
operator|<<
literal|4
block|,
name|IB_EXP_DEVICE_ATTR_DC_RES_RD
init|=
literal|1ULL
operator|<<
literal|5
block|,
name|IB_EXP_DEVICE_ATTR_INLINE_RECV_SZ
init|=
literal|1ULL
operator|<<
literal|6
block|,
name|IB_EXP_DEVICE_ATTR_RSS_TBL_SZ
init|=
literal|1ULL
operator|<<
literal|7
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|ib_exp_device_attr
block|{
name|struct
name|ib_device_attr
name|base
decl_stmt|;
comment|/* Use IB_EXP_DEVICE_ATTR_... for exp_comp_mask */
name|uint32_t
name|exp_comp_mask
decl_stmt|;
name|uint64_t
name|device_cap_flags2
decl_stmt|;
name|uint32_t
name|dc_rd_req
decl_stmt|;
name|uint32_t
name|dc_rd_res
decl_stmt|;
name|uint32_t
name|inline_recv_sz
decl_stmt|;
name|uint32_t
name|max_rss_tbl_sz
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_exp_qp_init_attr
block|{
name|void
function_decl|(
modifier|*
name|event_handler
function_decl|)
parameter_list|(
name|struct
name|ib_event
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
name|qp_context
decl_stmt|;
name|struct
name|ib_cq
modifier|*
name|send_cq
decl_stmt|;
name|struct
name|ib_cq
modifier|*
name|recv_cq
decl_stmt|;
name|struct
name|ib_srq
modifier|*
name|srq
decl_stmt|;
name|struct
name|ib_xrcd
modifier|*
name|xrcd
decl_stmt|;
comment|/* XRC TGT QPs only */
name|struct
name|ib_qp_cap
name|cap
decl_stmt|;
union|union
block|{
name|struct
name|ib_qp
modifier|*
name|qpg_parent
decl_stmt|;
comment|/* see qpg_type */
name|struct
name|ib_qpg_init_attrib
name|parent_attrib
decl_stmt|;
block|}
union|;
name|enum
name|ib_sig_type
name|sq_sig_type
decl_stmt|;
name|enum
name|ib_qp_type
name|qp_type
decl_stmt|;
name|enum
name|ib_qp_create_flags
name|create_flags
decl_stmt|;
name|enum
name|ib_qpg_type
name|qpg_type
decl_stmt|;
name|u8
name|port_num
decl_stmt|;
comment|/* special QP types only */
name|u32
name|max_inl_recv
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|ib_exp_query_device
parameter_list|(
name|struct
name|ib_device
modifier|*
name|device
parameter_list|,
name|struct
name|ib_exp_device_attr
modifier|*
name|device_attr
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* IB_VERBS_EXP_H */
end_comment

end_unit

