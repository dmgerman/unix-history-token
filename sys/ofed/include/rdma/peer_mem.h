begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2013,  Mellanox Technologies. All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|PEER_MEM_H
argument_list|)
end_if

begin_define
define|#
directive|define
name|PEER_MEM_H
end_define

begin_include
include|#
directive|include
file|<linux/module.h>
end_include

begin_include
include|#
directive|include
file|<linux/slab.h>
end_include

begin_include
include|#
directive|include
file|<linux/errno.h>
end_include

begin_include
include|#
directive|include
file|<linux/scatterlist.h>
end_include

begin_include
include|#
directive|include
file|<linux/mutex.h>
end_include

begin_define
define|#
directive|define
name|IB_PEER_MEMORY_NAME_MAX
value|64
end_define

begin_define
define|#
directive|define
name|IB_PEER_MEMORY_VER_MAX
value|16
end_define

begin_struct
struct|struct
name|peer_memory_client
block|{
name|char
name|name
index|[
name|IB_PEER_MEMORY_NAME_MAX
index|]
decl_stmt|;
name|char
name|version
index|[
name|IB_PEER_MEMORY_VER_MAX
index|]
decl_stmt|;
comment|/* acquire return code: 1 mine, 0 - not mine */
name|int
function_decl|(
modifier|*
name|acquire
function_decl|)
parameter_list|(
name|unsigned
name|long
name|addr
parameter_list|,
name|size_t
name|size
parameter_list|,
name|void
modifier|*
name|peer_mem_private_data
parameter_list|,
name|char
modifier|*
name|peer_mem_name
parameter_list|,
name|void
modifier|*
modifier|*
name|client_context
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_pages
function_decl|)
parameter_list|(
name|unsigned
name|long
name|addr
parameter_list|,
name|size_t
name|size
parameter_list|,
name|int
name|write
parameter_list|,
name|int
name|force
parameter_list|,
name|struct
name|sg_table
modifier|*
name|sg_head
parameter_list|,
name|void
modifier|*
name|client_context
parameter_list|,
name|void
modifier|*
name|core_context
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|dma_map
function_decl|)
parameter_list|(
name|struct
name|sg_table
modifier|*
name|sg_head
parameter_list|,
name|void
modifier|*
name|client_context
parameter_list|,
name|struct
name|device
modifier|*
name|dma_device
parameter_list|,
name|int
name|dmasync
parameter_list|,
name|int
modifier|*
name|nmap
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|dma_unmap
function_decl|)
parameter_list|(
name|struct
name|sg_table
modifier|*
name|sg_head
parameter_list|,
name|void
modifier|*
name|client_context
parameter_list|,
name|struct
name|device
modifier|*
name|dma_device
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|put_pages
function_decl|)
parameter_list|(
name|struct
name|sg_table
modifier|*
name|sg_head
parameter_list|,
name|void
modifier|*
name|client_context
parameter_list|)
function_decl|;
name|unsigned
name|long
function_decl|(
modifier|*
name|get_page_size
function_decl|)
parameter_list|(
name|void
modifier|*
name|client_context
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|release
function_decl|)
parameter_list|(
name|void
modifier|*
name|client_context
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|invalidate_peer_memory
function_decl|)
parameter_list|(
name|void
modifier|*
name|reg_handle
parameter_list|,
name|void
modifier|*
name|core_context
parameter_list|)
function_decl|;
end_typedef

begin_function_decl
name|void
modifier|*
name|ib_register_peer_memory_client
parameter_list|(
name|struct
name|peer_memory_client
modifier|*
name|peer_client
parameter_list|,
name|invalidate_peer_memory
modifier|*
name|invalidate_callback
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ib_unregister_peer_memory_client
parameter_list|(
name|void
modifier|*
name|reg_handle
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

