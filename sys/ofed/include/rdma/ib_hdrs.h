begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright(c) 2016 Intel Corporation.  *  * This file is provided under a dual BSD/GPLv2 license.  When using or  * redistributing this file, you may do so under either license.  *  * GPL LICENSE SUMMARY  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of version 2 of the GNU General Public License as  * published by the Free Software Foundation.  *  * This program is distributed in the hope that it will be useful, but  * WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  * General Public License for more details.  *  * BSD LICENSE  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  *  - Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  - Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in  *    the documentation and/or other materials provided with the  *    distribution.  *  - Neither the name of Intel Corporation nor the names of its  *    contributors may be used to endorse or promote products derived  *    from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|IB_HDRS_H
end_ifndef

begin_define
define|#
directive|define
name|IB_HDRS_H
end_define

begin_include
include|#
directive|include
file|<linux/types.h>
end_include

begin_include
include|#
directive|include
file|<asm/unaligned.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_verbs.h>
end_include

begin_define
define|#
directive|define
name|IB_SEQ_NAK
value|(3<< 29)
end_define

begin_comment
comment|/* AETH NAK opcode values */
end_comment

begin_define
define|#
directive|define
name|IB_RNR_NAK
value|0x20
end_define

begin_define
define|#
directive|define
name|IB_NAK_PSN_ERROR
value|0x60
end_define

begin_define
define|#
directive|define
name|IB_NAK_INVALID_REQUEST
value|0x61
end_define

begin_define
define|#
directive|define
name|IB_NAK_REMOTE_ACCESS_ERROR
value|0x62
end_define

begin_define
define|#
directive|define
name|IB_NAK_REMOTE_OPERATIONAL_ERROR
value|0x63
end_define

begin_define
define|#
directive|define
name|IB_NAK_INVALID_RD_REQUEST
value|0x64
end_define

begin_define
define|#
directive|define
name|IB_BTH_REQ_ACK
value|BIT(31)
end_define

begin_define
define|#
directive|define
name|IB_BTH_SOLICITED
value|BIT(23)
end_define

begin_define
define|#
directive|define
name|IB_BTH_MIG_REQ
value|BIT(22)
end_define

begin_define
define|#
directive|define
name|IB_GRH_VERSION
value|6
end_define

begin_define
define|#
directive|define
name|IB_GRH_VERSION_MASK
value|0xF
end_define

begin_define
define|#
directive|define
name|IB_GRH_VERSION_SHIFT
value|28
end_define

begin_define
define|#
directive|define
name|IB_GRH_TCLASS_MASK
value|0xFF
end_define

begin_define
define|#
directive|define
name|IB_GRH_TCLASS_SHIFT
value|20
end_define

begin_define
define|#
directive|define
name|IB_GRH_FLOW_MASK
value|0xFFFFF
end_define

begin_define
define|#
directive|define
name|IB_GRH_FLOW_SHIFT
value|0
end_define

begin_define
define|#
directive|define
name|IB_GRH_NEXT_HDR
value|0x1B
end_define

begin_struct
struct|struct
name|ib_reth
block|{
name|__be64
name|vaddr
decl_stmt|;
comment|/* potentially unaligned */
name|__be32
name|rkey
decl_stmt|;
name|__be32
name|length
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ib_atomic_eth
block|{
name|__be64
name|vaddr
decl_stmt|;
comment|/* potentially unaligned */
name|__be32
name|rkey
decl_stmt|;
name|__be64
name|swap_data
decl_stmt|;
comment|/* potentially unaligned */
name|__be64
name|compare_data
decl_stmt|;
comment|/* potentially unaligned */
block|}
name|__packed
struct|;
end_struct

begin_union
union|union
name|ib_ehdrs
block|{
struct|struct
block|{
name|__be32
name|deth
index|[
literal|2
index|]
decl_stmt|;
name|__be32
name|imm_data
decl_stmt|;
block|}
name|ud
struct|;
struct|struct
block|{
name|struct
name|ib_reth
name|reth
decl_stmt|;
name|__be32
name|imm_data
decl_stmt|;
block|}
name|rc
struct|;
struct|struct
block|{
name|__be32
name|aeth
decl_stmt|;
name|__be64
name|atomic_ack_eth
decl_stmt|;
comment|/* potentially unaligned */
block|}
name|__packed
name|at
struct|;
name|__be32
name|imm_data
decl_stmt|;
name|__be32
name|aeth
decl_stmt|;
name|__be32
name|ieth
decl_stmt|;
name|struct
name|ib_atomic_eth
name|atomic_eth
decl_stmt|;
block|}
name|__packed
union|;
end_union

begin_struct
struct|struct
name|ib_other_headers
block|{
name|__be32
name|bth
index|[
literal|3
index|]
decl_stmt|;
name|union
name|ib_ehdrs
name|u
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ib_header
block|{
name|__be16
name|lrh
index|[
literal|4
index|]
decl_stmt|;
union|union
block|{
struct|struct
block|{
name|struct
name|ib_grh
name|grh
decl_stmt|;
name|struct
name|ib_other_headers
name|oth
decl_stmt|;
block|}
name|l
struct|;
name|struct
name|ib_other_headers
name|oth
decl_stmt|;
block|}
name|u
union|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* accessors for unaligned __be64 items */
end_comment

begin_function
specifier|static
specifier|inline
name|u64
name|ib_u64_get
parameter_list|(
name|__be64
modifier|*
name|p
parameter_list|)
block|{
return|return
name|get_unaligned_be64
argument_list|(
name|p
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ib_u64_put
parameter_list|(
name|u64
name|val
parameter_list|,
name|__be64
modifier|*
name|p
parameter_list|)
block|{
name|put_unaligned_be64
argument_list|(
name|val
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u64
name|get_ib_reth_vaddr
parameter_list|(
name|struct
name|ib_reth
modifier|*
name|reth
parameter_list|)
block|{
return|return
name|ib_u64_get
argument_list|(
operator|&
name|reth
operator|->
name|vaddr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|put_ib_reth_vaddr
parameter_list|(
name|u64
name|val
parameter_list|,
name|struct
name|ib_reth
modifier|*
name|reth
parameter_list|)
block|{
name|ib_u64_put
argument_list|(
name|val
argument_list|,
operator|&
name|reth
operator|->
name|vaddr
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u64
name|get_ib_ateth_vaddr
parameter_list|(
name|struct
name|ib_atomic_eth
modifier|*
name|ateth
parameter_list|)
block|{
return|return
name|ib_u64_get
argument_list|(
operator|&
name|ateth
operator|->
name|vaddr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|put_ib_ateth_vaddr
parameter_list|(
name|u64
name|val
parameter_list|,
name|struct
name|ib_atomic_eth
modifier|*
name|ateth
parameter_list|)
block|{
name|ib_u64_put
argument_list|(
name|val
argument_list|,
operator|&
name|ateth
operator|->
name|vaddr
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u64
name|get_ib_ateth_swap
parameter_list|(
name|struct
name|ib_atomic_eth
modifier|*
name|ateth
parameter_list|)
block|{
return|return
name|ib_u64_get
argument_list|(
operator|&
name|ateth
operator|->
name|swap_data
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|put_ib_ateth_swap
parameter_list|(
name|u64
name|val
parameter_list|,
name|struct
name|ib_atomic_eth
modifier|*
name|ateth
parameter_list|)
block|{
name|ib_u64_put
argument_list|(
name|val
argument_list|,
operator|&
name|ateth
operator|->
name|swap_data
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u64
name|get_ib_ateth_compare
parameter_list|(
name|struct
name|ib_atomic_eth
modifier|*
name|ateth
parameter_list|)
block|{
return|return
name|ib_u64_get
argument_list|(
operator|&
name|ateth
operator|->
name|compare_data
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|put_ib_ateth_compare
parameter_list|(
name|u64
name|val
parameter_list|,
name|struct
name|ib_atomic_eth
modifier|*
name|ateth
parameter_list|)
block|{
name|ib_u64_put
argument_list|(
name|val
argument_list|,
operator|&
name|ateth
operator|->
name|compare_data
argument_list|)
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* IB_HDRS_H */
end_comment

end_unit

