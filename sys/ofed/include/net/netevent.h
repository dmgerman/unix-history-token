begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2010 Isilon Systems, Inc.  * Copyright (c) 2010 iX Systems, Inc.  * Copyright (c) 2010 Panasas, Inc.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice unmodified, this list of conditions, and the following  *    disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_LINUX_NET_NETEVENT_H_
end_ifndef

begin_define
define|#
directive|define
name|_LINUX_NET_NETEVENT_H_
end_define

begin_include
include|#
directive|include
file|<netinet/if_ether.h>
end_include

begin_enum
enum|enum
name|netevent_notif_type
block|{
name|NETEVENT_NEIGH_UPDATE
init|=
literal|0
block|,
if|#
directive|if
literal|0
comment|/* Unsupported events. */
block|NETEVENT_PMTU_UPDATE,         NETEVENT_REDIRECT,
endif|#
directive|endif
block|}
enum|;
end_enum

begin_struct_decl
struct_decl|struct
name|llentry
struct_decl|;
end_struct_decl

begin_function
specifier|static
specifier|inline
name|void
name|_handle_arp_update_event
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|,
name|struct
name|llentry
modifier|*
name|lle
parameter_list|,
name|int
name|evt
name|__unused
parameter_list|)
block|{
name|struct
name|notifier_block
modifier|*
name|nb
decl_stmt|;
name|nb
operator|=
name|arg
expr_stmt|;
name|nb
operator|->
name|notifier_call
argument_list|(
name|nb
argument_list|,
name|NETEVENT_NEIGH_UPDATE
argument_list|,
name|lle
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|register_netevent_notifier
parameter_list|(
name|struct
name|notifier_block
modifier|*
name|nb
parameter_list|)
block|{
name|nb
operator|->
name|tags
index|[
name|NETEVENT_NEIGH_UPDATE
index|]
operator|=
name|EVENTHANDLER_REGISTER
argument_list|(
name|lle_event
argument_list|,
name|_handle_arp_update_event
argument_list|,
name|nb
argument_list|,
literal|0
argument_list|)
expr_stmt|;
return|return
operator|(
literal|0
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|unregister_netevent_notifier
parameter_list|(
name|struct
name|notifier_block
modifier|*
name|nb
parameter_list|)
block|{
name|EVENTHANDLER_DEREGISTER
argument_list|(
name|lle_event
argument_list|,
name|nb
operator|->
name|tags
index|[
name|NETEVENT_NEIGH_UPDATE
index|]
argument_list|)
expr_stmt|;
return|return
operator|(
literal|0
operator|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _LINUX_NET_NETEVENT_H_ */
end_comment

end_unit

