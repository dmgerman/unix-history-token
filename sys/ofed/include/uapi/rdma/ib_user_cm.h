begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2005 Topspin Communications.  All rights reserved.  * Copyright (c) 2005 Intel Corporation.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|IB_USER_CM_H
end_ifndef

begin_define
define|#
directive|define
name|IB_USER_CM_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|_KERNEL
end_ifdef

begin_include
include|#
directive|include
file|<linux/types.h>
end_include

begin_else
else|#
directive|else
end_else

begin_include
include|#
directive|include
file|<infiniband/types.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<rdma/ib_user_sa.h>
end_include

begin_define
define|#
directive|define
name|IB_USER_CM_ABI_VERSION
value|5
end_define

begin_enum
enum|enum
block|{
name|IB_USER_CM_CMD_CREATE_ID
block|,
name|IB_USER_CM_CMD_DESTROY_ID
block|,
name|IB_USER_CM_CMD_ATTR_ID
block|,
name|IB_USER_CM_CMD_LISTEN
block|,
name|IB_USER_CM_CMD_NOTIFY
block|,
name|IB_USER_CM_CMD_SEND_REQ
block|,
name|IB_USER_CM_CMD_SEND_REP
block|,
name|IB_USER_CM_CMD_SEND_RTU
block|,
name|IB_USER_CM_CMD_SEND_DREQ
block|,
name|IB_USER_CM_CMD_SEND_DREP
block|,
name|IB_USER_CM_CMD_SEND_REJ
block|,
name|IB_USER_CM_CMD_SEND_MRA
block|,
name|IB_USER_CM_CMD_SEND_LAP
block|,
name|IB_USER_CM_CMD_SEND_APR
block|,
name|IB_USER_CM_CMD_SEND_SIDR_REQ
block|,
name|IB_USER_CM_CMD_SEND_SIDR_REP
block|,
name|IB_USER_CM_CMD_EVENT
block|,
name|IB_USER_CM_CMD_INIT_QP_ATTR
block|, }
enum|;
end_enum

begin_comment
comment|/*  * command ABI structures.  */
end_comment

begin_struct
struct|struct
name|ib_ucm_cmd_hdr
block|{
name|__u32
name|cmd
decl_stmt|;
name|__u16
name|in
decl_stmt|;
name|__u16
name|out
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_create_id
block|{
name|__u64
name|uid
decl_stmt|;
name|__u64
name|response
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_create_id_resp
block|{
name|__u32
name|id
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_destroy_id
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|id
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_destroy_id_resp
block|{
name|__u32
name|events_reported
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_attr_id
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|id
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_attr_id_resp
block|{
name|__be64
name|service_id
decl_stmt|;
name|__be64
name|service_mask
decl_stmt|;
name|__be32
name|local_id
decl_stmt|;
name|__be32
name|remote_id
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_init_qp_attr
block|{
name|__u64
name|response
decl_stmt|;
name|__u32
name|id
decl_stmt|;
name|__u32
name|qp_state
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_listen
block|{
name|__be64
name|service_id
decl_stmt|;
name|__be64
name|service_mask
decl_stmt|;
name|__u32
name|id
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_notify
block|{
name|__u32
name|id
decl_stmt|;
name|__u32
name|event
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_private_data
block|{
name|__u64
name|data
decl_stmt|;
name|__u32
name|id
decl_stmt|;
name|__u8
name|len
decl_stmt|;
name|__u8
name|reserved
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_req
block|{
name|__u32
name|id
decl_stmt|;
name|__u32
name|qpn
decl_stmt|;
name|__u32
name|qp_type
decl_stmt|;
name|__u32
name|psn
decl_stmt|;
name|__be64
name|sid
decl_stmt|;
name|__u64
name|data
decl_stmt|;
name|__u64
name|primary_path
decl_stmt|;
name|__u64
name|alternate_path
decl_stmt|;
name|__u8
name|len
decl_stmt|;
name|__u8
name|peer_to_peer
decl_stmt|;
name|__u8
name|responder_resources
decl_stmt|;
name|__u8
name|initiator_depth
decl_stmt|;
name|__u8
name|remote_cm_response_timeout
decl_stmt|;
name|__u8
name|flow_control
decl_stmt|;
name|__u8
name|local_cm_response_timeout
decl_stmt|;
name|__u8
name|retry_count
decl_stmt|;
name|__u8
name|rnr_retry_count
decl_stmt|;
name|__u8
name|max_cm_retries
decl_stmt|;
name|__u8
name|srq
decl_stmt|;
name|__u8
name|reserved
index|[
literal|5
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_rep
block|{
name|__u64
name|uid
decl_stmt|;
name|__u64
name|data
decl_stmt|;
name|__u32
name|id
decl_stmt|;
name|__u32
name|qpn
decl_stmt|;
name|__u32
name|psn
decl_stmt|;
name|__u8
name|len
decl_stmt|;
name|__u8
name|responder_resources
decl_stmt|;
name|__u8
name|initiator_depth
decl_stmt|;
name|__u8
name|target_ack_delay
decl_stmt|;
name|__u8
name|failover_accepted
decl_stmt|;
name|__u8
name|flow_control
decl_stmt|;
name|__u8
name|rnr_retry_count
decl_stmt|;
name|__u8
name|srq
decl_stmt|;
name|__u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_info
block|{
name|__u32
name|id
decl_stmt|;
name|__u32
name|status
decl_stmt|;
name|__u64
name|info
decl_stmt|;
name|__u64
name|data
decl_stmt|;
name|__u8
name|info_len
decl_stmt|;
name|__u8
name|data_len
decl_stmt|;
name|__u8
name|reserved
index|[
literal|6
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_mra
block|{
name|__u64
name|data
decl_stmt|;
name|__u32
name|id
decl_stmt|;
name|__u8
name|len
decl_stmt|;
name|__u8
name|timeout
decl_stmt|;
name|__u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_lap
block|{
name|__u64
name|path
decl_stmt|;
name|__u64
name|data
decl_stmt|;
name|__u32
name|id
decl_stmt|;
name|__u8
name|len
decl_stmt|;
name|__u8
name|reserved
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_sidr_req
block|{
name|__u32
name|id
decl_stmt|;
name|__u32
name|timeout
decl_stmt|;
name|__be64
name|sid
decl_stmt|;
name|__u64
name|data
decl_stmt|;
name|__u64
name|path
decl_stmt|;
name|__u16
name|reserved_pkey
decl_stmt|;
name|__u8
name|len
decl_stmt|;
name|__u8
name|max_cm_retries
decl_stmt|;
name|__u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_sidr_rep
block|{
name|__u32
name|id
decl_stmt|;
name|__u32
name|qpn
decl_stmt|;
name|__u32
name|qkey
decl_stmt|;
name|__u32
name|status
decl_stmt|;
name|__u64
name|info
decl_stmt|;
name|__u64
name|data
decl_stmt|;
name|__u8
name|info_len
decl_stmt|;
name|__u8
name|data_len
decl_stmt|;
name|__u8
name|reserved
index|[
literal|6
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * event notification ABI structures.  */
end_comment

begin_struct
struct|struct
name|ib_ucm_event_get
block|{
name|__u64
name|response
decl_stmt|;
name|__u64
name|data
decl_stmt|;
name|__u64
name|info
decl_stmt|;
name|__u8
name|data_len
decl_stmt|;
name|__u8
name|info_len
decl_stmt|;
name|__u8
name|reserved
index|[
literal|6
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_req_event_resp
block|{
name|struct
name|ib_user_path_rec
name|primary_path
decl_stmt|;
name|struct
name|ib_user_path_rec
name|alternate_path
decl_stmt|;
name|__be64
name|remote_ca_guid
decl_stmt|;
name|__u32
name|remote_qkey
decl_stmt|;
name|__u32
name|remote_qpn
decl_stmt|;
name|__u32
name|qp_type
decl_stmt|;
name|__u32
name|starting_psn
decl_stmt|;
name|__u8
name|responder_resources
decl_stmt|;
name|__u8
name|initiator_depth
decl_stmt|;
name|__u8
name|local_cm_response_timeout
decl_stmt|;
name|__u8
name|flow_control
decl_stmt|;
name|__u8
name|remote_cm_response_timeout
decl_stmt|;
name|__u8
name|retry_count
decl_stmt|;
name|__u8
name|rnr_retry_count
decl_stmt|;
name|__u8
name|srq
decl_stmt|;
name|__u8
name|port
decl_stmt|;
name|__u8
name|reserved
index|[
literal|7
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_rep_event_resp
block|{
name|__be64
name|remote_ca_guid
decl_stmt|;
name|__u32
name|remote_qkey
decl_stmt|;
name|__u32
name|remote_qpn
decl_stmt|;
name|__u32
name|starting_psn
decl_stmt|;
name|__u8
name|responder_resources
decl_stmt|;
name|__u8
name|initiator_depth
decl_stmt|;
name|__u8
name|target_ack_delay
decl_stmt|;
name|__u8
name|failover_accepted
decl_stmt|;
name|__u8
name|flow_control
decl_stmt|;
name|__u8
name|rnr_retry_count
decl_stmt|;
name|__u8
name|srq
decl_stmt|;
name|__u8
name|reserved
index|[
literal|5
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_rej_event_resp
block|{
name|__u32
name|reason
decl_stmt|;
comment|/* ari in ib_ucm_event_get info field. */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_mra_event_resp
block|{
name|__u8
name|timeout
decl_stmt|;
name|__u8
name|reserved
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_lap_event_resp
block|{
name|struct
name|ib_user_path_rec
name|path
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_apr_event_resp
block|{
name|__u32
name|status
decl_stmt|;
comment|/* apr info in ib_ucm_event_get info field. */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_sidr_req_event_resp
block|{
name|__u16
name|pkey
decl_stmt|;
name|__u8
name|port
decl_stmt|;
name|__u8
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ib_ucm_sidr_rep_event_resp
block|{
name|__u32
name|status
decl_stmt|;
name|__u32
name|qkey
decl_stmt|;
name|__u32
name|qpn
decl_stmt|;
comment|/* info in ib_ucm_event_get info field. */
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|IB_UCM_PRES_DATA
value|0x01
end_define

begin_define
define|#
directive|define
name|IB_UCM_PRES_INFO
value|0x02
end_define

begin_define
define|#
directive|define
name|IB_UCM_PRES_PRIMARY
value|0x04
end_define

begin_define
define|#
directive|define
name|IB_UCM_PRES_ALTERNATE
value|0x08
end_define

begin_struct
struct|struct
name|ib_ucm_event_resp
block|{
name|__u64
name|uid
decl_stmt|;
name|__u32
name|id
decl_stmt|;
name|__u32
name|event
decl_stmt|;
name|__u32
name|present
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
union|union
block|{
name|struct
name|ib_ucm_req_event_resp
name|req_resp
decl_stmt|;
name|struct
name|ib_ucm_rep_event_resp
name|rep_resp
decl_stmt|;
name|struct
name|ib_ucm_rej_event_resp
name|rej_resp
decl_stmt|;
name|struct
name|ib_ucm_mra_event_resp
name|mra_resp
decl_stmt|;
name|struct
name|ib_ucm_lap_event_resp
name|lap_resp
decl_stmt|;
name|struct
name|ib_ucm_apr_event_resp
name|apr_resp
decl_stmt|;
name|struct
name|ib_ucm_sidr_req_event_resp
name|sidr_req_resp
decl_stmt|;
name|struct
name|ib_ucm_sidr_rep_event_resp
name|sidr_rep_resp
decl_stmt|;
name|__u32
name|send_status
decl_stmt|;
block|}
name|u
union|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* IB_USER_CM_H */
end_comment

end_unit

