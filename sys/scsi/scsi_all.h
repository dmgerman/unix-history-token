begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * SCSI general  interface description  */
end_comment

begin_comment
comment|/*  * Largely written by Julian Elischer (julian@tfs.com)  * for TRW Financial Systems.  *  * TRW Financial Systems, in accordance with their agreement with Carnegie  * Mellon University, makes this software available to CMU to distribute  * or use in any manner that they see fit as long as this message is kept with   * the software. For this reason TFS also grants any other persons or  * organisations permission to use or modify this software.  *  * TFS supplies this software to be publicly redistributed  * on the understanding that TFS is not responsible for the correct  * functioning of this software in any circumstances.  *  * Ported to run under 386BSD by Julian Elischer (julian@tfs.com) Sept 1992  *  *	$Id: scsi_all.h,v 1.4 1993/08/21 20:01:51 rgrimes Exp $  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SCSI_SCSI_ALL_H_
end_ifndef

begin_define
define|#
directive|define
name|_SCSI_SCSI_ALL_H_
value|1
end_define

begin_comment
comment|/*  * SCSI command format  */
end_comment

begin_comment
comment|/*  * Define dome bits that are in ALL (or a lot of) scsi commands  */
end_comment

begin_define
define|#
directive|define
name|SCSI_CTL_LINK
value|0x01
end_define

begin_define
define|#
directive|define
name|SCSI_CTL_FLAG
value|0x02
end_define

begin_define
define|#
directive|define
name|SCSI_CTL_VENDOR
value|0xC0
end_define

begin_define
define|#
directive|define
name|SCSI_CMD_LUN
value|0xA0
end_define

begin_comment
comment|/*these two should not be needed*/
end_comment

begin_define
define|#
directive|define
name|SCSI_CMD_LUN_SHIFT
value|5
end_define

begin_comment
comment|/* LUN in the cmd is no longer SCSI */
end_comment

begin_struct
struct|struct
name|scsi_generic
block|{
name|u_char
name|opcode
decl_stmt|;
name|u_char
name|bytes
index|[
literal|11
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_test_unit_ready
block|{
name|u_char
name|op_code
decl_stmt|;
name|u_char
name|byte2
decl_stmt|;
name|u_char
name|unused
index|[
literal|3
index|]
decl_stmt|;
name|u_char
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_send_diag
block|{
name|u_char
name|op_code
decl_stmt|;
name|u_char
name|byte2
decl_stmt|;
define|#
directive|define
name|SSD_UOL
value|0x01
define|#
directive|define
name|SSD_DOL
value|0x02
define|#
directive|define
name|SSD_SELFTEST
value|0x04
define|#
directive|define
name|SSD_PF
value|0x10
name|u_char
name|unused
index|[
literal|1
index|]
decl_stmt|;
name|u_char
name|paramlen
index|[
literal|2
index|]
decl_stmt|;
name|u_char
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_sense
block|{
name|u_char
name|op_code
decl_stmt|;
name|u_char
name|byte2
decl_stmt|;
name|u_char
name|unused
index|[
literal|2
index|]
decl_stmt|;
name|u_char
name|length
decl_stmt|;
name|u_char
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_inquiry
block|{
name|u_char
name|op_code
decl_stmt|;
name|u_char
name|byte2
decl_stmt|;
name|u_char
name|unused
index|[
literal|2
index|]
decl_stmt|;
name|u_char
name|length
decl_stmt|;
name|u_char
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_mode_sense
block|{
name|u_char
name|op_code
decl_stmt|;
name|u_char
name|byte2
decl_stmt|;
define|#
directive|define
name|SMS_DBD
value|0x08
name|u_char
name|page
decl_stmt|;
define|#
directive|define
name|SMS_PAGE_CODE
value|0x3F
define|#
directive|define
name|SMS_PAGE_CTRL
value|0xC0
define|#
directive|define
name|SMS_PAGE_CTRL_CURRENT
value|0x00
define|#
directive|define
name|SMS_PAGE_CTRL_CHANGEABLE
value|0x40
define|#
directive|define
name|SMS_PAGE_CTRL_DEFAULT
value|0x80
define|#
directive|define
name|SMS_PAGE_CTRL_SAVED
value|0xC0
name|u_char
name|unused
decl_stmt|;
name|u_char
name|length
decl_stmt|;
name|u_char
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_mode_sense_big
block|{
name|u_char
name|op_code
decl_stmt|;
name|u_char
name|byte2
decl_stmt|;
comment|/* same bits as small version */
name|u_char
name|page
decl_stmt|;
comment|/* same bits as small version */
name|u_char
name|unused
index|[
literal|4
index|]
decl_stmt|;
name|u_char
name|length
index|[
literal|2
index|]
decl_stmt|;
name|u_char
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_mode_select
block|{
name|u_char
name|op_code
decl_stmt|;
name|u_char
name|byte2
decl_stmt|;
define|#
directive|define
name|SMS_SP
value|0x01
define|#
directive|define
name|SMS_PF
value|0x10
name|u_char
name|unused
index|[
literal|2
index|]
decl_stmt|;
name|u_char
name|length
decl_stmt|;
name|u_char
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_mode_select_big
block|{
name|u_char
name|op_code
decl_stmt|;
name|u_char
name|byte2
decl_stmt|;
comment|/* same bits as small version */
name|u_char
name|unused
index|[
literal|5
index|]
decl_stmt|;
name|u_char
name|length
index|[
literal|2
index|]
decl_stmt|;
name|u_char
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_reserve
block|{
name|u_char
name|op_code
decl_stmt|;
name|u_char
name|byte2
decl_stmt|;
name|u_char
name|unused
index|[
literal|2
index|]
decl_stmt|;
name|u_char
name|length
decl_stmt|;
name|u_char
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_release
block|{
name|u_char
name|op_code
decl_stmt|;
name|u_char
name|byte2
decl_stmt|;
name|u_char
name|unused
index|[
literal|2
index|]
decl_stmt|;
name|u_char
name|length
decl_stmt|;
name|u_char
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_prevent
block|{
name|u_char
name|op_code
decl_stmt|;
name|u_char
name|byte2
decl_stmt|;
name|u_char
name|unused
index|[
literal|2
index|]
decl_stmt|;
name|u_char
name|how
decl_stmt|;
name|u_char
name|control
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|PR_PREVENT
value|0x01
end_define

begin_define
define|#
directive|define
name|PR_ALLOW
value|0x00
end_define

begin_comment
comment|/*  * Opcodes  */
end_comment

begin_define
define|#
directive|define
name|TEST_UNIT_READY
value|0x00
end_define

begin_define
define|#
directive|define
name|REQUEST_SENSE
value|0x03
end_define

begin_define
define|#
directive|define
name|INQUIRY
value|0x12
end_define

begin_define
define|#
directive|define
name|MODE_SELECT
value|0x15
end_define

begin_define
define|#
directive|define
name|MODE_SENSE
value|0x1a
end_define

begin_define
define|#
directive|define
name|START_STOP
value|0x1b
end_define

begin_define
define|#
directive|define
name|RESERVE
value|0x16
end_define

begin_define
define|#
directive|define
name|RELEASE
value|0x17
end_define

begin_define
define|#
directive|define
name|PREVENT_ALLOW
value|0x1e
end_define

begin_define
define|#
directive|define
name|POSITION_TO_ELEMENT
value|0x2b
end_define

begin_define
define|#
directive|define
name|MODE_SENSE_BIG
value|0x54
end_define

begin_define
define|#
directive|define
name|MODE_SELECT_BIG
value|0x55
end_define

begin_define
define|#
directive|define
name|MOVE_MEDIUM
value|0xa5
end_define

begin_define
define|#
directive|define
name|READ_ELEMENT_STATUS
value|0xb8
end_define

begin_comment
comment|/*  * sense data format  */
end_comment

begin_define
define|#
directive|define
name|T_DIRECT
value|0
end_define

begin_define
define|#
directive|define
name|T_SEQUENTIAL
value|1
end_define

begin_define
define|#
directive|define
name|T_PRINTER
value|2
end_define

begin_define
define|#
directive|define
name|T_PROCESSOR
value|3
end_define

begin_define
define|#
directive|define
name|T_WORM
value|4
end_define

begin_define
define|#
directive|define
name|T_READONLY
value|5
end_define

begin_define
define|#
directive|define
name|T_SCANNER
value|6
end_define

begin_define
define|#
directive|define
name|T_OPTICAL
value|7
end_define

begin_define
define|#
directive|define
name|T_NODEVICE
value|0x1F
end_define

begin_define
define|#
directive|define
name|T_CHANGER
value|8
end_define

begin_define
define|#
directive|define
name|T_COMM
value|9
end_define

begin_define
define|#
directive|define
name|T_REMOV
value|1
end_define

begin_define
define|#
directive|define
name|T_FIXED
value|0
end_define

begin_struct
struct|struct
name|scsi_inquiry_data
block|{
name|u_char
name|device
decl_stmt|;
define|#
directive|define
name|SID_TYPE
value|0x1F
define|#
directive|define
name|SID_QUAL
value|0xE0
define|#
directive|define
name|SID_QUAL_LU_OK
value|0x00
define|#
directive|define
name|SID_QUAL_LU_OFFLINE
value|0x20
define|#
directive|define
name|SID_QUAL_RSVD
value|0x40
define|#
directive|define
name|SID_QUAL_BAD_LU
value|0x60
name|u_char
name|dev_qual2
decl_stmt|;
define|#
directive|define
name|SID_QUAL2
value|0x7F
define|#
directive|define
name|SID_REMOVABLE
value|0x80
name|u_char
name|version
decl_stmt|;
define|#
directive|define
name|SID_ANSII
value|0x07
define|#
directive|define
name|SID_ECMA
value|0x38
define|#
directive|define
name|SID_ISO
value|0xC0
name|u_char
name|response_format
decl_stmt|;
name|u_char
name|additional_length
decl_stmt|;
name|u_char
name|unused
index|[
literal|2
index|]
decl_stmt|;
name|u_char
name|flags
decl_stmt|;
define|#
directive|define
name|SID_SftRe
value|0x01
define|#
directive|define
name|SID_CmdQue
value|0x02
define|#
directive|define
name|SID_Linked
value|0x08
define|#
directive|define
name|SID_Sync
value|0x10
define|#
directive|define
name|SID_WBus16
value|0x20
define|#
directive|define
name|SID_WBus32
value|0x40
define|#
directive|define
name|SID_RelAdr
value|0x80
name|char
name|vendor
index|[
literal|8
index|]
decl_stmt|;
name|char
name|product
index|[
literal|16
index|]
decl_stmt|;
name|char
name|revision
index|[
literal|4
index|]
decl_stmt|;
name|u_char
name|extra
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_sense_data
block|{
name|u_char
name|error_code
decl_stmt|;
comment|/* same bits as new version */
union|union
block|{
struct|struct
block|{
name|u_char
name|blockhi
decl_stmt|;
name|u_char
name|blockmed
decl_stmt|;
name|u_char
name|blocklow
decl_stmt|;
block|}
name|unextended
struct|;
struct|struct
block|{
name|u_char
name|segment
decl_stmt|;
name|u_char
name|flags
decl_stmt|;
comment|/* same bits as new version */
name|u_char
name|info
index|[
literal|4
index|]
decl_stmt|;
name|u_char
name|extra_len
decl_stmt|;
comment|/* allocate enough room to hold new stuff 			( by increasing 16 to 26 below) */
name|u_char
name|extra_bytes
index|[
literal|26
index|]
decl_stmt|;
block|}
name|extended
struct|;
block|}
name|ext
union|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_sense_data_new
block|{
name|u_char
name|error_code
decl_stmt|;
define|#
directive|define
name|SSD_ERRCODE
value|0x7F
define|#
directive|define
name|SSD_ERRCODE_VALID
value|0x80
union|union
block|{
struct|struct
comment|/* this is depreciated, the standard says "DON'T"*/
block|{
name|u_char
name|blockhi
decl_stmt|;
name|u_char
name|blockmed
decl_stmt|;
name|u_char
name|blocklow
decl_stmt|;
block|}
name|unextended
struct|;
struct|struct
block|{
name|u_char
name|segment
decl_stmt|;
name|u_char
name|flags
decl_stmt|;
define|#
directive|define
name|SSD_KEY
value|0x0F
define|#
directive|define
name|SSD_ILI
value|0x20
define|#
directive|define
name|SSD_EOM
value|0x40
define|#
directive|define
name|SSD_FILEMARK
value|0x80
name|u_char
name|info
index|[
literal|4
index|]
decl_stmt|;
name|u_char
name|extra_len
decl_stmt|;
name|u_char
name|cmd_spec_info
index|[
literal|4
index|]
decl_stmt|;
name|u_char
name|add_sense_code
decl_stmt|;
name|u_char
name|add_sense_code_qual
decl_stmt|;
name|u_char
name|fru
decl_stmt|;
name|u_char
name|sense_key_spec_1
decl_stmt|;
define|#
directive|define
name|SSD_SCS_VALID
value|0x80
name|u_char
name|sense_key_spec_2
decl_stmt|;
name|u_char
name|sense_key_spec_3
decl_stmt|;
name|u_char
name|extra_bytes
index|[
literal|16
index|]
decl_stmt|;
block|}
name|extended
struct|;
block|}
name|ext
union|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|blk_desc
block|{
name|u_char
name|density
decl_stmt|;
name|u_char
name|nblocks
index|[
literal|3
index|]
decl_stmt|;
name|u_char
name|reserved
decl_stmt|;
name|u_char
name|blklen
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_mode_header
block|{
name|u_char
name|data_length
decl_stmt|;
comment|/* Sense data length */
name|u_char
name|medium_type
decl_stmt|;
name|u_char
name|dev_spec
decl_stmt|;
name|u_char
name|blk_desc_len
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|scsi_mode_header_big
block|{
name|u_char
name|data_length
index|[
literal|2
index|]
decl_stmt|;
comment|/* Sense data length */
name|u_char
name|medium_type
decl_stmt|;
name|u_char
name|dev_spec
decl_stmt|;
name|u_char
name|unused
index|[
literal|2
index|]
decl_stmt|;
name|u_char
name|blk_desc_len
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Status Byte  */
end_comment

begin_define
define|#
directive|define
name|SCSI_OK
value|0x00
end_define

begin_define
define|#
directive|define
name|SCSI_CHECK
value|0x02
end_define

begin_define
define|#
directive|define
name|SCSI_BUSY
value|0x08
end_define

begin_define
define|#
directive|define
name|SCSI_INTERM
value|0x10
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SCSI_SCSI_ALL_H_ */
end_comment

end_unit

