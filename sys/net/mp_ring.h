begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2014 Chelsio Communications, Inc.  * All rights reserved.  * Written by: Navdeep Parhar<np@FreeBSD.org>  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__NET_MP_RING_H
end_ifndef

begin_define
define|#
directive|define
name|__NET_MP_RING_H
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|_KERNEL
end_ifndef

begin_error
error|#
directive|error
literal|"no user-serviceable parts inside"
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_struct_decl
struct_decl|struct
name|ifmp_ring
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|u_int
function_decl|(
modifier|*
name|mp_ring_drain_t
function_decl|)
parameter_list|(
name|struct
name|ifmp_ring
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|u_int
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|u_int
function_decl|(
modifier|*
name|mp_ring_can_drain_t
function_decl|)
parameter_list|(
name|struct
name|ifmp_ring
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|mp_ring_serial_t
function_decl|)
parameter_list|(
name|struct
name|ifmp_ring
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|ifmp_ring
block|{
specifier|volatile
name|uint64_t
name|state
name|__aligned
parameter_list|(
name|CACHE_LINE_SIZE
parameter_list|)
function_decl|;
name|int
name|size
name|__aligned
parameter_list|(
name|CACHE_LINE_SIZE
parameter_list|)
function_decl|;
name|void
modifier|*
name|cookie
decl_stmt|;
name|struct
name|malloc_type
modifier|*
name|mt
decl_stmt|;
name|mp_ring_drain_t
name|drain
decl_stmt|;
name|mp_ring_can_drain_t
name|can_drain
decl_stmt|;
comment|/* cheap, may be unreliable */
name|counter_u64_t
name|enqueues
decl_stmt|;
name|counter_u64_t
name|drops
decl_stmt|;
name|counter_u64_t
name|starts
decl_stmt|;
name|counter_u64_t
name|stalls
decl_stmt|;
name|counter_u64_t
name|restarts
decl_stmt|;
comment|/* recovered after stalling */
name|counter_u64_t
name|abdications
decl_stmt|;
ifdef|#
directive|ifdef
name|NO_64BIT_ATOMICS
name|struct
name|mtx
name|lock
decl_stmt|;
endif|#
directive|endif
name|void
modifier|*
specifier|volatile
name|items
index|[]
name|__aligned
parameter_list|(
name|CACHE_LINE_SIZE
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|ifmp_ring_alloc
parameter_list|(
name|struct
name|ifmp_ring
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|mp_ring_drain_t
parameter_list|,
name|mp_ring_can_drain_t
parameter_list|,
name|struct
name|malloc_type
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ifmp_ring_free
parameter_list|(
name|struct
name|ifmp_ring
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ifmp_ring_enqueue
parameter_list|(
name|struct
name|ifmp_ring
modifier|*
parameter_list|,
name|void
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ifmp_ring_check_drainage
parameter_list|(
name|struct
name|ifmp_ring
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ifmp_ring_reset_stats
parameter_list|(
name|struct
name|ifmp_ring
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ifmp_ring_is_idle
parameter_list|(
name|struct
name|ifmp_ring
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ifmp_ring_is_stalled
parameter_list|(
name|struct
name|ifmp_ring
modifier|*
name|r
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

