begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*    Broadcom B43 wireless driver    N-PHY core code.    Copyright (c) 2008 Michael Buesch<m@bues.ch>   Copyright (c) 2010 RafaÅ MiÅecki<zajec5@gmail.com>   Copyright (c) 2016 Adrian Chadd<adrian@FreeBSD.org>    This program is free software; you can redistribute it and/or modify   it under the terms of the GNU General Public License as published by   the Free Software Foundation; either version 2 of the License, or   (at your option) any later version.    This program is distributed in the hope that it will be useful,   but WITHOUT ANY WARRANTY; without even the implied warranty of   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   GNU General Public License for more details.    You should have received a copy of the GNU General Public License   along with this program; see the file COPYING.  If not, write to   the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,   Boston, MA 02110-1301, USA.  */
end_comment

begin_comment
comment|/*  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__IF_BWN_PHY_N_CORE_H__
end_ifndef

begin_define
define|#
directive|define
name|__IF_BWN_PHY_N_CORE_H__
end_define

begin_struct_decl
struct_decl|struct
name|bwn_mac
struct_decl|;
end_struct_decl

begin_enum
enum|enum
name|b43_nphy_spur_avoid
block|{
name|BWN_SPUR_AVOID_DISABLE
block|,
name|BWN_SPUR_AVOID_AUTO
block|,
name|BWN_SPUR_AVOID_FORCE
block|, }
enum|;
end_enum

begin_comment
comment|/*  * TODO: determine whether center_freq is the primary  * channel centre frequency or the actual centre centre  * frequency (eg radio tuning.)  It /looks/ like it's  * actual channel centre.  */
end_comment

begin_struct
struct|struct
name|bwn_chanspec
block|{
name|uint16_t
name|center_freq
decl_stmt|;
comment|/* This is HT40U, HT40D, HT20, no-HT 20, etc */
name|bwn_chan_type_t
name|channel_type
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bwn_phy_n_iq_comp
block|{
name|int16_t
name|a0
decl_stmt|;
name|int16_t
name|b0
decl_stmt|;
name|int16_t
name|a1
decl_stmt|;
name|int16_t
name|b1
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bwn_phy_n_rssical_cache
block|{
name|uint16_t
name|rssical_radio_regs_2G
index|[
literal|2
index|]
decl_stmt|;
name|uint16_t
name|rssical_phy_regs_2G
index|[
literal|12
index|]
decl_stmt|;
name|uint16_t
name|rssical_radio_regs_5G
index|[
literal|2
index|]
decl_stmt|;
name|uint16_t
name|rssical_phy_regs_5G
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bwn_phy_n_cal_cache
block|{
name|uint16_t
name|txcal_radio_regs_2G
index|[
literal|8
index|]
decl_stmt|;
name|uint16_t
name|txcal_coeffs_2G
index|[
literal|8
index|]
decl_stmt|;
name|struct
name|bwn_phy_n_iq_comp
name|rxcal_coeffs_2G
decl_stmt|;
name|uint16_t
name|txcal_radio_regs_5G
index|[
literal|8
index|]
decl_stmt|;
name|uint16_t
name|txcal_coeffs_5G
index|[
literal|8
index|]
decl_stmt|;
name|struct
name|bwn_phy_n_iq_comp
name|rxcal_coeffs_5G
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bwn_phy_n_txpwrindex
block|{
name|int8_t
name|index
decl_stmt|;
name|int8_t
name|index_internal
decl_stmt|;
name|int8_t
name|index_internal_save
decl_stmt|;
name|uint16_t
name|AfectrlOverride
decl_stmt|;
name|uint16_t
name|AfeCtrlDacGain
decl_stmt|;
name|uint16_t
name|rad_gain
decl_stmt|;
name|uint8_t
name|bbmult
decl_stmt|;
name|uint16_t
name|iqcomp_a
decl_stmt|;
name|uint16_t
name|iqcomp_b
decl_stmt|;
name|uint16_t
name|locomp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bwn_phy_n_pwr_ctl_info
block|{
name|uint8_t
name|idle_tssi_2g
decl_stmt|;
name|uint8_t
name|idle_tssi_5g
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bwn_phy_n
block|{
name|uint8_t
name|antsel_type
decl_stmt|;
name|uint8_t
name|cal_orig_pwr_idx
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|measure_hold
decl_stmt|;
name|uint8_t
name|phyrxchain
decl_stmt|;
name|uint8_t
name|hw_phyrxchain
decl_stmt|;
name|uint8_t
name|hw_phytxchain
decl_stmt|;
name|uint8_t
name|perical
decl_stmt|;
name|uint32_t
name|deaf_count
decl_stmt|;
name|uint32_t
name|rxcalparams
decl_stmt|;
name|bool
name|hang_avoid
decl_stmt|;
name|bool
name|mute
decl_stmt|;
name|uint16_t
name|papd_epsilon_offset
index|[
literal|2
index|]
decl_stmt|;
name|int32_t
name|preamble_override
decl_stmt|;
name|uint32_t
name|bb_mult_save
decl_stmt|;
name|bool
name|gain_boost
decl_stmt|;
name|bool
name|elna_gain_config
decl_stmt|;
name|bool
name|band5g_pwrgain
decl_stmt|;
name|bool
name|use_int_tx_iq_lo_cal
decl_stmt|;
name|bool
name|lpf_bw_overrode_for_sample_play
decl_stmt|;
name|uint8_t
name|mphase_cal_phase_id
decl_stmt|;
name|uint16_t
name|mphase_txcal_cmdidx
decl_stmt|;
name|uint16_t
name|mphase_txcal_numcmds
decl_stmt|;
name|uint16_t
name|mphase_txcal_bestcoeffs
index|[
literal|11
index|]
decl_stmt|;
name|bool
name|txpwrctrl
decl_stmt|;
name|bool
name|pwg_gain_5ghz
decl_stmt|;
name|uint8_t
name|tx_pwr_idx
index|[
literal|2
index|]
decl_stmt|;
name|int8_t
name|tx_power_offset
index|[
literal|101
index|]
decl_stmt|;
name|uint16_t
name|adj_pwr_tbl
index|[
literal|84
index|]
decl_stmt|;
name|uint16_t
name|txcal_bbmult
decl_stmt|;
name|uint16_t
name|txiqlocal_bestc
index|[
literal|11
index|]
decl_stmt|;
name|bool
name|txiqlocal_coeffsvalid
decl_stmt|;
name|struct
name|bwn_phy_n_txpwrindex
name|txpwrindex
index|[
literal|2
index|]
decl_stmt|;
name|struct
name|bwn_phy_n_pwr_ctl_info
name|pwr_ctl_info
index|[
literal|2
index|]
decl_stmt|;
name|struct
name|bwn_chanspec
name|txiqlocal_chanspec
decl_stmt|;
name|struct
name|bwn_ppr
name|tx_pwr_max_ppr
decl_stmt|;
name|uint16_t
name|tx_pwr_last_recalc_freq
decl_stmt|;
name|int
name|tx_pwr_last_recalc_limit
decl_stmt|;
name|uint8_t
name|txrx_chain
decl_stmt|;
name|uint16_t
name|tx_rx_cal_phy_saveregs
index|[
literal|11
index|]
decl_stmt|;
name|uint16_t
name|tx_rx_cal_radio_saveregs
index|[
literal|22
index|]
decl_stmt|;
name|uint16_t
name|rfctrl_intc1_save
decl_stmt|;
name|uint16_t
name|rfctrl_intc2_save
decl_stmt|;
name|uint16_t
name|classifier_state
decl_stmt|;
name|uint16_t
name|clip_state
index|[
literal|2
index|]
decl_stmt|;
name|enum
name|b43_nphy_spur_avoid
name|spur_avoid
decl_stmt|;
name|bool
name|aband_spurwar_en
decl_stmt|;
name|bool
name|gband_spurwar_en
decl_stmt|;
name|bool
name|ipa2g_on
decl_stmt|;
name|struct
name|bwn_chanspec
name|iqcal_chanspec_2G
decl_stmt|;
name|struct
name|bwn_chanspec
name|rssical_chanspec_2G
decl_stmt|;
name|bool
name|ipa5g_on
decl_stmt|;
name|struct
name|bwn_chanspec
name|iqcal_chanspec_5G
decl_stmt|;
name|struct
name|bwn_chanspec
name|rssical_chanspec_5G
decl_stmt|;
name|struct
name|bwn_phy_n_rssical_cache
name|rssical_cache
decl_stmt|;
name|struct
name|bwn_phy_n_cal_cache
name|cal_cache
decl_stmt|;
name|bool
name|crsminpwr_adjusted
decl_stmt|;
name|bool
name|noisevars_adjusted
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
specifier|extern
name|bwn_txpwr_result_t
name|bwn_nphy_op_recalc_txpower
parameter_list|(
name|struct
name|bwn_mac
modifier|*
name|mac
parameter_list|,
name|bool
name|ignore_tssi
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|bwn_nphy_op_allocate
parameter_list|(
name|struct
name|bwn_mac
modifier|*
name|mac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|bwn_nphy_op_prepare_structs
parameter_list|(
name|struct
name|bwn_mac
modifier|*
name|mac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|bwn_nphy_op_free
parameter_list|(
name|struct
name|bwn_mac
modifier|*
name|mac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|bwn_nphy_op_init
parameter_list|(
name|struct
name|bwn_mac
modifier|*
name|mac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|bwn_nphy_op_maskset
parameter_list|(
name|struct
name|bwn_mac
modifier|*
name|mac
parameter_list|,
name|uint16_t
name|reg
parameter_list|,
name|uint16_t
name|mask
parameter_list|,
name|uint16_t
name|set
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|uint16_t
name|bwn_nphy_op_radio_read
parameter_list|(
name|struct
name|bwn_mac
modifier|*
name|mac
parameter_list|,
name|uint16_t
name|reg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|bwn_nphy_op_radio_write
parameter_list|(
name|struct
name|bwn_mac
modifier|*
name|mac
parameter_list|,
name|uint16_t
name|reg
parameter_list|,
name|uint16_t
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|bwn_nphy_op_software_rfkill
parameter_list|(
name|struct
name|bwn_mac
modifier|*
name|mac
parameter_list|,
name|bool
name|blocked
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|bwn_nphy_op_switch_analog
parameter_list|(
name|struct
name|bwn_mac
modifier|*
name|mac
parameter_list|,
name|bool
name|on
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|bwn_nphy_op_switch_channel
parameter_list|(
name|struct
name|bwn_mac
modifier|*
name|mac
parameter_list|,
name|unsigned
name|int
name|new_channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|unsigned
name|int
name|bwn_nphy_op_get_default_chan
parameter_list|(
name|struct
name|bwn_mac
modifier|*
name|mac
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __IF_BWN_PHY_N_CORE_H__ */
end_comment

end_unit

