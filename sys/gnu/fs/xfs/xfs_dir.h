begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.  *  * This program is free software; you can redistribute it and/or modify it  * under the terms of version 2 of the GNU General Public License as  * published by the Free Software Foundation.  *  * This program is distributed in the hope that it would be useful, but  * WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  *  * Further, this software is distributed without any warranty that it is  * free of the rightful claim of any third person regarding infringement  * or the like.  Any license provided herein, whether implied or  * otherwise, applies only to this software file.  Patent licenses, if  * any, provided herein do not apply to combinations of this program with  * other software, or any other product whatsoever.  *  * You should have received a copy of the GNU General Public License along  * with this program; if not, write the Free Software Foundation, Inc., 59  * Temple Place - Suite 330, Boston MA 02111-1307, USA.  *  * Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,  * Mountain View, CA  94043, or:  *  * http://www.sgi.com  *  * For further information regarding this notice, see:  *  * http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__XFS_DIR_H__
end_ifndef

begin_define
define|#
directive|define
name|__XFS_DIR_H__
end_define

begin_comment
comment|/*  * Large directories are structured around Btrees where all the data  * elements are in the leaf nodes.  Filenames are hashed into an int,  * then that int is used as the index into the Btree.  Since the hashval  * of a filename may not be unique, we may have duplicate keys.  The  * internal links in the Btree are logical block offsets into the file.  *  * Small directories use a different format and are packed as tightly  * as possible so as to fit into the literal area of the inode.  */
end_comment

begin_comment
comment|/*========================================================================  * Function prototypes for the kernel.  *========================================================================*/
end_comment

begin_struct_decl
struct_decl|struct
name|uio
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|xfs_bmap_free
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|xfs_da_args
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|xfs_dinode
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|xfs_inode
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|xfs_mount
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|xfs_trans
struct_decl|;
end_struct_decl

begin_comment
comment|/*  * Directory function types.  * Put in structures (xfs_dirops_t) for v1 and v2 directories.  */
end_comment

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|xfs_dir_mount_t
function_decl|)
parameter_list|(
name|struct
name|xfs_mount
modifier|*
name|mp
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|xfs_dir_isempty_t
function_decl|)
parameter_list|(
name|struct
name|xfs_inode
modifier|*
name|dp
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|xfs_dir_init_t
function_decl|)
parameter_list|(
name|struct
name|xfs_trans
modifier|*
name|tp
parameter_list|,
name|struct
name|xfs_inode
modifier|*
name|dp
parameter_list|,
name|struct
name|xfs_inode
modifier|*
name|pdp
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|xfs_dir_createname_t
function_decl|)
parameter_list|(
name|struct
name|xfs_trans
modifier|*
name|tp
parameter_list|,
name|struct
name|xfs_inode
modifier|*
name|dp
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|,
name|xfs_ino_t
name|inum
parameter_list|,
name|xfs_fsblock_t
modifier|*
name|first
parameter_list|,
name|struct
name|xfs_bmap_free
modifier|*
name|flist
parameter_list|,
name|xfs_extlen_t
name|total
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|xfs_dir_lookup_t
function_decl|)
parameter_list|(
name|struct
name|xfs_trans
modifier|*
name|tp
parameter_list|,
name|struct
name|xfs_inode
modifier|*
name|dp
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|,
name|xfs_ino_t
modifier|*
name|inum
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|xfs_dir_removename_t
function_decl|)
parameter_list|(
name|struct
name|xfs_trans
modifier|*
name|tp
parameter_list|,
name|struct
name|xfs_inode
modifier|*
name|dp
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|,
name|xfs_ino_t
name|ino
parameter_list|,
name|xfs_fsblock_t
modifier|*
name|first
parameter_list|,
name|struct
name|xfs_bmap_free
modifier|*
name|flist
parameter_list|,
name|xfs_extlen_t
name|total
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|xfs_dir_getdents_t
function_decl|)
parameter_list|(
name|struct
name|xfs_trans
modifier|*
name|tp
parameter_list|,
name|struct
name|xfs_inode
modifier|*
name|dp
parameter_list|,
name|struct
name|uio
modifier|*
name|uio
parameter_list|,
name|int
modifier|*
name|eofp
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|xfs_dir_replace_t
function_decl|)
parameter_list|(
name|struct
name|xfs_trans
modifier|*
name|tp
parameter_list|,
name|struct
name|xfs_inode
modifier|*
name|dp
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|,
name|xfs_ino_t
name|inum
parameter_list|,
name|xfs_fsblock_t
modifier|*
name|first
parameter_list|,
name|struct
name|xfs_bmap_free
modifier|*
name|flist
parameter_list|,
name|xfs_extlen_t
name|total
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|xfs_dir_canenter_t
function_decl|)
parameter_list|(
name|struct
name|xfs_trans
modifier|*
name|tp
parameter_list|,
name|struct
name|xfs_inode
modifier|*
name|dp
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|xfs_dir_shortform_validate_ondisk_t
function_decl|)
parameter_list|(
name|struct
name|xfs_mount
modifier|*
name|mp
parameter_list|,
name|struct
name|xfs_dinode
modifier|*
name|dip
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|xfs_dir_shortform_to_single_t
function_decl|)
parameter_list|(
name|struct
name|xfs_da_args
modifier|*
name|args
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|xfs_dirops
block|{
name|xfs_dir_mount_t
name|xd_mount
decl_stmt|;
name|xfs_dir_isempty_t
name|xd_isempty
decl_stmt|;
name|xfs_dir_init_t
name|xd_init
decl_stmt|;
name|xfs_dir_createname_t
name|xd_createname
decl_stmt|;
name|xfs_dir_lookup_t
name|xd_lookup
decl_stmt|;
name|xfs_dir_removename_t
name|xd_removename
decl_stmt|;
name|xfs_dir_getdents_t
name|xd_getdents
decl_stmt|;
name|xfs_dir_replace_t
name|xd_replace
decl_stmt|;
name|xfs_dir_canenter_t
name|xd_canenter
decl_stmt|;
name|xfs_dir_shortform_validate_ondisk_t
name|xd_shortform_validate_ondisk
decl_stmt|;
name|xfs_dir_shortform_to_single_t
name|xd_shortform_to_single
decl_stmt|;
block|}
name|xfs_dirops_t
typedef|;
end_typedef

begin_comment
comment|/*  * Overall external interface routines.  */
end_comment

begin_function_decl
name|void
name|xfs_dir_startup
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* called exactly once */
end_comment

begin_define
define|#
directive|define
name|XFS_DIR_MOUNT
parameter_list|(
name|mp
parameter_list|)
define|\
value|((mp)->m_dirops.xd_mount(mp))
end_define

begin_define
define|#
directive|define
name|XFS_DIR_ISEMPTY
parameter_list|(
name|mp
parameter_list|,
name|dp
parameter_list|)
define|\
value|((mp)->m_dirops.xd_isempty(dp))
end_define

begin_define
define|#
directive|define
name|XFS_DIR_INIT
parameter_list|(
name|mp
parameter_list|,
name|tp
parameter_list|,
name|dp
parameter_list|,
name|pdp
parameter_list|)
define|\
value|((mp)->m_dirops.xd_init(tp,dp,pdp))
end_define

begin_define
define|#
directive|define
name|XFS_DIR_CREATENAME
parameter_list|(
name|mp
parameter_list|,
name|tp
parameter_list|,
name|dp
parameter_list|,
name|name
parameter_list|,
name|namelen
parameter_list|,
name|inum
parameter_list|,
name|first
parameter_list|,
name|flist
parameter_list|,
name|total
parameter_list|)
define|\
value|((mp)->m_dirops.xd_createname(tp,dp,name,namelen,inum,first,flist,\ 				      total))
end_define

begin_define
define|#
directive|define
name|XFS_DIR_LOOKUP
parameter_list|(
name|mp
parameter_list|,
name|tp
parameter_list|,
name|dp
parameter_list|,
name|name
parameter_list|,
name|namelen
parameter_list|,
name|inum
parameter_list|)
define|\
value|((mp)->m_dirops.xd_lookup(tp,dp,name,namelen,inum))
end_define

begin_define
define|#
directive|define
name|XFS_DIR_REMOVENAME
parameter_list|(
name|mp
parameter_list|,
name|tp
parameter_list|,
name|dp
parameter_list|,
name|name
parameter_list|,
name|namelen
parameter_list|,
name|ino
parameter_list|,
name|first
parameter_list|,
name|flist
parameter_list|,
name|total
parameter_list|)
define|\
value|((mp)->m_dirops.xd_removename(tp,dp,name,namelen,ino,first,flist,total))
end_define

begin_define
define|#
directive|define
name|XFS_DIR_GETDENTS
parameter_list|(
name|mp
parameter_list|,
name|tp
parameter_list|,
name|dp
parameter_list|,
name|uio
parameter_list|,
name|eofp
parameter_list|)
define|\
value|((mp)->m_dirops.xd_getdents(tp,dp,uio,eofp))
end_define

begin_define
define|#
directive|define
name|XFS_DIR_REPLACE
parameter_list|(
name|mp
parameter_list|,
name|tp
parameter_list|,
name|dp
parameter_list|,
name|name
parameter_list|,
name|namelen
parameter_list|,
name|inum
parameter_list|,
name|first
parameter_list|,
name|flist
parameter_list|,
name|total
parameter_list|)
define|\
value|((mp)->m_dirops.xd_replace(tp,dp,name,namelen,inum,first,flist,total))
end_define

begin_define
define|#
directive|define
name|XFS_DIR_CANENTER
parameter_list|(
name|mp
parameter_list|,
name|tp
parameter_list|,
name|dp
parameter_list|,
name|name
parameter_list|,
name|namelen
parameter_list|)
define|\
value|((mp)->m_dirops.xd_canenter(tp,dp,name,namelen))
end_define

begin_define
define|#
directive|define
name|XFS_DIR_SHORTFORM_VALIDATE_ONDISK
parameter_list|(
name|mp
parameter_list|,
name|dip
parameter_list|)
define|\
value|((mp)->m_dirops.xd_shortform_validate_ondisk(mp,dip))
end_define

begin_define
define|#
directive|define
name|XFS_DIR_SHORTFORM_TO_SINGLE
parameter_list|(
name|mp
parameter_list|,
name|args
parameter_list|)
define|\
value|((mp)->m_dirops.xd_shortform_to_single(args))
end_define

begin_define
define|#
directive|define
name|XFS_DIR_IS_V1
parameter_list|(
name|mp
parameter_list|)
value|((mp)->m_dirversion == 1)
end_define

begin_decl_stmt
specifier|extern
name|xfs_dirops_t
name|xfsv1_dirops
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __XFS_DIR_H__ */
end_comment

end_unit

