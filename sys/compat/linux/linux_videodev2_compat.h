begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * $FreeBSD$  */
end_comment

begin_comment
comment|/*  * This file defines compatibility versions of several video structures  * defined in the Linux videodev2.h header (linux_videodev2.h).  The  * structures defined in this file are the ones that have been determined  * to have 32- to 64-bit size dependencies.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_LINUX_VIDEODEV2_COMPAT_H_
end_ifndef

begin_define
define|#
directive|define
name|_LINUX_VIDEODEV2_COMPAT_H_
end_define

begin_struct
struct|struct
name|l_v4l2_buffer
block|{
name|uint32_t
name|index
decl_stmt|;
name|enum
name|v4l2_buf_type
name|type
decl_stmt|;
name|uint32_t
name|bytesused
decl_stmt|;
name|uint32_t
name|flags
decl_stmt|;
name|enum
name|v4l2_field
name|field
decl_stmt|;
name|l_timeval
name|timestamp
decl_stmt|;
name|struct
name|v4l2_timecode
name|timecode
decl_stmt|;
name|uint32_t
name|sequence
decl_stmt|;
comment|/* memory location */
name|enum
name|v4l2_memory
name|memory
decl_stmt|;
union|union
block|{
name|uint32_t
name|offset
decl_stmt|;
name|l_ulong
name|userptr
decl_stmt|;
block|}
name|m
union|;
name|uint32_t
name|length
decl_stmt|;
name|uint32_t
name|input
decl_stmt|;
name|uint32_t
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|l_v4l2_framebuffer
block|{
name|uint32_t
name|capability
decl_stmt|;
name|uint32_t
name|flags
decl_stmt|;
comment|/* FIXME: in theory we should pass something like PCI device + memory  * region + offset instead of some physical address */
name|l_uintptr_t
name|base
decl_stmt|;
name|struct
name|v4l2_pix_format
name|fmt
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|l_v4l2_clip
block|{
name|struct
name|v4l2_rect
name|c
decl_stmt|;
name|l_uintptr_t
name|next
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|l_v4l2_window
block|{
name|struct
name|v4l2_rect
name|w
decl_stmt|;
name|enum
name|v4l2_field
name|field
decl_stmt|;
name|uint32_t
name|chromakey
decl_stmt|;
name|l_uintptr_t
name|clips
decl_stmt|;
name|uint32_t
name|clipcount
decl_stmt|;
name|l_uintptr_t
name|bitmap
decl_stmt|;
name|uint8_t
name|global_alpha
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|l_v4l2_standard
block|{
name|uint32_t
name|index
decl_stmt|;
name|v4l2_std_id
name|id
decl_stmt|;
name|uint8_t
name|name
index|[
literal|24
index|]
decl_stmt|;
name|struct
name|v4l2_fract
name|frameperiod
decl_stmt|;
comment|/* Frames, not fields */
name|uint32_t
name|framelines
decl_stmt|;
name|uint32_t
name|reserved
index|[
literal|4
index|]
decl_stmt|;
block|}
ifdef|#
directive|ifdef
name|COMPAT_LINUX32
comment|/* 32bit linuxolator */
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
endif|#
directive|endif
struct|;
end_struct

begin_struct
struct|struct
name|l_v4l2_ext_control
block|{
name|uint32_t
name|id
decl_stmt|;
name|uint32_t
name|size
decl_stmt|;
name|uint32_t
name|reserved2
index|[
literal|1
index|]
decl_stmt|;
union|union
block|{
name|int32_t
name|value
decl_stmt|;
name|int64_t
name|value64
decl_stmt|;
name|l_uintptr_t
name|string
decl_stmt|;
block|}
name|u
union|;
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_struct
struct|struct
name|l_v4l2_ext_controls
block|{
name|uint32_t
name|ctrl_class
decl_stmt|;
name|uint32_t
name|count
decl_stmt|;
name|uint32_t
name|error_idx
decl_stmt|;
name|uint32_t
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|l_uintptr_t
name|controls
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|l_v4l2_format
block|{
name|enum
name|v4l2_buf_type
name|type
decl_stmt|;
union|union
block|{
name|struct
name|v4l2_pix_format
name|pix
decl_stmt|;
comment|/* V4L2_BUF_TYPE_VIDEO_CAPTURE */
name|struct
name|l_v4l2_window
name|win
decl_stmt|;
comment|/* V4L2_BUF_TYPE_VIDEO_OVERLAY */
name|struct
name|v4l2_vbi_format
name|vbi
decl_stmt|;
comment|/* V4L2_BUF_TYPE_VBI_CAPTURE */
name|struct
name|v4l2_sliced_vbi_format
name|sliced
decl_stmt|;
comment|/* V4L2_BUF_TYPE_SLICED_VBI_CAPTURE */
name|uint8_t
name|raw_data
index|[
literal|200
index|]
decl_stmt|;
comment|/* user-defined */
block|}
name|fmt
union|;
block|}
ifdef|#
directive|ifdef
name|COMPAT_LINUX32
comment|/* 32bit linuxolator */
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
endif|#
directive|endif
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|VIDIOC_DQEVENT
end_ifdef

begin_struct
struct|struct
name|l_v4l2_event
block|{
name|uint32_t
name|type
decl_stmt|;
union|union
block|{
name|struct
name|v4l2_event_vsync
name|vsync
decl_stmt|;
name|uint8_t
name|data
index|[
literal|64
index|]
decl_stmt|;
block|}
name|u
union|;
name|uint32_t
name|pending
decl_stmt|;
name|uint32_t
name|sequence
decl_stmt|;
name|struct
name|l_timespec
name|timestamp
decl_stmt|;
name|uint32_t
name|reserved
index|[
literal|9
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_struct
struct|struct
name|l_v4l2_input
block|{
name|uint32_t
name|index
decl_stmt|;
comment|/*  Which input */
name|uint8_t
name|name
index|[
literal|32
index|]
decl_stmt|;
comment|/*  Label */
name|uint32_t
name|type
decl_stmt|;
comment|/*  Type of input */
name|uint32_t
name|audioset
decl_stmt|;
comment|/*  Associated audios (bitfield) */
name|uint32_t
name|tuner
decl_stmt|;
comment|/*  Associated tuner */
name|v4l2_std_id
name|std
decl_stmt|;
name|uint32_t
name|status
decl_stmt|;
name|uint32_t
name|capabilities
decl_stmt|;
name|uint32_t
name|reserved
index|[
literal|3
index|]
decl_stmt|;
block|}
ifdef|#
directive|ifdef
name|COMPAT_LINUX32
comment|/* 32bit linuxolator */
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
endif|#
directive|endif
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _LINUX_VIDEODEV2_COMPAT_H_ */
end_comment

end_unit

