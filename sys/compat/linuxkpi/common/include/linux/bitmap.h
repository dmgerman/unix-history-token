begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2013-2017 Mellanox Technologies, Ltd.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice unmodified, this list of conditions, and the following  *    disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_LINUX_BITMAP_H_
end_ifndef

begin_define
define|#
directive|define
name|_LINUX_BITMAP_H_
end_define

begin_include
include|#
directive|include
file|<linux/bitops.h>
end_include

begin_function
specifier|static
specifier|inline
name|void
name|bitmap_zero
parameter_list|(
name|unsigned
name|long
modifier|*
name|addr
parameter_list|,
specifier|const
name|unsigned
name|int
name|size
parameter_list|)
block|{
name|memset
argument_list|(
name|addr
argument_list|,
literal|0
argument_list|,
name|BITS_TO_LONGS
argument_list|(
name|size
argument_list|)
operator|*
sizeof|sizeof
argument_list|(
name|long
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|bitmap_fill
parameter_list|(
name|unsigned
name|long
modifier|*
name|addr
parameter_list|,
specifier|const
name|unsigned
name|int
name|size
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
name|tail
init|=
name|size
operator|&
operator|(
name|BITS_PER_LONG
operator|-
literal|1
operator|)
decl_stmt|;
name|memset
argument_list|(
name|addr
argument_list|,
literal|0xff
argument_list|,
name|BIT_WORD
argument_list|(
name|size
argument_list|)
operator|*
sizeof|sizeof
argument_list|(
name|long
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|tail
condition|)
name|addr
index|[
name|BIT_WORD
argument_list|(
name|size
argument_list|)
index|]
operator|=
name|BITMAP_LAST_WORD_MASK
argument_list|(
name|tail
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|bitmap_full
parameter_list|(
name|unsigned
name|long
modifier|*
name|addr
parameter_list|,
specifier|const
name|unsigned
name|int
name|size
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
name|end
init|=
name|BIT_WORD
argument_list|(
name|size
argument_list|)
decl_stmt|;
specifier|const
name|unsigned
name|int
name|tail
init|=
name|size
operator|&
operator|(
name|BITS_PER_LONG
operator|-
literal|1
operator|)
decl_stmt|;
name|unsigned
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|!=
name|end
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|addr
index|[
name|i
index|]
operator|!=
operator|~
literal|0UL
condition|)
return|return
operator|(
literal|0
operator|)
return|;
block|}
if|if
condition|(
name|tail
condition|)
block|{
specifier|const
name|unsigned
name|long
name|mask
init|=
name|BITMAP_LAST_WORD_MASK
argument_list|(
name|tail
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|addr
index|[
name|end
index|]
operator|&
name|mask
operator|)
operator|!=
name|mask
condition|)
return|return
operator|(
literal|0
operator|)
return|;
block|}
return|return
operator|(
literal|1
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|bitmap_empty
parameter_list|(
name|unsigned
name|long
modifier|*
name|addr
parameter_list|,
specifier|const
name|unsigned
name|int
name|size
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
name|end
init|=
name|BIT_WORD
argument_list|(
name|size
argument_list|)
decl_stmt|;
specifier|const
name|unsigned
name|int
name|tail
init|=
name|size
operator|&
operator|(
name|BITS_PER_LONG
operator|-
literal|1
operator|)
decl_stmt|;
name|unsigned
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|!=
name|end
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|addr
index|[
name|i
index|]
operator|!=
literal|0
condition|)
return|return
operator|(
literal|0
operator|)
return|;
block|}
if|if
condition|(
name|tail
condition|)
block|{
specifier|const
name|unsigned
name|long
name|mask
init|=
name|BITMAP_LAST_WORD_MASK
argument_list|(
name|tail
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|addr
index|[
name|end
index|]
operator|&
name|mask
operator|)
operator|!=
literal|0
condition|)
return|return
operator|(
literal|0
operator|)
return|;
block|}
return|return
operator|(
literal|1
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|bitmap_set
parameter_list|(
name|unsigned
name|long
modifier|*
name|map
parameter_list|,
name|unsigned
name|int
name|start
parameter_list|,
name|int
name|nr
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
name|size
init|=
name|start
operator|+
name|nr
decl_stmt|;
name|int
name|bits_to_set
init|=
name|BITS_PER_LONG
operator|-
operator|(
name|start
operator|%
name|BITS_PER_LONG
operator|)
decl_stmt|;
name|unsigned
name|long
name|mask_to_set
init|=
name|BITMAP_FIRST_WORD_MASK
argument_list|(
name|start
argument_list|)
decl_stmt|;
name|map
operator|+=
name|BIT_WORD
argument_list|(
name|start
argument_list|)
expr_stmt|;
while|while
condition|(
name|nr
operator|-
name|bits_to_set
operator|>=
literal|0
condition|)
block|{
operator|*
name|map
operator||=
name|mask_to_set
expr_stmt|;
name|nr
operator|-=
name|bits_to_set
expr_stmt|;
name|bits_to_set
operator|=
name|BITS_PER_LONG
expr_stmt|;
name|mask_to_set
operator|=
operator|~
literal|0UL
expr_stmt|;
name|map
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|nr
condition|)
block|{
name|mask_to_set
operator|&=
name|BITMAP_LAST_WORD_MASK
argument_list|(
name|size
argument_list|)
expr_stmt|;
operator|*
name|map
operator||=
name|mask_to_set
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|bitmap_clear
parameter_list|(
name|unsigned
name|long
modifier|*
name|map
parameter_list|,
name|unsigned
name|int
name|start
parameter_list|,
name|int
name|nr
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
name|size
init|=
name|start
operator|+
name|nr
decl_stmt|;
name|int
name|bits_to_clear
init|=
name|BITS_PER_LONG
operator|-
operator|(
name|start
operator|%
name|BITS_PER_LONG
operator|)
decl_stmt|;
name|unsigned
name|long
name|mask_to_clear
init|=
name|BITMAP_FIRST_WORD_MASK
argument_list|(
name|start
argument_list|)
decl_stmt|;
name|map
operator|+=
name|BIT_WORD
argument_list|(
name|start
argument_list|)
expr_stmt|;
while|while
condition|(
name|nr
operator|-
name|bits_to_clear
operator|>=
literal|0
condition|)
block|{
operator|*
name|map
operator|&=
operator|~
name|mask_to_clear
expr_stmt|;
name|nr
operator|-=
name|bits_to_clear
expr_stmt|;
name|bits_to_clear
operator|=
name|BITS_PER_LONG
expr_stmt|;
name|mask_to_clear
operator|=
operator|~
literal|0UL
expr_stmt|;
name|map
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|nr
condition|)
block|{
name|mask_to_clear
operator|&=
name|BITMAP_LAST_WORD_MASK
argument_list|(
name|size
argument_list|)
expr_stmt|;
operator|*
name|map
operator|&=
operator|~
name|mask_to_clear
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|int
name|bitmap_find_next_zero_area_off
parameter_list|(
specifier|const
name|unsigned
name|long
modifier|*
name|map
parameter_list|,
specifier|const
name|unsigned
name|int
name|size
parameter_list|,
name|unsigned
name|int
name|start
parameter_list|,
name|unsigned
name|int
name|nr
parameter_list|,
name|unsigned
name|int
name|align_mask
parameter_list|,
name|unsigned
name|int
name|align_offset
parameter_list|)
block|{
name|unsigned
name|int
name|index
decl_stmt|;
name|unsigned
name|int
name|end
decl_stmt|;
name|unsigned
name|int
name|i
decl_stmt|;
name|retry
label|:
name|index
operator|=
name|find_next_zero_bit
argument_list|(
name|map
argument_list|,
name|size
argument_list|,
name|start
argument_list|)
expr_stmt|;
name|index
operator|=
operator|(
operator|(
operator|(
name|index
operator|+
name|align_offset
operator|)
operator|+
name|align_mask
operator|)
operator|&
operator|~
name|align_mask
operator|)
operator|-
name|align_offset
expr_stmt|;
name|end
operator|=
name|index
operator|+
name|nr
expr_stmt|;
if|if
condition|(
name|end
operator|>
name|size
condition|)
return|return
operator|(
name|end
operator|)
return|;
name|i
operator|=
name|find_next_bit
argument_list|(
name|map
argument_list|,
name|end
argument_list|,
name|index
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|end
condition|)
block|{
name|start
operator|=
name|i
operator|+
literal|1
expr_stmt|;
goto|goto
name|retry
goto|;
block|}
return|return
operator|(
name|index
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|int
name|bitmap_find_next_zero_area
parameter_list|(
specifier|const
name|unsigned
name|long
modifier|*
name|map
parameter_list|,
specifier|const
name|unsigned
name|int
name|size
parameter_list|,
name|unsigned
name|int
name|start
parameter_list|,
name|unsigned
name|int
name|nr
parameter_list|,
name|unsigned
name|int
name|align_mask
parameter_list|)
block|{
return|return
operator|(
name|bitmap_find_next_zero_area_off
argument_list|(
name|map
argument_list|,
name|size
argument_list|,
name|start
argument_list|,
name|nr
argument_list|,
name|align_mask
argument_list|,
literal|0
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|bitmap_find_free_region
parameter_list|(
name|unsigned
name|long
modifier|*
name|bitmap
parameter_list|,
name|int
name|bits
parameter_list|,
name|int
name|order
parameter_list|)
block|{
name|int
name|pos
decl_stmt|;
name|int
name|end
decl_stmt|;
for|for
control|(
name|pos
operator|=
literal|0
init|;
operator|(
name|end
operator|=
name|pos
operator|+
operator|(
literal|1
operator|<<
name|order
operator|)
operator|)
operator|<=
name|bits
condition|;
name|pos
operator|=
name|end
control|)
block|{
if|if
condition|(
operator|!
name|linux_reg_op
argument_list|(
name|bitmap
argument_list|,
name|pos
argument_list|,
name|order
argument_list|,
name|REG_OP_ISFREE
argument_list|)
condition|)
continue|continue;
name|linux_reg_op
argument_list|(
name|bitmap
argument_list|,
name|pos
argument_list|,
name|order
argument_list|,
name|REG_OP_ALLOC
argument_list|)
expr_stmt|;
return|return
operator|(
name|pos
operator|)
return|;
block|}
return|return
operator|(
operator|-
name|ENOMEM
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|bitmap_allocate_region
parameter_list|(
name|unsigned
name|long
modifier|*
name|bitmap
parameter_list|,
name|int
name|pos
parameter_list|,
name|int
name|order
parameter_list|)
block|{
if|if
condition|(
operator|!
name|linux_reg_op
argument_list|(
name|bitmap
argument_list|,
name|pos
argument_list|,
name|order
argument_list|,
name|REG_OP_ISFREE
argument_list|)
condition|)
return|return
operator|(
operator|-
name|EBUSY
operator|)
return|;
name|linux_reg_op
argument_list|(
name|bitmap
argument_list|,
name|pos
argument_list|,
name|order
argument_list|,
name|REG_OP_ALLOC
argument_list|)
expr_stmt|;
return|return
operator|(
literal|0
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|bitmap_release_region
parameter_list|(
name|unsigned
name|long
modifier|*
name|bitmap
parameter_list|,
name|int
name|pos
parameter_list|,
name|int
name|order
parameter_list|)
block|{
name|linux_reg_op
argument_list|(
name|bitmap
argument_list|,
name|pos
argument_list|,
name|order
argument_list|,
name|REG_OP_RELEASE
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|int
name|bitmap_weight
parameter_list|(
name|unsigned
name|long
modifier|*
name|addr
parameter_list|,
specifier|const
name|unsigned
name|int
name|size
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
name|end
init|=
name|BIT_WORD
argument_list|(
name|size
argument_list|)
decl_stmt|;
specifier|const
name|unsigned
name|int
name|tail
init|=
name|size
operator|&
operator|(
name|BITS_PER_LONG
operator|-
literal|1
operator|)
decl_stmt|;
name|unsigned
name|int
name|retval
init|=
literal|0
decl_stmt|;
name|unsigned
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|!=
name|end
condition|;
name|i
operator|++
control|)
name|retval
operator|+=
name|hweight_long
argument_list|(
name|addr
index|[
name|i
index|]
argument_list|)
expr_stmt|;
if|if
condition|(
name|tail
condition|)
block|{
specifier|const
name|unsigned
name|long
name|mask
init|=
name|BITMAP_LAST_WORD_MASK
argument_list|(
name|tail
argument_list|)
decl_stmt|;
name|retval
operator|+=
name|hweight_long
argument_list|(
name|addr
index|[
name|end
index|]
operator|&
name|mask
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|retval
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|bitmap_equal
parameter_list|(
specifier|const
name|unsigned
name|long
modifier|*
name|pa
parameter_list|,
specifier|const
name|unsigned
name|long
modifier|*
name|pb
parameter_list|,
name|unsigned
name|size
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
name|end
init|=
name|BIT_WORD
argument_list|(
name|size
argument_list|)
decl_stmt|;
specifier|const
name|unsigned
name|int
name|tail
init|=
name|size
operator|&
operator|(
name|BITS_PER_LONG
operator|-
literal|1
operator|)
decl_stmt|;
name|unsigned
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|!=
name|end
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|pa
index|[
name|i
index|]
operator|!=
name|pb
index|[
name|i
index|]
condition|)
return|return
operator|(
literal|0
operator|)
return|;
block|}
if|if
condition|(
name|tail
condition|)
block|{
specifier|const
name|unsigned
name|long
name|mask
init|=
name|BITMAP_LAST_WORD_MASK
argument_list|(
name|tail
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|pa
index|[
name|end
index|]
operator|^
name|pb
index|[
name|end
index|]
operator|)
operator|&
name|mask
condition|)
return|return
operator|(
literal|0
operator|)
return|;
block|}
return|return
operator|(
literal|1
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|bitmap_or
parameter_list|(
name|unsigned
name|long
modifier|*
name|dst
parameter_list|,
specifier|const
name|unsigned
name|long
modifier|*
name|src1
parameter_list|,
specifier|const
name|unsigned
name|long
modifier|*
name|src2
parameter_list|,
specifier|const
name|unsigned
name|int
name|size
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
name|end
init|=
name|BITS_TO_LONGS
argument_list|(
name|size
argument_list|)
decl_stmt|;
name|unsigned
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|!=
name|end
condition|;
name|i
operator|++
control|)
name|dst
index|[
name|i
index|]
operator|=
name|src1
index|[
name|i
index|]
operator||
name|src2
index|[
name|i
index|]
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|bitmap_and
parameter_list|(
name|unsigned
name|long
modifier|*
name|dst
parameter_list|,
specifier|const
name|unsigned
name|long
modifier|*
name|src1
parameter_list|,
specifier|const
name|unsigned
name|long
modifier|*
name|src2
parameter_list|,
specifier|const
name|unsigned
name|int
name|size
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
name|end
init|=
name|BITS_TO_LONGS
argument_list|(
name|size
argument_list|)
decl_stmt|;
name|unsigned
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|!=
name|end
condition|;
name|i
operator|++
control|)
name|dst
index|[
name|i
index|]
operator|=
name|src1
index|[
name|i
index|]
operator|&
name|src2
index|[
name|i
index|]
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|bitmap_xor
parameter_list|(
name|unsigned
name|long
modifier|*
name|dst
parameter_list|,
specifier|const
name|unsigned
name|long
modifier|*
name|src1
parameter_list|,
specifier|const
name|unsigned
name|long
modifier|*
name|src2
parameter_list|,
specifier|const
name|unsigned
name|int
name|size
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
name|end
init|=
name|BITS_TO_LONGS
argument_list|(
name|size
argument_list|)
decl_stmt|;
name|unsigned
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|!=
name|end
condition|;
name|i
operator|++
control|)
name|dst
index|[
name|i
index|]
operator|=
name|src1
index|[
name|i
index|]
operator|^
name|src2
index|[
name|i
index|]
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _LINUX_BITMAP_H_ */
end_comment

end_unit

