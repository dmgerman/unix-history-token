begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2007 Cisco Systems, Inc.  All rights reserved.  * Copyright (c) 2014-2015 Mellanox Technologies, Ltd. All rights reserved.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice unmodified, this list of conditions, and the following  *    disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_LINUX_MATH64_H
end_ifndef

begin_define
define|#
directive|define
name|_LINUX_MATH64_H
end_define

begin_include
include|#
directive|include
file|<sys/stdint.h>
end_include

begin_define
define|#
directive|define
name|do_div
parameter_list|(
name|n
parameter_list|,
name|base
parameter_list|)
value|({			\ 	uint32_t __base = (base);		\ 	uint32_t __rem;				\ 	__rem = ((uint64_t)(n)) % __base;	\ 	(n) = ((uint64_t)(n)) / __base;		\ 	__rem;					\ })
end_define

begin_function
specifier|static
specifier|inline
name|uint64_t
name|div64_u64_rem
parameter_list|(
name|uint64_t
name|dividend
parameter_list|,
name|uint64_t
name|divisor
parameter_list|,
name|uint64_t
modifier|*
name|remainder
parameter_list|)
block|{
operator|*
name|remainder
operator|=
name|dividend
operator|%
name|divisor
expr_stmt|;
return|return
operator|(
name|dividend
operator|/
name|divisor
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int64_t
name|div64_s64
parameter_list|(
name|int64_t
name|dividend
parameter_list|,
name|int64_t
name|divisor
parameter_list|)
block|{
return|return
operator|(
name|dividend
operator|/
name|divisor
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|uint64_t
name|div64_u64
parameter_list|(
name|uint64_t
name|dividend
parameter_list|,
name|uint64_t
name|divisor
parameter_list|)
block|{
return|return
operator|(
name|dividend
operator|/
name|divisor
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|uint64_t
name|div_u64_rem
parameter_list|(
name|uint64_t
name|dividend
parameter_list|,
name|uint32_t
name|divisor
parameter_list|,
name|uint32_t
modifier|*
name|remainder
parameter_list|)
block|{
operator|*
name|remainder
operator|=
name|dividend
operator|%
name|divisor
expr_stmt|;
return|return
operator|(
name|dividend
operator|/
name|divisor
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int64_t
name|div_s64
parameter_list|(
name|int64_t
name|dividend
parameter_list|,
name|int32_t
name|divisor
parameter_list|)
block|{
return|return
operator|(
name|dividend
operator|/
name|divisor
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|uint64_t
name|div_u64
parameter_list|(
name|uint64_t
name|dividend
parameter_list|,
name|uint32_t
name|divisor
parameter_list|)
block|{
return|return
operator|(
name|dividend
operator|/
name|divisor
operator|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _LINUX_MATH64_H */
end_comment

end_unit

