begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2010 Isilon Systems, Inc.  * Copyright (c) 2010 iX Systems, Inc.  * Copyright (c) 2010 Panasas, Inc.  * Copyright (c) 2013, 2014 Mellanox Technologies, Ltd.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice unmodified, this list of conditions, and the following  *    disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_LINUX_SOCKET_H_
end_ifndef

begin_define
define|#
directive|define
name|_LINUX_SOCKET_H_
end_define

begin_include
include|#
directive|include
file|<sys/socket.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|notyet
end_ifdef

begin_function
specifier|static
specifier|inline
name|int
name|memcpy_toiovec
parameter_list|(
name|struct
name|iovec
modifier|*
name|v
parameter_list|,
name|unsigned
name|char
modifier|*
name|kdata
parameter_list|,
name|int
name|len
parameter_list|)
block|{
name|struct
name|uio
name|uio
decl_stmt|;
name|int
name|error
decl_stmt|;
name|uio
operator|.
name|uio_iov
operator|=
name|v
expr_stmt|;
name|uio
operator|.
name|uio_iovcnt
operator|=
operator|-
literal|1
expr_stmt|;
name|uio
operator|.
name|uio_offset
operator|=
literal|0
expr_stmt|;
name|uio
operator|.
name|uio_resid
operator|=
name|len
expr_stmt|;
name|uio
operator|.
name|uio_segflag
operator|=
name|UIO_USERSPACE
expr_stmt|;
name|uio
operator|.
name|uio_rw
operator|=
name|UIO_READ
expr_stmt|;
name|error
operator|=
operator|-
name|uiomove
argument_list|(
name|kdata
argument_list|,
name|len
argument_list|,
operator|&
name|uio
argument_list|)
expr_stmt|;
return|return
operator|(
name|error
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|memcpy_fromiovec
parameter_list|(
name|unsigned
name|char
modifier|*
name|kdata
parameter_list|,
name|struct
name|iovec
modifier|*
name|iov
parameter_list|,
name|int
name|len
parameter_list|)
block|{
name|struct
name|uio
name|uio
decl_stmt|;
name|int
name|error
decl_stmt|;
name|uio
operator|.
name|uio_iov
operator|=
name|v
expr_stmt|;
name|uio
operator|.
name|uio_iovcnt
operator|=
operator|-
literal|1
expr_stmt|;
name|uio
operator|.
name|uio_offset
operator|=
literal|0
expr_stmt|;
name|uio
operator|.
name|uio_resid
operator|=
name|len
expr_stmt|;
name|uio
operator|.
name|uio_segflag
operator|=
name|UIO_USERSPACE
expr_stmt|;
name|uio
operator|.
name|uio_rw
operator|=
name|UIO_WRITE
expr_stmt|;
name|error
operator|=
operator|-
name|uiomove
argument_list|(
name|kdata
argument_list|,
name|len
argument_list|,
operator|&
name|uio
argument_list|)
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _LINUX_SOCKET_H_ */
end_comment

end_unit

