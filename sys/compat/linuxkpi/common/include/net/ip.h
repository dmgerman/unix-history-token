begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2010 Isilon Systems, Inc.  * Copyright (c) 2010 iX Systems, Inc.  * Copyright (c) 2010 Panasas, Inc.  * Copyright (c) 2013, 2014 Mellanox Technologies, Ltd.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice unmodified, this list of conditions, and the following  *    disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_LINUX_NET_IP_H_
end_ifndef

begin_define
define|#
directive|define
name|_LINUX_NET_IP_H_
end_define

begin_include
include|#
directive|include
file|"opt_inet.h"
end_include

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<sys/socket.h>
end_include

begin_include
include|#
directive|include
file|<net/if_types.h>
end_include

begin_include
include|#
directive|include
file|<net/if.h>
end_include

begin_include
include|#
directive|include
file|<net/if_var.h>
end_include

begin_include
include|#
directive|include
file|<netinet/in.h>
end_include

begin_include
include|#
directive|include
file|<netinet/in_pcb.h>
end_include

begin_function
specifier|static
specifier|inline
name|void
name|inet_get_local_port_range
parameter_list|(
name|int
modifier|*
name|low
parameter_list|,
name|int
modifier|*
name|high
parameter_list|)
block|{
ifdef|#
directive|ifdef
name|INET
name|CURVNET_SET_QUIET
argument_list|(
name|TD_TO_VNET
argument_list|(
name|curthread
argument_list|)
argument_list|)
expr_stmt|;
operator|*
name|low
operator|=
name|V_ipport_firstauto
expr_stmt|;
operator|*
name|high
operator|=
name|V_ipport_lastauto
expr_stmt|;
name|CURVNET_RESTORE
argument_list|()
expr_stmt|;
else|#
directive|else
operator|*
name|low
operator|=
name|IPPORT_EPHEMERALFIRST
expr_stmt|;
comment|/* 10000 */
operator|*
name|high
operator|=
name|IPPORT_EPHEMERALLAST
expr_stmt|;
comment|/* 65535 */
endif|#
directive|endif
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|ip_ib_mc_map
parameter_list|(
name|uint32_t
name|addr
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
name|bcast
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|)
block|{
name|unsigned
name|char
name|scope
decl_stmt|;
name|addr
operator|=
name|ntohl
argument_list|(
name|addr
argument_list|)
expr_stmt|;
name|scope
operator|=
name|bcast
index|[
literal|5
index|]
operator|&
literal|0xF
expr_stmt|;
name|buf
index|[
literal|0
index|]
operator|=
literal|0
expr_stmt|;
name|buf
index|[
literal|1
index|]
operator|=
literal|0xff
expr_stmt|;
name|buf
index|[
literal|2
index|]
operator|=
literal|0xff
expr_stmt|;
name|buf
index|[
literal|3
index|]
operator|=
literal|0xff
expr_stmt|;
name|buf
index|[
literal|4
index|]
operator|=
literal|0xff
expr_stmt|;
name|buf
index|[
literal|5
index|]
operator|=
literal|0x10
operator||
name|scope
expr_stmt|;
name|buf
index|[
literal|6
index|]
operator|=
literal|0x40
expr_stmt|;
name|buf
index|[
literal|7
index|]
operator|=
literal|0x1b
expr_stmt|;
name|buf
index|[
literal|8
index|]
operator|=
name|bcast
index|[
literal|8
index|]
expr_stmt|;
name|buf
index|[
literal|9
index|]
operator|=
name|bcast
index|[
literal|9
index|]
expr_stmt|;
name|buf
index|[
literal|10
index|]
operator|=
literal|0
expr_stmt|;
name|buf
index|[
literal|11
index|]
operator|=
literal|0
expr_stmt|;
name|buf
index|[
literal|12
index|]
operator|=
literal|0
expr_stmt|;
name|buf
index|[
literal|13
index|]
operator|=
literal|0
expr_stmt|;
name|buf
index|[
literal|14
index|]
operator|=
literal|0
expr_stmt|;
name|buf
index|[
literal|15
index|]
operator|=
literal|0
expr_stmt|;
name|buf
index|[
literal|16
index|]
operator|=
operator|(
name|addr
operator|>>
literal|24
operator|)
operator|&
literal|0xff
expr_stmt|;
name|buf
index|[
literal|17
index|]
operator|=
operator|(
name|addr
operator|>>
literal|16
operator|)
operator|&
literal|0xff
expr_stmt|;
name|buf
index|[
literal|18
index|]
operator|=
operator|(
name|addr
operator|>>
literal|8
operator|)
operator|&
literal|0xff
expr_stmt|;
name|buf
index|[
literal|19
index|]
operator|=
name|addr
operator|&
literal|0xff
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _LINUX_NET_IP_H_ */
end_comment

end_unit

