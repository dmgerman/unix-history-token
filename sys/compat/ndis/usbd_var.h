begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2003  *      Bill Paul<wpaul@windriver.com>.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *      This product includes software developed by Bill Paul.  * 4. Neither the name of the author nor the names of any co-contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY Bill Paul AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL Bill Paul OR THE VOICES IN HIS HEAD  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF  * THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_USBD_VAR_H_
end_ifndef

begin_define
define|#
directive|define
name|_USBD_VAR_H_
end_define

begin_define
define|#
directive|define
name|IOCTL_INTERNAL_USB_SUBMIT_URB
value|0x00220003
end_define

begin_define
define|#
directive|define
name|URB_FUNCTION_SELECT_CONFIGURATION
value|0x0000
end_define

begin_define
define|#
directive|define
name|URB_FUNCTION_ABORT_PIPE
value|0x0002
end_define

begin_define
define|#
directive|define
name|URB_FUNCTION_BULK_OR_INTERRUPT_TRANSFER
value|0x0009
end_define

begin_define
define|#
directive|define
name|URB_FUNCTION_GET_DESCRIPTOR_FROM_DEVICE
value|0x000B
end_define

begin_define
define|#
directive|define
name|URB_FUNCTION_VENDOR_DEVICE
value|0x0017
end_define

begin_define
define|#
directive|define
name|URB_FUNCTION_VENDOR_INTERFACE
value|0x0018
end_define

begin_define
define|#
directive|define
name|URB_FUNCTION_VENDOR_ENDPOINT
value|0x0019
end_define

begin_define
define|#
directive|define
name|URB_FUNCTION_CLASS_DEVICE
value|0x001A
end_define

begin_define
define|#
directive|define
name|URB_FUNCTION_CLASS_INTERFACE
value|0x001B
end_define

begin_define
define|#
directive|define
name|URB_FUNCTION_CLASS_ENDPOINT
value|0x001C
end_define

begin_define
define|#
directive|define
name|URB_FUNCTION_CLASS_OTHER
value|0x001F
end_define

begin_define
define|#
directive|define
name|URB_FUNCTION_VENDOR_OTHER
value|0x0020
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_SUCCESS
value|0x00000000
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_CANCELED
value|0x00010000
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_PENDING
value|0x40000000
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_NO_MEMORY
value|0x80000100
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_REQUEST_FAILED
value|0x80000500
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_INVALID_PIPE_HANDLE
value|0x80000600
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_ERROR_SHORT_TRANSFER
value|0x80000900
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_CRC
value|0xC0000001
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_BTSTUFF
value|0xC0000002
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_DATA_TOGGLE_MISMATCH
value|0xC0000003
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_STALL_PID
value|0xC0000004
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_DEV_NOT_RESPONDING
value|0xC0000005
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_PID_CHECK_FAILURE
value|0xC0000006
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_UNEXPECTED_PID
value|0xC0000007
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_DATA_OVERRUN
value|0xC0000008
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_DATA_UNDERRUN
value|0xC0000009
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_RESERVED1
value|0xC000000A
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_RESERVED2
value|0xC000000B
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_BUFFER_OVERRUN
value|0xC000000C
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_BUFFER_UNDERRUN
value|0xC000000D
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_NOT_ACCESSED
value|0xC000000F
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_FIFO
value|0xC0000010
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_XACT_ERROR
value|0xC0000011
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_BABBLE_DETECTED
value|0xC0000012
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_DATA_BUFFER_ERROR
value|0xC0000013
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_NOT_SUPPORTED
value|0xC0000E00
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_TIMEOUT
value|0xC0006000
end_define

begin_define
define|#
directive|define
name|USBD_STATUS_DEVICE_GONE
value|0xC0007000
end_define

begin_struct
struct|struct
name|usbd_urb_header
block|{
name|uint16_t
name|uuh_len
decl_stmt|;
name|uint16_t
name|uuh_func
decl_stmt|;
name|int32_t
name|uuh_status
decl_stmt|;
name|void
modifier|*
name|uuh_handle
decl_stmt|;
name|uint32_t
name|uuh_flags
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|usbd_pipe_type
block|{
name|UsbdPipeTypeControl
init|=
name|UE_CONTROL
block|,
name|UsbdPipeTypeIsochronous
init|=
name|UE_ISOCHRONOUS
block|,
name|UsbdPipeTypeBulk
init|=
name|UE_BULK
block|,
name|UsbdPipeTypeInterrupt
init|=
name|UE_INTERRUPT
block|}
enum|;
end_enum

begin_struct
struct|struct
name|usbd_pipe_information
block|{
name|uint16_t
name|upi_maxpktsize
decl_stmt|;
name|uint8_t
name|upi_epaddr
decl_stmt|;
name|uint8_t
name|upi_interval
decl_stmt|;
name|enum
name|usbd_pipe_type
name|upi_type
decl_stmt|;
name|usb_endpoint_descriptor_t
modifier|*
name|upi_handle
decl_stmt|;
name|uint32_t
name|upi_maxtxsize
decl_stmt|;
define|#
directive|define
name|USBD_DEFAULT_MAXIMUM_TRANSFER_SIZE
value|PAGE_SIZE
name|uint32_t
name|upi_flags
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|usbd_interface_information
block|{
name|uint16_t
name|uii_len
decl_stmt|;
name|uint8_t
name|uii_intfnum
decl_stmt|;
name|uint8_t
name|uii_altset
decl_stmt|;
name|uint8_t
name|uii_intfclass
decl_stmt|;
name|uint8_t
name|uii_intfsubclass
decl_stmt|;
name|uint8_t
name|uii_intfproto
decl_stmt|;
name|uint8_t
name|uii_reserved
decl_stmt|;
name|void
modifier|*
name|uii_handle
decl_stmt|;
name|uint32_t
name|uii_numeps
decl_stmt|;
name|struct
name|usbd_pipe_information
name|uii_pipes
index|[
literal|1
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|usbd_urb_select_interface
block|{
name|struct
name|usbd_urb_header
name|usi_hdr
decl_stmt|;
name|void
modifier|*
name|usi_handle
decl_stmt|;
name|struct
name|usbd_interface_information
name|uusi_intf
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|usbd_urb_select_configuration
block|{
name|struct
name|usbd_urb_header
name|usc_hdr
decl_stmt|;
name|usb_config_descriptor_t
modifier|*
name|usc_conf
decl_stmt|;
name|void
modifier|*
name|usc_handle
decl_stmt|;
name|struct
name|usbd_interface_information
name|usc_intf
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|usbd_urb_pipe_request
block|{
name|struct
name|usbd_urb_header
name|upr_hdr
decl_stmt|;
name|usb_endpoint_descriptor_t
modifier|*
name|upr_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|usbd_hcd_area
block|{
name|void
modifier|*
name|reserved8
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|usbd_urb_bulk_or_intr_transfer
block|{
name|struct
name|usbd_urb_header
name|ubi_hdr
decl_stmt|;
name|usb_endpoint_descriptor_t
modifier|*
name|ubi_epdesc
decl_stmt|;
name|uint32_t
name|ubi_trans_flags
decl_stmt|;
define|#
directive|define
name|USBD_SHORT_TRANSFER_OK
value|0x00000002
name|uint32_t
name|ubi_trans_buflen
decl_stmt|;
name|void
modifier|*
name|ubi_trans_buf
decl_stmt|;
name|struct
name|mdl
modifier|*
name|ubi_mdl
decl_stmt|;
name|union
name|usbd_urb
modifier|*
name|ubi_urblink
decl_stmt|;
name|struct
name|usbd_hcd_area
name|ubi_hca
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|usbd_urb_control_descriptor_request
block|{
name|struct
name|usbd_urb_header
name|ucd_hdr
decl_stmt|;
name|void
modifier|*
name|ucd_reserved0
decl_stmt|;
name|uint32_t
name|ucd_reserved1
decl_stmt|;
name|uint32_t
name|ucd_trans_buflen
decl_stmt|;
name|void
modifier|*
name|ucd_trans_buf
decl_stmt|;
name|struct
name|mdl
modifier|*
name|ucd_mdl
decl_stmt|;
name|union
name|nt_urb
modifier|*
name|ucd_urblink
decl_stmt|;
name|struct
name|usbd_hcd_area
name|ucd_hca
decl_stmt|;
name|uint16_t
name|ucd_reserved2
decl_stmt|;
name|uint8_t
name|ucd_idx
decl_stmt|;
name|uint8_t
name|ucd_desctype
decl_stmt|;
name|uint16_t
name|ucd_langid
decl_stmt|;
name|uint16_t
name|ucd_reserved3
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|usbd_urb_vendor_or_class_request
block|{
name|struct
name|usbd_urb_header
name|uvc_hdr
decl_stmt|;
name|void
modifier|*
name|uvc_reserved0
decl_stmt|;
name|uint32_t
name|uvc_trans_flags
decl_stmt|;
define|#
directive|define
name|USBD_TRANSFER_DIRECTION_IN
value|1
name|uint32_t
name|uvc_trans_buflen
decl_stmt|;
name|void
modifier|*
name|uvc_trans_buf
decl_stmt|;
name|struct
name|mdl
modifier|*
name|uvc_mdl
decl_stmt|;
name|union
name|nt_urb
modifier|*
name|uvc_urblink
decl_stmt|;
name|struct
name|usbd_hcd_area
name|uvc_hca
decl_stmt|;
name|uint8_t
name|uvc_reserved1
decl_stmt|;
name|uint8_t
name|uvc_req
decl_stmt|;
name|uint16_t
name|uvc_value
decl_stmt|;
name|uint16_t
name|uvc_idx
decl_stmt|;
name|uint16_t
name|uvc_reserved2
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|usbd_interface_list_entry
block|{
name|usb_interface_descriptor_t
modifier|*
name|uil_intfdesc
decl_stmt|;
name|struct
name|usbd_interface_information
modifier|*
name|uil_intf
decl_stmt|;
block|}
struct|;
end_struct

begin_union
union|union
name|usbd_urb
block|{
name|struct
name|usbd_urb_header
name|uu_hdr
decl_stmt|;
name|struct
name|usbd_urb_select_configuration
name|uu_selconf
decl_stmt|;
name|struct
name|usbd_urb_bulk_or_intr_transfer
name|uu_bulkintr
decl_stmt|;
name|struct
name|usbd_urb_control_descriptor_request
name|uu_ctldesc
decl_stmt|;
name|struct
name|usbd_urb_vendor_or_class_request
name|uu_vcreq
decl_stmt|;
name|struct
name|usbd_urb_pipe_request
name|uu_pipe
decl_stmt|;
block|}
union|;
end_union

begin_define
define|#
directive|define
name|USBD_URB_STATUS
parameter_list|(
name|urb
parameter_list|)
value|((urb)->uu_hdr.uuh_status)
end_define

begin_define
define|#
directive|define
name|USBDI_VERSION
value|0x00000500
end_define

begin_define
define|#
directive|define
name|USB_VER_1_1
value|0x00000110
end_define

begin_define
define|#
directive|define
name|USB_VER_2_0
value|0x00000200
end_define

begin_struct
struct|struct
name|usbd_version_info
block|{
name|uint32_t
name|uvi_usbdi_vers
decl_stmt|;
name|uint32_t
name|uvi_supported_vers
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|usbd_version_info
name|usbd_version_info
typedef|;
end_typedef

begin_decl_stmt
specifier|extern
name|image_patch_table
name|usbd_functbl
index|[]
decl_stmt|;
end_decl_stmt

begin_function_decl
name|__BEGIN_DECLS
specifier|extern
name|int
name|usbd_libinit
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|usbd_libfini
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _USBD_VAR_H_ */
end_comment

end_unit

