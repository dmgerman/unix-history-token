begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2003  *	Bill Paul<wpaul@windriver.com>.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by Bill Paul.  * 4. Neither the name of the author nor the names of any co-contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY Bill Paul AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL Bill Paul OR THE VOICES IN HIS HEAD  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF  * THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NTOSKRNL_VAR_H_
end_ifndef

begin_define
define|#
directive|define
name|_NTOSKRNL_VAR_H_
end_define

begin_comment
comment|/* Note: assumes x86 page size of 4K. */
end_comment

begin_define
define|#
directive|define
name|PAGE_SHIFT
value|12
end_define

begin_define
define|#
directive|define
name|SPAN_PAGES
parameter_list|(
name|ptr
parameter_list|,
name|len
parameter_list|)
define|\
value|((uint32_t)((((uintptr_t)(ptr)& (PAGE_SIZE -1)) +	\ 	(len) + (PAGE_SIZE - 1))>> PAGE_SHIFT))
end_define

begin_typedef
typedef|typedef
name|uint32_t
name|kspin_lock
typedef|;
end_typedef

begin_struct
struct|struct
name|slist_entry
block|{
name|struct
name|slist_entry
modifier|*
name|sl_next
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|slist_entry
name|slist_entry
typedef|;
end_typedef

begin_union
union|union
name|slist_header
block|{
name|uint64_t
name|slh_align
decl_stmt|;
struct|struct
block|{
name|struct
name|slist_entry
modifier|*
name|slh_next
decl_stmt|;
name|uint16_t
name|slh_depth
decl_stmt|;
name|uint16_t
name|slh_seq
decl_stmt|;
block|}
name|slh_list
struct|;
block|}
union|;
end_union

begin_typedef
typedef|typedef
name|union
name|slist_header
name|slist_header
typedef|;
end_typedef

begin_struct
struct|struct
name|list_entry
block|{
name|struct
name|list_entry
modifier|*
name|nle_flink
decl_stmt|;
name|struct
name|list_entry
modifier|*
name|nle_blink
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|list_entry
name|list_entry
typedef|;
end_typedef

begin_struct
struct|struct
name|general_lookaside
block|{
name|slist_header
name|gl_listhead
decl_stmt|;
name|uint16_t
name|gl_depth
decl_stmt|;
name|uint16_t
name|gl_maxdepth
decl_stmt|;
name|uint32_t
name|gl_totallocs
decl_stmt|;
union|union
block|{
name|uint32_t
name|gl_allocmisses
decl_stmt|;
name|uint32_t
name|gl_allochits
decl_stmt|;
block|}
name|u_a
union|;
name|uint32_t
name|gl_totalfrees
decl_stmt|;
union|union
block|{
name|uint32_t
name|gl_freemisses
decl_stmt|;
name|uint32_t
name|gl_freehits
decl_stmt|;
block|}
name|u_m
union|;
name|uint32_t
name|gl_type
decl_stmt|;
name|uint32_t
name|gl_tag
decl_stmt|;
name|uint32_t
name|gl_size
decl_stmt|;
name|void
modifier|*
name|gl_allocfunc
decl_stmt|;
name|void
modifier|*
name|gl_freefunc
decl_stmt|;
name|list_entry
name|gl_listent
decl_stmt|;
name|uint32_t
name|gl_lasttotallocs
decl_stmt|;
union|union
block|{
name|uint32_t
name|gl_lastallocmisses
decl_stmt|;
name|uint32_t
name|gl_lastallochits
decl_stmt|;
block|}
name|u_l
union|;
name|uint32_t
name|gl_rsvd
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|general_lookaside
name|general_lookaside
typedef|;
end_typedef

begin_struct
struct|struct
name|npaged_lookaside_list
block|{
name|general_lookaside
name|nll_l
decl_stmt|;
name|kspin_lock
name|nll_obsoletelock
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|npaged_lookaside_list
name|npaged_lookaside_list
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|npaged_lookaside_list
name|paged_lookaside_list
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|void
modifier|*
function_decl|(
modifier|*
name|lookaside_alloc_func
function_decl|)
parameter_list|(
name|uint32_t
parameter_list|,
name|size_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|lookaside_free_func
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_decl_stmt
specifier|extern
name|image_patch_table
name|ntoskrnl_functbl
index|[]
decl_stmt|;
end_decl_stmt

begin_function_decl
name|__BEGIN_DECLS
specifier|extern
name|int
name|ntoskrnl_libinit
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ntoskrnl_libfini
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _NTOSKRNL_VAR_H_ */
end_comment

end_unit

