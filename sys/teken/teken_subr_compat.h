begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2008-2009 Ed Schouten<ed@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_function
specifier|static
name|void
name|teken_subr_cons25_set_border
parameter_list|(
name|teken_t
modifier|*
name|t
parameter_list|,
name|unsigned
name|int
name|c
parameter_list|)
block|{
name|teken_funcs_param
argument_list|(
name|t
argument_list|,
name|TP_SETBORDER
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|void
name|teken_subr_cons25_set_global_cursor_shape
parameter_list|(
name|teken_t
modifier|*
name|t
parameter_list|,
name|unsigned
name|int
name|ncmds
parameter_list|,
name|unsigned
name|int
name|cmds
index|[]
parameter_list|)
block|{
name|unsigned
name|int
name|code
decl_stmt|,
name|i
decl_stmt|;
comment|/* 	 * Pack the args to work around API deficiencies.  This requires 	 * knowing too much about the low level to be fully compatible. 	 * Returning when ncmds> 3 is necessary and happens to be 	 * compatible.  Discarding high bits is necessary and happens to 	 * be incompatible only for invalid args when ncmds == 3. 	 */
if|if
condition|(
name|ncmds
operator|>
literal|3
condition|)
return|return;
name|code
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|i
operator|=
name|ncmds
init|;
name|i
operator|>
literal|0
condition|;
name|i
operator|--
control|)
name|code
operator|=
operator|(
name|code
operator|<<
literal|8
operator|)
operator||
operator|(
name|cmds
index|[
name|i
operator|-
literal|1
index|]
operator|&
literal|0xff
operator|)
expr_stmt|;
name|code
operator|=
operator|(
name|code
operator|<<
literal|8
operator|)
operator||
name|ncmds
expr_stmt|;
name|teken_funcs_param
argument_list|(
name|t
argument_list|,
name|TP_SETGLOBALCURSOR
argument_list|,
name|code
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|void
name|teken_subr_cons25_set_local_cursor_type
parameter_list|(
name|teken_t
modifier|*
name|t
parameter_list|,
name|unsigned
name|int
name|type
parameter_list|)
block|{
name|teken_funcs_param
argument_list|(
name|t
argument_list|,
name|TP_SETLOCALCURSOR
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
end_function

begin_decl_stmt
specifier|static
specifier|const
name|teken_color_t
name|cons25_colors
index|[
literal|8
index|]
init|=
block|{
name|TC_BLACK
block|,
name|TC_BLUE
block|,
name|TC_GREEN
block|,
name|TC_CYAN
block|,
name|TC_RED
block|,
name|TC_MAGENTA
block|,
name|TC_BROWN
block|,
name|TC_WHITE
block|}
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
name|void
name|teken_subr_cons25_set_default_background
parameter_list|(
name|teken_t
modifier|*
name|t
parameter_list|,
name|unsigned
name|int
name|c
parameter_list|)
block|{
name|t
operator|->
name|t_defattr
operator|.
name|ta_bgcolor
operator|=
name|cons25_colors
index|[
name|c
operator|%
literal|8
index|]
operator||
operator|(
name|c
operator|&
literal|8
operator|)
expr_stmt|;
name|t
operator|->
name|t_curattr
operator|.
name|ta_bgcolor
operator|=
name|cons25_colors
index|[
name|c
operator|%
literal|8
index|]
operator||
operator|(
name|c
operator|&
literal|8
operator|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|void
name|teken_subr_cons25_set_default_foreground
parameter_list|(
name|teken_t
modifier|*
name|t
parameter_list|,
name|unsigned
name|int
name|c
parameter_list|)
block|{
name|t
operator|->
name|t_defattr
operator|.
name|ta_fgcolor
operator|=
name|cons25_colors
index|[
name|c
operator|%
literal|8
index|]
operator||
operator|(
name|c
operator|&
literal|8
operator|)
expr_stmt|;
name|t
operator|->
name|t_curattr
operator|.
name|ta_fgcolor
operator|=
name|cons25_colors
index|[
name|c
operator|%
literal|8
index|]
operator||
operator|(
name|c
operator|&
literal|8
operator|)
expr_stmt|;
block|}
end_function

begin_decl_stmt
specifier|static
specifier|const
name|teken_color_t
name|cons25_revcolors
index|[
literal|8
index|]
init|=
block|{
literal|0
block|,
literal|4
block|,
literal|2
block|,
literal|6
block|,
literal|1
block|,
literal|5
block|,
literal|3
block|,
literal|7
block|}
decl_stmt|;
end_decl_stmt

begin_function
name|void
name|teken_get_defattr_cons25
parameter_list|(
name|teken_t
modifier|*
name|t
parameter_list|,
name|int
modifier|*
name|fg
parameter_list|,
name|int
modifier|*
name|bg
parameter_list|)
block|{
operator|*
name|fg
operator|=
name|cons25_revcolors
index|[
name|teken_256to8
argument_list|(
name|t
operator|->
name|t_defattr
operator|.
name|ta_fgcolor
argument_list|)
index|]
expr_stmt|;
if|if
condition|(
name|t
operator|->
name|t_defattr
operator|.
name|ta_format
operator|&
name|TF_BOLD
condition|)
operator|*
name|fg
operator|+=
literal|8
expr_stmt|;
operator|*
name|bg
operator|=
name|cons25_revcolors
index|[
name|teken_256to8
argument_list|(
name|t
operator|->
name|t_defattr
operator|.
name|ta_bgcolor
argument_list|)
index|]
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|void
name|teken_subr_cons25_switch_virtual_terminal
parameter_list|(
name|teken_t
modifier|*
name|t
parameter_list|,
name|unsigned
name|int
name|vt
parameter_list|)
block|{
name|teken_funcs_param
argument_list|(
name|t
argument_list|,
name|TP_SWITCHVT
argument_list|,
name|vt
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|void
name|teken_subr_cons25_set_bell_pitch_duration
parameter_list|(
name|teken_t
modifier|*
name|t
parameter_list|,
name|unsigned
name|int
name|pitch
parameter_list|,
name|unsigned
name|int
name|duration
parameter_list|)
block|{
name|teken_funcs_param
argument_list|(
name|t
argument_list|,
name|TP_SETBELLPD
argument_list|,
operator|(
name|pitch
operator|<<
literal|16
operator|)
operator||
operator|(
name|duration
operator|&
literal|0xffff
operator|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|void
name|teken_subr_cons25_set_graphic_rendition
parameter_list|(
name|teken_t
modifier|*
name|t
parameter_list|,
name|unsigned
name|int
name|cmd
parameter_list|,
name|unsigned
name|int
name|param
name|__unused
parameter_list|)
block|{
switch|switch
condition|(
name|cmd
condition|)
block|{
case|case
literal|0
case|:
comment|/* Reset. */
name|t
operator|->
name|t_curattr
operator|=
name|t
operator|->
name|t_defattr
expr_stmt|;
break|break;
default|default:
name|teken_printf
argument_list|(
literal|"unsupported attribute %u\n"
argument_list|,
name|cmd
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|void
name|teken_subr_cons25_set_terminal_mode
parameter_list|(
name|teken_t
modifier|*
name|t
parameter_list|,
name|unsigned
name|int
name|mode
parameter_list|)
block|{
switch|switch
condition|(
name|mode
condition|)
block|{
case|case
literal|0
case|:
comment|/* Switch terminal to xterm. */
name|t
operator|->
name|t_stateflags
operator|&=
operator|~
name|TS_CONS25
expr_stmt|;
break|break;
case|case
literal|1
case|:
comment|/* Switch terminal to cons25. */
name|t
operator|->
name|t_stateflags
operator||=
name|TS_CONS25
expr_stmt|;
break|break;
block|}
block|}
end_function

begin_if
if|#
directive|if
literal|0
end_if

begin_endif
unit|static void teken_subr_vt52_decid(teken_t *t) { 	const char response[] = "\x1B/Z";  	teken_funcs_respond(t, response, sizeof response - 1); }
endif|#
directive|endif
end_endif

end_unit

