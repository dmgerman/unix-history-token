begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Please do not edit this file.  * It was generated using rpcgen.  */
end_comment

begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NLM_PROT_H_RPCGEN
end_ifndef

begin_define
define|#
directive|define
name|_NLM_PROT_H_RPCGEN
end_define

begin_include
include|#
directive|include
file|<rpc/rpc.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
define|#
directive|define
name|LM_MAXSTRLEN
value|1024
define|#
directive|define
name|MAXNAMELEN
value|LM_MAXSTRLEN+1
enum|enum
name|nlm_stats
block|{
name|nlm_granted
init|=
literal|0
block|,
name|nlm_denied
init|=
literal|1
block|,
name|nlm_denied_nolocks
init|=
literal|2
block|,
name|nlm_blocked
init|=
literal|3
block|,
name|nlm_denied_grace_period
init|=
literal|4
block|,
name|nlm_deadlck
init|=
literal|5
block|}
enum|;
typedef|typedef
name|enum
name|nlm_stats
name|nlm_stats
typedef|;
struct|struct
name|nlm_holder
block|{
name|bool_t
name|exclusive
decl_stmt|;
name|int
name|svid
decl_stmt|;
name|netobj
name|oh
decl_stmt|;
name|u_int
name|l_offset
decl_stmt|;
name|u_int
name|l_len
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_holder
name|nlm_holder
typedef|;
struct|struct
name|nlm_testrply
block|{
name|nlm_stats
name|stat
decl_stmt|;
union|union
block|{
name|struct
name|nlm_holder
name|holder
decl_stmt|;
block|}
name|nlm_testrply_u
union|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_testrply
name|nlm_testrply
typedef|;
struct|struct
name|nlm_stat
block|{
name|nlm_stats
name|stat
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_stat
name|nlm_stat
typedef|;
struct|struct
name|nlm_res
block|{
name|netobj
name|cookie
decl_stmt|;
name|nlm_stat
name|stat
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_res
name|nlm_res
typedef|;
struct|struct
name|nlm_testres
block|{
name|netobj
name|cookie
decl_stmt|;
name|nlm_testrply
name|stat
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_testres
name|nlm_testres
typedef|;
struct|struct
name|nlm_lock
block|{
name|char
modifier|*
name|caller_name
decl_stmt|;
name|netobj
name|fh
decl_stmt|;
name|netobj
name|oh
decl_stmt|;
name|int
name|svid
decl_stmt|;
name|u_int
name|l_offset
decl_stmt|;
name|u_int
name|l_len
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_lock
name|nlm_lock
typedef|;
struct|struct
name|nlm_lockargs
block|{
name|netobj
name|cookie
decl_stmt|;
name|bool_t
name|block
decl_stmt|;
name|bool_t
name|exclusive
decl_stmt|;
name|struct
name|nlm_lock
name|alock
decl_stmt|;
name|bool_t
name|reclaim
decl_stmt|;
name|int
name|state
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_lockargs
name|nlm_lockargs
typedef|;
struct|struct
name|nlm_cancargs
block|{
name|netobj
name|cookie
decl_stmt|;
name|bool_t
name|block
decl_stmt|;
name|bool_t
name|exclusive
decl_stmt|;
name|struct
name|nlm_lock
name|alock
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_cancargs
name|nlm_cancargs
typedef|;
struct|struct
name|nlm_testargs
block|{
name|netobj
name|cookie
decl_stmt|;
name|bool_t
name|exclusive
decl_stmt|;
name|struct
name|nlm_lock
name|alock
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_testargs
name|nlm_testargs
typedef|;
struct|struct
name|nlm_unlockargs
block|{
name|netobj
name|cookie
decl_stmt|;
name|struct
name|nlm_lock
name|alock
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_unlockargs
name|nlm_unlockargs
typedef|;
comment|/*  * The following enums are actually bit encoded for efficient  * boolean algebra.... DON'T change them.....  */
enum|enum
name|fsh_mode
block|{
name|fsm_DN
init|=
literal|0
block|,
name|fsm_DR
init|=
literal|1
block|,
name|fsm_DW
init|=
literal|2
block|,
name|fsm_DRW
init|=
literal|3
block|}
enum|;
typedef|typedef
name|enum
name|fsh_mode
name|fsh_mode
typedef|;
enum|enum
name|fsh_access
block|{
name|fsa_NONE
init|=
literal|0
block|,
name|fsa_R
init|=
literal|1
block|,
name|fsa_W
init|=
literal|2
block|,
name|fsa_RW
init|=
literal|3
block|}
enum|;
typedef|typedef
name|enum
name|fsh_access
name|fsh_access
typedef|;
struct|struct
name|nlm_share
block|{
name|char
modifier|*
name|caller_name
decl_stmt|;
name|netobj
name|fh
decl_stmt|;
name|netobj
name|oh
decl_stmt|;
name|fsh_mode
name|mode
decl_stmt|;
name|fsh_access
name|access
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_share
name|nlm_share
typedef|;
struct|struct
name|nlm_shareargs
block|{
name|netobj
name|cookie
decl_stmt|;
name|nlm_share
name|share
decl_stmt|;
name|bool_t
name|reclaim
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_shareargs
name|nlm_shareargs
typedef|;
struct|struct
name|nlm_shareres
block|{
name|netobj
name|cookie
decl_stmt|;
name|nlm_stats
name|stat
decl_stmt|;
name|int
name|sequence
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_shareres
name|nlm_shareres
typedef|;
struct|struct
name|nlm_notify
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|long
name|state
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_notify
name|nlm_notify
typedef|;
comment|/* definitions for NLM version 4 */
enum|enum
name|nlm4_stats
block|{
name|nlm4_granted
init|=
literal|0
block|,
name|nlm4_denied
init|=
literal|1
block|,
name|nlm4_denied_nolocks
init|=
literal|2
block|,
name|nlm4_blocked
init|=
literal|3
block|,
name|nlm4_denied_grace_period
init|=
literal|4
block|,
name|nlm4_deadlck
init|=
literal|5
block|,
name|nlm4_rofs
init|=
literal|6
block|,
name|nlm4_stale_fh
init|=
literal|7
block|,
name|nlm4_fbig
init|=
literal|8
block|,
name|nlm4_failed
init|=
literal|9
block|}
enum|;
typedef|typedef
name|enum
name|nlm4_stats
name|nlm4_stats
typedef|;
struct|struct
name|nlm4_stat
block|{
name|nlm4_stats
name|stat
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_stat
name|nlm4_stat
typedef|;
struct|struct
name|nlm4_holder
block|{
name|bool_t
name|exclusive
decl_stmt|;
name|u_int32_t
name|svid
decl_stmt|;
name|netobj
name|oh
decl_stmt|;
name|u_int64_t
name|l_offset
decl_stmt|;
name|u_int64_t
name|l_len
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_holder
name|nlm4_holder
typedef|;
struct|struct
name|nlm4_lock
block|{
name|char
modifier|*
name|caller_name
decl_stmt|;
name|netobj
name|fh
decl_stmt|;
name|netobj
name|oh
decl_stmt|;
name|u_int32_t
name|svid
decl_stmt|;
name|u_int64_t
name|l_offset
decl_stmt|;
name|u_int64_t
name|l_len
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_lock
name|nlm4_lock
typedef|;
struct|struct
name|nlm4_share
block|{
name|char
modifier|*
name|caller_name
decl_stmt|;
name|netobj
name|fh
decl_stmt|;
name|netobj
name|oh
decl_stmt|;
name|fsh_mode
name|mode
decl_stmt|;
name|fsh_access
name|access
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_share
name|nlm4_share
typedef|;
struct|struct
name|nlm4_testrply
block|{
name|nlm4_stats
name|stat
decl_stmt|;
union|union
block|{
name|struct
name|nlm4_holder
name|holder
decl_stmt|;
block|}
name|nlm4_testrply_u
union|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_testrply
name|nlm4_testrply
typedef|;
struct|struct
name|nlm4_testres
block|{
name|netobj
name|cookie
decl_stmt|;
name|nlm4_testrply
name|stat
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_testres
name|nlm4_testres
typedef|;
struct|struct
name|nlm4_testargs
block|{
name|netobj
name|cookie
decl_stmt|;
name|bool_t
name|exclusive
decl_stmt|;
name|struct
name|nlm4_lock
name|alock
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_testargs
name|nlm4_testargs
typedef|;
struct|struct
name|nlm4_res
block|{
name|netobj
name|cookie
decl_stmt|;
name|nlm4_stat
name|stat
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_res
name|nlm4_res
typedef|;
struct|struct
name|nlm4_lockargs
block|{
name|netobj
name|cookie
decl_stmt|;
name|bool_t
name|block
decl_stmt|;
name|bool_t
name|exclusive
decl_stmt|;
name|struct
name|nlm4_lock
name|alock
decl_stmt|;
name|bool_t
name|reclaim
decl_stmt|;
name|int
name|state
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_lockargs
name|nlm4_lockargs
typedef|;
struct|struct
name|nlm4_cancargs
block|{
name|netobj
name|cookie
decl_stmt|;
name|bool_t
name|block
decl_stmt|;
name|bool_t
name|exclusive
decl_stmt|;
name|struct
name|nlm4_lock
name|alock
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_cancargs
name|nlm4_cancargs
typedef|;
struct|struct
name|nlm4_unlockargs
block|{
name|netobj
name|cookie
decl_stmt|;
name|struct
name|nlm4_lock
name|alock
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_unlockargs
name|nlm4_unlockargs
typedef|;
struct|struct
name|nlm4_shareargs
block|{
name|netobj
name|cookie
decl_stmt|;
name|nlm4_share
name|share
decl_stmt|;
name|bool_t
name|reclaim
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_shareargs
name|nlm4_shareargs
typedef|;
struct|struct
name|nlm4_shareres
block|{
name|netobj
name|cookie
decl_stmt|;
name|nlm4_stats
name|stat
decl_stmt|;
name|int
name|sequence
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_shareres
name|nlm4_shareres
typedef|;
struct|struct
name|nlm_sm_status
block|{
name|char
modifier|*
name|mon_name
decl_stmt|;
name|int
name|state
decl_stmt|;
name|char
name|priv
index|[
literal|16
index|]
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm_sm_status
name|nlm_sm_status
typedef|;
struct|struct
name|nlm4_notify
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|int32_t
name|state
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|nlm4_notify
name|nlm4_notify
typedef|;
define|#
directive|define
name|NLM_PROG
value|((unsigned long)(100021))
define|#
directive|define
name|NLM_SM
value|((unsigned long)(0))
define|#
directive|define
name|NLM_SM_NOTIFY
value|((unsigned long)(1))
specifier|extern
name|enum
name|clnt_stat
name|nlm_sm_notify_0
parameter_list|(
name|struct
name|nlm_sm_status
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_sm_notify_0_svc
parameter_list|(
name|struct
name|nlm_sm_status
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_VERS
value|((unsigned long)(1))
define|#
directive|define
name|NLM_TEST
value|((unsigned long)(1))
specifier|extern
name|enum
name|clnt_stat
name|nlm_test_1
parameter_list|(
name|struct
name|nlm_testargs
modifier|*
parameter_list|,
name|nlm_testres
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_test_1_svc
parameter_list|(
name|struct
name|nlm_testargs
modifier|*
parameter_list|,
name|nlm_testres
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_LOCK
value|((unsigned long)(2))
specifier|extern
name|enum
name|clnt_stat
name|nlm_lock_1
parameter_list|(
name|struct
name|nlm_lockargs
modifier|*
parameter_list|,
name|nlm_res
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_lock_1_svc
parameter_list|(
name|struct
name|nlm_lockargs
modifier|*
parameter_list|,
name|nlm_res
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_CANCEL
value|((unsigned long)(3))
specifier|extern
name|enum
name|clnt_stat
name|nlm_cancel_1
parameter_list|(
name|struct
name|nlm_cancargs
modifier|*
parameter_list|,
name|nlm_res
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_cancel_1_svc
parameter_list|(
name|struct
name|nlm_cancargs
modifier|*
parameter_list|,
name|nlm_res
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_UNLOCK
value|((unsigned long)(4))
specifier|extern
name|enum
name|clnt_stat
name|nlm_unlock_1
parameter_list|(
name|struct
name|nlm_unlockargs
modifier|*
parameter_list|,
name|nlm_res
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_unlock_1_svc
parameter_list|(
name|struct
name|nlm_unlockargs
modifier|*
parameter_list|,
name|nlm_res
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_GRANTED
value|((unsigned long)(5))
specifier|extern
name|enum
name|clnt_stat
name|nlm_granted_1
parameter_list|(
name|struct
name|nlm_testargs
modifier|*
parameter_list|,
name|nlm_res
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_granted_1_svc
parameter_list|(
name|struct
name|nlm_testargs
modifier|*
parameter_list|,
name|nlm_res
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_TEST_MSG
value|((unsigned long)(6))
specifier|extern
name|enum
name|clnt_stat
name|nlm_test_msg_1
parameter_list|(
name|struct
name|nlm_testargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_test_msg_1_svc
parameter_list|(
name|struct
name|nlm_testargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_LOCK_MSG
value|((unsigned long)(7))
specifier|extern
name|enum
name|clnt_stat
name|nlm_lock_msg_1
parameter_list|(
name|struct
name|nlm_lockargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_lock_msg_1_svc
parameter_list|(
name|struct
name|nlm_lockargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_CANCEL_MSG
value|((unsigned long)(8))
specifier|extern
name|enum
name|clnt_stat
name|nlm_cancel_msg_1
parameter_list|(
name|struct
name|nlm_cancargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_cancel_msg_1_svc
parameter_list|(
name|struct
name|nlm_cancargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_UNLOCK_MSG
value|((unsigned long)(9))
specifier|extern
name|enum
name|clnt_stat
name|nlm_unlock_msg_1
parameter_list|(
name|struct
name|nlm_unlockargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_unlock_msg_1_svc
parameter_list|(
name|struct
name|nlm_unlockargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_GRANTED_MSG
value|((unsigned long)(10))
specifier|extern
name|enum
name|clnt_stat
name|nlm_granted_msg_1
parameter_list|(
name|struct
name|nlm_testargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_granted_msg_1_svc
parameter_list|(
name|struct
name|nlm_testargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_TEST_RES
value|((unsigned long)(11))
specifier|extern
name|enum
name|clnt_stat
name|nlm_test_res_1
parameter_list|(
name|nlm_testres
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_test_res_1_svc
parameter_list|(
name|nlm_testres
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_LOCK_RES
value|((unsigned long)(12))
specifier|extern
name|enum
name|clnt_stat
name|nlm_lock_res_1
parameter_list|(
name|nlm_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_lock_res_1_svc
parameter_list|(
name|nlm_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_CANCEL_RES
value|((unsigned long)(13))
specifier|extern
name|enum
name|clnt_stat
name|nlm_cancel_res_1
parameter_list|(
name|nlm_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_cancel_res_1_svc
parameter_list|(
name|nlm_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_UNLOCK_RES
value|((unsigned long)(14))
specifier|extern
name|enum
name|clnt_stat
name|nlm_unlock_res_1
parameter_list|(
name|nlm_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_unlock_res_1_svc
parameter_list|(
name|nlm_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_GRANTED_RES
value|((unsigned long)(15))
specifier|extern
name|enum
name|clnt_stat
name|nlm_granted_res_1
parameter_list|(
name|nlm_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_granted_res_1_svc
parameter_list|(
name|nlm_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|nlm_prog_1_freeresult
parameter_list|(
name|SVCXPRT
modifier|*
parameter_list|,
name|xdrproc_t
parameter_list|,
name|caddr_t
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_VERSX
value|((unsigned long)(3))
define|#
directive|define
name|NLM_SHARE
value|((unsigned long)(20))
specifier|extern
name|enum
name|clnt_stat
name|nlm_share_3
parameter_list|(
name|nlm_shareargs
modifier|*
parameter_list|,
name|nlm_shareres
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_share_3_svc
parameter_list|(
name|nlm_shareargs
modifier|*
parameter_list|,
name|nlm_shareres
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_UNSHARE
value|((unsigned long)(21))
specifier|extern
name|enum
name|clnt_stat
name|nlm_unshare_3
parameter_list|(
name|nlm_shareargs
modifier|*
parameter_list|,
name|nlm_shareres
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_unshare_3_svc
parameter_list|(
name|nlm_shareargs
modifier|*
parameter_list|,
name|nlm_shareres
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_NM_LOCK
value|((unsigned long)(22))
specifier|extern
name|enum
name|clnt_stat
name|nlm_nm_lock_3
parameter_list|(
name|nlm_lockargs
modifier|*
parameter_list|,
name|nlm_res
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_nm_lock_3_svc
parameter_list|(
name|nlm_lockargs
modifier|*
parameter_list|,
name|nlm_res
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_FREE_ALL
value|((unsigned long)(23))
specifier|extern
name|enum
name|clnt_stat
name|nlm_free_all_3
parameter_list|(
name|nlm_notify
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm_free_all_3_svc
parameter_list|(
name|nlm_notify
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|nlm_prog_3_freeresult
parameter_list|(
name|SVCXPRT
modifier|*
parameter_list|,
name|xdrproc_t
parameter_list|,
name|caddr_t
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM_VERS4
value|((unsigned long)(4))
define|#
directive|define
name|NLM4_TEST
value|((unsigned long)(1))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_test_4
parameter_list|(
name|nlm4_testargs
modifier|*
parameter_list|,
name|nlm4_testres
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_test_4_svc
parameter_list|(
name|nlm4_testargs
modifier|*
parameter_list|,
name|nlm4_testres
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_LOCK
value|((unsigned long)(2))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_lock_4
parameter_list|(
name|nlm4_lockargs
modifier|*
parameter_list|,
name|nlm4_res
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_lock_4_svc
parameter_list|(
name|nlm4_lockargs
modifier|*
parameter_list|,
name|nlm4_res
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_CANCEL
value|((unsigned long)(3))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_cancel_4
parameter_list|(
name|nlm4_cancargs
modifier|*
parameter_list|,
name|nlm4_res
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_cancel_4_svc
parameter_list|(
name|nlm4_cancargs
modifier|*
parameter_list|,
name|nlm4_res
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_UNLOCK
value|((unsigned long)(4))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_unlock_4
parameter_list|(
name|nlm4_unlockargs
modifier|*
parameter_list|,
name|nlm4_res
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_unlock_4_svc
parameter_list|(
name|nlm4_unlockargs
modifier|*
parameter_list|,
name|nlm4_res
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_GRANTED
value|((unsigned long)(5))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_granted_4
parameter_list|(
name|nlm4_testargs
modifier|*
parameter_list|,
name|nlm4_res
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_granted_4_svc
parameter_list|(
name|nlm4_testargs
modifier|*
parameter_list|,
name|nlm4_res
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_TEST_MSG
value|((unsigned long)(6))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_test_msg_4
parameter_list|(
name|nlm4_testargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_test_msg_4_svc
parameter_list|(
name|nlm4_testargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_LOCK_MSG
value|((unsigned long)(7))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_lock_msg_4
parameter_list|(
name|nlm4_lockargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_lock_msg_4_svc
parameter_list|(
name|nlm4_lockargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_CANCEL_MSG
value|((unsigned long)(8))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_cancel_msg_4
parameter_list|(
name|nlm4_cancargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_cancel_msg_4_svc
parameter_list|(
name|nlm4_cancargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_UNLOCK_MSG
value|((unsigned long)(9))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_unlock_msg_4
parameter_list|(
name|nlm4_unlockargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_unlock_msg_4_svc
parameter_list|(
name|nlm4_unlockargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_GRANTED_MSG
value|((unsigned long)(10))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_granted_msg_4
parameter_list|(
name|nlm4_testargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_granted_msg_4_svc
parameter_list|(
name|nlm4_testargs
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_TEST_RES
value|((unsigned long)(11))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_test_res_4
parameter_list|(
name|nlm4_testres
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_test_res_4_svc
parameter_list|(
name|nlm4_testres
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_LOCK_RES
value|((unsigned long)(12))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_lock_res_4
parameter_list|(
name|nlm4_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_lock_res_4_svc
parameter_list|(
name|nlm4_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_CANCEL_RES
value|((unsigned long)(13))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_cancel_res_4
parameter_list|(
name|nlm4_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_cancel_res_4_svc
parameter_list|(
name|nlm4_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_UNLOCK_RES
value|((unsigned long)(14))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_unlock_res_4
parameter_list|(
name|nlm4_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_unlock_res_4_svc
parameter_list|(
name|nlm4_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_GRANTED_RES
value|((unsigned long)(15))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_granted_res_4
parameter_list|(
name|nlm4_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_granted_res_4_svc
parameter_list|(
name|nlm4_res
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_SHARE
value|((unsigned long)(20))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_share_4
parameter_list|(
name|nlm4_shareargs
modifier|*
parameter_list|,
name|nlm4_shareres
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_share_4_svc
parameter_list|(
name|nlm4_shareargs
modifier|*
parameter_list|,
name|nlm4_shareres
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_UNSHARE
value|((unsigned long)(21))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_unshare_4
parameter_list|(
name|nlm4_shareargs
modifier|*
parameter_list|,
name|nlm4_shareres
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_unshare_4_svc
parameter_list|(
name|nlm4_shareargs
modifier|*
parameter_list|,
name|nlm4_shareres
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_NM_LOCK
value|((unsigned long)(22))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_nm_lock_4
parameter_list|(
name|nlm4_lockargs
modifier|*
parameter_list|,
name|nlm4_res
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_nm_lock_4_svc
parameter_list|(
name|nlm4_lockargs
modifier|*
parameter_list|,
name|nlm4_res
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|NLM4_FREE_ALL
value|((unsigned long)(23))
specifier|extern
name|enum
name|clnt_stat
name|nlm4_free_all_4
parameter_list|(
name|nlm4_notify
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|nlm4_free_all_4_svc
parameter_list|(
name|nlm4_notify
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|nlm_prog_4_freeresult
parameter_list|(
name|SVCXPRT
modifier|*
parameter_list|,
name|xdrproc_t
parameter_list|,
name|caddr_t
parameter_list|)
function_decl|;
comment|/* the xdr functions */
specifier|extern
name|bool_t
name|xdr_nlm_stats
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_stats
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_holder
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_holder
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_testrply
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_testrply
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_stat
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_stat
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_res
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_res
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_testres
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_testres
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_lock
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_lock
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_lockargs
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_lockargs
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_cancargs
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_cancargs
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_testargs
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_testargs
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_unlockargs
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_unlockargs
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_fsh_mode
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|fsh_mode
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_fsh_access
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|fsh_access
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_share
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_share
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_shareargs
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_shareargs
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_shareres
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_shareres
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_notify
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_notify
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_stats
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_stats
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_stat
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_stat
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_holder
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_holder
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_lock
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_lock
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_share
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_share
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_testrply
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_testrply
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_testres
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_testres
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_testargs
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_testargs
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_res
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_res
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_lockargs
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_lockargs
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_cancargs
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_cancargs
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_unlockargs
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_unlockargs
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_shareargs
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_shareargs
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_shareres
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_shareres
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm_sm_status
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm_sm_status
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_nlm4_notify
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|nlm4_notify
modifier|*
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_NLM_PROT_H_RPCGEN */
end_comment

end_unit

