begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1998 Doug Rabson  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	$Id$  */
end_comment

begin_define
define|#
directive|define
name|S_FORMAT
value|0
end_define

begin_comment
comment|/* IEEE single */
end_comment

begin_define
define|#
directive|define
name|T_FORMAT
value|2
end_define

begin_comment
comment|/* IEEE double */
end_comment

begin_define
define|#
directive|define
name|Q_FORMAT
value|3
end_define

begin_comment
comment|/* 64 bit fixed */
end_comment

begin_define
define|#
directive|define
name|ROUND_CHOP
value|0
end_define

begin_comment
comment|/* truncate fraction */
end_comment

begin_define
define|#
directive|define
name|ROUND_MINUS_INF
value|1
end_define

begin_comment
comment|/* round to -INF */
end_comment

begin_define
define|#
directive|define
name|ROUND_NORMAL
value|2
end_define

begin_comment
comment|/* round to nearest */
end_comment

begin_define
define|#
directive|define
name|ROUND_PLUS_INF
value|3
end_define

begin_comment
comment|/* round to +INF */
end_comment

begin_typedef
typedef|typedef
union|union
name|fp_register
block|{
struct|struct
block|{
name|u_int64_t
name|fraction
range|:
literal|52
decl_stmt|;
name|u_int64_t
name|exponent
range|:
literal|11
decl_stmt|;
name|u_int64_t
name|sign
range|:
literal|1
decl_stmt|;
block|}
name|t
struct|;
name|u_int64_t
name|q
decl_stmt|;
block|}
name|fp_register_t
typedef|;
end_typedef

begin_function_decl
name|fp_register_t
name|ieee_add
parameter_list|(
name|fp_register_t
name|fa
parameter_list|,
name|fp_register_t
name|fb
parameter_list|,
name|int
name|src
parameter_list|,
name|int
name|rnd
parameter_list|,
name|u_int64_t
name|control
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_sub
parameter_list|(
name|fp_register_t
name|fa
parameter_list|,
name|fp_register_t
name|fb
parameter_list|,
name|int
name|src
parameter_list|,
name|int
name|rnd
parameter_list|,
name|u_int64_t
name|control
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_mul
parameter_list|(
name|fp_register_t
name|fa
parameter_list|,
name|fp_register_t
name|fb
parameter_list|,
name|int
name|src
parameter_list|,
name|int
name|rnd
parameter_list|,
name|u_int64_t
name|control
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_div
parameter_list|(
name|fp_register_t
name|fa
parameter_list|,
name|fp_register_t
name|fb
parameter_list|,
name|int
name|src
parameter_list|,
name|int
name|rnd
parameter_list|,
name|u_int64_t
name|control
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_cmpun
parameter_list|(
name|fp_register_t
name|fa
parameter_list|,
name|fp_register_t
name|fb
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_cmpeq
parameter_list|(
name|fp_register_t
name|fa
parameter_list|,
name|fp_register_t
name|fb
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_cmplt
parameter_list|(
name|fp_register_t
name|fa
parameter_list|,
name|fp_register_t
name|fb
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_cmple
parameter_list|(
name|fp_register_t
name|fa
parameter_list|,
name|fp_register_t
name|fb
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_convert_S_T
parameter_list|(
name|fp_register_t
name|f
parameter_list|,
name|int
name|rnd
parameter_list|,
name|u_int64_t
name|control
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_convert_T_S
parameter_list|(
name|fp_register_t
name|f
parameter_list|,
name|int
name|rnd
parameter_list|,
name|u_int64_t
name|control
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_convert_Q_T
parameter_list|(
name|fp_register_t
name|f
parameter_list|,
name|int
name|rnd
parameter_list|,
name|u_int64_t
name|control
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_convert_Q_S
parameter_list|(
name|fp_register_t
name|f
parameter_list|,
name|int
name|rnd
parameter_list|,
name|u_int64_t
name|control
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_convert_T_Q
parameter_list|(
name|fp_register_t
name|f
parameter_list|,
name|int
name|rnd
parameter_list|,
name|u_int64_t
name|control
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|fp_register_t
name|ieee_convert_S_Q
parameter_list|(
name|fp_register_t
name|f
parameter_list|,
name|int
name|rnd
parameter_list|,
name|u_int64_t
name|control
parameter_list|,
name|u_int64_t
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

end_unit

