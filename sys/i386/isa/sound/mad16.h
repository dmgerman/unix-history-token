begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  *	Initialization code for OPTI MAD16 interface chip by  *	Davor Jadrijevic<davor@emard.pub.hr>  *	(Included by ad1848.c when MAD16 support is enabled)  *  * It looks like MAD16 is similar than the Mozart chip (OAK OTI-601).  * It could be even possible that these chips are exactly the same. Can  * anybody confirm this?  */
end_comment

begin_function
specifier|static
name|void
name|wr_a_mad16
parameter_list|(
name|int
name|base
parameter_list|,
name|int
name|v
parameter_list|,
name|int
name|a
parameter_list|)
block|{
name|OUTB
argument_list|(
name|a
argument_list|,
name|base
operator|+
literal|0xf
argument_list|)
expr_stmt|;
name|OUTB
argument_list|(
name|v
argument_list|,
name|base
operator|+
literal|0x11
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|void
name|wr_b_mad16
parameter_list|(
name|int
name|base
parameter_list|,
name|int
name|v
parameter_list|,
name|int
name|a
parameter_list|)
block|{
name|OUTB
argument_list|(
name|a
argument_list|,
name|base
operator|+
literal|0xf
argument_list|)
expr_stmt|;
name|OUTB
argument_list|(
name|v
argument_list|,
name|base
operator|+
literal|0xd
argument_list|)
expr_stmt|;
block|}
end_function

begin_comment
comment|/* static int rd_a_mad16(int base, int a) {  OUTB(a, base + 0xf);  return INB(base + 0x11); } */
end_comment

begin_function
specifier|static
name|int
name|rd_b_mad16
parameter_list|(
name|int
name|base
parameter_list|,
name|int
name|a
parameter_list|)
block|{
name|OUTB
argument_list|(
name|a
argument_list|,
name|base
operator|+
literal|0xf
argument_list|)
expr_stmt|;
return|return
name|INB
argument_list|(
name|base
operator|+
literal|0xd
argument_list|)
return|;
block|}
end_function

begin_comment
comment|/* static int rd_0_mad16(int base, int a) {  OUTB(a, base + 0xf);  return INB(base + 0xf); }  static void wr_ad(int base, int v, int a) {  OUTB(a, base + 4);  OUTB(v, base + 5); }  static int rd_ad(int base, int a) {  OUTB(a, base + 4);  return INB(base + 5); } */
end_comment

begin_function
specifier|static
name|int
name|mad16init
parameter_list|(
name|int
name|adr
parameter_list|)
block|{
name|int
name|j
decl_stmt|;
name|long
name|i
decl_stmt|;
specifier|static
name|int
name|ad1848_bases
index|[]
init|=
block|{
literal|0x220
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|0x240
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|0x530
block|,
literal|0xE80
block|,
literal|0xF40
block|,
literal|0x604
block|,
literal|0
block|}
decl_stmt|;
name|int
name|mad16_base
init|=
literal|0xf80
decl_stmt|,
name|ad1848_base
decl_stmt|;
for|for
control|(
name|j
operator|=
literal|0
init|;
operator|(
name|j
operator|<
literal|16
operator|)
operator|&&
operator|(
name|ad1848_bases
index|[
name|j
index|]
operator|!=
literal|0
operator|)
condition|;
name|j
operator|++
control|)
if|if
condition|(
name|adr
operator|==
name|ad1848_bases
index|[
name|j
index|]
condition|)
break|break;
if|if
condition|(
operator|(
name|ad1848_base
operator|=
name|ad1848_bases
index|[
name|j
index|]
operator|)
operator|<
literal|0x530
condition|)
block|{
name|printk
argument_list|(
literal|"Unknown MAD16 setting 0x%3X\n"
argument_list|,
name|adr
argument_list|)
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
comment|/* printk("OPTi MAD16 WSS at 0x%3X\n", ad1848_base); */
name|rd_b_mad16
argument_list|(
name|mad16_base
argument_list|,
literal|0xe2
argument_list|)
expr_stmt|;
name|wr_a_mad16
argument_list|(
name|mad16_base
argument_list|,
literal|0x1a
argument_list|,
literal|0xe2
argument_list|)
expr_stmt|;
name|wr_b_mad16
argument_list|(
name|mad16_base
argument_list|,
name|j
operator|*
literal|16
operator|+
literal|1
argument_list|,
literal|0xe2
argument_list|)
expr_stmt|;
name|wr_a_mad16
argument_list|(
name|mad16_base
argument_list|,
literal|0x1a
argument_list|,
literal|0xe2
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|10000
condition|;
name|i
operator|++
control|)
if|if
condition|(
operator|(
name|INB
argument_list|(
name|ad1848_base
operator|+
literal|4
argument_list|)
operator|&
literal|0x80
operator|)
operator|==
literal|0
condition|)
break|break;
return|return
literal|0
return|;
block|}
end_function

begin_empty_stmt
empty_stmt|;
end_empty_stmt

end_unit

