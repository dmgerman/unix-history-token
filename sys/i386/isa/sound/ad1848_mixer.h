begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * sound/ad1848_mixer.h  *   * Definitions for the mixer of AD1848 and compatible codecs.  *   * Copyright by Hannu Savolainen 1994  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met: 1. Redistributions of source code must retain the above copyright  * notice, this list of conditions and the following disclaimer. 2.  * Redistributions in binary form must reproduce the above copyright notice,  * this list of conditions and the following disclaimer in the documentation  * and/or other materials provided with the distribution.  *   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*  * The AD1848 codec has generic input lines called Line, Aux1 and Aux2.  * Soundcard manufacturers have connected actual inputs (CD, synth, line,  * etc) to these inputs in different order. Therefore it's difficult  * to assign mixer channels to to these inputs correctly. The following  * contains two alternative mappings. The first one is for GUS MAX and  * the second is just a generic one (line1, line2 and line3).  * (Actually this is not a mapping but rather some kind of interleaving  * solution).  */
end_comment

begin_define
define|#
directive|define
name|GUSMAX_MIXER
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|GUSMAX_MIXER
end_ifdef

begin_define
define|#
directive|define
name|MODE1_REC_DEVICES
value|(SOUND_MASK_LINE | SOUND_MASK_MIC | \ 					 SOUND_MASK_CD|SOUND_MASK_IMIX)
end_define

begin_define
define|#
directive|define
name|MODE1_MIXER_DEVICES
value|(SOUND_MASK_SYNTH | SOUND_MASK_MIC | \ 					 SOUND_MASK_CD | \ 					 SOUND_MASK_IGAIN | \ 					 SOUND_MASK_PCM|SOUND_MASK_IMIX)
end_define

begin_define
define|#
directive|define
name|MODE2_MIXER_DEVICES
value|(SOUND_MASK_SYNTH | SOUND_MASK_LINE | SOUND_MASK_MIC | \ 					 SOUND_MASK_CD | SOUND_MASK_SPEAKER | \ 					 SOUND_MASK_IGAIN | \ 					 SOUND_MASK_PCM | SOUND_MASK_IMIX)
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* Generic mapping */
end_comment

begin_define
define|#
directive|define
name|MODE1_REC_DEVICES
value|(SOUND_MASK_LINE3 | SOUND_MASK_MIC | \ 					 SOUND_MASK_LINE1|SOUND_MASK_IMIX)
end_define

begin_define
define|#
directive|define
name|MODE1_MIXER_DEVICES
value|(SOUND_MASK_LINE1 | SOUND_MASK_MIC | \ 					 SOUND_MASK_LINE2 | \ 					 SOUND_MASK_IGAIN | \ 					 SOUND_MASK_PCM | SOUND_MASK_IMIX)
end_define

begin_define
define|#
directive|define
name|MODE2_MIXER_DEVICES
value|(SOUND_MASK_LINE1 | SOUND_MASK_LINE2 | SOUND_MASK_MIC | \ 					 SOUND_MASK_LINE3 | SOUND_MASK_SPEAKER | \ 					 SOUND_MASK_IGAIN | \ 					 SOUND_MASK_PCM | SOUND_MASK_IMIX)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_struct
struct|struct
name|mixer_def
block|{
name|unsigned
name|int
name|regno
range|:
literal|7
decl_stmt|;
name|unsigned
name|int
name|polarity
range|:
literal|1
decl_stmt|;
comment|/* 0=normal, 1=reversed */
name|unsigned
name|int
name|bitpos
range|:
literal|4
decl_stmt|;
name|unsigned
name|int
name|nbits
range|:
literal|4
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|static
name|char
name|mix_cvt
index|[
literal|101
index|]
init|=
block|{
literal|0
block|,
literal|0
block|,
literal|3
block|,
literal|7
block|,
literal|10
block|,
literal|13
block|,
literal|16
block|,
literal|19
block|,
literal|21
block|,
literal|23
block|,
literal|26
block|,
literal|28
block|,
literal|30
block|,
literal|32
block|,
literal|34
block|,
literal|35
block|,
literal|37
block|,
literal|39
block|,
literal|40
block|,
literal|42
block|,
literal|43
block|,
literal|45
block|,
literal|46
block|,
literal|47
block|,
literal|49
block|,
literal|50
block|,
literal|51
block|,
literal|52
block|,
literal|53
block|,
literal|55
block|,
literal|56
block|,
literal|57
block|,
literal|58
block|,
literal|59
block|,
literal|60
block|,
literal|61
block|,
literal|62
block|,
literal|63
block|,
literal|64
block|,
literal|65
block|,
literal|65
block|,
literal|66
block|,
literal|67
block|,
literal|68
block|,
literal|69
block|,
literal|70
block|,
literal|70
block|,
literal|71
block|,
literal|72
block|,
literal|73
block|,
literal|73
block|,
literal|74
block|,
literal|75
block|,
literal|75
block|,
literal|76
block|,
literal|77
block|,
literal|77
block|,
literal|78
block|,
literal|79
block|,
literal|79
block|,
literal|80
block|,
literal|81
block|,
literal|81
block|,
literal|82
block|,
literal|82
block|,
literal|83
block|,
literal|84
block|,
literal|84
block|,
literal|85
block|,
literal|85
block|,
literal|86
block|,
literal|86
block|,
literal|87
block|,
literal|87
block|,
literal|88
block|,
literal|88
block|,
literal|89
block|,
literal|89
block|,
literal|90
block|,
literal|90
block|,
literal|91
block|,
literal|91
block|,
literal|92
block|,
literal|92
block|,
literal|93
block|,
literal|93
block|,
literal|94
block|,
literal|94
block|,
literal|95
block|,
literal|95
block|,
literal|96
block|,
literal|96
block|,
literal|96
block|,
literal|97
block|,
literal|97
block|,
literal|98
block|,
literal|98
block|,
literal|98
block|,
literal|99
block|,
literal|99
block|,
literal|100
block|}
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
name|struct
name|mixer_def
name|mixer_ent
typedef|;
end_typedef

begin_comment
comment|/*  * Most of the mixer entries work in backwards. Setting the polarity field  * makes them to work correctly.  *  * The channel numbering used by individual soundcards is not fixed. Some  * cards have assigned different meanings for the AUX1, AUX2 and LINE inputs.  * The current version doesn't try to compensate this.  */
end_comment

begin_define
define|#
directive|define
name|MIX_ENT
parameter_list|(
name|name
parameter_list|,
name|reg_l
parameter_list|,
name|pola_l
parameter_list|,
name|pos_l
parameter_list|,
name|len_l
parameter_list|,
name|reg_r
parameter_list|,
name|pola_r
parameter_list|,
name|pos_r
parameter_list|,
name|len_r
parameter_list|)
define|\
value|{{reg_l, pola_l, pos_l, len_l}, {reg_r, pola_r, pos_r, len_r}}
end_define

begin_decl_stmt
name|mixer_ent
name|mix_devices
index|[
literal|32
index|]
index|[
literal|2
index|]
init|=
block|{
comment|/* As used in GUS MAX */
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_VOLUME
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_BASS
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_TREBLE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_SYNTH
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_PCM
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_SPEAKER
argument_list|,
literal|26
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_LINE
argument_list|,
literal|18
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|19
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_MIC
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_CD
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_IMIX
argument_list|,
literal|13
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|6
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_ALTPCM
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_RECLEV
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_IGAIN
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_OGAIN
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_LINE1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
block|,
name|MIX_ENT
argument_list|(
name|SOUND_MIXER_LINE2
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
block|,
name|MIX_ENT
argument_list|(
argument|SOUND_MIXER_LINE3
argument_list|,
literal|18
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|19
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|unsigned
name|short
name|default_mixer_levels
index|[
name|SOUND_MIXER_NRDEVICES
index|]
init|=
block|{
literal|0x5a5a
block|,
comment|/* Master Volume */
literal|0x3232
block|,
comment|/* Bass */
literal|0x3232
block|,
comment|/* Treble */
literal|0x4b4b
block|,
comment|/* FM */
literal|0x4040
block|,
comment|/* PCM */
literal|0x4b4b
block|,
comment|/* PC Speaker */
comment|/*  0x2020,			 Ext Line */
literal|0x0000
block|,
comment|/* Ext Line */
literal|0x4040
block|,
comment|/* Mic */
literal|0x4b4b
block|,
comment|/* CD */
literal|0x0000
block|,
comment|/* Recording monitor */
literal|0x4b4b
block|,
comment|/* SB PCM */
literal|0x4b4b
block|,
comment|/* Recording level */
literal|0x2525
block|,
comment|/* Input gain */
literal|0x0000
block|,
comment|/* Output gain */
comment|/*  0x4040,			Line1 */
literal|0x0000
block|,
comment|/* Line1 */
literal|0x0000
block|,
comment|/* Line2 */
literal|0x1515
block|,
comment|/* Line3 (usually line in)*/
block|}
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|LEFT_CHN
value|0
end_define

begin_define
define|#
directive|define
name|RIGHT_CHN
value|1
end_define

end_unit

