begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$NetBSD$	*/
end_comment

begin_comment
comment|/*  * [NetBSD for NEC PC98 series]  *  Copyright (c) 1994, 1995, 1996 NetBSD/pc98 porting staff.  *  All rights reserved.  *   *  Redistribution and use in source and binary forms, with or without  *  modification, are permitted provided that the following conditions  *  are met:  *  1. Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  2. Redistributions in binary form must reproduce the above copyright  *     notice, this list of conditions and the following disclaimer in the  *     documentation and/or other materials provided with the distribution.  *  3. The name of the author may not be used to endorse or promote products  *     derived from this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*  * Copyright (c) 1994, 1995, 1996 Naofumi HONDA.  All rights reserved.  */
end_comment

begin_comment
comment|/* NEC port offsets */
end_comment

begin_define
define|#
directive|define
name|BSHW_DEFAULT_PORT
value|0xcc0
end_define

begin_define
define|#
directive|define
name|BSHW_IOSZ
value|5
end_define

begin_define
define|#
directive|define
name|addr_port
value|0
end_define

begin_define
define|#
directive|define
name|stat_port
value|0
end_define

begin_define
define|#
directive|define
name|ctrl_port
value|2
end_define

begin_define
define|#
directive|define
name|cmd_port
value|4
end_define

begin_define
define|#
directive|define
name|BSHW_MAX_OFFSET
value|12
end_define

begin_define
define|#
directive|define
name|BSHW_SEL_TIMEOUT
value|0x80
end_define

begin_define
define|#
directive|define
name|BSHW_READ
value|BSR_IOR
end_define

begin_define
define|#
directive|define
name|BSHW_WRITE
value|0x0
end_define

begin_define
define|#
directive|define
name|BSHW_CMD_CHECK
parameter_list|(
name|CCB
parameter_list|,
name|CAT
parameter_list|)
value|(bshw_cmd[(CCB)->cmd[0]]& (CAT))
end_define

begin_comment
comment|/*********************************************************  * static inline declare.  *********************************************************/
end_comment

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|write_wd33c93
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int
operator|,
name|u_int8_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|u_int8_t
name|read_wd33c93
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|u_int8_t
name|bshw_get_auxstat
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|u_int8_t
name|bshw_get_busstat
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|u_int8_t
name|bshw_get_status_insat
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|u_int8_t
name|bshw_read_data
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_write_data
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int8_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_set_count
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|u_int
name|bshw_get_count
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_set_dst_id
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_set_lun
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|u_int
name|bshw_get_src_id
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_negate_ack
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_assert_atn
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_assert_select
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_start_xfer
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_start_sxfer
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_cmd_pass
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_start_sat
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_abort_cmd
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_set_sync_reg
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_set_poll_trans
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|BS_INLINE
name|void
name|bshw_set_dma_trans
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*********************************************************  * global declare  *********************************************************/
end_comment

begin_decl_stmt
name|void
name|bs_dma_xfer
name|__P
argument_list|(
operator|(
expr|struct
name|targ_info
operator|*
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bs_dma_xfer_end
name|__P
argument_list|(
operator|(
expr|struct
name|targ_info
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bshw_dmaabort
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
expr|struct
name|targ_info
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bshw_adj_syncdata
name|__P
argument_list|(
operator|(
expr|struct
name|syncdata
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bshw_set_synchronous
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
expr|struct
name|targ_info
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bs_smit_xfer_end
name|__P
argument_list|(
operator|(
expr|struct
name|targ_info
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bshw_smitabort
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bshw_setup_ctrl_reg
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|bshw_chip_reset
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bshw_bus_reset
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|bshw_board_probe
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
name|u_int
operator|*
operator|,
name|u_int
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bshw_lock
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bshw_unlock
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bshw_get_syncreg
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bshw_issue_satcmd
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|,
expr|struct
name|ccb
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bshw_print_port
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bs_lc_smit_xfer
name|__P
argument_list|(
operator|(
expr|struct
name|targ_info
operator|*
operator|,
name|u_int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|dvcfg_hwsel
name|bshw_hwsel
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|u_int8_t
name|bshw_cmd
index|[]
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*********************************************************  * hw  *********************************************************/
end_comment

begin_struct
struct|struct
name|bshw
block|{
define|#
directive|define
name|BSHW_SYNC_RELOAD
value|0x01
define|#
directive|define
name|BSHW_SMFIFO
value|0x02
define|#
directive|define
name|BSHW_DOUBLE_DMACHAN
value|0x04
name|u_int
name|hw_flags
decl_stmt|;
name|u_int
name|sregaddr
decl_stmt|;
name|int
argument_list|(
operator|(
operator|*
name|dma_init
operator|)
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|void
argument_list|(
operator|(
operator|*
name|dma_start
operator|)
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|void
argument_list|(
operator|(
operator|*
name|dma_stop
operator|)
name|__P
argument_list|(
operator|(
expr|struct
name|bs_softc
operator|*
operator|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*********************************************************  * inline funcs.  *********************************************************/
end_comment

begin_comment
comment|/*  * XXX: If your board does not work well, Please try BS_NEEDS_WEIGHT.  */
end_comment

begin_function
specifier|static
name|BS_INLINE
name|void
name|write_wd33c93
parameter_list|(
name|bsc
parameter_list|,
name|addr
parameter_list|,
name|data
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
name|u_int
name|addr
decl_stmt|;
name|u_int8_t
name|data
decl_stmt|;
block|{
name|BUS_IOW
argument_list|(
name|addr_port
argument_list|,
name|addr
argument_list|)
expr_stmt|;
name|BUS_IOW
argument_list|(
name|ctrl_port
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|u_int8_t
name|read_wd33c93
parameter_list|(
name|bsc
parameter_list|,
name|addr
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
name|u_int
name|addr
decl_stmt|;
block|{
name|BUS_IOW
argument_list|(
name|addr_port
argument_list|,
name|addr
argument_list|)
expr_stmt|;
return|return
name|BUS_IOR
argument_list|(
name|ctrl_port
argument_list|)
return|;
block|}
end_function

begin_comment
comment|/* status */
end_comment

begin_function
specifier|static
name|BS_INLINE
name|u_int8_t
name|bshw_get_auxstat
parameter_list|(
name|bsc
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
block|{
return|return
name|BUS_IOR
argument_list|(
name|stat_port
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|u_int8_t
name|bshw_get_busstat
parameter_list|(
name|bsc
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
block|{
return|return
name|read_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_stat
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|u_int8_t
name|bshw_get_status_insat
parameter_list|(
name|bsc
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
block|{
return|return
name|read_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_lun
argument_list|)
return|;
block|}
end_function

begin_comment
comment|/* data */
end_comment

begin_function
specifier|static
name|BS_INLINE
name|u_int8_t
name|bshw_read_data
parameter_list|(
name|bsc
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
block|{
return|return
name|read_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_data
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_write_data
parameter_list|(
name|bsc
parameter_list|,
name|data
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
name|u_int8_t
name|data
decl_stmt|;
block|{
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_data
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
end_function

begin_comment
comment|/* counter */
end_comment

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_set_count
parameter_list|(
name|bsc
parameter_list|,
name|count
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
name|u_int
name|count
decl_stmt|;
block|{
name|BUS_IOW
argument_list|(
name|addr_port
argument_list|,
name|wd3s_cnt
argument_list|)
expr_stmt|;
name|BUS_IOW
argument_list|(
name|ctrl_port
argument_list|,
name|count
operator|>>
literal|16
argument_list|)
expr_stmt|;
name|BUS_IOW
argument_list|(
name|ctrl_port
argument_list|,
name|count
operator|>>
literal|8
argument_list|)
expr_stmt|;
name|BUS_IOW
argument_list|(
name|ctrl_port
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|u_int
name|bshw_get_count
parameter_list|(
name|bsc
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
block|{
name|u_int
name|count
decl_stmt|;
name|BUS_IOW
argument_list|(
name|addr_port
argument_list|,
name|wd3s_cnt
argument_list|)
expr_stmt|;
name|count
operator|=
operator|(
operator|(
operator|(
name|u_int
operator|)
name|BUS_IOR
argument_list|(
name|ctrl_port
argument_list|)
operator|)
operator|<<
literal|16
operator|)
expr_stmt|;
name|count
operator|+=
operator|(
operator|(
operator|(
name|u_int
operator|)
name|BUS_IOR
argument_list|(
name|ctrl_port
argument_list|)
operator|)
operator|<<
literal|8
operator|)
expr_stmt|;
name|count
operator|+=
operator|(
operator|(
name|u_int
operator|)
name|BUS_IOR
argument_list|(
name|ctrl_port
argument_list|)
operator|)
expr_stmt|;
return|return
name|count
return|;
block|}
end_function

begin_comment
comment|/* ID */
end_comment

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_set_lun
parameter_list|(
name|bsc
parameter_list|,
name|lun
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
name|u_int
name|lun
decl_stmt|;
block|{
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_lun
argument_list|,
name|lun
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_set_dst_id
parameter_list|(
name|bsc
parameter_list|,
name|target
parameter_list|,
name|lun
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
name|u_int
name|target
decl_stmt|,
name|lun
decl_stmt|;
block|{
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_did
argument_list|,
name|target
argument_list|)
expr_stmt|;
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_lun
argument_list|,
name|lun
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|u_int
name|bshw_get_src_id
parameter_list|(
name|bsc
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
block|{
return|return
operator|(
name|read_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_sid
argument_list|)
operator|&
name|SIDR_IDM
operator|)
return|;
block|}
end_function

begin_comment
comment|/* phase */
end_comment

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_negate_ack
parameter_list|(
name|bsc
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
block|{
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_cmd
argument_list|,
name|WD3S_NEGATE_ACK
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_assert_atn
parameter_list|(
name|bsc
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
block|{
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_cmd
argument_list|,
name|WD3S_ASSERT_ATN
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_assert_select
parameter_list|(
name|bsc
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
block|{
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_cmd
argument_list|,
name|WD3S_SELECT_ATN
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_start_xfer
parameter_list|(
name|bsc
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
block|{
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_cmd
argument_list|,
name|WD3S_TFR_INFO
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_start_sxfer
parameter_list|(
name|bsc
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
block|{
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_cmd
argument_list|,
name|WD3S_SBT
operator||
name|WD3S_TFR_INFO
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_cmd_pass
parameter_list|(
name|bsc
parameter_list|,
name|ph
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
name|u_int
name|ph
decl_stmt|;
block|{
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_cph
argument_list|,
name|ph
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_start_sat
parameter_list|(
name|bsc
parameter_list|,
name|flag
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
name|u_int
name|flag
decl_stmt|;
block|{
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_cmd
argument_list|,
operator|(
name|flag
condition|?
name|WD3S_SELECT_ATN_TFR
else|:
name|WD3S_SELECT_NO_ATN_TFR
operator|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_abort_cmd
parameter_list|(
name|bsc
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
block|{
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_cmd
argument_list|,
name|WD3S_ABORT
argument_list|)
expr_stmt|;
block|}
end_function

begin_comment
comment|/* transfer mode */
end_comment

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_set_sync_reg
parameter_list|(
name|bsc
parameter_list|,
name|val
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
name|u_int
name|val
decl_stmt|;
block|{
name|write_wd33c93
argument_list|(
name|bsc
argument_list|,
name|wd3s_synch
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_set_poll_trans
parameter_list|(
name|bsc
parameter_list|,
name|flags
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
name|u_int
name|flags
decl_stmt|;
block|{
if|if
condition|(
name|bsc
operator|->
name|sc_flags
operator|&
name|BSDMATRANSFER
condition|)
block|{
name|bsc
operator|->
name|sc_flags
operator|&=
operator|~
name|BSDMATRANSFER
expr_stmt|;
name|bshw_setup_ctrl_reg
argument_list|(
name|bsc
argument_list|,
name|flags
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|BS_INLINE
name|void
name|bshw_set_dma_trans
parameter_list|(
name|bsc
parameter_list|,
name|flags
parameter_list|)
name|struct
name|bs_softc
modifier|*
name|bsc
decl_stmt|;
name|u_int
name|flags
decl_stmt|;
block|{
if|if
condition|(
operator|(
name|bsc
operator|->
name|sc_flags
operator|&
name|BSDMATRANSFER
operator|)
operator|==
literal|0
condition|)
block|{
name|bsc
operator|->
name|sc_flags
operator||=
name|BSDMATRANSFER
expr_stmt|;
name|bshw_setup_ctrl_reg
argument_list|(
name|bsc
argument_list|,
name|flags
argument_list|)
expr_stmt|;
block|}
block|}
end_function

end_unit

