begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$FreeBSD$	*/
end_comment

begin_comment
comment|/*	$NecBSD: physio_proc.h,v 3.4 1999/07/23 20:47:03 honda Exp $	*/
end_comment

begin_comment
comment|/*	$NetBSD$	*/
end_comment

begin_comment
comment|/*  * [NetBSD for NEC PC-98 series]  *  Copyright (c) 1998  *	NetBSD/pc98 porting staff. All rights reserved.  *   *  Redistribution and use in source and binary forms, with or without  *  modification, are permitted provided that the following conditions  *  are met:  *  1. Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  2. Redistributions in binary form must reproduce the above copyright  *     notice, this list of conditions and the following disclaimer in the  *     documentation and/or other materials provided with the distribution.  *  3. The name of the author may not be used to endorse or promote products  *     derived from this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_I386_PHYSIO_PROC_H_
end_ifndef

begin_define
define|#
directive|define
name|_I386_PHYSIO_PROC_H_
end_define

begin_include
include|#
directive|include
file|<sys/buf.h>
end_include

begin_include
include|#
directive|include
file|<sys/queue.h>
end_include

begin_struct_decl
struct_decl|struct
name|physio_proc
struct_decl|;
end_struct_decl

begin_expr_stmt
name|TAILQ_HEAD
argument_list|(
name|physio_proc_head
argument_list|,
name|physio_proc
argument_list|)
expr_stmt|;
end_expr_stmt

begin_decl_stmt
name|struct
name|physio_proc_head
name|physio_proc_freet
decl_stmt|,
name|physio_proc_busyt
decl_stmt|;
end_decl_stmt

begin_struct
struct|struct
name|physio_proc
block|{
name|TAILQ_ENTRY
argument_list|(
argument|physio_proc
argument_list|)
name|pp_chain
expr_stmt|;
name|struct
name|proc
modifier|*
name|pp_proc
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
specifier|static
name|__inline
expr|struct
name|physio_proc
operator|*
name|physio_proc_enter
name|__P
argument_list|(
operator|(
expr|struct
name|buf
operator|*
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_decl_stmt
specifier|static
name|__inline
name|void
name|physio_proc_leave
name|__P
argument_list|(
operator|(
expr|struct
name|physio_proc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_expr_stmt
specifier|static
name|__inline
expr|struct
name|physio_proc
operator|*
name|physio_proc_enter
argument_list|(
argument|bp
argument_list|)
expr|struct
name|buf
operator|*
name|bp
expr_stmt|;
end_expr_stmt

begin_block
block|{
name|struct
name|physio_proc
modifier|*
name|pp
decl_stmt|;
name|int
name|s
decl_stmt|;
if|if
condition|(
name|bp
operator|==
name|NULL
operator|||
operator|(
name|bp
operator|->
name|b_flags
operator|&
name|B_PHYS
operator|)
operator|==
literal|0
condition|)
return|return
name|NULL
return|;
if|if
condition|(
operator|(
name|pp
operator|=
name|physio_proc_freet
operator|.
name|tqh_first
operator|)
operator|==
name|NULL
condition|)
return|return
name|NULL
return|;
name|s
operator|=
name|splstatclock
argument_list|()
expr_stmt|;
name|TAILQ_REMOVE
argument_list|(
operator|&
name|physio_proc_freet
argument_list|,
name|pp
argument_list|,
name|pp_chain
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|||
name|__FreeBSD_version
operator|<
literal|400001
name|pp
operator|->
name|pp_proc
operator|=
name|bp
operator|->
name|b_proc
expr_stmt|;
endif|#
directive|endif
name|TAILQ_INSERT_TAIL
argument_list|(
operator|&
name|physio_proc_busyt
argument_list|,
name|pp
argument_list|,
name|pp_chain
argument_list|)
expr_stmt|;
name|splx
argument_list|(
name|s
argument_list|)
expr_stmt|;
return|return
name|pp
return|;
block|}
end_block

begin_function
specifier|static
name|__inline
name|void
name|physio_proc_leave
parameter_list|(
name|pp
parameter_list|)
name|struct
name|physio_proc
modifier|*
name|pp
decl_stmt|;
block|{
name|int
name|s
decl_stmt|;
if|if
condition|(
name|pp
operator|==
name|NULL
condition|)
return|return;
name|s
operator|=
name|splstatclock
argument_list|()
expr_stmt|;
name|TAILQ_REMOVE
argument_list|(
operator|&
name|physio_proc_busyt
argument_list|,
name|pp
argument_list|,
name|pp_chain
argument_list|)
expr_stmt|;
name|TAILQ_INSERT_TAIL
argument_list|(
operator|&
name|physio_proc_freet
argument_list|,
name|pp
argument_list|,
name|pp_chain
argument_list|)
expr_stmt|;
name|pp
operator|->
name|pp_proc
operator|=
name|NULL
expr_stmt|;
name|splx
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_decl_stmt
name|void
name|physio_proc_init
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _I386_PHYSIO_PROC_H_ */
end_comment

end_unit

