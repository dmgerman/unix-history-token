begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1998 Michael Smith and Kazutaka YOKOTA  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer as  *    the first lines of this file unmodified.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MACHINE_PC_VESA_H
end_ifndef

begin_define
define|#
directive|define
name|_MACHINE_PC_VESA_H
end_define

begin_struct
struct|struct
name|vesa_info
block|{
comment|/* mandatory fields */
name|u_int8_t
name|v_sig
index|[
literal|4
index|]
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
decl_stmt|;
comment|/* VESA */
name|u_int16_t
name|v_version
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
decl_stmt|;
comment|/* ver in BCD */
name|u_int32_t
name|v_oemstr
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
decl_stmt|;
comment|/* OEM string */
name|u_int32_t
name|v_flags
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
decl_stmt|;
comment|/* flags */
define|#
directive|define
name|V_DAC8
value|(1<<0)
define|#
directive|define
name|V_NONVGA
value|(1<<1)
define|#
directive|define
name|V_SNOW
value|(1<<2)
name|u_int32_t
name|v_modetable
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
decl_stmt|;
comment|/* modes */
name|u_int16_t
name|v_memsize
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
decl_stmt|;
comment|/* in 64K */
comment|/* 2.0 */
name|u_int16_t
name|v_revision
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
decl_stmt|;
comment|/* software rev */
name|u_int32_t
name|v_venderstr
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
decl_stmt|;
comment|/* vender */
name|u_int32_t
name|v_prodstr
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
decl_stmt|;
comment|/* product name */
name|u_int32_t
name|v_revstr
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
decl_stmt|;
comment|/* product rev */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|vesa_mode
block|{
comment|/* mandatory fields */
name|u_int16_t
name|v_modeattr
decl_stmt|;
define|#
directive|define
name|V_MODESUPP
value|(1<<0)
comment|/* VESA mode attributes */
define|#
directive|define
name|V_MODEOPTINFO
value|(1<<1)
define|#
directive|define
name|V_MODEBIOSOUT
value|(1<<2)
define|#
directive|define
name|V_MODECOLOR
value|(1<<3)
define|#
directive|define
name|V_MODEGRAPHICS
value|(1<<4)
define|#
directive|define
name|V_MODENONVGA
value|(1<<5)
define|#
directive|define
name|V_MODENONBANK
value|(1<<6)
define|#
directive|define
name|V_MODELFB
value|(1<<7)
define|#
directive|define
name|V_MODEVESA
value|(1<<16)
comment|/* Private attributes */
name|u_int8_t
name|v_waattr
decl_stmt|;
name|u_int8_t
name|v_wbattr
decl_stmt|;
define|#
directive|define
name|V_WATTREXIST
value|(1<<0)
define|#
directive|define
name|V_WATTRREAD
value|(1<<1)
define|#
directive|define
name|V_WATTRWRITE
value|(1<<2)
name|u_int16_t
name|v_wgran
decl_stmt|;
name|u_int16_t
name|v_wsize
decl_stmt|;
name|u_int16_t
name|v_waseg
decl_stmt|;
name|u_int16_t
name|v_wbseg
decl_stmt|;
name|u_int32_t
name|v_posfunc
decl_stmt|;
name|u_int16_t
name|v_bpscanline
decl_stmt|;
comment|/* fields optional for 1.0/1.1 implementations */
name|u_int16_t
name|v_width
decl_stmt|;
name|u_int16_t
name|v_height
decl_stmt|;
name|u_int8_t
name|v_cwidth
decl_stmt|;
name|u_int8_t
name|v_cheight
decl_stmt|;
name|u_int8_t
name|v_planes
decl_stmt|;
name|u_int8_t
name|v_bpp
decl_stmt|;
name|u_int8_t
name|v_banks
decl_stmt|;
name|u_int8_t
name|v_memmodel
decl_stmt|;
define|#
directive|define
name|V_MMTEXT
value|0
define|#
directive|define
name|V_MMCGA
value|1
define|#
directive|define
name|V_MMHGC
value|2
define|#
directive|define
name|V_MMEGA
value|3
define|#
directive|define
name|V_MMPACKED
value|4
define|#
directive|define
name|V_MMSEQU256
value|5
define|#
directive|define
name|V_MMDIRCOLOR
value|6
define|#
directive|define
name|V_MMYUV
value|7
name|u_int8_t
name|v_banksize
decl_stmt|;
name|u_int8_t
name|v_ipages
decl_stmt|;
name|u_int8_t
name|v_reserved0
decl_stmt|;
comment|/* fields for 1.2+ implementations */
name|u_int8_t
name|v_redmasksize
decl_stmt|;
name|u_int8_t
name|v_redfieldpos
decl_stmt|;
name|u_int8_t
name|v_greenmasksize
decl_stmt|;
name|u_int8_t
name|v_greenfieldpos
decl_stmt|;
name|u_int8_t
name|v_bluemasksize
decl_stmt|;
name|u_int8_t
name|v_bluefieldpos
decl_stmt|;
name|u_int8_t
name|v_resmasksize
decl_stmt|;
name|u_int8_t
name|v_resfieldpos
decl_stmt|;
name|u_int8_t
name|v_dircolormode
decl_stmt|;
comment|/* 2.0 implementations */
name|u_int32_t
name|v_lfb
decl_stmt|;
name|u_int32_t
name|v_offscreen
decl_stmt|;
name|u_int16_t
name|v_offscreensize
decl_stmt|;
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|_KERNEL
end_ifdef

begin_define
define|#
directive|define
name|VESA_MODE
parameter_list|(
name|x
parameter_list|)
value|((x)>= M_VESA_BASE)
end_define

begin_function_decl
name|int
name|vesa_load_ioctl
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vesa_unload_ioctl
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_MACHINE_PC_VESA_H */
end_comment

end_unit

