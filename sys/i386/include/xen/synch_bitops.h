begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|__XEN_SYNCH_BITOPS_H__
end_ifndef

begin_define
define|#
directive|define
name|__XEN_SYNCH_BITOPS_H__
end_define

begin_comment
comment|/*  * Copyright 1992, Linus Torvalds.  * Heavily modified to provide guaranteed strong synchronisation  * when communicating with Xen or other guest OSes running on other CPUs.  */
end_comment

begin_define
define|#
directive|define
name|ADDR
value|(*(volatile long *) addr)
end_define

begin_function
specifier|static
name|__inline__
name|void
name|synch_set_bit
parameter_list|(
name|int
name|nr
parameter_list|,
specifier|volatile
name|void
modifier|*
name|addr
parameter_list|)
block|{
asm|__asm__
specifier|__volatile__
asm|(          "lock btsl %1,%0"         : "=m" (ADDR) : "Ir" (nr) : "memory" );
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|synch_clear_bit
parameter_list|(
name|int
name|nr
parameter_list|,
specifier|volatile
name|void
modifier|*
name|addr
parameter_list|)
block|{
asm|__asm__
specifier|__volatile__
asm|(         "lock btrl %1,%0"         : "=m" (ADDR) : "Ir" (nr) : "memory" );
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|synch_change_bit
parameter_list|(
name|int
name|nr
parameter_list|,
specifier|volatile
name|void
modifier|*
name|addr
parameter_list|)
block|{
asm|__asm__
specifier|__volatile__
asm|(         "lock btcl %1,%0"         : "=m" (ADDR) : "Ir" (nr) : "memory" );
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|synch_test_and_set_bit
parameter_list|(
name|int
name|nr
parameter_list|,
specifier|volatile
name|void
modifier|*
name|addr
parameter_list|)
block|{
name|int
name|oldbit
decl_stmt|;
asm|__asm__
specifier|__volatile__
asm|(         "lock btsl %2,%1\n\tsbbl %0,%0"         : "=r" (oldbit), "=m" (ADDR) : "Ir" (nr) : "memory");
return|return
name|oldbit
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|synch_test_and_clear_bit
parameter_list|(
name|int
name|nr
parameter_list|,
specifier|volatile
name|void
modifier|*
name|addr
parameter_list|)
block|{
name|int
name|oldbit
decl_stmt|;
asm|__asm__
specifier|__volatile__
asm|(         "lock btrl %2,%1\n\tsbbl %0,%0"         : "=r" (oldbit), "=m" (ADDR) : "Ir" (nr) : "memory");
return|return
name|oldbit
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|synch_test_and_change_bit
parameter_list|(
name|int
name|nr
parameter_list|,
specifier|volatile
name|void
modifier|*
name|addr
parameter_list|)
block|{
name|int
name|oldbit
decl_stmt|;
asm|__asm__
specifier|__volatile__
asm|(         "lock btcl %2,%1\n\tsbbl %0,%0"         : "=r" (oldbit), "=m" (ADDR) : "Ir" (nr) : "memory");
return|return
name|oldbit
return|;
block|}
end_function

begin_struct
struct|struct
name|__synch_xchg_dummy
block|{
name|unsigned
name|long
name|a
index|[
literal|100
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|__synch_xg
parameter_list|(
name|x
parameter_list|)
value|((volatile struct __synch_xchg_dummy *)(x))
end_define

begin_define
define|#
directive|define
name|synch_cmpxchg
parameter_list|(
name|ptr
parameter_list|,
name|old
parameter_list|,
name|new
parameter_list|)
define|\
value|((__typeof__(*(ptr)))__synch_cmpxchg((ptr),\                                      (unsigned long)(old), \                                      (unsigned long)(new), \                                      sizeof(*(ptr))))
end_define

begin_function
specifier|static
specifier|inline
name|unsigned
name|long
name|__synch_cmpxchg
parameter_list|(
specifier|volatile
name|void
modifier|*
name|ptr
parameter_list|,
name|unsigned
name|long
name|old
parameter_list|,
name|unsigned
name|long
name|new
parameter_list|,
name|int
name|size
parameter_list|)
block|{
name|unsigned
name|long
name|prev
decl_stmt|;
switch|switch
condition|(
name|size
condition|)
block|{
case|case
literal|1
case|:
asm|__asm__
specifier|__volatile__
asm|("lock; cmpxchgb %b1,%2" 				     : "=a"(prev) 				     : "q"(new), "m"(*__synch_xg(ptr)), 				       "0"(old) 				     : "memory");
return|return
name|prev
return|;
case|case
literal|2
case|:
asm|__asm__
specifier|__volatile__
asm|("lock; cmpxchgw %w1,%2" 				     : "=a"(prev) 				     : "q"(new), "m"(*__synch_xg(ptr)), 				       "0"(old) 				     : "memory");
return|return
name|prev
return|;
ifdef|#
directive|ifdef
name|CONFIG_X86_64
case|case
literal|4
case|:
asm|__asm__
specifier|__volatile__
asm|("lock; cmpxchgl %k1,%2" 				     : "=a"(prev) 				     : "q"(new), "m"(*__synch_xg(ptr)), 				       "0"(old) 				     : "memory");
return|return
name|prev
return|;
case|case
literal|8
case|:
asm|__asm__
specifier|__volatile__
asm|("lock; cmpxchgq %1,%2" 				     : "=a"(prev) 				     : "q"(new), "m"(*__synch_xg(ptr)), 				       "0"(old) 				     : "memory");
return|return
name|prev
return|;
else|#
directive|else
case|case
literal|4
case|:
asm|__asm__
specifier|__volatile__
asm|("lock; cmpxchgl %1,%2" 				     : "=a"(prev) 				     : "q"(new), "m"(*__synch_xg(ptr)), 				       "0"(old) 				     : "memory");
return|return
name|prev
return|;
endif|#
directive|endif
block|}
return|return
name|old
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|synch_const_test_bit
parameter_list|(
name|int
name|nr
parameter_list|,
specifier|const
specifier|volatile
name|void
modifier|*
name|addr
parameter_list|)
block|{
return|return
operator|(
operator|(
literal|1UL
operator|<<
operator|(
name|nr
operator|&
literal|31
operator|)
operator|)
operator|&
operator|(
operator|(
operator|(
specifier|const
specifier|volatile
name|unsigned
name|int
operator|*
operator|)
name|addr
operator|)
index|[
name|nr
operator|>>
literal|5
index|]
operator|)
operator|)
operator|!=
literal|0
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|synch_var_test_bit
parameter_list|(
name|int
name|nr
parameter_list|,
specifier|volatile
name|void
modifier|*
name|addr
parameter_list|)
block|{
name|int
name|oldbit
decl_stmt|;
asm|__asm__
specifier|__volatile__
asm|(         "btl %2,%1\n\tsbbl %0,%0"         : "=r" (oldbit) : "m" (ADDR), "Ir" (nr) );
return|return
name|oldbit
return|;
block|}
end_function

begin_define
define|#
directive|define
name|synch_test_bit
parameter_list|(
name|nr
parameter_list|,
name|addr
parameter_list|)
define|\
value|(__builtin_constant_p(nr) ? \  synch_const_test_bit((nr),(addr)) : \  synch_var_test_bit((nr),(addr)))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __XEN_SYNCH_BITOPS_H__ */
end_comment

end_unit

