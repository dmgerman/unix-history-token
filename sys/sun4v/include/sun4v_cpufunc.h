begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2006 Kip Macy  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MACHINE_SUN4V_CPUFUNC_H_
end_ifndef

begin_define
define|#
directive|define
name|_MACHINE_SUN4V_CPUFUNC_H_
end_define

begin_include
include|#
directive|include
file|<machine/hypervisor_api.h>
end_include

begin_function_decl
name|void
name|set_mmfsa_scratchpad
parameter_list|(
name|vm_paddr_t
name|mmfsa
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_hash_user_scratchpad
parameter_list|(
name|uint64_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_tsb_user_scratchpad
parameter_list|(
name|uint64_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_hash_kernel_scratchpad
parameter_list|(
name|uint64_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_tsb_kernel_scratchpad
parameter_list|(
name|uint64_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|init_mondo
parameter_list|(
name|uint64_t
name|func
parameter_list|,
name|uint64_t
name|arg1
parameter_list|,
name|uint64_t
name|arg2
parameter_list|,
name|uint64_t
name|arg3
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|init_mondo_queue
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
name|__inline
name|void
modifier|*
name|set_tba
parameter_list|(
name|void
modifier|*
name|ntba
parameter_list|)
block|{
name|void
modifier|*
name|otba
decl_stmt|;
name|otba
operator|=
operator|(
name|char
operator|*
operator|)
name|rdpr
argument_list|(
name|tba
argument_list|)
expr_stmt|;
name|wrpr
argument_list|(
name|tba
argument_list|,
name|ntba
argument_list|,
literal|0
argument_list|)
expr_stmt|;
return|return
name|otba
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|set_wstate
parameter_list|(
name|u_long
name|nwstate
parameter_list|)
block|{
name|wrpr
argument_list|(
name|wstate
argument_list|,
name|nwstate
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function

begin_function_decl
name|void
name|invlpg
parameter_list|(
name|uint16_t
name|ctx
parameter_list|,
name|vm_offset_t
name|va
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|invlctx
parameter_list|(
name|uint16_t
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|invltlb
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
name|__inline
name|void
name|store_real
parameter_list|(
name|vm_paddr_t
name|ra
parameter_list|,
name|uint64_t
name|val
parameter_list|)
block|{
name|stxa
argument_list|(
name|ra
argument_list|,
name|ASI_REAL
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|store_real_sync
parameter_list|(
name|vm_paddr_t
name|ra
parameter_list|,
name|uint64_t
name|val
parameter_list|)
block|{
name|stxa_sync
argument_list|(
name|ra
argument_list|,
name|ASI_REAL
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|uint64_t
name|load_real
parameter_list|(
name|vm_paddr_t
name|ra
parameter_list|)
block|{
name|uint64_t
name|val
decl_stmt|;
name|val
operator|=
name|ldxa
argument_list|(
name|ra
argument_list|,
name|ASI_REAL
argument_list|)
expr_stmt|;
return|return
name|val
return|;
block|}
end_function

begin_function_decl
name|void
name|load_real_dw
parameter_list|(
name|vm_paddr_t
name|ra
parameter_list|,
name|uint64_t
modifier|*
name|lo
parameter_list|,
name|uint64_t
modifier|*
name|hi
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|bzerophyspage
parameter_list|(
name|vm_paddr_t
name|ra
parameter_list|,
name|uint64_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hwblkclr
parameter_list|(
name|void
modifier|*
name|p
parameter_list|,
name|uint64_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|novbcopy
parameter_list|(
name|void
modifier|*
name|src
parameter_list|,
name|void
modifier|*
name|dst
parameter_list|,
name|uint64_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_MACHINE_CPUFUNC_H_ */
end_comment

end_unit

