begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  * $FreeBSD$  */
end_comment

begin_comment
comment|/*  * Copyright 2006 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MDESC_H_
end_ifndef

begin_define
define|#
directive|define
name|_MDESC_H_
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/*  * Each logical domain is detailed via a (Virtual) Machine Description  * available to each guest Operating System courtesy of a  * Hypervisor service.  */
ifdef|#
directive|ifdef
name|_ASM
define|#
directive|define
name|U8
parameter_list|(
name|_s
parameter_list|)
value|_s
define|#
directive|define
name|U16
parameter_list|(
name|_s
parameter_list|)
value|_s
define|#
directive|define
name|U32
parameter_list|(
name|_s
parameter_list|)
value|_s
define|#
directive|define
name|U64
parameter_list|(
name|_s
parameter_list|)
value|_s
else|#
directive|else
define|#
directive|define
name|U8
parameter_list|(
name|_s
parameter_list|)
value|((uint8_t)(_s))
define|#
directive|define
name|U16
parameter_list|(
name|_s
parameter_list|)
value|((uint16_t)(_s))
define|#
directive|define
name|U32
parameter_list|(
name|_s
parameter_list|)
value|((uint32_t)(_s))
define|#
directive|define
name|U64
parameter_list|(
name|_s
parameter_list|)
value|((uint64_t)(_s))
endif|#
directive|endif
comment|/* the version this library understands */
define|#
directive|define
name|MD_HEADER_VERS_OFF
value|0x0
define|#
directive|define
name|MD_HEADER_NODE_OFF
value|0x4
define|#
directive|define
name|MD_HEADER_NAME_OFF
value|0x8
define|#
directive|define
name|MD_HEADER_DATA_OFF
value|0xc
define|#
directive|define
name|MD_HEADER_SIZE
value|0x10
define|#
directive|define
name|MD_TRANSPORT_VERSION
value|U32(0x10000)
define|#
directive|define
name|MD_ELEMENT_SIZE
value|0x10
define|#
directive|define
name|MDE_ILLEGAL_IDX
value|U64(-1)
define|#
directive|define
name|MDET_LIST_END
value|U8(0x0)
define|#
directive|define
name|MDET_NULL
value|U8(' ')
define|#
directive|define
name|MDET_NODE
value|U8('N')
define|#
directive|define
name|MDET_NODE_END
value|U8('E')
define|#
directive|define
name|MDET_PROP_ARC
value|U8('a')
define|#
directive|define
name|MDET_PROP_VAL
value|U8('v')
define|#
directive|define
name|MDET_PROP_STR
value|U8('s')
define|#
directive|define
name|MDET_PROP_DAT
value|U8('d')
ifndef|#
directive|ifndef
name|_ASM
comment|/* { */
comment|/*  * Opaque handles for use in external interfaces  */
typedef|typedef
name|void
modifier|*
name|md_t
typedef|;
typedef|typedef
name|uint64_t
name|mde_cookie_t
typedef|;
define|#
directive|define
name|MDE_INVAL_ELEM_COOKIE
value|((mde_cookie_t)-1)
typedef|typedef
name|uint32_t
name|mde_str_cookie_t
typedef|;
define|#
directive|define
name|MDE_INVAL_STR_COOKIE
value|((mde_str_cookie_t)-1)
typedef|typedef
name|uint64_t
name|md_diff_cookie_t
typedef|;
define|#
directive|define
name|MD_INVAL_DIFF_COOKIE
value|((md_diff_cookie_t)-1)
define|#
directive|define
name|MDESC_INVAL_GEN
value|(0)
comment|/*  * External structure for MD diff interface  */
typedef|typedef
struct|struct
block|{
name|uint8_t
name|type
decl_stmt|;
comment|/* property type */
name|char
modifier|*
name|namep
decl_stmt|;
comment|/* property name */
block|}
name|md_prop_match_t
typedef|;
comment|/*  * External Interface  */
specifier|extern
name|md_t
modifier|*
name|md_init_intern
parameter_list|(
name|uint64_t
modifier|*
parameter_list|,
name|void
modifier|*
function_decl|(
modifier|*
name|allocp
function_decl|)
parameter_list|(
name|size_t
parameter_list|)
parameter_list|,
name|void
function_decl|(
modifier|*
name|freep
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
parameter_list|)
function_decl|;
specifier|extern
name|int
name|md_fini
parameter_list|(
name|md_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|md_node_count
parameter_list|(
name|md_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|mde_str_cookie_t
name|md_find_name
parameter_list|(
name|md_t
modifier|*
parameter_list|,
name|char
modifier|*
name|namep
parameter_list|)
function_decl|;
specifier|extern
name|mde_cookie_t
name|md_root_node
parameter_list|(
name|md_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|uint64_t
name|md_get_gen
parameter_list|(
name|md_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|size_t
name|md_get_bin_size
parameter_list|(
name|md_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|md_scan_dag
parameter_list|(
name|md_t
modifier|*
parameter_list|,
name|mde_cookie_t
parameter_list|,
name|mde_str_cookie_t
parameter_list|,
name|mde_str_cookie_t
parameter_list|,
name|mde_cookie_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|md_get_prop_val
parameter_list|(
name|md_t
modifier|*
parameter_list|,
name|mde_cookie_t
parameter_list|,
name|char
modifier|*
parameter_list|,
name|uint64_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|md_get_prop_str
parameter_list|(
name|md_t
modifier|*
parameter_list|,
name|mde_cookie_t
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|md_get_prop_data
parameter_list|(
name|md_t
modifier|*
parameter_list|,
name|mde_cookie_t
parameter_list|,
name|char
modifier|*
parameter_list|,
name|uint8_t
modifier|*
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|md_diff_cookie_t
name|md_diff_init
parameter_list|(
name|md_t
modifier|*
parameter_list|,
name|mde_cookie_t
parameter_list|,
name|md_t
modifier|*
parameter_list|,
name|mde_cookie_t
parameter_list|,
name|char
modifier|*
parameter_list|,
name|md_prop_match_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|md_diff_added
parameter_list|(
name|md_diff_cookie_t
parameter_list|,
name|mde_cookie_t
modifier|*
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|md_diff_removed
parameter_list|(
name|md_diff_cookie_t
parameter_list|,
name|mde_cookie_t
modifier|*
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|md_diff_matched
parameter_list|(
name|md_diff_cookie_t
parameter_list|,
name|mde_cookie_t
modifier|*
modifier|*
parameter_list|,
name|mde_cookie_t
modifier|*
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|md_diff_fini
parameter_list|(
name|md_diff_cookie_t
parameter_list|)
function_decl|;
comment|/***************** NON-CDDL BEGIN *******************************/
include|#
directive|include
file|<sys/malloc.h>
specifier|extern
name|int
name|md_get_prop_alloc
parameter_list|(
name|md_t
modifier|*
parameter_list|,
name|mde_cookie_t
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|uint8_t
modifier|*
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|md_vdev_find_val
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|char
modifier|*
name|namep
parameter_list|,
name|uint64_t
modifier|*
name|valp
parameter_list|)
function_decl|;
specifier|extern
name|int
name|md_vdev_find_node
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|mde_cookie_t
modifier|*
name|valp
parameter_list|)
function_decl|;
name|MALLOC_DECLARE
argument_list|(
name|M_MDPROP
argument_list|)
expr_stmt|;
specifier|extern
name|void
name|mdesc_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|int
name|mdesc_update
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|md_t
modifier|*
name|md_get
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|md_put
parameter_list|(
name|md_t
modifier|*
parameter_list|)
function_decl|;
comment|/***************** NON-CDDL END   *******************************/
endif|#
directive|endif
comment|/* } _ASM */
comment|/*  * ioctl info for mdesc device  */
define|#
directive|define
name|MDESCIOC
value|('m'<< 24 | 'd'<< 16 | 'd'<< 8)
define|#
directive|define
name|MDESCIOCGSZ
value|(MDESCIOC | 1)
comment|/* Get quote buffer size */
define|#
directive|define
name|MDESCIOCSSZ
value|(MDESCIOC | 2)
comment|/* Set new quote buffer size */
define|#
directive|define
name|MDESCIOCDISCARD
value|(MDESCIOC | 3)
comment|/* Discard quotes and reset */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _MDESC_H_ */
end_comment

end_unit

