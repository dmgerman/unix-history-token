begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1999, 2000, 2001 Boris Popov  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *    This product includes software developed by Boris Popov.  * 4. Neither the name of the author nor the names of any co-contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NETNCP_NCP_LIB_H_
end_ifndef

begin_define
define|#
directive|define
name|_NETNCP_NCP_LIB_H_
end_define

begin_define
define|#
directive|define
name|IPX
end_define

begin_define
define|#
directive|define
name|INET
end_define

begin_include
include|#
directive|include
file|<netncp/ncp.h>
end_include

begin_include
include|#
directive|include
file|<netncp/ncp_conn.h>
end_include

begin_include
include|#
directive|include
file|<netncp/ncp_user.h>
end_include

begin_include
include|#
directive|include
file|<netncp/ncp_rq.h>
end_include

begin_define
define|#
directive|define
name|ncp_printf
value|printf
end_define

begin_define
define|#
directive|define
name|sipx_cnetwork
value|sipx_addr.x_net.c_net
end_define

begin_define
define|#
directive|define
name|sipx_node
value|sipx_addr.x_host.c_host
end_define

begin_define
define|#
directive|define
name|ipx_netlong
parameter_list|(
name|iaddr
parameter_list|)
value|(((union ipx_net_u *)(&((iaddr).x_net)))->long_e)
end_define

begin_define
define|#
directive|define
name|STDPARAM_ARGS
value|'A':case 'B':case 'C':case 'I':case 'M': \ 		   case 'N':case 'U':case 'R':case 'S':case 'T': \ 		   case 'W':case 'O':case 'P'
end_define

begin_define
define|#
directive|define
name|STDPARAM_OPT
value|"A:BCI:M:NO:P:U:R:S:T:W:"
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|min
end_ifndef

begin_define
define|#
directive|define
name|min
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|)
value|(((a)<(b)) ? (a) : (b))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * An attempt to do a unified options parser  */
end_comment

begin_enum
enum|enum
name|ncp_argtype
block|{
name|NCA_STR
block|,
name|NCA_INT
block|,
name|NCA_BOOL
block|}
enum|;
end_enum

begin_struct_decl
struct_decl|struct
name|ncp_args
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|int
name|ncp_setopt_t
parameter_list|(
name|struct
name|ncp_args
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_define
define|#
directive|define
name|NAFL_NONE
value|0x0000
end_define

begin_define
define|#
directive|define
name|NAFL_HAVEMIN
value|0x0001
end_define

begin_define
define|#
directive|define
name|NAFL_HAVEMAX
value|0x0002
end_define

begin_define
define|#
directive|define
name|NAFL_MINMAX
value|NAFL_HAVEMIN | NAFL_HAVEMAX
end_define

begin_struct
struct|struct
name|ncp_args
block|{
name|enum
name|ncp_argtype
name|at
decl_stmt|;
name|int
name|opt
decl_stmt|;
comment|/* command line option */
name|char
modifier|*
name|name
decl_stmt|;
comment|/* rc file equiv */
name|int
name|flag
decl_stmt|;
comment|/* NAFL_* */
name|int
name|ival
decl_stmt|;
comment|/* int/bool values, or max len for str value */
name|char
modifier|*
name|str
decl_stmt|;
comment|/* string value */
name|int
name|min
decl_stmt|;
comment|/* min for ival */
name|int
name|max
decl_stmt|;
comment|/* max for ival */
name|ncp_setopt_t
modifier|*
name|fn
decl_stmt|;
comment|/* call back to validate */
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
struct|struct
block|{
name|nuint8
name|day
decl_stmt|;
name|nuint8
name|month
decl_stmt|;
name|nuint16
name|year
decl_stmt|;
block|}
name|NW_DATE
typedef|;
end_typedef

begin_comment
comment|/* hours is a nuint16  so that this structure will be the same length as a dword */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|nuint8
name|seconds
decl_stmt|;
name|nuint8
name|minutes
decl_stmt|;
name|nuint16
name|hours
decl_stmt|;
block|}
name|NW_TIME
typedef|;
end_typedef

begin_struct
struct|struct
name|ncp_bitname
block|{
name|u_int
name|bn_bit
decl_stmt|;
name|char
modifier|*
name|bn_name
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|__BEGIN_DECLS
name|int
name|ncp_args_parserc
parameter_list|(
name|struct
name|ncp_args
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|ncp_setopt_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_args_parseopt
parameter_list|(
name|struct
name|ncp_args
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|ncp_setopt_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_struct_decl
struct_decl|struct
name|sockaddr_ipx
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ipx_addr
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|sockaddr
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ncp_buf
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|rcfile
struct_decl|;
end_struct_decl

begin_function_decl
name|int
name|ncp_initlib
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_connect
parameter_list|(
name|struct
name|ncp_conn_args
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_connect_addr
parameter_list|(
name|struct
name|sockaddr
modifier|*
parameter_list|,
name|NWCONN_HANDLE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_disconnect
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_request
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|,
name|struct
name|ncp_buf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_conn_request
parameter_list|(
name|int
parameter_list|,
name|struct
name|ncp_buf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_login
parameter_list|(
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_conn_scan
parameter_list|(
name|struct
name|ncp_conn_loginfo
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_conn_cnt
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|ncp_conn_list
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_conn_getinfo
parameter_list|(
name|int
parameter_list|,
name|struct
name|ncp_conn_stat
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_conn_getuser
parameter_list|(
name|int
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_conn2ref
parameter_list|(
name|int
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_conn_dup
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|NWCONN_HANDLE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_path2conn
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_li_init
parameter_list|(
name|struct
name|ncp_conn_loginfo
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ncp_li_done
parameter_list|(
name|struct
name|ncp_conn_loginfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_li_login
parameter_list|(
name|struct
name|ncp_conn_loginfo
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_li_readrc
parameter_list|(
name|struct
name|ncp_conn_loginfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_li_check
parameter_list|(
name|struct
name|ncp_conn_loginfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_li_arg
parameter_list|(
name|struct
name|ncp_conn_loginfo
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_li_setserver
parameter_list|(
name|struct
name|ncp_conn_loginfo
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_li_setuser
parameter_list|(
name|struct
name|ncp_conn_loginfo
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_li_setpassword
parameter_list|(
name|struct
name|ncp_conn_loginfo
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_conn_setflags
parameter_list|(
name|int
parameter_list|,
name|u_int16_t
parameter_list|,
name|u_int16_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_conn_find
parameter_list|(
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWRequest
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|nuint16
parameter_list|,
name|nuint16
parameter_list|,
name|NW_FRAGMENT
modifier|*
parameter_list|,
name|nuint16
parameter_list|,
name|NW_FRAGMENT
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|ncp_setpermanent
parameter_list|(
name|connHandle
parameter_list|,
name|on
parameter_list|)
value|ncp_conn_setflags(connHandle, NCPFL_PERMANENT, (on) ? NCPFL_PERMANENT : 0)
end_define

begin_define
define|#
directive|define
name|ncp_setprimary
parameter_list|(
name|connHandle
parameter_list|,
name|on
parameter_list|)
value|ncp_conn_setflags(connHandle, NCPFL_PRIMARY, (on) ? NCPFL_PRIMARY : 0)
end_define

begin_function_decl
name|int
name|ncp_find_fileserver
parameter_list|(
name|struct
name|ncp_conn_loginfo
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_find_server
parameter_list|(
name|struct
name|ncp_conn_loginfo
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* misc rotines */
end_comment

begin_function_decl
name|char
modifier|*
name|ncp_str_upper
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_open_rcfile
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_getopt
parameter_list|(
name|int
parameter_list|,
name|char
modifier|*
specifier|const
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|NWUnpackDateTime
parameter_list|(
name|nuint32
parameter_list|,
name|NW_DATE
modifier|*
parameter_list|,
name|NW_TIME
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|NWUnpackDate
parameter_list|(
name|nuint16
parameter_list|,
name|NW_DATE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|NWUnpackTime
parameter_list|(
name|nuint16
parameter_list|,
name|NW_TIME
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|time_t
name|ncp_UnpackDateTime
parameter_list|(
name|nuint32
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_GetFileServerDateAndTime
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|time_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_SetFileServerDateAndTime
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|time_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWDownFileServer
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWCloseBindery
parameter_list|(
name|NWCONN_HANDLE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWOpenBindery
parameter_list|(
name|NWCONN_HANDLE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWDisableTTS
parameter_list|(
name|NWCONN_HANDLE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWEnableTTS
parameter_list|(
name|NWCONN_HANDLE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWDisableFileServerLogin
parameter_list|(
name|NWCONN_HANDLE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWEnableFileServerLogin
parameter_list|(
name|NWCONN_HANDLE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ncp_error
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printf0like
parameter_list|(
function_decl|1
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|char
modifier|*
name|ncp_printb
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|struct
name|ncp_bitname
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nw_keyhash
parameter_list|(
specifier|const
name|u_char
modifier|*
parameter_list|,
specifier|const
name|u_char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|u_char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nw_encrypt
parameter_list|(
specifier|const
name|u_char
modifier|*
parameter_list|,
specifier|const
name|u_char
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ipx_print_addr
parameter_list|(
name|struct
name|ipx_addr
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* bindery calls */
end_comment

begin_function_decl
name|int
name|ncp_get_bindery_object_id
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int16_t
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|ncp_bindery_object
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_get_bindery_object_name
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|,
name|struct
name|ncp_bindery_object
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_scan_bindery_object
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_int16_t
parameter_list|,
name|char
modifier|*
parameter_list|,
name|struct
name|ncp_bindery_object
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_read_property_value
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|int
name|object_type
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|nw_property
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_get_encryption_key
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_change_obj_passwd
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
specifier|const
name|struct
name|ncp_bindery_object
modifier|*
parameter_list|,
specifier|const
name|u_char
modifier|*
parameter_list|,
specifier|const
name|u_char
modifier|*
parameter_list|,
specifier|const
name|u_char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_keyed_verify_password
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|struct
name|ncp_bindery_object
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* queue calls */
end_comment

begin_function_decl
name|int
name|ncp_create_queue_job_and_file
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|,
name|struct
name|queue_job
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_close_file_and_start_job
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|,
name|struct
name|queue_job
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_attach_to_queue
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_detach_from_queue
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_service_queue_job
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_int16_t
parameter_list|,
name|struct
name|queue_job
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_finish_servicing_job
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_int32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_abort_servicing_job
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_int32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_get_queue_length
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_int32_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_get_queue_job_ids
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_int32_t
modifier|*
parameter_list|,
name|u_int32_t
modifier|*
parameter_list|,
name|u_int32_t
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_get_queue_job_info
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_int32_t
parameter_list|,
name|struct
name|nw_queue_job_entry
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * filesystem and volume calls   */
end_comment

begin_function_decl
name|int
name|ncp_read
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|ncp_fh
modifier|*
parameter_list|,
name|off_t
parameter_list|,
name|size_t
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_write
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|ncp_fh
modifier|*
parameter_list|,
name|off_t
parameter_list|,
name|size_t
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_geteinfo
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|nw_entry_info
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_NSEntryInfo
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|nuint8
parameter_list|,
name|nuint8
parameter_list|,
name|nuint32
parameter_list|,
name|NW_ENTRY_INFO
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWGetVolumeName
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_char
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* misc ncp calls */
end_comment

begin_function_decl
name|int
name|ncp_get_file_server_information
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|struct
name|ncp_file_server_info
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_get_stations_logged_info
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|,
name|struct
name|ncp_bindery_object
modifier|*
parameter_list|,
name|time_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ncp_get_internet_address
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|u_int32_t
parameter_list|,
name|struct
name|ipx_addr
modifier|*
parameter_list|,
name|u_int8_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWGetObjectConnectionNumbers
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|pnstr8
parameter_list|,
name|nuint16
parameter_list|,
name|pnuint16
parameter_list|,
name|pnuint16
parameter_list|,
name|nuint16
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Message broadcast  */
end_comment

begin_function_decl
name|NWCCODE
name|NWDisableBroadcasts
parameter_list|(
name|NWCONN_HANDLE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWEnableBroadcasts
parameter_list|(
name|NWCONN_HANDLE
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWBroadcastToConsole
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|pnstr8
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWSendBroadcastMessage
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|pnstr8
parameter_list|,
name|nuint16
parameter_list|,
name|pnuint16
parameter_list|,
name|pnuint8
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWGetBroadcastMessage
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|pnstr8
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * RPC calls  */
end_comment

begin_function_decl
name|NWCCODE
name|NWSMExecuteNCFFile
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|pnstr8
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWSMLoadNLM
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|pnstr8
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWSMUnloadNLM
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|pnstr8
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWSMMountVolume
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|pnstr8
parameter_list|,
name|nuint32
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWSMDismountVolumeByName
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|pnstr8
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWSMSetDynamicCmdIntValue
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|pnstr8
parameter_list|,
name|nuint32
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|NWCCODE
name|NWSMSetDynamicCmdStrValue
parameter_list|(
name|NWCONN_HANDLE
parameter_list|,
name|pnstr8
parameter_list|,
name|pnstr8
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|__END_DECLS
specifier|extern
name|int
name|ncp_opterr
decl_stmt|,
name|ncp_optind
decl_stmt|,
name|ncp_optopt
decl_stmt|,
name|ncp_optreset
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|ncp_optarg
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|rcfile
modifier|*
name|ncp_rc
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|sysentoffset
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _NETNCP_NCP_LIB_H_ */
end_comment

end_unit

