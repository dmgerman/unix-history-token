begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MACHINE_BUS_DMA_H_
end_ifndef

begin_define
define|#
directive|define
name|_MACHINE_BUS_DMA_H_
end_define

begin_define
define|#
directive|define
name|WANT_INLINE_DMAMAP
end_define

begin_include
include|#
directive|include
file|<sys/bus_dma.h>
end_include

begin_include
include|#
directive|include
file|<machine/bus_dma_impl.h>
end_include

begin_comment
comment|/*  * Allocate a handle for mapping from kva/uva/physical  * address space into bus device space.  */
end_comment

begin_function
specifier|static
specifier|inline
name|int
name|bus_dmamap_create
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|int
name|flags
parameter_list|,
name|bus_dmamap_t
modifier|*
name|mapp
parameter_list|)
block|{
name|struct
name|bus_dma_tag_common
modifier|*
name|tc
decl_stmt|;
name|tc
operator|=
operator|(
expr|struct
name|bus_dma_tag_common
operator|*
operator|)
name|dmat
expr_stmt|;
return|return
operator|(
name|tc
operator|->
name|impl
operator|->
name|map_create
argument_list|(
name|dmat
argument_list|,
name|flags
argument_list|,
name|mapp
argument_list|)
operator|)
return|;
block|}
end_function

begin_comment
comment|/*  * Destroy a handle for mapping from kva/uva/physical  * address space into bus device space.  */
end_comment

begin_function
specifier|static
specifier|inline
name|int
name|bus_dmamap_destroy
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|)
block|{
name|struct
name|bus_dma_tag_common
modifier|*
name|tc
decl_stmt|;
name|tc
operator|=
operator|(
expr|struct
name|bus_dma_tag_common
operator|*
operator|)
name|dmat
expr_stmt|;
return|return
operator|(
name|tc
operator|->
name|impl
operator|->
name|map_destroy
argument_list|(
name|dmat
argument_list|,
name|map
argument_list|)
operator|)
return|;
block|}
end_function

begin_comment
comment|/*  * Allocate a piece of memory that can be efficiently mapped into  * bus device space based on the constraints listed in the dma tag.  * A dmamap to for use with dmamap_load is also allocated.  */
end_comment

begin_function
specifier|static
specifier|inline
name|int
name|bus_dmamem_alloc
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|void
modifier|*
modifier|*
name|vaddr
parameter_list|,
name|int
name|flags
parameter_list|,
name|bus_dmamap_t
modifier|*
name|mapp
parameter_list|)
block|{
name|struct
name|bus_dma_tag_common
modifier|*
name|tc
decl_stmt|;
name|tc
operator|=
operator|(
expr|struct
name|bus_dma_tag_common
operator|*
operator|)
name|dmat
expr_stmt|;
return|return
operator|(
name|tc
operator|->
name|impl
operator|->
name|mem_alloc
argument_list|(
name|dmat
argument_list|,
name|vaddr
argument_list|,
name|flags
argument_list|,
name|mapp
argument_list|)
operator|)
return|;
block|}
end_function

begin_comment
comment|/*  * Free a piece of memory and it's allociated dmamap, that was allocated  * via bus_dmamem_alloc.  Make the same choice for free/contigfree.  */
end_comment

begin_function
specifier|static
specifier|inline
name|void
name|bus_dmamem_free
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|void
modifier|*
name|vaddr
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|)
block|{
name|struct
name|bus_dma_tag_common
modifier|*
name|tc
decl_stmt|;
name|tc
operator|=
operator|(
expr|struct
name|bus_dma_tag_common
operator|*
operator|)
name|dmat
expr_stmt|;
name|tc
operator|->
name|impl
operator|->
name|mem_free
argument_list|(
name|dmat
argument_list|,
name|vaddr
argument_list|,
name|map
argument_list|)
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Release the mapping held by map.  */
end_comment

begin_function
specifier|static
specifier|inline
name|void
name|bus_dmamap_unload
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|)
block|{
name|struct
name|bus_dma_tag_common
modifier|*
name|tc
decl_stmt|;
name|tc
operator|=
operator|(
expr|struct
name|bus_dma_tag_common
operator|*
operator|)
name|dmat
expr_stmt|;
name|tc
operator|->
name|impl
operator|->
name|map_unload
argument_list|(
name|dmat
argument_list|,
name|map
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|bus_dmamap_sync
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|bus_dmasync_op_t
name|op
parameter_list|)
block|{
name|struct
name|bus_dma_tag_common
modifier|*
name|tc
decl_stmt|;
name|tc
operator|=
operator|(
expr|struct
name|bus_dma_tag_common
operator|*
operator|)
name|dmat
expr_stmt|;
name|tc
operator|->
name|impl
operator|->
name|map_sync
argument_list|(
name|dmat
argument_list|,
name|map
argument_list|,
name|op
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|_bus_dmamap_load_phys
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|vm_paddr_t
name|buf
parameter_list|,
name|bus_size_t
name|buflen
parameter_list|,
name|int
name|flags
parameter_list|,
name|bus_dma_segment_t
modifier|*
name|segs
parameter_list|,
name|int
modifier|*
name|segp
parameter_list|)
block|{
name|struct
name|bus_dma_tag_common
modifier|*
name|tc
decl_stmt|;
name|tc
operator|=
operator|(
expr|struct
name|bus_dma_tag_common
operator|*
operator|)
name|dmat
expr_stmt|;
return|return
operator|(
name|tc
operator|->
name|impl
operator|->
name|load_phys
argument_list|(
name|dmat
argument_list|,
name|map
argument_list|,
name|buf
argument_list|,
name|buflen
argument_list|,
name|flags
argument_list|,
name|segs
argument_list|,
name|segp
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|_bus_dmamap_load_ma
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|struct
name|vm_page
modifier|*
modifier|*
name|ma
parameter_list|,
name|bus_size_t
name|tlen
parameter_list|,
name|int
name|ma_offs
parameter_list|,
name|int
name|flags
parameter_list|,
name|bus_dma_segment_t
modifier|*
name|segs
parameter_list|,
name|int
modifier|*
name|segp
parameter_list|)
block|{
name|struct
name|bus_dma_tag_common
modifier|*
name|tc
decl_stmt|;
name|tc
operator|=
operator|(
expr|struct
name|bus_dma_tag_common
operator|*
operator|)
name|dmat
expr_stmt|;
return|return
operator|(
name|tc
operator|->
name|impl
operator|->
name|load_ma
argument_list|(
name|dmat
argument_list|,
name|map
argument_list|,
name|ma
argument_list|,
name|tlen
argument_list|,
name|ma_offs
argument_list|,
name|flags
argument_list|,
name|segs
argument_list|,
name|segp
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|_bus_dmamap_load_buffer
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|bus_size_t
name|buflen
parameter_list|,
name|struct
name|pmap
modifier|*
name|pmap
parameter_list|,
name|int
name|flags
parameter_list|,
name|bus_dma_segment_t
modifier|*
name|segs
parameter_list|,
name|int
modifier|*
name|segp
parameter_list|)
block|{
name|struct
name|bus_dma_tag_common
modifier|*
name|tc
decl_stmt|;
name|tc
operator|=
operator|(
expr|struct
name|bus_dma_tag_common
operator|*
operator|)
name|dmat
expr_stmt|;
return|return
operator|(
name|tc
operator|->
name|impl
operator|->
name|load_buffer
argument_list|(
name|dmat
argument_list|,
name|map
argument_list|,
name|buf
argument_list|,
name|buflen
argument_list|,
name|pmap
argument_list|,
name|flags
argument_list|,
name|segs
argument_list|,
name|segp
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|_bus_dmamap_waitok
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|struct
name|memdesc
modifier|*
name|mem
parameter_list|,
name|bus_dmamap_callback_t
modifier|*
name|callback
parameter_list|,
name|void
modifier|*
name|callback_arg
parameter_list|)
block|{
name|struct
name|bus_dma_tag_common
modifier|*
name|tc
decl_stmt|;
name|tc
operator|=
operator|(
expr|struct
name|bus_dma_tag_common
operator|*
operator|)
name|dmat
expr_stmt|;
name|tc
operator|->
name|impl
operator|->
name|map_waitok
argument_list|(
name|dmat
argument_list|,
name|map
argument_list|,
name|mem
argument_list|,
name|callback
argument_list|,
name|callback_arg
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|bus_dma_segment_t
modifier|*
name|_bus_dmamap_complete
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|bus_dma_segment_t
modifier|*
name|segs
parameter_list|,
name|int
name|nsegs
parameter_list|,
name|int
name|error
parameter_list|)
block|{
name|struct
name|bus_dma_tag_common
modifier|*
name|tc
decl_stmt|;
name|tc
operator|=
operator|(
expr|struct
name|bus_dma_tag_common
operator|*
operator|)
name|dmat
expr_stmt|;
return|return
operator|(
name|tc
operator|->
name|impl
operator|->
name|map_complete
argument_list|(
name|dmat
argument_list|,
name|map
argument_list|,
name|segs
argument_list|,
name|nsegs
argument_list|,
name|error
argument_list|)
operator|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_MACHINE_BUS_DMA_H_ */
end_comment

end_unit

