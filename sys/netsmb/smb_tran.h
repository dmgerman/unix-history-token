begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2000-2001, Boris Popov  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *    This product includes software developed by Boris Popov.  * 4. Neither the name of the author nor the names of any co-contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NETSMB_SMB_TRAN_H_
end_ifndef

begin_define
define|#
directive|define
name|_NETSMB_SMB_TRAN_H_
end_define

begin_include
include|#
directive|include
file|<sys/socket.h>
end_include

begin_comment
comment|/*  * Known transports  */
end_comment

begin_define
define|#
directive|define
name|SMBT_NBTCP
value|1
end_define

begin_comment
comment|/*  * Transport parameters  */
end_comment

begin_define
define|#
directive|define
name|SMBTP_SNDSZ
value|1
end_define

begin_comment
comment|/* R  - int */
end_comment

begin_define
define|#
directive|define
name|SMBTP_RCVSZ
value|2
end_define

begin_comment
comment|/* R  - int */
end_comment

begin_define
define|#
directive|define
name|SMBTP_TIMEOUT
value|3
end_define

begin_comment
comment|/* RW - struct timespec */
end_comment

begin_define
define|#
directive|define
name|SMBTP_SELECTID
value|4
end_define

begin_comment
comment|/* RW - (void *) */
end_comment

begin_define
define|#
directive|define
name|SMBTP_UPCALL
value|5
end_define

begin_comment
comment|/* RW - (* void)(void *) */
end_comment

begin_struct_decl
struct_decl|struct
name|smb_tran_ops
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|smb_tran_desc
block|{
name|sa_family_t
name|tr_type
decl_stmt|;
name|int
function_decl|(
modifier|*
name|tr_create
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|,
name|struct
name|proc
modifier|*
name|p
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|tr_done
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|,
name|struct
name|proc
modifier|*
name|p
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|tr_bind
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|sap
parameter_list|,
name|struct
name|proc
modifier|*
name|p
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|tr_connect
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|sap
parameter_list|,
name|struct
name|proc
modifier|*
name|p
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|tr_disconnect
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|,
name|struct
name|proc
modifier|*
name|p
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|tr_send
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m0
parameter_list|,
name|struct
name|proc
modifier|*
name|p
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|tr_recv
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|,
name|struct
name|mbuf
modifier|*
modifier|*
name|mpp
parameter_list|,
name|struct
name|proc
modifier|*
name|p
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|tr_timo
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|tr_intr
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|tr_getparam
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|,
name|int
name|param
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|tr_setparam
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|,
name|int
name|param
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|tr_fatal
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|,
name|int
name|error
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|notyet
name|int
function_decl|(
modifier|*
name|tr_poll
function_decl|)
parameter_list|(
name|struct
name|smb_vc
modifier|*
name|vcp
parameter_list|,
name|struct
name|proc
modifier|*
name|p
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|tr_cmpaddr
function_decl|)
parameter_list|(
name|void
modifier|*
name|addr1
parameter_list|,
name|void
modifier|*
name|addr2
parameter_list|)
function_decl|;
endif|#
directive|endif
name|LIST_ENTRY
argument_list|(
argument|smb_tran_desc
argument_list|)
name|tr_link
expr_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|SMB_TRAN_CREATE
parameter_list|(
name|vcp
parameter_list|,
name|p
parameter_list|)
value|(vcp)->vc_tdesc->tr_create(vcp,p)
end_define

begin_define
define|#
directive|define
name|SMB_TRAN_DONE
parameter_list|(
name|vcp
parameter_list|,
name|p
parameter_list|)
value|(vcp)->vc_tdesc->tr_done(vcp,p)
end_define

begin_define
define|#
directive|define
name|SMB_TRAN_BIND
parameter_list|(
name|vcp
parameter_list|,
name|sap
parameter_list|,
name|p
parameter_list|)
value|(vcp)->vc_tdesc->tr_bind(vcp,sap,p)
end_define

begin_define
define|#
directive|define
name|SMB_TRAN_CONNECT
parameter_list|(
name|vcp
parameter_list|,
name|sap
parameter_list|,
name|p
parameter_list|)
value|(vcp)->vc_tdesc->tr_connect(vcp,sap,p)
end_define

begin_define
define|#
directive|define
name|SMB_TRAN_DISCONNECT
parameter_list|(
name|vcp
parameter_list|,
name|p
parameter_list|)
value|(vcp)->vc_tdesc->tr_disconnect(vcp,p)
end_define

begin_define
define|#
directive|define
name|SMB_TRAN_SEND
parameter_list|(
name|vcp
parameter_list|,
name|m0
parameter_list|,
name|p
parameter_list|)
value|(vcp)->vc_tdesc->tr_send(vcp,m0,p)
end_define

begin_define
define|#
directive|define
name|SMB_TRAN_RECV
parameter_list|(
name|vcp
parameter_list|,
name|m
parameter_list|,
name|p
parameter_list|)
value|(vcp)->vc_tdesc->tr_recv(vcp,m,p)
end_define

begin_define
define|#
directive|define
name|SMB_TRAN_TIMO
parameter_list|(
name|vcp
parameter_list|)
value|(vcp)->vc_tdesc->tr_timo(vcp)
end_define

begin_define
define|#
directive|define
name|SMB_TRAN_INTR
parameter_list|(
name|vcp
parameter_list|)
value|(vcp)->vc_tdesc->tr_intr(vcp)
end_define

begin_define
define|#
directive|define
name|SMB_TRAN_GETPARAM
parameter_list|(
name|vcp
parameter_list|,
name|par
parameter_list|,
name|data
parameter_list|)
value|(vcp)->vc_tdesc->tr_getparam(vcp, par, data)
end_define

begin_define
define|#
directive|define
name|SMB_TRAN_SETPARAM
parameter_list|(
name|vcp
parameter_list|,
name|par
parameter_list|,
name|data
parameter_list|)
value|(vcp)->vc_tdesc->tr_setparam(vcp, par, data)
end_define

begin_define
define|#
directive|define
name|SMB_TRAN_FATAL
parameter_list|(
name|vcp
parameter_list|,
name|error
parameter_list|)
value|(vcp)->vc_tdesc->tr_fatal(vcp, error)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _NETSMB_SMB_TRAN_H_ */
end_comment

end_unit

