begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2006 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_DMU_TRAVERSE_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_DMU_TRAVERSE_H
end_define

begin_pragma
pragma|#
directive|pragma
name|ident
literal|"%Z%%M%	%I%	%E% SMI"
end_pragma

begin_include
include|#
directive|include
file|<sys/zfs_context.h>
end_include

begin_include
include|#
directive|include
file|<sys/spa.h>
end_include

begin_include
include|#
directive|include
file|<sys/zio.h>
end_include

begin_include
include|#
directive|include
file|<sys/dmu.h>
end_include

begin_include
include|#
directive|include
file|<sys/dnode.h>
end_include

begin_include
include|#
directive|include
file|<sys/arc.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
define|#
directive|define
name|ADVANCE_POST
value|0
comment|/* post-order traversal */
define|#
directive|define
name|ADVANCE_PRE
value|0x01
comment|/* pre-order traversal */
define|#
directive|define
name|ADVANCE_PRUNE
value|0x02
comment|/* prune by prev snapshot birth time */
define|#
directive|define
name|ADVANCE_DATA
value|0x04
comment|/* read user data blocks */
define|#
directive|define
name|ADVANCE_HOLES
value|0x08
comment|/* visit holes */
define|#
directive|define
name|ADVANCE_ZIL
value|0x10
comment|/* visit intent log blocks */
define|#
directive|define
name|ADVANCE_NOLOCK
value|0x20
comment|/* Don't grab SPA sync lock */
define|#
directive|define
name|ZB_NO_LEVEL
value|-2
define|#
directive|define
name|ZB_MAXLEVEL
value|32
comment|/* Next power of 2>= DN_MAX_LEVELS */
define|#
directive|define
name|ZB_MAXBLKID
value|(1ULL<< 62)
define|#
directive|define
name|ZB_MAXOBJSET
value|(1ULL<< 62)
define|#
directive|define
name|ZB_MAXOBJECT
value|(1ULL<< 62)
define|#
directive|define
name|ZB_MOS_CACHE
value|0
define|#
directive|define
name|ZB_MDN_CACHE
value|1
define|#
directive|define
name|ZB_DN_CACHE
value|2
define|#
directive|define
name|ZB_DEPTH
value|3
typedef|typedef
struct|struct
name|zseg
block|{
name|uint64_t
name|seg_mintxg
decl_stmt|;
name|uint64_t
name|seg_maxtxg
decl_stmt|;
name|zbookmark_t
name|seg_start
decl_stmt|;
name|zbookmark_t
name|seg_end
decl_stmt|;
name|list_node_t
name|seg_node
decl_stmt|;
block|}
name|zseg_t
typedef|;
typedef|typedef
struct|struct
name|traverse_blk_cache
block|{
name|zbookmark_t
name|bc_bookmark
decl_stmt|;
name|blkptr_t
name|bc_blkptr
decl_stmt|;
name|void
modifier|*
name|bc_data
decl_stmt|;
name|dnode_phys_t
modifier|*
name|bc_dnode
decl_stmt|;
name|int
name|bc_errno
decl_stmt|;
name|int
name|bc_pad1
decl_stmt|;
name|uint64_t
name|bc_pad2
decl_stmt|;
block|}
name|traverse_blk_cache_t
typedef|;
typedef|typedef
name|int
function_decl|(
name|blkptr_cb_t
function_decl|)
parameter_list|(
name|traverse_blk_cache_t
modifier|*
name|bc
parameter_list|,
name|spa_t
modifier|*
name|spa
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
struct|struct
name|traverse_handle
block|{
name|spa_t
modifier|*
name|th_spa
decl_stmt|;
name|blkptr_cb_t
modifier|*
name|th_func
decl_stmt|;
name|void
modifier|*
name|th_arg
decl_stmt|;
name|uint16_t
name|th_advance
decl_stmt|;
name|uint16_t
name|th_locked
decl_stmt|;
name|int
name|th_zio_flags
decl_stmt|;
name|list_t
name|th_seglist
decl_stmt|;
name|traverse_blk_cache_t
name|th_cache
index|[
name|ZB_DEPTH
index|]
index|[
name|ZB_MAXLEVEL
index|]
decl_stmt|;
name|traverse_blk_cache_t
name|th_zil_cache
decl_stmt|;
name|uint64_t
name|th_hits
decl_stmt|;
name|uint64_t
name|th_arc_hits
decl_stmt|;
name|uint64_t
name|th_reads
decl_stmt|;
name|uint64_t
name|th_callbacks
decl_stmt|;
name|uint64_t
name|th_syncs
decl_stmt|;
name|uint64_t
name|th_restarts
decl_stmt|;
name|zbookmark_t
name|th_noread
decl_stmt|;
name|zbookmark_t
name|th_lastcb
decl_stmt|;
block|}
struct|;
name|int
name|traverse_dsl_dataset
parameter_list|(
name|struct
name|dsl_dataset
modifier|*
name|ds
parameter_list|,
name|uint64_t
name|txg_start
parameter_list|,
name|int
name|advance
parameter_list|,
name|blkptr_cb_t
name|func
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
name|traverse_handle_t
modifier|*
name|traverse_init
parameter_list|(
name|spa_t
modifier|*
name|spa
parameter_list|,
name|blkptr_cb_t
modifier|*
name|func
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|,
name|int
name|advance
parameter_list|,
name|int
name|zio_flags
parameter_list|)
function_decl|;
name|void
name|traverse_fini
parameter_list|(
name|traverse_handle_t
modifier|*
name|th
parameter_list|)
function_decl|;
name|void
name|traverse_add_dnode
parameter_list|(
name|traverse_handle_t
modifier|*
name|th
parameter_list|,
name|uint64_t
name|mintxg
parameter_list|,
name|uint64_t
name|maxtxg
parameter_list|,
name|uint64_t
name|objset
parameter_list|,
name|uint64_t
name|object
parameter_list|)
function_decl|;
name|void
name|traverse_add_objset
parameter_list|(
name|traverse_handle_t
modifier|*
name|th
parameter_list|,
name|uint64_t
name|mintxg
parameter_list|,
name|uint64_t
name|maxtxg
parameter_list|,
name|uint64_t
name|objset
parameter_list|)
function_decl|;
name|void
name|traverse_add_pool
parameter_list|(
name|traverse_handle_t
modifier|*
name|th
parameter_list|,
name|uint64_t
name|mintxg
parameter_list|,
name|uint64_t
name|maxtxg
parameter_list|)
function_decl|;
name|int
name|traverse_more
parameter_list|(
name|traverse_handle_t
modifier|*
name|th
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_DMU_TRAVERSE_H */
end_comment

end_unit

