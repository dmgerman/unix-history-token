begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2006 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_BPLIST_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_BPLIST_H
end_define

begin_pragma
pragma|#
directive|pragma
name|ident
literal|"%Z%%M%	%I%	%E% SMI"
end_pragma

begin_include
include|#
directive|include
file|<sys/dmu.h>
end_include

begin_include
include|#
directive|include
file|<sys/spa.h>
end_include

begin_include
include|#
directive|include
file|<sys/txg.h>
end_include

begin_include
include|#
directive|include
file|<sys/zfs_context.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
typedef|typedef
struct|struct
name|bplist_phys
block|{
comment|/* 	 * This is the bonus buffer for the dead lists.  The object's 	 * contents is an array of bpl_entries blkptr_t's, representing 	 * a total of bpl_bytes physical space. 	 */
name|uint64_t
name|bpl_entries
decl_stmt|;
name|uint64_t
name|bpl_bytes
decl_stmt|;
name|uint64_t
name|bpl_comp
decl_stmt|;
name|uint64_t
name|bpl_uncomp
decl_stmt|;
block|}
name|bplist_phys_t
typedef|;
define|#
directive|define
name|BPLIST_SIZE_V0
value|(2 * sizeof (uint64_t))
typedef|typedef
struct|struct
name|bplist_q
block|{
name|blkptr_t
name|bpq_blk
decl_stmt|;
name|void
modifier|*
name|bpq_next
decl_stmt|;
block|}
name|bplist_q_t
typedef|;
typedef|typedef
struct|struct
name|bplist
block|{
name|kmutex_t
name|bpl_lock
decl_stmt|;
name|objset_t
modifier|*
name|bpl_mos
decl_stmt|;
name|uint64_t
name|bpl_object
decl_stmt|;
name|uint8_t
name|bpl_blockshift
decl_stmt|;
name|uint8_t
name|bpl_bpshift
decl_stmt|;
name|uint8_t
name|bpl_havecomp
decl_stmt|;
name|bplist_q_t
modifier|*
name|bpl_queue
decl_stmt|;
name|bplist_phys_t
modifier|*
name|bpl_phys
decl_stmt|;
name|dmu_buf_t
modifier|*
name|bpl_dbuf
decl_stmt|;
name|dmu_buf_t
modifier|*
name|bpl_cached_dbuf
decl_stmt|;
block|}
name|bplist_t
typedef|;
specifier|extern
name|uint64_t
name|bplist_create
parameter_list|(
name|objset_t
modifier|*
name|mos
parameter_list|,
name|int
name|blocksize
parameter_list|,
name|dmu_tx_t
modifier|*
name|tx
parameter_list|)
function_decl|;
specifier|extern
name|void
name|bplist_destroy
parameter_list|(
name|objset_t
modifier|*
name|mos
parameter_list|,
name|uint64_t
name|object
parameter_list|,
name|dmu_tx_t
modifier|*
name|tx
parameter_list|)
function_decl|;
specifier|extern
name|int
name|bplist_open
parameter_list|(
name|bplist_t
modifier|*
name|bpl
parameter_list|,
name|objset_t
modifier|*
name|mos
parameter_list|,
name|uint64_t
name|object
parameter_list|)
function_decl|;
specifier|extern
name|void
name|bplist_close
parameter_list|(
name|bplist_t
modifier|*
name|bpl
parameter_list|)
function_decl|;
specifier|extern
name|boolean_t
name|bplist_empty
parameter_list|(
name|bplist_t
modifier|*
name|bpl
parameter_list|)
function_decl|;
specifier|extern
name|int
name|bplist_iterate
parameter_list|(
name|bplist_t
modifier|*
name|bpl
parameter_list|,
name|uint64_t
modifier|*
name|itorp
parameter_list|,
name|blkptr_t
modifier|*
name|bp
parameter_list|)
function_decl|;
specifier|extern
name|int
name|bplist_enqueue
parameter_list|(
name|bplist_t
modifier|*
name|bpl
parameter_list|,
name|blkptr_t
modifier|*
name|bp
parameter_list|,
name|dmu_tx_t
modifier|*
name|tx
parameter_list|)
function_decl|;
specifier|extern
name|void
name|bplist_enqueue_deferred
parameter_list|(
name|bplist_t
modifier|*
name|bpl
parameter_list|,
name|blkptr_t
modifier|*
name|bp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|bplist_sync
parameter_list|(
name|bplist_t
modifier|*
name|bpl
parameter_list|,
name|dmu_tx_t
modifier|*
name|tx
parameter_list|)
function_decl|;
specifier|extern
name|void
name|bplist_vacate
parameter_list|(
name|bplist_t
modifier|*
name|bpl
parameter_list|,
name|dmu_tx_t
modifier|*
name|tx
parameter_list|)
function_decl|;
specifier|extern
name|int
name|bplist_space
parameter_list|(
name|bplist_t
modifier|*
name|bpl
parameter_list|,
name|uint64_t
modifier|*
name|usedp
parameter_list|,
name|uint64_t
modifier|*
name|compp
parameter_list|,
name|uint64_t
modifier|*
name|uncompp
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_BPLIST_H */
end_comment

end_unit

