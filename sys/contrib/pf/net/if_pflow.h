begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$OpenBSD: if_pflow.h,v 1.5 2009/02/27 11:09:36 gollo Exp $	*/
end_comment

begin_comment
comment|/*  * Copyright (c) 2008 Henning Brauer<henning@openbsd.org>  * Copyright (c) 2008 Joerg Goltermann<jg@osn.de>  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER IN  * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT  * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NET_IF_PFLOW_H_
end_ifndef

begin_define
define|#
directive|define
name|_NET_IF_PFLOW_H_
end_define

begin_define
define|#
directive|define
name|PFLOW_ID_LEN
value|sizeof(u_int64_t)
end_define

begin_define
define|#
directive|define
name|PFLOW_MAXFLOWS
value|30
end_define

begin_define
define|#
directive|define
name|PFLOW_VERSION
value|5
end_define

begin_define
define|#
directive|define
name|PFLOW_ENGINE_TYPE
value|42
end_define

begin_define
define|#
directive|define
name|PFLOW_ENGINE_ID
value|42
end_define

begin_define
define|#
directive|define
name|PFLOW_MAXBYTES
value|0xffffffff
end_define

begin_define
define|#
directive|define
name|PFLOW_TIMEOUT
value|30
end_define

begin_struct
struct|struct
name|pflow_flow
block|{
name|u_int32_t
name|src_ip
decl_stmt|;
name|u_int32_t
name|dest_ip
decl_stmt|;
name|u_int32_t
name|nexthop_ip
decl_stmt|;
name|u_int16_t
name|if_index_in
decl_stmt|;
name|u_int16_t
name|if_index_out
decl_stmt|;
name|u_int32_t
name|flow_packets
decl_stmt|;
name|u_int32_t
name|flow_octets
decl_stmt|;
name|u_int32_t
name|flow_start
decl_stmt|;
name|u_int32_t
name|flow_finish
decl_stmt|;
name|u_int16_t
name|src_port
decl_stmt|;
name|u_int16_t
name|dest_port
decl_stmt|;
name|u_int8_t
name|pad1
decl_stmt|;
name|u_int8_t
name|tcp_flags
decl_stmt|;
name|u_int8_t
name|protocol
decl_stmt|;
name|u_int8_t
name|tos
decl_stmt|;
name|u_int16_t
name|src_as
decl_stmt|;
name|u_int16_t
name|dest_as
decl_stmt|;
name|u_int8_t
name|src_mask
decl_stmt|;
name|u_int8_t
name|dest_mask
decl_stmt|;
name|u_int16_t
name|pad2
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|_KERNEL
end_ifdef

begin_decl_stmt
specifier|extern
name|int
name|pflow_ok
decl_stmt|;
end_decl_stmt

begin_struct
struct|struct
name|pflow_softc
block|{
name|struct
name|ifnet
name|sc_if
decl_stmt|;
name|struct
name|ifnet
modifier|*
name|sc_pflow_ifp
decl_stmt|;
name|unsigned
name|int
name|sc_count
decl_stmt|;
name|unsigned
name|int
name|sc_maxcount
decl_stmt|;
name|u_int64_t
name|sc_gcounter
decl_stmt|;
name|struct
name|ip_moptions
name|sc_imo
decl_stmt|;
ifdef|#
directive|ifdef
name|__FreeBSD__
name|struct
name|callout
name|sc_tmo
decl_stmt|;
else|#
directive|else
name|struct
name|timeout
name|sc_tmo
decl_stmt|;
endif|#
directive|endif
name|struct
name|in_addr
name|sc_sender_ip
decl_stmt|;
name|u_int16_t
name|sc_sender_port
decl_stmt|;
name|struct
name|in_addr
name|sc_receiver_ip
decl_stmt|;
name|u_int16_t
name|sc_receiver_port
decl_stmt|;
name|struct
name|mbuf
modifier|*
name|sc_mbuf
decl_stmt|;
comment|/* current cumulative mbuf */
name|SLIST_ENTRY
argument_list|(
argument|pflow_softc
argument_list|)
name|sc_next
expr_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|pflow_softc
modifier|*
name|pflowif
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _KERNEL */
end_comment

begin_struct
struct|struct
name|pflow_header
block|{
name|u_int16_t
name|version
decl_stmt|;
name|u_int16_t
name|count
decl_stmt|;
name|u_int32_t
name|uptime_ms
decl_stmt|;
name|u_int32_t
name|time_sec
decl_stmt|;
name|u_int32_t
name|time_nanosec
decl_stmt|;
name|u_int32_t
name|flow_sequence
decl_stmt|;
name|u_int8_t
name|engine_type
decl_stmt|;
name|u_int8_t
name|engine_id
decl_stmt|;
name|u_int8_t
name|reserved1
decl_stmt|;
name|u_int8_t
name|reserved2
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_define
define|#
directive|define
name|PFLOW_HDRLEN
value|sizeof(struct pflow_header)
end_define

begin_struct
struct|struct
name|pflowstats
block|{
name|u_int64_t
name|pflow_flows
decl_stmt|;
name|u_int64_t
name|pflow_packets
decl_stmt|;
name|u_int64_t
name|pflow_onomem
decl_stmt|;
name|u_int64_t
name|pflow_oerrors
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Configuration structure for SIOCSETPFLOW SIOCGETPFLOW  */
end_comment

begin_struct
struct|struct
name|pflowreq
block|{
name|struct
name|in_addr
name|sender_ip
decl_stmt|;
name|struct
name|in_addr
name|receiver_ip
decl_stmt|;
name|u_int16_t
name|receiver_port
decl_stmt|;
name|u_int16_t
name|addrmask
decl_stmt|;
define|#
directive|define
name|PFLOW_MASK_SRCIP
value|0x01
define|#
directive|define
name|PFLOW_MASK_DSTIP
value|0x02
define|#
directive|define
name|PFLOW_MASK_DSTPRT
value|0x04
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|_KERNEL
end_ifdef

begin_function_decl
name|int
name|export_pflow
parameter_list|(
name|struct
name|pf_state
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|pflow_sysctl
parameter_list|(
name|int
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _KERNEL */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _NET_IF_PFLOW_H_ */
end_comment

end_unit

