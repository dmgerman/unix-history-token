begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright (c) 2010-2012 Broadcom. All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions, and the following disclaimer,  *    without modification.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. The names of the above-listed copyright holders may not be used  *    to endorse or promote products derived from this software without  *    specific prior written permission.  *  * ALTERNATIVELY, this software may be distributed under the terms of the  * GNU General Public License ("GPL") version 2, as published by the Free  * Software Foundation.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS  * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR  * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR  * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF  * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|VCHIQ_IF_H
end_ifndef

begin_define
define|#
directive|define
name|VCHIQ_IF_H
end_define

begin_include
include|#
directive|include
file|"interface/vchi/vchi_mh.h"
end_include

begin_define
define|#
directive|define
name|VCHIQ_SERVICE_HANDLE_INVALID
value|0
end_define

begin_define
define|#
directive|define
name|VCHIQ_SLOT_SIZE
value|4096
end_define

begin_define
define|#
directive|define
name|VCHIQ_MAX_MSG_SIZE
value|(VCHIQ_SLOT_SIZE - sizeof(VCHIQ_HEADER_T))
end_define

begin_define
define|#
directive|define
name|VCHIQ_CHANNEL_SIZE
value|VCHIQ_MAX_MSG_SIZE
end_define

begin_comment
comment|/* For backwards compatibility */
end_comment

begin_define
define|#
directive|define
name|VCHIQ_MAKE_FOURCC
parameter_list|(
name|x0
parameter_list|,
name|x1
parameter_list|,
name|x2
parameter_list|,
name|x3
parameter_list|)
define|\
value|(((x0)<< 24) | ((x1)<< 16) | ((x2)<< 8) | (x3))
end_define

begin_define
define|#
directive|define
name|VCHIQ_GET_SERVICE_USERDATA
parameter_list|(
name|service
parameter_list|)
value|vchiq_get_service_userdata(service)
end_define

begin_define
define|#
directive|define
name|VCHIQ_GET_SERVICE_FOURCC
parameter_list|(
name|service
parameter_list|)
value|vchiq_get_service_fourcc(service)
end_define

begin_typedef
typedef|typedef
enum|enum
block|{
name|VCHIQ_SERVICE_OPENED
block|,
comment|/* service, -, -             */
name|VCHIQ_SERVICE_CLOSED
block|,
comment|/* service, -, -             */
name|VCHIQ_MESSAGE_AVAILABLE
block|,
comment|/* service, header, -        */
name|VCHIQ_BULK_TRANSMIT_DONE
block|,
comment|/* service, -, bulk_userdata */
name|VCHIQ_BULK_RECEIVE_DONE
block|,
comment|/* service, -, bulk_userdata */
name|VCHIQ_BULK_TRANSMIT_ABORTED
block|,
comment|/* service, -, bulk_userdata */
name|VCHIQ_BULK_RECEIVE_ABORTED
comment|/* service, -, bulk_userdata */
block|}
name|VCHIQ_REASON_T
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|VCHIQ_ERROR
init|=
operator|-
literal|1
block|,
name|VCHIQ_SUCCESS
init|=
literal|0
block|,
name|VCHIQ_RETRY
init|=
literal|1
block|}
name|VCHIQ_STATUS_T
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|VCHIQ_BULK_MODE_CALLBACK
block|,
name|VCHIQ_BULK_MODE_BLOCKING
block|,
name|VCHIQ_BULK_MODE_NOCALLBACK
block|,
name|VCHIQ_BULK_MODE_WAITING
comment|/* Reserved for internal use */
block|}
name|VCHIQ_BULK_MODE_T
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|VCHIQ_SERVICE_OPTION_AUTOCLOSE
block|,
name|VCHIQ_SERVICE_OPTION_SLOT_QUOTA
block|,
name|VCHIQ_SERVICE_OPTION_MESSAGE_QUOTA
block|,
name|VCHIQ_SERVICE_OPTION_SYNCHRONOUS
block|}
name|VCHIQ_SERVICE_OPTION_T
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|vchiq_header_struct
block|{
comment|/* The message identifier - opaque to applications. */
name|int
name|msgid
decl_stmt|;
comment|/* Size of message data. */
name|unsigned
name|int
name|size
decl_stmt|;
name|char
name|data
index|[
literal|0
index|]
decl_stmt|;
comment|/* message */
block|}
name|VCHIQ_HEADER_T
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
specifier|const
name|void
modifier|*
name|data
decl_stmt|;
name|unsigned
name|int
name|size
decl_stmt|;
block|}
name|VCHIQ_ELEMENT_T
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|unsigned
name|int
name|VCHIQ_SERVICE_HANDLE_T
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|VCHIQ_STATUS_T
function_decl|(
modifier|*
name|VCHIQ_CALLBACK_T
function_decl|)
parameter_list|(
name|VCHIQ_REASON_T
parameter_list|,
name|VCHIQ_HEADER_T
modifier|*
parameter_list|,
name|VCHIQ_SERVICE_HANDLE_T
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|vchiq_service_base_struct
block|{
name|int
name|fourcc
decl_stmt|;
name|VCHIQ_CALLBACK_T
name|callback
decl_stmt|;
name|void
modifier|*
name|userdata
decl_stmt|;
block|}
name|VCHIQ_SERVICE_BASE_T
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|vchiq_service_params_struct
block|{
name|int
name|fourcc
decl_stmt|;
name|VCHIQ_CALLBACK_T
name|callback
decl_stmt|;
name|void
modifier|*
name|userdata
decl_stmt|;
name|short
name|version
decl_stmt|;
comment|/* Increment for non-trivial changes */
name|short
name|version_min
decl_stmt|;
comment|/* Update for incompatible changes */
block|}
name|VCHIQ_SERVICE_PARAMS_T
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|vchiq_config_struct
block|{
name|unsigned
name|int
name|max_msg_size
decl_stmt|;
name|unsigned
name|int
name|bulk_threshold
decl_stmt|;
comment|/* The message size above which it 					is better to use a bulk transfer 					(<= max_msg_size) */
name|unsigned
name|int
name|max_outstanding_bulks
decl_stmt|;
name|unsigned
name|int
name|max_services
decl_stmt|;
name|short
name|version
decl_stmt|;
comment|/* The version of VCHIQ */
name|short
name|version_min
decl_stmt|;
comment|/* The minimum compatible version of VCHIQ */
block|}
name|VCHIQ_CONFIG_T
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|vchiq_instance_struct
modifier|*
name|VCHIQ_INSTANCE_T
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|VCHIQ_REMOTE_USE_CALLBACK_T
function_decl|)
parameter_list|(
name|void
modifier|*
name|cb_arg
parameter_list|)
function_decl|;
end_typedef

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_initialise
parameter_list|(
name|VCHIQ_INSTANCE_T
modifier|*
name|pinstance
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_shutdown
parameter_list|(
name|VCHIQ_INSTANCE_T
name|instance
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_connect
parameter_list|(
name|VCHIQ_INSTANCE_T
name|instance
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_add_service
parameter_list|(
name|VCHIQ_INSTANCE_T
name|instance
parameter_list|,
specifier|const
name|VCHIQ_SERVICE_PARAMS_T
modifier|*
name|params
parameter_list|,
name|VCHIQ_SERVICE_HANDLE_T
modifier|*
name|pservice
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_open_service
parameter_list|(
name|VCHIQ_INSTANCE_T
name|instance
parameter_list|,
specifier|const
name|VCHIQ_SERVICE_PARAMS_T
modifier|*
name|params
parameter_list|,
name|VCHIQ_SERVICE_HANDLE_T
modifier|*
name|pservice
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_close_service
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_remove_service
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_use_service
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_use_service_no_resume
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_release_service
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_queue_message
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|,
specifier|const
name|VCHIQ_ELEMENT_T
modifier|*
name|elements
parameter_list|,
name|unsigned
name|int
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|vchiq_release_message
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|,
name|VCHIQ_HEADER_T
modifier|*
name|header
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_queue_bulk_transmit
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|,
name|void
modifier|*
name|userdata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_queue_bulk_receive
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|,
name|void
modifier|*
name|userdata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_queue_bulk_transmit_handle
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|,
name|VCHI_MEM_HANDLE_T
name|handle
parameter_list|,
specifier|const
name|void
modifier|*
name|offset
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|,
name|void
modifier|*
name|userdata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_queue_bulk_receive_handle
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|,
name|VCHI_MEM_HANDLE_T
name|handle
parameter_list|,
name|void
modifier|*
name|offset
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|,
name|void
modifier|*
name|userdata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_bulk_transmit
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|,
name|void
modifier|*
name|userdata
parameter_list|,
name|VCHIQ_BULK_MODE_T
name|mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_bulk_receive
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|,
name|void
modifier|*
name|userdata
parameter_list|,
name|VCHIQ_BULK_MODE_T
name|mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_bulk_transmit_handle
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|,
name|VCHI_MEM_HANDLE_T
name|handle
parameter_list|,
specifier|const
name|void
modifier|*
name|offset
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|,
name|void
modifier|*
name|userdata
parameter_list|,
name|VCHIQ_BULK_MODE_T
name|mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_bulk_receive_handle
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|,
name|VCHI_MEM_HANDLE_T
name|handle
parameter_list|,
name|void
modifier|*
name|offset
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|,
name|void
modifier|*
name|userdata
parameter_list|,
name|VCHIQ_BULK_MODE_T
name|mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|vchiq_get_client_id
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
modifier|*
name|vchiq_get_service_userdata
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|vchiq_get_service_fourcc
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_get_config
parameter_list|(
name|VCHIQ_INSTANCE_T
name|instance
parameter_list|,
name|int
name|config_size
parameter_list|,
name|VCHIQ_CONFIG_T
modifier|*
name|pconfig
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_set_service_option
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|,
name|VCHIQ_SERVICE_OPTION_T
name|option
parameter_list|,
name|int
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_remote_use
parameter_list|(
name|VCHIQ_INSTANCE_T
name|instance
parameter_list|,
name|VCHIQ_REMOTE_USE_CALLBACK_T
name|callback
parameter_list|,
name|void
modifier|*
name|cb_arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_remote_release
parameter_list|(
name|VCHIQ_INSTANCE_T
name|instance
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_dump_phys_mem
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|service
parameter_list|,
name|void
modifier|*
name|ptr
parameter_list|,
name|size_t
name|num_bytes
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|VCHIQ_STATUS_T
name|vchiq_get_peer_version
parameter_list|(
name|VCHIQ_SERVICE_HANDLE_T
name|handle
parameter_list|,
name|short
modifier|*
name|peer_version
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* VCHIQ_IF_H */
end_comment

end_unit

