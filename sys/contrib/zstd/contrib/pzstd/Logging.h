begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2016-present, Facebook, Inc.  * All rights reserved.  *  * This source code is licensed under both the BSD-style license (found in the  * LICENSE file in the root directory of this source tree) and the GPLv2 (found  * in the COPYING file in the root directory of this source tree).  */
end_comment

begin_pragma
pragma|#
directive|pragma
name|once
end_pragma

begin_include
include|#
directive|include
file|<cstdio>
end_include

begin_include
include|#
directive|include
file|<mutex>
end_include

begin_decl_stmt
name|namespace
name|pzstd
block|{
name|constexpr
name|int
name|ERROR
init|=
literal|1
decl_stmt|;
name|constexpr
name|int
name|INFO
init|=
literal|2
decl_stmt|;
name|constexpr
name|int
name|DEBUG
init|=
literal|3
decl_stmt|;
name|constexpr
name|int
name|VERBOSE
init|=
literal|4
decl_stmt|;
name|class
name|Logger
block|{
name|std
operator|::
name|mutex
name|mutex_
expr_stmt|;
name|FILE
modifier|*
name|out_
decl_stmt|;
specifier|const
name|int
name|level_
decl_stmt|;
name|using
name|Clock
init|=
name|std
operator|::
name|chrono
operator|::
name|system_clock
decl_stmt|;
name|Clock
operator|::
name|time_point
name|lastUpdate_
expr_stmt|;
name|std
operator|::
name|chrono
operator|::
name|milliseconds
name|refreshRate_
expr_stmt|;
name|public
label|:
name|explicit
name|Logger
argument_list|(
argument|int level
argument_list|,
argument|FILE* out = stderr
argument_list|)
block|:
name|out_
argument_list|(
name|out
argument_list|)
operator|,
name|level_
argument_list|(
name|level
argument_list|)
operator|,
name|lastUpdate_
argument_list|(
name|Clock
operator|::
name|now
argument_list|()
argument_list|)
operator|,
name|refreshRate_
argument_list|(
literal|150
argument_list|)
block|{}
name|bool
name|logsAt
argument_list|(
argument|int level
argument_list|)
block|{
return|return
name|level
operator|<=
name|level_
return|;
block|}
name|template
operator|<
name|typename
operator|...
name|Args
operator|>
name|void
name|operator
argument_list|()
operator|(
name|int
name|level
operator|,
specifier|const
name|char
operator|*
name|fmt
operator|,
name|Args
operator|...
name|args
operator|)
block|{
if|if
condition|(
name|level
operator|>
name|level_
condition|)
block|{
return|return;
block|}
name|std
operator|::
name|lock_guard
operator|<
name|std
operator|::
name|mutex
operator|>
name|lock
argument_list|(
name|mutex_
argument_list|)
expr_stmt|;
name|std
operator|::
name|fprintf
argument_list|(
name|out_
argument_list|,
name|fmt
argument_list|,
name|args
operator|...
argument_list|)
expr_stmt|;
block|}
name|template
operator|<
name|typename
operator|...
name|Args
operator|>
name|void
name|update
argument_list|(
argument|int level
argument_list|,
argument|const char *fmt
argument_list|,
argument|Args... args
argument_list|)
block|{
if|if
condition|(
name|level
operator|>
name|level_
condition|)
block|{
return|return;
block|}
name|std
operator|::
name|lock_guard
operator|<
name|std
operator|::
name|mutex
operator|>
name|lock
argument_list|(
name|mutex_
argument_list|)
expr_stmt|;
name|auto
name|now
operator|=
name|Clock
operator|::
name|now
argument_list|()
expr_stmt|;
if|if
condition|(
name|now
operator|-
name|lastUpdate_
operator|>
name|refreshRate_
condition|)
block|{
name|lastUpdate_
operator|=
name|now
expr_stmt|;
name|std
operator|::
name|fprintf
argument_list|(
name|out_
argument_list|,
literal|"\r"
argument_list|)
expr_stmt|;
name|std
operator|::
name|fprintf
argument_list|(
name|out_
argument_list|,
name|fmt
argument_list|,
name|args
operator|...
argument_list|)
expr_stmt|;
block|}
block|}
end_decl_stmt

begin_function
name|void
name|clear
parameter_list|(
name|int
name|level
parameter_list|)
block|{
if|if
condition|(
name|level
operator|>
name|level_
condition|)
block|{
return|return;
block|}
name|std
operator|::
name|lock_guard
operator|<
name|std
operator|::
name|mutex
operator|>
name|lock
argument_list|(
name|mutex_
argument_list|)
expr_stmt|;
name|std
operator|::
name|fprintf
argument_list|(
name|out_
argument_list|,
literal|"\r%79s\r"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
end_function

unit|};  }
end_unit

