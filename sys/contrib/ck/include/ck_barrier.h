begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2011-2015 Samy Al Bahra.  * Copyright 2011 David Joseph.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|CK_BARRIER_H
end_ifndef

begin_define
define|#
directive|define
name|CK_BARRIER_H
end_define

begin_include
include|#
directive|include
file|<ck_spinlock.h>
end_include

begin_struct
struct|struct
name|ck_barrier_centralized
block|{
name|unsigned
name|int
name|value
decl_stmt|;
name|unsigned
name|int
name|sense
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_centralized
name|ck_barrier_centralized_t
typedef|;
end_typedef

begin_struct
struct|struct
name|ck_barrier_centralized_state
block|{
name|unsigned
name|int
name|sense
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_centralized_state
name|ck_barrier_centralized_state_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|CK_BARRIER_CENTRALIZED_INITIALIZER
value|{0, 0}
end_define

begin_define
define|#
directive|define
name|CK_BARRIER_CENTRALIZED_STATE_INITIALIZER
value|{0}
end_define

begin_function_decl
name|void
name|ck_barrier_centralized
parameter_list|(
name|ck_barrier_centralized_t
modifier|*
parameter_list|,
name|ck_barrier_centralized_state_t
modifier|*
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_struct
struct|struct
name|ck_barrier_combining_group
block|{
name|unsigned
name|int
name|k
decl_stmt|;
name|unsigned
name|int
name|count
decl_stmt|;
name|unsigned
name|int
name|sense
decl_stmt|;
name|struct
name|ck_barrier_combining_group
modifier|*
name|parent
decl_stmt|;
name|struct
name|ck_barrier_combining_group
modifier|*
name|left
decl_stmt|;
name|struct
name|ck_barrier_combining_group
modifier|*
name|right
decl_stmt|;
name|struct
name|ck_barrier_combining_group
modifier|*
name|next
decl_stmt|;
block|}
name|CK_CC_CACHELINE
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_combining_group
name|ck_barrier_combining_group_t
typedef|;
end_typedef

begin_struct
struct|struct
name|ck_barrier_combining_state
block|{
name|unsigned
name|int
name|sense
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_combining_state
name|ck_barrier_combining_state_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|CK_BARRIER_COMBINING_STATE_INITIALIZER
value|{~0}
end_define

begin_struct
struct|struct
name|ck_barrier_combining
block|{
name|struct
name|ck_barrier_combining_group
modifier|*
name|root
decl_stmt|;
name|ck_spinlock_fas_t
name|mutex
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_combining
name|ck_barrier_combining_t
typedef|;
end_typedef

begin_function_decl
name|void
name|ck_barrier_combining_init
parameter_list|(
name|ck_barrier_combining_t
modifier|*
parameter_list|,
name|ck_barrier_combining_group_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ck_barrier_combining_group_init
parameter_list|(
name|ck_barrier_combining_t
modifier|*
parameter_list|,
name|ck_barrier_combining_group_t
modifier|*
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ck_barrier_combining
parameter_list|(
name|ck_barrier_combining_t
modifier|*
parameter_list|,
name|ck_barrier_combining_group_t
modifier|*
parameter_list|,
name|ck_barrier_combining_state_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_struct
struct|struct
name|ck_barrier_dissemination_flag
block|{
name|unsigned
name|int
name|tflag
decl_stmt|;
name|unsigned
name|int
modifier|*
name|pflag
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_dissemination_flag
name|ck_barrier_dissemination_flag_t
typedef|;
end_typedef

begin_struct
struct|struct
name|ck_barrier_dissemination
block|{
name|unsigned
name|int
name|nthr
decl_stmt|;
name|unsigned
name|int
name|size
decl_stmt|;
name|unsigned
name|int
name|tid
decl_stmt|;
name|struct
name|ck_barrier_dissemination_flag
modifier|*
name|flags
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_dissemination
name|ck_barrier_dissemination_t
typedef|;
end_typedef

begin_struct
struct|struct
name|ck_barrier_dissemination_state
block|{
name|int
name|parity
decl_stmt|;
name|unsigned
name|int
name|sense
decl_stmt|;
name|unsigned
name|int
name|tid
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_dissemination_state
name|ck_barrier_dissemination_state_t
typedef|;
end_typedef

begin_function_decl
name|void
name|ck_barrier_dissemination_init
parameter_list|(
name|ck_barrier_dissemination_t
modifier|*
parameter_list|,
name|ck_barrier_dissemination_flag_t
modifier|*
modifier|*
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ck_barrier_dissemination_subscribe
parameter_list|(
name|ck_barrier_dissemination_t
modifier|*
parameter_list|,
name|ck_barrier_dissemination_state_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|int
name|ck_barrier_dissemination_size
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ck_barrier_dissemination
parameter_list|(
name|ck_barrier_dissemination_t
modifier|*
parameter_list|,
name|ck_barrier_dissemination_state_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_struct
struct|struct
name|ck_barrier_tournament_round
block|{
name|int
name|role
decl_stmt|;
name|unsigned
name|int
modifier|*
name|opponent
decl_stmt|;
name|unsigned
name|int
name|flag
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_tournament_round
name|ck_barrier_tournament_round_t
typedef|;
end_typedef

begin_struct
struct|struct
name|ck_barrier_tournament
block|{
name|unsigned
name|int
name|tid
decl_stmt|;
name|unsigned
name|int
name|size
decl_stmt|;
name|struct
name|ck_barrier_tournament_round
modifier|*
modifier|*
name|rounds
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_tournament
name|ck_barrier_tournament_t
typedef|;
end_typedef

begin_struct
struct|struct
name|ck_barrier_tournament_state
block|{
name|unsigned
name|int
name|sense
decl_stmt|;
name|unsigned
name|int
name|vpid
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_tournament_state
name|ck_barrier_tournament_state_t
typedef|;
end_typedef

begin_function_decl
name|void
name|ck_barrier_tournament_subscribe
parameter_list|(
name|ck_barrier_tournament_t
modifier|*
parameter_list|,
name|ck_barrier_tournament_state_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ck_barrier_tournament_init
parameter_list|(
name|ck_barrier_tournament_t
modifier|*
parameter_list|,
name|ck_barrier_tournament_round_t
modifier|*
modifier|*
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|int
name|ck_barrier_tournament_size
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ck_barrier_tournament
parameter_list|(
name|ck_barrier_tournament_t
modifier|*
parameter_list|,
name|ck_barrier_tournament_state_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_struct
struct|struct
name|ck_barrier_mcs
block|{
name|unsigned
name|int
name|tid
decl_stmt|;
name|unsigned
name|int
modifier|*
name|children
index|[
literal|2
index|]
decl_stmt|;
name|unsigned
name|int
name|childnotready
index|[
literal|4
index|]
decl_stmt|;
name|unsigned
name|int
name|dummy
decl_stmt|;
name|unsigned
name|int
name|havechild
index|[
literal|4
index|]
decl_stmt|;
name|unsigned
name|int
modifier|*
name|parent
decl_stmt|;
name|unsigned
name|int
name|parentsense
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_mcs
name|ck_barrier_mcs_t
typedef|;
end_typedef

begin_struct
struct|struct
name|ck_barrier_mcs_state
block|{
name|unsigned
name|int
name|sense
decl_stmt|;
name|unsigned
name|int
name|vpid
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|ck_barrier_mcs_state
name|ck_barrier_mcs_state_t
typedef|;
end_typedef

begin_function_decl
name|void
name|ck_barrier_mcs_init
parameter_list|(
name|ck_barrier_mcs_t
modifier|*
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ck_barrier_mcs_subscribe
parameter_list|(
name|ck_barrier_mcs_t
modifier|*
parameter_list|,
name|ck_barrier_mcs_state_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ck_barrier_mcs
parameter_list|(
name|ck_barrier_mcs_t
modifier|*
parameter_list|,
name|ck_barrier_mcs_state_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* CK_BARRIER_H */
end_comment

end_unit

