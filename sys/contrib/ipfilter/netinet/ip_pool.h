begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 1993-2001, 2003 by Darren Reed.  *  * See the IPFILTER.LICENCE file for details on licencing.  *  * $Id: ip_pool.h,v 2.26.2.3 2005/06/12 07:18:27 darrenr Exp $  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__IP_POOL_H__
end_ifndef

begin_define
define|#
directive|define
name|__IP_POOL_H__
end_define

begin_if
if|#
directive|if
name|defined
argument_list|(
name|_KERNEL
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|__osf__
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|__hpux
argument_list|)
operator|&&
expr|\
operator|!
name|defined
argument_list|(
name|linux
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|sun
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|AIX
argument_list|)
end_if

begin_include
include|#
directive|include
file|<net/radix.h>
end_include

begin_decl_stmt
specifier|extern
name|void
name|rn_freehead
name|__P
argument_list|(
operator|(
expr|struct
name|radix_node_head
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|FreeS
parameter_list|(
name|p
parameter_list|,
name|z
parameter_list|)
value|KFREES(p, z)
end_define

begin_decl_stmt
specifier|extern
name|int
name|max_keylen
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__osf__
argument_list|)
operator|||
name|defined
argument_list|(
name|__hpux
argument_list|)
end_if

begin_include
include|#
directive|include
file|"radix_ipf_local.h"
end_include

begin_define
define|#
directive|define
name|radix_mask
value|ipf_radix_mask
end_define

begin_define
define|#
directive|define
name|radix_node
value|ipf_radix_node
end_define

begin_define
define|#
directive|define
name|radix_node_head
value|ipf_radix_node_head
end_define

begin_else
else|#
directive|else
end_else

begin_include
include|#
directive|include
file|"radix_ipf.h"
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|"netinet/ip_lookup.h"
end_include

begin_define
define|#
directive|define
name|IP_POOL_NOMATCH
value|0
end_define

begin_define
define|#
directive|define
name|IP_POOL_POSITIVE
value|1
end_define

begin_typedef
typedef|typedef
struct|struct
name|ip_pool_node
block|{
name|struct
name|radix_node
name|ipn_nodes
index|[
literal|2
index|]
decl_stmt|;
name|addrfamily_t
name|ipn_addr
decl_stmt|;
name|addrfamily_t
name|ipn_mask
decl_stmt|;
name|int
name|ipn_info
decl_stmt|;
name|char
name|ipn_name
index|[
name|FR_GROUPLEN
index|]
decl_stmt|;
name|u_long
name|ipn_hits
decl_stmt|;
name|struct
name|ip_pool_node
modifier|*
name|ipn_next
decl_stmt|,
modifier|*
modifier|*
name|ipn_pnext
decl_stmt|;
block|}
name|ip_pool_node_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|ip_pool_s
block|{
name|struct
name|ip_pool_s
modifier|*
name|ipo_next
decl_stmt|;
name|struct
name|ip_pool_s
modifier|*
modifier|*
name|ipo_pnext
decl_stmt|;
name|struct
name|radix_node_head
modifier|*
name|ipo_head
decl_stmt|;
name|ip_pool_node_t
modifier|*
name|ipo_list
decl_stmt|;
name|u_long
name|ipo_hits
decl_stmt|;
name|int
name|ipo_unit
decl_stmt|;
name|int
name|ipo_flags
decl_stmt|;
name|int
name|ipo_ref
decl_stmt|;
name|char
name|ipo_name
index|[
name|FR_GROUPLEN
index|]
decl_stmt|;
block|}
name|ip_pool_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|IPOOL_ANON
value|0x80000000
end_define

begin_typedef
typedef|typedef
struct|struct
name|ip_pool_stat
block|{
name|u_long
name|ipls_pools
decl_stmt|;
name|u_long
name|ipls_tables
decl_stmt|;
name|u_long
name|ipls_nodes
decl_stmt|;
name|ip_pool_t
modifier|*
name|ipls_list
index|[
name|IPL_LOGSIZE
index|]
decl_stmt|;
block|}
name|ip_pool_stat_t
typedef|;
end_typedef

begin_decl_stmt
specifier|extern
name|ip_pool_stat_t
name|ipoolstat
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|ip_pool_t
modifier|*
name|ip_pool_list
index|[
name|IPL_LOGSIZE
index|]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ip_pool_search
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|,
name|int
operator|,
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ip_pool_init
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|ip_pool_fini
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ip_pool_create
name|__P
argument_list|(
operator|(
name|iplookupop_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ip_pool_insert
name|__P
argument_list|(
operator|(
name|ip_pool_t
operator|*
operator|,
name|i6addr_t
operator|*
operator|,
name|i6addr_t
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ip_pool_remove
name|__P
argument_list|(
operator|(
name|ip_pool_t
operator|*
operator|,
name|ip_pool_node_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ip_pool_destroy
name|__P
argument_list|(
operator|(
name|iplookupop_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|ip_pool_free
name|__P
argument_list|(
operator|(
name|ip_pool_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|ip_pool_deref
name|__P
argument_list|(
operator|(
name|ip_pool_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
modifier|*
name|ip_pool_find
name|__P
argument_list|(
operator|(
name|int
operator|,
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|ip_pool_node_t
modifier|*
name|ip_pool_findeq
name|__P
argument_list|(
operator|(
name|ip_pool_t
operator|*
operator|,
name|addrfamily_t
operator|*
operator|,
name|addrfamily_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ip_pool_flush
name|__P
argument_list|(
operator|(
name|iplookupflush_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ip_pool_statistics
name|__P
argument_list|(
operator|(
name|iplookupop_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __IP_POOL_H__ */
end_comment

end_unit

