begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$FreeBSD$	*/
end_comment

begin_comment
comment|/*  * Copyright (C) 2012 by Darren Reed.  *  * See the IPFILTER.LICENCE file for details on licencing.  *  * $FreeBSD$  * Id: ip_auth.h,v 2.16.2.2 2006/03/16 06:45:49 darrenr Exp $  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__IP_AUTH_H__
end_ifndef

begin_define
define|#
directive|define
name|__IP_AUTH_H__
end_define

begin_define
define|#
directive|define
name|FR_NUMAUTH
value|32
end_define

begin_typedef
typedef|typedef
struct|struct
name|frauth
block|{
name|int
name|fra_age
decl_stmt|;
name|int
name|fra_len
decl_stmt|;
name|int
name|fra_index
decl_stmt|;
name|u_32_t
name|fra_pass
decl_stmt|;
name|fr_info_t
name|fra_info
decl_stmt|;
name|char
modifier|*
name|fra_buf
decl_stmt|;
name|u_32_t
name|fra_flx
decl_stmt|;
ifdef|#
directive|ifdef
name|MENTAT
name|queue_t
modifier|*
name|fra_q
decl_stmt|;
name|mb_t
modifier|*
name|fra_m
decl_stmt|;
endif|#
directive|endif
block|}
name|frauth_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|frauthent
block|{
name|struct
name|frentry
name|fae_fr
decl_stmt|;
name|struct
name|frauthent
modifier|*
name|fae_next
decl_stmt|;
name|struct
name|frauthent
modifier|*
modifier|*
name|fae_pnext
decl_stmt|;
name|u_long
name|fae_age
decl_stmt|;
name|int
name|fae_ref
decl_stmt|;
block|}
name|frauthent_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|ipf_authstat
block|{
name|U_QUAD_T
name|fas_hits
decl_stmt|;
name|U_QUAD_T
name|fas_miss
decl_stmt|;
name|u_long
name|fas_nospace
decl_stmt|;
name|u_long
name|fas_added
decl_stmt|;
name|u_long
name|fas_sendfail
decl_stmt|;
name|u_long
name|fas_sendok
decl_stmt|;
name|u_long
name|fas_queok
decl_stmt|;
name|u_long
name|fas_quefail
decl_stmt|;
name|u_long
name|fas_expire
decl_stmt|;
name|frauthent_t
modifier|*
name|fas_faelist
decl_stmt|;
block|}
name|ipf_authstat_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|ipf_auth_softc_s
block|{
name|ipfrwlock_t
name|ipf_authlk
decl_stmt|;
name|ipfmutex_t
name|ipf_auth_mx
decl_stmt|;
name|int
name|ipf_auth_size
decl_stmt|;
name|int
name|ipf_auth_used
decl_stmt|;
name|int
name|ipf_auth_replies
decl_stmt|;
name|int
name|ipf_auth_defaultage
decl_stmt|;
name|int
name|ipf_auth_lock
decl_stmt|;
name|ipf_authstat_t
name|ipf_auth_stats
decl_stmt|;
name|frauth_t
modifier|*
name|ipf_auth
decl_stmt|;
name|mb_t
modifier|*
modifier|*
name|ipf_auth_pkts
decl_stmt|;
name|int
name|ipf_auth_start
decl_stmt|;
name|int
name|ipf_auth_end
decl_stmt|;
name|int
name|ipf_auth_next
decl_stmt|;
name|frauthent_t
modifier|*
name|ipf_auth_entries
decl_stmt|;
name|frentry_t
modifier|*
name|ipf_auth_ip
decl_stmt|;
name|frentry_t
modifier|*
name|ipf_auth_rules
decl_stmt|;
block|}
name|ipf_auth_softc_t
typedef|;
end_typedef

begin_decl_stmt
specifier|extern
name|frentry_t
modifier|*
name|ipf_auth_check
name|__P
argument_list|(
operator|(
name|fr_info_t
operator|*
operator|,
name|u_32_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|ipf_auth_expire
name|__P
argument_list|(
operator|(
name|ipf_main_softc_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ipf_auth_ioctl
name|__P
argument_list|(
operator|(
name|ipf_main_softc_t
operator|*
operator|,
name|caddr_t
operator|,
name|ioctlcmd_t
operator|,
name|int
operator|,
name|int
operator|,
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ipf_auth_init
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ipf_auth_main_load
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ipf_auth_main_unload
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|ipf_auth_soft_destroy
name|__P
argument_list|(
operator|(
name|ipf_main_softc_t
operator|*
operator|,
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
modifier|*
name|ipf_auth_soft_create
name|__P
argument_list|(
operator|(
name|ipf_main_softc_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ipf_auth_new
name|__P
argument_list|(
operator|(
name|mb_t
operator|*
operator|,
name|fr_info_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ipf_auth_precmd
name|__P
argument_list|(
operator|(
name|ipf_main_softc_t
operator|*
operator|,
name|ioctlcmd_t
operator|,
name|frentry_t
operator|*
operator|,
name|frentry_t
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|ipf_auth_unload
name|__P
argument_list|(
operator|(
name|ipf_main_softc_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ipf_auth_waiting
name|__P
argument_list|(
operator|(
name|ipf_main_softc_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|ipf_auth_setlock
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ipf_auth_soft_init
name|__P
argument_list|(
operator|(
name|ipf_main_softc_t
operator|*
operator|,
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ipf_auth_soft_fini
name|__P
argument_list|(
operator|(
name|ipf_main_softc_t
operator|*
operator|,
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|u_32_t
name|ipf_auth_pre_scanlist
name|__P
argument_list|(
operator|(
name|ipf_main_softc_t
operator|*
operator|,
name|fr_info_t
operator|*
operator|,
name|u_32_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|frentry_t
modifier|*
modifier|*
name|ipf_auth_rulehead
name|__P
argument_list|(
operator|(
name|ipf_main_softc_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __IP_AUTH_H__ */
end_comment

end_unit

