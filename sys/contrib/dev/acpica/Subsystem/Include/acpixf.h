begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/******************************************************************************  *  * Name: acpixf.h - External interfaces to the ACPI subsystem  *  *****************************************************************************/
end_comment

begin_comment
comment|/******************************************************************************  *  * 1. Copyright Notice  *  * Some or all of this work - Copyright (c) 1999, 2000, 2001, Intel Corp.  * All rights reserved.  *  * 2. License  *  * 2.1. This is your license from Intel Corp. under its intellectual property  * rights.  You may have additional license terms from the party that provided  * you this software, covering your right to use that party's intellectual  * property rights.  *  * 2.2. Intel grants, free of charge, to any person ("Licensee") obtaining a  * copy of the source code appearing in this file ("Covered Code") an  * irrevocable, perpetual, worldwide license under Intel's copyrights in the  * base code distributed originally by Intel ("Original Intel Code") to copy,  * make derivatives, distribute, use and display any portion of the Covered  * Code in any form, with the right to sublicense such rights; and  *  * 2.3. Intel grants Licensee a non-exclusive and non-transferable patent  * license (with the right to sublicense), under only those claims of Intel  * patents that are infringed by the Original Intel Code, to make, use, sell,  * offer to sell, and import the Covered Code and derivative works thereof  * solely to the minimum extent necessary to exercise the above copyright  * license, and in no event shall the patent license extend to any additions  * to or modifications of the Original Intel Code.  No other license or right  * is granted directly or by implication, estoppel or otherwise;  *  * The above copyright and patent license is granted only if the following  * conditions are met:  *  * 3. Conditions  *  * 3.1. Redistribution of Source with Rights to Further Distribute Source.  * Redistribution of source code of any substantial portion of the Covered  * Code or modification with rights to further distribute source must include  * the above Copyright Notice, the above License, this list of Conditions,  * and the following Disclaimer and Export Compliance provision.  In addition,  * Licensee must cause all Covered Code to which Licensee contributes to  * contain a file documenting the changes Licensee made to create that Covered  * Code and the date of any change.  Licensee must include in that file the  * documentation of any changes made by any predecessor Licensee.  Licensee  * must include a prominent statement that the modification is derived,  * directly or indirectly, from Original Intel Code.  *  * 3.2. Redistribution of Source with no Rights to Further Distribute Source.  * Redistribution of source code of any substantial portion of the Covered  * Code or modification without rights to further distribute source must  * include the following Disclaimer and Export Compliance provision in the  * documentation and/or other materials provided with distribution.  In  * addition, Licensee may not authorize further sublicense of source of any  * portion of the Covered Code, and must include terms to the effect that the  * license from Licensee to its licensee is limited to the intellectual  * property embodied in the software Licensee provides to its licensee, and  * not to intellectual property embodied in modifications its licensee may  * make.  *  * 3.3. Redistribution of Executable. Redistribution in executable form of any  * substantial portion of the Covered Code or modification must reproduce the  * above Copyright Notice, and the following Disclaimer and Export Compliance  * provision in the documentation and/or other materials provided with the  * distribution.  *  * 3.4. Intel retains all right, title, and interest in and to the Original  * Intel Code.  *  * 3.5. Neither the name Intel nor any other trademark owned or controlled by  * Intel shall be used in advertising or otherwise to promote the sale, use or  * other dealings in products derived from or relating to the Covered Code  * without prior written authorization from Intel.  *  * 4. Disclaimer and Export Compliance  *  * 4.1. INTEL MAKES NO WARRANTY OF ANY KIND REGARDING ANY SOFTWARE PROVIDED  * HERE.  ANY SOFTWARE ORIGINATING FROM INTEL OR DERIVED FROM INTEL SOFTWARE  * IS PROVIDED "AS IS," AND INTEL WILL NOT PROVIDE ANY SUPPORT,  ASSISTANCE,  * INSTALLATION, TRAINING OR OTHER SERVICES.  INTEL WILL NOT PROVIDE ANY  * UPDATES, ENHANCEMENTS OR EXTENSIONS.  INTEL SPECIFICALLY DISCLAIMS ANY  * IMPLIED WARRANTIES OF MERCHANTABILITY, NONINFRINGEMENT AND FITNESS FOR A  * PARTICULAR PURPOSE.  *  * 4.2. IN NO EVENT SHALL INTEL HAVE ANY LIABILITY TO LICENSEE, ITS LICENSEES  * OR ANY OTHER THIRD PARTY, FOR ANY LOST PROFITS, LOST DATA, LOSS OF USE OR  * COSTS OF PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES, OR FOR ANY INDIRECT,  * SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THIS AGREEMENT, UNDER ANY  * CAUSE OF ACTION OR THEORY OF LIABILITY, AND IRRESPECTIVE OF WHETHER INTEL  * HAS ADVANCE NOTICE OF THE POSSIBILITY OF SUCH DAMAGES.  THESE LIMITATIONS  * SHALL APPLY NOTWITHSTANDING THE FAILURE OF THE ESSENTIAL PURPOSE OF ANY  * LIMITED REMEDY.  *  * 4.3. Licensee shall not export, either directly or indirectly, any of this  * software or system incorporating such software without first obtaining any  * required license or other approval from the U. S. Department of Commerce or  * any other agency or department of the United States Government.  In the  * event Licensee exports any such software from the United States or  * re-exports any such software from a foreign destination, Licensee shall  * ensure that the distribution and export/re-export of the software is in  * compliance with all laws, regulations, orders, or other restrictions of the  * U.S. Export Administration Regulations. Licensee agrees that neither it nor  * any of its subsidiaries will export/re-export any technical data, process,  * software, or service, directly or indirectly, to any country for which the  * United States government or any agency thereof requires an export license,  * other governmental approval, or letter of assurance, without first obtaining  * such license, approval or letter.  *  *****************************************************************************/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__ACXFACE_H__
end_ifndef

begin_define
define|#
directive|define
name|__ACXFACE_H__
end_define

begin_include
include|#
directive|include
file|"actypes.h"
end_include

begin_include
include|#
directive|include
file|"actbl.h"
end_include

begin_comment
comment|/*  * Global interfaces  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiInitializeSubsystem
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiEnableSubsystem
parameter_list|(
name|UINT32
name|Flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiTerminate
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiEnable
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiDisable
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetSystemInfo
parameter_list|(
name|ACPI_BUFFER
modifier|*
name|RetBuffer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiFormatException
parameter_list|(
name|ACPI_STATUS
name|Exception
parameter_list|,
name|ACPI_BUFFER
modifier|*
name|OutBuffer
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * ACPI table manipulation interfaces  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiFindRootPointer
parameter_list|(
name|ACPI_PHYSICAL_ADDRESS
modifier|*
name|RsdpPhysicalAddress
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiLoadTables
parameter_list|(
name|ACPI_PHYSICAL_ADDRESS
name|RsdpPhysicalAddress
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiLoadTable
parameter_list|(
name|ACPI_TABLE_HEADER
modifier|*
name|TablePtr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiUnloadTable
parameter_list|(
name|ACPI_TABLE_TYPE
name|TableType
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetTableHeader
parameter_list|(
name|ACPI_TABLE_TYPE
name|TableType
parameter_list|,
name|UINT32
name|Instance
parameter_list|,
name|ACPI_TABLE_HEADER
modifier|*
name|OutTableHeader
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetTable
parameter_list|(
name|ACPI_TABLE_TYPE
name|TableType
parameter_list|,
name|UINT32
name|Instance
parameter_list|,
name|ACPI_BUFFER
modifier|*
name|RetBuffer
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Namespace and name interfaces  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiWalkNamespace
parameter_list|(
name|ACPI_OBJECT_TYPE
name|Type
parameter_list|,
name|ACPI_HANDLE
name|StartObject
parameter_list|,
name|UINT32
name|MaxDepth
parameter_list|,
name|WALK_CALLBACK
name|UserFunction
parameter_list|,
name|void
modifier|*
name|Context
parameter_list|,
name|void
modifier|*
modifier|*
name|ReturnValue
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetDevices
parameter_list|(
name|NATIVE_CHAR
modifier|*
name|HID
parameter_list|,
name|WALK_CALLBACK
name|UserFunction
parameter_list|,
name|void
modifier|*
name|Context
parameter_list|,
name|void
modifier|*
modifier|*
name|ReturnValue
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetName
parameter_list|(
name|ACPI_HANDLE
name|Handle
parameter_list|,
name|UINT32
name|NameType
parameter_list|,
name|ACPI_BUFFER
modifier|*
name|RetPathPtr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetHandle
parameter_list|(
name|ACPI_HANDLE
name|Parent
parameter_list|,
name|ACPI_STRING
name|Pathname
parameter_list|,
name|ACPI_HANDLE
modifier|*
name|RetHandle
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Object manipulation and enumeration  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiEvaluateObject
parameter_list|(
name|ACPI_HANDLE
name|Object
parameter_list|,
name|ACPI_STRING
name|Pathname
parameter_list|,
name|ACPI_OBJECT_LIST
modifier|*
name|ParameterObjects
parameter_list|,
name|ACPI_BUFFER
modifier|*
name|ReturnObjectBuffer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetObjectInfo
parameter_list|(
name|ACPI_HANDLE
name|Device
parameter_list|,
name|ACPI_DEVICE_INFO
modifier|*
name|Info
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetNextObject
parameter_list|(
name|ACPI_OBJECT_TYPE
name|Type
parameter_list|,
name|ACPI_HANDLE
name|Parent
parameter_list|,
name|ACPI_HANDLE
name|Child
parameter_list|,
name|ACPI_HANDLE
modifier|*
name|OutHandle
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetType
parameter_list|(
name|ACPI_HANDLE
name|Object
parameter_list|,
name|ACPI_OBJECT_TYPE
modifier|*
name|OutType
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetParent
parameter_list|(
name|ACPI_HANDLE
name|Object
parameter_list|,
name|ACPI_HANDLE
modifier|*
name|OutHandle
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * AcpiEvent handler interfaces  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiInstallFixedEventHandler
parameter_list|(
name|UINT32
name|AcpiEvent
parameter_list|,
name|FIXED_EVENT_HANDLER
name|Handler
parameter_list|,
name|void
modifier|*
name|Context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiRemoveFixedEventHandler
parameter_list|(
name|UINT32
name|AcpiEvent
parameter_list|,
name|FIXED_EVENT_HANDLER
name|Handler
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiInstallNotifyHandler
parameter_list|(
name|ACPI_HANDLE
name|Device
parameter_list|,
name|UINT32
name|HandlerType
parameter_list|,
name|NOTIFY_HANDLER
name|Handler
parameter_list|,
name|void
modifier|*
name|Context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiRemoveNotifyHandler
parameter_list|(
name|ACPI_HANDLE
name|Device
parameter_list|,
name|UINT32
name|HandlerType
parameter_list|,
name|NOTIFY_HANDLER
name|Handler
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiInstallAddressSpaceHandler
parameter_list|(
name|ACPI_HANDLE
name|Device
parameter_list|,
name|ACPI_ADDRESS_SPACE_TYPE
name|SpaceId
parameter_list|,
name|ADDRESS_SPACE_HANDLER
name|Handler
parameter_list|,
name|ADDRESS_SPACE_SETUP
name|Setup
parameter_list|,
name|void
modifier|*
name|Context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiRemoveAddressSpaceHandler
parameter_list|(
name|ACPI_HANDLE
name|Device
parameter_list|,
name|ACPI_ADDRESS_SPACE_TYPE
name|SpaceId
parameter_list|,
name|ADDRESS_SPACE_HANDLER
name|Handler
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiInstallGpeHandler
parameter_list|(
name|UINT32
name|GpeNumber
parameter_list|,
name|UINT32
name|Type
parameter_list|,
name|GPE_HANDLER
name|Handler
parameter_list|,
name|void
modifier|*
name|Context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiAcquireGlobalLock
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiReleaseGlobalLock
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiRemoveGpeHandler
parameter_list|(
name|UINT32
name|GpeNumber
parameter_list|,
name|GPE_HANDLER
name|Handler
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiEnableEvent
parameter_list|(
name|UINT32
name|AcpiEvent
parameter_list|,
name|UINT32
name|Type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiDisableEvent
parameter_list|(
name|UINT32
name|AcpiEvent
parameter_list|,
name|UINT32
name|Type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiClearEvent
parameter_list|(
name|UINT32
name|AcpiEvent
parameter_list|,
name|UINT32
name|Type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetEventStatus
parameter_list|(
name|UINT32
name|AcpiEvent
parameter_list|,
name|UINT32
name|Type
parameter_list|,
name|ACPI_EVENT_STATUS
modifier|*
name|EventStatus
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Resource interfaces  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiGetCurrentResources
parameter_list|(
name|ACPI_HANDLE
name|DeviceHandle
parameter_list|,
name|ACPI_BUFFER
modifier|*
name|RetBuffer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetPossibleResources
parameter_list|(
name|ACPI_HANDLE
name|DeviceHandle
parameter_list|,
name|ACPI_BUFFER
modifier|*
name|RetBuffer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiSetCurrentResources
parameter_list|(
name|ACPI_HANDLE
name|DeviceHandle
parameter_list|,
name|ACPI_BUFFER
modifier|*
name|InBuffer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetIrqRoutingTable
parameter_list|(
name|ACPI_HANDLE
name|BusDeviceHandle
parameter_list|,
name|ACPI_BUFFER
modifier|*
name|RetBuffer
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Hardware (ACPI device) interfaces  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiSetFirmwareWakingVector
parameter_list|(
name|ACPI_PHYSICAL_ADDRESS
name|PhysicalAddress
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetFirmwareWakingVector
parameter_list|(
name|ACPI_PHYSICAL_ADDRESS
modifier|*
name|PhysicalAddress
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiEnterSleepState
parameter_list|(
name|UINT8
name|SleepState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetProcessorThrottlingInfo
parameter_list|(
name|ACPI_HANDLE
name|ProcessorHandle
parameter_list|,
name|ACPI_BUFFER
modifier|*
name|UserBuffer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiSetProcessorThrottlingState
parameter_list|(
name|ACPI_HANDLE
name|ProcessorHandle
parameter_list|,
name|UINT32
name|ThrottleState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetProcessorThrottlingState
parameter_list|(
name|ACPI_HANDLE
name|ProcessorHandle
parameter_list|,
name|UINT32
modifier|*
name|ThrottleState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiGetProcessorCxInfo
parameter_list|(
name|ACPI_HANDLE
name|ProcessorHandle
parameter_list|,
name|ACPI_BUFFER
modifier|*
name|UserBuffer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiSetProcessorSleepState
parameter_list|(
name|ACPI_HANDLE
name|ProcessorHandle
parameter_list|,
name|UINT32
name|CxState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiProcessorSleep
parameter_list|(
name|ACPI_HANDLE
name|ProcessorHandle
parameter_list|,
name|UINT32
modifier|*
name|PmTimerTicks
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __ACXFACE_H__ */
end_comment

end_unit

