begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/******************************************************************************  *  * Name: acinterp.h - Interpreter subcomponent prototypes and defines  *       $Revision: 106 $  *  *****************************************************************************/
end_comment

begin_comment
comment|/******************************************************************************  *  * 1. Copyright Notice  *  * Some or all of this work - Copyright (c) 1999, 2000, 2001, Intel Corp.  * All rights reserved.  *  * 2. License  *  * 2.1. This is your license from Intel Corp. under its intellectual property  * rights.  You may have additional license terms from the party that provided  * you this software, covering your right to use that party's intellectual  * property rights.  *  * 2.2. Intel grants, free of charge, to any person ("Licensee") obtaining a  * copy of the source code appearing in this file ("Covered Code") an  * irrevocable, perpetual, worldwide license under Intel's copyrights in the  * base code distributed originally by Intel ("Original Intel Code") to copy,  * make derivatives, distribute, use and display any portion of the Covered  * Code in any form, with the right to sublicense such rights; and  *  * 2.3. Intel grants Licensee a non-exclusive and non-transferable patent  * license (with the right to sublicense), under only those claims of Intel  * patents that are infringed by the Original Intel Code, to make, use, sell,  * offer to sell, and import the Covered Code and derivative works thereof  * solely to the minimum extent necessary to exercise the above copyright  * license, and in no event shall the patent license extend to any additions  * to or modifications of the Original Intel Code.  No other license or right  * is granted directly or by implication, estoppel or otherwise;  *  * The above copyright and patent license is granted only if the following  * conditions are met:  *  * 3. Conditions  *  * 3.1. Redistribution of Source with Rights to Further Distribute Source.  * Redistribution of source code of any substantial portion of the Covered  * Code or modification with rights to further distribute source must include  * the above Copyright Notice, the above License, this list of Conditions,  * and the following Disclaimer and Export Compliance provision.  In addition,  * Licensee must cause all Covered Code to which Licensee contributes to  * contain a file documenting the changes Licensee made to create that Covered  * Code and the date of any change.  Licensee must include in that file the  * documentation of any changes made by any predecessor Licensee.  Licensee  * must include a prominent statement that the modification is derived,  * directly or indirectly, from Original Intel Code.  *  * 3.2. Redistribution of Source with no Rights to Further Distribute Source.  * Redistribution of source code of any substantial portion of the Covered  * Code or modification without rights to further distribute source must  * include the following Disclaimer and Export Compliance provision in the  * documentation and/or other materials provided with distribution.  In  * addition, Licensee may not authorize further sublicense of source of any  * portion of the Covered Code, and must include terms to the effect that the  * license from Licensee to its licensee is limited to the intellectual  * property embodied in the software Licensee provides to its licensee, and  * not to intellectual property embodied in modifications its licensee may  * make.  *  * 3.3. Redistribution of Executable. Redistribution in executable form of any  * substantial portion of the Covered Code or modification must reproduce the  * above Copyright Notice, and the following Disclaimer and Export Compliance  * provision in the documentation and/or other materials provided with the  * distribution.  *  * 3.4. Intel retains all right, title, and interest in and to the Original  * Intel Code.  *  * 3.5. Neither the name Intel nor any other trademark owned or controlled by  * Intel shall be used in advertising or otherwise to promote the sale, use or  * other dealings in products derived from or relating to the Covered Code  * without prior written authorization from Intel.  *  * 4. Disclaimer and Export Compliance  *  * 4.1. INTEL MAKES NO WARRANTY OF ANY KIND REGARDING ANY SOFTWARE PROVIDED  * HERE.  ANY SOFTWARE ORIGINATING FROM INTEL OR DERIVED FROM INTEL SOFTWARE  * IS PROVIDED "AS IS," AND INTEL WILL NOT PROVIDE ANY SUPPORT,  ASSISTANCE,  * INSTALLATION, TRAINING OR OTHER SERVICES.  INTEL WILL NOT PROVIDE ANY  * UPDATES, ENHANCEMENTS OR EXTENSIONS.  INTEL SPECIFICALLY DISCLAIMS ANY  * IMPLIED WARRANTIES OF MERCHANTABILITY, NONINFRINGEMENT AND FITNESS FOR A  * PARTICULAR PURPOSE.  *  * 4.2. IN NO EVENT SHALL INTEL HAVE ANY LIABILITY TO LICENSEE, ITS LICENSEES  * OR ANY OTHER THIRD PARTY, FOR ANY LOST PROFITS, LOST DATA, LOSS OF USE OR  * COSTS OF PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES, OR FOR ANY INDIRECT,  * SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THIS AGREEMENT, UNDER ANY  * CAUSE OF ACTION OR THEORY OF LIABILITY, AND IRRESPECTIVE OF WHETHER INTEL  * HAS ADVANCE NOTICE OF THE POSSIBILITY OF SUCH DAMAGES.  THESE LIMITATIONS  * SHALL APPLY NOTWITHSTANDING THE FAILURE OF THE ESSENTIAL PURPOSE OF ANY  * LIMITED REMEDY.  *  * 4.3. Licensee shall not export, either directly or indirectly, any of this  * software or system incorporating such software without first obtaining any  * required license or other approval from the U. S. Department of Commerce or  * any other agency or department of the United States Government.  In the  * event Licensee exports any such software from the United States or  * re-exports any such software from a foreign destination, Licensee shall  * ensure that the distribution and export/re-export of the software is in  * compliance with all laws, regulations, orders, or other restrictions of the  * U.S. Export Administration Regulations. Licensee agrees that neither it nor  * any of its subsidiaries will export/re-export any technical data, process,  * software, or service, directly or indirectly, to any country for which the  * United States government or any agency thereof requires an export license,  * other governmental approval, or letter of assurance, without first obtaining  * such license, approval or letter.  *  *****************************************************************************/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__ACINTERP_H__
end_ifndef

begin_define
define|#
directive|define
name|__ACINTERP_H__
end_define

begin_define
define|#
directive|define
name|WALK_OPERANDS
value|&(WalkState->Operands [WalkState->NumOperands -1])
end_define

begin_comment
comment|/* Interpreter constants */
end_comment

begin_define
define|#
directive|define
name|AML_END_OF_BLOCK
value|-1
end_define

begin_define
define|#
directive|define
name|PUSH_PKG_LENGTH
value|1
end_define

begin_define
define|#
directive|define
name|DO_NOT_PUSH_PKG_LENGTH
value|0
end_define

begin_define
define|#
directive|define
name|STACK_TOP
value|0
end_define

begin_define
define|#
directive|define
name|STACK_BOTTOM
value|(UINT32) -1
end_define

begin_comment
comment|/* Constants for global "WhenToParseMethods" */
end_comment

begin_define
define|#
directive|define
name|METHOD_PARSE_AT_INIT
value|0x0
end_define

begin_define
define|#
directive|define
name|METHOD_PARSE_JUST_IN_TIME
value|0x1
end_define

begin_define
define|#
directive|define
name|METHOD_DELETE_AT_COMPLETION
value|0x2
end_define

begin_function_decl
name|ACPI_STATUS
name|AcpiExResolveOperands
parameter_list|(
name|UINT16
name|Opcode
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|StackPtr
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amxface - External interpreter interfaces  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExLoadTable
parameter_list|(
name|ACPI_TABLE_TYPE
name|TableId
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExExecuteMethod
parameter_list|(
name|ACPI_NAMESPACE_NODE
modifier|*
name|MethodNode
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|Params
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|ReturnObjDesc
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amconvrt - object conversion  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExConvertToInteger
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|ResultDesc
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExConvertToBuffer
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|ResultDesc
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExConvertToString
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|ResultDesc
parameter_list|,
name|UINT32
name|Base
parameter_list|,
name|UINT32
name|MaxLength
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExConvertToTargetType
parameter_list|(
name|ACPI_OBJECT_TYPE8
name|DestinationType
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|ObjDesc
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amfield - ACPI AML (p-code) execution - field manipulation  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExExtractFromField
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|void
modifier|*
name|Buffer
parameter_list|,
name|UINT32
name|BufferLength
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExInsertIntoField
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|void
modifier|*
name|Buffer
parameter_list|,
name|UINT32
name|BufferLength
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExSetupField
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|UINT32
name|FieldByteOffset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExReadFieldDatum
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|UINT32
name|FieldByteOffset
parameter_list|,
name|UINT32
modifier|*
name|Value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCommonAccessField
parameter_list|(
name|UINT32
name|Mode
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|void
modifier|*
name|Buffer
parameter_list|,
name|UINT32
name|BufferLength
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExAccessIndexField
parameter_list|(
name|UINT32
name|Mode
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|void
modifier|*
name|Buffer
parameter_list|,
name|UINT32
name|BufferLength
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExAccessBankField
parameter_list|(
name|UINT32
name|Mode
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|void
modifier|*
name|Buffer
parameter_list|,
name|UINT32
name|BufferLength
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExAccessRegionField
parameter_list|(
name|UINT32
name|Mode
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|void
modifier|*
name|Buffer
parameter_list|,
name|UINT32
name|BufferLength
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExAccessBufferField
parameter_list|(
name|UINT32
name|Mode
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|void
modifier|*
name|Buffer
parameter_list|,
name|UINT32
name|BufferLength
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExReadDataFromField
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|RetBufferDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExWriteDataToField
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|SourceDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * ammisc - ACPI AML (p-code) execution - specific opcodes  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExTriadic
parameter_list|(
name|UINT16
name|Opcode
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|ReturnDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExHexadic
parameter_list|(
name|UINT16
name|Opcode
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|ReturnDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCreateBufferField
parameter_list|(
name|UINT8
modifier|*
name|AmlPtr
parameter_list|,
name|UINT32
name|AmlLength
parameter_list|,
name|ACPI_NAMESPACE_NODE
modifier|*
name|Node
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExReconfiguration
parameter_list|(
name|UINT16
name|Opcode
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCreateMutex
parameter_list|(
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCreateProcessor
parameter_list|(
name|ACPI_PARSE_OBJECT
modifier|*
name|Op
parameter_list|,
name|ACPI_NAMESPACE_NODE
modifier|*
name|ProcessorNode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCreatePowerResource
parameter_list|(
name|ACPI_PARSE_OBJECT
modifier|*
name|Op
parameter_list|,
name|ACPI_NAMESPACE_NODE
modifier|*
name|PowerNode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCreateRegion
parameter_list|(
name|UINT8
modifier|*
name|AmlPtr
parameter_list|,
name|UINT32
name|AmlLength
parameter_list|,
name|UINT8
name|RegionSpace
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCreateEvent
parameter_list|(
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCreateAlias
parameter_list|(
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCreateMethod
parameter_list|(
name|UINT8
modifier|*
name|AmlPtr
parameter_list|,
name|UINT32
name|AmlLength
parameter_list|,
name|UINT32
name|MethodFlags
parameter_list|,
name|ACPI_NAMESPACE_NODE
modifier|*
name|Method
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * ammutex - mutex support  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExAcquireMutex
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|TimeDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExReleaseMutex
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExReleaseAllMutexes
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|MutexList
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|AcpiExUnlinkMutex
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amprep - ACPI AML (p-code) execution - prep utilities  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExPrepCommonFieldObject
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|UINT8
name|FieldFlags
parameter_list|,
name|UINT32
name|FieldPosition
parameter_list|,
name|UINT32
name|FieldLength
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExPrepRegionFieldValue
parameter_list|(
name|ACPI_NAMESPACE_NODE
modifier|*
name|Node
parameter_list|,
name|ACPI_HANDLE
name|Region
parameter_list|,
name|UINT8
name|FieldFlags
parameter_list|,
name|UINT32
name|FieldPosition
parameter_list|,
name|UINT32
name|FieldLength
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExPrepBankFieldValue
parameter_list|(
name|ACPI_NAMESPACE_NODE
modifier|*
name|Node
parameter_list|,
name|ACPI_NAMESPACE_NODE
modifier|*
name|RegionNode
parameter_list|,
name|ACPI_NAMESPACE_NODE
modifier|*
name|BankRegisterNode
parameter_list|,
name|UINT32
name|BankVal
parameter_list|,
name|UINT8
name|FieldFlags
parameter_list|,
name|UINT32
name|FieldPosition
parameter_list|,
name|UINT32
name|FieldLength
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExPrepIndexFieldValue
parameter_list|(
name|ACPI_NAMESPACE_NODE
modifier|*
name|Node
parameter_list|,
name|ACPI_NAMESPACE_NODE
modifier|*
name|IndexReg
parameter_list|,
name|ACPI_NAMESPACE_NODE
modifier|*
name|DataReg
parameter_list|,
name|UINT8
name|FieldFlags
parameter_list|,
name|UINT32
name|FieldPosition
parameter_list|,
name|UINT32
name|FieldLength
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amsystem - Interface to OS services  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExSystemDoNotifyOp
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|Value
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|AcpiExSystemDoSuspend
parameter_list|(
name|UINT32
name|Time
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|AcpiExSystemDoStall
parameter_list|(
name|UINT32
name|Time
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExSystemAcquireMutex
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|Time
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExSystemReleaseMutex
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExSystemSignalEvent
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExSystemWaitEvent
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|Time
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExSystemResetEvent
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExSystemWaitSemaphore
parameter_list|(
name|ACPI_HANDLE
name|Semaphore
parameter_list|,
name|UINT32
name|Timeout
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * ammonadic - ACPI AML (p-code) execution, monadic operators  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExMonadic1
parameter_list|(
name|UINT16
name|Opcode
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExMonadic2
parameter_list|(
name|UINT16
name|Opcode
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|ReturnDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExMonadic2R
parameter_list|(
name|UINT16
name|Opcode
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|ReturnDesc
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amdyadic - ACPI AML (p-code) execution, dyadic operators  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExDyadic1
parameter_list|(
name|UINT16
name|Opcode
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExDyadic2
parameter_list|(
name|UINT16
name|Opcode
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|ReturnDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExDyadic2R
parameter_list|(
name|UINT16
name|Opcode
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|ReturnDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExDyadic2S
parameter_list|(
name|UINT16
name|Opcode
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|ReturnDesc
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amresolv  - Object resolution and get value functions  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExResolveToValue
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|StackPtr
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExResolveNodeToValue
parameter_list|(
name|ACPI_NAMESPACE_NODE
modifier|*
modifier|*
name|StackPtr
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExResolveObjectToValue
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|StackPtr
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExGetBufferFieldValue
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|FieldDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|ResultDesc
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amdump - Scanner debug output routines  */
end_comment

begin_function_decl
name|void
name|AcpiExShowHexValue
parameter_list|(
name|UINT32
name|ByteCount
parameter_list|,
name|UINT8
modifier|*
name|AmlPtr
parameter_list|,
name|UINT32
name|LeadSpace
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExDumpOperand
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|EntryDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|AcpiExDumpOperands
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|Operands
parameter_list|,
name|OPERATING_MODE
name|InterpreterMode
parameter_list|,
name|NATIVE_CHAR
modifier|*
name|Ident
parameter_list|,
name|UINT32
name|NumLevels
parameter_list|,
name|NATIVE_CHAR
modifier|*
name|Note
parameter_list|,
name|NATIVE_CHAR
modifier|*
name|ModuleName
parameter_list|,
name|UINT32
name|LineNumber
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|AcpiExDumpObjectDescriptor
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|Object
parameter_list|,
name|UINT32
name|Flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|AcpiExDumpNode
parameter_list|(
name|ACPI_NAMESPACE_NODE
modifier|*
name|Node
parameter_list|,
name|UINT32
name|Flags
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amnames - interpreter/scanner name load/execute  */
end_comment

begin_function_decl
name|NATIVE_CHAR
modifier|*
name|AcpiExAllocateNameString
parameter_list|(
name|UINT32
name|PrefixCount
parameter_list|,
name|UINT32
name|NumNameSegs
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|UINT32
name|AcpiExGoodChar
parameter_list|(
name|UINT32
name|Character
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExNameSegment
parameter_list|(
name|UINT8
modifier|*
modifier|*
name|InAmlAddress
parameter_list|,
name|NATIVE_CHAR
modifier|*
name|NameString
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExGetNameString
parameter_list|(
name|ACPI_OBJECT_TYPE8
name|DataType
parameter_list|,
name|UINT8
modifier|*
name|InAmlAddress
parameter_list|,
name|NATIVE_CHAR
modifier|*
modifier|*
name|OutNameString
parameter_list|,
name|UINT32
modifier|*
name|OutNameLength
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExDoName
parameter_list|(
name|ACPI_OBJECT_TYPE
name|DataType
parameter_list|,
name|OPERATING_MODE
name|LoadExecMode
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amstore - Object store support  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExStore
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ValDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|DestDesc
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExStoreObjectToIndex
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ValDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|DestDesc
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExStoreObjectToNode
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|SourceDesc
parameter_list|,
name|ACPI_NAMESPACE_NODE
modifier|*
name|Node
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExStoreObjectToObject
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|SourceDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|DestDesc
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  *  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExResolveObject
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|SourceDescPtr
parameter_list|,
name|ACPI_OBJECT_TYPE8
name|TargetType
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExStoreObject
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|SourceDesc
parameter_list|,
name|ACPI_OBJECT_TYPE8
name|TargetType
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
modifier|*
name|TargetDescPtr
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amcopy - object copy  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExCopyBufferToBuffer
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|SourceDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|TargetDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCopyStringToString
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|SourceDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|TargetDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCopyIntegerToIndexField
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|SourceDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|TargetDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCopyIntegerToBankField
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|SourceDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|TargetDesc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCopyDataToNamedField
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|SourceDesc
parameter_list|,
name|ACPI_NAMESPACE_NODE
modifier|*
name|Node
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExCopyIntegerToBufferField
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|SourceDesc
parameter_list|,
name|ACPI_OPERAND_OBJECT
modifier|*
name|TargetDesc
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amutils - interpreter/scanner utilities  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExEnterInterpreter
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|AcpiExExitInterpreter
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|AcpiExTruncateFor32bitTable
parameter_list|(
name|ACPI_OPERAND_OBJECT
modifier|*
name|ObjDesc
parameter_list|,
name|ACPI_WALK_STATE
modifier|*
name|WalkState
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|BOOLEAN
name|AcpiExValidateObjectType
parameter_list|(
name|ACPI_OBJECT_TYPE
name|Type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|BOOLEAN
name|AcpiExAcquireGlobalLock
parameter_list|(
name|UINT32
name|Rule
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExReleaseGlobalLock
parameter_list|(
name|BOOLEAN
name|Locked
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|UINT32
name|AcpiExDigitsNeeded
parameter_list|(
name|ACPI_INTEGER
name|Value
parameter_list|,
name|UINT32
name|Base
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExEisaIdToString
parameter_list|(
name|UINT32
name|NumericId
parameter_list|,
name|NATIVE_CHAR
modifier|*
name|OutString
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExUnsignedIntegerToString
parameter_list|(
name|ACPI_INTEGER
name|Value
parameter_list|,
name|NATIVE_CHAR
modifier|*
name|OutString
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * amregion - default OpRegion handlers  */
end_comment

begin_function_decl
name|ACPI_STATUS
name|AcpiExSystemMemorySpaceHandler
parameter_list|(
name|UINT32
name|Function
parameter_list|,
name|ACPI_PHYSICAL_ADDRESS
name|Address
parameter_list|,
name|UINT32
name|BitWidth
parameter_list|,
name|UINT32
modifier|*
name|Value
parameter_list|,
name|void
modifier|*
name|HandlerContext
parameter_list|,
name|void
modifier|*
name|RegionContext
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExSystemIoSpaceHandler
parameter_list|(
name|UINT32
name|Function
parameter_list|,
name|ACPI_PHYSICAL_ADDRESS
name|Address
parameter_list|,
name|UINT32
name|BitWidth
parameter_list|,
name|UINT32
modifier|*
name|Value
parameter_list|,
name|void
modifier|*
name|HandlerContext
parameter_list|,
name|void
modifier|*
name|RegionContext
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExPciConfigSpaceHandler
parameter_list|(
name|UINT32
name|Function
parameter_list|,
name|ACPI_PHYSICAL_ADDRESS
name|Address
parameter_list|,
name|UINT32
name|BitWidth
parameter_list|,
name|UINT32
modifier|*
name|Value
parameter_list|,
name|void
modifier|*
name|HandlerContext
parameter_list|,
name|void
modifier|*
name|RegionContext
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExEmbeddedControllerSpaceHandler
parameter_list|(
name|UINT32
name|Function
parameter_list|,
name|ACPI_PHYSICAL_ADDRESS
name|Address
parameter_list|,
name|UINT32
name|BitWidth
parameter_list|,
name|UINT32
modifier|*
name|Value
parameter_list|,
name|void
modifier|*
name|HandlerContext
parameter_list|,
name|void
modifier|*
name|RegionContext
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ACPI_STATUS
name|AcpiExSmBusSpaceHandler
parameter_list|(
name|UINT32
name|Function
parameter_list|,
name|ACPI_PHYSICAL_ADDRESS
name|Address
parameter_list|,
name|UINT32
name|BitWidth
parameter_list|,
name|UINT32
modifier|*
name|Value
parameter_list|,
name|void
modifier|*
name|HandlerContext
parameter_list|,
name|void
modifier|*
name|RegionContext
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __INTERP_H__ */
end_comment

end_unit

