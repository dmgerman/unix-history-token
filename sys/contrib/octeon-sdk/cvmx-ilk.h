begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/***********************license start***************  * Copyright (c) 2003-2010  Cavium Inc. (support@cavium.com). All rights  * reserved.  *  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:  *  *   * Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  *   * Redistributions in binary form must reproduce the above  *     copyright notice, this list of conditions and the following  *     disclaimer in the documentation and/or other materials provided  *     with the distribution.   *   * Neither the name of Cavium Inc. nor the names of  *     its contributors may be used to endorse or promote products  *     derived from this software without specific prior written  *     permission.   * This Software, including technical data, may be subject to U.S. export  control  * laws, including the U.S. Export Administration Act and its  associated  * regulations, and may be subject to export or import  regulations in other  * countries.   * TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"  * AND WITH ALL FAULTS AND CAVIUM INC. MAKES NO PROMISES, REPRESENTATIONS OR  * WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO  * THE SOFTWARE, INCLUDING ITS CONDITION, ITS CONFORMITY TO ANY REPRESENTATION OR  * DESCRIPTION, OR THE EXISTENCE OF ANY LATENT OR PATENT DEFECTS, AND CAVIUM  * SPECIFICALLY DISCLAIMS ALL IMPLIED (IF ANY) WARRANTIES OF TITLE,  * MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF  * VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR  * CORRESPONDENCE TO DESCRIPTION. THE ENTIRE  RISK ARISING OUT OF USE OR  * PERFORMANCE OF THE SOFTWARE LIES WITH YOU.  ***********************license end**************************************/
end_comment

begin_comment
comment|/**  * @file  *  * This file contains defines for the ILK interface   *<hr>$Revision: 49448 $<hr>  *  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__CVMX_ILK_H__
end_ifndef

begin_define
define|#
directive|define
name|__CVMX_ILK_H__
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* CSR typedefs have been moved to cvmx-ilk-defs.h */
define|#
directive|define
name|CVMX_ILK_GBL_BASE
value|5
define|#
directive|define
name|CVMX_ILK_QLM_BASE
value|1
typedef|typedef
struct|struct
block|{
name|int
name|intf_en
range|:
literal|8
decl_stmt|;
name|int
name|lane_en_mask
range|:
literal|8
decl_stmt|;
name|int
name|lane_speed
range|:
literal|16
decl_stmt|;
comment|/* add more here */
block|}
name|cvmx_ilk_intf_t
typedef|;
define|#
directive|define
name|CVMX_NUM_ILK_INTF
value|2
define|#
directive|define
name|CVMX_MAX_ILK_LANES
value|8
specifier|extern
name|unsigned
name|char
name|cvmx_ilk_lane_mask
index|[
name|CVMX_NUM_ILK_INTF
index|]
decl_stmt|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|int
name|pipe
decl_stmt|;
name|unsigned
name|int
name|chan
decl_stmt|;
block|}
name|cvmx_ilk_pipe_chan_t
typedef|;
define|#
directive|define
name|CVMX_ILK_PIPE_BASE
value|72
define|#
directive|define
name|CVMX_MAX_ILK_PIPES
value|45
define|#
directive|define
name|CVMX_MAX_ILK_CHANS
value|8
specifier|extern
name|unsigned
name|char
name|cvmx_ilk_chans
index|[
name|CVMX_NUM_ILK_INTF
index|]
decl_stmt|;
specifier|extern
name|unsigned
name|char
name|cvmx_ilk_chan_map
index|[
name|CVMX_NUM_ILK_INTF
index|]
index|[
name|CVMX_MAX_ILK_CHANS
index|]
decl_stmt|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|int
name|chan
decl_stmt|;
name|unsigned
name|int
name|pknd
decl_stmt|;
block|}
name|cvmx_ilk_chan_pknd_t
typedef|;
define|#
directive|define
name|CVMX_ILK_PKND_BASE
value|20
define|#
directive|define
name|CVMX_MAX_ILK_PKNDS
value|8
comment|/* must be<45 */
typedef|typedef
struct|struct
block|{
name|unsigned
name|int
modifier|*
name|chan_list
decl_stmt|;
comment|/* for discrete channels. or, must be null */
name|unsigned
name|int
name|num_chans
decl_stmt|;
name|unsigned
name|int
name|chan_start
decl_stmt|;
comment|/* for continuous channels */
name|unsigned
name|int
name|chan_end
decl_stmt|;
name|unsigned
name|int
name|chan_step
decl_stmt|;
name|unsigned
name|int
name|clr_on_rd
decl_stmt|;
block|}
name|cvmx_ilk_stats_ctrl_t
typedef|;
define|#
directive|define
name|CVMX_ILK_MAX_CAL
value|288
define|#
directive|define
name|CVMX_ILK_TX_MIN_CAL
value|1
define|#
directive|define
name|CVMX_ILK_RX_MIN_CAL
value|1
define|#
directive|define
name|CVMX_ILK_CAL_GRP_SZ
value|8
define|#
directive|define
name|CVMX_ILK_PIPE_BPID_SZ
value|7
define|#
directive|define
name|CVMX_ILK_ENT_CTRL_SZ
value|2
define|#
directive|define
name|CVMX_ILK_RX_FIFO_WM
value|0x200
typedef|typedef
enum|enum
block|{
name|PIPE_BPID
init|=
literal|0
block|,
name|LINK
block|,
name|XOFF
block|,
name|XON
block|}
name|cvmx_ilk_cal_ent_ctrl_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|char
name|pipe_bpid
decl_stmt|;
name|cvmx_ilk_cal_ent_ctrl_t
name|ent_ctrl
decl_stmt|;
block|}
name|cvmx_ilk_cal_entry_t
typedef|;
comment|/** Callbacks structure to customize ILK initialization sequence */
typedef|typedef
struct|struct
block|{
comment|/** Called to setup rx calendar */
name|int
function_decl|(
modifier|*
name|calendar_setup_rx
function_decl|)
parameter_list|(
name|int
name|interface
parameter_list|,
name|int
name|cal_depth
parameter_list|,
name|cvmx_ilk_cal_entry_t
modifier|*
name|pent
parameter_list|,
name|int
name|hi_wm
parameter_list|,
name|unsigned
name|char
name|cal_ena
parameter_list|)
function_decl|;
comment|/** add more here */
block|}
name|cvmx_ilk_callbacks_t
typedef|;
typedef|typedef
enum|enum
block|{
name|CVMX_ILK_LPBK_DISA
init|=
literal|0
block|,
name|CVMX_ILK_LPBK_ENA
block|}
name|cvmx_ilk_lpbk_ena_t
typedef|;
typedef|typedef
enum|enum
block|{
name|CVMX_ILK_LPBK_INT
init|=
literal|0
block|,
name|CVMX_ILK_LPBK_EXT
block|}
name|cvmx_ilk_lpbk_mode_t
typedef|;
specifier|extern
name|void
name|cvmx_ilk_get_callbacks
parameter_list|(
name|cvmx_ilk_callbacks_t
modifier|*
name|callbacks
parameter_list|)
function_decl|;
specifier|extern
name|void
name|cvmx_ilk_set_callbacks
parameter_list|(
name|cvmx_ilk_callbacks_t
modifier|*
name|new_callbacks
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_start_interface
parameter_list|(
name|int
name|interface
parameter_list|,
name|unsigned
name|char
name|num_lanes
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_set_pipe
parameter_list|(
name|int
name|interface
parameter_list|,
name|int
name|pipe_base
parameter_list|,
name|unsigned
name|int
name|pipe_len
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_tx_set_channel
parameter_list|(
name|int
name|interface
parameter_list|,
name|cvmx_ilk_pipe_chan_t
modifier|*
name|pch
parameter_list|,
name|unsigned
name|int
name|num_chs
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_rx_set_pknd
parameter_list|(
name|int
name|interface
parameter_list|,
name|cvmx_ilk_chan_pknd_t
modifier|*
name|chpknd
parameter_list|,
name|unsigned
name|int
name|num_pknd
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_calendar_setup_cb
parameter_list|(
name|int
name|interface
parameter_list|,
name|int
name|num_ports
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_calendar_sync_cb
parameter_list|(
name|int
name|interface
parameter_list|,
name|int
name|timeout
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_enable
parameter_list|(
name|int
name|interface
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_disable
parameter_list|(
name|int
name|interface
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_get_intf_ena
parameter_list|(
name|int
name|interface
parameter_list|)
function_decl|;
specifier|extern
name|unsigned
name|char
name|cvmx_ilk_bit_count
parameter_list|(
name|unsigned
name|char
name|uc
parameter_list|)
function_decl|;
specifier|extern
name|unsigned
name|char
name|cvmx_ilk_get_intf_ln_msk
parameter_list|(
name|int
name|interface
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_get_chan_info
parameter_list|(
name|int
name|interface
parameter_list|,
name|unsigned
name|char
modifier|*
modifier|*
name|chans
parameter_list|,
name|unsigned
name|char
modifier|*
name|num_chan
parameter_list|)
function_decl|;
specifier|extern
name|void
name|cvmx_ilk_show_stats
parameter_list|(
name|int
name|interface
parameter_list|,
name|cvmx_ilk_stats_ctrl_t
modifier|*
name|pstats
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_cal_setup_rx
parameter_list|(
name|int
name|interface
parameter_list|,
name|int
name|cal_depth
parameter_list|,
name|cvmx_ilk_cal_entry_t
modifier|*
name|pent
parameter_list|,
name|int
name|hi_wm
parameter_list|,
name|unsigned
name|char
name|cal_ena
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_cal_setup_tx
parameter_list|(
name|int
name|interface
parameter_list|,
name|int
name|cal_depth
parameter_list|,
name|cvmx_ilk_cal_entry_t
modifier|*
name|pent
parameter_list|,
name|unsigned
name|char
name|cal_ena
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cvmx_ilk_lpbk
parameter_list|(
name|int
name|interface
parameter_list|,
name|cvmx_ilk_lpbk_ena_t
name|enable
parameter_list|,
name|cvmx_ilk_lpbk_mode_t
name|mode
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __CVMX_ILK_H__ */
end_comment

end_unit

