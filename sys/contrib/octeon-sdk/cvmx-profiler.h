begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/***********************license start***************  * Copyright (c) 2011  Cavium Inc. (support@cavium.com). All rights  * reserved.  *  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:  *  *   * Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  *   * Redistributions in binary form must reproduce the above  *     copyright notice, this list of conditions and the following  *     disclaimer in the documentation and/or other materials provided  *     with the distribution.  *  *   * Neither the name of Cavium Inc. nor the names of  *     its contributors may be used to endorse or promote products  *     derived from this software without specific prior written  *     permission.  *  * This Software, including technical data, may be subject to U.S. export  control  * laws, including the U.S. Export Administration Act and its  associated  * regulations, and may be subject to export or import  regulations in other  * countries.  *  * TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"  * AND WITH ALL FAULTS AND CAVIUM INC. MAKES NO PROMISES, REPRESENTATIONS OR  * WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO  * THE SOFTWARE, INCLUDING ITS CONDITION, ITS CONFORMITY TO ANY REPRESENTATION OR  * DESCRIPTION, OR THE EXISTENCE OF ANY LATENT OR PATENT DEFECTS, AND CAVIUM  * SPECIFICALLY DISCLAIMS ALL IMPLIED (IF ANY) WARRANTIES OF TITLE,  * MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF  * VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR  * CORRESPONDENCE TO DESCRIPTION. THE ENTIRE  RISK ARISING OUT OF USE OR  * PERFORMANCE OF THE SOFTWARE LIES WITH YOU.  *************************license end**************************************/
end_comment

begin_comment
comment|/**  * @file  *  * Header file for the event Profiler.  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__CVMX_PROFILER_H__
end_ifndef

begin_define
define|#
directive|define
name|__CVMX_PROFILER_H__
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
define|#
directive|define
name|EVENT_PERCPU_BUFFER_SIZE
value|8192
define|#
directive|define
name|PADBYTES
value|24
define|#
directive|define
name|EVENT_BUFFER_BLOCK
value|"event_block"
define|#
directive|define
name|EVENT_BUFFER_SIZE
value|EVENT_PERCPU_BUFFER_SIZE * (cvmx_octeon_num_cores() + 1)
define|#
directive|define
name|EVENT_BUFFER_CONFIG_BLOCK
value|"event_config_block"
define|#
directive|define
name|EBC_BLOCK_SIZE
value|256
typedef|typedef
struct|struct
block|{
name|int
name|core
decl_stmt|;
name|uint32_t
name|pc
decl_stmt|;
block|}
name|cvmx_sample_entry_t
typedef|;
typedef|typedef
struct|struct
name|cpu_event_block
block|{
name|int
name|size
decl_stmt|;
name|int
name|sample_read
decl_stmt|;
name|int64_t
name|max_samples
decl_stmt|;
name|int64_t
name|sample_count
decl_stmt|;
name|char
modifier|*
name|head
decl_stmt|;
name|char
modifier|*
name|tail
decl_stmt|;
name|char
modifier|*
name|end
decl_stmt|;
name|char
modifier|*
name|data
decl_stmt|;
block|}
name|cvmx_cpu_event_block_t
typedef|;
typedef|typedef
struct|struct
block|{
name|cvmx_cpu_event_block_t
name|pcpu_blk_info
decl_stmt|;
name|char
modifier|*
name|pcpu_data
decl_stmt|;
block|}
name|cvmx_ringbuf_t
typedef|;
typedef|typedef
struct|struct
name|config_block
block|{
name|int64_t
name|sample_count
decl_stmt|;
name|uint64_t
name|events
decl_stmt|;
name|char
modifier|*
name|pcpu_base_addr
index|[
name|CVMX_MAX_CORES
index|]
decl_stmt|;
block|}
name|cvmx_config_block_t
typedef|;
typedef|typedef
struct|struct
name|event_counter_control_block
block|{
name|int32_t
name|read_cfg_blk
decl_stmt|;
name|char
modifier|*
name|config_blk_base_addr
decl_stmt|;
name|cvmx_config_block_t
name|cfg_blk
decl_stmt|;
block|}
name|event_counter_control_block_t
typedef|;
specifier|extern
name|void
name|cvmx_update_perfcnt_irq
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|cvmx_collect_sample
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  __CVMX_PROFILER_H__ */
end_comment

end_unit

