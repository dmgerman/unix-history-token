begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/***********************license start***************  * Copyright (c) 2003-2012  Cavium Inc. (support@cavium.com). All rights  * reserved.  *  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:  *  *   * Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  *   * Redistributions in binary form must reproduce the above  *     copyright notice, this list of conditions and the following  *     disclaimer in the documentation and/or other materials provided  *     with the distribution.   *   * Neither the name of Cavium Inc. nor the names of  *     its contributors may be used to endorse or promote products  *     derived from this software without specific prior written  *     permission.   * This Software, including technical data, may be subject to U.S. export  control  * laws, including the U.S. Export Administration Act and its  associated  * regulations, and may be subject to export or import  regulations in other  * countries.   * TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"  * AND WITH ALL FAULTS AND CAVIUM INC. MAKES NO PROMISES, REPRESENTATIONS OR  * WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO  * THE SOFTWARE, INCLUDING ITS CONDITION, ITS CONFORMITY TO ANY REPRESENTATION OR  * DESCRIPTION, OR THE EXISTENCE OF ANY LATENT OR PATENT DEFECTS, AND CAVIUM  * SPECIFICALLY DISCLAIMS ALL IMPLIED (IF ANY) WARRANTIES OF TITLE,  * MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF  * VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR  * CORRESPONDENCE TO DESCRIPTION. THE ENTIRE  RISK ARISING OUT OF USE OR  * PERFORMANCE OF THE SOFTWARE LIES WITH YOU.  ***********************license end**************************************/
end_comment

begin_comment
comment|/**  * cvmx-l2t-defs.h  *  * Configuration and status register (CSR) type definitions for  * Octeon l2t.  *  * This file is auto generated. Do not edit.  *  *<hr>$Revision$<hr>  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__CVMX_L2T_DEFS_H__
end_ifndef

begin_define
define|#
directive|define
name|__CVMX_L2T_DEFS_H__
end_define

begin_if
if|#
directive|if
name|CVMX_ENABLE_CSR_ADDRESS_CHECKING
end_if

begin_define
define|#
directive|define
name|CVMX_L2T_ERR
value|CVMX_L2T_ERR_FUNC()
end_define

begin_function
specifier|static
specifier|inline
name|uint64_t
name|CVMX_L2T_ERR_FUNC
parameter_list|(
name|void
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN3XXX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN5XXX
argument_list|)
operator|)
condition|)
name|cvmx_warn
argument_list|(
literal|"CVMX_L2T_ERR not supported on this chip\n"
argument_list|)
expr_stmt|;
return|return
name|CVMX_ADD_IO_SEG
argument_list|(
literal|0x0001180080000008ull
argument_list|)
return|;
block|}
end_function

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|CVMX_L2T_ERR
value|(CVMX_ADD_IO_SEG(0x0001180080000008ull))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/**  * cvmx_l2t_err  *  * L2T_ERR = L2 Tag Errors  *  * Description: L2 Tag ECC SEC/DED Errors and Interrupt Enable  */
end_comment

begin_union
union|union
name|cvmx_l2t_err
block|{
name|uint64_t
name|u64
decl_stmt|;
struct|struct
name|cvmx_l2t_err_s
block|{
ifdef|#
directive|ifdef
name|__BIG_ENDIAN_BITFIELD
name|uint64_t
name|reserved_29_63
range|:
literal|35
decl_stmt|;
name|uint64_t
name|fadru
range|:
literal|1
decl_stmt|;
comment|/**< Failing L2 Tag Upper Address Bit (Index[10])                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the FADRU contains the upper(MSB bit) cacheline index                                                          into the L2 Tag Store. */
name|uint64_t
name|lck_intena2
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag Lock Error2 Interrupt Enable bit */
name|uint64_t
name|lckerr2
range|:
literal|1
decl_stmt|;
comment|/**< HW detected a case where a Rd/Wr Miss from PP#n                                                          could not find an available/unlocked set (for                                                          replacement).                                                          Most likely, this is a result of SW mixing SET                                                          PARTITIONING with ADDRESS LOCKING. If SW allows                                                          another PP to LOCKDOWN all SETs available to PP#n,                                                          then a Rd/Wr Miss from PP#n will be unable                                                          to determine a 'valid' replacement set (since LOCKED                                                          addresses should NEVER be replaced).                                                          If such an event occurs, the HW will select the smallest                                                          available SET(specified by UMSK'x)' as the replacement                                                          set, and the address is unlocked. */
name|uint64_t
name|lck_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag Lock Error Interrupt Enable bit */
name|uint64_t
name|lckerr
range|:
literal|1
decl_stmt|;
comment|/**< SW attempted to LOCK DOWN the last available set of                                                          the INDEX (which is ignored by HW - but reported to SW).                                                          The LDD(L1 load-miss) for the LOCK operation is completed                                                          successfully, however the address is NOT locked.                                                          NOTE: 'Available' sets takes the L2C_SPAR*[UMSK*]                                                          into account. For example, if diagnostic PPx has                                                          UMSKx defined to only use SETs [1:0], and SET1 had                                                          been previously LOCKED, then an attempt to LOCK the                                                          last available SET0 would result in a LCKERR. (This                                                          is to ensure that at least 1 SET at each INDEX is                                                          not LOCKED for general use by other PPs). */
name|uint64_t
name|fset
range|:
literal|3
decl_stmt|;
comment|/**< Failing L2 Tag Hit Set# (1-of-8)                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set and                                                          (FSYN != 0), the FSET specifies the failing hit-set.                                                          NOTE: During a force-hit (L2T/L2D/L2T=1), the hit-set                                                          is specified by the L2C_DBG[SET]. */
name|uint64_t
name|fadr
range|:
literal|10
decl_stmt|;
comment|/**< Failing L2 Tag Address (10-bit Index)                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the FADR contains the lower 10bit cacheline index                                                          into the L2 Tag Store. */
name|uint64_t
name|fsyn
range|:
literal|6
decl_stmt|;
comment|/**< When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the contents of this register contain the 6-bit                                                          syndrome for the hit set only.                                                          If (FSYN = 0), the SBE or DBE reported was for one of                                                          the "non-hit" sets at the failing index(FADR).                                                          NOTE: During a force-hit (L2T/L2D/L2T=1), the hit set                                                          is specified by the L2C_DBG[SET].                                                          If (FSYN != 0), the SBE or DBE reported was for the                                                          hit set at the failing index(FADR) and failing                                                          set(FSET).                                                          SW NOTE: To determine which "non-hit" set was in error,                                                          SW can use the L2C_DBG[L2T] debug feature to explicitly                                                          read the other sets at the failing index(FADR). When                                                          (FSYN !=0), then the FSET contains the failing hit-set.                                                          NOTE: A DED Error will always overwrite a SEC Error                                                          SYNDROME and FADR). */
name|uint64_t
name|ded_err
range|:
literal|1
decl_stmt|;
comment|/**< L2T Double Bit Error detected (DED)                                                          During every L2 Tag Probe, all 8 sets Tag's (at a                                                          given index) are checked for double bit errors(DBEs).                                                          This bit is set if ANY of the 8 sets contains a DBE.                                                          DBEs also generated an interrupt(if enabled). */
name|uint64_t
name|sec_err
range|:
literal|1
decl_stmt|;
comment|/**< L2T Single Bit Error corrected (SEC)                                                          During every L2 Tag Probe, all 8 sets Tag's (at a                                                          given index) are checked for single bit errors(SBEs).                                                          This bit is set if ANY of the 8 sets contains an SBE.                                                          SBEs are auto corrected in HW and generate an                                                          interrupt(if enabled). */
name|uint64_t
name|ded_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Double Error Detect(DED) Interrupt                                                          Enable bit. When set, allows interrupts to be                                                          reported on double bit (uncorrectable) errors from                                                          the L2 Tag Arrays. */
name|uint64_t
name|sec_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Single Error Correct(SEC) Interrupt                                                          Enable bit. When set, allows interrupts to be                                                          reported on single bit (correctable) errors from                                                          the L2 Tag Arrays. */
name|uint64_t
name|ecc_ena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Enable                                                          When set, enables 6-bit SEC/DED codeword for 19-bit                                                          L2 Tag Arrays [V,D,L,TAG[33:18]] */
else|#
directive|else
name|uint64_t
name|ecc_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sec_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ded_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sec_err
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ded_err
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fsyn
range|:
literal|6
decl_stmt|;
name|uint64_t
name|fadr
range|:
literal|10
decl_stmt|;
name|uint64_t
name|fset
range|:
literal|3
decl_stmt|;
name|uint64_t
name|lckerr
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lck_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lckerr2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lck_intena2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fadru
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_29_63
range|:
literal|35
decl_stmt|;
endif|#
directive|endif
block|}
name|s
struct|;
struct|struct
name|cvmx_l2t_err_cn30xx
block|{
ifdef|#
directive|ifdef
name|__BIG_ENDIAN_BITFIELD
name|uint64_t
name|reserved_28_63
range|:
literal|36
decl_stmt|;
name|uint64_t
name|lck_intena2
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag Lock Error2 Interrupt Enable bit */
name|uint64_t
name|lckerr2
range|:
literal|1
decl_stmt|;
comment|/**< HW detected a case where a Rd/Wr Miss from PP#n                                                          could not find an available/unlocked set (for                                                          replacement).                                                          Most likely, this is a result of SW mixing SET                                                          PARTITIONING with ADDRESS LOCKING. If SW allows                                                          another PP to LOCKDOWN all SETs available to PP#n,                                                          then a Rd/Wr Miss from PP#n will be unable                                                          to determine a 'valid' replacement set (since LOCKED                                                          addresses should NEVER be replaced).                                                          If such an event occurs, the HW will select the smallest                                                          available SET(specified by UMSK'x)' as the replacement                                                          set, and the address is unlocked. */
name|uint64_t
name|lck_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag Lock Error Interrupt Enable bit */
name|uint64_t
name|lckerr
range|:
literal|1
decl_stmt|;
comment|/**< SW attempted to LOCK DOWN the last available set of                                                          the INDEX (which is ignored by HW - but reported to SW).                                                          The LDD(L1 load-miss) for the LOCK operation is                                                          completed successfully, however the address is NOT                                                          locked.                                                          NOTE: 'Available' sets takes the L2C_SPAR*[UMSK*]                                                          into account. For example, if diagnostic PPx has                                                          UMSKx defined to only use SETs [1:0], and SET1 had                                                          been previously LOCKED, then an attempt to LOCK the                                                          last available SET0 would result in a LCKERR. (This                                                          is to ensure that at least 1 SET at each INDEX is                                                          not LOCKED for general use by other PPs). */
name|uint64_t
name|reserved_23_23
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fset
range|:
literal|2
decl_stmt|;
comment|/**< Failing L2 Tag Hit Set# (1-of-4)                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set and                                                          (FSYN != 0), the FSET specifies the failing hit-set.                                                          NOTE: During a force-hit (L2T/L2D/L2T=1), the hit-set                                                          is specified by the L2C_DBG[SET]. */
name|uint64_t
name|reserved_19_20
range|:
literal|2
decl_stmt|;
name|uint64_t
name|fadr
range|:
literal|8
decl_stmt|;
comment|/**< Failing L2 Tag Store Index (8-bit)                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the FADR contains the 8bit cacheline index into the                                                          L2 Tag Store. */
name|uint64_t
name|fsyn
range|:
literal|6
decl_stmt|;
comment|/**< When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the contents of this register contain the 6-bit                                                          syndrome for the hit set only.                                                          If (FSYN = 0), the SBE or DBE reported was for one of                                                          the "non-hit" sets at the failing index(FADR).                                                          NOTE: During a force-hit (L2T/L2D/L2T=1), the hit set                                                          is specified by the L2C_DBG[SET].                                                          If (FSYN != 0), the SBE or DBE reported was for the                                                          hit set at the failing index(FADR) and failing                                                          set(FSET).                                                          SW NOTE: To determine which "non-hit" set was in error,                                                          SW can use the L2C_DBG[L2T] debug feature to explicitly                                                          read the other sets at the failing index(FADR). When                                                          (FSYN !=0), then the FSET contains the failing hit-set.                                                          NOTE: A DED Error will always overwrite a SEC Error                                                          SYNDROME and FADR). */
name|uint64_t
name|ded_err
range|:
literal|1
decl_stmt|;
comment|/**< L2T Double Bit Error detected (DED)                                                          During every L2 Tag Probe, all 8 sets Tag's (at a                                                          given index) are checked for double bit errors(DBEs).                                                          This bit is set if ANY of the 8 sets contains a DBE.                                                          DBEs also generated an interrupt(if enabled). */
name|uint64_t
name|sec_err
range|:
literal|1
decl_stmt|;
comment|/**< L2T Single Bit Error corrected (SEC)                                                          During every L2 Tag Probe, all 8 sets Tag's (at a                                                          given index) are checked for single bit errors(SBEs).                                                          This bit is set if ANY of the 8 sets contains an SBE.                                                          SBEs are auto corrected in HW and generate an                                                          interrupt(if enabled). */
name|uint64_t
name|ded_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Double Error Detect(DED) Interrupt                                                          Enable bit. When set, allows interrupts to be                                                          reported on double bit (uncorrectable) errors from                                                          the L2 Tag Arrays. */
name|uint64_t
name|sec_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Single Error Correct(SEC) Interrupt                                                          Enable bit. When set, allows interrupts to be                                                          reported on single bit (correctable) errors from                                                          the L2 Tag Arrays. */
name|uint64_t
name|ecc_ena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Enable                                                          When set, enables 6-bit SEC/DED codeword for 22-bit                                                          L2 Tag Arrays [V,D,L,TAG[33:15]] */
else|#
directive|else
name|uint64_t
name|ecc_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sec_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ded_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sec_err
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ded_err
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fsyn
range|:
literal|6
decl_stmt|;
name|uint64_t
name|fadr
range|:
literal|8
decl_stmt|;
name|uint64_t
name|reserved_19_20
range|:
literal|2
decl_stmt|;
name|uint64_t
name|fset
range|:
literal|2
decl_stmt|;
name|uint64_t
name|reserved_23_23
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lckerr
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lck_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lckerr2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lck_intena2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_28_63
range|:
literal|36
decl_stmt|;
endif|#
directive|endif
block|}
name|cn30xx
struct|;
struct|struct
name|cvmx_l2t_err_cn31xx
block|{
ifdef|#
directive|ifdef
name|__BIG_ENDIAN_BITFIELD
name|uint64_t
name|reserved_28_63
range|:
literal|36
decl_stmt|;
name|uint64_t
name|lck_intena2
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag Lock Error2 Interrupt Enable bit */
name|uint64_t
name|lckerr2
range|:
literal|1
decl_stmt|;
comment|/**< HW detected a case where a Rd/Wr Miss from PP#n                                                          could not find an available/unlocked set (for                                                          replacement).                                                          Most likely, this is a result of SW mixing SET                                                          PARTITIONING with ADDRESS LOCKING. If SW allows                                                          another PP to LOCKDOWN all SETs available to PP#n,                                                          then a Rd/Wr Miss from PP#n will be unable                                                          to determine a 'valid' replacement set (since LOCKED                                                          addresses should NEVER be replaced).                                                          If such an event occurs, the HW will select the smallest                                                          available SET(specified by UMSK'x)' as the replacement                                                          set, and the address is unlocked. */
name|uint64_t
name|lck_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag Lock Error Interrupt Enable bit */
name|uint64_t
name|lckerr
range|:
literal|1
decl_stmt|;
comment|/**< SW attempted to LOCK DOWN the last available set of                                                          the INDEX (which is ignored by HW - but reported to SW).                                                          The LDD(L1 load-miss) for the LOCK operation is completed                                                          successfully, however the address is NOT locked.                                                          NOTE: 'Available' sets takes the L2C_SPAR*[UMSK*]                                                          into account. For example, if diagnostic PPx has                                                          UMSKx defined to only use SETs [1:0], and SET1 had                                                          been previously LOCKED, then an attempt to LOCK the                                                          last available SET0 would result in a LCKERR. (This                                                          is to ensure that at least 1 SET at each INDEX is                                                          not LOCKED for general use by other PPs). */
name|uint64_t
name|reserved_23_23
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fset
range|:
literal|2
decl_stmt|;
comment|/**< Failing L2 Tag Hit Set# (1-of-4)                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set and                                                          (FSYN != 0), the FSET specifies the failing hit-set.                                                          NOTE: During a force-hit (L2T/L2D/L2T=1), the hit-set                                                          is specified by the L2C_DBG[SET]. */
name|uint64_t
name|reserved_20_20
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fadr
range|:
literal|9
decl_stmt|;
comment|/**< Failing L2 Tag Address (9-bit Index)                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the FADR contains the 9-bit cacheline index into the                                                          L2 Tag Store. */
name|uint64_t
name|fsyn
range|:
literal|6
decl_stmt|;
comment|/**< When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the contents of this register contain the 6-bit                                                          syndrome for the hit set only.                                                          If (FSYN = 0), the SBE or DBE reported was for one of                                                          the "non-hit" sets at the failing index(FADR).                                                          NOTE: During a force-hit (L2T/L2D/L2T=1), the hit set                                                          is specified by the L2C_DBG[SET].                                                          If (FSYN != 0), the SBE or DBE reported was for the                                                          hit set at the failing index(FADR) and failing                                                          set(FSET).                                                          SW NOTE: To determine which "non-hit" set was in error,                                                          SW can use the L2C_DBG[L2T] debug feature to explicitly                                                          read the other sets at the failing index(FADR). When                                                          (FSYN !=0), then the FSET contains the failing hit-set.                                                          NOTE: A DED Error will always overwrite a SEC Error                                                          SYNDROME and FADR). */
name|uint64_t
name|ded_err
range|:
literal|1
decl_stmt|;
comment|/**< L2T Double Bit Error detected (DED)                                                          During every L2 Tag Probe, all 8 sets Tag's (at a                                                          given index) are checked for double bit errors(DBEs).                                                          This bit is set if ANY of the 8 sets contains a DBE.                                                          DBEs also generated an interrupt(if enabled). */
name|uint64_t
name|sec_err
range|:
literal|1
decl_stmt|;
comment|/**< L2T Single Bit Error corrected (SEC)                                                          During every L2 Tag Probe, all 8 sets Tag's (at a                                                          given index) are checked for single bit errors(SBEs).                                                          This bit is set if ANY of the 8 sets contains an SBE.                                                          SBEs are auto corrected in HW and generate an                                                          interrupt(if enabled). */
name|uint64_t
name|ded_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Double Error Detect(DED) Interrupt                                                          Enable bit. When set, allows interrupts to be                                                          reported on double bit (uncorrectable) errors from                                                          the L2 Tag Arrays. */
name|uint64_t
name|sec_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Single Error Correct(SEC) Interrupt                                                          Enable bit. When set, allows interrupts to be                                                          reported on single bit (correctable) errors from                                                          the L2 Tag Arrays. */
name|uint64_t
name|ecc_ena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Enable                                                          When set, enables 6-bit SEC/DED codeword for 21-bit                                                          L2 Tag Arrays [V,D,L,TAG[33:16]] */
else|#
directive|else
name|uint64_t
name|ecc_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sec_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ded_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sec_err
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ded_err
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fsyn
range|:
literal|6
decl_stmt|;
name|uint64_t
name|fadr
range|:
literal|9
decl_stmt|;
name|uint64_t
name|reserved_20_20
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fset
range|:
literal|2
decl_stmt|;
name|uint64_t
name|reserved_23_23
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lckerr
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lck_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lckerr2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lck_intena2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_28_63
range|:
literal|36
decl_stmt|;
endif|#
directive|endif
block|}
name|cn31xx
struct|;
struct|struct
name|cvmx_l2t_err_cn38xx
block|{
ifdef|#
directive|ifdef
name|__BIG_ENDIAN_BITFIELD
name|uint64_t
name|reserved_28_63
range|:
literal|36
decl_stmt|;
name|uint64_t
name|lck_intena2
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag Lock Error2 Interrupt Enable bit */
name|uint64_t
name|lckerr2
range|:
literal|1
decl_stmt|;
comment|/**< HW detected a case where a Rd/Wr Miss from PP#n                                                          could not find an available/unlocked set (for                                                          replacement).                                                          Most likely, this is a result of SW mixing SET                                                          PARTITIONING with ADDRESS LOCKING. If SW allows                                                          another PP to LOCKDOWN all SETs available to PP#n,                                                          then a Rd/Wr Miss from PP#n will be unable                                                          to determine a 'valid' replacement set (since LOCKED                                                          addresses should NEVER be replaced).                                                          If such an event occurs, the HW will select the smallest                                                          available SET(specified by UMSK'x)' as the replacement                                                          set, and the address is unlocked. */
name|uint64_t
name|lck_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag Lock Error Interrupt Enable bit */
name|uint64_t
name|lckerr
range|:
literal|1
decl_stmt|;
comment|/**< SW attempted to LOCK DOWN the last available set of                                                          the INDEX (which is ignored by HW - but reported to SW).                                                          The LDD(L1 load-miss) for the LOCK operation is completed                                                          successfully, however the address is NOT locked.                                                          NOTE: 'Available' sets takes the L2C_SPAR*[UMSK*]                                                          into account. For example, if diagnostic PPx has                                                          UMSKx defined to only use SETs [1:0], and SET1 had                                                          been previously LOCKED, then an attempt to LOCK the                                                          last available SET0 would result in a LCKERR. (This                                                          is to ensure that at least 1 SET at each INDEX is                                                          not LOCKED for general use by other PPs). */
name|uint64_t
name|fset
range|:
literal|3
decl_stmt|;
comment|/**< Failing L2 Tag Hit Set# (1-of-8)                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set and                                                          (FSYN != 0), the FSET specifies the failing hit-set.                                                          NOTE: During a force-hit (L2T/L2D/L2T=1), the hit-set                                                          is specified by the L2C_DBG[SET]. */
name|uint64_t
name|fadr
range|:
literal|10
decl_stmt|;
comment|/**< Failing L2 Tag Address (10-bit Index)                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the FADR contains the 10bit cacheline index into the                                                          L2 Tag Store. */
name|uint64_t
name|fsyn
range|:
literal|6
decl_stmt|;
comment|/**< When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the contents of this register contain the 6-bit                                                          syndrome for the hit set only.                                                          If (FSYN = 0), the SBE or DBE reported was for one of                                                          the "non-hit" sets at the failing index(FADR).                                                          NOTE: During a force-hit (L2T/L2D/L2T=1), the hit set                                                          is specified by the L2C_DBG[SET].                                                          If (FSYN != 0), the SBE or DBE reported was for the                                                          hit set at the failing index(FADR) and failing                                                          set(FSET).                                                          SW NOTE: To determine which "non-hit" set was in error,                                                          SW can use the L2C_DBG[L2T] debug feature to explicitly                                                          read the other sets at the failing index(FADR). When                                                          (FSYN !=0), then the FSET contains the failing hit-set.                                                          NOTE: A DED Error will always overwrite a SEC Error                                                          SYNDROME and FADR). */
name|uint64_t
name|ded_err
range|:
literal|1
decl_stmt|;
comment|/**< L2T Double Bit Error detected (DED)                                                          During every L2 Tag Probe, all 8 sets Tag's (at a                                                          given index) are checked for double bit errors(DBEs).                                                          This bit is set if ANY of the 8 sets contains a DBE.                                                          DBEs also generated an interrupt(if enabled). */
name|uint64_t
name|sec_err
range|:
literal|1
decl_stmt|;
comment|/**< L2T Single Bit Error corrected (SEC)                                                          During every L2 Tag Probe, all 8 sets Tag's (at a                                                          given index) are checked for single bit errors(SBEs).                                                          This bit is set if ANY of the 8 sets contains an SBE.                                                          SBEs are auto corrected in HW and generate an                                                          interrupt(if enabled). */
name|uint64_t
name|ded_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Double Error Detect(DED) Interrupt                                                          Enable bit. When set, allows interrupts to be                                                          reported on double bit (uncorrectable) errors from                                                          the L2 Tag Arrays. */
name|uint64_t
name|sec_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Single Error Correct(SEC) Interrupt                                                          Enable bit. When set, allows interrupts to be                                                          reported on single bit (correctable) errors from                                                          the L2 Tag Arrays. */
name|uint64_t
name|ecc_ena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Enable                                                          When set, enables 6-bit SEC/DED codeword for 20-bit                                                          L2 Tag Arrays [V,D,L,TAG[33:17]] */
else|#
directive|else
name|uint64_t
name|ecc_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sec_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ded_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sec_err
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ded_err
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fsyn
range|:
literal|6
decl_stmt|;
name|uint64_t
name|fadr
range|:
literal|10
decl_stmt|;
name|uint64_t
name|fset
range|:
literal|3
decl_stmt|;
name|uint64_t
name|lckerr
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lck_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lckerr2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lck_intena2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_28_63
range|:
literal|36
decl_stmt|;
endif|#
directive|endif
block|}
name|cn38xx
struct|;
name|struct
name|cvmx_l2t_err_cn38xx
name|cn38xxp2
decl_stmt|;
struct|struct
name|cvmx_l2t_err_cn50xx
block|{
ifdef|#
directive|ifdef
name|__BIG_ENDIAN_BITFIELD
name|uint64_t
name|reserved_28_63
range|:
literal|36
decl_stmt|;
name|uint64_t
name|lck_intena2
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag Lock Error2 Interrupt Enable bit */
name|uint64_t
name|lckerr2
range|:
literal|1
decl_stmt|;
comment|/**< HW detected a case where a Rd/Wr Miss from PP#n                                                          could not find an available/unlocked set (for                                                          replacement).                                                          Most likely, this is a result of SW mixing SET                                                          PARTITIONING with ADDRESS LOCKING. If SW allows                                                          another PP to LOCKDOWN all SETs available to PP#n,                                                          then a Rd/Wr Miss from PP#n will be unable                                                          to determine a 'valid' replacement set (since LOCKED                                                          addresses should NEVER be replaced).                                                          If such an event occurs, the HW will select the smallest                                                          available SET(specified by UMSK'x)' as the replacement                                                          set, and the address is unlocked. */
name|uint64_t
name|lck_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag Lock Error Interrupt Enable bit */
name|uint64_t
name|lckerr
range|:
literal|1
decl_stmt|;
comment|/**< SW attempted to LOCK DOWN the last available set of                                                          the INDEX (which is ignored by HW - but reported to SW).                                                          The LDD(L1 load-miss) for the LOCK operation is completed                                                          successfully, however the address is NOT locked.                                                          NOTE: 'Available' sets takes the L2C_SPAR*[UMSK*]                                                          into account. For example, if diagnostic PPx has                                                          UMSKx defined to only use SETs [1:0], and SET1 had                                                          been previously LOCKED, then an attempt to LOCK the                                                          last available SET0 would result in a LCKERR. (This                                                          is to ensure that at least 1 SET at each INDEX is                                                          not LOCKED for general use by other PPs). */
name|uint64_t
name|fset
range|:
literal|3
decl_stmt|;
comment|/**< Failing L2 Tag Hit Set# (1-of-8)                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set and                                                          (FSYN != 0), the FSET specifies the failing hit-set.                                                          NOTE: During a force-hit (L2T/L2D/L2T=1), the hit-set                                                          is specified by the L2C_DBG[SET]. */
name|uint64_t
name|reserved_18_20
range|:
literal|3
decl_stmt|;
name|uint64_t
name|fadr
range|:
literal|7
decl_stmt|;
comment|/**< Failing L2 Tag Address (7-bit Index)                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the FADR contains the lower 7bit cacheline index                                                          into the L2 Tag Store. */
name|uint64_t
name|fsyn
range|:
literal|6
decl_stmt|;
comment|/**< When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the contents of this register contain the 6-bit                                                          syndrome for the hit set only.                                                          If (FSYN = 0), the SBE or DBE reported was for one of                                                          the "non-hit" sets at the failing index(FADR).                                                          NOTE: During a force-hit (L2T/L2D/L2T=1), the hit set                                                          is specified by the L2C_DBG[SET].                                                          If (FSYN != 0), the SBE or DBE reported was for the                                                          hit set at the failing index(FADR) and failing                                                          set(FSET).                                                          SW NOTE: To determine which "non-hit" set was in error,                                                          SW can use the L2C_DBG[L2T] debug feature to explicitly                                                          read the other sets at the failing index(FADR). When                                                          (FSYN !=0), then the FSET contains the failing hit-set.                                                          NOTE: A DED Error will always overwrite a SEC Error                                                          SYNDROME and FADR). */
name|uint64_t
name|ded_err
range|:
literal|1
decl_stmt|;
comment|/**< L2T Double Bit Error detected (DED)                                                          During every L2 Tag Probe, all 8 sets Tag's (at a                                                          given index) are checked for double bit errors(DBEs).                                                          This bit is set if ANY of the 8 sets contains a DBE.                                                          DBEs also generated an interrupt(if enabled). */
name|uint64_t
name|sec_err
range|:
literal|1
decl_stmt|;
comment|/**< L2T Single Bit Error corrected (SEC)                                                          During every L2 Tag Probe, all 8 sets Tag's (at a                                                          given index) are checked for single bit errors(SBEs).                                                          This bit is set if ANY of the 8 sets contains an SBE.                                                          SBEs are auto corrected in HW and generate an                                                          interrupt(if enabled). */
name|uint64_t
name|ded_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Double Error Detect(DED) Interrupt                                                          Enable bit. When set, allows interrupts to be                                                          reported on double bit (uncorrectable) errors from                                                          the L2 Tag Arrays. */
name|uint64_t
name|sec_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Single Error Correct(SEC) Interrupt                                                          Enable bit. When set, allows interrupts to be                                                          reported on single bit (correctable) errors from                                                          the L2 Tag Arrays. */
name|uint64_t
name|ecc_ena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Enable                                                          When set, enables 6-bit SEC/DED codeword for 23-bit                                                          L2 Tag Arrays [V,D,L,TAG[33:14]] */
else|#
directive|else
name|uint64_t
name|ecc_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sec_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ded_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sec_err
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ded_err
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fsyn
range|:
literal|6
decl_stmt|;
name|uint64_t
name|fadr
range|:
literal|7
decl_stmt|;
name|uint64_t
name|reserved_18_20
range|:
literal|3
decl_stmt|;
name|uint64_t
name|fset
range|:
literal|3
decl_stmt|;
name|uint64_t
name|lckerr
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lck_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lckerr2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lck_intena2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_28_63
range|:
literal|36
decl_stmt|;
endif|#
directive|endif
block|}
name|cn50xx
struct|;
struct|struct
name|cvmx_l2t_err_cn52xx
block|{
ifdef|#
directive|ifdef
name|__BIG_ENDIAN_BITFIELD
name|uint64_t
name|reserved_28_63
range|:
literal|36
decl_stmt|;
name|uint64_t
name|lck_intena2
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag Lock Error2 Interrupt Enable bit */
name|uint64_t
name|lckerr2
range|:
literal|1
decl_stmt|;
comment|/**< HW detected a case where a Rd/Wr Miss from PP#n                                                          could not find an available/unlocked set (for                                                          replacement).                                                          Most likely, this is a result of SW mixing SET                                                          PARTITIONING with ADDRESS LOCKING. If SW allows                                                          another PP to LOCKDOWN all SETs available to PP#n,                                                          then a Rd/Wr Miss from PP#n will be unable                                                          to determine a 'valid' replacement set (since LOCKED                                                          addresses should NEVER be replaced).                                                          If such an event occurs, the HW will select the smallest                                                          available SET(specified by UMSK'x)' as the replacement                                                          set, and the address is unlocked. */
name|uint64_t
name|lck_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag Lock Error Interrupt Enable bit */
name|uint64_t
name|lckerr
range|:
literal|1
decl_stmt|;
comment|/**< SW attempted to LOCK DOWN the last available set of                                                          the INDEX (which is ignored by HW - but reported to SW).                                                          The LDD(L1 load-miss) for the LOCK operation is completed                                                          successfully, however the address is NOT locked.                                                          NOTE: 'Available' sets takes the L2C_SPAR*[UMSK*]                                                          into account. For example, if diagnostic PPx has                                                          UMSKx defined to only use SETs [1:0], and SET1 had                                                          been previously LOCKED, then an attempt to LOCK the                                                          last available SET0 would result in a LCKERR. (This                                                          is to ensure that at least 1 SET at each INDEX is                                                          not LOCKED for general use by other PPs). */
name|uint64_t
name|fset
range|:
literal|3
decl_stmt|;
comment|/**< Failing L2 Tag Hit Set# (1-of-8)                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set and                                                          (FSYN != 0), the FSET specifies the failing hit-set.                                                          NOTE: During a force-hit (L2T/L2D/L2T=1), the hit-set                                                          is specified by the L2C_DBG[SET]. */
name|uint64_t
name|reserved_20_20
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fadr
range|:
literal|9
decl_stmt|;
comment|/**< Failing L2 Tag Address (9-bit Index)                                                          When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the FADR contains the lower 9bit cacheline index                                                          into the L2 Tag Store. */
name|uint64_t
name|fsyn
range|:
literal|6
decl_stmt|;
comment|/**< When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,                                                          the contents of this register contain the 6-bit                                                          syndrome for the hit set only.                                                          If (FSYN = 0), the SBE or DBE reported was for one of                                                          the "non-hit" sets at the failing index(FADR).                                                          NOTE: During a force-hit (L2T/L2D/L2T=1), the hit set                                                          is specified by the L2C_DBG[SET].                                                          If (FSYN != 0), the SBE or DBE reported was for the                                                          hit set at the failing index(FADR) and failing                                                          set(FSET).                                                          SW NOTE: To determine which "non-hit" set was in error,                                                          SW can use the L2C_DBG[L2T] debug feature to explicitly                                                          read the other sets at the failing index(FADR). When                                                          (FSYN !=0), then the FSET contains the failing hit-set.                                                          NOTE: A DED Error will always overwrite a SEC Error                                                          SYNDROME and FADR). */
name|uint64_t
name|ded_err
range|:
literal|1
decl_stmt|;
comment|/**< L2T Double Bit Error detected (DED)                                                          During every L2 Tag Probe, all 8 sets Tag's (at a                                                          given index) are checked for double bit errors(DBEs).                                                          This bit is set if ANY of the 8 sets contains a DBE.                                                          DBEs also generated an interrupt(if enabled). */
name|uint64_t
name|sec_err
range|:
literal|1
decl_stmt|;
comment|/**< L2T Single Bit Error corrected (SEC)                                                          During every L2 Tag Probe, all 8 sets Tag's (at a                                                          given index) are checked for single bit errors(SBEs).                                                          This bit is set if ANY of the 8 sets contains an SBE.                                                          SBEs are auto corrected in HW and generate an                                                          interrupt(if enabled). */
name|uint64_t
name|ded_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Double Error Detect(DED) Interrupt                                                          Enable bit. When set, allows interrupts to be                                                          reported on double bit (uncorrectable) errors from                                                          the L2 Tag Arrays. */
name|uint64_t
name|sec_intena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Single Error Correct(SEC) Interrupt                                                          Enable bit. When set, allows interrupts to be                                                          reported on single bit (correctable) errors from                                                          the L2 Tag Arrays. */
name|uint64_t
name|ecc_ena
range|:
literal|1
decl_stmt|;
comment|/**< L2 Tag ECC Enable                                                          When set, enables 6-bit SEC/DED codeword for 21-bit                                                          L2 Tag Arrays [V,D,L,TAG[33:16]] */
else|#
directive|else
name|uint64_t
name|ecc_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sec_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ded_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sec_err
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ded_err
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fsyn
range|:
literal|6
decl_stmt|;
name|uint64_t
name|fadr
range|:
literal|9
decl_stmt|;
name|uint64_t
name|reserved_20_20
range|:
literal|1
decl_stmt|;
name|uint64_t
name|fset
range|:
literal|3
decl_stmt|;
name|uint64_t
name|lckerr
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lck_intena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lckerr2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lck_intena2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_28_63
range|:
literal|36
decl_stmt|;
endif|#
directive|endif
block|}
name|cn52xx
struct|;
name|struct
name|cvmx_l2t_err_cn52xx
name|cn52xxp1
decl_stmt|;
name|struct
name|cvmx_l2t_err_s
name|cn56xx
decl_stmt|;
name|struct
name|cvmx_l2t_err_s
name|cn56xxp1
decl_stmt|;
name|struct
name|cvmx_l2t_err_s
name|cn58xx
decl_stmt|;
name|struct
name|cvmx_l2t_err_s
name|cn58xxp1
decl_stmt|;
block|}
union|;
end_union

begin_typedef
typedef|typedef
name|union
name|cvmx_l2t_err
name|cvmx_l2t_err_t
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

end_unit

