begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/***********************license start***************  * Copyright (c) 2003-2010  Cavium Networks (support@cavium.com). All rights  * reserved.  *  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:  *  *   * Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  *   * Redistributions in binary form must reproduce the above  *     copyright notice, this list of conditions and the following  *     disclaimer in the documentation and/or other materials provided  *     with the distribution.   *   * Neither the name of Cavium Networks nor the names of  *     its contributors may be used to endorse or promote products  *     derived from this software without specific prior written  *     permission.   * This Software, including technical data, may be subject to U.S. export  control  * laws, including the U.S. Export Administration Act and its  associated  * regulations, and may be subject to export or import  regulations in other  * countries.   * TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"  * AND WITH ALL FAULTS AND CAVIUM  NETWORKS MAKES NO PROMISES, REPRESENTATIONS OR  * WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO  * THE SOFTWARE, INCLUDING ITS CONDITION, ITS CONFORMITY TO ANY REPRESENTATION OR  * DESCRIPTION, OR THE EXISTENCE OF ANY LATENT OR PATENT DEFECTS, AND CAVIUM  * SPECIFICALLY DISCLAIMS ALL IMPLIED (IF ANY) WARRANTIES OF TITLE,  * MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF  * VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR  * CORRESPONDENCE TO DESCRIPTION. THE ENTIRE  RISK ARISING OUT OF USE OR  * PERFORMANCE OF THE SOFTWARE LIES WITH YOU.  ***********************license end**************************************/
end_comment

begin_comment
comment|/**  * cvmx-dbg-defs.h  *  * Configuration and status register (CSR) type definitions for  * Octeon dbg.  *  * This file is auto generated. Do not edit.  *  *<hr>$Revision$<hr>  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__CVMX_DBG_TYPEDEFS_H__
end_ifndef

begin_define
define|#
directive|define
name|__CVMX_DBG_TYPEDEFS_H__
end_define

begin_if
if|#
directive|if
name|CVMX_ENABLE_CSR_ADDRESS_CHECKING
end_if

begin_define
define|#
directive|define
name|CVMX_DBG_DATA
value|CVMX_DBG_DATA_FUNC()
end_define

begin_function
specifier|static
specifier|inline
name|uint64_t
name|CVMX_DBG_DATA_FUNC
parameter_list|(
name|void
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN3XXX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN50XX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN58XX
argument_list|)
operator|)
condition|)
name|cvmx_warn
argument_list|(
literal|"CVMX_DBG_DATA not supported on this chip\n"
argument_list|)
expr_stmt|;
return|return
name|CVMX_ADD_IO_SEG
argument_list|(
literal|0x00011F00000001E8ull
argument_list|)
return|;
block|}
end_function

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|CVMX_DBG_DATA
value|(CVMX_ADD_IO_SEG(0x00011F00000001E8ull))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/**  * cvmx_dbg_data  *  * DBG_DATA = Debug Data Register  *  * Value returned on the debug-data lines from the RSLs  */
end_comment

begin_union
union|union
name|cvmx_dbg_data
block|{
name|uint64_t
name|u64
decl_stmt|;
struct|struct
name|cvmx_dbg_data_s
block|{
if|#
directive|if
name|__BYTE_ORDER
operator|==
name|__BIG_ENDIAN
name|uint64_t
name|reserved_23_63
range|:
literal|41
decl_stmt|;
name|uint64_t
name|c_mul
range|:
literal|5
decl_stmt|;
comment|/**< C_MUL pins sampled at DCOK assertion */
name|uint64_t
name|dsel_ext
range|:
literal|1
decl_stmt|;
comment|/**< Allows changes in the external pins to set the                                                          debug select value. */
name|uint64_t
name|data
range|:
literal|17
decl_stmt|;
comment|/**< Value on the debug data lines. */
else|#
directive|else
name|uint64_t
name|data
range|:
literal|17
decl_stmt|;
name|uint64_t
name|dsel_ext
range|:
literal|1
decl_stmt|;
name|uint64_t
name|c_mul
range|:
literal|5
decl_stmt|;
name|uint64_t
name|reserved_23_63
range|:
literal|41
decl_stmt|;
endif|#
directive|endif
block|}
name|s
struct|;
struct|struct
name|cvmx_dbg_data_cn30xx
block|{
if|#
directive|if
name|__BYTE_ORDER
operator|==
name|__BIG_ENDIAN
name|uint64_t
name|reserved_31_63
range|:
literal|33
decl_stmt|;
name|uint64_t
name|pll_mul
range|:
literal|3
decl_stmt|;
comment|/**< pll_mul pins sampled at DCOK assertion */
name|uint64_t
name|reserved_23_27
range|:
literal|5
decl_stmt|;
name|uint64_t
name|c_mul
range|:
literal|5
decl_stmt|;
comment|/**< Core PLL multiplier sampled at DCOK assertion */
name|uint64_t
name|dsel_ext
range|:
literal|1
decl_stmt|;
comment|/**< Allows changes in the external pins to set the                                                          debug select value. */
name|uint64_t
name|data
range|:
literal|17
decl_stmt|;
comment|/**< Value on the debug data lines. */
else|#
directive|else
name|uint64_t
name|data
range|:
literal|17
decl_stmt|;
name|uint64_t
name|dsel_ext
range|:
literal|1
decl_stmt|;
name|uint64_t
name|c_mul
range|:
literal|5
decl_stmt|;
name|uint64_t
name|reserved_23_27
range|:
literal|5
decl_stmt|;
name|uint64_t
name|pll_mul
range|:
literal|3
decl_stmt|;
name|uint64_t
name|reserved_31_63
range|:
literal|33
decl_stmt|;
endif|#
directive|endif
block|}
name|cn30xx
struct|;
name|struct
name|cvmx_dbg_data_cn30xx
name|cn31xx
decl_stmt|;
struct|struct
name|cvmx_dbg_data_cn38xx
block|{
if|#
directive|if
name|__BYTE_ORDER
operator|==
name|__BIG_ENDIAN
name|uint64_t
name|reserved_29_63
range|:
literal|35
decl_stmt|;
name|uint64_t
name|d_mul
range|:
literal|4
decl_stmt|;
comment|/**< D_MUL pins sampled on DCOK assertion */
name|uint64_t
name|dclk_mul2
range|:
literal|1
decl_stmt|;
comment|/**< Should always be set for fast DDR-II operation */
name|uint64_t
name|cclk_div2
range|:
literal|1
decl_stmt|;
comment|/**< Should always be clear for fast core clock */
name|uint64_t
name|c_mul
range|:
literal|5
decl_stmt|;
comment|/**< C_MUL pins sampled at DCOK assertion */
name|uint64_t
name|dsel_ext
range|:
literal|1
decl_stmt|;
comment|/**< Allows changes in the external pins to set the                                                          debug select value. */
name|uint64_t
name|data
range|:
literal|17
decl_stmt|;
comment|/**< Value on the debug data lines. */
else|#
directive|else
name|uint64_t
name|data
range|:
literal|17
decl_stmt|;
name|uint64_t
name|dsel_ext
range|:
literal|1
decl_stmt|;
name|uint64_t
name|c_mul
range|:
literal|5
decl_stmt|;
name|uint64_t
name|cclk_div2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|dclk_mul2
range|:
literal|1
decl_stmt|;
name|uint64_t
name|d_mul
range|:
literal|4
decl_stmt|;
name|uint64_t
name|reserved_29_63
range|:
literal|35
decl_stmt|;
endif|#
directive|endif
block|}
name|cn38xx
struct|;
name|struct
name|cvmx_dbg_data_cn38xx
name|cn38xxp2
decl_stmt|;
name|struct
name|cvmx_dbg_data_cn30xx
name|cn50xx
decl_stmt|;
struct|struct
name|cvmx_dbg_data_cn58xx
block|{
if|#
directive|if
name|__BYTE_ORDER
operator|==
name|__BIG_ENDIAN
name|uint64_t
name|reserved_29_63
range|:
literal|35
decl_stmt|;
name|uint64_t
name|rem
range|:
literal|6
decl_stmt|;
comment|/**< Remaining debug_select pins sampled at DCOK */
name|uint64_t
name|c_mul
range|:
literal|5
decl_stmt|;
comment|/**< C_MUL pins sampled at DCOK assertion */
name|uint64_t
name|dsel_ext
range|:
literal|1
decl_stmt|;
comment|/**< Allows changes in the external pins to set the                                                          debug select value. */
name|uint64_t
name|data
range|:
literal|17
decl_stmt|;
comment|/**< Value on the debug data lines. */
else|#
directive|else
name|uint64_t
name|data
range|:
literal|17
decl_stmt|;
name|uint64_t
name|dsel_ext
range|:
literal|1
decl_stmt|;
name|uint64_t
name|c_mul
range|:
literal|5
decl_stmt|;
name|uint64_t
name|rem
range|:
literal|6
decl_stmt|;
name|uint64_t
name|reserved_29_63
range|:
literal|35
decl_stmt|;
endif|#
directive|endif
block|}
name|cn58xx
struct|;
name|struct
name|cvmx_dbg_data_cn58xx
name|cn58xxp1
decl_stmt|;
block|}
union|;
end_union

begin_typedef
typedef|typedef
name|union
name|cvmx_dbg_data
name|cvmx_dbg_data_t
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

end_unit

