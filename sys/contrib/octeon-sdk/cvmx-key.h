begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/***********************license start***************  *  Copyright (c) 2003-2008 Cavium Networks (support@cavium.com). All rights  *  reserved.  *  *  *  Redistribution and use in source and binary forms, with or without  *  modification, are permitted provided that the following conditions are  *  met:  *  *      * Redistributions of source code must retain the above copyright  *        notice, this list of conditions and the following disclaimer.  *  *      * Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials provided  *        with the distribution.  *  *      * Neither the name of Cavium Networks nor the names of  *        its contributors may be used to endorse or promote products  *        derived from this software without specific prior written  *        permission.  *  *  TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"  *  AND WITH ALL FAULTS AND CAVIUM NETWORKS MAKES NO PROMISES, REPRESENTATIONS  *  OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH  *  RESPECT TO THE SOFTWARE, INCLUDING ITS CONDITION, ITS CONFORMITY TO ANY  *  REPRESENTATION OR DESCRIPTION, OR THE EXISTENCE OF ANY LATENT OR PATENT  *  DEFECTS, AND CAVIUM SPECIFICALLY DISCLAIMS ALL IMPLIED (IF ANY) WARRANTIES  *  OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR  *  PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET  *  POSSESSION OR CORRESPONDENCE TO DESCRIPTION.  THE ENTIRE RISK ARISING OUT  *  OF USE OR PERFORMANCE OF THE SOFTWARE LIES WITH YOU.  *  *  *  For any questions regarding licensing please contact marketing@caviumnetworks.com  *  ***********************license end**************************************/
end_comment

begin_comment
comment|/**  * @file  *  * Interface to the on chip key memory. Key memory is  * 8k on chip that is inaccessible from off chip. It can  * also be cleared using an external hardware pin.  *  *<hr>$Revision: 41586 $<hr>  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__CVMX_KEY_H__
end_ifndef

begin_define
define|#
directive|define
name|__CVMX_KEY_H__
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
define|#
directive|define
name|CVMX_KEY_MEM_SIZE
value|8192
comment|/* Size in bytes */
comment|/**  * Read from KEY memory  *  * @param address Address (byte) in key memory to read  *                0<= address< CVMX_KEY_MEM_SIZE  * @return Value from key memory  */
specifier|static
specifier|inline
name|uint64_t
name|cvmx_key_read
parameter_list|(
name|uint64_t
name|address
parameter_list|)
block|{
name|cvmx_addr_t
name|ptr
decl_stmt|;
name|ptr
operator|.
name|u64
operator|=
literal|0
expr_stmt|;
name|ptr
operator|.
name|sio
operator|.
name|mem_region
operator|=
name|CVMX_IO_SEG
expr_stmt|;
name|ptr
operator|.
name|sio
operator|.
name|is_io
operator|=
literal|1
expr_stmt|;
name|ptr
operator|.
name|sio
operator|.
name|did
operator|=
name|CVMX_OCT_DID_KEY_RW
expr_stmt|;
name|ptr
operator|.
name|sio
operator|.
name|offset
operator|=
name|address
expr_stmt|;
return|return
name|cvmx_read_csr
argument_list|(
name|ptr
operator|.
name|u64
argument_list|)
return|;
block|}
comment|/**  * Write to KEY memory  *  * @param address Address (byte) in key memory to write  *                0<= address< CVMX_KEY_MEM_SIZE  * @param value   Value to write to key memory  */
specifier|static
specifier|inline
name|void
name|cvmx_key_write
parameter_list|(
name|uint64_t
name|address
parameter_list|,
name|uint64_t
name|value
parameter_list|)
block|{
name|cvmx_addr_t
name|ptr
decl_stmt|;
name|ptr
operator|.
name|u64
operator|=
literal|0
expr_stmt|;
name|ptr
operator|.
name|sio
operator|.
name|mem_region
operator|=
name|CVMX_IO_SEG
expr_stmt|;
name|ptr
operator|.
name|sio
operator|.
name|is_io
operator|=
literal|1
expr_stmt|;
name|ptr
operator|.
name|sio
operator|.
name|did
operator|=
name|CVMX_OCT_DID_KEY_RW
expr_stmt|;
name|ptr
operator|.
name|sio
operator|.
name|offset
operator|=
name|address
expr_stmt|;
name|cvmx_write_io
argument_list|(
name|ptr
operator|.
name|u64
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/* CSR typedefs have been moved to cvmx-csr-*.h */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  __CVMX_KEY_H__ */
end_comment

end_unit

