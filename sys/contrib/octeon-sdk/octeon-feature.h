begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/***********************license start***************  *  Copyright (c) 2003-2008 Cavium Networks (support@cavium.com). All rights  *  reserved.  *  *  *  Redistribution and use in source and binary forms, with or without  *  modification, are permitted provided that the following conditions are  *  met:  *  *      * Redistributions of source code must retain the above copyright  *        notice, this list of conditions and the following disclaimer.  *  *      * Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials provided  *        with the distribution.  *  *      * Neither the name of Cavium Networks nor the names of  *        its contributors may be used to endorse or promote products  *        derived from this software without specific prior written  *        permission.  *  *  TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"  *  AND WITH ALL FAULTS AND CAVIUM NETWORKS MAKES NO PROMISES, REPRESENTATIONS  *  OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH  *  RESPECT TO THE SOFTWARE, INCLUDING ITS CONDITION, ITS CONFORMITY TO ANY  *  REPRESENTATION OR DESCRIPTION, OR THE EXISTENCE OF ANY LATENT OR PATENT  *  DEFECTS, AND CAVIUM SPECIFICALLY DISCLAIMS ALL IMPLIED (IF ANY) WARRANTIES  *  OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR  *  PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET  *  POSSESSION OR CORRESPONDENCE TO DESCRIPTION.  THE ENTIRE RISK ARISING OUT  *  OF USE OR PERFORMANCE OF THE SOFTWARE LIES WITH YOU.  *  *  *  For any questions regarding licensing please contact marketing@caviumnetworks.com  *  ***********************license end**************************************/
end_comment

begin_comment
comment|/**  * @file  *  * File defining checks for different Octeon features.  *  *<hr>$Revision: 30468 $<hr>  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__OCTEON_FEATURE_H__
end_ifndef

begin_define
define|#
directive|define
name|__OCTEON_FEATURE_H__
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
typedef|typedef
enum|enum
block|{
name|OCTEON_FEATURE_SAAD
block|,
comment|/* Octeon models in the CN5XXX family and higher support atomic add instructions to memory (saa/saad) */
name|OCTEON_FEATURE_ZIP
block|,
comment|/* Does this Octeon support the ZIP offload engine? */
name|OCTEON_FEATURE_CRYPTO
block|,
comment|/* Does this Octeon support crypto acceleration using COP2? */
name|OCTEON_FEATURE_PCIE
block|,
comment|/* Does this Octeon support PCI express? */
name|OCTEON_FEATURE_KEY_MEMORY
block|,
comment|/* Some Octeon models support internal memory for storing cryptographic keys */
name|OCTEON_FEATURE_LED_CONTROLLER
block|,
comment|/* Octeon has a LED controller for banks of external LEDs */
name|OCTEON_FEATURE_TRA
block|,
comment|/* Octeon has a trace buffer */
name|OCTEON_FEATURE_MGMT_PORT
block|,
comment|/* Octeon has a management port */
name|OCTEON_FEATURE_RAID
block|,
comment|/* Octeon has a raid unit */
name|OCTEON_FEATURE_USB
block|,
comment|/* Octeon has a builtin USB */
name|OCTEON_FEATURE_NO_WPTR
block|,
comment|/* Octeon IPD can run without using work queue entries */
name|OCTEON_FEATURE_DFA
block|,
comment|/* Octeon has DFA state machines */
name|OCTEON_FEATURE_MDIO_CLAUSE_45
block|,
comment|/* Octeon MDIO block supports clause 45 transactions for 10 Gig support */
block|}
name|octeon_feature_t
typedef|;
comment|/**  * Determine if the current Octeon supports a specific feature. These  * checks have been optimized to be fairly quick, but they should still  * be kept out of fast path code.  *  * @param feature Feature to check for. This should always be a constant so the  *                compiler can remove the switch statement through optimization.  *  * @return Non zero if the feature exists. Zero if the feature does not  *         exist.  */
specifier|static
specifier|inline
name|int
name|octeon_has_feature
parameter_list|(
name|octeon_feature_t
name|feature
parameter_list|)
block|{
switch|switch
condition|(
name|feature
condition|)
block|{
case|case
name|OCTEON_FEATURE_SAAD
case|:
return|return
operator|!
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN3XXX
argument_list|)
return|;
case|case
name|OCTEON_FEATURE_ZIP
case|:
if|if
condition|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN30XX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN50XX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN52XX
argument_list|)
condition|)
return|return
literal|0
return|;
elseif|else
if|if
condition|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN38XX_PASS1
argument_list|)
condition|)
return|return
literal|1
return|;
else|else
return|return
operator|(
operator|!
name|cvmx_fuse_read
argument_list|(
literal|121
argument_list|)
operator|)
return|;
case|case
name|OCTEON_FEATURE_CRYPTO
case|:
return|return
operator|(
operator|!
name|cvmx_fuse_read
argument_list|(
literal|90
argument_list|)
operator|)
return|;
case|case
name|OCTEON_FEATURE_PCIE
case|:
return|return
operator|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN56XX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN52XX
argument_list|)
operator|)
return|;
case|case
name|OCTEON_FEATURE_KEY_MEMORY
case|:
case|case
name|OCTEON_FEATURE_LED_CONTROLLER
case|:
return|return
operator|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN38XX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN58XX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN56XX
argument_list|)
operator|)
return|;
case|case
name|OCTEON_FEATURE_TRA
case|:
return|return
operator|!
operator|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN30XX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN50XX
argument_list|)
operator|)
return|;
case|case
name|OCTEON_FEATURE_MGMT_PORT
case|:
return|return
operator|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN56XX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN52XX
argument_list|)
operator|)
return|;
case|case
name|OCTEON_FEATURE_RAID
case|:
return|return
operator|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN56XX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN52XX
argument_list|)
operator|)
return|;
case|case
name|OCTEON_FEATURE_USB
case|:
return|return
operator|!
operator|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN38XX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN58XX
argument_list|)
operator|)
return|;
case|case
name|OCTEON_FEATURE_NO_WPTR
case|:
return|return
operator|(
operator|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN56XX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN52XX
argument_list|)
operator|)
operator|&&
operator|!
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN56XX_PASS1_X
argument_list|)
operator|&&
operator|!
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN52XX_PASS1_X
argument_list|)
operator|)
return|;
case|case
name|OCTEON_FEATURE_DFA
case|:
if|if
condition|(
operator|!
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN38XX
argument_list|)
operator|&&
operator|!
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN31XX
argument_list|)
operator|&&
operator|!
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN58XX
argument_list|)
condition|)
return|return
literal|0
return|;
elseif|else
if|if
condition|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN3020
argument_list|)
condition|)
return|return
literal|0
return|;
elseif|else
if|if
condition|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN38XX_PASS1
argument_list|)
condition|)
return|return
literal|1
return|;
else|else
return|return
operator|(
operator|!
name|cvmx_fuse_read
argument_list|(
literal|120
argument_list|)
operator|)
return|;
case|case
name|OCTEON_FEATURE_MDIO_CLAUSE_45
case|:
return|return
operator|(
operator|!
operator|(
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN3XXX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN58XX
argument_list|)
operator|||
name|OCTEON_IS_MODEL
argument_list|(
name|OCTEON_CN50XX
argument_list|)
operator|)
operator|)
return|;
block|}
return|return
literal|0
return|;
block|}
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __OCTEON_FEATURE_H__ */
end_comment

end_unit

