begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/***********************license start***************  * Copyright (c) 2003-2010  Cavium Networks (support@cavium.com). All rights  * reserved.  *  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:  *  *   * Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  *   * Redistributions in binary form must reproduce the above  *     copyright notice, this list of conditions and the following  *     disclaimer in the documentation and/or other materials provided  *     with the distribution.   *   * Neither the name of Cavium Networks nor the names of  *     its contributors may be used to endorse or promote products  *     derived from this software without specific prior written  *     permission.   * This Software, including technical data, may be subject to U.S. export  control  * laws, including the U.S. Export Administration Act and its  associated  * regulations, and may be subject to export or import  regulations in other  * countries.   * TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"  * AND WITH ALL FAULTS AND CAVIUM  NETWORKS MAKES NO PROMISES, REPRESENTATIONS OR  * WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO  * THE SOFTWARE, INCLUDING ITS CONDITION, ITS CONFORMITY TO ANY REPRESENTATION OR  * DESCRIPTION, OR THE EXISTENCE OF ANY LATENT OR PATENT DEFECTS, AND CAVIUM  * SPECIFICALLY DISCLAIMS ALL IMPLIED (IF ANY) WARRANTIES OF TITLE,  * MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF  * VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR  * CORRESPONDENCE TO DESCRIPTION. THE ENTIRE  RISK ARISING OUT OF USE OR  * PERFORMANCE OF THE SOFTWARE LIES WITH YOU.  ***********************license end**************************************/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__CVMX_SHMEM_H__
end_ifndef

begin_define
define|#
directive|define
name|__CVMX_SHMEM_H__
end_define

begin_comment
comment|/**  * @file  *  * cvmx-shmem provides APIs for setting up shared memory between Linux  * and simple executive applications.  *  *<hr>$Revision: 41586 $<hr>  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
include|#
directive|include
file|"cvmx-spinlock.h"
define|#
directive|define
name|CVMX_SHMEM_NUM_DSCPTR
value|8
define|#
directive|define
name|CVMX_SHMEM_DSCPTR_NAME
value|"SMDR"
define|#
directive|define
name|CVMX_SHMEM_O_RDONLY
value|0x00
define|#
directive|define
name|CVMX_SHMEM_O_WRONLY
value|0x01
define|#
directive|define
name|CVMX_SHMEM_O_RDWR
value|0x02
define|#
directive|define
name|CVMX_SHMEM_O_CREAT
value|0x04
define|#
directive|define
name|CVMX_SHMEM_MAP_PROT_READ
value|0x01
define|#
directive|define
name|CVMX_SHMEM_MAP_PROT_WRITE
value|0x02
define|#
directive|define
name|CVMX_SHMEM_MAP_EXEC
value|0x04
define|#
directive|define
name|CVMX_SHMEM_OWNER_NONE
value|0xff
define|#
directive|define
name|CVMX_SHMEM_VADDR64_START
value|0x500000000ULL
define|#
directive|define
name|CVMX_SHMEM_VADDR64_END
value|0x600000000ULL
define|#
directive|define
name|CVMX_SHMEM_VADDR32_START
value|0x10000000
define|#
directive|define
name|CVMX_SHMEM_VADDR32_END
value|0x18000000
struct|struct
name|cvmx_shmem_dscptr
block|{
name|cvmx_spinlock_t
name|lock
decl_stmt|;
name|uint64_t
name|owner
range|:
literal|8
decl_stmt|;
name|uint64_t
name|is_named_block
range|:
literal|1
decl_stmt|;
name|uint64_t
name|p_wronly
range|:
literal|1
decl_stmt|;
name|uint64_t
name|p_rdwr
range|:
literal|1
decl_stmt|;
name|int32_t
name|use_count
decl_stmt|;
comment|/* must use atomic operation to maintain count */
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|void
modifier|*
name|vaddr
decl_stmt|;
name|uint64_t
name|paddr
decl_stmt|;
name|uint32_t
name|size
decl_stmt|;
name|uint64_t
name|alignment
decl_stmt|;
block|}
struct|;
struct|struct
name|cvmx_shmem_smdr
block|{
name|cvmx_spinlock_t
name|lock
decl_stmt|;
name|struct
name|cvmx_shmem_dscptr
name|shmd
index|[
name|CVMX_SHMEM_NUM_DSCPTR
index|]
decl_stmt|;
name|void
modifier|*
name|break64
decl_stmt|;
comment|/* Keep track of unused 64 bit virtual address space */
block|}
struct|;
name|struct
name|cvmx_shmem_smdr
modifier|*
name|cvmx_shmem_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
comment|/**  *  Create a piece memory out of named block  *  *  @param name Named block name  *  @param flag create flag  */
name|struct
name|cvmx_shmem_dscptr
modifier|*
name|cvmx_shmem_named_block_open
parameter_list|(
name|char
modifier|*
name|name
parameter_list|,
name|uint32_t
name|size
parameter_list|,
name|int
name|oflag
parameter_list|)
function_decl|;
comment|/**  *  Update TLB mapping based on the descriptor  */
name|void
modifier|*
name|cvmx_shmem_map
parameter_list|(
name|struct
name|cvmx_shmem_dscptr
modifier|*
name|desc
parameter_list|,
name|int
name|pflag
parameter_list|)
function_decl|;
comment|/**  *  Remove the TLB mapping created for the descriptor  */
name|void
name|cvmx_shmem_unmap
parameter_list|(
name|struct
name|cvmx_shmem_dscptr
modifier|*
name|desc
parameter_list|)
function_decl|;
comment|/**  *  Close the share memory,  *  *  @Param remove  Remove the named block if it is created by the application  */
name|int
name|cvmx_shmem_close
parameter_list|(
name|struct
name|cvmx_shmem_dscptr
modifier|*
name|desc
parameter_list|,
name|int
name|remove
parameter_list|)
function_decl|;
comment|/**  * Debug function, dump all SMDR descriptors  */
name|void
name|cvmx_shmem_show
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

