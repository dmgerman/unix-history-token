begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2008-2012 Freescale Semiconductor Inc.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *     * Redistributions of source code must retain the above copyright  *       notice, this list of conditions and the following disclaimer.  *     * Redistributions in binary form must reproduce the above copyright  *       notice, this list of conditions and the following disclaimer in the  *       documentation and/or other materials provided with the distribution.  *     * Neither the name of Freescale Semiconductor nor the  *       names of its contributors may be used to endorse or promote products  *       derived from this software without specific prior written permission.  *  *  * ALTERNATIVELY, this software may be distributed under the terms of the  * GNU General Public License ("GPL") as published by the Free Software  * Foundation, either version 2 of that License or (at your option) any  * later version.  *  * THIS SOFTWARE IS PROVIDED BY Freescale Semiconductor ``AS IS'' AND ANY  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED. IN NO EVENT SHALL Freescale Semiconductor BE LIABLE FOR ANY  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__FSL_FMAN_PRS_H
end_ifndef

begin_define
define|#
directive|define
name|__FSL_FMAN_PRS_H
end_define

begin_include
include|#
directive|include
file|"common/general.h"
end_include

begin_define
define|#
directive|define
name|FM_PCD_EX_PRS_DOUBLE_ECC
value|0x02000000
end_define

begin_define
define|#
directive|define
name|FM_PCD_EX_PRS_SINGLE_ECC
value|0x01000000
end_define

begin_define
define|#
directive|define
name|FM_PCD_PRS_PPSC_ALL_PORTS
value|0xffff0000
end_define

begin_define
define|#
directive|define
name|FM_PCD_PRS_RPIMAC_EN
value|0x00000001
end_define

begin_define
define|#
directive|define
name|FM_PCD_PRS_PORT_IDLE_STS
value|0xffff0000
end_define

begin_define
define|#
directive|define
name|FM_PCD_PRS_SINGLE_ECC
value|0x00004000
end_define

begin_define
define|#
directive|define
name|FM_PCD_PRS_DOUBLE_ECC
value|0x00004000
end_define

begin_define
define|#
directive|define
name|PRS_MAX_CYCLE_LIMIT
value|8191
end_define

begin_define
define|#
directive|define
name|DEFAULT_MAX_PRS_CYC_LIM
value|0
end_define

begin_struct
struct|struct
name|fman_prs_regs
block|{
name|uint32_t
name|fmpr_rpclim
decl_stmt|;
name|uint32_t
name|fmpr_rpimac
decl_stmt|;
name|uint32_t
name|pmeec
decl_stmt|;
name|uint32_t
name|res00c
index|[
literal|5
index|]
decl_stmt|;
name|uint32_t
name|fmpr_pevr
decl_stmt|;
name|uint32_t
name|fmpr_pever
decl_stmt|;
name|uint32_t
name|res028
decl_stmt|;
name|uint32_t
name|fmpr_perr
decl_stmt|;
name|uint32_t
name|fmpr_perer
decl_stmt|;
name|uint32_t
name|res034
decl_stmt|;
name|uint32_t
name|res038
index|[
literal|10
index|]
decl_stmt|;
name|uint32_t
name|fmpr_ppsc
decl_stmt|;
name|uint32_t
name|res064
decl_stmt|;
name|uint32_t
name|fmpr_pds
decl_stmt|;
name|uint32_t
name|fmpr_l2rrs
decl_stmt|;
name|uint32_t
name|fmpr_l3rrs
decl_stmt|;
name|uint32_t
name|fmpr_l4rrs
decl_stmt|;
name|uint32_t
name|fmpr_srrs
decl_stmt|;
name|uint32_t
name|fmpr_l2rres
decl_stmt|;
name|uint32_t
name|fmpr_l3rres
decl_stmt|;
name|uint32_t
name|fmpr_l4rres
decl_stmt|;
name|uint32_t
name|fmpr_srres
decl_stmt|;
name|uint32_t
name|fmpr_spcs
decl_stmt|;
name|uint32_t
name|fmpr_spscs
decl_stmt|;
name|uint32_t
name|fmpr_hxscs
decl_stmt|;
name|uint32_t
name|fmpr_mrcs
decl_stmt|;
name|uint32_t
name|fmpr_mwcs
decl_stmt|;
name|uint32_t
name|fmpr_mrscs
decl_stmt|;
name|uint32_t
name|fmpr_mwscs
decl_stmt|;
name|uint32_t
name|fmpr_fcscs
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|fman_prs_cfg
block|{
name|uint32_t
name|port_id_stat
decl_stmt|;
name|uint16_t
name|max_prs_cyc_lim
decl_stmt|;
name|uint32_t
name|prs_exceptions
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|uint32_t
name|fman_prs_get_err_event
parameter_list|(
name|struct
name|fman_prs_regs
modifier|*
name|regs
parameter_list|,
name|uint32_t
name|ev_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|fman_prs_get_err_ev_mask
parameter_list|(
name|struct
name|fman_prs_regs
modifier|*
name|regs
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fman_prs_ack_err_event
parameter_list|(
name|struct
name|fman_prs_regs
modifier|*
name|regs
parameter_list|,
name|uint32_t
name|event
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|fman_prs_get_expt_event
parameter_list|(
name|struct
name|fman_prs_regs
modifier|*
name|regs
parameter_list|,
name|uint32_t
name|ev_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|fman_prs_get_expt_ev_mask
parameter_list|(
name|struct
name|fman_prs_regs
modifier|*
name|regs
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fman_prs_ack_expt_event
parameter_list|(
name|struct
name|fman_prs_regs
modifier|*
name|regs
parameter_list|,
name|uint32_t
name|event
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fman_prs_defconfig
parameter_list|(
name|struct
name|fman_prs_cfg
modifier|*
name|cfg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fman_prs_init
parameter_list|(
name|struct
name|fman_prs_regs
modifier|*
name|regs
parameter_list|,
name|struct
name|fman_prs_cfg
modifier|*
name|cfg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fman_prs_enable
parameter_list|(
name|struct
name|fman_prs_regs
modifier|*
name|regs
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fman_prs_disable
parameter_list|(
name|struct
name|fman_prs_regs
modifier|*
name|regs
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fman_prs_is_enabled
parameter_list|(
name|struct
name|fman_prs_regs
modifier|*
name|regs
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fman_prs_set_stst_port_msk
parameter_list|(
name|struct
name|fman_prs_regs
modifier|*
name|regs
parameter_list|,
name|uint32_t
name|pid_msk
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fman_prs_set_stst
parameter_list|(
name|struct
name|fman_prs_regs
modifier|*
name|regs
parameter_list|,
name|bool
name|enable
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __FSL_FMAN_PRS_H */
end_comment

end_unit

