begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Copyright (c) 2008-2011 Freescale Semiconductor, Inc.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *     * Redistributions of source code must retain the above copyright  *       notice, this list of conditions and the following disclaimer.  *     * Redistributions in binary form must reproduce the above copyright  *       notice, this list of conditions and the following disclaimer in the  *       documentation and/or other materials provided with the distribution.  *     * Neither the name of Freescale Semiconductor nor the  *       names of its contributors may be used to endorse or promote products  *       derived from this software without specific prior written permission.  *  *  * ALTERNATIVELY, this software may be distributed under the terms of the  * GNU General Public License ("GPL") as published by the Free Software  * Foundation, either version 2 of that License or (at your option) any  * later version.  *  * THIS SOFTWARE IS PROVIDED BY Freescale Semiconductor ``AS IS'' AND ANY  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED. IN NO EVENT SHALL Freescale Semiconductor BE LIABLE FOR ANY  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__FM_HC_H
end_ifndef

begin_define
define|#
directive|define
name|__FM_HC_H
end_define

begin_include
include|#
directive|include
file|"std_ext.h"
end_include

begin_include
include|#
directive|include
file|"error_ext.h"
end_include

begin_define
define|#
directive|define
name|__ERR_MODULE__
value|MODULE_FM_PCD
end_define

begin_typedef
typedef|typedef
struct|struct
name|t_FmHcParams
block|{
name|t_Handle
name|h_Fm
decl_stmt|;
name|t_Handle
name|h_FmPcd
decl_stmt|;
name|t_FmPcdHcParams
name|params
decl_stmt|;
block|}
name|t_FmHcParams
typedef|;
end_typedef

begin_function_decl
name|t_Handle
name|FmHcConfigAndInit
parameter_list|(
name|t_FmHcParams
modifier|*
name|p_FmHcParams
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|FmHcFree
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcDumpRegs
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|FmHcTxConf
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_DpaaFD
modifier|*
name|p_Fd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Handle
name|FmHcPcdKgSetScheme
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_FmPcdKgSchemeParams
modifier|*
name|p_Scheme
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdKgDeleteScheme
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_Scheme
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdCcCapwapTimeoutReassm
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_FmPcdCcCapwapReassmTimeoutParams
modifier|*
name|p_CcCapwapReassmTimeoutParams
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdKgSetClsPlan
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_FmPcdKgInterModuleClsPlanSet
modifier|*
name|p_Set
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdKgDeleteClsPlan
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|uint8_t
name|clsPlanGrpId
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdKgSetSchemeCounter
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_Scheme
parameter_list|,
name|uint32_t
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|FmHcPcdKgGetSchemeCounter
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_Scheme
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdCcModifyTreeNextEngine
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_CcTree
parameter_list|,
name|uint8_t
name|grpId
parameter_list|,
name|uint8_t
name|index
parameter_list|,
name|t_FmPcdCcNextEngineParams
modifier|*
name|p_FmPcdCcNextEngineParams
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdCcModifyNodeNextEngine
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_CcNode
parameter_list|,
name|uint8_t
name|keyIndex
parameter_list|,
name|t_FmPcdCcNextEngineParams
modifier|*
name|p_FmPcdCcNextEngineParams
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdCcModifyNodeMissNextEngine
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_CcNode
parameter_list|,
name|t_FmPcdCcNextEngineParams
modifier|*
name|p_FmPcdCcNextEngineParams
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdCcRemoveKey
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_CcNode
parameter_list|,
name|uint8_t
name|keyIndex
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdCcAddKey
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_CcNode
parameter_list|,
name|uint8_t
name|keyIndex
parameter_list|,
name|uint8_t
name|keySize
parameter_list|,
name|t_FmPcdCcKeyParams
modifier|*
name|p_KeyParams
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdCcModifyKeyAndNextEngine
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_CcNode
parameter_list|,
name|uint8_t
name|keyIndex
parameter_list|,
name|uint8_t
name|keySize
parameter_list|,
name|t_FmPcdCcKeyParams
modifier|*
name|p_KeyParams
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdCcModifyKey
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_CcNode
parameter_list|,
name|uint8_t
name|keyIndex
parameter_list|,
name|uint8_t
name|keySize
parameter_list|,
name|uint8_t
modifier|*
name|p_Key
parameter_list|,
name|uint8_t
modifier|*
name|p_Mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Handle
name|FmHcPcdPlcrSetProfile
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_FmPcdPlcrProfileParams
modifier|*
name|p_Profile
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdPlcrDeleteProfile
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_Profile
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdPlcrSetProfileCounter
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_Profile
parameter_list|,
name|e_FmPcdPlcrProfileCounters
name|counter
parameter_list|,
name|uint32_t
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|FmHcPcdPlcrGetProfileCounter
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_Profile
parameter_list|,
name|e_FmPcdPlcrProfileCounters
name|counter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcKgWriteSp
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|uint8_t
name|hardwarePortId
parameter_list|,
name|uint32_t
name|spReg
parameter_list|,
name|bool
name|add
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcKgWriteCpp
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|uint8_t
name|hardwarePortId
parameter_list|,
name|uint32_t
name|cppReg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdKgCcGetSetParams
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|t_Handle
name|h_Scheme
parameter_list|,
name|uint32_t
name|requiredAction
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmHcPcdPlcrCcGetSetParams
parameter_list|(
name|t_Handle
name|h_FmHc
parameter_list|,
name|uint16_t
name|absoluteProfileId
parameter_list|,
name|uint32_t
name|requiredAction
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __FM_HC_H */
end_comment

end_unit

