begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2008-2015 Freescale Semiconductor Inc.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *     * Redistributions of source code must retain the above copyright  *       notice, this list of conditions and the following disclaimer.  *     * Redistributions in binary form must reproduce the above copyright  *       notice, this list of conditions and the following disclaimer in the  *       documentation and/or other materials provided with the distribution.  *     * Neither the name of Freescale Semiconductor nor the  *       names of its contributors may be used to endorse or promote products  *       derived from this software without specific prior written permission.  *  *  * ALTERNATIVELY, this software may be distributed under the terms of the  * GNU General Public License ("GPL") as published by the Free Software  * Foundation, either version 2 of that License or (at your option) any  * later version.  *  * THIS SOFTWARE IS PROVIDED BY Freescale Semiconductor ``AS IS'' AND ANY  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED. IN NO EVENT SHALL Freescale Semiconductor BE LIABLE FOR ANY  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_comment
comment|/******************************************************************************  @File          fm_macsec.h   @Description   FM MACSEC internal structures and definitions. */
end_comment

begin_comment
comment|/***************************************************************************/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__FM_MACSEC_H
end_ifndef

begin_define
define|#
directive|define
name|__FM_MACSEC_H
end_define

begin_include
include|#
directive|include
file|"error_ext.h"
end_include

begin_include
include|#
directive|include
file|"std_ext.h"
end_include

begin_include
include|#
directive|include
file|"fm_macsec_ext.h"
end_include

begin_include
include|#
directive|include
file|"fm_common.h"
end_include

begin_define
define|#
directive|define
name|__ERR_MODULE__
value|MODULE_FM_MACSEC
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_Init
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_Free
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_ConfigUnknownSciFrameTreatment
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|e_FmMacsecUnknownSciFrameTreatment
name|treatMode
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_ConfigInvalidTagsFrameTreatment
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|bool
name|deliverUncontrolled
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_ConfigEncryptWithNoChangedTextFrameTreatment
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|bool
name|discardUncontrolled
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_ConfigChangedTextWithNoEncryptFrameTreatment
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|bool
name|deliverUncontrolled
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_ConfigUntagFrameTreatment
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|e_FmMacsecUntagFrameTreatment
name|treatMode
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_ConfigOnlyScbIsSetFrameTreatment
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|bool
name|deliverUncontrolled
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_ConfigPnExhaustionThreshold
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
name|pnExhThr
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_ConfigKeysUnreadable
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_ConfigSectagWithoutSCI
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_ConfigException
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|e_FmMacsecExceptions
name|exception
parameter_list|,
name|bool
name|enable
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_GetRevision
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
modifier|*
name|p_MacsecRevision
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_Enable
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_Disable
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|)
function_decl|;
name|t_Error
function_decl|(
modifier|*
name|f_FM_MACSEC_SetException
function_decl|)
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|e_FmMacsecExceptions
name|exception
parameter_list|,
name|bool
name|enable
parameter_list|)
function_decl|;
block|}
name|t_FmMacsecControllerDriver
typedef|;
end_typedef

begin_function_decl
name|t_Handle
name|FM_MACSEC_GUEST_Config
parameter_list|(
name|t_FmMacsecParams
modifier|*
name|p_FmMacsecParam
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Handle
name|FM_MACSEC_MASTER_Config
parameter_list|(
name|t_FmMacsecParams
modifier|*
name|p_FmMacsecParams
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/***********************************************************************/
end_comment

begin_comment
comment|/*  MACSEC internal routines                                              */
end_comment

begin_comment
comment|/***********************************************************************/
end_comment

begin_comment
comment|/**************************************************************************/
end_comment

begin_comment
comment|/**   @Group         FM_MACSEC_InterModule_grp FM MACSEC Inter-Module Unit   @Description   FM MACSEC Inter Module functions -                 These are not User API routines but routines that may be called                 from other modules. This will be the case in a single core environment,                 where instead of using the XX messaging mechanism, the routines may be                 called from other modules. In a multicore environment, the other modules may                 be run by other cores and therefore these routines may not be called directly.   @{ */
end_comment

begin_comment
comment|/***************************************************************************/
end_comment

begin_define
define|#
directive|define
name|MAX_NUM_OF_SA_PER_SC
value|4
end_define

begin_typedef
typedef|typedef
enum|enum
block|{
name|e_SC_RX
init|=
literal|0
block|,
name|e_SC_TX
block|}
name|e_ScType
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|e_SC_SA_A
init|=
literal|0
block|,
name|e_SC_SA_B
block|,
name|e_SC_SA_C
block|,
name|e_SC_SA_D
block|}
name|e_ScSaId
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|uint32_t
name|scId
decl_stmt|;
name|macsecSCI_t
name|sci
decl_stmt|;
name|bool
name|replayProtect
decl_stmt|;
name|uint32_t
name|replayWindow
decl_stmt|;
name|e_FmMacsecValidFrameBehavior
name|validateFrames
decl_stmt|;
name|uint16_t
name|confidentialityOffset
decl_stmt|;
name|e_FmMacsecSecYCipherSuite
name|cipherSuite
decl_stmt|;
block|}
name|t_RxScParams
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|uint32_t
name|scId
decl_stmt|;
name|macsecSCI_t
name|sci
decl_stmt|;
name|bool
name|protectFrames
decl_stmt|;
name|e_FmMacsecSciInsertionMode
name|sciInsertionMode
decl_stmt|;
name|bool
name|confidentialityEnable
decl_stmt|;
name|uint16_t
name|confidentialityOffset
decl_stmt|;
name|e_FmMacsecSecYCipherSuite
name|cipherSuite
decl_stmt|;
block|}
name|t_TxScParams
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|e_FmMacsecGlobalExceptions
block|{
name|e_FM_MACSEC_EX_TX_SC
block|,
comment|/**< Tx Sc 0 frame discarded error. */
name|e_FM_MACSEC_EX_ECC
comment|/**< MACSEC memory ECC multiple-bit error. */
block|}
name|e_FmMacsecGlobalExceptions
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|e_FmMacsecGlobalEvents
block|{
name|e_FM_MACSEC_EV_TX_SC_NEXT_PN
comment|/**< Tx Sc 0 Next Pn exhaustion threshold reached. */
block|}
name|e_FmMacsecGlobalEvents
typedef|;
end_typedef

begin_comment
comment|/**************************************************************************/
end_comment

begin_comment
comment|/**  @Description   Enum for inter-module interrupts registration */
end_comment

begin_comment
comment|/***************************************************************************/
end_comment

begin_typedef
typedef|typedef
enum|enum
name|e_FmMacsecEventModules
block|{
name|e_FM_MACSEC_MOD_SC_TX
block|,
name|e_FM_MACSEC_MOD_DUMMY_LAST
block|}
name|e_FmMacsecEventModules
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|e_FmMacsecInterModuleEvent
block|{
name|e_FM_MACSEC_EV_SC_TX
block|,
name|e_FM_MACSEC_EV_ERR_SC_TX
block|,
name|e_FM_MACSEC_EV_DUMMY_LAST
block|}
name|e_FmMacsecInterModuleEvent
typedef|;
end_typedef

begin_define
define|#
directive|define
name|NUM_OF_INTER_MODULE_EVENTS
value|(NUM_OF_TX_SC * 2)
end_define

begin_define
define|#
directive|define
name|GET_MACSEC_MODULE_EVENT
parameter_list|(
name|mod
parameter_list|,
name|id
parameter_list|,
name|intrType
parameter_list|,
name|event
parameter_list|)
define|\
value|switch(mod){                                          \         case e_FM_MACSEC_MOD_SC_TX:                       \              event = (intrType == e_FM_INTR_TYPE_ERR) ?   \                         e_FM_MACSEC_EV_ERR_SC_TX:         \                         e_FM_MACSEC_EV_SC_TX;             \              event += (uint8_t)(2 * id);break;            \             break;                                        \         default:event = e_FM_MACSEC_EV_DUMMY_LAST;        \         break;}
end_define

begin_function_decl
name|void
name|FmMacsecRegisterIntr
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|e_FmMacsecEventModules
name|module
parameter_list|,
name|uint8_t
name|modId
parameter_list|,
name|e_FmIntrType
name|intrType
parameter_list|,
name|void
function_decl|(
modifier|*
name|f_Isr
function_decl|)
parameter_list|(
name|t_Handle
name|h_Arg
parameter_list|,
name|uint32_t
name|id
parameter_list|)
parameter_list|,
name|t_Handle
name|h_Arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|FmMacsecUnregisterIntr
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|e_FmMacsecEventModules
name|module
parameter_list|,
name|uint8_t
name|modId
parameter_list|,
name|e_FmIntrType
name|intrType
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecAllocScs
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|e_ScType
name|type
parameter_list|,
name|bool
name|isPtp
parameter_list|,
name|uint32_t
name|numOfScs
parameter_list|,
name|uint32_t
modifier|*
name|p_ScIds
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecFreeScs
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|e_ScType
name|type
parameter_list|,
name|uint32_t
name|numOfScs
parameter_list|,
name|uint32_t
modifier|*
name|p_ScIds
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecCreateRxSc
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|t_RxScParams
modifier|*
name|p_RxScParams
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecDeleteRxSc
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
name|scId
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecCreateTxSc
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|t_TxScParams
modifier|*
name|p_RxScParams
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecDeleteTxSc
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
name|scId
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecCreateRxSa
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
name|scId
parameter_list|,
name|e_ScSaId
name|saId
parameter_list|,
name|macsecAN_t
name|an
parameter_list|,
name|uint32_t
name|lowestPn
parameter_list|,
name|macsecSAKey_t
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecCreateTxSa
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
name|scId
parameter_list|,
name|e_ScSaId
name|saId
parameter_list|,
name|macsecSAKey_t
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecDeleteRxSa
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
name|scId
parameter_list|,
name|e_ScSaId
name|saId
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecDeleteTxSa
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
name|scId
parameter_list|,
name|e_ScSaId
name|saId
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecRxSaSetReceive
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
name|scId
parameter_list|,
name|e_ScSaId
name|saId
parameter_list|,
name|bool
name|enableReceive
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecRxSaUpdateNextPn
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
name|scId
parameter_list|,
name|e_ScSaId
name|saId
parameter_list|,
name|uint32_t
name|updtNextPN
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecRxSaUpdateLowestPn
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
name|scId
parameter_list|,
name|e_ScSaId
name|saId
parameter_list|,
name|uint32_t
name|updtLowestPN
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecTxSaSetActive
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
name|scId
parameter_list|,
name|e_ScSaId
name|saId
parameter_list|,
name|macsecAN_t
name|an
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecTxSaGetActive
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|uint32_t
name|scId
parameter_list|,
name|macsecAN_t
modifier|*
name|p_An
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecSetPTP
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|bool
name|enable
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecSetException
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|e_FmMacsecGlobalExceptions
name|exception
parameter_list|,
name|uint32_t
name|scId
parameter_list|,
name|bool
name|enable
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|t_Error
name|FmMacsecSetEvent
parameter_list|(
name|t_Handle
name|h_FmMacsec
parameter_list|,
name|e_FmMacsecGlobalEvents
name|event
parameter_list|,
name|uint32_t
name|scId
parameter_list|,
name|bool
name|enable
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __FM_MACSEC_H */
end_comment

end_unit

