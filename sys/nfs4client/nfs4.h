begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/* $Id: nfs4.h,v 1.25 2003/11/05 14:58:58 rees Exp $ */
end_comment

begin_comment
comment|/*-  * copyright (c) 2003  * the regents of the university of michigan  * all rights reserved  *   * permission is granted to use, copy, create derivative works and redistribute  * this software and such derivative works for any purpose, so long as the name  * of the university of michigan is not used in any advertising or publicity  * pertaining to the use or distribution of this software without specific,  * written prior authorization.  if the above copyright notice or any other  * identification of the university of michigan is included in any copy of any  * portion of this software, then the disclaimer below must also be included.  *   * this software is provided as is, without representation from the university  * of michigan as to its fitness for any purpose, and without warranty by the  * university of michigan of any kind, either express or implied, including  * without limitation the implied warranties of merchantability and fitness for  * a particular purpose. the regents of the university of michigan shall not be  * liable for any damages, including special, indirect, incidental, or  * consequential damages, with respect to any claim arising out of or in  * connection with the use of the software, even if it has been or is hereafter  * advised of the possibility of such damages.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NFS4CLIENT_NFS4_H
end_ifndef

begin_define
define|#
directive|define
name|_NFS4CLIENT_NFS4_H
end_define

begin_define
define|#
directive|define
name|NFS4_USE_RPCCLNT
end_define

begin_define
define|#
directive|define
name|NFS4_MINOR_VERSION
value|0
end_define

begin_define
define|#
directive|define
name|NFS_PORT
value|2049
end_define

begin_define
define|#
directive|define
name|NFS4_DEF_FILE_IO_BUFFER_SIZE
value|4096
end_define

begin_define
define|#
directive|define
name|NFS4_MAX_FILE_IO_BUFFER_SIZE
value|32768
end_define

begin_define
define|#
directive|define
name|NFS4_DEF_MAXFILESIZE
value|0xffffffff
end_define

begin_define
define|#
directive|define
name|NFS4_SUPER_MAGIC
value|0xF00BA4
end_define

begin_define
define|#
directive|define
name|NFS4FS_SILLY_RENAME
value|1
end_define

begin_define
define|#
directive|define
name|NFS4FS_STRICT_LOCKING
value|1
end_define

begin_define
define|#
directive|define
name|NFS4FS_RETRY_OLD_STATEID
value|1
end_define

begin_define
define|#
directive|define
name|NFS4FS_MIN_LEASE
value|(1 * hz)
end_define

begin_define
define|#
directive|define
name|NFS4FS_DEFAULT_LEASE
value|(30 * hz)
end_define

begin_define
define|#
directive|define
name|NFS4FS_MAX_LEASE
value|(120 * hz)
end_define

begin_define
define|#
directive|define
name|NFS4FS_RETRY_MIN_DELAY
value|(hz>> 4)
end_define

begin_define
define|#
directive|define
name|NFS4FS_RETRY_MAX_DELAY
value|(hz<< 3)
end_define

begin_define
define|#
directive|define
name|NFS4FS_SEMAPHORE_DELAY
value|(hz>> 4)
end_define

begin_define
define|#
directive|define
name|NFS4FS_GRACE_DELAY
value|(hz * 5)
end_define

begin_define
define|#
directive|define
name|NFS4FS_OLD_STATEID_DELAY
value|(hz>> 3)
end_define

begin_define
define|#
directive|define
name|NFS4FS_OP_MAX
value|10
end_define

begin_define
define|#
directive|define
name|NFS4_BUFSIZE
value|8192
end_define

begin_define
define|#
directive|define
name|NFS4FS_MAX_IOV
value|10
end_define

begin_define
define|#
directive|define
name|NFS4_SETCLIENTID_MAXTRIES
value|5
end_define

begin_define
define|#
directive|define
name|NFS4_READDIR_MAXTRIES
value|5
end_define

begin_define
define|#
directive|define
name|NFS4_MAXIO
value|4
end_define

begin_define
define|#
directive|define
name|NFS4_MAX_REQUEST_SOFT
value|192
end_define

begin_define
define|#
directive|define
name|NFS4_MAX_REQUEST_HARD
value|256
end_define

begin_define
define|#
directive|define
name|NFS4_MAXCOMMIT
value|64
end_define

begin_define
define|#
directive|define
name|NFS4_READ_DELAY
value|(2 * HZ)
end_define

begin_define
define|#
directive|define
name|NFS4_WRITEBACK_DELAY
value|(5 * HZ)
end_define

begin_define
define|#
directive|define
name|NFS4_WRITEBACK_LOCKDELAY
value|(60 * HZ)
end_define

begin_define
define|#
directive|define
name|NFS4_COMMIT_DELAY
value|(5 * HZ)
end_define

begin_define
define|#
directive|define
name|RPC_SLACK_SPACE
value|512
end_define

begin_struct
struct|struct
name|nfs4_compound
block|{
name|char
modifier|*
name|tag
decl_stmt|;
name|int
name|req_nops
decl_stmt|;
name|uint32_t
modifier|*
name|req_nopsp
decl_stmt|;
name|uint32_t
modifier|*
name|req_seqidp
decl_stmt|;
name|uint32_t
modifier|*
name|req_stateidp
index|[
name|NFS4_MAXIO
index|]
decl_stmt|;
name|uint32_t
name|req_nstateid
decl_stmt|;
name|u_int
name|seqidused
decl_stmt|;
name|int
name|rep_status
decl_stmt|;
name|int
name|rep_nops
decl_stmt|;
name|struct
name|nfs4_fctx
modifier|*
name|fcp
decl_stmt|;
name|struct
name|vnode
modifier|*
name|curvp
decl_stmt|;
name|struct
name|vnode
modifier|*
name|savevp
decl_stmt|;
name|struct
name|nfsmount
modifier|*
name|nmp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_fdata
block|{
name|struct
name|nfsnode
modifier|*
name|fd_n
decl_stmt|;
name|pid_t
name|fd_pid
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_putfh
block|{
comment|/* filled in by caller */
comment|/*	  struct dentry *dentry;*/
comment|/* filled in by setup routine */
comment|/*	  nfs_opnum4 op;*/
name|uint32_t
name|fh_len
decl_stmt|;
name|nfsfh_t
name|fh_val
decl_stmt|;
name|int
name|nlookups
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_getattr
block|{
name|struct
name|vnode
modifier|*
name|vp
decl_stmt|;
name|nfsv4bitmap
modifier|*
name|bm
decl_stmt|;
name|struct
name|nfsv4_fattr
name|fa
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_getfh
block|{
name|uint32_t
name|fh_len
decl_stmt|;
name|nfsfh_t
name|fh_val
decl_stmt|;
name|struct
name|vnode
modifier|*
name|vp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_lookup
block|{
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|uint32_t
name|namelen
decl_stmt|;
name|struct
name|vnode
modifier|*
name|vp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_setclientid
block|{
name|struct
name|nfsmount
modifier|*
name|np
decl_stmt|;
name|uint32_t
name|namelen
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
name|char
modifier|*
name|cb_netid
decl_stmt|;
name|uint32_t
name|cb_netidlen
decl_stmt|;
name|char
modifier|*
name|cb_univaddr
decl_stmt|;
name|uint32_t
name|cb_univaddrlen
decl_stmt|;
name|uint32_t
name|cb_prog
decl_stmt|;
name|uint64_t
name|clientid
decl_stmt|;
name|u_char
name|verf
index|[
name|NFSX_V4VERF
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_access
block|{
name|uint32_t
name|mode
decl_stmt|;
name|uint32_t
name|rmode
decl_stmt|;
name|uint32_t
name|supported
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_open
block|{
name|uint32_t
name|flags
decl_stmt|;
name|uint32_t
name|rflags
decl_stmt|;
name|nfsv4cltype
name|ctype
decl_stmt|;
name|struct
name|vattr
modifier|*
name|vap
decl_stmt|;
name|struct
name|componentname
modifier|*
name|cnp
decl_stmt|;
name|struct
name|nfs4_fctx
modifier|*
name|fcp
decl_stmt|;
name|char
name|stateid
index|[
name|NFSX_V4STATEID
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_read
block|{
name|uint64_t
name|off
decl_stmt|;
name|uint32_t
name|maxcnt
decl_stmt|;
name|uint32_t
name|eof
decl_stmt|;
name|uint32_t
name|retlen
decl_stmt|;
name|struct
name|uio
modifier|*
name|uiop
decl_stmt|;
name|struct
name|nfs4_fctx
modifier|*
name|fcp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_write
block|{
name|uint64_t
name|off
decl_stmt|;
name|uint32_t
name|stable
decl_stmt|;
name|uint32_t
name|cnt
decl_stmt|;
name|uint32_t
name|retlen
decl_stmt|;
name|uint32_t
name|committed
decl_stmt|;
name|struct
name|uio
modifier|*
name|uiop
decl_stmt|;
name|u_char
name|wverf
index|[
name|NFSX_V4VERF
index|]
decl_stmt|;
name|struct
name|nfs4_fctx
modifier|*
name|fcp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_commit
block|{
name|uint32_t
name|len
decl_stmt|;
name|off_t
name|start
decl_stmt|;
name|u_char
name|verf
index|[
name|NFSX_V4VERF
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_readdir
block|{
name|uint32_t
name|cnt
decl_stmt|;
name|nfsv4bitmap
modifier|*
name|bm
decl_stmt|;
name|uint64_t
name|cookie
decl_stmt|;
name|u_char
name|verf
index|[
name|NFSX_V4VERF
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_create
block|{
name|nfstype
name|type
decl_stmt|;
name|char
modifier|*
name|linktext
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
name|uint32_t
name|namelen
decl_stmt|;
name|struct
name|vattr
modifier|*
name|vap
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_rename
block|{
specifier|const
name|char
modifier|*
name|fname
decl_stmt|;
name|uint32_t
name|fnamelen
decl_stmt|;
specifier|const
name|char
modifier|*
name|tname
decl_stmt|;
name|uint32_t
name|tnamelen
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nfs4_oparg_link
block|{
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|uint32_t
name|namelen
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Lockowner  */
end_comment

begin_struct
struct|struct
name|nfs4_lowner
block|{
name|uint32_t
name|lo_cnt
decl_stmt|;
name|uint32_t
name|lo_seqid
decl_stmt|;
name|uint32_t
name|lo_id
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|NFS4_SEQIDMUTATINGERROR
parameter_list|(
name|err
parameter_list|)
define|\
value|(((err) != NFSERR_STALE_CLIENTID)&&		\  ((err) != NFSERR_BAD_SEQID)&&			\  ((err) != NFSERR_STALE_STATEID)&&		\  ((err) != NFSERR_BAD_STATEID))
end_define

begin_comment
comment|/* Standard bitmasks */
end_comment

begin_decl_stmt
specifier|extern
name|nfsv4bitmap
name|nfsv4_fsinfobm
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|nfsv4bitmap
name|nfsv4_fsattrbm
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|nfsv4bitmap
name|nfsv4_getattrbm
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|nfsv4bitmap
name|nfsv4_readdirbm
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|vfs_init_t
name|nfs4_init
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|vfs_uninit_t
name|nfs4_uninit
decl_stmt|;
end_decl_stmt

begin_function_decl
name|uint32_t
name|nfs_v4fileid4_to_fileid
parameter_list|(
name|uint64_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs4_readrpc
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|struct
name|uio
modifier|*
parameter_list|,
name|struct
name|ucred
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs4_writerpc
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|struct
name|uio
modifier|*
parameter_list|,
name|struct
name|ucred
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs4_commit
parameter_list|(
name|struct
name|vnode
modifier|*
name|vp
parameter_list|,
name|u_quad_t
name|offset
parameter_list|,
name|int
name|cnt
parameter_list|,
name|struct
name|ucred
modifier|*
name|cred
parameter_list|,
name|struct
name|thread
modifier|*
name|td
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs4_readdirrpc
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|struct
name|uio
modifier|*
parameter_list|,
name|struct
name|ucred
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs4_readlinkrpc
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|struct
name|uio
modifier|*
parameter_list|,
name|struct
name|ucred
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs4_sigintr
parameter_list|(
name|struct
name|nfsmount
modifier|*
parameter_list|,
name|struct
name|nfsreq
modifier|*
parameter_list|,
name|struct
name|thread
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs4_writebp
parameter_list|(
name|struct
name|buf
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|thread
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs4_request
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|thread
modifier|*
parameter_list|,
name|struct
name|ucred
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
modifier|*
parameter_list|,
name|caddr_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs4_request_mnt
parameter_list|(
name|struct
name|nfsmount
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|thread
modifier|*
parameter_list|,
name|struct
name|ucred
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
modifier|*
parameter_list|,
name|caddr_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs4_connect
parameter_list|(
name|struct
name|nfsmount
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nfs4_disconnect
parameter_list|(
name|struct
name|nfsmount
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nfs4_safedisconnect
parameter_list|(
name|struct
name|nfsmount
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs4_nmcancelreqs
parameter_list|(
name|struct
name|nfsmount
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nfs_v4initcompound
parameter_list|(
name|struct
name|nfs4_compound
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs_v4postop
parameter_list|(
name|struct
name|nfs4_compound
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nfs_v4handlestatus
parameter_list|(
name|int
parameter_list|,
name|struct
name|nfs4_compound
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _NFS4CLIENT_NFS4_H */
end_comment

end_unit

