begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2012 Andrey V. Elsukov<ae@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_PART_H_
end_ifndef

begin_define
define|#
directive|define
name|_PART_H_
end_define

begin_struct_decl
struct_decl|struct
name|ptable
struct_decl|;
end_struct_decl

begin_enum
enum|enum
name|ptable_type
block|{
name|PTABLE_NONE
block|,
name|PTABLE_BSD
block|,
name|PTABLE_MBR
block|,
name|PTABLE_GPT
block|,
name|PTABLE_VTOC8
block|}
enum|;
end_enum

begin_enum
enum|enum
name|partition_type
block|{
name|PART_UNKNOWN
block|,
name|PART_EFI
block|,
name|PART_FREEBSD
block|,
name|PART_FREEBSD_BOOT
block|,
name|PART_FREEBSD_NANDFS
block|,
name|PART_FREEBSD_UFS
block|,
name|PART_FREEBSD_ZFS
block|,
name|PART_FREEBSD_SWAP
block|,
name|PART_FREEBSD_VINUM
block|,
name|PART_LINUX
block|,
name|PART_LINUX_SWAP
block|,
name|PART_DOS
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|ptable_entry
block|{
name|uint64_t
name|start
decl_stmt|;
name|uint64_t
name|end
decl_stmt|;
name|int
name|index
decl_stmt|;
name|enum
name|partition_type
name|type
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* The offset and size are in sectors */
end_comment

begin_typedef
typedef|typedef
name|int
function_decl|(
name|diskread_t
function_decl|)
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|blocks
parameter_list|,
name|off_t
name|offset
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
name|ptable_iterate_t
function_decl|)
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|,
specifier|const
name|char
modifier|*
name|partname
parameter_list|,
specifier|const
name|struct
name|ptable_entry
modifier|*
name|part
parameter_list|)
function_decl|;
end_typedef

begin_function_decl
name|struct
name|ptable
modifier|*
name|ptable_open
parameter_list|(
name|void
modifier|*
name|dev
parameter_list|,
name|off_t
name|sectors
parameter_list|,
name|uint16_t
name|sectorsize
parameter_list|,
name|diskread_t
modifier|*
name|dread
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ptable_close
parameter_list|(
name|struct
name|ptable
modifier|*
name|table
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|enum
name|ptable_type
name|ptable_gettype
parameter_list|(
specifier|const
name|struct
name|ptable
modifier|*
name|table
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ptable_getpart
parameter_list|(
specifier|const
name|struct
name|ptable
modifier|*
name|table
parameter_list|,
name|struct
name|ptable_entry
modifier|*
name|part
parameter_list|,
name|int
name|index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ptable_getbestpart
parameter_list|(
specifier|const
name|struct
name|ptable
modifier|*
name|table
parameter_list|,
name|struct
name|ptable_entry
modifier|*
name|part
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ptable_iterate
parameter_list|(
specifier|const
name|struct
name|ptable
modifier|*
name|table
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|,
name|ptable_iterate_t
modifier|*
name|iter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|parttype2str
parameter_list|(
name|enum
name|partition_type
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_PART_H_ */
end_comment

end_unit

