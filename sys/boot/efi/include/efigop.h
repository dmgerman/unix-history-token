begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/*++  Copyright (c)  1999 - 2002 Intel Corporation. All rights reserved This software and associated documentation (if any) is furnished under a license and may only be used or copied in accordance with the terms of the license. Except as permitted by such license, no part of this software or documentation may be reproduced, stored in a retrieval system, or transmitted in any form or by any means without the express written consent of Intel Corporation.  Module Name:      efigop.h  Abstract:     Info about framebuffers     Revision History  --*/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_EFIGOP_H
end_ifndef

begin_define
define|#
directive|define
name|_EFIGOP_H
end_define

begin_define
define|#
directive|define
name|EFI_GRAPHICS_OUTPUT_PROTOCOL_GUID
define|\
value|{ 0x9042a9de, 0x23dc, 0x4a38, 0x96, 0xfb, 0x7a, 0xde, 0xd0, 0x80,	\       0x51, 0x6a }
end_define

begin_expr_stmt
name|INTERFACE_DECL
argument_list|(
name|_EFI_GRAPHICS_OUTPUT
argument_list|)
expr_stmt|;
end_expr_stmt

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT32
name|RedMask
decl_stmt|;
name|UINT32
name|GreenMask
decl_stmt|;
name|UINT32
name|BlueMask
decl_stmt|;
name|UINT32
name|ReservedMask
decl_stmt|;
block|}
name|EFI_PIXEL_BITMASK
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|PixelRedGreenBlueReserved8BitPerColor
block|,
name|PixelBlueGreenRedReserved8BitPerColor
block|,
name|PixelBitMask
block|,
name|PixelBltOnly
block|,
name|PixelFormatMax
block|, }
name|EFI_GRAPHICS_PIXEL_FORMAT
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT32
name|Version
decl_stmt|;
name|UINT32
name|HorizontalResolution
decl_stmt|;
name|UINT32
name|VerticalResolution
decl_stmt|;
name|EFI_GRAPHICS_PIXEL_FORMAT
name|PixelFormat
decl_stmt|;
name|EFI_PIXEL_BITMASK
name|PixelInformation
decl_stmt|;
name|UINT32
name|PixelsPerScanLine
decl_stmt|;
block|}
name|EFI_GRAPHICS_OUTPUT_MODE_INFORMATION
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT32
name|MaxMode
decl_stmt|;
name|UINT32
name|Mode
decl_stmt|;
name|EFI_GRAPHICS_OUTPUT_MODE_INFORMATION
modifier|*
name|Info
decl_stmt|;
name|UINTN
name|SizeOfInfo
decl_stmt|;
name|EFI_PHYSICAL_ADDRESS
name|FrameBufferBase
decl_stmt|;
name|UINTN
name|FrameBufferSize
decl_stmt|;
block|}
name|EFI_GRAPHICS_OUTPUT_PROTOCOL_MODE
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_GRAPHICS_OUTPUT_PROTOCOL_QUERY_MODE
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_GRAPHICS_OUTPUT
modifier|*
name|This
parameter_list|,
name|IN
name|UINT32
name|ModeNumber
parameter_list|,
name|OUT
name|UINTN
modifier|*
name|SizeOfInfo
parameter_list|,
name|OUT
name|EFI_GRAPHICS_OUTPUT_MODE_INFORMATION
modifier|*
modifier|*
name|Info
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_GRAPHICS_OUTPUT_PROTOCOL_SET_MODE
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_GRAPHICS_OUTPUT
modifier|*
name|This
parameter_list|,
name|IN
name|UINT32
name|ModeNumber
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT8
name|Blue
decl_stmt|;
name|UINT8
name|Green
decl_stmt|;
name|UINT8
name|Red
decl_stmt|;
name|UINT8
name|Reserved
decl_stmt|;
block|}
name|EFI_GRAPHICS_OUTPUT_BLT_PIXEL
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|EfiBltVideoFill
block|,
name|EfiBltVideoToBltBuffer
block|,
name|EfiBltBufferToVideo
block|,
name|EfiBltVideoToVideo
block|,
name|EfiGraphcisOutputBltOperationMax
block|, }
name|EFI_GRAPHICS_OUTPUT_BLT_OPERATION
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_GRAPHICS_OUTPUT_PROTOCOL_BLT
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_GRAPHICS_OUTPUT
modifier|*
name|This
parameter_list|,
name|IN
name|OUT
name|EFI_GRAPHICS_OUTPUT_BLT_PIXEL
modifier|*
name|BltBuffer
parameter_list|,
name|IN
name|EFI_GRAPHICS_OUTPUT_BLT_OPERATION
name|BltOperation
parameter_list|,
name|IN
name|UINTN
name|SourceX
parameter_list|,
name|IN
name|UINTN
name|SourceY
parameter_list|,
name|IN
name|UINTN
name|DestinationX
parameter_list|,
name|IN
name|UINTN
name|DestinationY
parameter_list|,
name|IN
name|UINTN
name|Width
parameter_list|,
name|IN
name|UINTN
name|Height
parameter_list|,
name|IN
name|UINTN
name|Delta
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_EFI_GRAPHICS_OUTPUT
block|{
name|EFI_GRAPHICS_OUTPUT_PROTOCOL_QUERY_MODE
name|QueryMode
decl_stmt|;
name|EFI_GRAPHICS_OUTPUT_PROTOCOL_SET_MODE
name|SetMode
decl_stmt|;
name|EFI_GRAPHICS_OUTPUT_PROTOCOL_BLT
name|Blt
decl_stmt|;
name|EFI_GRAPHICS_OUTPUT_PROTOCOL_MODE
modifier|*
name|Mode
decl_stmt|;
block|}
name|EFI_GRAPHICS_OUTPUT
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _EFIGOP_H */
end_comment

end_unit

