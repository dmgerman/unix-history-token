begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/** @file   UGA Draw protocol from the EFI 1.1 specification.    Abstraction of a very simple graphics device.    Copyright (c) 2006 - 2008, Intel Corporation. All rights reserved.<BR>    This program and the accompanying materials are licensed and made available   under the terms and conditions of the BSD License which accompanies this   distribution.  The full text of the license may be found at:   http://opensource.org/licenses/bsd-license.php    THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,   WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.    File name: UgaDraw.h  **/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__UGA_DRAW_H__
end_ifndef

begin_define
define|#
directive|define
name|__UGA_DRAW_H__
end_define

begin_define
define|#
directive|define
name|EFI_UGA_DRAW_PROTOCOL_GUID
define|\
value|{ \     0x982c298b, 0xf4fa, 0x41cb, {0xb8, 0x38, 0x77, 0xaa, 0x68, 0x8f, 0xb8, 0x39 } \   }
end_define

begin_typedef
typedef|typedef
name|struct
name|_EFI_UGA_DRAW_PROTOCOL
name|EFI_UGA_DRAW_PROTOCOL
typedef|;
end_typedef

begin_comment
comment|/**   Return the current video mode information.    @param  This                  Protocol instance pointer.   @param  HorizontalResolution  Current video horizontal resolution in pixels   @param  VerticalResolution    Current video vertical resolution in pixels   @param  ColorDepth            Current video color depth in bits per pixel   @param  RefreshRate           Current video refresh rate in Hz.    @retval EFI_SUCCESS           Mode information returned.   @retval EFI_NOT_STARTED       Video display is not initialized. Call SetMode ()   @retval EFI_INVALID_PARAMETER One of the input args was NULL.  **/
end_comment

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_UGA_DRAW_PROTOCOL_GET_MODE
function_decl|)
parameter_list|(
name|IN
name|EFI_UGA_DRAW_PROTOCOL
modifier|*
name|This
parameter_list|,
name|OUT
name|UINT32
modifier|*
name|HorizontalResolution
parameter_list|,
name|OUT
name|UINT32
modifier|*
name|VerticalResolution
parameter_list|,
name|OUT
name|UINT32
modifier|*
name|ColorDepth
parameter_list|,
name|OUT
name|UINT32
modifier|*
name|RefreshRate
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/**   Return the current video mode information.    @param  This                 Protocol instance pointer.   @param  HorizontalResolution Current video horizontal resolution in pixels   @param  VerticalResolution   Current video vertical resolution in pixels   @param  ColorDepth           Current video color depth in bits per pixel   @param  RefreshRate          Current video refresh rate in Hz.    @retval EFI_SUCCESS          Mode information returned.   @retval EFI_NOT_STARTED      Video display is not initialized. Call SetMode ()  **/
end_comment

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_UGA_DRAW_PROTOCOL_SET_MODE
function_decl|)
parameter_list|(
name|IN
name|EFI_UGA_DRAW_PROTOCOL
modifier|*
name|This
parameter_list|,
name|IN
name|UINT32
name|HorizontalResolution
parameter_list|,
name|IN
name|UINT32
name|VerticalResolution
parameter_list|,
name|IN
name|UINT32
name|ColorDepth
parameter_list|,
name|IN
name|UINT32
name|RefreshRate
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT8
name|Blue
decl_stmt|;
name|UINT8
name|Green
decl_stmt|;
name|UINT8
name|Red
decl_stmt|;
name|UINT8
name|Reserved
decl_stmt|;
block|}
name|EFI_UGA_PIXEL
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
name|EFI_UGA_PIXEL
name|Pixel
decl_stmt|;
name|UINT32
name|Raw
decl_stmt|;
block|}
name|EFI_UGA_PIXEL_UNION
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|EfiUgaVideoFill
block|,
name|EfiUgaVideoToBltBuffer
block|,
name|EfiUgaBltBufferToVideo
block|,
name|EfiUgaVideoToVideo
block|,
name|EfiUgaBltMax
block|}
name|EFI_UGA_BLT_OPERATION
typedef|;
end_typedef

begin_comment
comment|/**   Type specifying a pointer to a function to perform an UGA Blt operation.      The following table defines actions for BltOperations:<B>EfiUgaVideoFill</B> - Write data from the  BltBuffer pixel (SourceX, SourceY)       directly to every pixel of the video display rectangle       (DestinationX, DestinationY) (DestinationX + Width, DestinationY + Height).       Only one pixel will be used from the BltBuffer. Delta is NOT used.<B>EfiUgaVideoToBltBuffer</B> - Read data from the video display rectangle       (SourceX, SourceY) (SourceX + Width, SourceY + Height) and place it in       the BltBuffer rectangle (DestinationX, DestinationY )       (DestinationX + Width, DestinationY + Height). If DestinationX or       DestinationY is not zero then Delta must be set to the length in bytes       of a row in the BltBuffer.<B>EfiUgaBltBufferToVideo</B> - Write data from the  BltBuffer rectangle       (SourceX, SourceY) (SourceX + Width, SourceY + Height) directly to the       video display rectangle (DestinationX, DestinationY)       (DestinationX + Width, DestinationY + Height). If SourceX or SourceY is       not zero then Delta must be set to the length in bytes of a row in the       BltBuffer.<B>EfiUgaVideoToVideo</B> - Copy from the video display rectangle (SourceX, SourceY)      (SourceX + Width, SourceY + Height) .to the video display rectangle      (DestinationX, DestinationY) (DestinationX + Width, DestinationY + Height).      The BltBuffer and Delta  are not used in this mode.       @param[in] This          - Protocol instance pointer.     @param[in] BltBuffer     - Buffer containing data to blit into video buffer. This                                buffer has a size of Width*Height*sizeof(EFI_UGA_PIXEL)     @param[in] BltOperation  - Operation to perform on BlitBuffer and video memory     @param[in] SourceX       - X coordinate of source for the BltBuffer.     @param[in] SourceY       - Y coordinate of source for the BltBuffer.     @param[in] DestinationX  - X coordinate of destination for the BltBuffer.     @param[in] DestinationY  - Y coordinate of destination for the BltBuffer.     @param[in] Width         - Width of rectangle in BltBuffer in pixels.     @param[in] Height        - Hight of rectangle in BltBuffer in pixels.     @param[in] Delta         - OPTIONAL      @retval EFI_SUCCESS           - The Blt operation completed.     @retval EFI_INVALID_PARAMETER - BltOperation is not valid.     @retval EFI_DEVICE_ERROR      - A hardware error occured writting to the video buffer.  --*/
end_comment

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_UGA_DRAW_PROTOCOL_BLT
function_decl|)
parameter_list|(
name|IN
name|EFI_UGA_DRAW_PROTOCOL
modifier|*
name|This
parameter_list|,
name|IN
name|EFI_UGA_PIXEL
modifier|*
name|BltBuffer
parameter_list|,
name|OPTIONAL
name|IN
name|EFI_UGA_BLT_OPERATION
name|BltOperation
parameter_list|,
name|IN
name|UINTN
name|SourceX
parameter_list|,
name|IN
name|UINTN
name|SourceY
parameter_list|,
name|IN
name|UINTN
name|DestinationX
parameter_list|,
name|IN
name|UINTN
name|DestinationY
parameter_list|,
name|IN
name|UINTN
name|Width
parameter_list|,
name|IN
name|UINTN
name|Height
parameter_list|,
name|IN
name|UINTN
name|Delta
name|OPTIONAL
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|_EFI_UGA_DRAW_PROTOCOL
block|{
name|EFI_UGA_DRAW_PROTOCOL_GET_MODE
name|GetMode
decl_stmt|;
name|EFI_UGA_DRAW_PROTOCOL_SET_MODE
name|SetMode
decl_stmt|;
name|EFI_UGA_DRAW_PROTOCOL_BLT
name|Blt
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|EFI_GUID
name|gEfiUgaDrawProtocolGuid
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

