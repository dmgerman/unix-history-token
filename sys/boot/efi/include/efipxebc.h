begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_EFIPXEBC_H
end_ifndef

begin_define
define|#
directive|define
name|_EFIPXEBC_H
end_define

begin_comment
comment|/*++  Copyright (c)  1999 - 2002 Intel Corporation. All rights reserved This software and associated documentation (if any) is furnished under a license and may only be used or copied in accordance with the terms of the license. Except as permitted by such license, no part of this software or documentation may be reproduced, stored in a retrieval system, or transmitted in any form or by any means without the express written consent of Intel Corporation.  Module Name:      efipxebc.h  Abstract:      EFI PXE Base Code Protocol    Revision History  --*/
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// PXE Base Code protocol
end_comment

begin_comment
comment|//
end_comment

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_PROTOCOL
define|\
value|{ 0x03c4e603, 0xac28, 0x11d3, 0x9a, 0x2d, 0x00, 0x90, 0x27, 0x3f, 0xc1, 0x4d }
end_define

begin_expr_stmt
name|INTERFACE_DECL
argument_list|(
name|_EFI_PXE_BASE_CODE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|DEFAULT_TTL
value|8
end_define

begin_define
define|#
directive|define
name|DEFAULT_ToS
value|0
end_define

begin_comment
comment|//
end_comment

begin_comment
comment|// Address definitions
end_comment

begin_comment
comment|//
end_comment

begin_typedef
typedef|typedef
union|union
block|{
name|UINT32
name|Addr
index|[
literal|4
index|]
decl_stmt|;
name|EFI_IPv4_ADDRESS
name|v4
decl_stmt|;
name|EFI_IPv6_ADDRESS
name|v6
decl_stmt|;
block|}
name|EFI_IP_ADDRESS
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|UINT16
name|EFI_PXE_BASE_CODE_UDP_PORT
typedef|;
end_typedef

begin_comment
comment|//
end_comment

begin_comment
comment|// Packet definitions
end_comment

begin_comment
comment|//
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT8
name|BootpOpcode
decl_stmt|;
name|UINT8
name|BootpHwType
decl_stmt|;
name|UINT8
name|BootpHwAddrLen
decl_stmt|;
name|UINT8
name|BootpGateHops
decl_stmt|;
name|UINT32
name|BootpIdent
decl_stmt|;
name|UINT16
name|BootpSeconds
decl_stmt|;
name|UINT16
name|BootpFlags
decl_stmt|;
name|UINT8
name|BootpCiAddr
index|[
literal|4
index|]
decl_stmt|;
name|UINT8
name|BootpYiAddr
index|[
literal|4
index|]
decl_stmt|;
name|UINT8
name|BootpSiAddr
index|[
literal|4
index|]
decl_stmt|;
name|UINT8
name|BootpGiAddr
index|[
literal|4
index|]
decl_stmt|;
name|UINT8
name|BootpHwAddr
index|[
literal|16
index|]
decl_stmt|;
name|UINT8
name|BootpSrvName
index|[
literal|64
index|]
decl_stmt|;
name|UINT8
name|BootpBootFile
index|[
literal|128
index|]
decl_stmt|;
name|UINT32
name|DhcpMagik
decl_stmt|;
name|UINT8
name|DhcpOptions
index|[
literal|56
index|]
decl_stmt|;
block|}
name|EFI_PXE_BASE_CODE_DHCPV4_PACKET
typedef|;
end_typedef

begin_comment
comment|// TBD in EFI v1.1
end_comment

begin_comment
comment|//typedef struct {
end_comment

begin_comment
comment|//    UINT8                           reserved;
end_comment

begin_comment
comment|//} EFI_PXE_BASE_CODE_DHCPV6_PACKET;
end_comment

begin_typedef
typedef|typedef
union|union
block|{
name|UINT8
name|Raw
index|[
literal|1472
index|]
decl_stmt|;
name|EFI_PXE_BASE_CODE_DHCPV4_PACKET
name|Dhcpv4
decl_stmt|;
comment|//    EFI_PXE_BASE_CODE_DHCPV6_PACKET     Dhcpv6;
block|}
name|EFI_PXE_BASE_CODE_PACKET
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT8
name|Type
decl_stmt|;
name|UINT8
name|Code
decl_stmt|;
name|UINT16
name|Checksum
decl_stmt|;
union|union
block|{
name|UINT32
name|reserved
decl_stmt|;
name|UINT32
name|Mtu
decl_stmt|;
name|UINT32
name|Pointer
decl_stmt|;
struct|struct
block|{
name|UINT16
name|Identifier
decl_stmt|;
name|UINT16
name|Sequence
decl_stmt|;
block|}
name|Echo
struct|;
block|}
name|u
union|;
name|UINT8
name|Data
index|[
literal|494
index|]
decl_stmt|;
block|}
name|EFI_PXE_BASE_CODE_ICMP_ERROR
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT8
name|ErrorCode
decl_stmt|;
name|CHAR8
name|ErrorString
index|[
literal|127
index|]
decl_stmt|;
block|}
name|EFI_PXE_BASE_CODE_TFTP_ERROR
typedef|;
end_typedef

begin_comment
comment|//
end_comment

begin_comment
comment|// IP Receive Filter definitions
end_comment

begin_comment
comment|//
end_comment

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_MAX_IPCNT
value|8
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT8
name|Filters
decl_stmt|;
name|UINT8
name|IpCnt
decl_stmt|;
name|UINT16
name|reserved
decl_stmt|;
name|EFI_IP_ADDRESS
name|IpList
index|[
name|EFI_PXE_BASE_CODE_MAX_IPCNT
index|]
decl_stmt|;
block|}
name|EFI_PXE_BASE_CODE_IP_FILTER
typedef|;
end_typedef

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_IP_FILTER_STATION_IP
value|0x0001
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_IP_FILTER_BROADCAST
value|0x0002
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_IP_FILTER_PROMISCUOUS
value|0x0004
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_IP_FILTER_PROMISCUOUS_MULTICAST
value|0x0008
end_define

begin_comment
comment|//
end_comment

begin_comment
comment|// ARP Cache definitions
end_comment

begin_comment
comment|//
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|EFI_IP_ADDRESS
name|IpAddr
decl_stmt|;
name|EFI_MAC_ADDRESS
name|MacAddr
decl_stmt|;
block|}
name|EFI_PXE_BASE_CODE_ARP_ENTRY
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|EFI_IP_ADDRESS
name|IpAddr
decl_stmt|;
name|EFI_IP_ADDRESS
name|SubnetMask
decl_stmt|;
name|EFI_IP_ADDRESS
name|GwAddr
decl_stmt|;
block|}
name|EFI_PXE_BASE_CODE_ROUTE_ENTRY
typedef|;
end_typedef

begin_comment
comment|//
end_comment

begin_comment
comment|// UDP definitions
end_comment

begin_comment
comment|//
end_comment

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_UDP_OPFLAGS_ANY_SRC_IP
value|0x0001
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_UDP_OPFLAGS_ANY_SRC_PORT
value|0x0002
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_UDP_OPFLAGS_ANY_DEST_IP
value|0x0004
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_UDP_OPFLAGS_ANY_DEST_PORT
value|0x0008
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_UDP_OPFLAGS_USE_FILTER
value|0x0010
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_UDP_OPFLAGS_MAY_FRAGMENT
value|0x0020
end_define

begin_comment
comment|//
end_comment

begin_comment
comment|// Discover() definitions
end_comment

begin_comment
comment|//
end_comment

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_BOOTSTRAP
value|0
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_MS_WINNT_RIS
value|1
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_INTEL_LCM
value|2
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_DOSUNDI
value|3
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_NEC_ESMPRO
value|4
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_IBM_WSoD
value|5
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_IBM_LCCM
value|6
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_CA_UNICENTER_TNG
value|7
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_HP_OPENVIEW
value|8
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_ALTIRIS_9
value|9
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_ALTIRIS_10
value|10
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_ALTIRIS_11
value|11
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_NOT_USED_12
value|12
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_REDHAT_INSTALL
value|13
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_REDHAT_BOOT
value|14
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_REMBO
value|15
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_BEOBOOT
value|16
end_define

begin_comment
comment|//
end_comment

begin_comment
comment|// 17 through 32767 are reserved
end_comment

begin_comment
comment|// 32768 through 65279 are for vendor use
end_comment

begin_comment
comment|// 65280 through 65534 are reserved
end_comment

begin_comment
comment|//
end_comment

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_TYPE_PXETEST
value|65535
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_LAYER_MASK
value|0x7FFF
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_LAYER_INITIAL
value|0x0000
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_BOOT_LAYER_CREDENTIALS
value|0x8000
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|UINT16
name|Type
decl_stmt|;
name|BOOLEAN
name|AcceptAnyResponse
decl_stmt|;
name|UINT8
name|Reserved
decl_stmt|;
name|EFI_IP_ADDRESS
name|IpAddr
decl_stmt|;
block|}
name|EFI_PXE_BASE_CODE_SRVLIST
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|BOOLEAN
name|UseMCast
decl_stmt|;
name|BOOLEAN
name|UseBCast
decl_stmt|;
name|BOOLEAN
name|UseUCast
decl_stmt|;
name|BOOLEAN
name|MustUseList
decl_stmt|;
name|EFI_IP_ADDRESS
name|ServerMCastIp
decl_stmt|;
name|UINT16
name|IpCnt
decl_stmt|;
name|EFI_PXE_BASE_CODE_SRVLIST
name|SrvList
index|[
literal|1
index|]
decl_stmt|;
block|}
name|EFI_PXE_BASE_CODE_DISCOVER_INFO
typedef|;
end_typedef

begin_comment
comment|//
end_comment

begin_comment
comment|// Mtftp() definitions
end_comment

begin_comment
comment|//
end_comment

begin_typedef
typedef|typedef
enum|enum
block|{
name|EFI_PXE_BASE_CODE_TFTP_FIRST
block|,
name|EFI_PXE_BASE_CODE_TFTP_GET_FILE_SIZE
block|,
name|EFI_PXE_BASE_CODE_TFTP_READ_FILE
block|,
name|EFI_PXE_BASE_CODE_TFTP_WRITE_FILE
block|,
name|EFI_PXE_BASE_CODE_TFTP_READ_DIRECTORY
block|,
name|EFI_PXE_BASE_CODE_MTFTP_GET_FILE_SIZE
block|,
name|EFI_PXE_BASE_CODE_MTFTP_READ_FILE
block|,
name|EFI_PXE_BASE_CODE_MTFTP_READ_DIRECTORY
block|,
name|EFI_PXE_BASE_CODE_MTFTP_LAST
block|}
name|EFI_PXE_BASE_CODE_TFTP_OPCODE
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|EFI_IP_ADDRESS
name|MCastIp
decl_stmt|;
name|EFI_PXE_BASE_CODE_UDP_PORT
name|CPort
decl_stmt|;
name|EFI_PXE_BASE_CODE_UDP_PORT
name|SPort
decl_stmt|;
name|UINT16
name|ListenTimeout
decl_stmt|;
name|UINT16
name|TransmitTimeout
decl_stmt|;
block|}
name|EFI_PXE_BASE_CODE_MTFTP_INFO
typedef|;
end_typedef

begin_comment
comment|//
end_comment

begin_comment
comment|// PXE Base Code Mode structure
end_comment

begin_comment
comment|//
end_comment

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_MAX_ARP_ENTRIES
value|8
end_define

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_MAX_ROUTE_ENTRIES
value|8
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|BOOLEAN
name|Started
decl_stmt|;
name|BOOLEAN
name|Ipv6Available
decl_stmt|;
name|BOOLEAN
name|Ipv6Supported
decl_stmt|;
name|BOOLEAN
name|UsingIpv6
decl_stmt|;
name|BOOLEAN
name|BisSupported
decl_stmt|;
name|BOOLEAN
name|BisDetected
decl_stmt|;
name|BOOLEAN
name|AutoArp
decl_stmt|;
name|BOOLEAN
name|SendGUID
decl_stmt|;
name|BOOLEAN
name|DhcpDiscoverValid
decl_stmt|;
name|BOOLEAN
name|DhcpAckReceived
decl_stmt|;
name|BOOLEAN
name|ProxyOfferReceived
decl_stmt|;
name|BOOLEAN
name|PxeDiscoverValid
decl_stmt|;
name|BOOLEAN
name|PxeReplyReceived
decl_stmt|;
name|BOOLEAN
name|PxeBisReplyReceived
decl_stmt|;
name|BOOLEAN
name|IcmpErrorReceived
decl_stmt|;
name|BOOLEAN
name|TftpErrorReceived
decl_stmt|;
name|BOOLEAN
name|MakeCallbacks
decl_stmt|;
name|UINT8
name|TTL
decl_stmt|;
name|UINT8
name|ToS
decl_stmt|;
name|EFI_IP_ADDRESS
name|StationIp
decl_stmt|;
name|EFI_IP_ADDRESS
name|SubnetMask
decl_stmt|;
name|EFI_PXE_BASE_CODE_PACKET
name|DhcpDiscover
decl_stmt|;
name|EFI_PXE_BASE_CODE_PACKET
name|DhcpAck
decl_stmt|;
name|EFI_PXE_BASE_CODE_PACKET
name|ProxyOffer
decl_stmt|;
name|EFI_PXE_BASE_CODE_PACKET
name|PxeDiscover
decl_stmt|;
name|EFI_PXE_BASE_CODE_PACKET
name|PxeReply
decl_stmt|;
name|EFI_PXE_BASE_CODE_PACKET
name|PxeBisReply
decl_stmt|;
name|EFI_PXE_BASE_CODE_IP_FILTER
name|IpFilter
decl_stmt|;
name|UINT32
name|ArpCacheEntries
decl_stmt|;
name|EFI_PXE_BASE_CODE_ARP_ENTRY
name|ArpCache
index|[
name|EFI_PXE_BASE_CODE_MAX_ARP_ENTRIES
index|]
decl_stmt|;
name|UINT32
name|RouteTableEntries
decl_stmt|;
name|EFI_PXE_BASE_CODE_ROUTE_ENTRY
name|RouteTable
index|[
name|EFI_PXE_BASE_CODE_MAX_ROUTE_ENTRIES
index|]
decl_stmt|;
name|EFI_PXE_BASE_CODE_ICMP_ERROR
name|IcmpError
decl_stmt|;
name|EFI_PXE_BASE_CODE_TFTP_ERROR
name|TftpError
decl_stmt|;
block|}
name|EFI_PXE_BASE_CODE_MODE
typedef|;
end_typedef

begin_comment
comment|//
end_comment

begin_comment
comment|// PXE Base Code Interface Function definitions
end_comment

begin_comment
comment|//
end_comment

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_BASE_CODE_START
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE
modifier|*
name|This
parameter_list|,
name|IN
name|BOOLEAN
name|UseIpv6
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_BASE_CODE_STOP
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE
modifier|*
name|This
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_BASE_CODE_DHCP
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE
modifier|*
name|This
parameter_list|,
name|IN
name|BOOLEAN
name|SortOffers
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_BASE_CODE_DISCOVER
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE
modifier|*
name|This
parameter_list|,
name|IN
name|UINT16
name|Type
parameter_list|,
name|IN
name|UINT16
modifier|*
name|Layer
parameter_list|,
name|IN
name|BOOLEAN
name|UseBis
parameter_list|,
name|IN
name|OUT
name|EFI_PXE_BASE_CODE_DISCOVER_INFO
modifier|*
name|Info
name|OPTIONAL
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_BASE_CODE_MTFTP
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE
modifier|*
name|This
parameter_list|,
name|IN
name|EFI_PXE_BASE_CODE_TFTP_OPCODE
name|Operation
parameter_list|,
name|IN
name|OUT
name|VOID
modifier|*
name|BufferPtr
name|OPTIONAL
parameter_list|,
name|IN
name|BOOLEAN
name|Overwrite
parameter_list|,
name|IN
name|OUT
name|UINT64
modifier|*
name|BufferSize
parameter_list|,
name|IN
name|UINTN
modifier|*
name|BlockSize
name|OPTIONAL
parameter_list|,
name|IN
name|EFI_IP_ADDRESS
modifier|*
name|ServerIp
parameter_list|,
name|IN
name|UINT8
modifier|*
name|Filename
parameter_list|,
name|IN
name|EFI_PXE_BASE_CODE_MTFTP_INFO
modifier|*
name|Info
name|OPTIONAL
parameter_list|,
name|IN
name|BOOLEAN
name|DontUseBuffer
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_BASE_CODE_UDP_WRITE
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE
modifier|*
name|This
parameter_list|,
name|IN
name|UINT16
name|OpFlags
parameter_list|,
name|IN
name|EFI_IP_ADDRESS
modifier|*
name|DestIp
parameter_list|,
name|IN
name|EFI_PXE_BASE_CODE_UDP_PORT
modifier|*
name|DestPort
parameter_list|,
name|IN
name|EFI_IP_ADDRESS
modifier|*
name|GatewayIp
parameter_list|,
name|OPTIONAL
name|IN
name|EFI_IP_ADDRESS
modifier|*
name|SrcIp
parameter_list|,
name|OPTIONAL
name|IN
name|OUT
name|EFI_PXE_BASE_CODE_UDP_PORT
modifier|*
name|SrcPort
parameter_list|,
name|OPTIONAL
name|IN
name|UINTN
modifier|*
name|HeaderSize
parameter_list|,
name|OPTIONAL
name|IN
name|VOID
modifier|*
name|HeaderPtr
parameter_list|,
name|OPTIONAL
name|IN
name|UINTN
modifier|*
name|BufferSize
parameter_list|,
name|IN
name|VOID
modifier|*
name|BufferPtr
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_BASE_CODE_UDP_READ
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE
modifier|*
name|This
parameter_list|,
name|IN
name|UINT16
name|OpFlags
parameter_list|,
name|IN
name|OUT
name|EFI_IP_ADDRESS
modifier|*
name|DestIp
parameter_list|,
name|OPTIONAL
name|IN
name|OUT
name|EFI_PXE_BASE_CODE_UDP_PORT
modifier|*
name|DestPort
parameter_list|,
name|OPTIONAL
name|IN
name|OUT
name|EFI_IP_ADDRESS
modifier|*
name|SrcIp
parameter_list|,
name|OPTIONAL
name|IN
name|OUT
name|EFI_PXE_BASE_CODE_UDP_PORT
modifier|*
name|SrcPort
parameter_list|,
name|OPTIONAL
name|IN
name|UINTN
modifier|*
name|HeaderSize
parameter_list|,
name|OPTIONAL
name|IN
name|VOID
modifier|*
name|HeaderPtr
parameter_list|,
name|OPTIONAL
name|IN
name|OUT
name|UINTN
modifier|*
name|BufferSize
parameter_list|,
name|IN
name|VOID
modifier|*
name|BufferPtr
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_BASE_CODE_SET_IP_FILTER
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE
modifier|*
name|This
parameter_list|,
name|IN
name|EFI_PXE_BASE_CODE_IP_FILTER
modifier|*
name|NewFilter
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_BASE_CODE_ARP
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE
modifier|*
name|This
parameter_list|,
name|IN
name|EFI_IP_ADDRESS
modifier|*
name|IpAddr
parameter_list|,
name|IN
name|EFI_MAC_ADDRESS
modifier|*
name|MacAddr
name|OPTIONAL
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_BASE_CODE_SET_PARAMETERS
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE
modifier|*
name|This
parameter_list|,
name|IN
name|BOOLEAN
modifier|*
name|NewAutoArp
parameter_list|,
name|OPTIONAL
name|IN
name|BOOLEAN
modifier|*
name|NewSendGUID
parameter_list|,
name|OPTIONAL
name|IN
name|UINT8
modifier|*
name|NewTTL
parameter_list|,
name|OPTIONAL
name|IN
name|UINT8
modifier|*
name|NewToS
parameter_list|,
name|OPTIONAL
name|IN
name|BOOLEAN
modifier|*
name|NewMakeCallback
name|OPTIONAL
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_BASE_CODE_SET_STATION_IP
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE
modifier|*
name|This
parameter_list|,
name|IN
name|EFI_IP_ADDRESS
modifier|*
name|NewStationIp
parameter_list|,
name|OPTIONAL
name|IN
name|EFI_IP_ADDRESS
modifier|*
name|NewSubnetMask
name|OPTIONAL
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_BASE_CODE_SET_PACKETS
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE
modifier|*
name|This
parameter_list|,
name|BOOLEAN
modifier|*
name|NewDhcpDiscoverValid
parameter_list|,
name|OPTIONAL
name|BOOLEAN
modifier|*
name|NewDhcpAckReceived
parameter_list|,
name|OPTIONAL
name|BOOLEAN
modifier|*
name|NewProxyOfferReceived
parameter_list|,
name|OPTIONAL
name|BOOLEAN
modifier|*
name|NewPxeDiscoverValid
parameter_list|,
name|OPTIONAL
name|BOOLEAN
modifier|*
name|NewPxeReplyReceived
parameter_list|,
name|OPTIONAL
name|BOOLEAN
modifier|*
name|NewPxeBisReplyReceived
parameter_list|,
name|OPTIONAL
name|IN
name|EFI_PXE_BASE_CODE_PACKET
modifier|*
name|NewDhcpDiscover
parameter_list|,
name|OPTIONAL
name|IN
name|EFI_PXE_BASE_CODE_PACKET
modifier|*
name|NewDhcpAck
parameter_list|,
name|OPTIONAL
name|IN
name|EFI_PXE_BASE_CODE_PACKET
modifier|*
name|NewProxyOffer
parameter_list|,
name|OPTIONAL
name|IN
name|EFI_PXE_BASE_CODE_PACKET
modifier|*
name|NewPxeDiscover
parameter_list|,
name|OPTIONAL
name|IN
name|EFI_PXE_BASE_CODE_PACKET
modifier|*
name|NewPxeReply
parameter_list|,
name|OPTIONAL
name|IN
name|EFI_PXE_BASE_CODE_PACKET
modifier|*
name|NewPxeBisReply
name|OPTIONAL
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|//
end_comment

begin_comment
comment|// PXE Base Code Protocol structure
end_comment

begin_comment
comment|//
end_comment

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_INTERFACE_REVISION
value|0x00010000
end_define

begin_typedef
typedef|typedef
struct|struct
name|_EFI_PXE_BASE_CODE
block|{
name|UINT64
name|Revision
decl_stmt|;
name|EFI_PXE_BASE_CODE_START
name|Start
decl_stmt|;
name|EFI_PXE_BASE_CODE_STOP
name|Stop
decl_stmt|;
name|EFI_PXE_BASE_CODE_DHCP
name|Dhcp
decl_stmt|;
name|EFI_PXE_BASE_CODE_DISCOVER
name|Discover
decl_stmt|;
name|EFI_PXE_BASE_CODE_MTFTP
name|Mtftp
decl_stmt|;
name|EFI_PXE_BASE_CODE_UDP_WRITE
name|UdpWrite
decl_stmt|;
name|EFI_PXE_BASE_CODE_UDP_READ
name|UdpRead
decl_stmt|;
name|EFI_PXE_BASE_CODE_SET_IP_FILTER
name|SetIpFilter
decl_stmt|;
name|EFI_PXE_BASE_CODE_ARP
name|Arp
decl_stmt|;
name|EFI_PXE_BASE_CODE_SET_PARAMETERS
name|SetParameters
decl_stmt|;
name|EFI_PXE_BASE_CODE_SET_STATION_IP
name|SetStationIp
decl_stmt|;
name|EFI_PXE_BASE_CODE_SET_PACKETS
name|SetPackets
decl_stmt|;
name|EFI_PXE_BASE_CODE_MODE
modifier|*
name|Mode
decl_stmt|;
block|}
name|EFI_PXE_BASE_CODE
typedef|;
end_typedef

begin_comment
comment|//
end_comment

begin_comment
comment|// Call Back Definitions
end_comment

begin_comment
comment|//
end_comment

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL
define|\
value|{ 0x245dca21, 0xfb7b, 0x11d3, 0x8f, 0x01, 0x00, 0xa0, 0xc9, 0x69, 0x72, 0x3b }
end_define

begin_comment
comment|//
end_comment

begin_comment
comment|// Revision Number
end_comment

begin_comment
comment|//
end_comment

begin_define
define|#
directive|define
name|EFI_PXE_BASE_CODE_CALLBACK_INTERFACE_REVISION
value|0x00010000
end_define

begin_expr_stmt
name|INTERFACE_DECL
argument_list|(
name|_EFI_PXE_BASE_CODE_CALLBACK
argument_list|)
expr_stmt|;
end_expr_stmt

begin_typedef
typedef|typedef
enum|enum
block|{
name|EFI_PXE_BASE_CODE_FUNCTION_FIRST
block|,
name|EFI_PXE_BASE_CODE_FUNCTION_DHCP
block|,
name|EFI_PXE_BASE_CODE_FUNCTION_DISCOVER
block|,
name|EFI_PXE_BASE_CODE_FUNCTION_MTFTP
block|,
name|EFI_PXE_BASE_CODE_FUNCTION_UDP_WRITE
block|,
name|EFI_PXE_BASE_CODE_FUNCTION_UDP_READ
block|,
name|EFI_PXE_BASE_CODE_FUNCTION_ARP
block|,
name|EFI_PXE_BASE_CODE_FUNCTION_IGMP
block|,
name|EFI_PXE_BASE_CODE_PXE_FUNCTION_LAST
block|}
name|EFI_PXE_BASE_CODE_FUNCTION
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|EFI_PXE_BASE_CODE_CALLBACK_STATUS_FIRST
block|,
name|EFI_PXE_BASE_CODE_CALLBACK_STATUS_CONTINUE
block|,
name|EFI_PXE_BASE_CODE_CALLBACK_STATUS_ABORT
block|,
name|EFI_PXE_BASE_CODE_CALLBACK_STATUS_LAST
block|}
name|EFI_PXE_BASE_CODE_CALLBACK_STATUS
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|EFI_PXE_BASE_CODE_CALLBACK_STATUS
function_decl|(
name|EFIAPI
modifier|*
name|EFI_PXE_CALLBACK
function_decl|)
parameter_list|(
name|IN
name|struct
name|_EFI_PXE_BASE_CODE_CALLBACK
modifier|*
name|This
parameter_list|,
name|IN
name|EFI_PXE_BASE_CODE_FUNCTION
name|Function
parameter_list|,
name|IN
name|BOOLEAN
name|Received
parameter_list|,
name|IN
name|UINT32
name|PacketLen
parameter_list|,
name|IN
name|EFI_PXE_BASE_CODE_PACKET
modifier|*
name|Packet
name|OPTIONAL
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_EFI_PXE_BASE_CODE_CALLBACK
block|{
name|UINT64
name|Revision
decl_stmt|;
name|EFI_PXE_CALLBACK
name|Callback
decl_stmt|;
block|}
name|EFI_PXE_BASE_CODE_CALLBACK
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _EFIPXEBC_H */
end_comment

end_unit

