begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1998, 1999 Semen Ustimenko (semenu@FreeBSD.org)  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_define
define|#
directive|define
name|hpfs_bmmarkfree
parameter_list|(
name|hpmp
parameter_list|,
name|bn
parameter_list|,
name|bl
parameter_list|)
value|hpfs_bmmark(hpmp, bn, bl, 1)
end_define

begin_define
define|#
directive|define
name|hpfs_bmmarkbusy
parameter_list|(
name|hpmp
parameter_list|,
name|bn
parameter_list|,
name|bl
parameter_list|)
value|hpfs_bmmark(hpmp, bn, bl, 0)
end_define

begin_function_decl
name|u_long
name|hpfs_checksum
parameter_list|(
name|u_int8_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_bminit
parameter_list|(
name|struct
name|hpfsmount
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|hpfs_bmdeinit
parameter_list|(
name|struct
name|hpfsmount
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_bmfblookup
parameter_list|(
name|struct
name|hpfsmount
modifier|*
parameter_list|,
name|lsn_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_bmmark
parameter_list|(
name|struct
name|hpfsmount
modifier|*
parameter_list|,
name|lsn_t
parameter_list|,
name|u_long
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_bmlookup
parameter_list|(
name|struct
name|hpfsmount
modifier|*
parameter_list|,
name|u_long
parameter_list|,
name|lsn_t
parameter_list|,
name|u_long
parameter_list|,
name|lsn_t
modifier|*
parameter_list|,
name|u_long
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_struct_decl
struct_decl|struct
name|hpfs_args
struct_decl|;
end_struct_decl

begin_function_decl
name|int
name|hpfs_cpinit
parameter_list|(
name|struct
name|mount
modifier|*
parameter_list|,
name|struct
name|hpfsmount
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_cpdeinit
parameter_list|(
name|struct
name|hpfsmount
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_cpload
parameter_list|(
name|struct
name|hpfsmount
modifier|*
parameter_list|,
name|struct
name|cpiblk
modifier|*
parameter_list|,
name|struct
name|cpdblk
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_cpstrnnicmp
parameter_list|(
name|struct
name|hpfsmount
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|u_int16_t
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|u_int16_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_cmpfname
parameter_list|(
name|struct
name|hpfsmount
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|u_int16_t
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* XXX Need unsigned conversion? */
end_comment

begin_define
define|#
directive|define
name|hpfs_u2d
parameter_list|(
name|hpmp
parameter_list|,
name|c
parameter_list|)
value|((((u_char)(c))&0x80)?(hpmp->hpm_u2d[((u_char)(c))&0x7F]):((u_char)(c)))
end_define

begin_define
define|#
directive|define
name|hpfs_d2u
parameter_list|(
name|hpmp
parameter_list|,
name|c
parameter_list|)
value|((((u_char)(c))&0x80)?(hpmp->hpm_d2u[((u_char)(c))&0x7F]):((u_char)(c)))
end_define

begin_define
define|#
directive|define
name|hpfs_toupper
parameter_list|(
name|hpmp
parameter_list|,
name|c
parameter_list|,
name|cp
parameter_list|)
value|((((u_char)(c))&0x80) ? ((u_char)((hpmp)->hpm_cpdblk[(cp)].b_upcase[((u_char)(c))&0x7F])) : ((((u_char)(c))>= 'a'&& ((u_char)(c))<='z')?(((u_char)(c))-'a'+'A'):((u_char)(c))))
end_define

begin_function_decl
name|int
name|hpfs_truncate
parameter_list|(
name|struct
name|hpfsnode
modifier|*
parameter_list|,
name|u_long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_extend
parameter_list|(
name|struct
name|hpfsnode
modifier|*
parameter_list|,
name|u_long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_updateparent
parameter_list|(
name|struct
name|hpfsnode
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_update
parameter_list|(
name|struct
name|hpfsnode
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_validateparent
parameter_list|(
name|struct
name|hpfsnode
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|timespec
name|hpfstimetounix
parameter_list|(
name|u_long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_genlookupbyname
parameter_list|(
name|struct
name|hpfsnode
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|buf
modifier|*
modifier|*
parameter_list|,
name|struct
name|hpfsdirent
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_makefnode
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|struct
name|vnode
modifier|*
modifier|*
parameter_list|,
name|struct
name|componentname
modifier|*
parameter_list|,
name|struct
name|vattr
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_removefnode
parameter_list|(
name|struct
name|vnode
modifier|*
parameter_list|,
name|struct
name|vnode
modifier|*
parameter_list|,
name|struct
name|componentname
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_breadstruct
parameter_list|(
name|struct
name|hpfsmount
modifier|*
parameter_list|,
name|lsn_t
parameter_list|,
name|u_int
parameter_list|,
name|u_int32_t
parameter_list|,
name|struct
name|buf
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|hpfs_breadalsec
parameter_list|(
name|hpmp
parameter_list|,
name|lsn
parameter_list|,
name|bpp
parameter_list|)
define|\
value|hpfs_breadstruct(hpmp, lsn, DEV_BSIZE, AS_MAGIC, bpp)
end_define

begin_define
define|#
directive|define
name|hpfs_breaddirblk
parameter_list|(
name|hpmp
parameter_list|,
name|lsn
parameter_list|,
name|bpp
parameter_list|)
define|\
value|hpfs_breadstruct(hpmp, lsn, D_BSIZE, D_MAGIC, bpp)
end_define

begin_if
if|#
directive|if
literal|0
end_if

begin_define
define|#
directive|define
name|hpfs_hplock
parameter_list|(
name|hp
parameter_list|,
name|p
parameter_list|)
define|\
value|lockmgr(&(hp)->h_intlock, LK_EXCLUSIVE, (p), curthread)
end_define

begin_define
define|#
directive|define
name|hpfs_hpunlock
parameter_list|(
name|hp
parameter_list|,
name|p
parameter_list|)
define|\
value|lockmgr(&(hp)->h_intlock, LK_RELEASE, (p), curthread)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|int
name|hpfs_hpbmap
parameter_list|(
name|struct
name|hpfsnode
modifier|*
parameter_list|,
name|daddr_t
parameter_list|,
name|daddr_t
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_truncatealblk
parameter_list|(
name|struct
name|hpfsmount
modifier|*
parameter_list|,
name|alblk_t
modifier|*
parameter_list|,
name|lsn_t
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hpfs_addextent
parameter_list|(
name|struct
name|hpfsmount
modifier|*
parameter_list|,
name|struct
name|hpfsnode
modifier|*
parameter_list|,
name|u_long
parameter_list|)
function_decl|;
end_function_decl

end_unit

