begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$NetBSD: bus.h,v 1.11 2003/07/28 17:35:54 thorpej Exp $	*/
end_comment

begin_comment
comment|/*-  * Copyright (c) 1996, 1997, 1998, 2001 The NetBSD Foundation, Inc.  * All rights reserved.  *  * This code is derived from software contributed to The NetBSD Foundation  * by Jason R. Thorpe of the Numerical Aerospace Simulation Facility,  * NASA Ames Research Center.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by the NetBSD  *	Foundation, Inc. and its contributors.  * 4. Neither the name of The NetBSD Foundation nor the names of its  *    contributors may be used to endorse or promote products derived  *    from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS  * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED  * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*-  * Copyright (c) 1996 Charles M. Hannum.  All rights reserved.  * Copyright (c) 1996 Christopher G. Demetriou.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *      This product includes software developed by Christopher G. Demetriou  *	for the NetBSD Project.  * 4. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MACHINE_BUS_H_
end_ifndef

begin_define
define|#
directive|define
name|_MACHINE_BUS_H_
end_define

begin_include
include|#
directive|include
file|<machine/_bus.h>
end_include

begin_define
define|#
directive|define
name|BUS_SPACE_ALIGNED_POINTER
parameter_list|(
name|p
parameter_list|,
name|t
parameter_list|)
value|ALIGNED_POINTER(p, t)
end_define

begin_define
define|#
directive|define
name|BUS_SPACE_MAXADDR_24BIT
value|0xFFFFFFUL
end_define

begin_define
define|#
directive|define
name|BUS_SPACE_MAXADDR_32BIT
value|0xFFFFFFFFUL
end_define

begin_define
define|#
directive|define
name|BUS_SPACE_MAXSIZE_24BIT
value|0xFFFFFFUL
end_define

begin_define
define|#
directive|define
name|BUS_SPACE_MAXSIZE_32BIT
value|0xFFFFFFFFUL
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__powerpc64__
end_ifdef

begin_define
define|#
directive|define
name|BUS_SPACE_MAXADDR
value|0xFFFFFFFFFFFFFFFFUL
end_define

begin_define
define|#
directive|define
name|BUS_SPACE_MAXSIZE
value|0xFFFFFFFFFFFFFFFFUL
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|BUS_SPACE_MAXADDR
value|0xFFFFFFFFUL
end_define

begin_define
define|#
directive|define
name|BUS_SPACE_MAXSIZE
value|0xFFFFFFFFUL
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|BUS_SPACE_MAP_CACHEABLE
value|0x01
end_define

begin_define
define|#
directive|define
name|BUS_SPACE_MAP_LINEAR
value|0x02
end_define

begin_define
define|#
directive|define
name|BUS_SPACE_MAP_PREFETCHABLE
value|0x04
end_define

begin_define
define|#
directive|define
name|BUS_SPACE_UNRESTRICTED
value|(~0)
end_define

begin_define
define|#
directive|define
name|BUS_SPACE_BARRIER_READ
value|0x01
end_define

begin_define
define|#
directive|define
name|BUS_SPACE_BARRIER_WRITE
value|0x02
end_define

begin_struct_decl
struct_decl|struct
name|bus_space_access
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|bus_space
block|{
comment|/* mapping/unmapping */
name|int
function_decl|(
modifier|*
name|bs_map
function_decl|)
parameter_list|(
name|bus_addr_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|int
parameter_list|,
name|bus_space_handle_t
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_unmap
function_decl|)
parameter_list|(
name|bus_size_t
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bs_subregion
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_space_handle_t
modifier|*
parameter_list|)
function_decl|;
comment|/* allocation/deallocation */
name|int
function_decl|(
modifier|*
name|bs_alloc
function_decl|)
parameter_list|(
name|bus_addr_t
parameter_list|,
name|bus_addr_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|int
parameter_list|,
name|bus_addr_t
modifier|*
parameter_list|,
name|bus_space_handle_t
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_free
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_barrier
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
comment|/* Read single. */
name|uint8_t
function_decl|(
modifier|*
name|bs_r_1
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|uint16_t
function_decl|(
modifier|*
name|bs_r_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|uint32_t
function_decl|(
modifier|*
name|bs_r_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|uint64_t
function_decl|(
modifier|*
name|bs_r_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|uint16_t
function_decl|(
modifier|*
name|bs_r_s_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|uint32_t
function_decl|(
modifier|*
name|bs_r_s_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|uint64_t
function_decl|(
modifier|*
name|bs_r_s_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
comment|/* read multiple */
name|void
function_decl|(
modifier|*
name|bs_rm_1
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint8_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_rm_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint16_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_rm_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint32_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_rm_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint64_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_rm_s_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint16_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_rm_s_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint32_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_rm_s_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint64_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
comment|/* read region */
name|void
function_decl|(
modifier|*
name|bs_rr_1
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint8_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_rr_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint16_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_rr_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint32_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_rr_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint64_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_rr_s_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint16_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_rr_s_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint32_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_rr_s_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint64_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
comment|/* write */
name|void
function_decl|(
modifier|*
name|bs_w_1
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint8_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_w_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint16_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_w_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_w_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint64_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_w_s_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint16_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_w_s_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_w_s_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint64_t
parameter_list|)
function_decl|;
comment|/* write multiple */
name|void
function_decl|(
modifier|*
name|bs_wm_1
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint8_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_wm_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint16_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_wm_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint32_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_wm_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint64_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_wm_s_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint16_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_wm_s_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint32_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_wm_s_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint64_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
comment|/* write region */
name|void
function_decl|(
modifier|*
name|bs_wr_1
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint8_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_wr_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint16_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_wr_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint32_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_wr_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint64_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_wr_s_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint16_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_wr_s_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint32_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_wr_s_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
specifier|const
name|uint64_t
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
comment|/* set multiple */
name|void
function_decl|(
modifier|*
name|bs_sm_1
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint8_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_sm_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint16_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_sm_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint32_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_sm_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint64_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_sm_s_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint16_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_sm_s_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint32_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_sm_s_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint64_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
comment|/* set region */
name|void
function_decl|(
modifier|*
name|bs_sr_1
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint8_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_sr_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint16_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_sr_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint32_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_sr_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint64_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_sr_s_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint16_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_sr_s_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint32_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_sr_s_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint64_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
comment|/* copy region */
name|void
function_decl|(
modifier|*
name|bs_cr_1
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_cr_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_cr_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_cr_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_cr_s_2
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_cr_s_4
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|bs_cr_s_8
function_decl|)
parameter_list|(
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_space_handle_t
parameter_list|,
name|bus_size_t
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|bus_space
name|bs_be_tag
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|bus_space
name|bs_le_tag
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|__bs_c
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|)
value|__CONCAT(a,b)
end_define

begin_define
define|#
directive|define
name|__bs_opname
parameter_list|(
name|op
parameter_list|,
name|size
parameter_list|)
value|__bs_c(__bs_c(__bs_c(bs_,op),_),size)
end_define

begin_define
define|#
directive|define
name|__bs_rs
parameter_list|(
name|sz
parameter_list|,
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|)
define|\
value|(*(t)->__bs_opname(r,sz))(h, o)
end_define

begin_define
define|#
directive|define
name|__bs_ws
parameter_list|(
name|sz
parameter_list|,
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|)
define|\
value|(*(t)->__bs_opname(w,sz))(h, o, v)
end_define

begin_define
define|#
directive|define
name|__bs_nonsingle
parameter_list|(
name|type
parameter_list|,
name|sz
parameter_list|,
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|(*(t)->__bs_opname(type,sz))(h, o, a, c)
end_define

begin_define
define|#
directive|define
name|__bs_set
parameter_list|(
name|type
parameter_list|,
name|sz
parameter_list|,
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|(*(t)->__bs_opname(type,sz))(h, o, v, c)
end_define

begin_define
define|#
directive|define
name|__bs_copy
parameter_list|(
name|sz
parameter_list|,
name|t
parameter_list|,
name|h1
parameter_list|,
name|o1
parameter_list|,
name|h2
parameter_list|,
name|o2
parameter_list|,
name|cnt
parameter_list|)
define|\
value|(*(t)->__bs_opname(c,sz))(h1, o1, h2, o2, cnt)
end_define

begin_comment
comment|/*  * Mapping and unmapping operations.  */
end_comment

begin_define
define|#
directive|define
name|bus_space_map
parameter_list|(
name|t
parameter_list|,
name|a
parameter_list|,
name|s
parameter_list|,
name|c
parameter_list|,
name|hp
parameter_list|)
value|(*(t)->bs_map)(a, s, c, hp)
end_define

begin_define
define|#
directive|define
name|bus_space_unmap
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|s
parameter_list|)
value|(*(t)->bs_unmap)(h, s)
end_define

begin_define
define|#
directive|define
name|bus_space_subregion
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|s
parameter_list|,
name|hp
parameter_list|)
value|(*(t)->bs_subregion)(h, o, s, hp)
end_define

begin_comment
comment|/*  * Allocation and deallocation operations.  */
end_comment

begin_define
define|#
directive|define
name|bus_space_alloc
parameter_list|(
name|t
parameter_list|,
name|rs
parameter_list|,
name|re
parameter_list|,
name|s
parameter_list|,
name|a
parameter_list|,
name|b
parameter_list|,
name|c
parameter_list|,
name|ap
parameter_list|,
name|hp
parameter_list|)
define|\
value|(*(t)->bs_alloc)(rs, re, s, a, b, c, ap, hp)
end_define

begin_define
define|#
directive|define
name|bus_space_free
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|s
parameter_list|)
define|\
value|(*(t)->bs_free)(h, s)
end_define

begin_comment
comment|/*  * Bus barrier operations.  */
end_comment

begin_define
define|#
directive|define
name|bus_space_barrier
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|l
parameter_list|,
name|f
parameter_list|)
value|(*(t)->bs_barrier)(h, o, l, f)
end_define

begin_comment
comment|/*  * Bus read (single) operations.  */
end_comment

begin_define
define|#
directive|define
name|bus_space_read_1
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|)
value|__bs_rs(1,t,h,o)
end_define

begin_define
define|#
directive|define
name|bus_space_read_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|)
value|__bs_rs(2,t,h,o)
end_define

begin_define
define|#
directive|define
name|bus_space_read_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|)
value|__bs_rs(4,t,h,o)
end_define

begin_define
define|#
directive|define
name|bus_space_read_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|)
value|__bs_rs(8,t,h,o)
end_define

begin_define
define|#
directive|define
name|bus_space_read_stream_1
value|bus_space_read_1
end_define

begin_define
define|#
directive|define
name|bus_space_read_stream_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|)
value|__bs_rs(s_2,t,h,o)
end_define

begin_define
define|#
directive|define
name|bus_space_read_stream_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|)
value|__bs_rs(s_4,t,h,o)
end_define

begin_define
define|#
directive|define
name|bus_space_read_stream_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|)
value|__bs_rs(s_8,t,h,o)
end_define

begin_comment
comment|/*  * Bus read multiple operations.  */
end_comment

begin_define
define|#
directive|define
name|bus_space_read_multi_1
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rm,1,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_read_multi_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rm,2,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_read_multi_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rm,4,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_read_multi_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rm,8,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_read_multi_stream_1
value|bus_space_read_multi_1
end_define

begin_define
define|#
directive|define
name|bus_space_read_multi_stream_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rm,s_2,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_read_multi_stream_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rm,s_4,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_read_multi_stream_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rm,s_8,(t),(h),(o),(a),(c))
end_define

begin_comment
comment|/*  * Bus read region operations.  */
end_comment

begin_define
define|#
directive|define
name|bus_space_read_region_1
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rr,1,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_read_region_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rr,2,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_read_region_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rr,4,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_read_region_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rr,8,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_read_region_stream_1
value|bus_space_read_region_1
end_define

begin_define
define|#
directive|define
name|bus_space_read_region_stream_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rr,s_2,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_read_region_stream_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rr,s_4,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_read_region_stream_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(rr,s_8,(t),(h),(o),(a),(c))
end_define

begin_comment
comment|/*  * Bus write (single) operations.  */
end_comment

begin_define
define|#
directive|define
name|bus_space_write_1
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|)
value|__bs_ws(1,(t),(h),(o),(v))
end_define

begin_define
define|#
directive|define
name|bus_space_write_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|)
value|__bs_ws(2,(t),(h),(o),(v))
end_define

begin_define
define|#
directive|define
name|bus_space_write_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|)
value|__bs_ws(4,(t),(h),(o),(v))
end_define

begin_define
define|#
directive|define
name|bus_space_write_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|)
value|__bs_ws(8,(t),(h),(o),(v))
end_define

begin_define
define|#
directive|define
name|bus_space_write_stream_1
value|bus_space_write_1
end_define

begin_define
define|#
directive|define
name|bus_space_write_stream_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|)
value|__bs_ws(s_2,(t),(h),(o),(v))
end_define

begin_define
define|#
directive|define
name|bus_space_write_stream_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|)
value|__bs_ws(s_4,(t),(h),(o),(v))
end_define

begin_define
define|#
directive|define
name|bus_space_write_stream_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|)
value|__bs_ws(s_8,(t),(h),(o),(v))
end_define

begin_comment
comment|/*  * Bus write multiple operations.  */
end_comment

begin_define
define|#
directive|define
name|bus_space_write_multi_1
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wm,1,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_write_multi_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wm,2,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_write_multi_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wm,4,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_write_multi_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wm,8,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_write_multi_stream_1
value|bus_space_write_multi_1
end_define

begin_define
define|#
directive|define
name|bus_space_write_multi_stream_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wm,s_2,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_write_multi_stream_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wm,s_4,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_write_multi_stream_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wm,s_8,(t),(h),(o),(a),(c))
end_define

begin_comment
comment|/*  * Bus write region operations.  */
end_comment

begin_define
define|#
directive|define
name|bus_space_write_region_1
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wr,1,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_write_region_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wr,2,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_write_region_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wr,4,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_write_region_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wr,8,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_write_region_stream_1
value|bus_space_write_region_1
end_define

begin_define
define|#
directive|define
name|bus_space_write_region_stream_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wr,s_2,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_write_region_stream_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wr,s_4,(t),(h),(o),(a),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_write_region_stream_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|a
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_nonsingle(wr,s_8,(t),(h),(o),(a),(c))
end_define

begin_comment
comment|/*  * Set multiple operations.  */
end_comment

begin_define
define|#
directive|define
name|bus_space_set_multi_1
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sm,1,(t),(h),(o),(v),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_set_multi_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sm,2,(t),(h),(o),(v),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_set_multi_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sm,4,(t),(h),(o),(v),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_set_multi_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sm,8,(t),(h),(o),(v),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_set_multi_stream_1
value|bus_space_set_multi_1
end_define

begin_define
define|#
directive|define
name|bus_space_set_multi_stream_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sm,s_2,(t),(h),(o),(v),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_set_multi_stream_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sm,s_4,(t),(h),(o),(v),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_set_multi_stream_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sm,s_8,(t),(h),(o),(v),(c))
end_define

begin_comment
comment|/*  * Set region operations.  */
end_comment

begin_define
define|#
directive|define
name|bus_space_set_region_1
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sr,1,(t),(h),(o),(v),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_set_region_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sr,2,(t),(h),(o),(v),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_set_region_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sr,4,(t),(h),(o),(v),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_set_region_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sr,8,(t),(h),(o),(v),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_set_region_stream_1
value|bus_space_set_region_1
end_define

begin_define
define|#
directive|define
name|bus_space_set_region_stream_2
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sr,s_2,(t),(h),(o),(v),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_set_region_stream_4
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sr,s_4,(t),(h),(o),(v),(c))
end_define

begin_define
define|#
directive|define
name|bus_space_set_region_stream_8
parameter_list|(
name|t
parameter_list|,
name|h
parameter_list|,
name|o
parameter_list|,
name|v
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_set(sr,s_8,(t),(h),(o),(v),(c))
end_define

begin_if
if|#
directive|if
literal|0
end_if

begin_comment
comment|/*  * Copy operations.  */
end_comment

begin_define
define|#
directive|define
name|bus_space_copy_region_1
parameter_list|(
name|t
parameter_list|,
name|h1
parameter_list|,
name|o1
parameter_list|,
name|h2
parameter_list|,
name|o2
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_copy(1, t, h1, o1, h2, o2, c)
end_define

begin_define
define|#
directive|define
name|bus_space_copy_region_2
parameter_list|(
name|t
parameter_list|,
name|h1
parameter_list|,
name|o1
parameter_list|,
name|h2
parameter_list|,
name|o2
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_copy(2, t, h1, o1, h2, o2, c)
end_define

begin_define
define|#
directive|define
name|bus_space_copy_region_4
parameter_list|(
name|t
parameter_list|,
name|h1
parameter_list|,
name|o1
parameter_list|,
name|h2
parameter_list|,
name|o2
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_copy(4, t, h1, o1, h2, o2, c)
end_define

begin_define
define|#
directive|define
name|bus_space_copy_region_8
parameter_list|(
name|t
parameter_list|,
name|h1
parameter_list|,
name|o1
parameter_list|,
name|h2
parameter_list|,
name|o2
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_copy(8, t, h1, o1, h2, o2, c)
end_define

begin_define
define|#
directive|define
name|bus_space_copy_region_stream_1
value|bus_space_copy_region_1
end_define

begin_define
define|#
directive|define
name|bus_space_copy_region_stream_2
parameter_list|(
name|t
parameter_list|,
name|h1
parameter_list|,
name|o1
parameter_list|,
name|h2
parameter_list|,
name|o2
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_copy(s_2, t, h1, o1, h2, o2, c)
end_define

begin_define
define|#
directive|define
name|bus_space_copy_region_stream_4
parameter_list|(
name|t
parameter_list|,
name|h1
parameter_list|,
name|o1
parameter_list|,
name|h2
parameter_list|,
name|o2
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_copy(s_4, t, h1, o1, h2, o2, c)
end_define

begin_define
define|#
directive|define
name|bus_space_copy_region_stream_8
parameter_list|(
name|t
parameter_list|,
name|h1
parameter_list|,
name|o1
parameter_list|,
name|h2
parameter_list|,
name|o2
parameter_list|,
name|c
parameter_list|)
define|\
value|__bs_copy(s_8, t, h1, o1, h2, o2, c)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<machine/bus_dma.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _MACHINE_BUS_H_ */
end_comment

end_unit

