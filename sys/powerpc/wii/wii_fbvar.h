begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (C) 2012 Margarida Gouveia  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer,  *    without modification, immediately at the beginning of the file.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_POWERPC_WII_WIIFB_H
end_ifndef

begin_define
define|#
directive|define
name|_POWERPC_WII_WIIFB_H
end_define

begin_define
define|#
directive|define
name|WIIFB_FONT_HEIGHT
value|8
end_define

begin_enum
enum|enum
name|wiifb_format
block|{
name|WIIFB_FORMAT_NTSC
init|=
literal|0
block|,
name|WIIFB_FORMAT_PAL
init|=
literal|1
block|,
name|WIIFB_FORMAT_MPAL
init|=
literal|2
block|,
name|WIIFB_FORMAT_DEBUG
init|=
literal|3
block|}
enum|;
end_enum

begin_enum
enum|enum
name|wiifb_mode
block|{
name|WIIFB_MODE_NTSC_480i
init|=
literal|0
block|,
name|WIIFB_MODE_NTSC_480p
init|=
literal|1
block|,
name|WIIFB_MODE_PAL_576i
init|=
literal|2
block|,
name|WIIFB_MODE_PAL_480i
init|=
literal|3
block|,
name|WIIFB_MODE_PAL_480p
init|=
literal|4
block|}
enum|;
end_enum

begin_struct
struct|struct
name|wiifb_mode_desc
block|{
specifier|const
name|char
modifier|*
name|fd_name
decl_stmt|;
name|unsigned
name|int
name|fd_width
decl_stmt|;
name|unsigned
name|int
name|fd_height
decl_stmt|;
name|unsigned
name|int
name|fd_lines
decl_stmt|;
name|uint8_t
name|fd_flags
decl_stmt|;
define|#
directive|define
name|WIIFB_MODE_FLAG_PROGRESSIVE
value|0x00
define|#
directive|define
name|WIIFB_MODE_FLAG_INTERLACED
value|0x01
block|}
struct|;
end_struct

begin_struct
struct|struct
name|wiifb_softc
block|{
name|video_adapter_t
name|sc_va
decl_stmt|;
name|struct
name|cdev
modifier|*
name|sc_si
decl_stmt|;
name|int
name|sc_console
decl_stmt|;
name|intptr_t
name|sc_reg_addr
decl_stmt|;
name|unsigned
name|int
name|sc_reg_size
decl_stmt|;
name|intptr_t
name|sc_fb_addr
decl_stmt|;
name|unsigned
name|int
name|sc_fb_size
decl_stmt|;
name|unsigned
name|int
name|sc_height
decl_stmt|;
name|unsigned
name|int
name|sc_width
decl_stmt|;
name|unsigned
name|int
name|sc_stride
decl_stmt|;
name|unsigned
name|int
name|sc_xmargin
decl_stmt|;
name|unsigned
name|int
name|sc_ymargin
decl_stmt|;
name|boolean_t
name|sc_component
decl_stmt|;
name|enum
name|wiifb_format
name|sc_format
decl_stmt|;
name|struct
name|wiifb_mode_desc
modifier|*
name|sc_mode
decl_stmt|;
name|unsigned
name|int
name|sc_vtiming
decl_stmt|;
name|unsigned
name|int
name|sc_htiming
decl_stmt|;
name|unsigned
name|char
modifier|*
name|sc_font
decl_stmt|;
name|int
name|sc_initialized
decl_stmt|;
name|int
name|sc_rrid
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Vertical timing  * 16 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_VTIMING
value|0x00
end_define

begin_struct
struct|struct
name|wiifb_vtiming
block|{
name|uint8_t
name|vt_eqpulse
decl_stmt|;
name|uint16_t
name|vt_actvideo
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_vtiming_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_vtiming
modifier|*
name|vt
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_VTIMING
operator|)
decl_stmt|;
name|vt
operator|->
name|vt_eqpulse
operator|=
operator|*
name|reg
operator|&
literal|0xf
expr_stmt|;
name|vt
operator|->
name|vt_actvideo
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|4
operator|)
operator|&
literal|0x3ff
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_vtiming_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_vtiming
modifier|*
name|vt
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_VTIMING
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|vt
operator|->
name|vt_actvideo
operator|&
literal|0x3ff
operator|)
operator|<<
literal|4
operator|)
operator||
operator|(
name|vt
operator|->
name|vt_eqpulse
operator|&
literal|0xf
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Display configuration  * 16 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_DISPCFG
value|0x02
end_define

begin_struct
struct|struct
name|wiifb_dispcfg
block|{
name|uint8_t
name|dc_enable
decl_stmt|;
name|uint8_t
name|dc_reset
decl_stmt|;
name|uint8_t
name|dc_noninterlaced
decl_stmt|;
name|uint8_t
name|dc_3dmode
decl_stmt|;
name|uint8_t
name|dc_latchenb0
decl_stmt|;
name|uint8_t
name|dc_latchenb1
decl_stmt|;
name|enum
name|wiifb_format
name|dc_format
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_dispcfg_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_dispcfg
modifier|*
name|dc
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_DISPCFG
operator|)
decl_stmt|;
name|dc
operator|->
name|dc_enable
operator|=
operator|*
name|reg
operator|&
literal|0x1
expr_stmt|;
name|dc
operator|->
name|dc_reset
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|1
operator|)
operator|&
literal|0x1
expr_stmt|;
name|dc
operator|->
name|dc_noninterlaced
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|2
operator|)
operator|&
literal|0x1
expr_stmt|;
name|dc
operator|->
name|dc_3dmode
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|3
operator|)
operator|&
literal|0x1
expr_stmt|;
name|dc
operator|->
name|dc_latchenb0
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|4
operator|)
operator|&
literal|0x3
expr_stmt|;
name|dc
operator|->
name|dc_latchenb1
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|6
operator|)
operator|&
literal|0x3
expr_stmt|;
name|dc
operator|->
name|dc_format
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|8
operator|)
operator|&
literal|0x3
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_dispcfg_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_dispcfg
modifier|*
name|dc
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_DISPCFG
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|dc
operator|->
name|dc_format
operator|&
literal|0x3
operator|)
operator|<<
literal|8
operator|)
operator||
operator|(
operator|(
name|dc
operator|->
name|dc_latchenb1
operator|&
literal|0x3
operator|)
operator|<<
literal|6
operator|)
operator||
operator|(
operator|(
name|dc
operator|->
name|dc_latchenb0
operator|&
literal|0x3
operator|)
operator|<<
literal|4
operator|)
operator||
operator|(
operator|(
name|dc
operator|->
name|dc_3dmode
operator|&
literal|0x1
operator|)
operator|<<
literal|3
operator|)
operator||
operator|(
operator|(
name|dc
operator|->
name|dc_noninterlaced
operator|&
literal|0x1
operator|)
operator|<<
literal|2
operator|)
operator||
operator|(
operator|(
name|dc
operator|->
name|dc_reset
operator|&
literal|0x1
operator|)
operator|<<
literal|1
operator|)
operator||
operator|(
name|dc
operator|->
name|dc_enable
operator|&
literal|0x1
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Horizontal Timing 0  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_HTIMING0
value|0x04
end_define

begin_struct
struct|struct
name|wiifb_htiming0
block|{
name|uint16_t
name|ht0_hlinew
decl_stmt|;
comment|/* half line width */
name|uint8_t
name|ht0_hcolourend
decl_stmt|;
name|uint8_t
name|ht0_hcolourstart
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_htiming0_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_htiming0
modifier|*
name|ht0
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_HTIMING0
operator|)
decl_stmt|;
name|ht0
operator|->
name|ht0_hlinew
operator|=
operator|*
name|reg
operator|&
literal|0x1ff
expr_stmt|;
name|ht0
operator|->
name|ht0_hcolourend
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|16
operator|)
operator|&
literal|0x7f
expr_stmt|;
name|ht0
operator|->
name|ht0_hcolourstart
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|24
operator|)
operator|&
literal|0x7f
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_htiming0_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_htiming0
modifier|*
name|ht0
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_HTIMING0
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|ht0
operator|->
name|ht0_hcolourstart
operator|&
literal|0x7f
operator|)
operator|<<
literal|24
operator|)
operator||
operator|(
operator|(
name|ht0
operator|->
name|ht0_hcolourend
operator|&
literal|0x7f
operator|)
operator|<<
literal|16
operator|)
operator||
operator|(
name|ht0
operator|->
name|ht0_hlinew
operator|&
literal|0x1ff
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Horizontal Timing 1  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_HTIMING1
value|0x08
end_define

begin_struct
struct|struct
name|wiifb_htiming1
block|{
name|uint8_t
name|ht1_hsyncw
decl_stmt|;
name|uint16_t
name|ht1_hblankend
decl_stmt|;
name|uint16_t
name|ht1_hblankstart
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_htiming1_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_htiming1
modifier|*
name|ht1
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_HTIMING1
operator|)
decl_stmt|;
name|ht1
operator|->
name|ht1_hsyncw
operator|=
operator|*
name|reg
operator|&
literal|0x7f
expr_stmt|;
name|ht1
operator|->
name|ht1_hblankend
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|7
operator|)
operator|&
literal|0x3ff
expr_stmt|;
name|ht1
operator|->
name|ht1_hblankstart
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|17
operator|)
operator|&
literal|0x3ff
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_htiming1_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_htiming1
modifier|*
name|ht1
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_HTIMING1
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|ht1
operator|->
name|ht1_hblankstart
operator|&
literal|0x3ff
operator|)
operator|<<
literal|17
operator|)
operator||
operator|(
operator|(
name|ht1
operator|->
name|ht1_hblankend
operator|&
literal|0x3ff
operator|)
operator|<<
literal|7
operator|)
operator||
operator|(
name|ht1
operator|->
name|ht1_hsyncw
operator|&
literal|0x7f
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Vertical Timing Odd  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_VTIMINGODD
value|0x0c
end_define

begin_struct
struct|struct
name|wiifb_vtimingodd
block|{
name|uint16_t
name|vto_preb
decl_stmt|;
comment|/* pre blanking */
name|uint16_t
name|vto_postb
decl_stmt|;
comment|/* post blanking */
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_vtimingodd_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_vtimingodd
modifier|*
name|vto
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_VTIMINGODD
operator|)
decl_stmt|;
name|vto
operator|->
name|vto_preb
operator|=
operator|*
name|reg
operator|&
literal|0x3ff
expr_stmt|;
name|vto
operator|->
name|vto_postb
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|16
operator|)
operator|&
literal|0x3ff
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_vtimingodd_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_vtimingodd
modifier|*
name|vto
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_VTIMINGODD
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|vto
operator|->
name|vto_postb
operator|&
literal|0x3ff
operator|)
operator|<<
literal|16
operator|)
operator||
operator|(
name|vto
operator|->
name|vto_preb
operator|&
literal|0x3ff
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Vertical Timing Even  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_VTIMINGEVEN
value|0x10
end_define

begin_struct
struct|struct
name|wiifb_vtimingeven
block|{
name|uint16_t
name|vte_preb
decl_stmt|;
comment|/* pre blanking */
name|uint16_t
name|vte_postb
decl_stmt|;
comment|/* post blanking */
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_vtimingeven_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_vtimingeven
modifier|*
name|vte
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_VTIMINGEVEN
operator|)
decl_stmt|;
name|vte
operator|->
name|vte_preb
operator|=
operator|*
name|reg
operator|&
literal|0x3ff
expr_stmt|;
name|vte
operator|->
name|vte_postb
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|16
operator|)
operator|&
literal|0x3ff
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_vtimingeven_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_vtimingeven
modifier|*
name|vte
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_VTIMINGEVEN
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|vte
operator|->
name|vte_postb
operator|&
literal|0x3ff
operator|)
operator|<<
literal|16
operator|)
operator||
operator|(
name|vte
operator|->
name|vte_preb
operator|&
literal|0x3ff
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Burst Blanking Odd Interval  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_BURSTBLANKODD
value|0x14
end_define

begin_struct
struct|struct
name|wiifb_burstblankodd
block|{
name|uint8_t
name|bbo_bs1
decl_stmt|;
name|uint16_t
name|bbo_be1
decl_stmt|;
name|uint8_t
name|bbo_bs3
decl_stmt|;
name|uint16_t
name|bbo_be3
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_burstblankodd_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_burstblankodd
modifier|*
name|bbo
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_BURSTBLANKODD
operator|)
decl_stmt|;
name|bbo
operator|->
name|bbo_bs1
operator|=
operator|*
name|reg
operator|&
literal|0x1f
expr_stmt|;
name|bbo
operator|->
name|bbo_be1
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|5
operator|)
operator|&
literal|0x7ff
expr_stmt|;
name|bbo
operator|->
name|bbo_bs3
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|16
operator|)
operator|&
literal|0x1f
expr_stmt|;
name|bbo
operator|->
name|bbo_be3
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|21
operator|)
operator|&
literal|0x7ff
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_burstblankodd_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_burstblankodd
modifier|*
name|bbo
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_BURSTBLANKODD
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|bbo
operator|->
name|bbo_be3
operator|&
literal|0x7ff
operator|)
operator|<<
literal|21
operator|)
operator||
operator|(
operator|(
name|bbo
operator|->
name|bbo_bs3
operator|&
literal|0x1f
operator|)
operator|<<
literal|16
operator|)
operator||
operator|(
operator|(
name|bbo
operator|->
name|bbo_be1
operator|&
literal|0x7ff
operator|)
operator|<<
literal|5
operator|)
operator||
operator|(
name|bbo
operator|->
name|bbo_bs1
operator|&
literal|0x1f
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Burst Blanking Even Interval  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_BURSTBLANKEVEN
value|0x18
end_define

begin_struct
struct|struct
name|wiifb_burstblankeven
block|{
name|uint8_t
name|bbe_bs2
decl_stmt|;
name|uint16_t
name|bbe_be2
decl_stmt|;
name|uint8_t
name|bbe_bs4
decl_stmt|;
name|uint16_t
name|bbe_be4
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_burstblankeven_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_burstblankeven
modifier|*
name|bbe
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_BURSTBLANKEVEN
operator|)
decl_stmt|;
name|bbe
operator|->
name|bbe_bs2
operator|=
operator|*
name|reg
operator|&
literal|0x1f
expr_stmt|;
name|bbe
operator|->
name|bbe_be2
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|5
operator|)
operator|&
literal|0x7ff
expr_stmt|;
name|bbe
operator|->
name|bbe_bs4
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|16
operator|)
operator|&
literal|0x1f
expr_stmt|;
name|bbe
operator|->
name|bbe_be4
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|21
operator|)
operator|&
literal|0x7ff
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_burstblankeven_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_burstblankeven
modifier|*
name|bbe
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_BURSTBLANKEVEN
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|bbe
operator|->
name|bbe_be4
operator|&
literal|0x7ff
operator|)
operator|<<
literal|21
operator|)
operator||
operator|(
operator|(
name|bbe
operator|->
name|bbe_bs4
operator|&
literal|0x1f
operator|)
operator|<<
literal|16
operator|)
operator||
operator|(
operator|(
name|bbe
operator|->
name|bbe_be2
operator|&
literal|0x7ff
operator|)
operator|<<
literal|5
operator|)
operator||
operator|(
name|bbe
operator|->
name|bbe_bs2
operator|&
literal|0x1f
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Top Field Base Left  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_TOPFIELDBASEL
value|0x1c
end_define

begin_struct
struct|struct
name|wiifb_topfieldbasel
block|{
name|uint32_t
name|tfbl_fbaddr
decl_stmt|;
name|uint8_t
name|tfbl_xoffset
decl_stmt|;
name|uint8_t
name|tfbl_pageoffbit
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_topfieldbasel_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_topfieldbasel
modifier|*
name|tfbl
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_TOPFIELDBASEL
operator|)
decl_stmt|;
name|tfbl
operator|->
name|tfbl_fbaddr
operator|=
operator|*
name|reg
operator|&
literal|0xffffff
expr_stmt|;
name|tfbl
operator|->
name|tfbl_xoffset
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|24
operator|)
operator|&
literal|0xf
expr_stmt|;
name|tfbl
operator|->
name|tfbl_pageoffbit
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|28
operator|)
operator|&
literal|0x1
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_topfieldbasel_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_topfieldbasel
modifier|*
name|tfbl
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_TOPFIELDBASEL
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|tfbl
operator|->
name|tfbl_pageoffbit
operator|&
literal|0x1
operator|)
operator|<<
literal|28
operator|)
operator||
operator|(
operator|(
name|tfbl
operator|->
name|tfbl_xoffset
operator|&
literal|0xf
operator|)
operator|<<
literal|24
operator|)
operator||
operator|(
name|tfbl
operator|->
name|tfbl_fbaddr
operator|&
literal|0xffffff
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Top Field Base Right  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_TOPFIELDBASER
value|0x20
end_define

begin_struct
struct|struct
name|wiifb_topfieldbaser
block|{
name|uint32_t
name|tfbr_fbaddr
decl_stmt|;
name|uint8_t
name|tfbr_pageoffbit
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_topfieldbaser_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_topfieldbaser
modifier|*
name|tfbr
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_TOPFIELDBASER
operator|)
decl_stmt|;
name|tfbr
operator|->
name|tfbr_fbaddr
operator|=
operator|*
name|reg
operator|&
literal|0xffffff
expr_stmt|;
name|tfbr
operator|->
name|tfbr_pageoffbit
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|28
operator|)
operator|&
literal|0x1
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_topfieldbaser_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_topfieldbaser
modifier|*
name|tfbr
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_TOPFIELDBASER
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|tfbr
operator|->
name|tfbr_pageoffbit
operator|&
literal|0x1
operator|)
operator|<<
literal|28
operator|)
operator||
operator|(
name|tfbr
operator|->
name|tfbr_fbaddr
operator|&
literal|0xffffff
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Bottom Field Base Left  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_BOTTOMFIELDBASEL
value|0x24
end_define

begin_struct
struct|struct
name|wiifb_bottomfieldbasel
block|{
name|uint32_t
name|bfbl_fbaddr
decl_stmt|;
name|uint8_t
name|bfbl_xoffset
decl_stmt|;
name|uint8_t
name|bfbl_pageoffbit
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_bottomfieldbasel_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_bottomfieldbasel
modifier|*
name|bfbl
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_BOTTOMFIELDBASEL
operator|)
decl_stmt|;
name|bfbl
operator|->
name|bfbl_fbaddr
operator|=
operator|*
name|reg
operator|&
literal|0xffffff
expr_stmt|;
name|bfbl
operator|->
name|bfbl_xoffset
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|24
operator|)
operator|&
literal|0xf
expr_stmt|;
name|bfbl
operator|->
name|bfbl_pageoffbit
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|28
operator|)
operator|&
literal|0x1
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_bottomfieldbasel_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_bottomfieldbasel
modifier|*
name|bfbl
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_BOTTOMFIELDBASEL
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|bfbl
operator|->
name|bfbl_pageoffbit
operator|&
literal|0x1
operator|)
operator|<<
literal|28
operator|)
operator||
operator|(
operator|(
name|bfbl
operator|->
name|bfbl_xoffset
operator|&
literal|0xf
operator|)
operator|<<
literal|24
operator|)
operator||
operator|(
name|bfbl
operator|->
name|bfbl_fbaddr
operator|&
literal|0xffffff
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Bottom Field Base Right  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_BOTTOMFIELDBASER
value|0x28
end_define

begin_struct
struct|struct
name|wiifb_bottomfieldbaser
block|{
name|uint32_t
name|bfbr_fbaddr
decl_stmt|;
name|uint8_t
name|bfbr_pageoffbit
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_bottomfieldbaser_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_bottomfieldbaser
modifier|*
name|bfbr
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_BOTTOMFIELDBASER
operator|)
decl_stmt|;
name|bfbr
operator|->
name|bfbr_fbaddr
operator|=
operator|*
name|reg
operator|&
literal|0xffffff
expr_stmt|;
name|bfbr
operator|->
name|bfbr_pageoffbit
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|28
operator|)
operator|&
literal|0x1
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_bottomfieldbaser_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_bottomfieldbaser
modifier|*
name|bfbr
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_BOTTOMFIELDBASER
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|bfbr
operator|->
name|bfbr_pageoffbit
operator|&
literal|0x1
operator|)
operator|<<
literal|28
operator|)
operator||
operator|(
name|bfbr
operator|->
name|bfbr_fbaddr
operator|&
literal|0xffffff
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Display Position Vertical  * 16 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_DISPPOSV
value|0x2c
end_define

begin_function
specifier|static
name|__inline
name|uint16_t
name|wiifb_dispposv_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_DISPPOSV
operator|)
decl_stmt|;
return|return
operator|(
operator|*
name|reg
operator|&
literal|0x7ff
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_dispposv_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|uint16_t
name|val
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_DISPPOSV
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
name|val
operator|&
literal|0x7ff
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Display Position Horizontal  * 16 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_DISPPOSH
value|0x2e
end_define

begin_function
specifier|static
name|__inline
name|uint16_t
name|wiifb_dispposh_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_DISPPOSH
operator|)
decl_stmt|;
return|return
operator|(
operator|*
name|reg
operator|&
literal|0x7ff
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_dispposh_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|uint16_t
name|val
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_DISPPOSH
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
name|val
operator|&
literal|0x7ff
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Display Interrupts.  * There are 4 display interrupt registers, all 32 bit.  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_DISPINT0
value|0x30
end_define

begin_define
define|#
directive|define
name|WIIFB_REG_DISPINT1
value|0x34
end_define

begin_define
define|#
directive|define
name|WIIFB_REG_DISPINT2
value|0x38
end_define

begin_define
define|#
directive|define
name|WIIFB_REG_DISPINT3
value|0x3c
end_define

begin_struct
struct|struct
name|wiifb_dispint
block|{
name|uint16_t
name|di_htiming
decl_stmt|;
name|uint16_t
name|di_vtiming
decl_stmt|;
name|uint8_t
name|di_enable
decl_stmt|;
name|uint8_t
name|di_irq
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_dispint_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|int
name|regno
parameter_list|,
name|struct
name|wiifb_dispint
modifier|*
name|di
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_DISPINT0
operator|+
name|regno
operator|*
literal|4
operator|)
decl_stmt|;
name|di
operator|->
name|di_htiming
operator|=
operator|*
name|reg
operator|&
literal|0x3ff
expr_stmt|;
name|di
operator|->
name|di_vtiming
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|16
operator|)
operator|&
literal|0x3ff
expr_stmt|;
name|di
operator|->
name|di_enable
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|28
operator|)
operator|&
literal|0x1
expr_stmt|;
name|di
operator|->
name|di_irq
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|31
operator|)
operator|&
literal|0x1
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_dispint_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|int
name|regno
parameter_list|,
name|struct
name|wiifb_dispint
modifier|*
name|di
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_DISPINT0
operator|+
name|regno
operator|*
literal|4
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|di
operator|->
name|di_irq
operator|&
literal|0x1
operator|)
operator|<<
literal|31
operator|)
operator||
operator|(
operator|(
name|di
operator|->
name|di_enable
operator|&
literal|0x1
operator|)
operator|<<
literal|28
operator|)
operator||
operator|(
operator|(
name|di
operator|->
name|di_vtiming
operator|&
literal|0x3ff
operator|)
operator|<<
literal|16
operator|)
operator||
operator|(
name|di
operator|->
name|di_htiming
operator|&
literal|0x3ff
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Display Latch 0  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_DISPLAYTCH0
value|0x40
end_define

begin_comment
comment|/*  * Display Latch 1  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_DISPLAYTCH1
value|0x44
end_define

begin_comment
comment|/*  * Picture Configuration  * 16 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_PICCONF
value|0x48
end_define

begin_struct
struct|struct
name|wiifb_picconf
block|{
name|uint8_t
name|pc_strides
decl_stmt|;
comment|/* strides per line (words) */
name|uint8_t
name|pc_reads
decl_stmt|;
comment|/* reads per line (words */
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_picconf_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_picconf
modifier|*
name|pc
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_PICCONF
operator|)
decl_stmt|;
name|pc
operator|->
name|pc_strides
operator|=
operator|*
name|reg
operator|&
literal|0xff
expr_stmt|;
name|pc
operator|->
name|pc_reads
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|8
operator|)
operator|&
literal|0xff
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_picconf_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_picconf
modifier|*
name|pc
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_PICCONF
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|pc
operator|->
name|pc_reads
operator|&
literal|0xff
operator|)
operator|<<
literal|8
operator|)
operator||
operator|(
name|pc
operator|->
name|pc_strides
operator|&
literal|0xff
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Horizontal Scaling  * 16 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_HSCALING
value|0x4a
end_define

begin_struct
struct|struct
name|wiifb_hscaling
block|{
name|uint16_t
name|hs_step
decl_stmt|;
name|uint8_t
name|hs_enable
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
name|__inline
name|void
name|wiifb_hscaling_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_hscaling
modifier|*
name|hs
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_HSCALING
operator|)
decl_stmt|;
name|hs
operator|->
name|hs_step
operator|=
operator|*
name|reg
operator|&
literal|0x1ff
expr_stmt|;
name|hs
operator|->
name|hs_enable
operator|=
operator|(
operator|*
name|reg
operator|>>
literal|12
operator|)
operator|&
literal|0x1
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_hscaling_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|wiifb_hscaling
modifier|*
name|hs
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_HSCALING
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
operator|(
operator|(
name|hs
operator|->
name|hs_step
operator|&
literal|0x1ff
operator|)
operator|<<
literal|12
operator|)
operator||
operator|(
name|hs
operator|->
name|hs_enable
operator|&
literal|0x1
operator|)
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Filter Coeficient Table 0-6  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_FILTCOEFT0
value|0x4c
end_define

begin_define
define|#
directive|define
name|WIIFB_REG_FILTCOEFT1
value|0x50
end_define

begin_define
define|#
directive|define
name|WIIFB_REG_FILTCOEFT2
value|0x54
end_define

begin_define
define|#
directive|define
name|WIIFB_REG_FILTCOEFT3
value|0x58
end_define

begin_define
define|#
directive|define
name|WIIFB_REG_FILTCOEFT4
value|0x5c
end_define

begin_define
define|#
directive|define
name|WIIFB_REG_FILTCOEFT5
value|0x60
end_define

begin_define
define|#
directive|define
name|WIIFB_REG_FILTCOEFT6
value|0x64
end_define

begin_function
specifier|static
name|__inline
name|void
name|wiifb_filtcoeft_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|unsigned
name|int
name|regno
parameter_list|,
name|uint32_t
name|coeft
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_FILTCOEFT0
operator|+
literal|4
operator|*
name|regno
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
name|coeft
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Anti-aliasing  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_ANTIALIAS
value|0x68
end_define

begin_function
specifier|static
name|__inline
name|void
name|wiifb_antialias_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|uint32_t
name|antialias
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_ANTIALIAS
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
name|antialias
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Video Clock  * 16 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_VIDEOCLK
value|0x6c
end_define

begin_function
specifier|static
name|__inline
name|uint8_t
name|wiifb_videoclk_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_VIDEOCLK
operator|)
decl_stmt|;
return|return
operator|(
operator|*
name|reg
operator|&
literal|0x1
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_videoclk_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|uint16_t
name|clk54mhz
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_VIDEOCLK
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
name|clk54mhz
operator|&
literal|0x1
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * DTV Status  * 16 bit  *  * DTV is another name for the Component Cable output.  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_DTVSTATUS
value|0x6e
end_define

begin_function
specifier|static
name|__inline
name|uint16_t
name|wiifb_dtvstatus_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_DTVSTATUS
operator|)
decl_stmt|;
return|return
operator|(
operator|*
name|reg
operator|&
literal|0x1
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|uint16_t
name|wiifb_component_enabled
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|)
block|{
return|return
name|wiifb_dtvstatus_read
argument_list|(
name|sc
argument_list|)
return|;
block|}
end_function

begin_comment
comment|/*  * Horizontal Scaling Width  * 16 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_HSCALINGW
value|0x70
end_define

begin_function
specifier|static
name|__inline
name|uint16_t
name|wiifb_hscalingw_read
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_HSCALINGW
operator|)
decl_stmt|;
return|return
operator|(
operator|*
name|reg
operator|&
literal|0x3ff
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|wiifb_hscalingw_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|uint16_t
name|width
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_HSCALINGW
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
name|width
operator|&
literal|0x3ff
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*   * Horizontal Border End  * For debug mode only. Not used by this driver.  * 16 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_HBORDEREND
value|0x72
end_define

begin_function
specifier|static
name|__inline
name|void
name|wiifb_hborderend_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|uint16_t
name|border
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_HBORDEREND
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
name|border
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*   * Horizontal Border Start  * 16 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_HBORDERSTART
value|0x74
end_define

begin_function
specifier|static
name|__inline
name|void
name|wiifb_hborderstart_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|uint16_t
name|border
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_HBORDERSTART
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
name|border
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Unknown register  * 16 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_UNKNOWN1
value|0x76
end_define

begin_function
specifier|static
name|__inline
name|void
name|wiifb_unknown1_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|uint16_t
name|unknown
parameter_list|)
block|{
specifier|volatile
name|uint16_t
modifier|*
name|reg
init|=
operator|(
name|uint16_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_UNKNOWN1
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
name|unknown
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*   * Unknown register  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_UNKNOWN2
value|0x78
end_define

begin_function
specifier|static
name|__inline
name|void
name|wiifb_unknown2_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|uint32_t
name|unknown
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_UNKNOWN2
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
name|unknown
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Unknown register  * 32 bit  */
end_comment

begin_define
define|#
directive|define
name|WIIFB_REG_UNKNOWN3
value|0x7c
end_define

begin_function
specifier|static
name|__inline
name|void
name|wiifb_unknown3_write
parameter_list|(
name|struct
name|wiifb_softc
modifier|*
name|sc
parameter_list|,
name|uint32_t
name|unknown
parameter_list|)
block|{
specifier|volatile
name|uint32_t
modifier|*
name|reg
init|=
operator|(
name|uint32_t
operator|*
operator|)
operator|(
name|sc
operator|->
name|sc_reg_addr
operator|+
name|WIIFB_REG_UNKNOWN3
operator|)
decl_stmt|;
operator|*
name|reg
operator|=
name|unknown
expr_stmt|;
name|powerpc_sync
argument_list|()
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _POWERPC_WII_WIIFB_H */
end_comment

end_unit

