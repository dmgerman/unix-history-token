begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2008, Pyun YongHyeon<yongari@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice unmodified, this list of conditions, and the following  *    disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_IF_AGEVAR_H
end_ifndef

begin_define
define|#
directive|define
name|_IF_AGEVAR_H
end_define

begin_define
define|#
directive|define
name|AGE_TX_RING_CNT
value|256
end_define

begin_define
define|#
directive|define
name|AGE_RX_RING_CNT
value|256
end_define

begin_define
define|#
directive|define
name|AGE_RR_RING_CNT
value|(AGE_TX_RING_CNT + AGE_RX_RING_CNT)
end_define

begin_comment
comment|/* The following ring alignments are just guessing. */
end_comment

begin_define
define|#
directive|define
name|AGE_TX_RING_ALIGN
value|16
end_define

begin_define
define|#
directive|define
name|AGE_RX_RING_ALIGN
value|16
end_define

begin_define
define|#
directive|define
name|AGE_RR_RING_ALIGN
value|16
end_define

begin_define
define|#
directive|define
name|AGE_CMB_ALIGN
value|16
end_define

begin_define
define|#
directive|define
name|AGE_SMB_ALIGN
value|16
end_define

begin_define
define|#
directive|define
name|AGE_TSO_MAXSEGSIZE
value|4096
end_define

begin_define
define|#
directive|define
name|AGE_TSO_MAXSIZE
value|(65535 + sizeof(struct ether_vlan_header))
end_define

begin_define
define|#
directive|define
name|AGE_MAXTXSEGS
value|32
end_define

begin_define
define|#
directive|define
name|AGE_ADDR_LO
parameter_list|(
name|x
parameter_list|)
value|((uint64_t) (x)& 0xFFFFFFFF)
end_define

begin_define
define|#
directive|define
name|AGE_ADDR_HI
parameter_list|(
name|x
parameter_list|)
value|((uint64_t) (x)>> 32)
end_define

begin_define
define|#
directive|define
name|AGE_MSI_MESSAGES
value|1
end_define

begin_define
define|#
directive|define
name|AGE_MSIX_MESSAGES
value|1
end_define

begin_comment
comment|/* TODO : Should get real jumbo MTU size. */
end_comment

begin_define
define|#
directive|define
name|AGE_JUMBO_FRAMELEN
value|10240
end_define

begin_define
define|#
directive|define
name|AGE_JUMBO_MTU
define|\
value|(AGE_JUMBO_FRAMELEN - ETHER_VLAN_ENCAP_LEN - 	\ 	 ETHER_HDR_LEN - ETHER_CRC_LEN)
end_define

begin_define
define|#
directive|define
name|AGE_DESC_INC
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|((x) = ((x) + 1) % (y))
end_define

begin_define
define|#
directive|define
name|AGE_PROC_MIN
value|30
end_define

begin_define
define|#
directive|define
name|AGE_PROC_MAX
value|(AGE_RX_RING_CNT - 1)
end_define

begin_define
define|#
directive|define
name|AGE_PROC_DEFAULT
value|(AGE_RX_RING_CNT / 2)
end_define

begin_struct
struct|struct
name|age_txdesc
block|{
name|struct
name|mbuf
modifier|*
name|tx_m
decl_stmt|;
name|bus_dmamap_t
name|tx_dmamap
decl_stmt|;
name|struct
name|tx_desc
modifier|*
name|tx_desc
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|STAILQ_HEAD
argument_list|(
name|age_txdq
argument_list|,
name|age_txdesc
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|age_rxdesc
block|{
name|struct
name|mbuf
modifier|*
name|rx_m
decl_stmt|;
name|bus_dmamap_t
name|rx_dmamap
decl_stmt|;
name|struct
name|rx_desc
modifier|*
name|rx_desc
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|age_chain_data
block|{
name|bus_dma_tag_t
name|age_parent_tag
decl_stmt|;
name|bus_dma_tag_t
name|age_buffer_tag
decl_stmt|;
name|bus_dma_tag_t
name|age_tx_tag
decl_stmt|;
name|struct
name|age_txdesc
name|age_txdesc
index|[
name|AGE_TX_RING_CNT
index|]
decl_stmt|;
name|bus_dma_tag_t
name|age_rx_tag
decl_stmt|;
name|struct
name|age_rxdesc
name|age_rxdesc
index|[
name|AGE_RX_RING_CNT
index|]
decl_stmt|;
name|bus_dma_tag_t
name|age_tx_ring_tag
decl_stmt|;
name|bus_dmamap_t
name|age_tx_ring_map
decl_stmt|;
name|bus_dma_tag_t
name|age_rx_ring_tag
decl_stmt|;
name|bus_dmamap_t
name|age_rx_ring_map
decl_stmt|;
name|bus_dmamap_t
name|age_rx_sparemap
decl_stmt|;
name|bus_dma_tag_t
name|age_rr_ring_tag
decl_stmt|;
name|bus_dmamap_t
name|age_rr_ring_map
decl_stmt|;
name|bus_dma_tag_t
name|age_cmb_block_tag
decl_stmt|;
name|bus_dmamap_t
name|age_cmb_block_map
decl_stmt|;
name|bus_dma_tag_t
name|age_smb_block_tag
decl_stmt|;
name|bus_dmamap_t
name|age_smb_block_map
decl_stmt|;
name|int
name|age_tx_prod
decl_stmt|;
name|int
name|age_tx_cons
decl_stmt|;
name|int
name|age_tx_cnt
decl_stmt|;
name|int
name|age_rx_cons
decl_stmt|;
name|int
name|age_rr_cons
decl_stmt|;
name|int
name|age_rxlen
decl_stmt|;
name|struct
name|mbuf
modifier|*
name|age_rxhead
decl_stmt|;
name|struct
name|mbuf
modifier|*
name|age_rxtail
decl_stmt|;
name|struct
name|mbuf
modifier|*
name|age_rxprev_tail
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|age_ring_data
block|{
name|struct
name|tx_desc
modifier|*
name|age_tx_ring
decl_stmt|;
name|bus_addr_t
name|age_tx_ring_paddr
decl_stmt|;
name|struct
name|rx_desc
modifier|*
name|age_rx_ring
decl_stmt|;
name|bus_addr_t
name|age_rx_ring_paddr
decl_stmt|;
name|struct
name|rx_rdesc
modifier|*
name|age_rr_ring
decl_stmt|;
name|bus_addr_t
name|age_rr_ring_paddr
decl_stmt|;
name|struct
name|cmb
modifier|*
name|age_cmb_block
decl_stmt|;
name|bus_addr_t
name|age_cmb_block_paddr
decl_stmt|;
name|struct
name|smb
modifier|*
name|age_smb_block
decl_stmt|;
name|bus_addr_t
name|age_smb_block_paddr
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|AGE_TX_RING_SZ
define|\
value|(sizeof(struct tx_desc) * AGE_TX_RING_CNT)
end_define

begin_define
define|#
directive|define
name|AGE_RX_RING_SZ
define|\
value|(sizeof(struct rx_desc) * AGE_RX_RING_CNT)
end_define

begin_define
define|#
directive|define
name|AGE_RR_RING_SZ
define|\
value|(sizeof(struct rx_rdesc) * AGE_RR_RING_CNT)
end_define

begin_define
define|#
directive|define
name|AGE_CMB_BLOCK_SZ
value|sizeof(struct cmb)
end_define

begin_define
define|#
directive|define
name|AGE_SMB_BLOCK_SZ
value|sizeof(struct smb)
end_define

begin_struct
struct|struct
name|age_stats
block|{
comment|/* Rx stats. */
name|uint64_t
name|rx_frames
decl_stmt|;
name|uint64_t
name|rx_bcast_frames
decl_stmt|;
name|uint64_t
name|rx_mcast_frames
decl_stmt|;
name|uint32_t
name|rx_pause_frames
decl_stmt|;
name|uint32_t
name|rx_control_frames
decl_stmt|;
name|uint32_t
name|rx_crcerrs
decl_stmt|;
name|uint32_t
name|rx_lenerrs
decl_stmt|;
name|uint64_t
name|rx_bytes
decl_stmt|;
name|uint32_t
name|rx_runts
decl_stmt|;
name|uint64_t
name|rx_fragments
decl_stmt|;
name|uint64_t
name|rx_pkts_64
decl_stmt|;
name|uint64_t
name|rx_pkts_65_127
decl_stmt|;
name|uint64_t
name|rx_pkts_128_255
decl_stmt|;
name|uint64_t
name|rx_pkts_256_511
decl_stmt|;
name|uint64_t
name|rx_pkts_512_1023
decl_stmt|;
name|uint64_t
name|rx_pkts_1024_1518
decl_stmt|;
name|uint64_t
name|rx_pkts_1519_max
decl_stmt|;
name|uint64_t
name|rx_pkts_truncated
decl_stmt|;
name|uint32_t
name|rx_fifo_oflows
decl_stmt|;
name|uint32_t
name|rx_desc_oflows
decl_stmt|;
name|uint32_t
name|rx_alignerrs
decl_stmt|;
name|uint64_t
name|rx_bcast_bytes
decl_stmt|;
name|uint64_t
name|rx_mcast_bytes
decl_stmt|;
name|uint64_t
name|rx_pkts_filtered
decl_stmt|;
comment|/* Tx stats. */
name|uint64_t
name|tx_frames
decl_stmt|;
name|uint64_t
name|tx_bcast_frames
decl_stmt|;
name|uint64_t
name|tx_mcast_frames
decl_stmt|;
name|uint32_t
name|tx_pause_frames
decl_stmt|;
name|uint32_t
name|tx_excess_defer
decl_stmt|;
name|uint32_t
name|tx_control_frames
decl_stmt|;
name|uint32_t
name|tx_deferred
decl_stmt|;
name|uint64_t
name|tx_bytes
decl_stmt|;
name|uint64_t
name|tx_pkts_64
decl_stmt|;
name|uint64_t
name|tx_pkts_65_127
decl_stmt|;
name|uint64_t
name|tx_pkts_128_255
decl_stmt|;
name|uint64_t
name|tx_pkts_256_511
decl_stmt|;
name|uint64_t
name|tx_pkts_512_1023
decl_stmt|;
name|uint64_t
name|tx_pkts_1024_1518
decl_stmt|;
name|uint64_t
name|tx_pkts_1519_max
decl_stmt|;
name|uint32_t
name|tx_single_colls
decl_stmt|;
name|uint32_t
name|tx_multi_colls
decl_stmt|;
name|uint32_t
name|tx_late_colls
decl_stmt|;
name|uint32_t
name|tx_excess_colls
decl_stmt|;
name|uint32_t
name|tx_underrun
decl_stmt|;
name|uint32_t
name|tx_desc_underrun
decl_stmt|;
name|uint32_t
name|tx_lenerrs
decl_stmt|;
name|uint32_t
name|tx_pkts_truncated
decl_stmt|;
name|uint64_t
name|tx_bcast_bytes
decl_stmt|;
name|uint64_t
name|tx_mcast_bytes
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Software state per device.  */
end_comment

begin_struct
struct|struct
name|age_softc
block|{
name|struct
name|ifnet
modifier|*
name|age_ifp
decl_stmt|;
name|device_t
name|age_dev
decl_stmt|;
name|device_t
name|age_miibus
decl_stmt|;
name|struct
name|resource
modifier|*
name|age_res
index|[
literal|1
index|]
decl_stmt|;
name|struct
name|resource_spec
modifier|*
name|age_res_spec
decl_stmt|;
name|struct
name|resource
modifier|*
name|age_irq
index|[
name|AGE_MSI_MESSAGES
index|]
decl_stmt|;
name|struct
name|resource_spec
modifier|*
name|age_irq_spec
decl_stmt|;
name|void
modifier|*
name|age_intrhand
index|[
name|AGE_MSI_MESSAGES
index|]
decl_stmt|;
name|int
name|age_rev
decl_stmt|;
name|int
name|age_chip_rev
decl_stmt|;
name|int
name|age_phyaddr
decl_stmt|;
name|uint8_t
name|age_eaddr
index|[
name|ETHER_ADDR_LEN
index|]
decl_stmt|;
name|uint32_t
name|age_dma_rd_burst
decl_stmt|;
name|uint32_t
name|age_dma_wr_burst
decl_stmt|;
name|int
name|age_flags
decl_stmt|;
define|#
directive|define
name|AGE_FLAG_PCIE
value|0x0001
define|#
directive|define
name|AGE_FLAG_PCIX
value|0x0002
define|#
directive|define
name|AGE_FLAG_MSI
value|0x0004
define|#
directive|define
name|AGE_FLAG_MSIX
value|0x0008
define|#
directive|define
name|AGE_FLAG_PMCAP
value|0x0010
define|#
directive|define
name|AGE_FLAG_DETACH
value|0x4000
define|#
directive|define
name|AGE_FLAG_LINK
value|0x8000
name|struct
name|callout
name|age_tick_ch
decl_stmt|;
name|struct
name|age_stats
name|age_stat
decl_stmt|;
name|struct
name|age_chain_data
name|age_cdata
decl_stmt|;
name|struct
name|age_ring_data
name|age_rdata
decl_stmt|;
name|int
name|age_if_flags
decl_stmt|;
name|int
name|age_watchdog_timer
decl_stmt|;
name|int
name|age_process_limit
decl_stmt|;
name|int
name|age_int_mod
decl_stmt|;
name|int
name|age_max_frame_size
decl_stmt|;
name|int
name|age_morework
decl_stmt|;
name|int
name|age_rr_prod
decl_stmt|;
name|int
name|age_tpd_cons
decl_stmt|;
name|struct
name|task
name|age_int_task
decl_stmt|;
name|struct
name|task
name|age_tx_task
decl_stmt|;
name|struct
name|task
name|age_link_task
decl_stmt|;
name|struct
name|taskqueue
modifier|*
name|age_tq
decl_stmt|;
name|struct
name|mtx
name|age_mtx
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Register access macros. */
end_comment

begin_define
define|#
directive|define
name|CSR_WRITE_4
parameter_list|(
name|_sc
parameter_list|,
name|reg
parameter_list|,
name|val
parameter_list|)
define|\
value|bus_write_4((_sc)->age_res[0], (reg), (val))
end_define

begin_define
define|#
directive|define
name|CSR_WRITE_2
parameter_list|(
name|_sc
parameter_list|,
name|reg
parameter_list|,
name|val
parameter_list|)
define|\
value|bus_write_2((_sc)->age_res[0], (reg), (val))
end_define

begin_define
define|#
directive|define
name|CSR_READ_2
parameter_list|(
name|_sc
parameter_list|,
name|reg
parameter_list|)
define|\
value|bus_read_2((_sc)->age_res[0], (reg))
end_define

begin_define
define|#
directive|define
name|CSR_READ_4
parameter_list|(
name|_sc
parameter_list|,
name|reg
parameter_list|)
define|\
value|bus_read_4((_sc)->age_res[0], (reg))
end_define

begin_define
define|#
directive|define
name|AGE_LOCK
parameter_list|(
name|_sc
parameter_list|)
value|mtx_lock(&(_sc)->age_mtx)
end_define

begin_define
define|#
directive|define
name|AGE_UNLOCK
parameter_list|(
name|_sc
parameter_list|)
value|mtx_unlock(&(_sc)->age_mtx)
end_define

begin_define
define|#
directive|define
name|AGE_LOCK_ASSERT
parameter_list|(
name|_sc
parameter_list|)
value|mtx_assert(&(_sc)->age_mtx, MA_OWNED)
end_define

begin_define
define|#
directive|define
name|AGE_COMMIT_MBOX
parameter_list|(
name|_sc
parameter_list|)
define|\
value|do {									\ 	CSR_WRITE_4(_sc, AGE_MBOX,					\ 	    (((_sc)->age_cdata.age_rx_cons<< MBOX_RD_PROD_IDX_SHIFT)&	\ 	    MBOX_RD_PROD_IDX_MASK) |					\ 	    (((_sc)->age_cdata.age_rr_cons<<				\ 	    MBOX_RRD_CONS_IDX_SHIFT)& MBOX_RRD_CONS_IDX_MASK) |	\ 	    (((_sc)->age_cdata.age_tx_prod<< MBOX_TD_PROD_IDX_SHIFT)&	\ 	    MBOX_TD_PROD_IDX_MASK));					\ } while (0)
end_define

begin_define
define|#
directive|define
name|AGE_RXCHAIN_RESET
parameter_list|(
name|_sc
parameter_list|)
define|\
value|do {									\ 	(_sc)->age_cdata.age_rxhead = NULL;				\ 	(_sc)->age_cdata.age_rxtail = NULL;				\ 	(_sc)->age_cdata.age_rxprev_tail = NULL;			\ 	(_sc)->age_cdata.age_rxlen = 0;					\ } while (0)
end_define

begin_define
define|#
directive|define
name|AGE_TX_TIMEOUT
value|5
end_define

begin_define
define|#
directive|define
name|AGE_RESET_TIMEOUT
value|100
end_define

begin_define
define|#
directive|define
name|AGE_TIMEOUT
value|1000
end_define

begin_define
define|#
directive|define
name|AGE_PHY_TIMEOUT
value|1000
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _IF_AGEVAR_H */
end_comment

end_unit

