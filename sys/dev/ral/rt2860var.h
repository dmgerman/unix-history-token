begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2007 Damien Bergamini<damien.bergamini@free.fr>  * Copyright (c) 2012 Bernhard Schmidt<bschmidt@FreeBSD.org>  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  *  * $OpenBSD: rt2860var.h,v 1.20 2010/09/07 16:21:42 deraadt Exp $  * $FreeBSD$  */
end_comment

begin_define
define|#
directive|define
name|RT2860_TX_RING_COUNT
value|64
end_define

begin_define
define|#
directive|define
name|RT2860_RX_RING_COUNT
value|128
end_define

begin_define
define|#
directive|define
name|RT2860_TX_POOL_COUNT
value|(RT2860_TX_RING_COUNT * 2)
end_define

begin_define
define|#
directive|define
name|RT2860_MAX_SCATTER
value|((RT2860_TX_RING_COUNT * 2) - 1)
end_define

begin_comment
comment|/* HW supports up to 255 STAs */
end_comment

begin_define
define|#
directive|define
name|RT2860_WCID_MAX
value|254
end_define

begin_define
define|#
directive|define
name|RT2860_AID2WCID
parameter_list|(
name|aid
parameter_list|)
value|((aid)& 0xff)
end_define

begin_struct
struct|struct
name|rt2860_rx_radiotap_header
block|{
name|struct
name|ieee80211_radiotap_header
name|wr_ihdr
decl_stmt|;
name|uint64_t
name|wr_tsf
decl_stmt|;
name|uint8_t
name|wr_flags
decl_stmt|;
name|uint8_t
name|wr_rate
decl_stmt|;
name|uint16_t
name|wr_chan_freq
decl_stmt|;
name|uint16_t
name|wr_chan_flags
decl_stmt|;
name|uint8_t
name|wr_antenna
decl_stmt|;
name|int8_t
name|wr_antsignal
decl_stmt|;
name|int8_t
name|wr_antnoise
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_define
define|#
directive|define
name|RT2860_RX_RADIOTAP_PRESENT
define|\
value|((1<< IEEE80211_RADIOTAP_TSFT) |				\ 	 (1<< IEEE80211_RADIOTAP_FLAGS) |				\ 	 (1<< IEEE80211_RADIOTAP_RATE) |				\ 	 (1<< IEEE80211_RADIOTAP_CHANNEL) |				\ 	 (1<< IEEE80211_RADIOTAP_ANTENNA) |				\ 	 (1<< IEEE80211_RADIOTAP_DBM_ANTSIGNAL) |			\ 	 (1<< IEEE80211_RADIOTAP_DBM_ANTNOISE))
end_define

begin_struct
struct|struct
name|rt2860_tx_radiotap_header
block|{
name|struct
name|ieee80211_radiotap_header
name|wt_ihdr
decl_stmt|;
name|uint8_t
name|wt_flags
decl_stmt|;
name|uint8_t
name|wt_rate
decl_stmt|;
name|uint16_t
name|wt_chan_freq
decl_stmt|;
name|uint16_t
name|wt_chan_flags
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_define
define|#
directive|define
name|RT2860_TX_RADIOTAP_PRESENT
define|\
value|((1<< IEEE80211_RADIOTAP_FLAGS) |				\ 	 (1<< IEEE80211_RADIOTAP_RATE) |				\ 	 (1<< IEEE80211_RADIOTAP_CHANNEL))
end_define

begin_struct
struct|struct
name|rt2860_tx_data
block|{
name|struct
name|rt2860_txwi
modifier|*
name|txwi
decl_stmt|;
name|struct
name|mbuf
modifier|*
name|m
decl_stmt|;
name|struct
name|ieee80211_node
modifier|*
name|ni
decl_stmt|;
name|bus_dmamap_t
name|map
decl_stmt|;
name|bus_addr_t
name|paddr
decl_stmt|;
name|SLIST_ENTRY
argument_list|(
argument|rt2860_tx_data
argument_list|)
name|next
expr_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rt2860_tx_ring
block|{
name|struct
name|rt2860_txd
modifier|*
name|txd
decl_stmt|;
name|bus_addr_t
name|paddr
decl_stmt|;
name|bus_dma_tag_t
name|desc_dmat
decl_stmt|;
name|bus_dmamap_t
name|desc_map
decl_stmt|;
name|bus_dma_segment_t
name|seg
decl_stmt|;
name|struct
name|rt2860_tx_data
modifier|*
name|data
index|[
name|RT2860_TX_RING_COUNT
index|]
decl_stmt|;
name|int
name|cur
decl_stmt|;
name|int
name|next
decl_stmt|;
name|int
name|queued
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rt2860_rx_data
block|{
name|struct
name|mbuf
modifier|*
name|m
decl_stmt|;
name|bus_dmamap_t
name|map
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rt2860_rx_ring
block|{
name|struct
name|rt2860_rxd
modifier|*
name|rxd
decl_stmt|;
name|bus_addr_t
name|paddr
decl_stmt|;
name|bus_dma_tag_t
name|desc_dmat
decl_stmt|;
name|bus_dmamap_t
name|desc_map
decl_stmt|;
name|bus_dma_tag_t
name|data_dmat
decl_stmt|;
name|bus_dma_segment_t
name|seg
decl_stmt|;
name|unsigned
name|int
name|cur
decl_stmt|;
comment|/* must be unsigned */
name|struct
name|rt2860_rx_data
name|data
index|[
name|RT2860_RX_RING_COUNT
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rt2860_node
block|{
name|struct
name|ieee80211_node
name|ni
decl_stmt|;
name|uint8_t
name|wcid
decl_stmt|;
name|uint8_t
name|ridx
index|[
name|IEEE80211_RATE_MAXSIZE
index|]
decl_stmt|;
name|uint8_t
name|ctl_ridx
index|[
name|IEEE80211_RATE_MAXSIZE
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rt2860_vap
block|{
name|struct
name|ieee80211vap
name|ral_vap
decl_stmt|;
name|int
function_decl|(
modifier|*
name|ral_newstate
function_decl|)
parameter_list|(
name|struct
name|ieee80211vap
modifier|*
parameter_list|,
name|enum
name|ieee80211_state
parameter_list|,
name|int
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|RT2860_VAP
parameter_list|(
name|vap
parameter_list|)
value|((struct rt2860_vap *)(vap))
end_define

begin_struct
struct|struct
name|rt2860_softc
block|{
name|struct
name|ifnet
modifier|*
name|sc_ifp
decl_stmt|;
name|device_t
name|sc_dev
decl_stmt|;
name|bus_space_tag_t
name|sc_st
decl_stmt|;
name|bus_space_handle_t
name|sc_sh
decl_stmt|;
name|struct
name|mtx
name|sc_mtx
decl_stmt|;
name|struct
name|callout
name|watchdog_ch
decl_stmt|;
name|int
name|sc_invalid
decl_stmt|;
name|int
name|sc_debug
decl_stmt|;
comment|/*  * The same in both up to here  * ------------------------------------------------  */
name|uint16_t
function_decl|(
modifier|*
name|sc_srom_read
function_decl|)
parameter_list|(
name|struct
name|rt2860_softc
modifier|*
parameter_list|,
name|uint16_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_node_free
function_decl|)
parameter_list|(
name|struct
name|ieee80211_node
modifier|*
parameter_list|)
function_decl|;
name|int
name|sc_flags
decl_stmt|;
define|#
directive|define
name|RT2860_ENABLED
value|(1<< 0)
define|#
directive|define
name|RT2860_ADVANCED_PS
value|(1<< 1)
define|#
directive|define
name|RT2860_PCIE
value|(1<< 2)
name|struct
name|ieee80211_node
modifier|*
name|wcid2ni
index|[
name|RT2860_WCID_MAX
index|]
decl_stmt|;
name|struct
name|rt2860_tx_ring
name|txq
index|[
literal|6
index|]
decl_stmt|;
name|struct
name|rt2860_rx_ring
name|rxq
decl_stmt|;
name|SLIST_HEAD
argument_list|(
argument_list|,
argument|rt2860_tx_data
argument_list|)
name|data_pool
expr_stmt|;
name|struct
name|rt2860_tx_data
name|data
index|[
name|RT2860_TX_POOL_COUNT
index|]
decl_stmt|;
name|bus_dma_tag_t
name|txwi_dmat
decl_stmt|;
name|bus_dmamap_t
name|txwi_map
decl_stmt|;
name|bus_dma_segment_t
name|txwi_seg
decl_stmt|;
name|caddr_t
name|txwi_vaddr
decl_stmt|;
name|int
name|sc_tx_timer
decl_stmt|;
name|int
name|mgtqid
decl_stmt|;
name|uint8_t
name|qfullmsk
decl_stmt|;
name|uint16_t
name|mac_ver
decl_stmt|;
name|uint16_t
name|mac_rev
decl_stmt|;
name|uint8_t
name|rf_rev
decl_stmt|;
name|uint8_t
name|freq
decl_stmt|;
name|uint8_t
name|ntxchains
decl_stmt|;
name|uint8_t
name|nrxchains
decl_stmt|;
name|uint8_t
name|pslevel
decl_stmt|;
name|int8_t
name|txpow1
index|[
literal|54
index|]
decl_stmt|;
name|int8_t
name|txpow2
index|[
literal|54
index|]
decl_stmt|;
name|int8_t
name|rssi_2ghz
index|[
literal|3
index|]
decl_stmt|;
name|int8_t
name|rssi_5ghz
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|lna
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|rf24_20mhz
decl_stmt|;
name|uint8_t
name|rf24_40mhz
decl_stmt|;
name|uint8_t
name|patch_dac
decl_stmt|;
name|uint8_t
name|rfswitch
decl_stmt|;
name|uint8_t
name|ext_2ghz_lna
decl_stmt|;
name|uint8_t
name|ext_5ghz_lna
decl_stmt|;
name|uint8_t
name|calib_2ghz
decl_stmt|;
name|uint8_t
name|calib_5ghz
decl_stmt|;
name|uint8_t
name|txmixgain_2ghz
decl_stmt|;
name|uint8_t
name|txmixgain_5ghz
decl_stmt|;
name|uint8_t
name|tssi_2ghz
index|[
literal|9
index|]
decl_stmt|;
name|uint8_t
name|tssi_5ghz
index|[
literal|9
index|]
decl_stmt|;
name|uint8_t
name|step_2ghz
decl_stmt|;
name|uint8_t
name|step_5ghz
decl_stmt|;
struct|struct
block|{
name|uint8_t
name|reg
decl_stmt|;
name|uint8_t
name|val
decl_stmt|;
block|}
name|bbp
index|[
literal|8
index|]
struct|,
name|rf
index|[
literal|10
index|]
struct|;
name|uint8_t
name|leds
decl_stmt|;
name|uint16_t
name|led
index|[
literal|3
index|]
decl_stmt|;
name|uint32_t
name|txpow20mhz
index|[
literal|5
index|]
decl_stmt|;
name|uint32_t
name|txpow40mhz_2ghz
index|[
literal|5
index|]
decl_stmt|;
name|uint32_t
name|txpow40mhz_5ghz
index|[
literal|5
index|]
decl_stmt|;
name|struct
name|rt2860_rx_radiotap_header
name|sc_rxtap
decl_stmt|;
name|int
name|sc_rxtap_len
decl_stmt|;
name|struct
name|rt2860_tx_radiotap_header
name|sc_txtap
decl_stmt|;
name|int
name|sc_txtap_len
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|rt2860_attach
parameter_list|(
name|device_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|rt2860_detach
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rt2860_shutdown
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rt2860_suspend
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rt2860_resume
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rt2860_intr
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|RAL_LOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_lock(&(sc)->sc_mtx)
end_define

begin_define
define|#
directive|define
name|RAL_LOCK_ASSERT
parameter_list|(
name|sc
parameter_list|)
value|mtx_assert(&(sc)->sc_mtx, MA_OWNED)
end_define

begin_define
define|#
directive|define
name|RAL_UNLOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_unlock(&(sc)->sc_mtx)
end_define

end_unit

