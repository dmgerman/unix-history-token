begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2007-2014 QLogic Corporation. All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS'  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF  * THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|BXE_DCB_H
end_ifndef

begin_define
define|#
directive|define
name|BXE_DCB_H
end_define

begin_define
define|#
directive|define
name|LLFC_DRIVER_TRAFFIC_TYPE_MAX
value|3
end_define

begin_comment
comment|/* NW, iSCSI, FCoE */
end_comment

begin_struct
struct|struct
name|bxe_dcbx_app_params
block|{
name|uint32_t
name|enabled
decl_stmt|;
name|uint32_t
name|traffic_type_priority
index|[
name|LLFC_DRIVER_TRAFFIC_TYPE_MAX
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|DCBX_COS_MAX_NUM_E2
value|DCBX_E2E3_MAX_NUM_COS
end_define

begin_comment
comment|/* bxe currently limits numbers of supported COSes to 3 to be extended to 6 */
end_comment

begin_define
define|#
directive|define
name|BXE_MAX_COS_SUPPORT
value|3
end_define

begin_define
define|#
directive|define
name|DCBX_COS_MAX_NUM_E3B0
value|BXE_MAX_COS_SUPPORT
end_define

begin_define
define|#
directive|define
name|DCBX_COS_MAX_NUM
value|BXE_MAX_COS_SUPPORT
end_define

begin_struct
struct|struct
name|bxe_dcbx_cos_params
block|{
name|uint32_t
name|bw_tbl
decl_stmt|;
name|uint32_t
name|pri_bitmask
decl_stmt|;
comment|/*      * strict priority: valid values are 0..5; 0 is highest priority.      * There can't be two COSes with the same priority.      */
name|uint8_t
name|strict
decl_stmt|;
define|#
directive|define
name|BXE_DCBX_STRICT_INVALID
value|DCBX_COS_MAX_NUM
define|#
directive|define
name|BXE_DCBX_STRICT_COS_HIGHEST
value|0
define|#
directive|define
name|BXE_DCBX_STRICT_COS_NEXT_LOWER_PRI
parameter_list|(
name|sp
parameter_list|)
value|((sp) + 1)
name|uint8_t
name|pauseable
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bxe_dcbx_pg_params
block|{
name|uint32_t
name|enabled
decl_stmt|;
name|uint8_t
name|num_of_cos
decl_stmt|;
comment|/* valid COS entries */
name|struct
name|bxe_dcbx_cos_params
name|cos_params
index|[
name|DCBX_COS_MAX_NUM
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bxe_dcbx_pfc_params
block|{
name|uint32_t
name|enabled
decl_stmt|;
name|uint32_t
name|priority_non_pauseable_mask
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bxe_dcbx_port_params
block|{
name|struct
name|bxe_dcbx_pfc_params
name|pfc
decl_stmt|;
name|struct
name|bxe_dcbx_pg_params
name|ets
decl_stmt|;
name|struct
name|bxe_dcbx_app_params
name|app
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|BXE_DCBX_CONFIG_INV_VALUE
value|(0xFFFFFFFF)
end_define

begin_define
define|#
directive|define
name|BXE_DCBX_OVERWRITE_SETTINGS_DISABLE
value|0
end_define

begin_define
define|#
directive|define
name|BXE_DCBX_OVERWRITE_SETTINGS_ENABLE
value|1
end_define

begin_define
define|#
directive|define
name|BXE_DCBX_OVERWRITE_SETTINGS_INVALID
value|(BXE_DCBX_CONFIG_INV_VALUE)
end_define

begin_define
define|#
directive|define
name|BXE_IS_ETS_ENABLED
parameter_list|(
name|sc
parameter_list|)
define|\
value|((sc)->dcb_state == BXE_DCB_STATE_ON&& \      (sc)->dcbx_port_params.ets.enabled)
end_define

begin_struct
struct|struct
name|bxe_config_lldp_params
block|{
name|uint32_t
name|overwrite_settings
decl_stmt|;
name|uint32_t
name|msg_tx_hold
decl_stmt|;
name|uint32_t
name|msg_fast_tx
decl_stmt|;
name|uint32_t
name|tx_credit_max
decl_stmt|;
name|uint32_t
name|msg_tx_interval
decl_stmt|;
name|uint32_t
name|tx_fast
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bxe_lldp_params_get
block|{
name|uint32_t
name|ver_num
decl_stmt|;
define|#
directive|define
name|LLDP_PARAMS_VER_NUM
value|2
name|struct
name|bxe_config_lldp_params
name|config_lldp_params
decl_stmt|;
comment|/* The reserved field should follow in case the struct above will increase*/
name|uint32_t
name|_reserved
index|[
literal|20
index|]
decl_stmt|;
name|uint32_t
name|admin_status
decl_stmt|;
define|#
directive|define
name|LLDP_TX_ONLY
value|0x01
define|#
directive|define
name|LLDP_RX_ONLY
value|0x02
define|#
directive|define
name|LLDP_TX_RX
value|0x03
define|#
directive|define
name|LLDP_DISABLED
value|0x04
name|uint32_t
name|remote_chassis_id
index|[
name|REM_CHASSIS_ID_STAT_LEN
index|]
decl_stmt|;
name|uint32_t
name|remote_port_id
index|[
name|REM_PORT_ID_STAT_LEN
index|]
decl_stmt|;
name|uint32_t
name|local_chassis_id
index|[
name|LOCAL_CHASSIS_ID_STAT_LEN
index|]
decl_stmt|;
name|uint32_t
name|local_port_id
index|[
name|LOCAL_PORT_ID_STAT_LEN
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bxe_admin_priority_app_table
block|{
name|uint32_t
name|valid
decl_stmt|;
name|uint32_t
name|priority
decl_stmt|;
define|#
directive|define
name|INVALID_TRAFFIC_TYPE_PRIORITY
value|(0xFFFFFFFF)
name|uint32_t
name|traffic_type
decl_stmt|;
define|#
directive|define
name|TRAFFIC_TYPE_ETH
value|0
define|#
directive|define
name|TRAFFIC_TYPE_PORT
value|1
name|uint32_t
name|app_id
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|DCBX_CONFIG_MAX_APP_PROTOCOL
value|4
end_define

begin_struct
struct|struct
name|bxe_config_dcbx_params
block|{
name|uint32_t
name|overwrite_settings
decl_stmt|;
name|uint32_t
name|admin_dcbx_version
decl_stmt|;
name|uint32_t
name|admin_ets_enable
decl_stmt|;
name|uint32_t
name|admin_pfc_enable
decl_stmt|;
name|uint32_t
name|admin_tc_supported_tx_enable
decl_stmt|;
name|uint32_t
name|admin_ets_configuration_tx_enable
decl_stmt|;
name|uint32_t
name|admin_ets_recommendation_tx_enable
decl_stmt|;
name|uint32_t
name|admin_pfc_tx_enable
decl_stmt|;
name|uint32_t
name|admin_application_priority_tx_enable
decl_stmt|;
name|uint32_t
name|admin_ets_willing
decl_stmt|;
name|uint32_t
name|admin_ets_reco_valid
decl_stmt|;
name|uint32_t
name|admin_pfc_willing
decl_stmt|;
name|uint32_t
name|admin_app_priority_willing
decl_stmt|;
name|uint32_t
name|admin_configuration_bw_precentage
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|admin_configuration_ets_pg
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|admin_recommendation_bw_precentage
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|admin_recommendation_ets_pg
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|admin_pfc_bitmap
decl_stmt|;
name|struct
name|bxe_admin_priority_app_table
name|admin_priority_app_table
index|[
name|DCBX_CONFIG_MAX_APP_PROTOCOL
index|]
decl_stmt|;
name|uint32_t
name|admin_default_priority
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|//#define DCBX_PARAMS_VER_NUM 3 /* XXX conflict with common_uif.h */
end_comment

begin_struct
struct|struct
name|bxe_dcbx_params_get
block|{
name|uint32_t
name|ver_num
decl_stmt|;
name|uint32_t
name|dcb_state
decl_stmt|;
name|uint32_t
name|dcbx_enabled
decl_stmt|;
name|struct
name|bxe_config_dcbx_params
name|config_dcbx_params
decl_stmt|;
comment|/* The reserved field should follow in case the struct above will increase*/
name|uint32_t
name|_reserved
index|[
literal|19
index|]
decl_stmt|;
name|uint32_t
name|dcb_current_state
decl_stmt|;
define|#
directive|define
name|BXE_DCBX_CURRENT_STATE_IS_SYNC
value|(1<< 0)
define|#
directive|define
name|BXE_PFC_IS_CURRENTLY_OPERATIONAL
value|(1<< 1)
define|#
directive|define
name|BXE_ETS_IS_CURRENTLY_OPERATIONAL
value|(1<< 2)
define|#
directive|define
name|BXE_PRIORITY_TAGGING_IS_CURRENTLY_OPERATIONAL
value|(1<< 3)
name|uint32_t
name|local_tc_supported
decl_stmt|;
name|uint32_t
name|local_pfc_caps
decl_stmt|;
name|uint32_t
name|remote_tc_supported
decl_stmt|;
name|uint32_t
name|remote_pfc_cap
decl_stmt|;
name|uint32_t
name|remote_ets_willing
decl_stmt|;
name|uint32_t
name|remote_ets_reco_valid
decl_stmt|;
name|uint32_t
name|remote_pfc_willing
decl_stmt|;
name|uint32_t
name|remote_app_priority_willing
decl_stmt|;
name|uint32_t
name|remote_configuration_bw_precentage
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|remote_configuration_ets_pg
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|remote_recommendation_bw_precentage
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|remote_recommendation_ets_pg
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|remote_pfc_bitmap
decl_stmt|;
name|struct
name|bxe_admin_priority_app_table
name|remote_priority_app_table
index|[
name|DCBX_MAX_APP_PROTOCOL
index|]
decl_stmt|;
name|uint32_t
name|local_ets_enable
decl_stmt|;
name|uint32_t
name|local_pfc_enable
decl_stmt|;
name|uint32_t
name|local_configuration_bw_precentage
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|local_configuration_ets_pg
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|local_pfc_bitmap
decl_stmt|;
name|struct
name|bxe_admin_priority_app_table
name|local_priority_app_table
index|[
name|DCBX_MAX_APP_PROTOCOL
index|]
decl_stmt|;
name|uint32_t
name|pfc_mismatch
decl_stmt|;
name|uint32_t
name|priority_app_mismatch
decl_stmt|;
name|uint32_t
name|dcbx_frames_sent
decl_stmt|;
name|uint32_t
name|dcbx_frames_received
decl_stmt|;
name|uint32_t
name|pfc_frames_sent
index|[
literal|2
index|]
decl_stmt|;
name|uint32_t
name|pfc_frames_received
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bxe_dcbx_params_set
block|{
name|uint32_t
name|ver_num
decl_stmt|;
name|uint32_t
name|dcb_state
decl_stmt|;
name|uint32_t
name|dcbx_enabled
decl_stmt|;
name|struct
name|bxe_config_dcbx_params
name|config_dcbx_params
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|GET_FLAGS
parameter_list|(
name|flags
parameter_list|,
name|bits
parameter_list|)
value|((flags)& (bits))
end_define

begin_define
define|#
directive|define
name|SET_FLAGS
parameter_list|(
name|flags
parameter_list|,
name|bits
parameter_list|)
value|((flags) |= (bits))
end_define

begin_define
define|#
directive|define
name|RESET_FLAGS
parameter_list|(
name|flags
parameter_list|,
name|bits
parameter_list|)
value|((flags)&= ~(bits))
end_define

begin_enum
enum|enum
block|{
name|DCBX_READ_LOCAL_MIB
block|,
name|DCBX_READ_REMOTE_MIB
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|ETH_TYPE_FCOE
value|(0x8906)
end_define

begin_define
define|#
directive|define
name|TCP_PORT_ISCSI
value|(0xCBC)
end_define

begin_define
define|#
directive|define
name|PFC_VALUE_FRAME_SIZE
value|(512)
end_define

begin_define
define|#
directive|define
name|PFC_QUANTA_IN_NANOSEC_FROM_SPEED_MEGA
parameter_list|(
name|mega_speed
parameter_list|)
define|\
value|((1000 * PFC_VALUE_FRAME_SIZE)/(mega_speed))
end_define

begin_define
define|#
directive|define
name|PFC_BRB1_REG_HIGH_LLFC_LOW_THRESHOLD
value|130
end_define

begin_define
define|#
directive|define
name|PFC_BRB1_REG_HIGH_LLFC_HIGH_THRESHOLD
value|170
end_define

begin_struct
struct|struct
name|cos_entry_help_data
block|{
name|uint32_t
name|pri_join_mask
decl_stmt|;
name|uint32_t
name|cos_bw
decl_stmt|;
name|uint8_t
name|strict
decl_stmt|;
name|uint8_t
name|pausable
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cos_help_data
block|{
name|struct
name|cos_entry_help_data
name|data
index|[
name|DCBX_COS_MAX_NUM
index|]
decl_stmt|;
name|uint8_t
name|num_of_cos
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|DCBX_ILLEGAL_PG
value|(0xFF)
end_define

begin_define
define|#
directive|define
name|DCBX_PFC_PRI_MASK
value|(0xFF)
end_define

begin_define
define|#
directive|define
name|DCBX_STRICT_PRIORITY
value|(15)
end_define

begin_define
define|#
directive|define
name|DCBX_INVALID_COS_BW
value|(0xFFFFFFFF)
end_define

begin_define
define|#
directive|define
name|DCBX_PFC_PRI_NON_PAUSE_MASK
parameter_list|(
name|sc
parameter_list|)
define|\
value|((sc)->dcbx_port_params.pfc.priority_non_pauseable_mask)
end_define

begin_define
define|#
directive|define
name|DCBX_PFC_PRI_PAUSE_MASK
parameter_list|(
name|sc
parameter_list|)
define|\
value|((uint8_t)~DCBX_PFC_PRI_NON_PAUSE_MASK(sc))
end_define

begin_define
define|#
directive|define
name|DCBX_PFC_PRI_GET_PAUSE
parameter_list|(
name|sc
parameter_list|,
name|pg_pri
parameter_list|)
define|\
value|((pg_pri)& (DCBX_PFC_PRI_PAUSE_MASK(sc)))
end_define

begin_define
define|#
directive|define
name|DCBX_PFC_PRI_GET_NON_PAUSE
parameter_list|(
name|sc
parameter_list|,
name|pg_pri
parameter_list|)
define|\
value|(DCBX_PFC_PRI_NON_PAUSE_MASK(sc)& (pg_pri))
end_define

begin_define
define|#
directive|define
name|DCBX_IS_PFC_PRI_SOME_PAUSE
parameter_list|(
name|sc
parameter_list|,
name|pg_pri
parameter_list|)
define|\
value|(0 != DCBX_PFC_PRI_GET_PAUSE(sc, pg_pri))
end_define

begin_define
define|#
directive|define
name|IS_DCBX_PFC_PRI_ONLY_PAUSE
parameter_list|(
name|sc
parameter_list|,
name|pg_pri
parameter_list|)
define|\
value|(pg_pri == DCBX_PFC_PRI_GET_PAUSE((sc), (pg_pri)))
end_define

begin_define
define|#
directive|define
name|IS_DCBX_PFC_PRI_ONLY_NON_PAUSE
parameter_list|(
name|sc
parameter_list|,
name|pg_pri
parameter_list|)
define|\
value|((pg_pri) == DCBX_PFC_PRI_GET_NON_PAUSE((sc), (pg_pri)))
end_define

begin_define
define|#
directive|define
name|IS_DCBX_PFC_PRI_MIX_PAUSE
parameter_list|(
name|sc
parameter_list|,
name|pg_pri
parameter_list|)
define|\
value|(!(IS_DCBX_PFC_PRI_ONLY_NON_PAUSE((sc), (pg_pri)) || \        IS_DCBX_PFC_PRI_ONLY_PAUSE((sc), (pg_pri))))
end_define

begin_struct
struct|struct
name|pg_entry_help_data
block|{
name|uint8_t
name|num_of_dif_pri
decl_stmt|;
name|uint8_t
name|pg
decl_stmt|;
name|uint32_t
name|pg_priority
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pg_help_data
block|{
name|struct
name|pg_entry_help_data
name|data
index|[
name|LLFC_DRIVER_TRAFFIC_TYPE_MAX
index|]
decl_stmt|;
name|uint8_t
name|num_of_pg
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* forward DCB/PFC related declarations */
end_comment

begin_struct_decl
struct_decl|struct
name|bxe_softc
struct_decl|;
end_struct_decl

begin_comment
comment|/* void bxe_dcbx_update(struct work_struct *work); */
end_comment

begin_function_decl
name|void
name|bxe_dcbx_init_params
parameter_list|(
name|struct
name|bxe_softc
modifier|*
name|sc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|bxe_dcbx_set_state
parameter_list|(
name|struct
name|bxe_softc
modifier|*
name|sc
parameter_list|,
name|uint8_t
name|dcb_on
parameter_list|,
name|uint32_t
name|dcbx_enabled
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bxe_dcb_get_lldp_params_ioctl
parameter_list|(
name|struct
name|bxe_softc
modifier|*
name|sc
parameter_list|,
name|void
modifier|*
name|uaddr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bxe_dcb_get_dcbx_params_ioctl
parameter_list|(
name|struct
name|bxe_softc
modifier|*
name|sc
parameter_list|,
name|void
modifier|*
name|uaddr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bxe_dcb_set_dcbx_params_ioctl
parameter_list|(
name|struct
name|bxe_softc
modifier|*
name|sc
parameter_list|,
name|void
modifier|*
name|uaddr
parameter_list|)
function_decl|;
end_function_decl

begin_enum
enum|enum
block|{
name|BXE_DCBX_STATE_NEG_RECEIVED
init|=
literal|0x1
block|,
name|BXE_DCBX_STATE_TX_PAUSED
block|,
name|BXE_DCBX_STATE_TX_RELEASED
block|}
enum|;
end_enum

begin_function_decl
name|void
name|bxe_dcbx_set_params
parameter_list|(
name|struct
name|bxe_softc
modifier|*
name|sc
parameter_list|,
name|uint32_t
name|state
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|bxe_dcbx_pmf_update
parameter_list|(
name|struct
name|bxe_softc
modifier|*
name|sc
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* BXE_DCB_H */
end_comment

end_unit

