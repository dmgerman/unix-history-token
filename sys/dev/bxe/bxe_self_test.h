begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2007-2011 Broadcom Corporation. All rights reserved.  *  *    Gary Zambrano<zambrano@broadcom.com>  *    David Christensen<davidch@broadcom.com>  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. Neither the name of Broadcom Corporation nor the name of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written consent.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS'  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF  * THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*$FreeBSD$*/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_BXE_SELF_TEST_H
end_ifndef

begin_define
define|#
directive|define
name|_BXE_SELF_TEST_H
end_define

begin_decl_stmt
specifier|static
name|int
name|idle_chk_errors
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|int
name|idle_chk_warnings
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|BXE_DEBUG
end_ifdef

begin_function_decl
specifier|extern
name|uint32_t
name|bxe_reg_read32
parameter_list|(
name|struct
name|bxe_softc
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|bxe_reg_write32
parameter_list|(
name|struct
name|bxe_softc
modifier|*
parameter_list|,
name|bus_size_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|IDLE_CHK_E1
value|0x1
end_define

begin_define
define|#
directive|define
name|IDLE_CHK_E1H
value|0x2
end_define

begin_define
define|#
directive|define
name|IDLE_CHK_ERROR
value|1
end_define

begin_define
define|#
directive|define
name|IDLE_CHK_ERROR_NO_TRAFFIC
value|2
end_define

begin_define
define|#
directive|define
name|IDLE_CHK_WARNING
value|3
end_define

begin_define
define|#
directive|define
name|CHIP_MASK_CHK
parameter_list|(
name|chip_mask
parameter_list|)
define|\
value|(((((chip_mask)& IDLE_CHK_E1)&& is_e1) ||			\ 	(((chip_mask)& IDLE_CHK_E1H)&& is_e1h)) ? 1 : 0)
end_define

begin_define
define|#
directive|define
name|CONDITION_CHK
parameter_list|(
name|condition
parameter_list|,
name|severity
parameter_list|,
name|fail_msg
parameter_list|,
name|arg_list
modifier|...
parameter_list|)
value|do {	\ 	if (condition) {						\ 		switch (severity) {					\ 		case IDLE_CHK_ERROR:					\ 			BXE_PRINTF("ERROR " fail_msg, ##arg_list);	\ 			idle_chk_errors++;				\ 			break;						\ 		case IDLE_CHK_ERROR_NO_TRAFFIC:				\ 			BXE_PRINTF("WARNING " fail_msg, ##arg_list);	\ 			break;						\ 		case IDLE_CHK_WARNING:					\ 			BXE_PRINTF("INFO " fail_msg, ##arg_list);	\ 			idle_chk_warnings++;				\ 			break;						\ 		}							\ 	}								\ } while (0)
end_define

begin_comment
comment|/* Read one reg and check the condition. */
end_comment

begin_define
define|#
directive|define
name|IDLE_CHK_1
parameter_list|(
name|chip_mask
parameter_list|,
name|offset
parameter_list|,
name|condition
parameter_list|,
name|severity
parameter_list|,
name|fail_msg
parameter_list|)
value|do { \ 	if (CHIP_MASK_CHK(chip_mask)) {					\ 		val = REG_RD(sc, offset);				\ 		CONDITION_CHK(condition, severity,			\ 		    fail_msg ". Value is 0x%x\n", val);			\ 	}								\ } while (0)
end_define

begin_comment
comment|/* Loop to read one reg and check the condition. */
end_comment

begin_define
define|#
directive|define
name|IDLE_CHK_2
parameter_list|(
name|chip_mask
parameter_list|,
name|offset
parameter_list|,
name|loop
parameter_list|,
name|inc
parameter_list|,
name|condition
parameter_list|,
name|severity
parameter_list|,	\
name|fail_msg
parameter_list|)
value|do {							\ 	if (CHIP_MASK_CHK(chip_mask))					\ 		for (int i = 0; i< (loop); i++) {			\ 			val = REG_RD(sc, offset + i * (inc));		\ 			CONDITION_CHK(condition, severity,		\ 			    fail_msg ". Value is 0x%x\n", i, val);	\ 		}							\ } while (0)
end_define

begin_comment
comment|/* Read two regs and check the condition. */
end_comment

begin_define
define|#
directive|define
name|IDLE_CHK_3
parameter_list|(
name|chip_mask
parameter_list|,
name|offset1
parameter_list|,
name|offset2
parameter_list|,
name|condition
parameter_list|,
name|severity
parameter_list|, 	\
name|fail_msg
parameter_list|)
value|do {							\ 	if (CHIP_MASK_CHK(chip_mask)) {					\ 		val1 = REG_RD(sc, offset1);				\ 		val2 = REG_RD(sc, offset2);				\ 		CONDITION_CHK(condition, severity, fail_msg		\ 		    ". Values are 0x%x 0x%x\n", val1, val2);		\ 	}								\ } while (0)
end_define

begin_comment
comment|/* Loop to read two regs and check the condition. */
end_comment

begin_define
define|#
directive|define
name|IDLE_CHK_4
parameter_list|(
name|chip_mask
parameter_list|,
name|offset1
parameter_list|,
name|offset2
parameter_list|,
name|loop
parameter_list|,
name|inc
parameter_list|,
name|condition
parameter_list|,	\
name|severity
parameter_list|,
name|fail_msg
parameter_list|)
value|do {					\ 	if (CHIP_MASK_CHK(chip_mask))					\ 		for (int i = 0; i< (loop); i++) { 			\ 			val1 = REG_RD(sc, offset1 + i * (inc));		\ 			val2 = (REG_RD(sc, offset2 + i * (inc))>> 1);	\ 			CONDITION_CHK(condition, severity, fail_msg	\ 			" - LCID %d CID_CAM 0x%x Value is 0x%x\n",	\ 			i, val2, val1);					\ 		} 							\ } while (0);
end_define

begin_comment
comment|/* Read one reg and check according to another reg. */
end_comment

begin_define
define|#
directive|define
name|IDLE_CHK_5
parameter_list|(
name|chip_mask
parameter_list|,
name|offset
parameter_list|,
name|offset1
parameter_list|,
name|offset2
parameter_list|,
name|condition
parameter_list|,
name|severity
parameter_list|,	\
name|fail_msg
parameter_list|)
value|do {							\ 	if (CHIP_MASK_CHK(chip_mask))					\ 		if (!REG_RD(sc, offset))				\ 			IDLE_CHK_3(chip_mask, offset1, offset2,		\ 			    condition, severity, fail_msg);		\ } while (0);
end_define

begin_comment
comment|/* Read wide-bus reg and check sub-fields. */
end_comment

begin_define
define|#
directive|define
name|IDLE_CHK_6
parameter_list|(
name|chip_mask
parameter_list|,
name|offset
parameter_list|,
name|loop
parameter_list|,
name|inc
parameter_list|,
name|severity
parameter_list|)
define|\
value|bxe_idle_chk6(sc, chip_mask, offset, loop, inc, severity)
end_define

begin_comment
comment|/*  * Idle check 6.  *  * Returns:  *   None.  */
end_comment

begin_function
specifier|static
name|void
name|bxe_idle_chk6
parameter_list|(
name|struct
name|bxe_softc
modifier|*
name|sc
parameter_list|,
name|uint32_t
name|chip_mask
parameter_list|,
name|uint32_t
name|offset
parameter_list|,
name|int
name|loop
parameter_list|,
name|int
name|inc
parameter_list|,
name|int
name|severity
parameter_list|)
block|{
name|uint32_t
name|val1
decl_stmt|,
name|val2
decl_stmt|;
name|uint32_t
name|rd_ptr
decl_stmt|,
name|wr_ptr
decl_stmt|,
name|rd_bank
decl_stmt|,
name|wr_bank
decl_stmt|;
name|int
name|i
decl_stmt|,
name|is_e1
decl_stmt|,
name|is_e1h
decl_stmt|;
name|is_e1
operator|=
name|CHIP_IS_E1
argument_list|(
name|sc
argument_list|)
expr_stmt|;
name|is_e1h
operator|=
name|CHIP_IS_E1H
argument_list|(
name|sc
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|CHIP_MASK_CHK
argument_list|(
name|chip_mask
argument_list|)
condition|)
return|return;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|loop
condition|;
name|i
operator|++
control|)
block|{
name|val1
operator|=
name|REG_RD
argument_list|(
name|sc
argument_list|,
name|offset
operator|+
name|i
operator|*
name|inc
argument_list|)
expr_stmt|;
name|val2
operator|=
name|REG_RD
argument_list|(
name|sc
argument_list|,
name|offset
operator|+
name|i
operator|*
name|inc
operator|+
literal|4
argument_list|)
expr_stmt|;
name|rd_ptr
operator|=
operator|(
operator|(
name|val1
operator|&
literal|0x3FFFFFC0
operator|)
operator|>>
literal|6
operator|)
expr_stmt|;
name|wr_ptr
operator|=
operator|(
operator|(
operator|(
operator|(
name|val1
operator|&
literal|0xC0000000
operator|)
operator|>>
literal|30
operator|)
operator|&
literal|0x3
operator|)
operator||
operator|(
operator|(
name|val2
operator|&
literal|0x3FFFFF
operator|)
operator|<<
literal|2
operator|)
operator|)
expr_stmt|;
name|CONDITION_CHK
argument_list|(
operator|(
name|rd_ptr
operator|!=
name|wr_ptr
operator|)
argument_list|,
name|severity
argument_list|,
literal|"QM: PTRTBL entry %d - rd_ptr is not"
literal|" equal to wr_ptr. Values are 0x%x 0x%x\n"
argument_list|,
name|i
argument_list|,
name|rd_ptr
argument_list|,
name|wr_ptr
argument_list|)
expr_stmt|;
name|rd_bank
operator|=
operator|(
operator|(
name|val1
operator|&
literal|0x30
operator|)
operator|>>
literal|4
operator|)
expr_stmt|;
name|wr_bank
operator|=
operator|(
name|val1
operator|&
literal|0x03
operator|)
expr_stmt|;
name|CONDITION_CHK
argument_list|(
operator|(
name|rd_bank
operator|!=
name|wr_bank
operator|)
argument_list|,
name|severity
argument_list|,
literal|"QM: PTRTBL entry %d - rd_bank is not"
literal|" equal to wr_bank. Values are 0x%x 0x%x\n"
argument_list|,
name|i
argument_list|,
name|rd_bank
argument_list|,
name|wr_bank
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_comment
comment|/* Loop to read wide-bus reg and check according to another reg. */
end_comment

begin_define
define|#
directive|define
name|IDLE_CHK_7
parameter_list|(
name|chip_mask
parameter_list|,
name|offset
parameter_list|,
name|offset1
parameter_list|,
name|offset2
parameter_list|,
name|loop
parameter_list|,
name|inc
parameter_list|,	\
name|condition
parameter_list|,
name|severity
parameter_list|,
name|fail_msg
parameter_list|)
value|do {				\ 	if (CHIP_MASK_CHK(chip_mask))					\ 		for (int i = 0; i< (loop); i++) {			\ 			if (REG_RD(sc, offset + i * 4) == 1) {		\ 				val1 = REG_RD(sc, offset1 + i * (inc));	\ 				val1 = REG_RD(sc, offset1 + i * (inc) +	4); \ 				val1 = ((REG_RD(sc, offset1 + i * (inc)	+ 8)& \ 				    0x00000078)>> 3);			\ 				val2 = (REG_RD(sc, offset2 + i * 4)>> 1); \ 				CONDITION_CHK(condition, severity,	\ 				    fail_msg " - LCID %d CID_CAM 0x%x "	\ 				    "Value is 0x%x\n", i, val2, val1);	\ 			}						\ 		}							\ } while (0);
end_define

begin_comment
comment|/*  * Idle check.  *  * Performs a series of register reads and compares the returned values to  * expected values, looking for obvious errors.  The comparisons used here  * (IDLE_CHK_*) are machine generated and should not be modifed.  *  * Returns:  *   The number of errors encountered.  */
end_comment

begin_function
specifier|static
name|int
name|bxe_idle_chk
parameter_list|(
name|struct
name|bxe_softc
modifier|*
name|sc
parameter_list|)
block|{
name|struct
name|ifnet
modifier|*
name|ifp
decl_stmt|;
name|uint32_t
name|val
decl_stmt|,
name|val1
decl_stmt|,
name|val2
decl_stmt|;
name|int
name|is_e1
decl_stmt|,
name|is_e1h
decl_stmt|;
name|idle_chk_errors
operator|=
literal|0
expr_stmt|;
name|idle_chk_warnings
operator|=
literal|0
expr_stmt|;
name|ifp
operator|=
name|sc
operator|->
name|bxe_ifp
expr_stmt|;
name|is_e1
operator|=
name|CHIP_IS_E1
argument_list|(
name|sc
argument_list|)
expr_stmt|;
name|is_e1h
operator|=
name|CHIP_IS_E1H
argument_list|(
name|sc
argument_list|)
expr_stmt|;
comment|/* Don't run this code if the inteface hasn't been initialized. */
if|if
condition|(
operator|!
operator|(
name|ifp
operator|->
name|if_drv_flags
operator|&
name|IFF_DRV_RUNNING
operator|)
condition|)
goto|goto
name|bxe_idle_chk_exit
goto|;
name|BXE_PRINTF
argument_list|(
literal|"------------------------------"
literal|" Idle Check "
literal|"------------------------------\n"
argument_list|)
expr_stmt|;
comment|/* ToDo: Don't run this code is driver is NOT running. */
comment|/* Perform the idle checks. */
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
literal|0x2114
argument_list|,
operator|(
operator|(
name|val
operator|&
literal|0x0ff010
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PCIE: ucorr_err_status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
literal|0x2114
argument_list|,
operator|(
operator|(
name|val
operator|&
literal|0x100000
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PCIE: ucorr_err_status - Unsupported request error"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
literal|0x2120
argument_list|,
operator|(
operator|(
operator|(
name|val
operator|&
literal|0x31c1
operator|)
operator|!=
literal|0x2000
operator|)
operator|&&
operator|(
operator|(
name|val
operator|&
literal|0x31c1
operator|)
operator|!=
literal|0
operator|)
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PCIE: corr_err_status is not 0x2000"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
literal|0x2814
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x40100
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PCIE: attentions register is not 0x40100"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
literal|0x281c
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x40040100
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PCIE: attentions register is not 0x40040100"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
literal|0x2820
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x40040100
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PCIE: attentions register is not 0x40040100"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x1
argument_list|,
name|PXP2_REG_PGL_EXP_ROM2
argument_list|,
operator|(
name|val
operator|!=
literal|0xffffffff
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP2: There are outstanding read requests. Not all"
literal|" completions have arrived for read requests on tags that"
literal|" are marked with 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_2
argument_list|(
literal|0x3
argument_list|,
literal|0x212c
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
operator|(
operator|(
name|val
operator|!=
literal|0
operator|)
operator|&&
operator|(
name|idle_chk_errors
operator|>
literal|0
operator|)
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PCIE: error packet header %d is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ0_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ0 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ1_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ1 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ2_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ2 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ3_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|>
literal|2
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ3 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ4_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ4 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ5_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ5 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ6_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ6 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ7_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ7 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ8_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ8 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ9_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ9 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ10_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ10 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ11_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ11 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ12_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ12 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ13_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ13 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ14_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ14 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ15_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ15 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ16_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ16 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ17_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ17 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ18_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ18 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ19_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ19 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ20_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ20 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ21_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ21 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ22_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ22 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ23_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ23 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ24_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ24 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ25_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ25 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ26_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ26 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ27_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ27 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ28_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ28 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ29_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ29 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ30_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ30 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_VQ31_ENTRY_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: VQ31 is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_UFIFO_NUM_OF_ENTRY
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PXP2: rq_ufifo_num_of_entry is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_RBC_DONE
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PXP2: rq_rbc_done is not 1"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RQ_CFG_DONE
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PXP2: rq_cfg_done is not 1"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_PSWRQ_BW_CREDIT
argument_list|,
operator|(
name|val
operator|!=
literal|0x1b
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PXP2: rq_read_credit and rq_write_credit are not 3"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RD_START_INIT
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PXP2: rd_start_init is not 1"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RD_INIT_DONE
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PXP2: rd_init_done is not 1"
argument_list|)
expr_stmt|;
name|IDLE_CHK_3
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RD_SR_CNT
argument_list|,
name|PXP2_REG_RD_SR_NUM_CFG
argument_list|,
operator|(
name|val1
operator|!=
operator|(
name|val2
operator|-
literal|1
operator|)
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP2: rd_sr_cnt is not equal to rd_sr_num_cfg"
argument_list|)
expr_stmt|;
name|IDLE_CHK_3
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RD_BLK_CNT
argument_list|,
name|PXP2_REG_RD_BLK_NUM_CFG
argument_list|,
operator|(
name|val1
operator|!=
name|val2
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP2: rd_blk_cnt is not equal to rd_blk_num_cfg"
argument_list|)
expr_stmt|;
name|IDLE_CHK_3
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RD_SR_CNT
argument_list|,
name|PXP2_REG_RD_SR_NUM_CFG
argument_list|,
operator|(
name|val1
operator|<
operator|(
name|val2
operator|-
literal|3
operator|)
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: There are more than two unused SRs"
argument_list|)
expr_stmt|;
name|IDLE_CHK_3
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RD_BLK_CNT
argument_list|,
name|PXP2_REG_RD_BLK_NUM_CFG
argument_list|,
operator|(
name|val1
operator|<
operator|(
name|val2
operator|-
literal|2
operator|)
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: There are more than two unused blocks"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RD_PORT_IS_IDLE_0
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: P0 All delivery ports are not idle"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RD_PORT_IS_IDLE_1
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: P1 All delivery ports are not idle"
argument_list|)
expr_stmt|;
name|IDLE_CHK_2
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RD_ALMOST_FULL_0
argument_list|,
literal|11
argument_list|,
literal|4
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PXP2: rd_almost_full_%d is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_RD_DISABLE_INPUTS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PXP2: PSWRD inputs are disabled"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_HST_HEADER_FIFO_STATUS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: HST header FIFO status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_HST_DATA_FIFO_STATUS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: HST data FIFO status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_PGL_WRITE_BLOCKED
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PXP2: pgl_write_blocked is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_PGL_READ_BLOCKED
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PXP2: pgl_read_blocked is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_PGL_TXW_CDTS
argument_list|,
operator|(
operator|(
operator|(
name|val
operator|>>
literal|17
operator|)
operator|&
literal|1
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PXP2: There is data which is ready"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP_REG_HST_ARB_IS_IDLE
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP: HST arbiter is not idle"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP_REG_HST_CLIENTS_WAITING_TO_ARB
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP: HST one of the clients is waiting for delivery"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|PXP_REG_HST_DISCARD_INTERNAL_WRITES_STATUS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP: HST Close the gates: Discarding internal writes"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|PXP_REG_HST_DISCARD_DOORBELLS_STATUS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP: HST Close the gates: Discarding doorbells"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 0 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 1 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C2
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 2 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C3
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 3 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C4
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 4 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C5
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 5 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C6
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 6 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C7
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 7 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C8
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 8 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C9
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 9 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C10
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 10 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C11
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 11 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C12
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 12 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C13
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 13 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C14
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 14 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_GO_C15
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DMAE: command 15 go is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CFC_REG_ERROR_VECTOR
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CFC: error vector is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CFC_REG_NUM_LCIDS_ARRIVING
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CFC: number of arriving LCIDs is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CFC_REG_NUM_LCIDS_ALLOC
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CFC: number of alloc LCIDs is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CFC_REG_NUM_LCIDS_LEAVING
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CFC: number of leaving LCIDs is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_4
argument_list|(
literal|0x3
argument_list|,
name|CFC_REG_ACTIVITY_COUNTER
argument_list|,
name|CFC_REG_CID_CAM
argument_list|,
operator|(
name|CFC_REG_ACTIVITY_COUNTER_SIZE
operator|>>
literal|2
operator|)
argument_list|,
literal|4
argument_list|,
operator|(
name|val1
operator|>
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CFC: AC> 1"
argument_list|)
expr_stmt|;
name|IDLE_CHK_7
argument_list|(
literal|0x3
argument_list|,
name|CFC_REG_ACTIVITY_COUNTER
argument_list|,
name|CFC_REG_INFO_RAM
argument_list|,
name|CFC_REG_CID_CAM
argument_list|,
operator|(
name|CFC_REG_INFO_RAM_SIZE
operator|>>
literal|4
operator|)
argument_list|,
literal|16
argument_list|,
operator|(
name|val1
operator|==
literal|3
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"CFC: AC is 1, connType is 3"
argument_list|)
expr_stmt|;
name|IDLE_CHK_7
argument_list|(
literal|0x3
argument_list|,
name|CFC_REG_ACTIVITY_COUNTER
argument_list|,
name|CFC_REG_INFO_RAM
argument_list|,
name|CFC_REG_CID_CAM
argument_list|,
operator|(
name|CFC_REG_INFO_RAM_SIZE
operator|>>
literal|4
operator|)
argument_list|,
literal|16
argument_list|,
operator|(
operator|(
name|val1
operator|!=
literal|0
operator|)
operator|&&
operator|(
name|val1
operator|!=
literal|3
operator|)
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CFC: AC is 1, connType is not 0 nor 3"
argument_list|)
expr_stmt|;
name|IDLE_CHK_2
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_QTASKCTR_0
argument_list|,
literal|64
argument_list|,
literal|4
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"QM: Q_%d, queue is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_3
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_VOQCREDIT_0
argument_list|,
name|QM_REG_VOQINITCREDIT_0
argument_list|,
operator|(
name|val1
operator|!=
name|val2
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"QM: VOQ_0, VOQ credit is not equal to initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_3
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_VOQCREDIT_1
argument_list|,
name|QM_REG_VOQINITCREDIT_1
argument_list|,
operator|(
name|val1
operator|!=
name|val2
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"QM: VOQ_1, VOQ credit is not equal to initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_3
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_VOQCREDIT_4
argument_list|,
name|QM_REG_VOQINITCREDIT_4
argument_list|,
operator|(
name|val1
operator|!=
name|val2
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: VOQ_4, VOQ credit is not equal to initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_3
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_PORT0BYTECRD
argument_list|,
name|QM_REG_BYTECRDINITVAL
argument_list|,
operator|(
name|val1
operator|!=
name|val2
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"QM: P0 Byte credit is not equal to initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_3
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_PORT1BYTECRD
argument_list|,
name|QM_REG_BYTECRDINITVAL
argument_list|,
operator|(
name|val1
operator|!=
name|val2
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"QM: P1 Byte credit is not equal to initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_CAM_OCCUP
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"CCM: XX protection CAM is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_CAM_OCCUP
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TCM: XX protection CAM is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_CAM_OCCUP
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"UCM: XX protection CAM is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_CAM_OCCUP
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"XCM: XX protection CAM is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|BRB1_REG_NUM_OF_FULL_BLOCKS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"BRB1: BRB is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSEM_REG_SLEEP_THREADS_VALID
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CSEM: There are sleeping threads"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSEM_REG_SLEEP_THREADS_VALID
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"TSEM: There are sleeping threads"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USEM_REG_SLEEP_THREADS_VALID
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"USEM: There are sleeping threads"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSEM_REG_SLEEP_THREADS_VALID
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"XSEM: There are sleeping threads"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSEM_REG_SLOW_EXT_STORE_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CSEM: External store FIFO is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSEM_REG_SLOW_EXT_STORE_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"TSEM: External store FIFO is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USEM_REG_SLOW_EXT_STORE_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"USEM: External store FIFO is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSEM_REG_SLOW_EXT_STORE_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"XSEM: External store FIFO is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSDM_REG_SYNC_PARSER_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CSDM: Parser serial FIFO is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSDM_REG_SYNC_PARSER_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"TSDM: Parser serial FIFO is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USDM_REG_SYNC_PARSER_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"USDM: Parser serial FIFO is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSDM_REG_SYNC_PARSER_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XSDM: Parser serial FIFO is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSDM_REG_SYNC_SYNC_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CSDM: Parser SYNC serial FIFO is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSDM_REG_SYNC_SYNC_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TSDM: Parser SYNC serial FIFO is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USDM_REG_SYNC_SYNC_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"USDM: Parser SYNC serial FIFO is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSDM_REG_SYNC_SYNC_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XSDM: Parser SYNC serial FIFO is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSDM_REG_RSP_PXP_CTRL_RDATA_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CSDM: pxp_ctrl rd_data fifo is not empty in sdm_dma_rsp block"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSDM_REG_RSP_PXP_CTRL_RDATA_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TSDM: pxp_ctrl rd_data fifo is not empty in sdm_dma_rsp block"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USDM_REG_RSP_PXP_CTRL_RDATA_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"USDM: pxp_ctrl rd_data fifo is not empty in sdm_dma_rsp block"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSDM_REG_RSP_PXP_CTRL_RDATA_EMPTY
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"XSDM: pxp_ctrl rd_data fifo is not empty in sdm_dma_rsp block"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DORQ_REG_DQ_FILL_LVLF
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DQ: DORQ queue is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CFC_REG_CFC_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CFC: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CDU_REG_CDU_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CDU: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_CCM_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CCM: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_TCM_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TCM: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_UCM_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"UCM: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_XCM_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PBF_REG_PBF_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PBF: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TM_REG_TM_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TIMERS: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DORQ_REG_DORQ_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"DQ: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|SRC_REG_SRC_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"SRCH: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PRS_REG_PRS_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PRS: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|BRB1_REG_BRB1_INT_STS
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0xfc00
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"BRB1: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|GRCBASE_XPB
operator|+
name|PB_REG_PB_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XPB: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|GRCBASE_UPB
operator|+
name|PB_REG_PB_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"UPB: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP2_REG_PXP2_INT_STS_0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP2: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|PXP2_REG_PXP2_INT_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP2: interrupt status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_QM_INT_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: interrupt status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP_REG_PXP_INT_STS_0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PXP: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP_REG_PXP_INT_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PXP: interrupt status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DORQ_REG_RSPA_CRD_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|2
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"DQ: Credit to XCM is not full"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DORQ_REG_RSPB_CRD_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|2
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"DQ: Credit to UCM is not full"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_VOQCRDERRREG
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: Credit error register is not 0 (byte or credit"
literal|" overflow/underflow)"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DORQ_REG_DQ_FULL_ST
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"DQ: DORQ queue is full"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|MISC_REG_AEU_AFTER_INVERT_1_FUNC_0
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0xcffc
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"AEU: P0 AFTER_INVERT_1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|MISC_REG_AEU_AFTER_INVERT_2_FUNC_0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"AEU: P0 AFTER_INVERT_2 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|MISC_REG_AEU_AFTER_INVERT_3_FUNC_0
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0xc21b0000
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"AEU: P0 AFTER_INVERT_3 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|MISC_REG_AEU_AFTER_INVERT_4_FUNC_0
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x801fffff
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"AEU: P0 AFTER_INVERT_4 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|MISC_REG_AEU_AFTER_INVERT_1_FUNC_1
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0xcffc
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"AEU: P1 AFTER_INVERT_1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|MISC_REG_AEU_AFTER_INVERT_2_FUNC_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"AEU: P1 AFTER_INVERT_2 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|MISC_REG_AEU_AFTER_INVERT_3_FUNC_1
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0xc21b0000
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"AEU: P1 AFTER_INVERT_3 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|MISC_REG_AEU_AFTER_INVERT_4_FUNC_1
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x801fffff
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"AEU: P1 AFTER_INVERT_4 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|MISC_REG_AEU_AFTER_INVERT_1_MCP
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0xcffc
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"AEU: MCP AFTER_INVERT_1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|MISC_REG_AEU_AFTER_INVERT_2_MCP
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"AEU: MCP AFTER_INVERT_2 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|MISC_REG_AEU_AFTER_INVERT_3_MCP
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0xc21b0000
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"AEU: MCP AFTER_INVERT_3 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|MISC_REG_AEU_AFTER_INVERT_4_MCP
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x801fffff
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"AEU: MCP AFTER_INVERT_4 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_5
argument_list|(
literal|0x3
argument_list|,
name|PBF_REG_DISABLE_NEW_TASK_PROC_P0
argument_list|,
name|PBF_REG_P0_CREDIT
argument_list|,
name|PBF_REG_P0_INIT_CRD
argument_list|,
operator|(
name|val1
operator|!=
name|val2
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PBF: P0 credit is not equal to init_crd"
argument_list|)
expr_stmt|;
name|IDLE_CHK_5
argument_list|(
literal|0x3
argument_list|,
name|PBF_REG_DISABLE_NEW_TASK_PROC_P1
argument_list|,
name|PBF_REG_P1_CREDIT
argument_list|,
name|PBF_REG_P1_INIT_CRD
argument_list|,
operator|(
name|val1
operator|!=
name|val2
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PBF: P1 credit is not equal to init_crd"
argument_list|)
expr_stmt|;
name|IDLE_CHK_3
argument_list|(
literal|0x3
argument_list|,
name|PBF_REG_P4_CREDIT
argument_list|,
name|PBF_REG_P4_INIT_CRD
argument_list|,
operator|(
name|val1
operator|!=
name|val2
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PBF: P4 credit is not equal to init_crd"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PBF_REG_P0_TASK_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PBF: P0 task_cnt is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PBF_REG_P1_TASK_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PBF: P1 task_cnt is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PBF_REG_P4_TASK_CNT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PBF: P4 task_cnt is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_CFC_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: CFC_INIT_CRD is not 1"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_CFC_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"UCM: CFC_INIT_CRD is not 1"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_CFC_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TCM: CFC_INIT_CRD is not 1"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_CFC_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|1
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"CCM: CFC_INIT_CRD is not 1"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_XQM_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|32
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: XQM_INIT_CRD is not 32"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_UQM_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|32
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"UCM: UQM_INIT_CRD is not 32"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_TQM_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|32
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TCM: TQM_INIT_CRD is not 32"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_CQM_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|32
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"CCM: CQM_INIT_CRD is not 32"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_TM_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|4
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: TM_INIT_CRD is not 4"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_TM_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|4
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"UCM: TM_INIT_CRD is not 4"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_FIC0_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|64
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"XCM: FIC0_INIT_CRD is not 64"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_FIC0_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|64
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"UCM: FIC0_INIT_CRD is not 64"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_FIC0_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|64
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"TCM: FIC0_INIT_CRD is not 64"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_FIC0_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|64
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"CCM: FIC0_INIT_CRD is not 64"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_FIC1_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|64
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: FIC1_INIT_CRD is not 64"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_FIC1_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|64
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"UCM: FIC1_INIT_CRD is not 64"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_FIC1_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|64
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TCM: FIC1_INIT_CRD is not 64"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_FIC1_INIT_CRD
argument_list|,
operator|(
name|val
operator|!=
literal|64
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CCM: FIC1_INIT_CRD is not 64"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x1
argument_list|,
name|XCM_REG_XX_FREE
argument_list|,
operator|(
name|val
operator|!=
literal|31
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: XX_FREE is not 31"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|XCM_REG_XX_FREE
argument_list|,
operator|(
name|val
operator|!=
literal|32
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: XX_FREE is not 32"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_XX_FREE
argument_list|,
operator|(
name|val
operator|!=
literal|27
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"UCM: XX_FREE is not 27"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_XX_FREE
argument_list|,
operator|(
name|val
operator|!=
literal|32
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TCM: XX_FREE is not 32"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_XX_FREE
argument_list|,
operator|(
name|val
operator|!=
literal|24
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CCM: XX_FREE is not 24"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSEM_REG_FAST_MEMORY
operator|+
literal|0x18000
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"XSEM: FOC0 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSEM_REG_FAST_MEMORY
operator|+
literal|0x18040
argument_list|,
operator|(
name|val
operator|!=
literal|24
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"XSEM: FOC1 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSEM_REG_FAST_MEMORY
operator|+
literal|0x18080
argument_list|,
operator|(
name|val
operator|!=
literal|12
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"XSEM: FOC2 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSEM_REG_FAST_MEMORY
operator|+
literal|0x180C0
argument_list|,
operator|(
name|val
operator|!=
literal|102
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"XSEM: FOC3 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USEM_REG_FAST_MEMORY
operator|+
literal|0x18000
argument_list|,
operator|(
name|val
operator|!=
literal|26
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"USEM: FOC0 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USEM_REG_FAST_MEMORY
operator|+
literal|0x18040
argument_list|,
operator|(
name|val
operator|!=
literal|78
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"USEM: FOC1 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USEM_REG_FAST_MEMORY
operator|+
literal|0x18080
argument_list|,
operator|(
name|val
operator|!=
literal|16
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"USEM: FOC2 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USEM_REG_FAST_MEMORY
operator|+
literal|0x180C0
argument_list|,
operator|(
name|val
operator|!=
literal|32
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"USEM: FOC3 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSEM_REG_FAST_MEMORY
operator|+
literal|0x18000
argument_list|,
operator|(
name|val
operator|!=
literal|52
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"TSEM: FOC0 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSEM_REG_FAST_MEMORY
operator|+
literal|0x18040
argument_list|,
operator|(
name|val
operator|!=
literal|24
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"TSEM: FOC1 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSEM_REG_FAST_MEMORY
operator|+
literal|0x18080
argument_list|,
operator|(
name|val
operator|!=
literal|12
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"TSEM: FOC2 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSEM_REG_FAST_MEMORY
operator|+
literal|0x180C0
argument_list|,
operator|(
name|val
operator|!=
literal|32
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"TSEM: FOC3 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSEM_REG_FAST_MEMORY
operator|+
literal|0x18000
argument_list|,
operator|(
name|val
operator|!=
literal|16
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"CSEM: FOC0 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSEM_REG_FAST_MEMORY
operator|+
literal|0x18040
argument_list|,
operator|(
name|val
operator|!=
literal|18
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"CSEM: FOC1 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSEM_REG_FAST_MEMORY
operator|+
literal|0x18080
argument_list|,
operator|(
name|val
operator|!=
literal|48
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"CSEM: FOC2 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSEM_REG_FAST_MEMORY
operator|+
literal|0x180C0
argument_list|,
operator|(
name|val
operator|!=
literal|14
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"CSEM: FOC3 credit less than initial credit"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PRS_REG_TSDM_CURRENT_CREDIT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PRS: TSDM current credit is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PRS_REG_TCM_CURRENT_CREDIT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PRS: TCM current credit is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PRS_REG_CFC_LD_CURRENT_CREDIT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PRS: CFC_LD current credit is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PRS_REG_CFC_SEARCH_CURRENT_CREDIT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"PRS: CFC_SEARCH current credit is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PRS_REG_SRC_CURRENT_CREDIT
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PRS: SRCH current credit is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PRS_REG_PENDING_BRB_PRS_RQ
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PRS: PENDING_BRB_PRS_RQ is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_2
argument_list|(
literal|0x3
argument_list|,
name|PRS_REG_PENDING_BRB_CAC0_RQ
argument_list|,
literal|5
argument_list|,
literal|4
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PRS: PENDING_BRB_CAC%d_RQ is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PRS_REG_SERIAL_NUM_STATUS_LSB
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PRS: SERIAL_NUM_STATUS_LSB is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PRS_REG_SERIAL_NUM_STATUS_MSB
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"PRS: SERIAL_NUM_STATUS_MSB is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CDU_REG_ERROR_DATA
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CDU: ERROR_DATA is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_STORM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CCM: STORM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_CSDM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CCM: CSDM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_TSEM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CCM: TSEM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_XSEM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CCM: XSEM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_USEM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CCM: USEM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CCM_REG_PBF_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CCM: PBF declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_STORM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TCM: STORM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_TSDM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TCM: TSDM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_PRS_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TCM: PRS declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_PBF_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TCM: PBF declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_USEM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TCM: USEM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TCM_REG_CSEM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TCM: CSEM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_STORM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"UCM: STORM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_USDM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"UCM: USDM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_TSEM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"UCM: TSEM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_CSEM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"UCM: CSEM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_XSEM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"UCM: XSEM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|UCM_REG_DORQ_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"UCM: DORQ declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_STORM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: STORM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_XSDM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: XSDM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_TSEM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: TSEM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_CSEM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: CSEM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_USEM_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: USEM declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_DORQ_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: DORQ declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_PBF_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: PBF declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_NIG0_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: NIG0 declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XCM_REG_NIG1_LENGTH_MIS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XCM: NIG1 declared message length unequal to actual"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_XQM_WRC_FIFOLVL
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: XQM wrc_fifolvl is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_UQM_WRC_FIFOLVL
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: UQM wrc_fifolvl is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_TQM_WRC_FIFOLVL
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: TQM wrc_fifolvl is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_CQM_WRC_FIFOLVL
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: CQM wrc_fifolvl is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_QSTATUS_LOW
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: QSTATUS_LOW is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_QSTATUS_HIGH
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: QSTATUS_HIGH is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_PAUSESTATE0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: PAUSESTATE0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_PAUSESTATE1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: PAUSESTATE1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_OVFQNUM
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: OVFQNUM is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_OVFERROR
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: OVFERROR is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_6
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_PTRTBL
argument_list|,
literal|64
argument_list|,
literal|8
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|BRB1_REG_BRB1_PRTY_STS
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x8
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"BRB1: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CDU_REG_CDU_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"CDU: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CFC_REG_CFC_PRTY_STS
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x2
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"CFC: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSDM_REG_CSDM_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"CSDM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DBG_REG_DBG_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"DBG: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DMAE_REG_DMAE_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"DMAE: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|DORQ_REG_DORQ_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"DQ: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x1
argument_list|,
name|TCM_REG_TCM_PRTY_STS
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x3ffc0
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"TCM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|TCM_REG_TCM_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"TCM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x1
argument_list|,
name|CCM_REG_CCM_PRTY_STS
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x3ffc0
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"CCM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|CCM_REG_CCM_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"CCM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x1
argument_list|,
name|UCM_REG_UCM_PRTY_STS
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x3ffc0
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"UCM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|UCM_REG_UCM_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"UCM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x1
argument_list|,
name|XCM_REG_XCM_PRTY_STS
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x3ffc0
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"XCM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|XCM_REG_XCM_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"XCM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x1
argument_list|,
name|HC_REG_HC_PRTY_STS
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x1
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"HC: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x1
argument_list|,
name|MISC_REG_MISC_PRTY_STS
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x1
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"MISC: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PRS_REG_PRS_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PRS: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|PXP_REG_PXP_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|QM_REG_QM_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"QM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x1
argument_list|,
name|SRC_REG_SRC_PRTY_STS
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x4
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"SRCH: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSDM_REG_TSDM_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"TSDM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USDM_REG_USDM_PRTY_STS
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x20
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"USDM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSDM_REG_XSDM_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"XSDM: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|GRCBASE_XPB
operator|+
name|PB_REG_PB_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"XPB: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|GRCBASE_UPB
operator|+
name|PB_REG_PB_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"UPB: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSEM_REG_CSEM_PRTY_STS_0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"CSEM: parity status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x1
argument_list|,
name|PXP2_REG_PXP2_PRTY_STS_0
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0xfff40020
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP2: parity status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|PXP2_REG_PXP2_PRTY_STS_0
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x20
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP2: parity status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSEM_REG_TSEM_PRTY_STS_0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"TSEM: parity status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USEM_REG_USEM_PRTY_STS_0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"USEM: parity status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSEM_REG_XSEM_PRTY_STS_0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"XSEM: parity status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSEM_REG_CSEM_PRTY_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"CSEM: parity status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x1
argument_list|,
name|PXP2_REG_PXP2_PRTY_STS_1
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x20
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP2: parity status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|PXP2_REG_PXP2_PRTY_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"PXP2: parity status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSEM_REG_TSEM_PRTY_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"TSEM: parity status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USEM_REG_USEM_PRTY_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"USEM: parity status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSEM_REG_XSEM_PRTY_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"XSEM: parity status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_2
argument_list|(
literal|0x2
argument_list|,
name|QM_REG_QTASKCTR_EXT_A_0
argument_list|,
literal|64
argument_list|,
literal|4
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|,
literal|"QM: Q_EXT_A_%d, queue is not empty"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|QM_REG_QSTATUS_LOW_EXT_A
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: QSTATUS_LOW_EXT_A is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|QM_REG_QSTATUS_HIGH_EXT_A
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: QSTATUS_HIGH_EXT_A is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|QM_REG_PAUSESTATE2
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: PAUSESTATE2 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|QM_REG_PAUSESTATE3
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: PAUSESTATE3 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|QM_REG_PAUSESTATE4
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: PAUSESTATE4 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|QM_REG_PAUSESTATE5
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: PAUSESTATE5 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|QM_REG_PAUSESTATE6
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: PAUSESTATE6 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|QM_REG_PAUSESTATE7
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"QM: PAUSESTATE7 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_6
argument_list|(
literal|0x2
argument_list|,
name|QM_REG_PTRTBL_EXT_A
argument_list|,
literal|64
argument_list|,
literal|8
argument_list|,
name|IDLE_CHK_ERROR_NO_TRAFFIC
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|MISC_REG_AEU_SYS_KILL_OCCURRED
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"MISC: system kill occurd;"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|MISC_REG_AEU_SYS_KILL_STATUS_0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"MISC: system kill occurd; status_0 register"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|MISC_REG_AEU_SYS_KILL_STATUS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"MISC: system kill occurd; status_1 register"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|MISC_REG_AEU_SYS_KILL_STATUS_2
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"MISC: system kill occurd; status_2 register"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|MISC_REG_AEU_SYS_KILL_STATUS_3
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"MISC: system kill occurd; status_3 register"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|MISC_REG_PCIE_HOT_RESET
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"MISC: pcie_rst_b was asserted without perst assertion"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|NIG_REG_NIG_INT_STS_0
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x300
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"NIG: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|NIG_REG_NIG_INT_STS_0
argument_list|,
operator|(
name|val
operator|==
literal|0x300
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"NIG: Access to BMAC while not active. If tested on FPGA,"
literal|" ignore this warning."
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|NIG_REG_NIG_INT_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"NIG: interrupt status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|NIG_REG_NIG_PRTY_STS
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0xffc00000
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"NIG: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSEM_REG_TSEM_INT_STS_0
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x10000000
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TSEM: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSEM_REG_TSEM_INT_STS_0
argument_list|,
operator|(
name|val
operator|==
literal|0x10000000
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"TSEM: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSEM_REG_TSEM_INT_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TSEM: interrupt status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSEM_REG_CSEM_INT_STS_0
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x10000000
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CSEM: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSEM_REG_CSEM_INT_STS_0
argument_list|,
operator|(
name|val
operator|==
literal|0x10000000
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"CSEM: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSEM_REG_CSEM_INT_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CSEM: interrupt status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USEM_REG_USEM_INT_STS_0
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x10000000
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"USEM: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USEM_REG_USEM_INT_STS_0
argument_list|,
operator|(
name|val
operator|==
literal|0x10000000
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"USEM: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USEM_REG_USEM_INT_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"USEM: interrupt status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSEM_REG_XSEM_INT_STS_0
argument_list|,
operator|(
operator|(
name|val
operator|&
operator|~
literal|0x10000000
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XSEM: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSEM_REG_XSEM_INT_STS_0
argument_list|,
operator|(
name|val
operator|==
literal|0x10000000
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"XSEM: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSEM_REG_XSEM_INT_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XSEM: interrupt status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSDM_REG_TSDM_INT_STS_0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TSDM: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|TSDM_REG_TSDM_INT_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"TSDM: interrupt status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSDM_REG_CSDM_INT_STS_0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CSDM: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|CSDM_REG_CSDM_INT_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"CSDM: interrupt status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USDM_REG_USDM_INT_STS_0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"USDM: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|USDM_REG_USDM_INT_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"USDM: interrupt status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSDM_REG_XSDM_INT_STS_0
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XSDM: interrupt status 0 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x3
argument_list|,
name|XSDM_REG_XSDM_INT_STS_1
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_ERROR
argument_list|,
literal|"XSDM: interrupt status 1 is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|HC_REG_HC_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"HC: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|MISC_REG_MISC_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"MISC: parity status is not 0"
argument_list|)
expr_stmt|;
name|IDLE_CHK_1
argument_list|(
literal|0x2
argument_list|,
name|SRC_REG_SRC_PRTY_STS
argument_list|,
operator|(
name|val
operator|!=
literal|0
operator|)
argument_list|,
name|IDLE_CHK_WARNING
argument_list|,
literal|"SRCH: parity status is not 0"
argument_list|)
expr_stmt|;
if|if
condition|(
name|idle_chk_errors
operator|==
literal|0
condition|)
block|{
name|BXE_PRINTF
argument_list|(
literal|"%s(): Completed successfuly with %d warning(s).\n"
argument_list|,
name|__FUNCTION__
argument_list|,
name|idle_chk_warnings
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|BXE_PRINTF
argument_list|(
literal|"%s(): Failed with %d error(s) and %d warning(s)!\n"
argument_list|,
name|__FUNCTION__
argument_list|,
name|idle_chk_errors
argument_list|,
name|idle_chk_warnings
argument_list|)
expr_stmt|;
block|}
name|BXE_PRINTF
argument_list|(
literal|"----------------------------"
literal|"----------------"
literal|"----------------------------\n"
argument_list|)
expr_stmt|;
name|bxe_idle_chk_exit
label|:
return|return
operator|(
name|idle_chk_errors
operator|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _BXE_SELF_TEST_H */
end_comment

end_unit

