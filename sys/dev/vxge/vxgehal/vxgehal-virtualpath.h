begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright(c) 2002-2011 Exar Corp.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification are permitted provided the following conditions are met:  *  *    1. Redistributions of source code must retain the above copyright notice,  *       this list of conditions and the following disclaimer.  *  *    2. Redistributions in binary form must reproduce the above copyright  *       notice, this list of conditions and the following disclaimer in the  *       documentation and/or other materials provided with the distribution.  *  *    3. Neither the name of the Exar Corporation nor the names of its  *       contributors may be used to endorse or promote products derived from  *       this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*$FreeBSD$*/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|VXGE_HAL_VIRTUALPATH_H
end_ifndef

begin_define
define|#
directive|define
name|VXGE_HAL_VIRTUALPATH_H
end_define

begin_macro
name|__EXTERN_BEGIN_DECLS
end_macro

begin_struct_decl
struct_decl|struct
name|__hal_device_t
struct_decl|;
end_struct_decl

begin_comment
comment|/*  * struct __hal_virtualpath_t - Virtual Path  *  * @vp_id: Virtual path id  * @vp_open: This flag specifies if vxge_hal_vp_open is called from LL Driver  * @hldev: Hal device  * @vp_config: Virtual Path Config  * @vp_reg: VPATH Register map address in BAR0  * @vpmgmt_reg: VPATH_MGMT register map address  * @is_first_vpath: 1 if this first vpath in this vfunc, 0 otherwise  * @promisc_en: Promisc mode state flag.  * @min_bandwidth: Guaranteed Band Width in Mbps  * @max_bandwidth: Maximum Band Width in Mbps  * @max_mtu: Max mtu that can be supported  * @sess_grps_available: The mask of available session groups for this vpath  * @bmap_root_assigned: The bitmap root for this vpath  * @vsport_choices: The mask of vsports that are available for this vpath  * @vsport_number: vsport attached to this vpath  * @sess_grp_start: Session oid start  * @sess_grp_end: session oid end  * @max_kdfc_db: Maximum kernel mode doorbells  * @max_nofl_db: Maximum non offload doorbells  * @max_ofl_db: Maximum offload doorbells  * @max_msg_db: Maximum message doorbells  * @rxd_mem_size: Maximum RxD memory size  * @tx_intr_num: Interrupt Number associated with the TX  * @rx_intr_num: Interrupt Number associated with the RX  * @einta_intr_num: Interrupt Number associated with Emulated MSIX DeAssert IntA  * @bmap_intr_num: Interrupt Number associated with the bitmap  * @nce_oid_db: NCE ID database  * @session_oid_db: Session Object Id database  * @active_lros: Active LRO session list  * @active_lro_count: Active LRO count  * @free_lros: Free LRO session list  * @free_lro_count: Free LRO count  * @lro_lock: LRO session lists' lock  * @sqs: List of send queues  * @sq_lock: Lock for operations on sqs  * @srqs: List of SRQs  * @srq_lock: Lock for operations on srqs  * @srq_oid_db: DRQ object id database  * @cqrqs: CQRQs  * @cqrq_lock: Lock for operations on cqrqs  * @cqrq_oid_db: CQRQ object id database  * @umqh: UP Message Queue  * @dmqh: Down Message Queue  * @umq_dmq_ir: The adapter will overwrite and update this location as Messages  *		are read from DMQ and written into UMQ.  * @umq_dmq_ir_reg_entry: Reg entry of umq_dmq_ir_t  * @ringh: Ring Queue  * @fifoh: FIFO Queue  * @vpath_handles: Virtual Path handles list  * @vpath_handles_lock: Lock for operations on Virtual Path handles list  * @stats_block: Memory for DMAing stats  * @stats: Vpath statistics  *  * Virtual path structure to encapsulate the data related to a virtual path.  * Virtual paths are allocated by the HAL upon getting configuration from the  * driver and inserted into the list of virtual paths.  */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|__hal_virtualpath_t
block|{
name|u32
name|vp_id
decl_stmt|;
name|u32
name|vp_open
decl_stmt|;
define|#
directive|define
name|VXGE_HAL_VP_NOT_OPEN
value|0
define|#
directive|define
name|VXGE_HAL_VP_OPEN
value|1
name|struct
name|__hal_device_t
modifier|*
name|hldev
decl_stmt|;
name|vxge_hal_vp_config_t
modifier|*
name|vp_config
decl_stmt|;
name|vxge_hal_vpath_reg_t
modifier|*
name|vp_reg
decl_stmt|;
name|vxge_hal_vpmgmt_reg_t
modifier|*
name|vpmgmt_reg
decl_stmt|;
name|__hal_non_offload_db_wrapper_t
modifier|*
name|nofl_db
decl_stmt|;
name|__hal_messaging_db_wrapper_t
modifier|*
name|msg_db
decl_stmt|;
name|u32
name|is_first_vpath
decl_stmt|;
name|u32
name|promisc_en
decl_stmt|;
define|#
directive|define
name|VXGE_HAL_VP_PROMISC_ENABLE
value|1
define|#
directive|define
name|VXGE_HAL_VP_PROMISC_DISABLE
value|0
name|u32
name|min_bandwidth
decl_stmt|;
name|u32
name|max_bandwidth
decl_stmt|;
name|u32
name|max_mtu
decl_stmt|;
name|u64
name|sess_grps_available
decl_stmt|;
name|u32
name|bmap_root_assigned
decl_stmt|;
name|u32
name|vsport_choices
decl_stmt|;
name|u32
name|vsport_number
decl_stmt|;
name|u32
name|sess_grp_start
decl_stmt|;
name|u32
name|sess_grp_end
decl_stmt|;
name|u32
name|max_kdfc_db
decl_stmt|;
name|u32
name|max_nofl_db
decl_stmt|;
name|u32
name|max_ofl_db
decl_stmt|;
name|u32
name|max_msg_db
decl_stmt|;
name|u32
name|rxd_mem_size
decl_stmt|;
name|u32
name|tx_intr_num
decl_stmt|;
name|u32
name|rx_intr_num
decl_stmt|;
name|u32
name|einta_intr_num
decl_stmt|;
name|u32
name|bmap_intr_num
decl_stmt|;
name|u64
name|tim_tti_cfg1_saved
decl_stmt|;
name|u64
name|tim_tti_cfg3_saved
decl_stmt|;
name|u64
name|tim_rti_cfg1_saved
decl_stmt|;
name|u64
name|tim_rti_cfg3_saved
decl_stmt|;
name|vxge_hal_ring_h
name|ringh
decl_stmt|;
name|vxge_hal_fifo_h
name|fifoh
decl_stmt|;
name|vxge_list_t
name|vpath_handles
decl_stmt|;
name|spinlock_t
name|vpath_handles_lock
decl_stmt|;
name|__hal_blockpool_entry_t
modifier|*
name|stats_block
decl_stmt|;
name|vxge_hal_vpath_stats_hw_info_t
modifier|*
name|hw_stats
decl_stmt|;
name|vxge_hal_vpath_stats_hw_info_t
modifier|*
name|hw_stats_sav
decl_stmt|;
name|vxge_hal_vpath_stats_sw_info_t
modifier|*
name|sw_stats
decl_stmt|;
block|}
name|__hal_virtualpath_t
typedef|;
end_typedef

begin_comment
comment|/*  * struct __hal_vpath_handle_t - List item to store callback information  * @item: List head to keep the item in linked list  * @vpath: Virtual path to which this item belongs  * @cb_fn: Callback function to be called  * @client_handle: Client handle to be returned with the callback  *  * This structure is used to store the callback information.  */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|__hal_vpath_handle_t
block|{
name|vxge_list_t
name|item
decl_stmt|;
name|__hal_virtualpath_t
modifier|*
name|vpath
decl_stmt|;
name|vxge_hal_vpath_callback_f
name|cb_fn
decl_stmt|;
name|vxge_hal_client_h
name|client_handle
decl_stmt|;
block|}
name|__hal_vpath_handle_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|VXGE_HAL_VIRTUAL_PATH_HANDLE
parameter_list|(
name|vpath
parameter_list|)
define|\
value|((vxge_hal_vpath_h)(vpath)->vpath_handles.next)
end_define

begin_define
define|#
directive|define
name|VXGE_HAL_VPATH_STATS_PIO_READ
parameter_list|(
name|offset
parameter_list|)
value|{				\ 	status = __hal_vpath_stats_access(vpath,			\ 			VXGE_HAL_STATS_OP_READ,				\ 			offset,						\&val64);					\ 	if (status != VXGE_HAL_OK) {					\ 		vxge_hal_trace_log_stats("<== %s:%s:%d  Result: %d",	\ 		    __FILE__, __func__, __LINE__, status);		\ 		return (status);					\ 	}								\ }
end_define

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_size_quantum_set
parameter_list|(
name|vxge_hal_device_h
name|devh
parameter_list|,
name|u32
name|vp_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_mgmt_read
parameter_list|(
name|struct
name|__hal_device_t
modifier|*
name|hldev
parameter_list|,
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_pci_read
parameter_list|(
name|struct
name|__hal_device_t
modifier|*
name|hldev
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|u32
name|offset
parameter_list|,
name|u32
name|length
parameter_list|,
name|void
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_reset_check
parameter_list|(
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_fw_memo_get
parameter_list|(
name|pci_dev_h
name|pdev
parameter_list|,
name|pci_reg_h
name|regh0
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|vxge_hal_vpath_reg_t
modifier|*
name|vpath_reg
parameter_list|,
name|u32
name|action
parameter_list|,
name|u64
name|param_index
parameter_list|,
name|u64
modifier|*
name|data0
parameter_list|,
name|u64
modifier|*
name|data1
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_fw_flash_ver_get
parameter_list|(
name|pci_dev_h
name|pdev
parameter_list|,
name|pci_reg_h
name|regh0
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|vxge_hal_vpath_reg_t
modifier|*
name|vpath_reg
parameter_list|,
name|vxge_hal_device_version_t
modifier|*
name|fw_version
parameter_list|,
name|vxge_hal_device_date_t
modifier|*
name|fw_date
parameter_list|,
name|vxge_hal_device_version_t
modifier|*
name|flash_version
parameter_list|,
name|vxge_hal_device_date_t
modifier|*
name|flash_date
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_card_info_get
parameter_list|(
name|pci_dev_h
name|pdev
parameter_list|,
name|pci_reg_h
name|regh0
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|vxge_hal_vpath_reg_t
modifier|*
name|vpath_reg
parameter_list|,
name|u8
modifier|*
name|serial_number
parameter_list|,
name|u8
modifier|*
name|part_number
parameter_list|,
name|u8
modifier|*
name|product_description
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_pmd_info_get
parameter_list|(
name|pci_dev_h
name|pdev
parameter_list|,
name|pci_reg_h
name|regh0
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|vxge_hal_vpath_reg_t
modifier|*
name|vpath_reg
parameter_list|,
name|u32
modifier|*
name|ports
parameter_list|,
name|vxge_hal_device_pmd_info_t
modifier|*
name|pmd_port0
parameter_list|,
name|vxge_hal_device_pmd_info_t
modifier|*
name|pmd_port1
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u64
name|__hal_vpath_pci_func_mode_get
parameter_list|(
name|pci_dev_h
name|pdev
parameter_list|,
name|pci_reg_h
name|regh0
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|vxge_hal_vpath_reg_t
modifier|*
name|vpath_reg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_device_lag_mode_e
name|__hal_vpath_lag_mode_get
parameter_list|(
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u64
name|__hal_vpath_vpath_map_get
parameter_list|(
name|pci_dev_h
name|pdev
parameter_list|,
name|pci_reg_h
name|regh0
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|u32
name|vh
parameter_list|,
name|u32
name|func
parameter_list|,
name|vxge_hal_vpath_reg_t
modifier|*
name|vpath_reg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_fw_upgrade
parameter_list|(
name|pci_dev_h
name|pdev
parameter_list|,
name|pci_reg_h
name|regh0
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|vxge_hal_vpath_reg_t
modifier|*
name|vpath_reg
parameter_list|,
name|u8
modifier|*
name|buffer
parameter_list|,
name|u32
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_pcie_func_mode_set
parameter_list|(
name|struct
name|__hal_device_t
modifier|*
name|hldev
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|u32
name|func_mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_flick_link_led
parameter_list|(
name|struct
name|__hal_device_t
modifier|*
name|hldev
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|u32
name|port
parameter_list|,
name|u32
name|on_off
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_udp_rth_set
parameter_list|(
name|struct
name|__hal_device_t
modifier|*
name|hldev
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|u32
name|on_off
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_rts_table_get
parameter_list|(
name|vxge_hal_vpath_h
name|vpath_handle
parameter_list|,
name|u32
name|action
parameter_list|,
name|u32
name|rts_table
parameter_list|,
name|u32
name|offset
parameter_list|,
name|u64
modifier|*
name|data1
parameter_list|,
name|u64
modifier|*
name|data2
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_rts_table_set
parameter_list|(
name|vxge_hal_vpath_h
name|vpath_handle
parameter_list|,
name|u32
name|action
parameter_list|,
name|u32
name|rts_table
parameter_list|,
name|u32
name|offset
parameter_list|,
name|u64
name|data1
parameter_list|,
name|u64
name|data2
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_hw_reset
parameter_list|(
name|vxge_hal_device_h
name|devh
parameter_list|,
name|u32
name|vp_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_sw_reset
parameter_list|(
name|vxge_hal_device_h
name|devh
parameter_list|,
name|u32
name|vp_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_prc_configure
parameter_list|(
name|vxge_hal_device_h
name|devh
parameter_list|,
name|u32
name|vp_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_kdfc_configure
parameter_list|(
name|vxge_hal_device_h
name|devh
parameter_list|,
name|u32
name|vp_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_mac_configure
parameter_list|(
name|vxge_hal_device_h
name|devh
parameter_list|,
name|u32
name|vp_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_tim_configure
parameter_list|(
name|vxge_hal_device_h
name|devh
parameter_list|,
name|u32
name|vp_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_hw_initialize
parameter_list|(
name|vxge_hal_device_h
name|devh
parameter_list|,
name|u32
name|vp_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vp_initialize
parameter_list|(
name|vxge_hal_device_h
name|devh
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|vxge_hal_vp_config_t
modifier|*
name|config
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__hal_vp_terminate
parameter_list|(
name|vxge_hal_device_h
name|devh
parameter_list|,
name|u32
name|vp_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_hw_addr_get
parameter_list|(
name|pci_dev_h
name|pdev
parameter_list|,
name|pci_reg_h
name|regh0
parameter_list|,
name|u32
name|vp_id
parameter_list|,
name|vxge_hal_vpath_reg_t
modifier|*
name|vpath_reg
parameter_list|,
name|macaddr_t
name|macaddr
parameter_list|,
name|macaddr_t
name|macaddr_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_intr_enable
parameter_list|(
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_intr_disable
parameter_list|(
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_device_link_state_e
name|__hal_vpath_link_state_test
parameter_list|(
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_device_link_state_e
name|__hal_vpath_link_state_poll
parameter_list|(
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_device_data_rate_e
name|__hal_vpath_data_rate_poll
parameter_list|(
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_alarm_process
parameter_list|(
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|,
name|u32
name|skip_alarms
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_stats_access
parameter_list|(
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|,
name|u32
name|operation
parameter_list|,
name|u32
name|offset
parameter_list|,
name|u64
modifier|*
name|stat
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_xmac_tx_stats_get
parameter_list|(
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|,
name|vxge_hal_xmac_vpath_tx_stats_t
modifier|*
name|vpath_tx_stats
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_xmac_rx_stats_get
parameter_list|(
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|,
name|vxge_hal_xmac_vpath_rx_stats_t
modifier|*
name|vpath_rx_stats
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|__hal_vpath_hw_stats_get
parameter_list|(
name|__hal_virtualpath_t
modifier|*
name|vpath
parameter_list|,
name|vxge_hal_vpath_stats_hw_info_t
modifier|*
name|hw_stats
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__EXTERN_END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* VXGE_HAL_VIRTUALPATH_H */
end_comment

end_unit

