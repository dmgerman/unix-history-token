begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright(c) 2002-2011 Exar Corp.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification are permitted provided the following conditions are met:  *  *    1. Redistributions of source code must retain the above copyright notice,  *       this list of conditions and the following disclaimer.  *  *    2. Redistributions in binary form must reproduce the above copyright  *       notice, this list of conditions and the following disclaimer in the  *       documentation and/or other materials provided with the distribution.  *  *    3. Neither the name of the Exar Corporation nor the names of its  *       contributors may be used to endorse or promote products derived from  *       this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*$FreeBSD$*/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_VXGE_H_
end_ifndef

begin_define
define|#
directive|define
name|__VXGE_H_
end_define

begin_include
include|#
directive|include
file|<dev/vxge/vxgehal/vxgehal.h>
end_include

begin_include
include|#
directive|include
file|<dev/vxge/vxge-osdep.h>
end_include

begin_include
include|#
directive|include
file|"vxge-firmware.h"
end_include

begin_define
define|#
directive|define
name|VXGE_GET_PARAM
parameter_list|(
name|str_kenv
parameter_list|,
name|to
parameter_list|,
name|param
parameter_list|,
name|hardcode
parameter_list|)
value|{	\ 	static int __CONCAT(param, __LINE__);		\ 	if (testenv(str_kenv) == 1)			\ 		TUNABLE_INT_FETCH(str_kenv,		\&__CONCAT(param, __LINE__));	\ 	else						\ 		__CONCAT(param, __LINE__) = hardcode;	\ 							\ 	to.param = __CONCAT(param, __LINE__);		\ }
end_define

begin_define
define|#
directive|define
name|VXGE_BUFFER_ALIGN
parameter_list|(
name|buffer_length
parameter_list|,
name|to
parameter_list|)
value|{		\ 	if (buffer_length % to)				\ 		buffer_length +=			\ 		    (to - (buffer_length % to));	\ }
end_define

begin_define
define|#
directive|define
name|VXGE_HAL_VPATH_MSIX_ACTIVE
value|4
end_define

begin_define
define|#
directive|define
name|VXGE_HAL_VPATH_MSIX_ALARM_ID
value|2
end_define

begin_define
define|#
directive|define
name|VXGE_MSIX_ALARM_ID
parameter_list|(
name|hldev
parameter_list|,
name|i
parameter_list|)
define|\
value|((__hal_device_t *) hldev)->first_vp_id *	\ 	    VXGE_HAL_VPATH_MSIX_ACTIVE + i;
end_define

begin_define
define|#
directive|define
name|VXGE_DUAL_PORT_MODE
value|2
end_define

begin_define
define|#
directive|define
name|VXGE_DUAL_PORT_MAP
value|0xAAAAULL
end_define

begin_define
define|#
directive|define
name|VXGE_BAUDRATE
value|1000000000
end_define

begin_define
define|#
directive|define
name|VXGE_MAX_SEGS
value|VXGE_HAL_MAX_FIFO_FRAGS
end_define

begin_define
define|#
directive|define
name|VXGE_TSO_SIZE
value|65600
end_define

begin_define
define|#
directive|define
name|VXGE_STATS_BUFFER_SIZE
value|65536
end_define

begin_define
define|#
directive|define
name|VXGE_PRINT_BUF_SIZE
value|128
end_define

begin_define
define|#
directive|define
name|VXGE_PMD_INFO_LEN
value|24
end_define

begin_define
define|#
directive|define
name|VXGE_RXD_REPLENISH_COUNT
value|4
end_define

begin_define
define|#
directive|define
name|VXGE_TX_LOW_THRESHOLD
value|32
end_define

begin_comment
comment|/* Default configuration parameters */
end_comment

begin_define
define|#
directive|define
name|VXGE_DEFAULT_USER_HARDCODED
value|-1
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_CONFIG_VALUE
value|0xFF
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_CONFIG_ENABLE
value|1
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_CONFIG_DISABLE
value|0
end_define

begin_if
if|#
directive|if
name|__FreeBSD_version
operator|>=
literal|800000
end_if

begin_define
define|#
directive|define
name|VXGE_DEFAULT_CONFIG_MQ_ENABLE
value|1
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|VXGE_DEFAULT_CONFIG_MQ_ENABLE
value|0
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|VXGE_DEFAULT_CONFIG_IFQ_MAXLEN
value|1024
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_BR_SIZE
value|4096
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_RTH_BUCKET_SIZE
value|8
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_RING_BLOCK
value|2
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_SUPPORTED_DEVICES
value|1
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_DEVICE_POLL_MILLIS
value|2000
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_FIFO_ALIGNED_FRAGS
value|1
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_VPATH_PRIORITY_LOW
value|3
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_VPATH_PRIORITY_HIGH
value|0
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_ALL_VID_ENABLE
define|\
value|VXGE_HAL_VPATH_RPA_ALL_VID_ENABLE
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_STRIP_VLAN_TAG
define|\
value|VXGE_HAL_VPATH_RPA_STRIP_VLAN_TAG_ENABLE
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_TTI_BTIMER_VAL
value|250000
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_TTI_LTIMER_VAL
value|80
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_TTI_RTIMER_VAL
value|0
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_RTI_BTIMER_VAL
value|250
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_RTI_LTIMER_VAL
value|100
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_RTI_RTIMER_VAL
value|0
end_define

begin_define
define|#
directive|define
name|VXGE_TTI_RTIMER_ADAPT_VAL
value|10
end_define

begin_define
define|#
directive|define
name|VXGE_RTI_RTIMER_ADAPT_VAL
value|15
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_TTI_TX_URANGE_A
value|5
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_TTI_TX_URANGE_B
value|15
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_TTI_TX_URANGE_C
value|40
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_RTI_RX_URANGE_A
value|5
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_RTI_RX_URANGE_B
value|15
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_RTI_RX_URANGE_C
value|40
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_TTI_TX_UFC_A
value|1
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_TTI_TX_UFC_B
value|5
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_TTI_TX_UFC_C
value|15
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_TTI_TX_UFC_D
value|40
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_RTI_RX_UFC_A
value|1
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_RTI_RX_UFC_B
value|20
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_RTI_RX_UFC_C
value|40
end_define

begin_define
define|#
directive|define
name|VXGE_DEFAULT_RTI_RX_UFC_D
value|100
end_define

begin_define
define|#
directive|define
name|VXGE_MAX_RX_INTERRUPT_COUNT
value|100
end_define

begin_define
define|#
directive|define
name|VXGE_MAX_TX_INTERRUPT_COUNT
value|200
end_define

begin_define
define|#
directive|define
name|is_multi_func
parameter_list|(
name|func_mode
parameter_list|)
define|\
value|((func_mode == VXGE_HAL_PCIE_FUNC_MODE_MF8_VP2) || \ 	(func_mode == VXGE_HAL_PCIE_FUNC_MODE_MF2_VP8) || \ 	(func_mode == VXGE_HAL_PCIE_FUNC_MODE_MF4_VP4) || \ 	(func_mode == VXGE_HAL_PCIE_FUNC_MODE_MF8P_VP2))
end_define

begin_define
define|#
directive|define
name|is_single_func
parameter_list|(
name|func_mode
parameter_list|)
define|\
value|(func_mode == VXGE_HAL_PCIE_FUNC_MODE_SF1_VP17)
end_define

begin_define
define|#
directive|define
name|VXGE_DRV_STATS
parameter_list|(
name|v
parameter_list|,
name|x
parameter_list|)
value|v->driver_stats.x++
end_define

begin_define
define|#
directive|define
name|VXGE_MAX_MSIX_MESSAGES
value|(VXGE_HAL_MAX_VIRTUAL_PATHS * 2 + 2)
end_define

begin_define
define|#
directive|define
name|VXGE_DRV_LOCK
parameter_list|(
name|x
parameter_list|)
value|mtx_lock(&(x)->mtx_drv)
end_define

begin_define
define|#
directive|define
name|VXGE_DRV_UNLOCK
parameter_list|(
name|x
parameter_list|)
value|mtx_unlock(&(x)->mtx_drv)
end_define

begin_define
define|#
directive|define
name|VXGE_DRV_LOCK_DESTROY
parameter_list|(
name|x
parameter_list|)
value|mtx_destroy(&(x)->mtx_drv)
end_define

begin_define
define|#
directive|define
name|VXGE_DRV_LOCK_ASSERT
parameter_list|(
name|x
parameter_list|)
value|mtx_assert(&(x)->mtx_drv, MA_OWNED)
end_define

begin_define
define|#
directive|define
name|VXGE_TX_LOCK
parameter_list|(
name|x
parameter_list|)
value|mtx_lock(&(x)->mtx_tx)
end_define

begin_define
define|#
directive|define
name|VXGE_TX_TRYLOCK
parameter_list|(
name|x
parameter_list|)
value|mtx_trylock(&(x)->mtx_tx)
end_define

begin_define
define|#
directive|define
name|VXGE_TX_UNLOCK
parameter_list|(
name|x
parameter_list|)
value|mtx_unlock(&(x)->mtx_tx)
end_define

begin_define
define|#
directive|define
name|VXGE_TX_LOCK_DESTROY
parameter_list|(
name|x
parameter_list|)
value|mtx_destroy(&(x)->mtx_tx)
end_define

begin_define
define|#
directive|define
name|VXGE_TX_LOCK_ASSERT
parameter_list|(
name|x
parameter_list|)
value|mtx_assert(&(x)->mtx_tx, MA_OWNED)
end_define

begin_decl_stmt
specifier|const
name|char
modifier|*
name|vxge_port_mode
index|[
literal|6
index|]
init|=
block|{
literal|"Default"
block|,
literal|"Reserved"
block|,
literal|"Active/Passive"
block|,
literal|"Single Port"
block|,
literal|"Dual Port"
block|,
literal|"Disabled"
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|const
name|char
modifier|*
name|vxge_port_failure
index|[
literal|3
index|]
init|=
block|{
literal|"No Failover"
block|,
literal|"Failover only"
block|,
literal|"Failover& Failback"
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* IOCTLs to identify vxge-manage requests */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|_vxge_query_device_info_e
block|{
name|VXGE_GET_PCI_CONF
init|=
literal|100
block|,
name|VXGE_GET_MRPCIM_STATS
init|=
literal|101
block|,
name|VXGE_GET_DEVICE_STATS
init|=
literal|102
block|,
name|VXGE_GET_DEVICE_HWINFO
init|=
literal|103
block|,
name|VXGE_GET_DRIVER_STATS
init|=
literal|104
block|,
name|VXGE_GET_INTR_STATS
init|=
literal|105
block|,
name|VXGE_GET_VERSION
init|=
literal|106
block|,
name|VXGE_GET_TCODE
init|=
literal|107
block|,
name|VXGE_GET_VPATH_COUNT
init|=
literal|108
block|,
name|VXGE_GET_BANDWIDTH
init|=
literal|109
block|,
name|VXGE_SET_BANDWIDTH
init|=
literal|110
block|,
name|VXGE_GET_PORT_MODE
init|=
literal|111
block|,
name|VXGE_SET_PORT_MODE
init|=
literal|112
block|}
name|vxge_query_device_info_e
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|_vxge_firmware_upgrade_e
block|{
name|VXGE_FW_UPGRADE_NONE
init|=
literal|0
block|,
name|VXGE_FW_UPGRADE_ALL
init|=
literal|1
block|,
name|VXGE_FW_UPGRADE_FORCE
init|=
literal|2
block|}
name|vxge_firmware_upgrade_e
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|_vxge_free_resources_e
block|{
name|VXGE_FREE_NONE
init|=
literal|0
block|,
name|VXGE_FREE_MUTEX
init|=
literal|1
block|,
name|VXGE_FREE_PCI_INFO
init|=
literal|2
block|,
name|VXGE_FREE_BAR0
init|=
literal|3
block|,
name|VXGE_FREE_BAR1
init|=
literal|4
block|,
name|VXGE_FREE_BAR2
init|=
literal|5
block|,
name|VXGE_FREE_ISR_RESOURCE
init|=
literal|6
block|,
name|VXGE_FREE_MEDIA
init|=
literal|7
block|,
name|VXGE_FREE_INTERFACE
init|=
literal|8
block|,
name|VXGE_FREE_DEVICE_CONFIG
init|=
literal|9
block|,
name|VXGE_FREE_TERMINATE_DEVICE
init|=
literal|10
block|,
name|VXGE_FREE_TERMINATE_DRIVER
init|=
literal|11
block|,
name|VXGE_DISABLE_PCI_BUSMASTER
init|=
literal|12
block|,
name|VXGE_FREE_VPATH
init|=
literal|13
block|,
name|VXGE_FREE_ALL
init|=
literal|14
block|}
name|vxge_free_resources_e
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|_vxge_device_attributes_e
block|{
name|VXGE_PRINT_DRV_VERSION
init|=
literal|0
block|,
name|VXGE_PRINT_PCIE_INFO
init|=
literal|1
block|,
name|VXGE_PRINT_SERIAL_NO
init|=
literal|2
block|,
name|VXGE_PRINT_PART_NO
init|=
literal|3
block|,
name|VXGE_PRINT_FW_VERSION
init|=
literal|4
block|,
name|VXGE_PRINT_FW_DATE
init|=
literal|5
block|,
name|VXGE_PRINT_FUNC_MODE
init|=
literal|6
block|,
name|VXGE_PRINT_INTR_MODE
init|=
literal|7
block|,
name|VXGE_PRINT_VPATH_COUNT
init|=
literal|8
block|,
name|VXGE_PRINT_MTU_SIZE
init|=
literal|9
block|,
name|VXGE_PRINT_LRO_MODE
init|=
literal|10
block|,
name|VXGE_PRINT_RTH_MODE
init|=
literal|11
block|,
name|VXGE_PRINT_TSO_MODE
init|=
literal|12
block|,
name|VXGE_PRINT_PMD_PORTS_0
init|=
literal|13
block|,
name|VXGE_PRINT_PMD_PORTS_1
init|=
literal|14
block|,
name|VXGE_PRINT_ADAPTER_TYPE
init|=
literal|15
block|,
name|VXGE_PRINT_PORT_MODE
init|=
literal|16
block|,
name|VXGE_PRINT_PORT_FAILURE
init|=
literal|17
block|,
name|VXGE_PRINT_ACTIVE_PORT
init|=
literal|18
block|,
name|VXGE_PRINT_L2SWITCH_MODE
init|=
literal|19
block|}
name|vxge_device_attribute_e
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_vxge_isr_info_t
block|{
name|int
name|irq_rid
decl_stmt|;
name|void
modifier|*
name|irq_handle
decl_stmt|;
name|struct
name|resource
modifier|*
name|irq_res
decl_stmt|;
block|}
name|vxge_isr_info_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_vxge_drv_stats_t
block|{
name|u64
name|isr_msix
decl_stmt|;
name|u64
name|tx_xmit
decl_stmt|;
name|u64
name|tx_posted
decl_stmt|;
name|u64
name|tx_compl
decl_stmt|;
name|u64
name|tx_tso
decl_stmt|;
name|u64
name|tx_tcode
decl_stmt|;
name|u64
name|tx_low_dtr_cnt
decl_stmt|;
name|u64
name|tx_reserve_failed
decl_stmt|;
name|u64
name|tx_no_dma_setup
decl_stmt|;
name|u64
name|tx_max_frags
decl_stmt|;
name|u64
name|tx_again
decl_stmt|;
name|u64
name|rx_compl
decl_stmt|;
name|u64
name|rx_tcode
decl_stmt|;
name|u64
name|rx_no_buf
decl_stmt|;
name|u64
name|rx_map_fail
decl_stmt|;
name|u64
name|rx_lro_queued
decl_stmt|;
name|u64
name|rx_lro_flushed
decl_stmt|;
block|}
name|vxge_drv_stats_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|vxge_dev_t
name|vxge_dev_t
typedef|;
end_typedef

begin_comment
comment|/* Rx descriptor private structure */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|_vxge_rxd_priv_t
block|{
name|mbuf_t
name|mbuf_pkt
decl_stmt|;
name|bus_size_t
name|dma_sizes
index|[
literal|1
index|]
decl_stmt|;
name|bus_addr_t
name|dma_addr
index|[
literal|1
index|]
decl_stmt|;
name|bus_dmamap_t
name|dma_map
decl_stmt|;
block|}
name|vxge_rxd_priv_t
typedef|;
end_typedef

begin_comment
comment|/* Tx descriptor private structure */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|_vxge_txdl_priv_t
block|{
name|mbuf_t
name|mbuf_pkt
decl_stmt|;
name|bus_dmamap_t
name|dma_map
decl_stmt|;
name|bus_dma_segment_t
name|dma_buffers
index|[
name|VXGE_MAX_SEGS
index|]
decl_stmt|;
block|}
name|vxge_txdl_priv_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_vxge_vpath_t
block|{
name|u32
name|vp_id
decl_stmt|;
name|u32
name|vp_index
decl_stmt|;
name|u32
name|is_open
decl_stmt|;
name|u32
name|lro_enable
decl_stmt|;
name|int
name|msix_vec
decl_stmt|;
name|int
name|msix_vec_alarm
decl_stmt|;
name|u32
name|is_configured
decl_stmt|;
name|u64
name|rxd_posted
decl_stmt|;
name|macaddr_t
name|mac_addr
decl_stmt|;
name|macaddr_t
name|mac_mask
decl_stmt|;
name|int
name|tx_ticks
decl_stmt|;
name|int
name|rx_ticks
decl_stmt|;
name|u32
name|tti_rtimer_val
decl_stmt|;
name|u32
name|rti_rtimer_val
decl_stmt|;
name|u64
name|tx_interrupts
decl_stmt|;
name|u64
name|rx_interrupts
decl_stmt|;
name|int
name|tx_intr_coalesce
decl_stmt|;
name|int
name|rx_intr_coalesce
decl_stmt|;
name|vxge_dev_t
modifier|*
name|vdev
decl_stmt|;
name|vxge_hal_vpath_h
name|handle
decl_stmt|;
name|char
name|mtx_tx_name
index|[
literal|16
index|]
decl_stmt|;
name|bus_dma_tag_t
name|dma_tag_tx
decl_stmt|;
name|bus_dma_tag_t
name|dma_tag_rx
decl_stmt|;
name|bus_dmamap_t
name|extra_dma_map
decl_stmt|;
name|vxge_drv_stats_t
name|driver_stats
decl_stmt|;
name|struct
name|mtx
name|mtx_tx
decl_stmt|;
name|struct
name|lro_ctrl
name|lro
decl_stmt|;
if|#
directive|if
name|__FreeBSD_version
operator|>=
literal|800000
name|struct
name|buf_ring
modifier|*
name|br
decl_stmt|;
endif|#
directive|endif
block|}
name|vxge_vpath_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_vxge_bw_info_t
block|{
name|char
name|query
decl_stmt|;
name|u64
name|func_id
decl_stmt|;
name|int
name|priority
decl_stmt|;
name|int
name|bandwidth
decl_stmt|;
block|}
name|vxge_bw_info_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_vxge_port_info_t
block|{
name|char
name|query
decl_stmt|;
name|int
name|port_mode
decl_stmt|;
name|int
name|port_failure
decl_stmt|;
block|}
name|vxge_port_info_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_vxge_device_hw_info_t
block|{
name|vxge_hal_device_hw_info_t
name|hw_info
decl_stmt|;
name|vxge_hal_xmac_nwif_dp_mode
name|port_mode
decl_stmt|;
name|vxge_hal_xmac_nwif_behavior_on_failure
name|port_failure
decl_stmt|;
block|}
name|vxge_device_hw_info_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_vxge_config_t
block|{
name|u32
name|intr_mode
decl_stmt|;
name|int
name|lro_enable
decl_stmt|;
name|int
name|rth_enable
decl_stmt|;
name|int
name|tso_enable
decl_stmt|;
name|int
name|tx_steering
decl_stmt|;
name|int
name|rth_bkt_sz
decl_stmt|;
name|int
name|ifq_maxlen
decl_stmt|;
name|int
name|no_of_vpath
decl_stmt|;
name|int
name|ifq_multi
decl_stmt|;
name|int
name|intr_coalesce
decl_stmt|;
name|int
name|low_latency
decl_stmt|;
name|int
name|l2_switch
decl_stmt|;
name|int
name|port_mode
decl_stmt|;
name|int
name|function_mode
decl_stmt|;
name|char
name|nic_attr
index|[
literal|20
index|]
index|[
literal|128
index|]
decl_stmt|;
name|vxge_hal_device_hw_info_t
name|hw_info
decl_stmt|;
name|vxge_firmware_upgrade_e
name|fw_option
decl_stmt|;
name|vxge_hal_xmac_nwif_behavior_on_failure
name|port_failure
decl_stmt|;
name|vxge_bw_info_t
name|bw_info
index|[
name|VXGE_HAL_MAX_FUNCTIONS
index|]
decl_stmt|;
name|vxge_isr_info_t
name|isr_info
index|[
name|VXGE_MAX_MSIX_MESSAGES
index|]
decl_stmt|;
block|}
name|vxge_config_t
typedef|;
end_typedef

begin_struct
struct|struct
name|vxge_dev_t
block|{
name|device_t
name|ndev
decl_stmt|;
name|bool
name|is_privilaged
decl_stmt|;
name|bool
name|is_initialized
decl_stmt|;
name|bool
name|is_active
decl_stmt|;
name|int
name|intr_count
decl_stmt|;
name|bool
name|fw_upgrade
decl_stmt|;
name|int
name|no_of_vpath
decl_stmt|;
name|u64
name|active_port
decl_stmt|;
name|u32
name|no_of_func
decl_stmt|;
name|u32
name|all_multi_flag
decl_stmt|;
name|u32
name|hw_fw_version
decl_stmt|;
name|u32
name|max_supported_vpath
decl_stmt|;
name|int
name|rx_mbuf_sz
decl_stmt|;
name|int
name|if_flags
decl_stmt|;
name|int
name|ifm_optics
decl_stmt|;
name|ifnet_t
name|ifp
decl_stmt|;
name|vxge_hal_xmac_nwif_dp_mode
name|port_mode
decl_stmt|;
name|vxge_hal_xmac_nwif_l2_switch_status
name|l2_switch
decl_stmt|;
name|vxge_hal_xmac_nwif_behavior_on_failure
name|port_failure
decl_stmt|;
name|char
name|ndev_name
index|[
literal|16
index|]
decl_stmt|;
name|char
name|mtx_drv_name
index|[
literal|16
index|]
decl_stmt|;
name|struct
name|mtx
name|mtx_drv
decl_stmt|;
name|struct
name|ifmedia
name|media
decl_stmt|;
name|vxge_pci_info_t
modifier|*
name|pdev
decl_stmt|;
name|vxge_hal_device_t
modifier|*
name|devh
decl_stmt|;
name|vxge_vpath_t
modifier|*
name|vpaths
decl_stmt|;
name|vxge_config_t
name|config
decl_stmt|;
name|vxge_hal_device_config_t
modifier|*
name|device_config
decl_stmt|;
name|vxge_hal_vpath_h
name|vpath_handles
index|[
name|VXGE_HAL_MAX_VIRTUAL_PATHS
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|vxge_probe
parameter_list|(
name|device_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_attach
parameter_list|(
name|device_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_detach
parameter_list|(
name|device_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_shutdown
parameter_list|(
name|device_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_alloc_resources
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_alloc_isr_resources
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_alloc_bar_resources
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_free_resources
parameter_list|(
name|device_t
parameter_list|,
name|vxge_free_resources_e
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_free_isr_resources
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_free_bar_resources
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_device_hw_info_get
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_firmware_verify
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_driver_init
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_firmware_upgrade
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_func_mode_set
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_port_mode_set
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_port_behavior_on_failure_set
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_l2switch_mode_set
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_init
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_init_locked
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_stop
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_stop_locked
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_reset
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_ifp_setup
parameter_list|(
name|device_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_isr_setup
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_media_init
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_media_change
parameter_list|(
name|ifnet_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_media_status
parameter_list|(
name|ifnet_t
parameter_list|,
name|struct
name|ifmediareq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_mutex_init
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_mutex_destroy
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_link_up
parameter_list|(
name|vxge_hal_device_h
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_link_down
parameter_list|(
name|vxge_hal_device_h
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_crit_error
parameter_list|(
name|vxge_hal_device_h
parameter_list|,
name|void
modifier|*
parameter_list|,
name|vxge_hal_event_e
parameter_list|,
name|u64
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_ioctl
parameter_list|(
name|ifnet_t
parameter_list|,
name|u_long
parameter_list|,
name|caddr_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_ioctl_regs
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|,
name|struct
name|ifreq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_ioctl_stats
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|,
name|struct
name|ifreq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_promisc_set
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_vpath_config
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_vpath_open
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_vpath_close
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_vpath_reset
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_change_mtu
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|vxge_ring_length_get
parameter_list|(
name|u32
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_isr_line
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_isr_filter
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_isr_msix
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_isr_msix_alarm
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_intr_coalesce_tx
parameter_list|(
name|vxge_vpath_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_intr_coalesce_rx
parameter_list|(
name|vxge_vpath_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_msix_enable
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_rth_config
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_dma_tags_create
parameter_list|(
name|vxge_vpath_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_device_hw_info_print
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_driver_config
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_if
if|#
directive|if
name|__FreeBSD_version
operator|>=
literal|800000
end_if

begin_function_decl
name|int
name|vxge_mq_send
parameter_list|(
name|ifnet_t
parameter_list|,
name|mbuf_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
specifier|inline
name|int
name|vxge_mq_send_locked
parameter_list|(
name|ifnet_t
parameter_list|,
name|vxge_vpath_t
modifier|*
parameter_list|,
name|mbuf_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_mq_qflush
parameter_list|(
name|ifnet_t
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|vxge_send
parameter_list|(
name|ifnet_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
specifier|inline
name|void
name|vxge_send_locked
parameter_list|(
name|ifnet_t
parameter_list|,
name|vxge_vpath_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
specifier|inline
name|int
name|vxge_xmit
parameter_list|(
name|ifnet_t
parameter_list|,
name|vxge_vpath_t
modifier|*
parameter_list|,
name|mbuf_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
specifier|inline
name|int
name|vxge_dma_mbuf_coalesce
parameter_list|(
name|bus_dma_tag_t
parameter_list|,
name|bus_dmamap_t
parameter_list|,
name|mbuf_t
modifier|*
parameter_list|,
name|bus_dma_segment_t
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
specifier|inline
name|void
name|vxge_rx_checksum
parameter_list|(
name|vxge_hal_ring_rxd_info_t
parameter_list|,
name|mbuf_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
specifier|inline
name|void
name|vxge_rx_input
parameter_list|(
name|ifnet_t
parameter_list|,
name|mbuf_t
parameter_list|,
name|vxge_vpath_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
specifier|inline
name|vxge_hal_vpath_h
name|vxge_vpath_handle_get
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
specifier|inline
name|int
name|vxge_vpath_get
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|,
name|mbuf_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_tso_config
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_tx_replenish
parameter_list|(
name|vxge_hal_vpath_h
parameter_list|,
name|vxge_hal_txdl_h
parameter_list|,
name|void
modifier|*
parameter_list|,
name|u32
parameter_list|,
name|void
modifier|*
parameter_list|,
name|vxge_hal_reopen_e
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_tx_compl
parameter_list|(
name|vxge_hal_vpath_h
parameter_list|,
name|vxge_hal_txdl_h
parameter_list|,
name|void
modifier|*
parameter_list|,
name|vxge_hal_fifo_tcode_e
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_tx_term
parameter_list|(
name|vxge_hal_vpath_h
parameter_list|,
name|vxge_hal_txdl_h
parameter_list|,
name|void
modifier|*
parameter_list|,
name|vxge_hal_txdl_state_e
parameter_list|,
name|void
modifier|*
parameter_list|,
name|vxge_hal_reopen_e
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_rx_replenish
parameter_list|(
name|vxge_hal_vpath_h
parameter_list|,
name|vxge_hal_rxd_h
parameter_list|,
name|void
modifier|*
parameter_list|,
name|u32
parameter_list|,
name|void
modifier|*
parameter_list|,
name|vxge_hal_reopen_e
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_rx_compl
parameter_list|(
name|vxge_hal_vpath_h
parameter_list|,
name|vxge_hal_rxd_h
parameter_list|,
name|void
modifier|*
parameter_list|,
name|u8
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_rx_term
parameter_list|(
name|vxge_hal_vpath_h
parameter_list|,
name|vxge_hal_rxd_h
parameter_list|,
name|void
modifier|*
parameter_list|,
name|vxge_hal_rxd_state_e
parameter_list|,
name|void
modifier|*
parameter_list|,
name|vxge_hal_reopen_e
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_rx_rxd_1b_get
parameter_list|(
name|vxge_vpath_t
modifier|*
parameter_list|,
name|vxge_hal_rxd_h
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_rx_rxd_1b_set
parameter_list|(
name|vxge_vpath_t
modifier|*
parameter_list|,
name|vxge_hal_rxd_h
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_bw_priority_config
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_bw_priority_get
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|,
name|vxge_bw_info_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_bw_priority_set
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|,
name|struct
name|ifreq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_bw_priority_update
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|,
name|u32
parameter_list|,
name|bool
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vxge_port_mode_update
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|vxge_hal_status_e
name|vxge_port_mode_get
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|,
name|vxge_port_info_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_pmd_port_type_get
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|,
name|u32
parameter_list|,
name|char
modifier|*
parameter_list|,
name|u8
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vxge_active_port_update
parameter_list|(
name|vxge_dev_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
specifier|inline
name|void
name|vxge_null_terminate
parameter_list|(
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _VXGE_H_ */
end_comment

end_unit

