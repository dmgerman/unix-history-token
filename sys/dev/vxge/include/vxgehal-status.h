begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright(c) 2002-2011 Exar Corp.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification are permitted provided the following conditions are met:  *  *    1. Redistributions of source code must retain the above copyright notice,  *       this list of conditions and the following disclaimer.  *  *    2. Redistributions in binary form must reproduce the above copyright  *       notice, this list of conditions and the following disclaimer in the  *       documentation and/or other materials provided with the distribution.  *  *    3. Neither the name of the Exar Corporation nor the names of its  *       contributors may be used to endorse or promote products derived from  *       this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*$FreeBSD$*/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|VXGE_HAL_STATUS_H
end_ifndef

begin_define
define|#
directive|define
name|VXGE_HAL_STATUS_H
end_define

begin_macro
name|__EXTERN_BEGIN_DECLS
end_macro

begin_define
define|#
directive|define
name|VXGE_HAL_EVENT_BASE
value|0
end_define

begin_define
define|#
directive|define
name|VXGE_LL_EVENT_BASE
value|100
end_define

begin_comment
comment|/*  * enum vxge_hal_event_e - Enumerates slow-path HAL events.  * @VXGE_HAL_EVENT_UNKNOWN: Unknown (and invalid) event.  * @VXGE_HAL_EVENT_SERR: Serious hardware error event.  * @VXGE_HAL_EVENT_CRITICAL: Critical vpath hardware error event.  * @VXGE_HAL_EVENT_ECCERR: vpath ECC error event.  * @VXGE_HAL_EVENT_KDFCCTL: FIFO Doorbell fifo error.  * @VXGE_HAL_EVENT_SRPCIM_CRITICAL: srpcim hardware error event.  * @VXGE_HAL_EVENT_MRPCIM_CRITICAL: mrpcim hardware error event.  * @VXGE_HAL_EVENT_MRPCIM_ECCERR: mrpcim ecc error event.  * @VXGE_HAL_EVENT_DEVICE_RESET_START: Privileged entity starting device reset  * @VXGE_HAL_EVENT_DEVICE_RESET_COMPLETE: Device reset has been completed  * @VXGE_HAL_EVENT_VPATH_RESET_START: A function is starting vpath reset  * @VXGE_HAL_EVENT_VPATH_RESET_COMPLETE: vpath reset has been completed  * @VXGE_HAL_EVENT_SLOT_FREEZE: Slot-freeze event. Driver tries to distinguish  * slot-freeze from the rest critical events (e.g. ECC) when it is  * impossible to PIO read "through" the bus, i.e. when getting all-foxes.  *  * vxge_hal_event_e enumerates slow-path HAL eventis.  *  * See also: vxge_hal_uld_cbs_t {}, vxge_uld_link_up_f {},  * vxge_uld_link_down_f {}.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|vxge_hal_event_e
block|{
name|VXGE_HAL_EVENT_UNKNOWN
init|=
literal|0
block|,
comment|/* HAL events */
name|VXGE_HAL_EVENT_SERR
init|=
name|VXGE_HAL_EVENT_BASE
operator|+
literal|1
block|,
name|VXGE_HAL_EVENT_CRITICAL
init|=
name|VXGE_HAL_EVENT_BASE
operator|+
literal|2
block|,
name|VXGE_HAL_EVENT_ECCERR
init|=
name|VXGE_HAL_EVENT_BASE
operator|+
literal|3
block|,
name|VXGE_HAL_EVENT_KDFCCTL
init|=
name|VXGE_HAL_EVENT_BASE
operator|+
literal|4
block|,
name|VXGE_HAL_EVENT_SRPCIM_CRITICAL
init|=
name|VXGE_HAL_EVENT_BASE
operator|+
literal|5
block|,
name|VXGE_HAL_EVENT_MRPCIM_CRITICAL
init|=
name|VXGE_HAL_EVENT_BASE
operator|+
literal|6
block|,
name|VXGE_HAL_EVENT_MRPCIM_ECCERR
init|=
name|VXGE_HAL_EVENT_BASE
operator|+
literal|7
block|,
name|VXGE_HAL_EVENT_DEVICE_RESET_START
init|=
name|VXGE_HAL_EVENT_BASE
operator|+
literal|8
block|,
name|VXGE_HAL_EVENT_DEVICE_RESET_COMPLETE
init|=
name|VXGE_HAL_EVENT_BASE
operator|+
literal|9
block|,
name|VXGE_HAL_EVENT_VPATH_RESET_START
init|=
name|VXGE_HAL_EVENT_BASE
operator|+
literal|10
block|,
name|VXGE_HAL_EVENT_VPATH_RESET_COMPLETE
init|=
name|VXGE_HAL_EVENT_BASE
operator|+
literal|11
block|,
name|VXGE_HAL_EVENT_SLOT_FREEZE
init|=
name|VXGE_HAL_EVENT_BASE
operator|+
literal|12
block|}
name|vxge_hal_event_e
typedef|;
end_typedef

begin_define
define|#
directive|define
name|VXGE_HAL_BASE_INF
value|100
end_define

begin_define
define|#
directive|define
name|VXGE_HAL_BASE_ERR
value|200
end_define

begin_define
define|#
directive|define
name|VXGE_HAL_BASE_BADCFG
value|300
end_define

begin_comment
comment|/*  * enum vxge_hal_status_e - HAL return codes.  * @VXGE_HAL_OK: Success.  * @VXGE_HAL_FAIL: Failure.  * @VXGE_HAL_PENDING: Opearation is pending  * @VXGE_HAL_CONTINUE: Continue processing  * @VXGE_HAL_RETURN: Stop processing and return  * @VXGE_HAL_COMPLETIONS_REMAIN: There are more completions on a channel.  *	  (specific to polling mode completion processing).  * @VXGE_HAL_INF_NO_MORE_COMPLETED_DESCRIPTORS: No more completed  * descriptors. See vxge_hal_fifo_txdl_next_completed().  * @VXGE_HAL_INF_OUT_OF_DESCRIPTORS: Out of descriptors. Channel  * descriptors  *	  are reserved (via vxge_hal_fifo_txdl_reserve(),  *	  vxge_hal_ring_rxd_reserve())  *	  and not yet freed (via vxge_hal_fifo_txdl_free(),  *	  vxge_hal_ring_rxd_free()).  * @VXGE_HAL_INF_QUEUE_IS_NOT_READY: A descriptor was reserved and not posted  * @VXGE_HAL_INF_MEM_STROBE_CMD_EXECUTING: Indicates that host needs to  * poll until PIO is executed.  * @VXGE_HAL_INF_STATS_IS_NOT_READY: Queue is not ready for  * operation.  * @VXGE_HAL_INF_NO_MORE_FREED_DESCRIPTORS: No descriptors left to  * reserve. Internal use only.  * @VXGE_HAL_INF_IRQ_POLLING_CONTINUE: Returned by the ULD channel  * callback when instructed to exit descriptor processing loop  * prematurely. Typical usage: polling mode of processing completed  * descriptors.  *	  Upon getting LRO_ISED, ll driver shall  *	  1) initialise lro struct with mbuf if sg_num == 1.  *	  2) else it will update m_data_ptr_of_mbuf to tcp pointer and  *	  append the new mbuf to the tail of mbuf chain in lro struct.  * @VXGE_HAL_INF_SW_LRO_BEGIN: Returned by ULD LRO module, when new LRO is  * being initiated.  * @VXGE_HAL_INF_SW_LRO_CONT: Returned by ULD LRO module, when new frame  * is appended at the end of existing LRO.  * @VXGE_HAL_INF_SW_LRO_UNCAPABLE: Returned by ULD LRO module, when new  * frame is not LRO capable.  * @VXGE_HAL_INF_SW_LRO_FLUSH_SESSION: Returned by ULD LRO module,  * when new frame triggers LRO flush.  * @VXGE_HAL_INF_SW_LRO_FLUSH_BOTH: Returned by ULD LRO module, when new  * frame triggers LRO flush. Lro frame should be flushed first then  * new frame should be flushed next.  * @VXGE_HAL_INF_SW_LRO_END_3: Returned by ULD LRO module, when new  * frame triggers close of current LRO session and opening of new LRO session  * with the frame.  * @VXGE_HAL_INF_SW_LRO_SESSIONS_XCDED: Returned by ULD LRO module, when no  * more LRO sessions can be added.  * @VXGE_HAL_INF_NOT_ENOUGH_HW_CQES: Enough CQEs are available  * @VXGE_HAL_INF_LINK_UP_DOWN: Link up down indication received  * @VXGE_HAL_ERR_DRIVER_NOT_INITIALIZED: HAL is not initialized.  * @VXGE_HAL_ERR_INVALID_HANDLE: The handle passed is invalid.  * @VXGE_HAL_ERR_OUT_OF_MEMORY: Out of memory (example, when and  * allocating descriptors).  * @VXGE_HAL_ERR_VPATH_NOT_AVAILABLE: Vpath is not allocated to this  * function  * @VXGE_HAL_ERR_VPATH_NOT_OPEN: Vpath is not opened i.e put in service.  * @VXGE_HAL_ERR_WRONG_IRQ: Returned by HAL's ISR when the latter is  * invoked not because of the X3100-generated interrupt.  * @VXGE_HAL_ERR_OUT_OF_MAC_ADDRESSES: Returned when user tries to  * configure more than VXGE_HAL_MAX_MAC_ADDRESSES  mac addresses.  * @VXGE_HAL_ERR_SWAPPER_CTRL: Error during device initialization: failed  * to set X3100 byte swapper in accordnace with the host  * endian-ness.  * @VXGE_HAL_ERR_DEVICE_IS_NOT_QUIESCENT: Failed to restore the device to  * a "quiescent" state.  * @VXGE_HAL_ERR_INVALID_MTU_SIZE:Returned when MTU size specified by  * caller is not in the (64, 9600) range.  * @VXGE_HAL_ERR_OUT_OF_MAPPING: Failed to map DMA-able memory.  * @VXGE_HAL_ERR_BAD_SUBSYSTEM_ID: Bad PCI subsystem ID. (Currently we  * check for zero/non-zero only.)  * @VXGE_HAL_ERR_INVALID_BAR_ID: Invalid BAR ID. X3100 supports two Base  * Address Register Spaces: BAR0 (id=0) and BAR1 (id=1).  * @VXGE_HAL_ERR_INVALID_INDEX: Invalid index. Example, attempt to read  * register value from the register section that is out of range.  * @VXGE_HAL_ERR_INVALID_TYPE: Invalid register section.  * @VXGE_HAL_ERR_INVALID_OFFSET: Invalid offset. Example, attempt to read  * register value (with offset) outside of the register section range  * @VXGE_HAL_ERR_INVALID_DEVICE: Invalid device. The HAL device handle  * (passed by ULD) is invalid.  * @VXGE_HAL_ERR_OUT_OF_SPACE: Out-of-provided-buffer-space. Returned by  * management "get" routines when the retrieved information does  * not fit into the provided buffer.  * @VXGE_HAL_ERR_INVALID_VALUE_BIT_SIZE: Invalid bit size.  * @VXGE_HAL_ERR_VERSION_CONFLICT: Upper-layer driver and HAL (versions)  * are not compatible.  * @VXGE_HAL_ERR_INVALID_MAC_ADDRESS: Invalid MAC address.  * @VXGE_HAL_ERR_BAD_DEVICE_ID: Unknown device PCI ID.  * @VXGE_HAL_ERR_OUT_ALIGNED_FRAGS: Too many unaligned fragments  * in a scatter-gather list.  * @VXGE_HAL_ERR_DEVICE_NOT_INITIALIZED: Device is not initialized.  * Typically means wrong sequence of API calls.  * @VXGE_HAL_ERR_SPDM_NOT_ENABLED: SPDM support is not enabled.  * @VXGE_HAL_ERR_SPDM_TABLE_FULL: SPDM table is full.  * @VXGE_HAL_ERR_SPDM_INVALID_ENTRY: Invalid SPDM entry.  * @VXGE_HAL_ERR_SPDM_ENTRY_NOT_FOUND: Unable to locate the entry in the  * SPDM table.  * @VXGE_HAL_ERR_SPDM_TABLE_DATA_INCONSISTENT: Local SPDM table is not in  * synch ith the actual one.  * @VXGE_HAL_ERR_INVALID_PCI_INFO: Invalid or unrecognized PCI  parameters.  * @VXGE_HAL_ERR_CRITICAL: Critical error. Returned by HAL APIs  * (including vxge_hal_fifo_handle_tcode() and vxge_hal_ring_handle_tcode())  * on: ECC, parity, SERR.  * Also returned when PIO read does not go through ("all-foxes")  * because of "slot-freeze".  * @VXGE_HAL_ERR_RESET_FAILED: Failed to soft-reset the device.  * Returned by vxge_hal_device_reset(). One circumstance when it could  * happen: slot freeze by the system (see @VXGE_HAL_ERR_CRITICAL).  * @VXGE_HAL_ERR_TOO_MANY: This error is returned if there were laready  * maximum number of sessions or queues allocated  * @VXGE_HAL_ERR_PKT_DROP: Packet got dropped  * @VXGE_HAL_ERR_INVALID_BLOCK_SIZE: Invalid block size  * @VXGE_HAL_ERR_INVALID_STATE: Invalid state  * @VXGE_HAL_ERR_PRIVILAGED_OPEARATION: A previleged operation is attempted  * @VXGE_HAL_ERR_RESET_IN_PROGRESS: Reset is currently in progress  * @VXGE_HAL_ERR_MAC_TABLE_FULL: DA table is full  * @VXGE_HAL_ERR_MAC_TABLE_EMPTY: DA table is empty  * @VXGE_HAL_ERR_MAC_TABLE_NO_MORE_ENTRIES: There are no more entries in the  *		DA table  * @VXGE_HAL_ERR_RTDMA_RTDMA_READY: RTDMA is ready  * @VXGE_HAL_ERR_WRDMA_WRDMA_READY: WRDMA is ready  * @VXGE_HAL_ERR_KDFC_KDFC_READY: Kernel mode doorbell controller ready  * @VXGE_HAL_ERR_TPA_TMAC_BUF_EMPTY: Transmit Protocol Assist TMAC buffer empty  * @VXGE_HAL_ERR_RDCTL_PIC_QUIESCENT: PIC block is quiescent  * @VXGE_HAL_ERR_XGMAC_NETWORK_FAULT: Network Fault  * @VXGE_HAL_ERR_ROCRC_OFFLOAD_QUIESCENT: ROCRC offload quiescent  * @VXGE_HAL_ERR_G3IF_FB_G3IF_FB_GDDR3_READY: G3DDR Interface FB Ready  * @VXGE_HAL_ERR_G3IF_CM_G3IF_CM_GDDR3_READY: G3DDR Interface CM Ready  * @VXGE_HAL_ERR_RIC_RIC_RUNNING: Adapter RIC is still programming flash  *		settings to device  * @VXGE_HAL_ERR_CMG_C_PLL_IN_LOCK: CMG C PLL in lock  * @VXGE_HAL_ERR_XGMAC_X_PLL_IN_LOCK: XGMAC X PLL in Lock  * @VXGE_HAL_ERR_FBIF_M_PLL_IN_LOCK: FBUF M PLL in Lock  * @VXGE_HAL_ERR_PCC_PCC_IDLE: PCC is idle  * @VXGE_HAL_ERR_ROCRC_RC_PRC_QUIESCENT: ROCRC RC PCC quiescent  * @VXGE_HAL_ERR_SLOT_FREEZE: PCI Slot frozen  * @VXGE_HAL_ERR_INVALID_TCODE: The t-code returned is invalid  * @VXGE_HAL_ERR_INVALID_PORT: The port number specified is invalid  * @VXGE_HAL_ERR_INVALID_PRIORITY: Proiority specified is invalid  * @VXGE_HAL_ERR_INVALID_MIN_BANDWIDTH: Minimum bandwidth specified is invalid  * @VXGE_HAL_ERR_INVALID_MAX_BANDWIDTH: Maximum bandwidth specified is invalid  * @VXGE_HAL_ERR_INVALID_BANDWIDTH_LIMIT: Bandwidth limit specified is invalid  * @VXGE_HAL_ERR_INVALID_TOTAL_BANDWIDTH: Total bandwidth specified is invalid  * @VXGE_HAL_ERR_MANAGER_NOT_FOUND: The Function 0 driver or MRPCIM manager is  *		down  * @VXGE_HAL_ERR_TIME_OUT: Timeout occurred  * @VXGE_HAL_ERR_EVENT_UNKNOWN: Unknown alarm  * @VXGE_HAL_ERR_EVENT_SERR: Serious error on device  * @VXGE_HAL_ERR_EVENT_CRITICAL: Critical error in the vpath  * @VXGE_HAL_ERR_EVENT_ECCERR: Ecc Error returned in t-code  * @VXGE_HAL_ERR_EVENT_KDFCCTL: Kdfcctl error on the device  * @VXGE_HAL_ERR_EVENT_SRPCIM_CRITICAL: Critical error in SRPCIM  * @VXGE_HAL_ERR_EVENT_MRPCIM_CRITICAL: Critical error in MRPCIM  * @VXGE_HAL_ERR_EVENT_MRPCIM_ECCERR: ECC error in MRPCIM  * @VXGE_HAL_ERR_EVENT_RESET_START: Device is going to be reset  * @VXGE_HAL_ERR_EVENT_RESET_COMPLETE: Device reset is complete  * @VXGE_HAL_ERR_EVENT_SLOT_FREEZE: PCI Slot freeze  * @VXGE_HAL_BADCFG_WIRE_PORT_PORT_ID: Invalid port id in config  * @VXGE_HAL_BADCFG_WIRE_PORT_MAX_MEDIA: Invalid media type in config  * @VXGE_HAL_BADCFG_WIRE_PORT_MAX_INITIAL_MTU: Invalid initial MTU size  *		in config  * @VXGE_HAL_BADCFG_WIRE_PORT_AUTONEG_MODE: Invalid autonegotiation mode  *		in config  * @VXGE_HAL_BADCFG_WIRE_PORT_AUTONEG_RATE: Invalid autonegotiation rate  *		in config  * @VXGE_HAL_BADCFG_WIRE_PORT_FIXED_USE_FSM: Invalid fixed use fsm in config  * @VXGE_HAL_BADCFG_WIRE_PORT_ANTP_USE_FSM: Invalid ANTP use FSM in config  * @VXGE_HAL_BADCFG_WIRE_PORT_ANBE_USE_FSM: Invalid ANBE use FSM in config  * @VXGE_HAL_BADCFG_WIRE_PORT_LINK_STABILITY_PERIOD: Invalid link stability  *		period in config  * @VXGE_HAL_BADCFG_WIRE_PORT_PORT_STABILITY_PERIOD: Invalid port stability  *		period in config  * @VXGE_HAL_BADCFG_WIRE_PORT_TMAC_EN: Invalid Transmit MAC enable setting  *		in config  * @VXGE_HAL_BADCFG_WIRE_PORT_RMAC_EN: Invalid Receive MAC enable setting  *		in config  * @VXGE_HAL_BADCFG_WIRE_PORT_TMAC_PAD: Invalid Transmit MAC PAD enable setting  *		in config  * @VXGE_HAL_BADCFG_WIRE_PORT_TMAC_PAD_BYTE: Invalid Transmit MAC PAD Byte  *		setting in config  * @VXGE_HAL_BADCFG_WIRE_PORT_TMAC_UTIL_PERIOD: Invalid Transmit MAC utilization  *		period in config  * @VXGE_HAL_BADCFG_WIRE_PORT_RMAC_STRIP_FCS: Invalid Receive MAC strip FCS  *		setting in config  * @VXGE_HAL_BADCFG_WIRE_PORT_RMAC_PROM_EN: Invalid Receive MAC PROM enable  *		in config  * @VXGE_HAL_BADCFG_WIRE_PORT_RMAC_DISCARD_PFRM: Invalid Receive MAC discard  *		pfrm setting in config  * @VXGE_HAL_BADCFG_WIRE_PORT_RMAC_UTIL_PERIOD: Invalid Receive MAC utilization  *		period in config  * @VXGE_HAL_BADCFG_WIRE_PORT_RMAC_PAUSE_GEN_EN: Invalid Receive MAC pause  *		generation enable setting in config  * @VXGE_HAL_BADCFG_WIRE_PORT_RMAC_PAUSE_RCV_EN: Invalid Receive MAC pause  *		receive enable setting in config  * @VXGE_HAL_BADCFG_WIRE_PORT_RMAC_HIGH_PTIME: Invalid Receive MAC high ptime  *		setting in config  * @VXGE_HAL_BADCFG_WIRE_PORT_RMAC_PAUSE_LIMITER_EN: Invalid Receive MAC pause  *		limitter enable setting in config  * @VXGE_HAL_BADCFG_WIRE_PORT_RMAC_MAX_LIMIT: Invalid Receive MAC max limit  *		setting in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_MAX_INITIAL_MTU: Invalid initial MTU size  *		in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_TMAC_EN: Invalid Transmit MAC enable setting  *		in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_EN: Invalid Receive MAC enable setting  *		in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_TMAC_PAD: Invalid Transmit MAC PAD enable  *		setting in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_TMAC_PAD_BYTE: Invalid Transmit MAC PAD Byte  *		setting in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_TMAC_UTIL_PERIOD: Invalid Transmit MAC  *		utilization period in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_STRIP_FCS: Invalid Receive MAC strip FCS  *		setting in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_PROM_EN: Invalid Receive MAC PROM enable  *		in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_DISCARD_PFRM: Invalid Receive MAC discard  *		pfrm setting in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_UTIL_PERIOD: Invalid Receive MAC  *		utilization period in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_PAUSE_GEN_EN: Invalid Receive MAC  *		pause generation enable setting in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_PAUSE_RCV_EN: Invalid Receive MAC  *		pause receive enable setting in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_HIGH_PTIME: Invalid Receive MAC  *		high ptime setting in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_PAUSE_LIMITER_EN: Invalid Receive MAC pause  *		limitter enable setting in config  * @VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_MAX_LIMIT: Invalid Receive MAC  *		max limit setting in config  * @VXGE_HAL_BADCFG_MAC_NETWORK_STABILITY_PERIOD: Invalid network  *		stability period setting in config  * @VXGE_HAL_BADCFG_MAC_MC_PAUSE_THRESHOLD: Invalid MC pause threshold  *		setting in config  * @VXGE_HAL_BADCFG_MAC_PERMA_STOP_EN: Invalid perma stop enable setting  *		in config  * @VXGE_HAL_BADCFG_MAC_TMAC_TX_SWITCH_DIS: Invalid Transmit MAC  *		tx switch disable in config  * @VXGE_HAL_BADCFG_MAC_TMAC_LOSSY_SWITCH_EN: Invalid Transmit MAC  *		lossy switch enable in config  * @VXGE_HAL_BADCFG_MAC_TMAC_LOSSY_WIRE_EN: Invalid Transmit MAC  *		lossy wire enable in config  * @VXGE_HAL_BADCFG_MAC_TMAC_BCAST_TO_WIRE_DIS: Invalid Transmit  *		MAC broadcast to wire disable in config  * @VXGE_HAL_BADCFG_MAC_TMAC_BCAST_TO_SWITCH_DIS: Invalid Transmit  *		MAC broadcast to switch disable in config  * @VXGE_HAL_BADCFG_MAC_TMAC_HOST_APPEND_FCS_EN: Invalid Transmit MAC  *		host append fcs in config  * @VXGE_HAL_BADCFG_MAC_TPA_SUPPORT_SNAP_AB_N: Invalid Transmit Protocol  *		Assist support SNAP AB N setting in config  * @VXGE_HAL_BADCFG_MAC_TPA_ECC_ENABLE_N: Invalid Transmit Protocol  *		Assist ecc enable N setting in config  * @VXGE_HAL_BADCFG_MAC_RPA_IGNORE_FRAME_ERR: Invalid Receive Protocol  *		Assist ignore frame error in config  * @VXGE_HAL_BADCFG_MAC_RPA_SNAP_AB_N: Invalid Receive Protocol Assist  *		SNAP AB N in config  * @VXGE_HAL_BADCFG_MAC_RPA_SEARCH_FOR_HAO: Invalid Receive Protocol  *		Assist search for HAO in config  * @VXGE_HAL_BADCFG_MAC_RPA_SUPPORT_IPV6_MOBILE_HDRS: Invalid Receive  *		Protocol support ipv6 mobile headers in config  * @VXGE_HAL_BADCFG_MAC_RPA_IPV6_STOP_SEARCHING: Invalid Receive Protocol  *		Assist ipv6 stop searching in config  * @VXGE_HAL_BADCFG_MAC_RPA_NO_PS_IF_UNKNOWN: Invalid Receive Protocol  *		Assist no ps if unknown in config  * @VXGE_HAL_BADCFG_MAC_RPA_SEARCH_FOR_ETYPE: Invalid Receive Protocol  *		Assist search for etype in config  * @VXGE_HAL_BADCFG_MAC_RPA_REPL_L4_COMP_CSUM: Invalid Receive Protocol  *		Assist replication setting in config  * @VXGE_HAL_BADCFG_MAC_RPA_REPL_L3_INCL_CF: Invalid Receive Protocol Assist  *		replication setting in config  * @VXGE_HAL_BADCFG_MAC_RPA_REPL_L3_COMP_CSUM: Invalid Receive Protocol Assist  *		replication setting in config  * @VXGE_HAL_BADCFG_MAC_RPA_REPL_IPV4_TCP_INCL_PH: Invalid Receive Protocol  *		Assist replication setting in config  * @VXGE_HAL_BADCFG_MAC_RPA_REPL_IPV6_TCP_INCL_PH: Invalid Receive Protocol  *		Assist replication setting in config  * @VXGE_HAL_BADCFG_MAC_RPA_REPL_IPV4_UDP_INCL_PH: Invalid Receive Protocol  *		Assist replication setting in config  * @VXGE_HAL_BADCFG_MAC_RPA_REPL_IPV6_UDP_INCL_PH: Invalid Receive Protocol  *		Assist replication setting in config  * @VXGE_HAL_BADCFG_MAC_RPA_REPL_L4_INCL_CF: Invalid Receive Protocol Assist  *		replication setting in config  * @VXGE_HAL_BADCFG_MAC_RPA_REPL_STRIP_VLAN_TAG: Invalid Receive Protocol  *		Assist replication setting in config  * @VXGE_HAL_BADCFG_LAG_LAG_EN: Invalid option for lag_en in config  * @VXGE_HAL_BADCFG_LAG_LAG_MODE: Invalid option for lag_mode in config  * @VXGE_HAL_BADCFG_LAG_TX_DISCARD: Invalid option for tx_discard in config  * @VXGE_HAL_BADCFG_LAG_TX_AGGR_STATS: Invalid option for incr_tx_aggr_stats  *		in config  * @VXGE_HAL_BADCFG_LAG_DISTRIB_ALG_SEL: Invalid option for distrib_alg_sel  *		in config  * @VXGE_HAL_BADCFG_LAG_DISTRIB_REMAP_IF_FAIL: Invalid option for  *		distrib_remap_if_fail in config  * @VXGE_HAL_BADCFG_LAG_COLL_MAX_DELAY: Invalid Collector Max Delay in config  * @VXGE_HAL_BADCFG_LAG_RX_DISCARD: Invalid option for rx_discard in config  * @VXGE_HAL_BADCFG_LAG_PREF_INDIV_PORT: Invalid option for pref_indiv_port  *		in config  * @VXGE_HAL_BADCFG_LAG_HOT_STANDBY: Invalid option for hot_standby in config  * @VXGE_HAL_BADCFG_LAG_LACP_DECIDES: Invalid option for lacp_decides in config  * @VXGE_HAL_BADCFG_LAG_PREF_ACTIVE_PORT: Invalid option for pref_active_port  *		in config  * @VXGE_HAL_BADCFG_LAG_AUTO_FAILBACK: Invalid option for auto_failback  *		in config  * @VXGE_HAL_BADCFG_LAG_FAILBACK_EN: Invalid option for failback_en in config  * @VXGE_HAL_BADCFG_LAG_COLD_FAILOVER_TIMEOUT: Invalid cold_failover_timeout  *		in config  * @VXGE_HAL_BADCFG_LAG_LACP_EN: Invalid option for lacp_en in config  * @VXGE_HAL_BADCFG_LAG_LACP_BEGIN: Invalid option for lacp_begin in config  * @VXGE_HAL_BADCFG_LAG_DISCARD_LACP: Invalid option for discard_lacp in config  * @VXGE_HAL_BADCFG_LAG_LIBERAL_LEN_CHK: Invalid option for liberal_len_chk  *		in config  * @VXGE_HAL_BADCFG_LAG_MARKER_GEN_RECV_EN: Invalid option for  *		marker_gen_recv_en in config  * @VXGE_HAL_BADCFG_LAG_MARKER_RESP_EN: Invalid option for marker_resp_en  *		in config  * @VXGE_HAL_BADCFG_LAG_MARKER_RESP_TIMEOUT: Invalid option for  *		marker_resp_timeout in config  * @VXGE_HAL_BADCFG_LAG_SLOW_PROTO_MRKR_MIN_INTERVAL: Invalid option for  *		slow_proto_mrkr_min_interval in config  * @VXGE_HAL_BADCFG_LAG_THROTTLE_MRKR_RESP: Invalid option for  *		throttle_mrkr_resp in config  * @VXGE_HAL_BADCFG_LAG_SYS_PRI: Invalid system priority in config  * @VXGE_HAL_BADCFG_LAG_USE_PORT_MAC_ADDR: Invalid option for  *		use_port_mac_addr in config  * @VXGE_HAL_BADCFG_LAG_MAC_ADDR_SEL: Invalid option for mac_addr_sel in config  * @VXGE_HAL_BADCFG_LAG_ALT_ADMIN_KEY: Invalid alterneate admin key in config  * @VXGE_HAL_BADCFG_LAG_ALT_AGGR: Invalid option for alt_aggr in config  * @VXGE_HAL_BADCFG_LAG_FAST_PER_TIME: Invalid fast periodic time in config  * @VXGE_HAL_BADCFG_LAG_SLOW_PER_TIME: Invalid slow periodic time in config  * @VXGE_HAL_BADCFG_LAG_SHORT_TIMEOUT: Invalid short timeout in config  * @VXGE_HAL_BADCFG_LAG_LONG_TIMEOUT: Invalid long timeout in config  * @VXGE_HAL_BADCFG_LAG_CHURN_DET_TIME: Invalid churn detection time in config  * @VXGE_HAL_BADCFG_LAG_AGGR_WAIT_TIME: Invalid Aggregator wait time in config  * @VXGE_HAL_BADCFG_LAG_SHORT_TIMER_SCALE: Invalid short timer scale in config  * @VXGE_HAL_BADCFG_LAG_LONG_TIMER_SCALE: Invalid long timer scale in config  * @VXGE_HAL_BADCFG_LAG_AGGR_AGGR_ID: Invalid Aggregator Id in config  * @VXGE_HAL_BADCFG_LAG_AGGR_USE_PORT_MAC_ADDR: Invalid option for  *		use_port_mac_addr in config  * @VXGE_HAL_BADCFG_LAG_AGGR_MAC_ADDR_SEL: Invalid option for mac_addr_sel  *		in config  * @VXGE_HAL_BADCFG_LAG_AGGR_ADMIN_KEY: Invalid admin key in config  * @VXGE_HAL_BADCFG_LAG_PORT_PORT_ID: Invalid port id in config  * @VXGE_HAL_BADCFG_LAG_PORT_LAG_EN: Invalid option for lag_en in config  * @VXGE_HAL_BADCFG_LAG_PORT_DISCARD_SLOW_PROTO: Invalid option for  *		discard_slow_proto in config  * @VXGE_HAL_BADCFG_LAG_PORT_HOST_CHOSEN_AGGR: Invalid option for  *		host_chosen_aggr in config  * @VXGE_HAL_BADCFG_LAG_PORT_DISCARD_UNKNOWN_SLOW_PROTO: Invalid option  *		for discard unknown slow proto in config  * @VXGE_HAL_BADCFG_LAG_PORT_ACTOR_PORT_NUM: Invalid Actor port number in config  * @VXGE_HAL_BADCFG_LAG_PORT_ACTOR_PORT_PRIORITY: Invalid Actor port priority  *		in config  * @VXGE_HAL_BADCFG_LAG_PORT_ACTOR_KEY_10G: Invalid Actor 10G key in config  * @VXGE_HAL_BADCFG_LAG_PORT_ACTOR_KEY_1G: Invalid Actor 1G key in config  * @VXGE_HAL_BADCFG_LAG_PORT_ACTOR_LACP_ACTIVITY: Invalid option for  *		actor_lacp_activity in config  * @VXGE_HAL_BADCFG_LAG_PORT_ACTOR_LACP_TIMEOUT: Invalid option for  *		actor_lacp_timeout in config  * @VXGE_HAL_BADCFG_LAG_PORT_ACTOR_AGGREGATION: Invalid option for  *		actor_aggregation in config  * @VXGE_HAL_BADCFG_LAG_PORT_ACTOR_SYNCHRONIZATION: Invalid option  *		for actor_synchronization in config  * @VXGE_HAL_BADCFG_LAG_PORT_ACTOR_COLLECTING: Invalid option for  *		actor_collecting in config  * @VXGE_HAL_BADCFG_LAG_PORT_ACTOR_DISTRIBUTING: Invalid option for  *		actor_distributing in config  * @VXGE_HAL_BADCFG_LAG_PORT_ACTOR_DEFAULTED: Invalid option for  *		actor_defaulted in config  * @VXGE_HAL_BADCFG_LAG_PORT_ACTOR_EXPIRED: Invalid option for  *		actor_expired in config  * @VXGE_HAL_BADCFG_LAG_PORT_PARTNER_SYS_PRI: Invalid option for  *		partner_sys_pri in config  * @VXGE_HAL_BADCFG_LAG_PORT_PARTNER_KEY: Invalid option for  *		partner_key in config  * @VXGE_HAL_BADCFG_LAG_PORT_PARTNER_NUM: Invalid option for  *		partner_port_num in config  * @VXGE_HAL_BADCFG_LAG_PORT_PARTNER_PORT_PRIORITY: Invalid option for  *		partner_port_pri in config  * @VXGE_HAL_BADCFG_LAG_PORT_PARTNER_LACP_ACTIVITY: Invalid option for  *		partner_lacp_activity in config  * @VXGE_HAL_BADCFG_LAG_PORT_PARTNER_LACP_TIMEOUT: Invalid option for  *		partner_lacp_timeout in config  * @VXGE_HAL_BADCFG_LAG_PORT_PARTNER_AGGREGATION: Invalid option for  *		partner_aggregation in config  * @VXGE_HAL_BADCFG_LAG_PORT_PARTNER_SYNCHRONIZATION: Invalid option for  *		partner_synchronization in config  * @VXGE_HAL_BADCFG_LAG_PORT_PARTNER_COLLECTING: Invalid option for  *		partner_collecting in config  * @VXGE_HAL_BADCFG_LAG_PORT_PARTNER_DISTRIBUTING: Invalid option for  *		partner_distributing in config  * @VXGE_HAL_BADCFG_LAG_PORT_PARTNER_DEFAULTED: Invalid option for  *		partner_defaulted in config  * @VXGE_HAL_BADCFG_LAG_PORT_PARTNER_EXPIRED: Invalid option for  *		partner_expired in config  * @VXGE_HAL_BADCFG_VPATH_QOS_PRIORITY: Invalid vpath priority  * @VXGE_HAL_BADCFG_VPATH_QOS_MIN_BANDWIDTH: Invalid minimum bandwidth  * @VXGE_HAL_BADCFG_VPATH_QOS_MAX_BANDWIDTH: Invalid maximum bandwidth  * @VXGE_HAL_BADCFG_LOG_LEVEL: Invalid option for partner_mac_addr in config  * @VXGE_HAL_BADCFG_RING_ENABLE: Invalid option for ring enable in config  * @VXGE_HAL_BADCFG_RING_LENGTH: Invalid ring length in config in config  * @VXGE_HAL_BADCFG_RING_RXD_BUFFER_MODE: Invalid receive buffer mode in config  * @VXGE_HAL_BADCFG_RING_SCATTER_MODE: Invalid scatter mode setting in config  * @VXGE_HAL_BADCFG_RING_POST_MODE: Invalid post mode setting in config  * @VXGE_HAL_BADCFG_RING_MAX_FRM_LEN: Invalid max frame length setting in config  * @VXGE_HAL_BADCFG_RING_NO_SNOOP_ALL: Invalid no snoop all setting in config  * @VXGE_HAL_BADCFG_RING_TIMER_VAL: Invalid timer value setting in config  * @VXGE_HAL_BADCFG_RING_GREEDY_RETURN: Invalid grredy return setting in config  * @VXGE_HAL_BADCFG_RING_TIMER_CI: Invalid timer ci setting in config  * @VXGE_HAL_BADCFG_RING_BACKOFF_INTERVAL_US: Invalid backoff interval  *		in microseconds setting in config  * @VXGE_HAL_BADCFG_RING_INDICATE_MAX_PKTS: Invalid indicate maximum packets  *		setting in config  * @VXGE_HAL_BADCFG_FIFO_ENABLE: Invalid option for FIFO enable in config  * @VXGE_HAL_BADCFG_FIFO_LENGTH: Invalid FIFO length in config  * @VXGE_HAL_BADCFG_FIFO_FRAGS: Invalid number of transmit frame fragments  *		in config  * @VXGE_HAL_BADCFG_FIFO_ALIGNMENT_SIZE: Invalid alignment size in config  * @VXGE_HAL_BADCFG_FIFO_MAX_FRAGS: Invalid maximum number of transmit frame  *		fragments in config  * @VXGE_HAL_BADCFG_FIFO_QUEUE_INTR: Invalid FIFO queue interrupt setting  *		in config  * @VXGE_HAL_BADCFG_FIFO_NO_SNOOP_ALL: Invalid FIFO no snoop all setting  *		in config  * @VXGE_HAL_BADCFG_DMQ_LENGTH: Invalid DMQ length setting in config  * @VXGE_HAL_BADCFG_DMQ_IMMED_EN: Invalid DMQ immediate enable setting in config  * @VXGE_HAL_BADCFG_DMQ_EVENT_EN: Invalid DMQ event enable setting in config  * @VXGE_HAL_BADCFG_DMQ_INTR_CTRL: Invalid DMQ interrupt control setting  *		in config  * @VXGE_HAL_BADCFG_DMQ_GEN_COMPL: Invalid DMQ general completion setting  *		in config  * @VXGE_HAL_BADCFG_UMQ_LENGTH: Invalid UMQ length setting in config  * @VXGE_HAL_BADCFG_UMQ_IMMED_EN: Invalid UMQ immediate enable setting in config  * @VXGE_HAL_BADCFG_UMQ_EVENT_EN: Invalid UMQ event enable setting in config  * @VXGE_HAL_BADCFG_UMQ_INTR_CTRL: Invalid UMQ interrupt control setting  *		in config  * @VXGE_HAL_BADCFG_UMQ_GEN_COMPL: Invalid UMQ general completion setting  *		in config  * @VXGE_HAL_BADCFG_SW_LRO_SESSIONS: Invalid number of SW LRO sessions  *		setting in config  * @VXGE_HAL_BADCFG_SW_LRO_SG_SIZE: Invalid SW LRO Segment size  * @VXGE_HAL_BADCFG_SW_LRO_FRM_LEN: Invalid SW LRO Frame Length  * @VXGE_HAL_BADCFG_SW_LRO_MODE: Invalid SW LRO mode setting in config  * @VXGE_HAL_BADCFG_LRO_SESSIONS_MAX: Invalid maximum number of LRO sessions  *		setting in config  * @VXGE_HAL_BADCFG_LRO_SESSIONS_THRESHOLD: Invalid sessions number threshold  *		setting in config  * @VXGE_HAL_BADCFG_LRO_SESSIONS_TIMEOUT: Invalid sessions timeout setting  *		in config  * @VXGE_HAL_BADCFG_LRO_NO_WQE_THRESHOLD: Invalid lower limit for number  *		of WQEs in config  * @VXGE_HAL_BADCFG_LRO_DUPACK_DETECTION: Invalid option for  *		dupack_detection_enabled in config  * @VXGE_HAL_BADCFG_LRO_DATA_MERGING: Invalid option for  *		data_merging_enabled in config  * @VXGE_HAL_BADCFG_LRO_ACK_MERGING: Invalid option for  *		ack_merging_enabled in config  * @VXGE_HAL_BADCFG_LRO_LLC_HDR_MODE: Invalid LLC Header Mode  * @VXGE_HAL_BADCFG_LRO_SNAP_HDR_MODE: Invalid SNAP Header Mode  * @VXGE_HAL_BADCFG_LRO_SESSION_ECN: Invalid option for session_ecn_enabled  * @VXGE_HAL_BADCFG_LRO_SESSION_ECN_NONCE: Invalid option for  *		session_ecn_enabled_nonce  * @VXGE_HAL_BADCFG_LRO_RXD_BUFFER_MODE: Invalid buffer mode  * @VXGE_HAL_BADCFG_LRO_SCATTER_MODE: Invalid scatter mode  * @VXGE_HAL_BADCFG_LRO_IP_DATAGRAM_SIZE: Invalid IP Datagram size  * @VXGE_HAL_BADCFG_LRO_FRAME_THRESHOLD: Invalid Frame Threshold  * @VXGE_HAL_BADCFG_LRO_PSH_THRESHOLD: Invalid push Threshold  * @VXGE_HAL_BADCFG_LRO_MTU_THRESHOLD: Invalid MTU Threshold  * @VXGE_HAL_BADCFG_LRO_MSS_THRESHOLD: Invalid MSS Threshold  * @VXGE_HAL_BADCFG_LRO_TCP_TSVAL_DELTA: Invalid TXP TSVAL DELTA  * @VXGE_HAL_BADCFG_LRO_ACK_NBR_DELTA: Invalid Acknowledgement delta  * @VXGE_HAL_BADCFG_LRO_SPARE_WQE_CAPACITY: Invalid Spare WQE Capacity  * @VXGE_HAL_BADCFG_TIM_INTR_ENABLE: Invalid TIM interrupt enable setting  *		in config  * @VXGE_HAL_BADCFG_TIM_BTIMER_VAL: Invalid TIM btimer value setting in config  * @VXGE_HAL_BADCFG_TIM_TIMER_AC_EN: Invalid TIM timer ac enable setting  *		in config  * @VXGE_HAL_BADCFG_TIM_TIMER_CI_EN: Invalid Tx timer continuous interrupt  * enable. See the structure vxge_hal_tim_intr_config_t {} for valid values.  * @VXGE_HAL_BADCFG_TIM_TIMER_RI_EN: Invalid TIM timer ri enable setting  *		in config  * @VXGE_HAL_BADCFG_TIM_BTIMER_EVENT_SF: Invalid TIM btimer event sf seting  *		in config  * @VXGE_HAL_BADCFG_TIM_RTIMER_VAL: Invalid TIM rtimer setting in config  * @VXGE_HAL_BADCFG_TIM_UTIL_SEL: Invalid TIM utilization setting in config  * @VXGE_HAL_BADCFG_TIM_LTIMER_VAL: Invalid TIM ltimer value setting in config  * @VXGE_HAL_BADCFG_TXFRM_CNT_EN: Invalid transmit frame count enable in config  * @VXGE_HAL_BADCFG_TXD_CNT_EN: Invalid transmit count enable in config  * @VXGE_HAL_BADCFG_TIM_URANGE_A: Invalid link utilization range A. See  * the structure vxge_hal_tim_intr_config_t {} for valid values.  * @VXGE_HAL_BADCFG_TIM_UEC_A: Invalid frame count for link utilization  * range A. See the structure vxge_hal_tim_intr_config_t {} for valid values.  * @VXGE_HAL_BADCFG_TIM_URANGE_B: Invalid link utilization range B. See  * the structure vxge_hal_tim_intr_config_t {} for valid values.  * @VXGE_HAL_BADCFG_TIM_UEC_B: Invalid frame count for link utilization  * range B. See the strucuture  vxge_hal_tim_intr_config_t {} for valid values.  * @VXGE_HAL_BADCFG_TIM_URANGE_C: Invalid link utilization range C. See  * the structure  vxge_hal_tim_intr_config_t {} for valid values.  * @VXGE_HAL_BADCFG_TIM_UEC_C: Invalid frame count for link utilization  * range C. See the structure vxge_hal_tim_intr_config_t {} for valid values.  * @VXGE_HAL_BADCFG_TIM_UEC_D: Invalid frame count for link utilization  * range D. See the structure  vxge_hal_tim_intr_config_t {} for valid values.  * @VXGE_HAL_BADCFG_VPATH_ID: Invalid vpath id in config  * @VXGE_HAL_BADCFG_VPATH_WIRE_PORT: Invalid wire port to be used  * @VXGE_HAL_BADCFG_VPATH_NO_SNOOP: Invalid vpath no snoop setting in config  * @VXGE_HAL_BADCFG_VPATH_MTU: Invalid vpath mtu size setting in config  * @VXGE_HAL_BADCFG_VPATH_TPA_LSOV2_EN: Invalid vpath transmit protocol assist  *		lso v2 en setting in config  * @VXGE_HAL_BADCFG_VPATH_TPA_IGNORE_FRAME_ERROR: Invalid vpath transmit  *		protocol assist ignore frame error setting in config  * @VXGE_HAL_BADCFG_VPATH_TPA_IPV6_KEEP_SEARCHING: Invalid vpath transmit  *		protocol assist ipv6 keep searching setting in config  * @VXGE_HAL_BADCFG_VPATH_TPA_L4_PSHDR_PRESENT: Invalid vpath transmit protocol  *		assist L4 pseudo header present setting in config  * @VXGE_HAL_BADCFG_VPATH_TPA_SUPPORT_MOBILE_IPV6_HDRS: Invalid vpath transmit  *		protocol assist support mobile ipv6 headers setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_IPV4_TCP_INCL_PH: Invalid vpath receive protocol  *		assist ipv4 tcp include pseudo header setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_IPV6_TCP_INCL_PH: Invalid vpath receive protocol  *		assist ipv6 tcp include pseudo header setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_IPV4_UDP_INCL_PH: Invalid vpath receive protocol  *		assist ipv4 udp include pseudo header setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_IPV6_UDP_INCL_PH: Invalid vpath receive protocol  *		assist ipv6 udp include pseudo header setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_L4_INCL_CF: Invalid vpath receive protocol assist  *		layer 4 include cf setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_STRIP_VLAN_TAG: Invalid vpath receive protocol  *		assist strip vlan tag setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_L4_COMP_CSUM: Invalid vpath receive protocol  *		assist layer 4 compute check sum setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_L3_INCL_CF: Invalid vpath receive protocol  *		assist layer 3 include cf setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_L3_COMP_CSUM: Invalid vpath receive protocol  *		assist layer 3 compute check sum setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_UCAST_ALL_ADDR_EN: Invalid vpath receive protocol  *		assist unicast all address enable setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_MCAST_ALL_ADDR_EN: Invalid vpath receive protocol  *		assist multi-icast all address enable setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_CAST_EN: Invalid vpath receive protocol assist  *		cast enable setting in config  * @VXGE_HAL_BADCFG_VPATH_RPA_ALL_VID_EN: Invalid vpath receive protocol  *		assist all vlan ids enable setting in config  * @VXGE_HAL_BADCFG_VPATH_VP_Q_L2_FLOW: Invalid Q l2 flow setting in config  * @VXGE_HAL_BADCFG_VPATH_VP_STATS_READ_METHOD: Invalid Stats read method  * @VXGE_HAL_BADCFG_VPATH_BANDWIDTH_LIMIT: Invalid bandwidth limit  * @VXGE_HAL_BADCFG_BLOCKPOOL_MIN: Invalid minimum number of block pool blocks  *		setting in config  * @VXGE_HAL_BADCFG_BLOCKPOOL_INITIAL: Invalid initial number of block pool  *		blocks setting in config  * @VXGE_HAL_BADCFG_BLOCKPOOL_INCR: Invalid number of block pool blocks  *		increment setting in config  * @VXGE_HAL_BADCFG_BLOCKPOOL_MAX: Invalid maximum number of block pool  *		blocks setting in config  * @VXGE_HAL_BADCFG_ISR_POLLING_CNT: Invalid isr polling count setting in config  * @VXGE_HAL_BADCFG_MAX_PAYLOAD_SIZE: Invalid maximum payload size setting  *		in config  * @VXGE_HAL_BADCFG_MMRB_COUNT: Invalid mmrb count setting in config  * @VXGE_HAL_BADCFG_STATS_REFRESH_TIME: Invalid stats refresh time setting  *		in config  * @VXGE_HAL_BADCFG_DUMP_ON_SERR: Invalid dump on serr setting in config  * @VXGE_HAL_BADCFG_DUMP_ON_CRITICAL: Invalid dump on critical error setting  *		config  * @VXGE_HAL_BADCFG_DUMP_ON_ECCERR: Invalid dump on ecc error setting config  * @VXGE_HAL_BADCFG_DUMP_ON_UNKNOWN: Invalid dump on unknown alarm setting  *		config  * @VXGE_HAL_BADCFG_INTR_MODE: Invalid interrupt mode setting in config  * @VXGE_HAL_BADCFG_RTH_EN: Invalid rth enable setting in config  * @VXGE_HAL_BADCFG_RTH_IT_TYPE: Invalid rth it type setting in config  * @VXGE_HAL_BADCFG_UFCA_INTR_THRES: Invalid rxufca interrupt threshold  *		setting in config  * @VXGE_HAL_BADCFG_UFCA_LO_LIM: Invalid rxufca low limit setting in config  * @VXGE_HAL_BADCFG_UFCA_HI_LIM: Invalid rxufca high limit setting in config  * @VXGE_HAL_BADCFG_UFCA_LBOLT_PERIOD: Invalid rxufca lbolt period in config  * @VXGE_HAL_BADCFG_DEVICE_POLL_MILLIS: Invalid device poll timeout  *		in milliseconds setting in config  * @VXGE_HAL_BADCFG_RTS_MAC_EN: Invalid rts mac enable setting in config  * @VXGE_HAL_BADCFG_RTS_QOS_EN: Invalid rts qos enable setting in config  * @VXGE_HAL_BADCFG_RTS_PORT_EN: Invalid rts port enable setting in config  * @VXGE_HAL_BADCFG_MAX_CQE_GROUPS: Invalid maximum number of CQE groups  *		in config  * @VXGE_HAL_BADCFG_MAX_NUM_OD_GROUPS: Invalid maximum number of OD groups  *		in config  * @VXGE_HAL_BADCFG_NO_WQE_THRESHOLD: Invalid no wqe threshold setting  *		in config  * @VXGE_HAL_BADCFG_REFILL_THRESHOLD_HIGH: Invalid refill threshold setting  *		in config  * @VXGE_HAL_BADCFG_REFILL_THRESHOLD_LOW: Invalid refill threshold setting  *		in config  * @VXGE_HAL_BADCFG_ACK_BLOCK_LIMIT: Invalid acknowledgement block setting  *		in config  * @VXGE_HAL_BADCFG_STATS_READ_METHOD: Invalid stats read method  * @VXGE_HAL_BADCFG_POLL_OR_DOOR_BELL: Invalid poll or doorbell setting  *		in config  * @VXGE_HAL_BADCFG_MSIX_ID: Invalid MSIX Id  * @VXGE_HAL_EOF_TRACE_BUF: Invalid end of trace buffer setting in config  *  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|vxge_hal_status_e
block|{
name|VXGE_HAL_OK
init|=
literal|0
block|,
name|VXGE_HAL_FAIL
init|=
literal|1
block|,
name|VXGE_HAL_PENDING
init|=
literal|2
block|,
name|VXGE_HAL_CONTINUE
init|=
literal|3
block|,
name|VXGE_HAL_RETURN
init|=
literal|4
block|,
name|VXGE_HAL_COMPLETIONS_REMAIN
init|=
literal|5
block|,
name|VXGE_HAL_TRAFFIC_INTERRUPT
init|=
literal|6
block|,
name|VXGE_HAL_INF_NO_MORE_COMPLETED_DESCRIPTORS
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|1
block|,
name|VXGE_HAL_INF_OUT_OF_DESCRIPTORS
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|2
block|,
name|VXGE_HAL_INF_QUEUE_IS_NOT_READY
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|4
block|,
name|VXGE_HAL_INF_MEM_STROBE_CMD_EXECUTING
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|5
block|,
name|VXGE_HAL_INF_STATS_IS_NOT_READY
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|6
block|,
name|VXGE_HAL_INF_NO_MORE_FREED_DESCRIPTORS
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|7
block|,
name|VXGE_HAL_INF_IRQ_POLLING_CONTINUE
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|8
block|,
name|VXGE_HAL_INF_SW_LRO_BEGIN
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|9
block|,
name|VXGE_HAL_INF_SW_LRO_CONT
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|10
block|,
name|VXGE_HAL_INF_SW_LRO_UNCAPABLE
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|11
block|,
name|VXGE_HAL_INF_SW_LRO_FLUSH_SESSION
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|12
block|,
name|VXGE_HAL_INF_SW_LRO_FLUSH_BOTH
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|13
block|,
name|VXGE_HAL_INF_SW_LRO_END_3
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|14
block|,
name|VXGE_HAL_INF_SW_LRO_SESSIONS_XCDED
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|15
block|,
name|VXGE_HAL_INF_NOT_ENOUGH_HW_CQES
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|16
block|,
name|VXGE_HAL_INF_LINK_UP_DOWN
init|=
name|VXGE_HAL_BASE_INF
operator|+
literal|17
block|,
name|VXGE_HAL_ERR_DRIVER_NOT_INITIALIZED
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|1
block|,
name|VXGE_HAL_ERR_INVALID_HANDLE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|2
block|,
name|VXGE_HAL_ERR_OUT_OF_MEMORY
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|3
block|,
name|VXGE_HAL_ERR_VPATH_NOT_AVAILABLE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|4
block|,
name|VXGE_HAL_ERR_VPATH_NOT_OPEN
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|5
block|,
name|VXGE_HAL_ERR_WRONG_IRQ
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|6
block|,
name|VXGE_HAL_ERR_OUT_OF_MAC_ADDRESSES
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|7
block|,
name|VXGE_HAL_ERR_SWAPPER_CTRL
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|8
block|,
name|VXGE_HAL_ERR_DEVICE_IS_NOT_QUIESCENT
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|9
block|,
name|VXGE_HAL_ERR_INVALID_MTU_SIZE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|10
block|,
name|VXGE_HAL_ERR_OUT_OF_MAPPING
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|11
block|,
name|VXGE_HAL_ERR_BAD_SUBSYSTEM_ID
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|12
block|,
name|VXGE_HAL_ERR_INVALID_BAR_ID
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|13
block|,
name|VXGE_HAL_ERR_INVALID_INDEX
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|14
block|,
name|VXGE_HAL_ERR_INVALID_TYPE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|15
block|,
name|VXGE_HAL_ERR_INVALID_OFFSET
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|16
block|,
name|VXGE_HAL_ERR_INVALID_DEVICE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|17
block|,
name|VXGE_HAL_ERR_OUT_OF_SPACE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|18
block|,
name|VXGE_HAL_ERR_INVALID_VALUE_BIT_SIZE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|19
block|,
name|VXGE_HAL_ERR_VERSION_CONFLICT
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|20
block|,
name|VXGE_HAL_ERR_INVALID_MAC_ADDRESS
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|21
block|,
name|VXGE_HAL_ERR_BAD_DEVICE_ID
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|22
block|,
name|VXGE_HAL_ERR_OUT_ALIGNED_FRAGS
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|23
block|,
name|VXGE_HAL_ERR_DEVICE_NOT_INITIALIZED
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|24
block|,
name|VXGE_HAL_ERR_SPDM_NOT_ENABLED
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|25
block|,
name|VXGE_HAL_ERR_SPDM_TABLE_FULL
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|26
block|,
name|VXGE_HAL_ERR_SPDM_INVALID_ENTRY
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|27
block|,
name|VXGE_HAL_ERR_SPDM_ENTRY_NOT_FOUND
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|28
block|,
name|VXGE_HAL_ERR_SPDM_TABLE_DATA_INCONSISTENT
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|29
block|,
name|VXGE_HAL_ERR_INVALID_PCI_INFO
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|30
block|,
name|VXGE_HAL_ERR_CRITICAL
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|31
block|,
name|VXGE_HAL_ERR_RESET_FAILED
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|32
block|,
name|VXGE_HAL_ERR_TOO_MANY
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|33
block|,
name|VXGE_HAL_ERR_PKT_DROP
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|34
block|,
name|VXGE_HAL_ERR_INVALID_BLOCK_SIZE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|35
block|,
name|VXGE_HAL_ERR_INVALID_STATE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|36
block|,
name|VXGE_HAL_ERR_PRIVILAGED_OPEARATION
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|37
block|,
name|VXGE_HAL_ERR_RESET_IN_PROGRESS
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|38
block|,
name|VXGE_HAL_ERR_MAC_TABLE_FULL
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|39
block|,
name|VXGE_HAL_ERR_MAC_TABLE_EMPTY
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|40
block|,
name|VXGE_HAL_ERR_MAC_TABLE_NO_MORE_ENTRIES
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|41
block|,
name|VXGE_HAL_ERR_RTDMA_RTDMA_READY
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|42
block|,
name|VXGE_HAL_ERR_WRDMA_WRDMA_READY
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|43
block|,
name|VXGE_HAL_ERR_KDFC_KDFC_READY
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|44
block|,
name|VXGE_HAL_ERR_TPA_TMAC_BUF_EMPTY
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|45
block|,
name|VXGE_HAL_ERR_RDCTL_PIC_QUIESCENT
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|46
block|,
name|VXGE_HAL_ERR_XGMAC_NETWORK_FAULT
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|47
block|,
name|VXGE_HAL_ERR_ROCRC_OFFLOAD_QUIESCENT
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|48
block|,
name|VXGE_HAL_ERR_G3IF_FB_G3IF_FB_GDDR3_READY
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|49
block|,
name|VXGE_HAL_ERR_G3IF_CM_G3IF_CM_GDDR3_READY
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|50
block|,
name|VXGE_HAL_ERR_RIC_RIC_RUNNING
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|51
block|,
name|VXGE_HAL_ERR_CMG_C_PLL_IN_LOCK
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|52
block|,
name|VXGE_HAL_ERR_XGMAC_X_PLL_IN_LOCK
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|53
block|,
name|VXGE_HAL_ERR_FBIF_M_PLL_IN_LOCK
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|54
block|,
name|VXGE_HAL_ERR_PCC_PCC_IDLE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|55
block|,
name|VXGE_HAL_ERR_ROCRC_RC_PRC_QUIESCENT
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|56
block|,
name|VXGE_HAL_ERR_SLOT_FREEZE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|57
block|,
name|VXGE_HAL_ERR_INVALID_TCODE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|58
block|,
name|VXGE_HAL_ERR_INVALID_PORT
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|59
block|,
name|VXGE_HAL_ERR_INVALID_WIRE_PORT
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|60
block|,
name|VXGE_HAL_ERR_INVALID_PRIORITY
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|61
block|,
name|VXGE_HAL_ERR_INVALID_MIN_BANDWIDTH
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|62
block|,
name|VXGE_HAL_ERR_INVALID_MAX_BANDWIDTH
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|63
block|,
name|VXGE_HAL_ERR_INVALID_BANDWIDTH_LIMIT
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|64
block|,
name|VXGE_HAL_ERR_INVALID_TOTAL_BANDWIDTH
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|65
block|,
name|VXGE_HAL_ERR_MANAGER_NOT_FOUND
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|66
block|,
name|VXGE_HAL_ERR_TIME_OUT
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|67
block|,
name|VXGE_HAL_ERR_EVENT_UNKNOWN
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|68
block|,
name|VXGE_HAL_ERR_EVENT_SERR
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|69
block|,
name|VXGE_HAL_ERR_EVENT_CRITICAL
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|70
block|,
name|VXGE_HAL_ERR_EVENT_ECCERR
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|71
block|,
name|VXGE_HAL_ERR_EVENT_KDFCCTL
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|72
block|,
name|VXGE_HAL_ERR_EVENT_SRPCIM_CRITICAL
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|73
block|,
name|VXGE_HAL_ERR_EVENT_MRPCIM_CRITICAL
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|74
block|,
name|VXGE_HAL_ERR_EVENT_MRPCIM_ECCERR
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|75
block|,
name|VXGE_HAL_ERR_EVENT_RESET_START
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|76
block|,
name|VXGE_HAL_ERR_EVENT_RESET_COMPLETE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|77
block|,
name|VXGE_HAL_ERR_EVENT_SLOT_FREEZE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|78
block|,
name|VXGE_HAL_ERR_INVALID_DP_MODE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|79
block|,
name|VXGE_HAL_ERR_INVALID_L2_SWITCH_STATE
init|=
name|VXGE_HAL_BASE_ERR
operator|+
literal|79
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_PORT_ID
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|1
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_MAX_MEDIA
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|2
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_MAX_INITIAL_MTU
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|3
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_AUTONEG_MODE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|4
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_AUTONEG_RATE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|5
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_FIXED_USE_FSM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|6
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_ANTP_USE_FSM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|7
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_ANBE_USE_FSM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|8
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_LINK_STABILITY_PERIOD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|9
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_PORT_STABILITY_PERIOD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|10
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_TMAC_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|11
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_RMAC_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|12
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_TMAC_PAD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|13
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_TMAC_PAD_BYTE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|14
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_TMAC_UTIL_PERIOD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|15
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_RMAC_STRIP_FCS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|16
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_RMAC_PROM_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|18
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_RMAC_DISCARD_PFRM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|19
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_RMAC_UTIL_PERIOD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|20
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_RMAC_PAUSE_GEN_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|21
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_RMAC_PAUSE_RCV_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|22
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_RMAC_HIGH_PTIME
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|23
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_RMAC_PAUSE_LIMITER_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|24
block|,
name|VXGE_HAL_BADCFG_WIRE_PORT_RMAC_MAX_LIMIT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|25
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_MAX_INITIAL_MTU
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|26
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_TMAC_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|27
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|28
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_TMAC_PAD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|29
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_TMAC_PAD_BYTE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|30
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_TMAC_UTIL_PERIOD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|31
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_STRIP_FCS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|32
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_PROM_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|33
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_DISCARD_PFRM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|34
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_UTIL_PERIOD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|35
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_PAUSE_GEN_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|36
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_PAUSE_RCV_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|37
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_HIGH_PTIME
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|38
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_PAUSE_LIMITER_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|39
block|,
name|VXGE_HAL_BADCFG_SWITCH_PORT_RMAC_MAX_LIMIT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|40
block|,
name|VXGE_HAL_BADCFG_MAC_NETWORK_STABILITY_PERIOD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|41
block|,
name|VXGE_HAL_BADCFG_MAC_MC_PAUSE_THRESHOLD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|42
block|,
name|VXGE_HAL_BADCFG_MAC_PERMA_STOP_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|43
block|,
name|VXGE_HAL_BADCFG_MAC_TMAC_TX_SWITCH_DIS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|44
block|,
name|VXGE_HAL_BADCFG_MAC_TMAC_LOSSY_SWITCH_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|45
block|,
name|VXGE_HAL_BADCFG_MAC_TMAC_LOSSY_WIRE_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|46
block|,
name|VXGE_HAL_BADCFG_MAC_TMAC_BCAST_TO_WIRE_DIS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|47
block|,
name|VXGE_HAL_BADCFG_MAC_TMAC_BCAST_TO_SWITCH_DIS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|48
block|,
name|VXGE_HAL_BADCFG_MAC_TMAC_HOST_APPEND_FCS_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|49
block|,
name|VXGE_HAL_BADCFG_MAC_TPA_SUPPORT_SNAP_AB_N
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|50
block|,
name|VXGE_HAL_BADCFG_MAC_TPA_ECC_ENABLE_N
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|51
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_IGNORE_FRAME_ERR
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|52
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_SNAP_AB_N
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|53
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_SEARCH_FOR_HAO
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|54
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_SUPPORT_IPV6_MOBILE_HDRS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|55
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_IPV6_STOP_SEARCHING
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|56
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_NO_PS_IF_UNKNOWN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|57
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_SEARCH_FOR_ETYPE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|58
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_REPL_L4_COMP_CSUM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|59
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_REPL_L3_INCL_CF
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|60
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_REPL_L3_COMP_CSUM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|61
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_REPL_IPV4_TCP_INCL_PH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|62
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_REPL_IPV6_TCP_INCL_PH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|63
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_REPL_IPV4_UDP_INCL_PH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|64
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_REPL_IPV6_UDP_INCL_PH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|65
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_REPL_L4_INCL_CF
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|66
block|,
name|VXGE_HAL_BADCFG_MAC_RPA_REPL_STRIP_VLAN_TAG
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|67
block|,
name|VXGE_HAL_BADCFG_LAG_LAG_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|101
block|,
name|VXGE_HAL_BADCFG_LAG_LAG_MODE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|102
block|,
name|VXGE_HAL_BADCFG_LAG_TX_DISCARD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|103
block|,
name|VXGE_HAL_BADCFG_LAG_TX_AGGR_STATS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|104
block|,
name|VXGE_HAL_BADCFG_LAG_DISTRIB_ALG_SEL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|105
block|,
name|VXGE_HAL_BADCFG_LAG_DISTRIB_REMAP_IF_FAIL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|106
block|,
name|VXGE_HAL_BADCFG_LAG_COLL_MAX_DELAY
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|107
block|,
name|VXGE_HAL_BADCFG_LAG_RX_DISCARD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|108
block|,
name|VXGE_HAL_BADCFG_LAG_PREF_INDIV_PORT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|109
block|,
name|VXGE_HAL_BADCFG_LAG_HOT_STANDBY
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|110
block|,
name|VXGE_HAL_BADCFG_LAG_LACP_DECIDES
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|111
block|,
name|VXGE_HAL_BADCFG_LAG_PREF_ACTIVE_PORT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|112
block|,
name|VXGE_HAL_BADCFG_LAG_AUTO_FAILBACK
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|113
block|,
name|VXGE_HAL_BADCFG_LAG_FAILBACK_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|114
block|,
name|VXGE_HAL_BADCFG_LAG_COLD_FAILOVER_TIMEOUT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|115
block|,
name|VXGE_HAL_BADCFG_LAG_LACP_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|116
block|,
name|VXGE_HAL_BADCFG_LAG_LACP_BEGIN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|117
block|,
name|VXGE_HAL_BADCFG_LAG_DISCARD_LACP
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|118
block|,
name|VXGE_HAL_BADCFG_LAG_LIBERAL_LEN_CHK
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|119
block|,
name|VXGE_HAL_BADCFG_LAG_MARKER_GEN_RECV_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|120
block|,
name|VXGE_HAL_BADCFG_LAG_MARKER_RESP_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|121
block|,
name|VXGE_HAL_BADCFG_LAG_MARKER_RESP_TIMEOUT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|122
block|,
name|VXGE_HAL_BADCFG_LAG_SLOW_PROTO_MRKR_MIN_INTERVAL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|123
block|,
name|VXGE_HAL_BADCFG_LAG_THROTTLE_MRKR_RESP
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|124
block|,
name|VXGE_HAL_BADCFG_LAG_SYS_PRI
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|125
block|,
name|VXGE_HAL_BADCFG_LAG_USE_PORT_MAC_ADDR
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|126
block|,
name|VXGE_HAL_BADCFG_LAG_MAC_ADDR_SEL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|127
block|,
name|VXGE_HAL_BADCFG_LAG_ALT_ADMIN_KEY
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|128
block|,
name|VXGE_HAL_BADCFG_LAG_ALT_AGGR
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|129
block|,
name|VXGE_HAL_BADCFG_LAG_FAST_PER_TIME
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|130
block|,
name|VXGE_HAL_BADCFG_LAG_SLOW_PER_TIME
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|131
block|,
name|VXGE_HAL_BADCFG_LAG_SHORT_TIMEOUT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|132
block|,
name|VXGE_HAL_BADCFG_LAG_LONG_TIMEOUT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|133
block|,
name|VXGE_HAL_BADCFG_LAG_CHURN_DET_TIME
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|134
block|,
name|VXGE_HAL_BADCFG_LAG_AGGR_WAIT_TIME
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|135
block|,
name|VXGE_HAL_BADCFG_LAG_SHORT_TIMER_SCALE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|136
block|,
name|VXGE_HAL_BADCFG_LAG_LONG_TIMER_SCALE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|137
block|,
name|VXGE_HAL_BADCFG_LAG_AGGR_AGGR_ID
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|138
block|,
name|VXGE_HAL_BADCFG_LAG_AGGR_USE_PORT_MAC_ADDR
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|139
block|,
name|VXGE_HAL_BADCFG_LAG_AGGR_MAC_ADDR_SEL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|140
block|,
name|VXGE_HAL_BADCFG_LAG_AGGR_ADMIN_KEY
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|141
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PORT_ID
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|142
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_LAG_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|143
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_DISCARD_SLOW_PROTO
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|144
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_HOST_CHOSEN_AGGR
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|145
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_DISCARD_UNKNOWN_SLOW_PROTO
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|146
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_ACTOR_PORT_NUM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|147
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_ACTOR_PORT_PRIORITY
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|148
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_ACTOR_KEY_10G
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|149
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_ACTOR_KEY_1G
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|150
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_ACTOR_LACP_ACTIVITY
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|151
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_ACTOR_LACP_TIMEOUT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|152
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_ACTOR_AGGREGATION
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|153
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_ACTOR_SYNCHRONIZATION
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|154
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_ACTOR_COLLECTING
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|155
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_ACTOR_DISTRIBUTING
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|156
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_ACTOR_DEFAULTED
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|157
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_ACTOR_EXPIRED
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|158
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PARTNER_SYS_PRI
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|159
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PARTNER_KEY
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|160
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PARTNER_NUM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|161
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PARTNER_PORT_PRIORITY
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|162
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PARTNER_LACP_ACTIVITY
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|163
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PARTNER_LACP_TIMEOUT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|164
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PARTNER_AGGREGATION
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|165
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PARTNER_SYNCHRONIZATION
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|166
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PARTNER_COLLECTING
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|167
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PARTNER_DISTRIBUTING
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|168
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PARTNER_DEFAULTED
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|169
block|,
name|VXGE_HAL_BADCFG_LAG_PORT_PARTNER_EXPIRED
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|170
block|,
name|VXGE_HAL_BADCFG_VPATH_QOS_PRIORITY
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|171
block|,
name|VXGE_HAL_BADCFG_VPATH_QOS_MIN_BANDWIDTH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|172
block|,
name|VXGE_HAL_BADCFG_VPATH_QOS_MAX_BANDWIDTH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|173
block|,
name|VXGE_HAL_BADCFG_LOG_LEVEL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|202
block|,
name|VXGE_HAL_BADCFG_RING_ENABLE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|203
block|,
name|VXGE_HAL_BADCFG_RING_LENGTH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|204
block|,
name|VXGE_HAL_BADCFG_RING_RXD_BUFFER_MODE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|205
block|,
name|VXGE_HAL_BADCFG_RING_SCATTER_MODE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|206
block|,
name|VXGE_HAL_BADCFG_RING_POST_MODE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|207
block|,
name|VXGE_HAL_BADCFG_RING_MAX_FRM_LEN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|208
block|,
name|VXGE_HAL_BADCFG_RING_NO_SNOOP_ALL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|209
block|,
name|VXGE_HAL_BADCFG_RING_TIMER_VAL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|210
block|,
name|VXGE_HAL_BADCFG_RING_GREEDY_RETURN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|211
block|,
name|VXGE_HAL_BADCFG_RING_TIMER_CI
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|212
block|,
name|VXGE_HAL_BADCFG_RING_BACKOFF_INTERVAL_US
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|213
block|,
name|VXGE_HAL_BADCFG_RING_INDICATE_MAX_PKTS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|214
block|,
name|VXGE_HAL_BADCFG_FIFO_ENABLE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|215
block|,
name|VXGE_HAL_BADCFG_FIFO_LENGTH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|216
block|,
name|VXGE_HAL_BADCFG_FIFO_FRAGS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|217
block|,
name|VXGE_HAL_BADCFG_FIFO_ALIGNMENT_SIZE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|218
block|,
name|VXGE_HAL_BADCFG_FIFO_MAX_FRAGS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|219
block|,
name|VXGE_HAL_BADCFG_FIFO_QUEUE_INTR
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|220
block|,
name|VXGE_HAL_BADCFG_FIFO_NO_SNOOP_ALL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|221
block|,
name|VXGE_HAL_BADCFG_DMQ_LENGTH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|222
block|,
name|VXGE_HAL_BADCFG_DMQ_IMMED_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|223
block|,
name|VXGE_HAL_BADCFG_DMQ_EVENT_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|224
block|,
name|VXGE_HAL_BADCFG_DMQ_INTR_CTRL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|225
block|,
name|VXGE_HAL_BADCFG_DMQ_GEN_COMPL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|226
block|,
name|VXGE_HAL_BADCFG_UMQ_LENGTH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|227
block|,
name|VXGE_HAL_BADCFG_UMQ_IMMED_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|228
block|,
name|VXGE_HAL_BADCFG_UMQ_EVENT_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|229
block|,
name|VXGE_HAL_BADCFG_UMQ_INTR_CTRL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|230
block|,
name|VXGE_HAL_BADCFG_UMQ_GEN_COMPL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|231
block|,
name|VXGE_HAL_BADCFG_SW_LRO_SESSIONS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|232
block|,
name|VXGE_HAL_BADCFG_SW_LRO_SG_SIZE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|333
block|,
name|VXGE_HAL_BADCFG_SW_LRO_FRM_LEN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|334
block|,
name|VXGE_HAL_BADCFG_SW_LRO_MODE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|235
block|,
name|VXGE_HAL_BADCFG_LRO_SESSIONS_MAX
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|236
block|,
name|VXGE_HAL_BADCFG_LRO_SESSIONS_THRESHOLD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|237
block|,
name|VXGE_HAL_BADCFG_LRO_SESSIONS_TIMEOUT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|238
block|,
name|VXGE_HAL_BADCFG_LRO_NO_WQE_THRESHOLD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|239
block|,
name|VXGE_HAL_BADCFG_LRO_DUPACK_DETECTION
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|242
block|,
name|VXGE_HAL_BADCFG_LRO_DATA_MERGING
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|243
block|,
name|VXGE_HAL_BADCFG_LRO_ACK_MERGING
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|244
block|,
name|VXGE_HAL_BADCFG_LRO_LLC_HDR_MODE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|245
block|,
name|VXGE_HAL_BADCFG_LRO_SNAP_HDR_MODE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|246
block|,
name|VXGE_HAL_BADCFG_LRO_SESSION_ECN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|247
block|,
name|VXGE_HAL_BADCFG_LRO_SESSION_ECN_NONCE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|248
block|,
name|VXGE_HAL_BADCFG_LRO_RXD_BUFFER_MODE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|249
block|,
name|VXGE_HAL_BADCFG_LRO_SCATTER_MODE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|250
block|,
name|VXGE_HAL_BADCFG_LRO_IP_DATAGRAM_SIZE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|251
block|,
name|VXGE_HAL_BADCFG_LRO_FRAME_THRESHOLD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|252
block|,
name|VXGE_HAL_BADCFG_LRO_PSH_THRESHOLD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|253
block|,
name|VXGE_HAL_BADCFG_LRO_MTU_THRESHOLD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|254
block|,
name|VXGE_HAL_BADCFG_LRO_MSS_THRESHOLD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|255
block|,
name|VXGE_HAL_BADCFG_LRO_TCP_TSVAL_DELTA
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|256
block|,
name|VXGE_HAL_BADCFG_LRO_ACK_NBR_DELTA
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|257
block|,
name|VXGE_HAL_BADCFG_LRO_SPARE_WQE_CAPACITY
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|258
block|,
name|VXGE_HAL_BADCFG_TIM_INTR_ENABLE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|259
block|,
name|VXGE_HAL_BADCFG_TIM_BTIMER_VAL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|261
block|,
name|VXGE_HAL_BADCFG_TIM_TIMER_AC_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|262
block|,
name|VXGE_HAL_BADCFG_TIM_TIMER_CI_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|263
block|,
name|VXGE_HAL_BADCFG_TIM_TIMER_RI_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|264
block|,
name|VXGE_HAL_BADCFG_TIM_BTIMER_EVENT_SF
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|265
block|,
name|VXGE_HAL_BADCFG_TIM_RTIMER_VAL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|266
block|,
name|VXGE_HAL_BADCFG_TIM_UTIL_SEL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|267
block|,
name|VXGE_HAL_BADCFG_TIM_LTIMER_VAL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|268
block|,
name|VXGE_HAL_BADCFG_TXFRM_CNT_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|269
block|,
name|VXGE_HAL_BADCFG_TXD_CNT_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|270
block|,
name|VXGE_HAL_BADCFG_TIM_URANGE_A
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|271
block|,
name|VXGE_HAL_BADCFG_TIM_UEC_A
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|272
block|,
name|VXGE_HAL_BADCFG_TIM_URANGE_B
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|273
block|,
name|VXGE_HAL_BADCFG_TIM_UEC_B
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|274
block|,
name|VXGE_HAL_BADCFG_TIM_URANGE_C
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|275
block|,
name|VXGE_HAL_BADCFG_TIM_UEC_C
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|276
block|,
name|VXGE_HAL_BADCFG_TIM_UEC_D
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|277
block|,
name|VXGE_HAL_BADCFG_VPATH_ID
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|278
block|,
name|VXGE_HAL_BADCFG_VPATH_WIRE_PORT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|279
block|,
name|VXGE_HAL_BADCFG_VPATH_NO_SNOOP
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|281
block|,
name|VXGE_HAL_BADCFG_VPATH_MTU
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|282
block|,
name|VXGE_HAL_BADCFG_VPATH_TPA_LSOV2_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|283
block|,
name|VXGE_HAL_BADCFG_VPATH_TPA_IGNORE_FRAME_ERROR
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|284
block|,
name|VXGE_HAL_BADCFG_VPATH_TPA_IPV6_KEEP_SEARCHING
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|285
block|,
name|VXGE_HAL_BADCFG_VPATH_TPA_L4_PSHDR_PRESENT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|286
block|,
name|VXGE_HAL_BADCFG_VPATH_TPA_SUPPORT_MOBILE_IPV6_HDRS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|287
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_IPV4_TCP_INCL_PH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|288
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_IPV6_TCP_INCL_PH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|289
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_IPV4_UDP_INCL_PH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|290
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_IPV6_UDP_INCL_PH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|291
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_L4_INCL_CF
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|292
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_STRIP_VLAN_TAG
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|293
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_L4_COMP_CSUM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|294
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_L3_INCL_CF
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|295
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_L3_COMP_CSUM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|296
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_UCAST_ALL_ADDR_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|297
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_MCAST_ALL_ADDR_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|298
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_CAST_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|299
block|,
name|VXGE_HAL_BADCFG_VPATH_RPA_ALL_VID_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|300
block|,
name|VXGE_HAL_BADCFG_VPATH_VP_Q_L2_FLOW
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|301
block|,
name|VXGE_HAL_BADCFG_VPATH_VP_STATS_READ_METHOD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|302
block|,
name|VXGE_HAL_BADCFG_VPATH_BANDWIDTH_LIMIT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|305
block|,
name|VXGE_HAL_BADCFG_BLOCKPOOL_MIN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|306
block|,
name|VXGE_HAL_BADCFG_BLOCKPOOL_INITIAL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|307
block|,
name|VXGE_HAL_BADCFG_BLOCKPOOL_INCR
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|308
block|,
name|VXGE_HAL_BADCFG_BLOCKPOOL_MAX
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|309
block|,
name|VXGE_HAL_BADCFG_ISR_POLLING_CNT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|310
block|,
name|VXGE_HAL_BADCFG_MAX_PAYLOAD_SIZE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|312
block|,
name|VXGE_HAL_BADCFG_MMRB_COUNT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|313
block|,
name|VXGE_HAL_BADCFG_STATS_REFRESH_TIME
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|314
block|,
name|VXGE_HAL_BADCFG_DUMP_ON_UNKNOWN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|315
block|,
name|VXGE_HAL_BADCFG_DUMP_ON_SERR
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|316
block|,
name|VXGE_HAL_BADCFG_DUMP_ON_CRITICAL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|317
block|,
name|VXGE_HAL_BADCFG_DUMP_ON_ECCERR
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|318
block|,
name|VXGE_HAL_BADCFG_INTR_MODE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|319
block|,
name|VXGE_HAL_BADCFG_RTH_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|320
block|,
name|VXGE_HAL_BADCFG_RTH_IT_TYPE
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|321
block|,
name|VXGE_HAL_BADCFG_UFCA_INTR_THRES
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|323
block|,
name|VXGE_HAL_BADCFG_UFCA_LO_LIM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|324
block|,
name|VXGE_HAL_BADCFG_UFCA_HI_LIM
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|325
block|,
name|VXGE_HAL_BADCFG_UFCA_LBOLT_PERIOD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|326
block|,
name|VXGE_HAL_BADCFG_DEVICE_POLL_MILLIS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|327
block|,
name|VXGE_HAL_BADCFG_RTS_MAC_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|330
block|,
name|VXGE_HAL_BADCFG_RTS_QOS_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|331
block|,
name|VXGE_HAL_BADCFG_RTS_PORT_EN
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|332
block|,
name|VXGE_HAL_BADCFG_MAX_CQE_GROUPS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|333
block|,
name|VXGE_HAL_BADCFG_MAX_NUM_OD_GROUPS
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|334
block|,
name|VXGE_HAL_BADCFG_NO_WQE_THRESHOLD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|335
block|,
name|VXGE_HAL_BADCFG_REFILL_THRESHOLD_HIGH
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|336
block|,
name|VXGE_HAL_BADCFG_REFILL_THRESHOLD_LOW
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|337
block|,
name|VXGE_HAL_BADCFG_ACK_BLOCK_LIMIT
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|338
block|,
name|VXGE_HAL_BADCFG_STATS_READ_METHOD
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|339
block|,
name|VXGE_HAL_BADCFG_POLL_OR_DOOR_BELL
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|340
block|,
name|VXGE_HAL_BADCFG_MSIX_ID
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|341
block|,
name|VXGE_HAL_BADCFG_VPATH_PRIORITY
init|=
name|VXGE_HAL_BASE_BADCFG
operator|+
literal|342
block|,
name|VXGE_HAL_EOF_TRACE_BUF
init|=
operator|-
literal|1
block|}
name|vxge_hal_status_e
typedef|;
end_typedef

begin_comment
comment|/*  * enum vxge_hal_result_e - HAL Up Message result codes.  * @VXGE_HAL_RESULT_OK: Success  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|vxge_hal_result_e
block|{
name|VXGE_HAL_RESULT_OK
init|=
literal|0
block|}
name|vxge_hal_result_e
typedef|;
end_typedef

begin_macro
name|__EXTERN_END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* VXGE_HAL_STATUS_H */
end_comment

end_unit

