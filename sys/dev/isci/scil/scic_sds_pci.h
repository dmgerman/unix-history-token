begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * This file is provided under a dual BSD/GPLv2 license.  When using or  * redistributing this file, you may do so under either license.  *  * GPL LICENSE SUMMARY  *  * Copyright(c) 2008 - 2011 Intel Corporation. All rights reserved.  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of version 2 of the GNU General Public License as  * published by the Free Software Foundation.  *  * This program is distributed in the hope that it will be useful, but  * WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  * General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.  * The full GNU General Public License is included in this distribution  * in the file called LICENSE.GPL.  *  * BSD LICENSE  *  * Copyright(c) 2008 - 2011 Intel Corporation. All rights reserved.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  *   * Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *   * Redistributions in binary form must reproduce the above copyright  *     notice, this list of conditions and the following disclaimer in  *     the documentation and/or other materials provided with the  *     distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SCIC_SDS_PCI_H_
end_ifndef

begin_define
define|#
directive|define
name|_SCIC_SDS_PCI_H_
end_define

begin_comment
comment|/**  * @file  *  * @brief This file contains the prototypes/macros utilized in writing  *        out PCI data for the SCI core.  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|// __cplusplus
include|#
directive|include
file|<dev/isci/scil/sci_types.h>
define|#
directive|define
name|PATSBURG_SMU_BAR
value|0
define|#
directive|define
name|PATSBURG_SCU_BAR
value|1
define|#
directive|define
name|PATSBURG_IO_SPACE_BAR0
value|2
define|#
directive|define
name|PATSBURG_IO_SPACE_BAR1
value|3
define|#
directive|define
name|SCIC_SDS_PCI_REVISION_A0
value|0
define|#
directive|define
name|SCIC_SDS_PCI_REVISION_A2
value|2
define|#
directive|define
name|SCIC_SDS_PCI_REVISION_B0
value|4
define|#
directive|define
name|SCIC_SDS_PCI_REVISION_C0
value|5
define|#
directive|define
name|SCIC_SDS_PCI_REVISION_C1
value|6
enum|enum
name|SCU_CONTROLLER_PCI_REVISION_CODE
block|{
name|SCU_PBG_HBA_REV_A0
init|=
name|SCIC_SDS_PCI_REVISION_A0
block|,
name|SCU_PBG_HBA_REV_A2
init|=
name|SCIC_SDS_PCI_REVISION_A2
block|,
name|SCU_PBG_HBA_REV_B0
init|=
name|SCIC_SDS_PCI_REVISION_B0
block|,
name|SCU_PBG_HBA_REV_C0
init|=
name|SCIC_SDS_PCI_REVISION_C0
block|,
name|SCU_PBG_HBA_REV_C1
init|=
name|SCIC_SDS_PCI_REVISION_C1
block|}
enum|;
struct_decl|struct
name|SCIC_SDS_CONTROLLER
struct_decl|;
name|void
name|scic_sds_pci_bar_initialization
parameter_list|(
name|struct
name|SCIC_SDS_CONTROLLER
modifier|*
name|this_controller
parameter_list|)
function_decl|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|ENABLE_PCI_IO_SPACE_ACCESS
argument_list|)
operator|||
name|defined
argument_list|(
name|ARLINGTON_BUILD
argument_list|)
define|#
directive|define
name|scic_sds_pci_read_smu_dword
value|scic_cb_pci_read_dword
define|#
directive|define
name|scic_sds_pci_write_smu_dword
value|scic_cb_pci_write_dword
define|#
directive|define
name|scic_sds_pci_read_scu_dword
value|scic_cb_pci_read_dword
define|#
directive|define
name|scic_sds_pci_write_scu_dword
value|scic_cb_pci_write_dword
else|#
directive|else
comment|// !defined(ENABLE_PCI_IO_SPACE_ACCESS)
comment|// These two registers form the Data/Index pair equivalent in the
comment|// SCU. They are only used for access registers in BAR 1, not BAR 0.
define|#
directive|define
name|SCU_MMR_ADDRESS_WINDOW_OFFSET
value|0xA0
define|#
directive|define
name|SCU_MMR_DATA_WINDOW_OFFSET
value|0xA4
name|U32
name|scic_sds_pci_read_smu_dword
parameter_list|(
name|SCI_CONTROLLER_HANDLE_T
name|controller
parameter_list|,
name|void
modifier|*
name|address
parameter_list|)
function_decl|;
name|void
name|scic_sds_pci_write_smu_dword
parameter_list|(
name|SCI_CONTROLLER_HANDLE_T
name|controller
parameter_list|,
name|void
modifier|*
name|address
parameter_list|,
name|U32
name|write_value
parameter_list|)
function_decl|;
name|U32
name|scic_sds_pci_read_scu_dword
parameter_list|(
name|SCI_CONTROLLER_HANDLE_T
name|controller
parameter_list|,
name|void
modifier|*
name|address
parameter_list|)
function_decl|;
name|void
name|scic_sds_pci_write_scu_dword
parameter_list|(
name|SCI_CONTROLLER_HANDLE_T
name|controller
parameter_list|,
name|void
modifier|*
name|address
parameter_list|,
name|U32
name|write_value
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|// !defined(ENABLE_PCI_IO_SPACE_ACCESS)
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// __cplusplus
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// _SCIC_SDS_PCI_H_
end_comment

end_unit

