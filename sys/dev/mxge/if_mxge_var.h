begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*******************************************************************************  Copyright (c) 2006, Myricom Inc. All rights reserved.  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:   1. Redistributions of source code must retain the above copyright notice,     this list of conditions and the following disclaimer.   2. Redistributions in binary form must reproduce the above copyright     notice, this list of conditions and the following disclaimer in the     documentation and/or other materials provided with the distribution.   3. Neither the name of the Myricom Inc, nor the names of its     contributors may be used to endorse or promote products derived from     this software without specific prior written permission.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  $FreeBSD$  ***************************************************************************/
end_comment

begin_define
define|#
directive|define
name|MXGE_MAX_ETHER_MTU
value|9014
end_define

begin_define
define|#
directive|define
name|MXGE_ETH_STOPPED
value|0
end_define

begin_define
define|#
directive|define
name|MXGE_ETH_STOPPING
value|1
end_define

begin_define
define|#
directive|define
name|MXGE_ETH_STARTING
value|2
end_define

begin_define
define|#
directive|define
name|MXGE_ETH_RUNNING
value|3
end_define

begin_define
define|#
directive|define
name|MXGE_ETH_OPEN_FAILED
value|4
end_define

begin_define
define|#
directive|define
name|MXGE_FW_OFFSET
value|1024*1024
end_define

begin_define
define|#
directive|define
name|MXGE_EEPROM_STRINGS_SIZE
value|256
end_define

begin_define
define|#
directive|define
name|MXGE_MAX_SEND_DESC
value|12
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|void
modifier|*
name|addr
decl_stmt|;
name|bus_addr_t
name|bus_addr
decl_stmt|;
name|bus_dma_tag_t
name|dmat
decl_stmt|;
name|bus_dmamap_t
name|map
decl_stmt|;
block|}
name|mxge_dma_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|mcp_slot_t
modifier|*
name|entry
decl_stmt|;
name|mxge_dma_t
name|dma
decl_stmt|;
name|int
name|cnt
decl_stmt|;
name|int
name|idx
decl_stmt|;
block|}
name|mxge_rx_done_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|uint32_t
name|data0
decl_stmt|;
name|uint32_t
name|data1
decl_stmt|;
name|uint32_t
name|data2
decl_stmt|;
block|}
name|mxge_cmd_t
typedef|;
end_typedef

begin_struct
struct|struct
name|mxge_rx_buffer_state
block|{
name|struct
name|mbuf
modifier|*
name|m
decl_stmt|;
name|bus_dmamap_t
name|map
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mxge_tx_buffer_state
block|{
name|struct
name|mbuf
modifier|*
name|m
decl_stmt|;
name|bus_dmamap_t
name|map
decl_stmt|;
name|int
name|flag
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
struct|struct
block|{
specifier|volatile
name|mcp_kreq_ether_recv_t
modifier|*
name|lanai
decl_stmt|;
comment|/* lanai ptr for recv ring */
specifier|volatile
name|uint8_t
modifier|*
name|wc_fifo
decl_stmt|;
comment|/* w/c rx dma addr fifo address */
name|mcp_kreq_ether_recv_t
modifier|*
name|shadow
decl_stmt|;
comment|/* host shadow of recv ring */
name|struct
name|mxge_rx_buffer_state
modifier|*
name|info
decl_stmt|;
name|bus_dma_tag_t
name|dmat
decl_stmt|;
name|bus_dmamap_t
name|extra_map
decl_stmt|;
name|int
name|cnt
decl_stmt|;
name|int
name|alloc_fail
decl_stmt|;
name|int
name|mask
decl_stmt|;
comment|/* number of rx slots -1 */
block|}
name|mxge_rx_buf_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
specifier|volatile
name|mcp_kreq_ether_send_t
modifier|*
name|lanai
decl_stmt|;
comment|/* lanai ptr for sendq	*/
specifier|volatile
name|uint8_t
modifier|*
name|wc_fifo
decl_stmt|;
comment|/* w/c send fifo address */
name|mcp_kreq_ether_send_t
modifier|*
name|req_list
decl_stmt|;
comment|/* host shadow of sendq */
name|char
modifier|*
name|req_bytes
decl_stmt|;
name|struct
name|mxge_tx_buffer_state
modifier|*
name|info
decl_stmt|;
name|bus_dma_tag_t
name|dmat
decl_stmt|;
name|int
name|req
decl_stmt|;
comment|/* transmits submitted	*/
name|int
name|mask
decl_stmt|;
comment|/* number of transmit slots -1 */
name|int
name|done
decl_stmt|;
comment|/* transmits completed	*/
name|int
name|pkt_done
decl_stmt|;
comment|/* packets completed */
name|int
name|boundary
decl_stmt|;
comment|/* boundary transmits cannot cross*/
block|}
name|mxge_tx_buf_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|struct
name|ifnet
modifier|*
name|ifp
decl_stmt|;
name|int
name|big_bytes
decl_stmt|;
name|struct
name|mtx
name|tx_lock
decl_stmt|;
name|int
name|csum_flag
decl_stmt|;
comment|/* rx_csums? 		*/
name|uint8_t
name|mac_addr
index|[
literal|6
index|]
decl_stmt|;
comment|/* eeprom mac address */
name|mxge_tx_buf_t
name|tx
decl_stmt|;
comment|/* transmit ring 	*/
name|mxge_rx_buf_t
name|rx_small
decl_stmt|;
name|mxge_rx_buf_t
name|rx_big
decl_stmt|;
name|mxge_rx_done_t
name|rx_done
decl_stmt|;
name|mcp_irq_data_t
modifier|*
name|fw_stats
decl_stmt|;
name|bus_dma_tag_t
name|parent_dmat
decl_stmt|;
specifier|volatile
name|uint8_t
modifier|*
name|sram
decl_stmt|;
name|int
name|sram_size
decl_stmt|;
specifier|volatile
name|uint32_t
modifier|*
name|irq_deassert
decl_stmt|;
specifier|volatile
name|uint32_t
modifier|*
name|irq_claim
decl_stmt|;
name|mcp_cmd_response_t
modifier|*
name|cmd
decl_stmt|;
name|mxge_dma_t
name|cmd_dma
decl_stmt|;
name|mxge_dma_t
name|zeropad_dma
decl_stmt|;
name|mxge_dma_t
name|fw_stats_dma
decl_stmt|;
name|struct
name|pci_dev
modifier|*
name|pdev
decl_stmt|;
name|int
name|msi_enabled
decl_stmt|;
name|int
name|link_state
decl_stmt|;
name|unsigned
name|int
name|rdma_tags_available
decl_stmt|;
name|int
name|intr_coal_delay
decl_stmt|;
specifier|volatile
name|uint32_t
modifier|*
name|intr_coal_delay_ptr
decl_stmt|;
name|int
name|wc
decl_stmt|;
name|struct
name|mtx
name|cmd_lock
decl_stmt|;
name|struct
name|sx
name|driver_lock
decl_stmt|;
name|int
name|wake_queue
decl_stmt|;
name|int
name|stop_queue
decl_stmt|;
name|int
name|down_cnt
decl_stmt|;
name|int
name|watchdog_resets
decl_stmt|;
name|int
name|tx_defragged
decl_stmt|;
name|int
name|pause
decl_stmt|;
name|struct
name|resource
modifier|*
name|mem_res
decl_stmt|;
name|struct
name|resource
modifier|*
name|irq_res
decl_stmt|;
name|void
modifier|*
name|ih
decl_stmt|;
name|char
modifier|*
name|fw_name
decl_stmt|;
name|char
name|eeprom_strings
index|[
name|MXGE_EEPROM_STRINGS_SIZE
index|]
decl_stmt|;
name|char
name|fw_version
index|[
literal|128
index|]
decl_stmt|;
name|device_t
name|dev
decl_stmt|;
name|struct
name|ifmedia
name|media
decl_stmt|;
name|int
name|read_dma
decl_stmt|;
name|int
name|write_dma
decl_stmt|;
name|int
name|read_write_dma
decl_stmt|;
name|char
modifier|*
name|mac_addr_string
decl_stmt|;
name|char
name|product_code_string
index|[
literal|64
index|]
decl_stmt|;
name|char
name|serial_number_string
index|[
literal|64
index|]
decl_stmt|;
block|}
name|mxge_softc_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|MXGE_PCI_VENDOR_MYRICOM
value|0x14c1
end_define

begin_define
define|#
directive|define
name|MXGE_PCI_DEVICE_Z8E
value|0x0008
end_define

begin_define
define|#
directive|define
name|MXGE_HIGHPART_TO_U32
parameter_list|(
name|X
parameter_list|)
define|\
value|(sizeof (X) == 8) ? ((uint32_t)((uint64_t)(X)>> 32)) : (0)
end_define

begin_define
define|#
directive|define
name|MXGE_LOWPART_TO_U32
parameter_list|(
name|X
parameter_list|)
value|((uint32_t)(X))
end_define

begin_comment
comment|/* implement our own memory barriers, since bus_space_barrier    cannot handle write-combining regions */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__GNUC__
argument_list|)
end_if

begin_if
if|#
directive|if
operator|#
name|cpu
argument_list|(
name|i386
argument_list|)
operator|||
name|defined
name|__i386
operator|||
name|defined
name|i386
operator|||
name|defined
name|__i386__
operator|||
operator|#
name|cpu
argument_list|(
name|x86_64
argument_list|)
operator|||
name|defined
name|__x86_64__
end_if

begin_define
define|#
directive|define
name|mb
parameter_list|()
value|__asm__ __volatile__ ("sfence;": : :"memory")
end_define

begin_elif
elif|#
directive|elif
operator|#
name|cpu
argument_list|(
name|sparc64
argument_list|)
operator|||
name|defined
name|sparc64
operator|||
name|defined
name|__sparcv9
end_elif

begin_define
define|#
directive|define
name|mb
parameter_list|()
value|__asm__ __volatile__ ("membar #MemIssue": : :"memory")
end_define

begin_elif
elif|#
directive|elif
operator|#
name|cpu
argument_list|(
name|sparc
argument_list|)
operator|||
name|defined
name|sparc
operator|||
name|defined
name|__sparc__
end_elif

begin_define
define|#
directive|define
name|mb
parameter_list|()
value|__asm__ __volatile__ ("stbar;": : :"memory")
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|mb
parameter_list|()
end_define

begin_comment
comment|/* XXX just to make this compile */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_else
else|#
directive|else
end_else

begin_error
error|#
directive|error
literal|"unknown compiler"
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_function
specifier|static
specifier|inline
name|void
name|mxge_pio_copy
parameter_list|(
specifier|volatile
name|void
modifier|*
name|to_v
parameter_list|,
name|void
modifier|*
name|from_v
parameter_list|,
name|size_t
name|size
parameter_list|)
block|{
specifier|register
specifier|volatile
name|uintptr_t
modifier|*
name|to
decl_stmt|;
specifier|volatile
name|uintptr_t
modifier|*
name|from
decl_stmt|;
name|size_t
name|i
decl_stmt|;
name|to
operator|=
operator|(
specifier|volatile
name|uintptr_t
operator|*
operator|)
name|to_v
expr_stmt|;
name|from
operator|=
name|from_v
expr_stmt|;
for|for
control|(
name|i
operator|=
operator|(
name|size
operator|/
sizeof|sizeof
argument_list|(
name|uintptr_t
argument_list|)
operator|)
init|;
name|i
condition|;
name|i
operator|--
control|)
block|{
operator|*
name|to
operator|=
operator|*
name|from
expr_stmt|;
name|to
operator|++
expr_stmt|;
name|from
operator|++
expr_stmt|;
block|}
block|}
end_function

begin_comment
comment|/*   This file uses Myri10GE driver indentation.    Local Variables:   c-file-style:"linux"   tab-width:8   End: */
end_comment

end_unit

