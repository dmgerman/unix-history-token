begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/*-  * Copyright (c) 2008 Hans Petter Selasky. All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_USB2_TRANSFER_H_
end_ifndef

begin_define
define|#
directive|define
name|_USB2_TRANSFER_H_
end_define

begin_comment
comment|/*  * The following structure defines the messages that is used to signal  * the "done_p" USB process.  */
end_comment

begin_struct
struct|struct
name|usb2_done_msg
block|{
name|struct
name|usb2_proc_msg
name|hdr
decl_stmt|;
name|struct
name|usb2_xfer_root
modifier|*
name|xroot
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * The following structure is used to keep information about memory  * that should be automatically freed at the moment all USB transfers  * have been freed.  */
end_comment

begin_struct
struct|struct
name|usb2_xfer_root
block|{
name|struct
name|usb2_xfer_queue
name|dma_q
decl_stmt|;
name|struct
name|usb2_xfer_queue
name|done_q
decl_stmt|;
name|struct
name|usb2_done_msg
name|done_m
index|[
literal|2
index|]
decl_stmt|;
name|struct
name|cv
name|cv_drain
decl_stmt|;
name|struct
name|usb2_dma_parent_tag
name|dma_parent_tag
decl_stmt|;
name|struct
name|usb2_process
modifier|*
name|done_p
decl_stmt|;
comment|/* pointer to callback process */
name|void
modifier|*
name|memory_base
decl_stmt|;
name|struct
name|mtx
modifier|*
name|xfer_mtx
decl_stmt|;
comment|/* cannot be changed during operation */
name|struct
name|usb2_page_cache
modifier|*
name|dma_page_cache_start
decl_stmt|;
name|struct
name|usb2_page_cache
modifier|*
name|dma_page_cache_end
decl_stmt|;
name|struct
name|usb2_page_cache
modifier|*
name|xfer_page_cache_start
decl_stmt|;
name|struct
name|usb2_page_cache
modifier|*
name|xfer_page_cache_end
decl_stmt|;
name|struct
name|usb2_bus
modifier|*
name|bus
decl_stmt|;
comment|/* pointer to USB bus (cached) */
name|struct
name|usb2_device
modifier|*
name|udev
decl_stmt|;
comment|/* pointer to USB device */
name|uint32_t
name|memory_size
decl_stmt|;
name|uint32_t
name|setup_refcount
decl_stmt|;
name|uint32_t
name|page_size
decl_stmt|;
name|uint32_t
name|dma_nframes
decl_stmt|;
comment|/* number of page caches to load */
name|uint32_t
name|dma_currframe
decl_stmt|;
comment|/* currect page cache number */
name|uint32_t
name|dma_frlength_0
decl_stmt|;
comment|/* length of page cache zero */
name|uint8_t
name|dma_error
decl_stmt|;
comment|/* set if virtual memory could not be 					 * loaded */
name|uint8_t
name|done_sleep
decl_stmt|;
comment|/* set if done thread is sleeping */
block|}
struct|;
end_struct

begin_comment
comment|/*  * The following structure is used when setting up an array of USB  * transfers.  */
end_comment

begin_struct
struct|struct
name|usb2_setup_params
block|{
name|struct
name|usb2_dma_tag
modifier|*
name|dma_tag_p
decl_stmt|;
name|struct
name|usb2_page
modifier|*
name|dma_page_ptr
decl_stmt|;
name|struct
name|usb2_page_cache
modifier|*
name|dma_page_cache_ptr
decl_stmt|;
comment|/* these will be 							 * auto-freed */
name|struct
name|usb2_page_cache
modifier|*
name|xfer_page_cache_ptr
decl_stmt|;
comment|/* these will not be 							 * auto-freed */
name|struct
name|usb2_device
modifier|*
name|udev
decl_stmt|;
name|struct
name|usb2_xfer
modifier|*
name|curr_xfer
decl_stmt|;
specifier|const
name|struct
name|usb2_config
modifier|*
name|curr_setup
decl_stmt|;
specifier|const
name|struct
name|usb2_config_sub
modifier|*
name|curr_setup_sub
decl_stmt|;
specifier|const
name|struct
name|usb2_pipe_methods
modifier|*
name|methods
decl_stmt|;
name|void
modifier|*
name|buf
decl_stmt|;
name|uint32_t
modifier|*
name|xfer_length_ptr
decl_stmt|;
name|uint32_t
name|size
index|[
literal|7
index|]
decl_stmt|;
name|uint32_t
name|bufsize
decl_stmt|;
name|uint32_t
name|bufsize_max
decl_stmt|;
name|uint32_t
name|hc_max_frame_size
decl_stmt|;
name|uint16_t
name|hc_max_packet_size
decl_stmt|;
name|uint8_t
name|hc_max_packet_count
decl_stmt|;
name|uint8_t
name|speed
decl_stmt|;
name|uint8_t
name|dma_tag_max
decl_stmt|;
name|usb2_error_t
name|err
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* function prototypes */
end_comment

begin_function_decl
name|uint8_t
name|usb2_transfer_pending
parameter_list|(
name|struct
name|usb2_xfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint8_t
name|usb2_transfer_setup_sub_malloc
parameter_list|(
name|struct
name|usb2_setup_params
modifier|*
name|parm
parameter_list|,
name|struct
name|usb2_page_cache
modifier|*
modifier|*
name|ppc
parameter_list|,
name|uint32_t
name|size
parameter_list|,
name|uint32_t
name|align
parameter_list|,
name|uint32_t
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_command_wrapper
parameter_list|(
name|struct
name|usb2_xfer_queue
modifier|*
name|pq
parameter_list|,
name|struct
name|usb2_xfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_pipe_enter
parameter_list|(
name|struct
name|usb2_xfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_pipe_start
parameter_list|(
name|struct
name|usb2_xfer_queue
modifier|*
name|pq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_transfer_dequeue
parameter_list|(
name|struct
name|usb2_xfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_transfer_done
parameter_list|(
name|struct
name|usb2_xfer
modifier|*
name|xfer
parameter_list|,
name|usb2_error_t
name|error
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_transfer_enqueue
parameter_list|(
name|struct
name|usb2_xfer_queue
modifier|*
name|pq
parameter_list|,
name|struct
name|usb2_xfer
modifier|*
name|xfer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_transfer_setup_sub
parameter_list|(
name|struct
name|usb2_setup_params
modifier|*
name|parm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_default_transfer_setup
parameter_list|(
name|struct
name|usb2_device
modifier|*
name|udev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_clear_data_toggle
parameter_list|(
name|struct
name|usb2_device
modifier|*
name|udev
parameter_list|,
name|struct
name|usb2_pipe
modifier|*
name|pipe
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_do_poll
parameter_list|(
name|struct
name|usb2_xfer
modifier|*
modifier|*
name|ppxfer
parameter_list|,
name|uint16_t
name|max
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|usb2_callback_t
name|usb2_do_request_callback
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|usb2_callback_t
name|usb2_handle_request_callback
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|usb2_callback_t
name|usb2_do_clear_stall_callback
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|usb2_transfer_timeout_ms
parameter_list|(
name|struct
name|usb2_xfer
modifier|*
name|xfer
parameter_list|,
name|void
function_decl|(
modifier|*
name|cb
function_decl|)
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|)
parameter_list|,
name|uint32_t
name|ms
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|usb2_get_dma_delay
parameter_list|(
name|struct
name|usb2_bus
modifier|*
name|bus
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_transfer_power_ref
parameter_list|(
name|struct
name|usb2_xfer
modifier|*
name|xfer
parameter_list|,
name|int
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _USB2_TRANSFER_H_ */
end_comment

end_unit

