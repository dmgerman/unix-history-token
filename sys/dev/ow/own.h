begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2015 M. Warner Losh<imp@freebsd.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice unmodified, this list of conditions, and the following  *    disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|DEV_OW_OWN_H
end_ifndef

begin_define
define|#
directive|define
name|DEV_OW_OWN_H
value|1
end_define

begin_include
include|#
directive|include
file|"own_if.h"
end_include

begin_define
define|#
directive|define
name|READ_ROM
value|0x33
end_define

begin_define
define|#
directive|define
name|MATCH_ROM
value|0x55
end_define

begin_define
define|#
directive|define
name|SKIP_ROM
value|0xcc
end_define

begin_define
define|#
directive|define
name|ALARM_SEARCH
value|0xec
end_define

begin_define
define|#
directive|define
name|SEARCH_ROM
value|0xf0
end_define

begin_function
specifier|static
specifier|inline
name|int
name|own_send_command
parameter_list|(
name|device_t
name|pdev
parameter_list|,
name|struct
name|ow_cmd
modifier|*
name|cmd
parameter_list|)
block|{
name|device_t
name|ndev
init|=
name|device_get_parent
argument_list|(
name|pdev
argument_list|)
decl_stmt|;
return|return
name|OWN_SEND_COMMAND
argument_list|(
name|ndev
argument_list|,
name|pdev
argument_list|,
name|cmd
argument_list|)
return|;
block|}
end_function

begin_comment
comment|/*  * How args for own_acquire_bus  */
end_comment

begin_define
define|#
directive|define
name|OWN_WAIT
value|1
end_define

begin_define
define|#
directive|define
name|OWN_DONTWAIT
value|2
end_define

begin_function
specifier|static
specifier|inline
name|int
name|own_acquire_bus
parameter_list|(
name|device_t
name|pdev
parameter_list|,
name|int
name|how
parameter_list|)
block|{
name|device_t
name|ndev
init|=
name|device_get_parent
argument_list|(
name|pdev
argument_list|)
decl_stmt|;
return|return
name|OWN_ACQUIRE_BUS
argument_list|(
name|ndev
argument_list|,
name|pdev
argument_list|,
name|how
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|own_release_bus
parameter_list|(
name|device_t
name|pdev
parameter_list|)
block|{
name|device_t
name|ndev
init|=
name|device_get_parent
argument_list|(
name|pdev
argument_list|)
decl_stmt|;
name|OWN_RELEASE_BUS
argument_list|(
name|ndev
argument_list|,
name|pdev
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|uint8_t
name|own_crc
parameter_list|(
name|device_t
name|pdev
parameter_list|,
name|uint8_t
modifier|*
name|buffer
parameter_list|,
name|size_t
name|len
parameter_list|)
block|{
name|device_t
name|ndev
init|=
name|device_get_parent
argument_list|(
name|pdev
argument_list|)
decl_stmt|;
return|return
name|OWN_CRC
argument_list|(
name|ndev
argument_list|,
name|pdev
argument_list|,
name|buffer
argument_list|,
name|len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|own_self_command
parameter_list|(
name|device_t
name|pdev
parameter_list|,
name|struct
name|ow_cmd
modifier|*
name|cmd
parameter_list|,
name|uint8_t
name|xpt_cmd
parameter_list|)
block|{
name|uint8_t
modifier|*
name|mep
decl_stmt|;
name|memset
argument_list|(
name|cmd
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
argument_list|(
operator|*
name|cmd
argument_list|)
argument_list|)
expr_stmt|;
name|mep
operator|=
name|ow_get_romid
argument_list|(
name|pdev
argument_list|)
expr_stmt|;
name|cmd
operator|->
name|rom_cmd
index|[
literal|0
index|]
operator|=
name|MATCH_ROM
expr_stmt|;
name|memcpy
argument_list|(
operator|&
name|cmd
operator|->
name|rom_cmd
index|[
literal|1
index|]
argument_list|,
name|mep
argument_list|,
sizeof|sizeof
argument_list|(
name|romid_t
argument_list|)
argument_list|)
expr_stmt|;
name|cmd
operator|->
name|rom_len
operator|=
literal|1
operator|+
sizeof|sizeof
argument_list|(
name|romid_t
argument_list|)
expr_stmt|;
name|cmd
operator|->
name|xpt_cmd
index|[
literal|0
index|]
operator|=
name|xpt_cmd
expr_stmt|;
name|cmd
operator|->
name|xpt_len
operator|=
literal|1
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|own_command_wait
parameter_list|(
name|device_t
name|pdev
parameter_list|,
name|struct
name|ow_cmd
modifier|*
name|cmd
parameter_list|)
block|{
name|int
name|rv
decl_stmt|;
name|rv
operator|=
name|own_acquire_bus
argument_list|(
name|pdev
argument_list|,
name|OWN_WAIT
argument_list|)
expr_stmt|;
if|if
condition|(
name|rv
operator|!=
literal|0
condition|)
return|return
name|rv
return|;
name|rv
operator|=
name|own_send_command
argument_list|(
name|pdev
argument_list|,
name|cmd
argument_list|)
expr_stmt|;
name|own_release_bus
argument_list|(
name|pdev
argument_list|)
expr_stmt|;
return|return
name|rv
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* DEV_OW_OWLL_H */
end_comment

end_unit

