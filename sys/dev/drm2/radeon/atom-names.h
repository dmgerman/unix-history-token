begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2008 Advanced Micro Devices, Inc.  *  * Permission is hereby granted, free of charge, to any person obtaining a  * copy of this software and associated documentation files (the "Software"),  * to deal in the Software without restriction, including without limitation  * the rights to use, copy, modify, merge, publish, distribute, sublicense,  * and/or sell copies of the Software, and to permit persons to whom the  * Software is furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice shall be included in  * all copies or substantial portions of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL  * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR  * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR  * OTHER DEALINGS IN THE SOFTWARE.  *  * Author: Stanislaw Skowronek  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|ATOM_NAMES_H
end_ifndef

begin_define
define|#
directive|define
name|ATOM_NAMES_H
end_define

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_include
include|#
directive|include
file|"atom.h"
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|ATOM_DEBUG
end_ifdef

begin_define
define|#
directive|define
name|ATOM_OP_NAMES_CNT
value|123
end_define

begin_decl_stmt
specifier|static
name|char
modifier|*
name|atom_op_names
index|[
name|ATOM_OP_NAMES_CNT
index|]
init|=
block|{
literal|"RESERVED"
block|,
literal|"MOVE_REG"
block|,
literal|"MOVE_PS"
block|,
literal|"MOVE_WS"
block|,
literal|"MOVE_FB"
block|,
literal|"MOVE_PLL"
block|,
literal|"MOVE_MC"
block|,
literal|"AND_REG"
block|,
literal|"AND_PS"
block|,
literal|"AND_WS"
block|,
literal|"AND_FB"
block|,
literal|"AND_PLL"
block|,
literal|"AND_MC"
block|,
literal|"OR_REG"
block|,
literal|"OR_PS"
block|,
literal|"OR_WS"
block|,
literal|"OR_FB"
block|,
literal|"OR_PLL"
block|,
literal|"OR_MC"
block|,
literal|"SHIFT_LEFT_REG"
block|,
literal|"SHIFT_LEFT_PS"
block|,
literal|"SHIFT_LEFT_WS"
block|,
literal|"SHIFT_LEFT_FB"
block|,
literal|"SHIFT_LEFT_PLL"
block|,
literal|"SHIFT_LEFT_MC"
block|,
literal|"SHIFT_RIGHT_REG"
block|,
literal|"SHIFT_RIGHT_PS"
block|,
literal|"SHIFT_RIGHT_WS"
block|,
literal|"SHIFT_RIGHT_FB"
block|,
literal|"SHIFT_RIGHT_PLL"
block|,
literal|"SHIFT_RIGHT_MC"
block|,
literal|"MUL_REG"
block|,
literal|"MUL_PS"
block|,
literal|"MUL_WS"
block|,
literal|"MUL_FB"
block|,
literal|"MUL_PLL"
block|,
literal|"MUL_MC"
block|,
literal|"DIV_REG"
block|,
literal|"DIV_PS"
block|,
literal|"DIV_WS"
block|,
literal|"DIV_FB"
block|,
literal|"DIV_PLL"
block|,
literal|"DIV_MC"
block|,
literal|"ADD_REG"
block|,
literal|"ADD_PS"
block|,
literal|"ADD_WS"
block|,
literal|"ADD_FB"
block|,
literal|"ADD_PLL"
block|,
literal|"ADD_MC"
block|,
literal|"SUB_REG"
block|,
literal|"SUB_PS"
block|,
literal|"SUB_WS"
block|,
literal|"SUB_FB"
block|,
literal|"SUB_PLL"
block|,
literal|"SUB_MC"
block|,
literal|"SET_ATI_PORT"
block|,
literal|"SET_PCI_PORT"
block|,
literal|"SET_SYS_IO_PORT"
block|,
literal|"SET_REG_BLOCK"
block|,
literal|"SET_FB_BASE"
block|,
literal|"COMPARE_REG"
block|,
literal|"COMPARE_PS"
block|,
literal|"COMPARE_WS"
block|,
literal|"COMPARE_FB"
block|,
literal|"COMPARE_PLL"
block|,
literal|"COMPARE_MC"
block|,
literal|"SWITCH"
block|,
literal|"JUMP"
block|,
literal|"JUMP_EQUAL"
block|,
literal|"JUMP_BELOW"
block|,
literal|"JUMP_ABOVE"
block|,
literal|"JUMP_BELOW_OR_EQUAL"
block|,
literal|"JUMP_ABOVE_OR_EQUAL"
block|,
literal|"JUMP_NOT_EQUAL"
block|,
literal|"TEST_REG"
block|,
literal|"TEST_PS"
block|,
literal|"TEST_WS"
block|,
literal|"TEST_FB"
block|,
literal|"TEST_PLL"
block|,
literal|"TEST_MC"
block|,
literal|"DELAY_MILLISEC"
block|,
literal|"DELAY_MICROSEC"
block|,
literal|"CALL_TABLE"
block|,
literal|"REPEAT"
block|,
literal|"CLEAR_REG"
block|,
literal|"CLEAR_PS"
block|,
literal|"CLEAR_WS"
block|,
literal|"CLEAR_FB"
block|,
literal|"CLEAR_PLL"
block|,
literal|"CLEAR_MC"
block|,
literal|"NOP"
block|,
literal|"EOT"
block|,
literal|"MASK_REG"
block|,
literal|"MASK_PS"
block|,
literal|"MASK_WS"
block|,
literal|"MASK_FB"
block|,
literal|"MASK_PLL"
block|,
literal|"MASK_MC"
block|,
literal|"POST_CARD"
block|,
literal|"BEEP"
block|,
literal|"SAVE_REG"
block|,
literal|"RESTORE_REG"
block|,
literal|"SET_DATA_BLOCK"
block|,
literal|"XOR_REG"
block|,
literal|"XOR_PS"
block|,
literal|"XOR_WS"
block|,
literal|"XOR_FB"
block|,
literal|"XOR_PLL"
block|,
literal|"XOR_MC"
block|,
literal|"SHL_REG"
block|,
literal|"SHL_PS"
block|,
literal|"SHL_WS"
block|,
literal|"SHL_FB"
block|,
literal|"SHL_PLL"
block|,
literal|"SHL_MC"
block|,
literal|"SHR_REG"
block|,
literal|"SHR_PS"
block|,
literal|"SHR_WS"
block|,
literal|"SHR_FB"
block|,
literal|"SHR_PLL"
block|,
literal|"SHR_MC"
block|,
literal|"DEBUG"
block|,
literal|"CTB_DS"
block|, }
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|ATOM_TABLE_NAMES_CNT
value|74
end_define

begin_decl_stmt
specifier|static
name|char
modifier|*
name|atom_table_names
index|[
name|ATOM_TABLE_NAMES_CNT
index|]
init|=
block|{
literal|"ASIC_Init"
block|,
literal|"GetDisplaySurfaceSize"
block|,
literal|"ASIC_RegistersInit"
block|,
literal|"VRAM_BlockVenderDetection"
block|,
literal|"SetClocksRatio"
block|,
literal|"MemoryControllerInit"
block|,
literal|"GPIO_PinInit"
block|,
literal|"MemoryParamAdjust"
block|,
literal|"DVOEncoderControl"
block|,
literal|"GPIOPinControl"
block|,
literal|"SetEngineClock"
block|,
literal|"SetMemoryClock"
block|,
literal|"SetPixelClock"
block|,
literal|"DynamicClockGating"
block|,
literal|"ResetMemoryDLL"
block|,
literal|"ResetMemoryDevice"
block|,
literal|"MemoryPLLInit"
block|,
literal|"EnableMemorySelfRefresh"
block|,
literal|"AdjustMemoryController"
block|,
literal|"EnableASIC_StaticPwrMgt"
block|,
literal|"ASIC_StaticPwrMgtStatusChange"
block|,
literal|"DAC_LoadDetection"
block|,
literal|"TMDS2EncoderControl"
block|,
literal|"LCD1OutputControl"
block|,
literal|"DAC1EncoderControl"
block|,
literal|"DAC2EncoderControl"
block|,
literal|"DVOOutputControl"
block|,
literal|"CV1OutputControl"
block|,
literal|"SetCRTC_DPM_State"
block|,
literal|"TVEncoderControl"
block|,
literal|"TMDS1EncoderControl"
block|,
literal|"LVDSEncoderControl"
block|,
literal|"TV1OutputControl"
block|,
literal|"EnableScaler"
block|,
literal|"BlankCRTC"
block|,
literal|"EnableCRTC"
block|,
literal|"GetPixelClock"
block|,
literal|"EnableVGA_Render"
block|,
literal|"EnableVGA_Access"
block|,
literal|"SetCRTC_Timing"
block|,
literal|"SetCRTC_OverScan"
block|,
literal|"SetCRTC_Replication"
block|,
literal|"SelectCRTC_Source"
block|,
literal|"EnableGraphSurfaces"
block|,
literal|"UpdateCRTC_DoubleBufferRegisters"
block|,
literal|"LUT_AutoFill"
block|,
literal|"EnableHW_IconCursor"
block|,
literal|"GetMemoryClock"
block|,
literal|"GetEngineClock"
block|,
literal|"SetCRTC_UsingDTDTiming"
block|,
literal|"TVBootUpStdPinDetection"
block|,
literal|"DFP2OutputControl"
block|,
literal|"VRAM_BlockDetectionByStrap"
block|,
literal|"MemoryCleanUp"
block|,
literal|"ReadEDIDFromHWAssistedI2C"
block|,
literal|"WriteOneByteToHWAssistedI2C"
block|,
literal|"ReadHWAssistedI2CStatus"
block|,
literal|"SpeedFanControl"
block|,
literal|"PowerConnectorDetection"
block|,
literal|"MC_Synchronization"
block|,
literal|"ComputeMemoryEnginePLL"
block|,
literal|"MemoryRefreshConversion"
block|,
literal|"VRAM_GetCurrentInfoBlock"
block|,
literal|"DynamicMemorySettings"
block|,
literal|"MemoryTraining"
block|,
literal|"EnableLVDS_SS"
block|,
literal|"DFP1OutputControl"
block|,
literal|"SetVoltage"
block|,
literal|"CRT1OutputControl"
block|,
literal|"CRT2OutputControl"
block|,
literal|"SetupHWAssistedI2CStatus"
block|,
literal|"ClockSource"
block|,
literal|"MemoryDeviceInit"
block|,
literal|"EnableYUV"
block|, }
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|ATOM_IO_NAMES_CNT
value|5
end_define

begin_decl_stmt
specifier|static
name|char
modifier|*
name|atom_io_names
index|[
name|ATOM_IO_NAMES_CNT
index|]
init|=
block|{
literal|"MM"
block|,
literal|"PLL"
block|,
literal|"MC"
block|,
literal|"PCIE"
block|,
literal|"PCIE PORT"
block|, }
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|ATOM_OP_NAMES_CNT
value|0
end_define

begin_define
define|#
directive|define
name|ATOM_TABLE_NAMES_CNT
value|0
end_define

begin_define
define|#
directive|define
name|ATOM_IO_NAMES_CNT
value|0
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

