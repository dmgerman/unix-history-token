begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2008 Advanced Micro Devices, Inc.  * Copyright 2008 Red Hat Inc.  * Copyright 2009 Jerome Glisse.  *  * Permission is hereby granted, free of charge, to any person obtaining a  * copy of this software and associated documentation files (the "Software"),  * to deal in the Software without restriction, including without limitation  * the rights to use, copy, modify, merge, publish, distribute, sublicense,  * and/or sell copies of the Software, and to permit persons to whom the  * Software is furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice shall be included in  * all copies or substantial portions of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL  * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR  * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR  * OTHER DEALINGS IN THE SOFTWARE.  *  * Authors: Dave Airlie  *          Alex Deucher  *          Jerome Glisse  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|__RADEON_H__
end_ifndef

begin_define
define|#
directive|define
name|__RADEON_H__
end_define

begin_comment
comment|/* TODO: Here are things that needs to be done :  *	- surface allocator& initializer : (bit like scratch reg) should  *	  initialize HDP_ stuff on RS600, R600, R700 hw, well anythings  *	  related to surface  *	- WB : write back stuff (do it bit like scratch reg things)  *	- Vblank : look at Jesse's rework and what we should do  *	- r600/r700: gart& cp  *	- cs : clean cs ioctl use bitmap& things like that.  *	- power management stuff  *	- Barrier in gart code  *	- Unmappabled vram ?  *	- TESTING, TESTING, TESTING  */
end_comment

begin_comment
comment|/* Initialization path:  *  We expect that acceleration initialization might fail for various  *  reasons even thought we work hard to make it works on most  *  configurations. In order to still have a working userspace in such  *  situation the init path must succeed up to the memory controller  *  initialization point. Failure before this point are considered as  *  fatal error. Here is the init callchain :  *      radeon_device_init  perform common structure, mutex initialization  *      asic_init           setup the GPU memory layout and perform all  *                          one time initialization (failure in this  *                          function are considered fatal)  *      asic_startup        setup the GPU acceleration, in order to  *                          follow guideline the first thing this  *                          function should do is setting the GPU  *                          memory controller (only MC setup failure  *                          are considered as fatal)  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_include
include|#
directive|include
file|<sys/param.h>
end_include

begin_include
include|#
directive|include
file|<sys/systm.h>
end_include

begin_include
include|#
directive|include
file|<sys/linker.h>
end_include

begin_include
include|#
directive|include
file|<sys/firmware.h>
end_include

begin_if
if|#
directive|if
name|defined
argument_list|(
name|CONFIG_ACPI
argument_list|)
end_if

begin_include
include|#
directive|include
file|<contrib/dev/acpica/include/acpi.h>
end_include

begin_include
include|#
directive|include
file|<dev/acpica/acpivar.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<dev/drm2/ttm/ttm_bo_api.h>
end_include

begin_include
include|#
directive|include
file|<dev/drm2/ttm/ttm_bo_driver.h>
end_include

begin_include
include|#
directive|include
file|<dev/drm2/ttm/ttm_placement.h>
end_include

begin_include
include|#
directive|include
file|<dev/drm2/ttm/ttm_module.h>
end_include

begin_include
include|#
directive|include
file|<dev/drm2/ttm/ttm_execbuf_util.h>
end_include

begin_include
include|#
directive|include
file|"radeon_family.h"
end_include

begin_include
include|#
directive|include
file|"radeon_mode.h"
end_include

begin_include
include|#
directive|include
file|"radeon_reg.h"
end_include

begin_comment
comment|/*  * Modules parameters.  */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|radeon_no_wb
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_modeset
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_dynclks
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_r4xx_atom
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_agpmode
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_vram_limit
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_gart_size
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_benchmarking
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_testing
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_connector_table
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_tv
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_audio
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_disp_priority
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_hw_i2c
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_pcie_gen2
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_msi
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|radeon_lockup_timeout
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Copy from radeon_drv.h so we don't have to include both and have conflicting  * symbol;  */
end_comment

begin_define
define|#
directive|define
name|RADEON_MAX_USEC_TIMEOUT
value|100000
end_define

begin_comment
comment|/* 100 ms */
end_comment

begin_define
define|#
directive|define
name|RADEON_FENCE_JIFFIES_TIMEOUT
value|(HZ / 2)
end_define

begin_comment
comment|/* RADEON_IB_POOL_SIZE must be a power of 2 */
end_comment

begin_define
define|#
directive|define
name|RADEON_IB_POOL_SIZE
value|16
end_define

begin_define
define|#
directive|define
name|RADEON_DEBUGFS_MAX_COMPONENTS
value|32
end_define

begin_define
define|#
directive|define
name|RADEONFB_CONN_LIMIT
value|4
end_define

begin_define
define|#
directive|define
name|RADEON_BIOS_NUM_SCRATCH
value|8
end_define

begin_comment
comment|/* max number of rings */
end_comment

begin_define
define|#
directive|define
name|RADEON_NUM_RINGS
value|5
end_define

begin_comment
comment|/* fence seq are set to this number when signaled */
end_comment

begin_define
define|#
directive|define
name|RADEON_FENCE_SIGNALED_SEQ
value|0LL
end_define

begin_comment
comment|/* internal ring indices */
end_comment

begin_comment
comment|/* r1xx+ has gfx CP ring */
end_comment

begin_define
define|#
directive|define
name|RADEON_RING_TYPE_GFX_INDEX
value|0
end_define

begin_comment
comment|/* cayman has 2 compute CP rings */
end_comment

begin_define
define|#
directive|define
name|CAYMAN_RING_TYPE_CP1_INDEX
value|1
end_define

begin_define
define|#
directive|define
name|CAYMAN_RING_TYPE_CP2_INDEX
value|2
end_define

begin_comment
comment|/* R600+ has an async dma ring */
end_comment

begin_define
define|#
directive|define
name|R600_RING_TYPE_DMA_INDEX
value|3
end_define

begin_comment
comment|/* cayman add a second async dma ring */
end_comment

begin_define
define|#
directive|define
name|CAYMAN_RING_TYPE_DMA1_INDEX
value|4
end_define

begin_comment
comment|/* hardcode those limit for now */
end_comment

begin_define
define|#
directive|define
name|RADEON_VA_IB_OFFSET
value|(1<< 20)
end_define

begin_define
define|#
directive|define
name|RADEON_VA_RESERVED_SIZE
value|(8<< 20)
end_define

begin_define
define|#
directive|define
name|RADEON_IB_VM_MAX_SIZE
value|(64<< 10)
end_define

begin_comment
comment|/* reset flags */
end_comment

begin_define
define|#
directive|define
name|RADEON_RESET_GFX
value|(1<< 0)
end_define

begin_define
define|#
directive|define
name|RADEON_RESET_COMPUTE
value|(1<< 1)
end_define

begin_define
define|#
directive|define
name|RADEON_RESET_DMA
value|(1<< 2)
end_define

begin_comment
comment|/*  * Errata workarounds.  */
end_comment

begin_enum
enum|enum
name|radeon_pll_errata
block|{
name|CHIP_ERRATA_R300_CG
init|=
literal|0x00000001
block|,
name|CHIP_ERRATA_PLL_DUMMYREADS
init|=
literal|0x00000002
block|,
name|CHIP_ERRATA_PLL_DELAY
init|=
literal|0x00000004
block|}
enum|;
end_enum

begin_struct_decl
struct_decl|struct
name|radeon_device
struct_decl|;
end_struct_decl

begin_comment
comment|/*  * BIOS.  */
end_comment

begin_function_decl
name|bool
name|radeon_get_bios
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Dummy page  */
end_comment

begin_struct
struct|struct
name|radeon_dummy_page
block|{
name|drm_dma_handle_t
modifier|*
name|dmah
decl_stmt|;
name|dma_addr_t
name|addr
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|radeon_dummy_page_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_dummy_page_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Clocks  */
end_comment

begin_struct
struct|struct
name|radeon_clock
block|{
name|struct
name|radeon_pll
name|p1pll
decl_stmt|;
name|struct
name|radeon_pll
name|p2pll
decl_stmt|;
name|struct
name|radeon_pll
name|dcpll
decl_stmt|;
name|struct
name|radeon_pll
name|spll
decl_stmt|;
name|struct
name|radeon_pll
name|mpll
decl_stmt|;
comment|/* 10 Khz units */
name|uint32_t
name|default_mclk
decl_stmt|;
name|uint32_t
name|default_sclk
decl_stmt|;
name|uint32_t
name|default_dispclk
decl_stmt|;
name|uint32_t
name|dp_extclk
decl_stmt|;
name|uint32_t
name|max_pixel_clock
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Power management  */
end_comment

begin_function_decl
name|int
name|radeon_pm_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_pm_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_pm_compute_clocks
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_pm_suspend
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_pm_resume
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_combios_get_power_modes
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_atombios_get_power_modes
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_atom_set_voltage
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|u16
name|voltage_level
parameter_list|,
name|u8
name|voltage_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rs690_pm_info
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|rv6xx_get_temp
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|rv770_get_temp
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|evergreen_get_temp
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|sumo_get_temp
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|si_get_temp
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|evergreen_tiling_fields
parameter_list|(
name|unsigned
name|tiling_flags
parameter_list|,
name|unsigned
modifier|*
name|bankw
parameter_list|,
name|unsigned
modifier|*
name|bankh
parameter_list|,
name|unsigned
modifier|*
name|mtaspect
parameter_list|,
name|unsigned
modifier|*
name|tile_split
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Fences.  */
end_comment

begin_struct
struct|struct
name|radeon_fence_driver
block|{
name|uint32_t
name|scratch_reg
decl_stmt|;
name|uint64_t
name|gpu_addr
decl_stmt|;
specifier|volatile
name|uint32_t
modifier|*
name|cpu_addr
decl_stmt|;
comment|/* sync_seq is protected by ring emission lock */
name|uint64_t
name|sync_seq
index|[
name|RADEON_NUM_RINGS
index|]
decl_stmt|;
name|atomic64_t
name|last_seq
decl_stmt|;
name|unsigned
name|long
name|last_activity
decl_stmt|;
name|bool
name|initialized
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|radeon_fence
block|{
name|struct
name|radeon_device
modifier|*
name|rdev
decl_stmt|;
name|unsigned
name|int
name|kref
decl_stmt|;
comment|/* protected by radeon_fence.lock */
name|uint64_t
name|seq
decl_stmt|;
comment|/* RB, DMA, etc. */
name|unsigned
name|ring
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|radeon_fence_driver_start_ring
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_fence_driver_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_fence_driver_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_fence_driver_force_completion
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_fence_emit
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_fence
modifier|*
modifier|*
name|fence
parameter_list|,
name|int
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_fence_process
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|radeon_fence_signaled
parameter_list|(
name|struct
name|radeon_fence
modifier|*
name|fence
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_fence_wait
parameter_list|(
name|struct
name|radeon_fence
modifier|*
name|fence
parameter_list|,
name|bool
name|interruptible
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_fence_wait_next_locked
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_fence_wait_empty_locked
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_fence_wait_any
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_fence
modifier|*
modifier|*
name|fences
parameter_list|,
name|bool
name|intr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|radeon_fence
modifier|*
name|radeon_fence_ref
parameter_list|(
name|struct
name|radeon_fence
modifier|*
name|fence
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_fence_unref
parameter_list|(
name|struct
name|radeon_fence
modifier|*
modifier|*
name|fence
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|radeon_fence_count_emitted
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|radeon_fence_need_sync
parameter_list|(
name|struct
name|radeon_fence
modifier|*
name|fence
parameter_list|,
name|int
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_fence_note_sync
parameter_list|(
name|struct
name|radeon_fence
modifier|*
name|fence
parameter_list|,
name|int
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|struct
name|radeon_fence
modifier|*
name|radeon_fence_later
parameter_list|(
name|struct
name|radeon_fence
modifier|*
name|a
parameter_list|,
name|struct
name|radeon_fence
modifier|*
name|b
parameter_list|)
block|{
if|if
condition|(
operator|!
name|a
condition|)
block|{
return|return
name|b
return|;
block|}
if|if
condition|(
operator|!
name|b
condition|)
block|{
return|return
name|a
return|;
block|}
name|KASSERT
argument_list|(
name|a
operator|->
name|ring
operator|==
name|b
operator|->
name|ring
argument_list|,
operator|(
literal|"\"a\" and \"b\" belongs to different rings"
operator|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|a
operator|->
name|seq
operator|>
name|b
operator|->
name|seq
condition|)
block|{
return|return
name|a
return|;
block|}
else|else
block|{
return|return
name|b
return|;
block|}
block|}
end_function

begin_function
specifier|static
specifier|inline
name|bool
name|radeon_fence_is_earlier
parameter_list|(
name|struct
name|radeon_fence
modifier|*
name|a
parameter_list|,
name|struct
name|radeon_fence
modifier|*
name|b
parameter_list|)
block|{
if|if
condition|(
operator|!
name|a
condition|)
block|{
return|return
name|false
return|;
block|}
if|if
condition|(
operator|!
name|b
condition|)
block|{
return|return
name|true
return|;
block|}
name|KASSERT
argument_list|(
name|a
operator|->
name|ring
operator|==
name|b
operator|->
name|ring
argument_list|,
operator|(
literal|"\"a\" and \"b\" belongs to different rings"
operator|)
argument_list|)
expr_stmt|;
return|return
name|a
operator|->
name|seq
operator|<
name|b
operator|->
name|seq
return|;
block|}
end_function

begin_comment
comment|/*  * Tiling registers  */
end_comment

begin_struct
struct|struct
name|radeon_surface_reg
block|{
name|struct
name|radeon_bo
modifier|*
name|bo
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|RADEON_GEM_MAX_SURFACES
value|8
end_define

begin_comment
comment|/*  * TTM.  */
end_comment

begin_struct
struct|struct
name|radeon_mman
block|{
name|struct
name|ttm_bo_global_ref
name|bo_global_ref
decl_stmt|;
name|struct
name|drm_global_reference
name|mem_global_ref
decl_stmt|;
name|struct
name|ttm_bo_device
name|bdev
decl_stmt|;
name|bool
name|mem_global_referenced
decl_stmt|;
name|bool
name|initialized
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* bo virtual address in a specific vm */
end_comment

begin_struct
struct|struct
name|radeon_bo_va
block|{
comment|/* protected by bo being reserved */
name|struct
name|list_head
name|bo_list
decl_stmt|;
name|uint64_t
name|soffset
decl_stmt|;
name|uint64_t
name|eoffset
decl_stmt|;
name|uint32_t
name|flags
decl_stmt|;
name|bool
name|valid
decl_stmt|;
name|unsigned
name|ref_count
decl_stmt|;
comment|/* protected by vm mutex */
name|struct
name|list_head
name|vm_list
decl_stmt|;
comment|/* constant after initialization */
name|struct
name|radeon_vm
modifier|*
name|vm
decl_stmt|;
name|struct
name|radeon_bo
modifier|*
name|bo
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|radeon_bo
block|{
comment|/* Protected by gem.mutex */
name|struct
name|list_head
name|list
decl_stmt|;
comment|/* Protected by tbo.reserved */
name|u32
name|placements
index|[
literal|3
index|]
decl_stmt|;
name|struct
name|ttm_placement
name|placement
decl_stmt|;
name|struct
name|ttm_buffer_object
name|tbo
decl_stmt|;
name|struct
name|ttm_bo_kmap_obj
name|kmap
decl_stmt|;
name|unsigned
name|pin_count
decl_stmt|;
name|void
modifier|*
name|kptr
decl_stmt|;
name|u32
name|tiling_flags
decl_stmt|;
name|u32
name|pitch
decl_stmt|;
name|int
name|surface_reg
decl_stmt|;
comment|/* list of all virtual address to which this bo 	 * is associated to 	 */
name|struct
name|list_head
name|va
decl_stmt|;
comment|/* Constant after initialization */
name|struct
name|radeon_device
modifier|*
name|rdev
decl_stmt|;
name|struct
name|drm_gem_object
name|gem_base
decl_stmt|;
name|struct
name|ttm_bo_kmap_obj
name|dma_buf_vmap
decl_stmt|;
name|int
name|vmapping_count
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|gem_to_radeon_bo
parameter_list|(
name|gobj
parameter_list|)
value|container_of((gobj), struct radeon_bo, gem_base)
end_define

begin_struct
struct|struct
name|radeon_bo_list
block|{
name|struct
name|ttm_validate_buffer
name|tv
decl_stmt|;
name|struct
name|radeon_bo
modifier|*
name|bo
decl_stmt|;
name|uint64_t
name|gpu_offset
decl_stmt|;
name|unsigned
name|rdomain
decl_stmt|;
name|unsigned
name|wdomain
decl_stmt|;
name|u32
name|tiling_flags
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* sub-allocation manager, it has to be protected by another lock.  * By conception this is an helper for other part of the driver  * like the indirect buffer or semaphore, which both have their  * locking.  *  * Principe is simple, we keep a list of sub allocation in offset  * order (first entry has offset == 0, last entry has the highest  * offset).  *  * When allocating new object we first check if there is room at  * the end total_size - (last_object_offset + last_object_size)>=  * alloc_size. If so we allocate new object there.  *  * When there is not enough room at the end, we start waiting for  * each sub object until we reach object_offset+object_size>=  * alloc_size, this object then become the sub object we return.  *  * Alignment can't be bigger than page size.  *  * Hole are not considered for allocation to keep things simple.  * Assumption is that there won't be hole (all object on same  * alignment).  */
end_comment

begin_struct
struct|struct
name|radeon_sa_manager
block|{
name|struct
name|cv
name|wq
decl_stmt|;
name|struct
name|sx
name|wq_lock
decl_stmt|;
name|struct
name|radeon_bo
modifier|*
name|bo
decl_stmt|;
name|struct
name|list_head
modifier|*
name|hole
decl_stmt|;
name|struct
name|list_head
name|flist
index|[
name|RADEON_NUM_RINGS
index|]
decl_stmt|;
name|struct
name|list_head
name|olist
decl_stmt|;
name|unsigned
name|size
decl_stmt|;
name|uint64_t
name|gpu_addr
decl_stmt|;
name|void
modifier|*
name|cpu_ptr
decl_stmt|;
name|uint32_t
name|domain
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|radeon_sa_bo
struct_decl|;
end_struct_decl

begin_comment
comment|/* sub-allocation buffer */
end_comment

begin_struct
struct|struct
name|radeon_sa_bo
block|{
name|struct
name|list_head
name|olist
decl_stmt|;
name|struct
name|list_head
name|flist
decl_stmt|;
name|struct
name|radeon_sa_manager
modifier|*
name|manager
decl_stmt|;
name|unsigned
name|soffset
decl_stmt|;
name|unsigned
name|eoffset
decl_stmt|;
name|struct
name|radeon_fence
modifier|*
name|fence
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * GEM objects.  */
end_comment

begin_struct
struct|struct
name|radeon_gem
block|{
name|struct
name|sx
name|mutex
decl_stmt|;
name|struct
name|list_head
name|objects
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|radeon_gem_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_gem_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_object_create
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|size
parameter_list|,
name|int
name|alignment
parameter_list|,
name|int
name|initial_domain
parameter_list|,
name|bool
name|discardable
parameter_list|,
name|bool
name|kernel
parameter_list|,
name|struct
name|drm_gem_object
modifier|*
modifier|*
name|obj
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_mode_dumb_create
parameter_list|(
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|,
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|struct
name|drm_mode_create_dumb
modifier|*
name|args
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_mode_dumb_mmap
parameter_list|(
name|struct
name|drm_file
modifier|*
name|filp
parameter_list|,
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|uint32_t
name|handle
parameter_list|,
name|uint64_t
modifier|*
name|offset_p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_mode_dumb_destroy
parameter_list|(
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|,
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|uint32_t
name|handle
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Semaphores.  */
end_comment

begin_comment
comment|/* everything here is constant */
end_comment

begin_struct
struct|struct
name|radeon_semaphore
block|{
name|struct
name|radeon_sa_bo
modifier|*
name|sa_bo
decl_stmt|;
name|signed
name|waiters
decl_stmt|;
name|uint64_t
name|gpu_addr
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|radeon_semaphore_create
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_semaphore
modifier|*
modifier|*
name|semaphore
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_semaphore_emit_signal
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|ring
parameter_list|,
name|struct
name|radeon_semaphore
modifier|*
name|semaphore
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_semaphore_emit_wait
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|ring
parameter_list|,
name|struct
name|radeon_semaphore
modifier|*
name|semaphore
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_semaphore_sync_rings
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_semaphore
modifier|*
name|semaphore
parameter_list|,
name|int
name|signaler
parameter_list|,
name|int
name|waiter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_semaphore_free
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_semaphore
modifier|*
modifier|*
name|semaphore
parameter_list|,
name|struct
name|radeon_fence
modifier|*
name|fence
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * GART structures, functions& helpers  */
end_comment

begin_struct_decl
struct_decl|struct
name|radeon_mc
struct_decl|;
end_struct_decl

begin_define
define|#
directive|define
name|RADEON_GPU_PAGE_SIZE
value|4096
end_define

begin_define
define|#
directive|define
name|RADEON_GPU_PAGE_MASK
value|(RADEON_GPU_PAGE_SIZE - 1)
end_define

begin_define
define|#
directive|define
name|RADEON_GPU_PAGE_SHIFT
value|12
end_define

begin_define
define|#
directive|define
name|RADEON_GPU_PAGE_ALIGN
parameter_list|(
name|a
parameter_list|)
value|(((a) + RADEON_GPU_PAGE_MASK)& ~RADEON_GPU_PAGE_MASK)
end_define

begin_struct
struct|struct
name|radeon_gart
block|{
name|drm_dma_handle_t
modifier|*
name|dmah
decl_stmt|;
name|dma_addr_t
name|table_addr
decl_stmt|;
name|struct
name|radeon_bo
modifier|*
name|robj
decl_stmt|;
name|void
modifier|*
name|ptr
decl_stmt|;
name|unsigned
name|num_gpu_pages
decl_stmt|;
name|unsigned
name|num_cpu_pages
decl_stmt|;
name|unsigned
name|table_size
decl_stmt|;
name|vm_page_t
modifier|*
name|pages
decl_stmt|;
name|dma_addr_t
modifier|*
name|pages_addr
decl_stmt|;
name|bool
name|ready
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|radeon_gart_table_ram_alloc
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_gart_table_ram_free
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gart_table_vram_alloc
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_gart_table_vram_free
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gart_table_vram_pin
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_gart_table_vram_unpin
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gart_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_gart_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_gart_unbind
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|unsigned
name|offset
parameter_list|,
name|int
name|pages
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gart_bind
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|unsigned
name|offset
parameter_list|,
name|int
name|pages
parameter_list|,
name|vm_page_t
modifier|*
name|pagelist
parameter_list|,
name|dma_addr_t
modifier|*
name|dma_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_gart_restore
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * GPU MC structures, functions& helpers  */
end_comment

begin_struct
struct|struct
name|radeon_mc
block|{
name|resource_size_t
name|aper_size
decl_stmt|;
name|resource_size_t
name|aper_base
decl_stmt|;
name|resource_size_t
name|agp_base
decl_stmt|;
comment|/* for some chips with<= 32MB we need to lie 	 * about vram size near mc fb location */
name|u64
name|mc_vram_size
decl_stmt|;
name|u64
name|visible_vram_size
decl_stmt|;
name|u64
name|gtt_size
decl_stmt|;
name|u64
name|gtt_start
decl_stmt|;
name|u64
name|gtt_end
decl_stmt|;
name|u64
name|vram_start
decl_stmt|;
name|u64
name|vram_end
decl_stmt|;
name|unsigned
name|vram_width
decl_stmt|;
name|u64
name|real_vram_size
decl_stmt|;
name|int
name|vram_mtrr
decl_stmt|;
name|bool
name|vram_is_ddr
decl_stmt|;
name|bool
name|igp_sideport_enabled
decl_stmt|;
name|u64
name|gtt_base_align
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|bool
name|radeon_combios_sideport_present
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|radeon_atombios_sideport_present
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * GPU scratch registers structures, functions& helpers  */
end_comment

begin_struct
struct|struct
name|radeon_scratch
block|{
name|unsigned
name|num_reg
decl_stmt|;
name|uint32_t
name|reg_base
decl_stmt|;
name|bool
name|free
index|[
literal|32
index|]
decl_stmt|;
name|uint32_t
name|reg
index|[
literal|32
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|radeon_scratch_get
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint32_t
modifier|*
name|reg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_scratch_free
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint32_t
name|reg
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * IRQS.  */
end_comment

begin_struct
struct|struct
name|radeon_unpin_work
block|{
name|struct
name|task
name|work
decl_stmt|;
name|struct
name|radeon_device
modifier|*
name|rdev
decl_stmt|;
name|int
name|crtc_id
decl_stmt|;
name|struct
name|radeon_fence
modifier|*
name|fence
decl_stmt|;
name|struct
name|drm_pending_vblank_event
modifier|*
name|event
decl_stmt|;
name|struct
name|radeon_bo
modifier|*
name|old_rbo
decl_stmt|;
name|u64
name|new_crtc_base
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|r500_irq_stat_regs
block|{
name|u32
name|disp_int
decl_stmt|;
name|u32
name|hdmi0_status
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|r600_irq_stat_regs
block|{
name|u32
name|disp_int
decl_stmt|;
name|u32
name|disp_int_cont
decl_stmt|;
name|u32
name|disp_int_cont2
decl_stmt|;
name|u32
name|d1grph_int
decl_stmt|;
name|u32
name|d2grph_int
decl_stmt|;
name|u32
name|hdmi0_status
decl_stmt|;
name|u32
name|hdmi1_status
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|evergreen_irq_stat_regs
block|{
name|u32
name|disp_int
decl_stmt|;
name|u32
name|disp_int_cont
decl_stmt|;
name|u32
name|disp_int_cont2
decl_stmt|;
name|u32
name|disp_int_cont3
decl_stmt|;
name|u32
name|disp_int_cont4
decl_stmt|;
name|u32
name|disp_int_cont5
decl_stmt|;
name|u32
name|d1grph_int
decl_stmt|;
name|u32
name|d2grph_int
decl_stmt|;
name|u32
name|d3grph_int
decl_stmt|;
name|u32
name|d4grph_int
decl_stmt|;
name|u32
name|d5grph_int
decl_stmt|;
name|u32
name|d6grph_int
decl_stmt|;
name|u32
name|afmt_status1
decl_stmt|;
name|u32
name|afmt_status2
decl_stmt|;
name|u32
name|afmt_status3
decl_stmt|;
name|u32
name|afmt_status4
decl_stmt|;
name|u32
name|afmt_status5
decl_stmt|;
name|u32
name|afmt_status6
decl_stmt|;
block|}
struct|;
end_struct

begin_union
union|union
name|radeon_irq_stat_regs
block|{
name|struct
name|r500_irq_stat_regs
name|r500
decl_stmt|;
name|struct
name|r600_irq_stat_regs
name|r600
decl_stmt|;
name|struct
name|evergreen_irq_stat_regs
name|evergreen
decl_stmt|;
block|}
union|;
end_union

begin_define
define|#
directive|define
name|RADEON_MAX_HPD_PINS
value|6
end_define

begin_define
define|#
directive|define
name|RADEON_MAX_CRTCS
value|6
end_define

begin_define
define|#
directive|define
name|RADEON_MAX_AFMT_BLOCKS
value|6
end_define

begin_struct
struct|struct
name|radeon_irq
block|{
name|bool
name|installed
decl_stmt|;
name|struct
name|mtx
name|lock
decl_stmt|;
name|atomic_t
name|ring_int
index|[
name|RADEON_NUM_RINGS
index|]
decl_stmt|;
name|bool
name|crtc_vblank_int
index|[
name|RADEON_MAX_CRTCS
index|]
decl_stmt|;
name|atomic_t
name|pflip
index|[
name|RADEON_MAX_CRTCS
index|]
decl_stmt|;
name|wait_queue_head_t
name|vblank_queue
decl_stmt|;
name|bool
name|hpd
index|[
name|RADEON_MAX_HPD_PINS
index|]
decl_stmt|;
name|bool
name|afmt
index|[
name|RADEON_MAX_AFMT_BLOCKS
index|]
decl_stmt|;
name|union
name|radeon_irq_stat_regs
name|stat_regs
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|radeon_irq_kms_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_irq_kms_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_irq_kms_sw_irq_get
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_irq_kms_sw_irq_put
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_irq_kms_pflip_irq_get
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|crtc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_irq_kms_pflip_irq_put
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|crtc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_irq_kms_enable_afmt
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|block
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_irq_kms_disable_afmt
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|block
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_irq_kms_enable_hpd
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|unsigned
name|hpd_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_irq_kms_disable_hpd
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|unsigned
name|hpd_mask
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * CP& rings.  */
end_comment

begin_struct
struct|struct
name|radeon_ib
block|{
name|struct
name|radeon_sa_bo
modifier|*
name|sa_bo
decl_stmt|;
name|uint32_t
name|length_dw
decl_stmt|;
name|uint64_t
name|gpu_addr
decl_stmt|;
name|uint32_t
modifier|*
name|ptr
decl_stmt|;
name|int
name|ring
decl_stmt|;
name|struct
name|radeon_fence
modifier|*
name|fence
decl_stmt|;
name|struct
name|radeon_vm
modifier|*
name|vm
decl_stmt|;
name|bool
name|is_const_ib
decl_stmt|;
name|struct
name|radeon_fence
modifier|*
name|sync_to
index|[
name|RADEON_NUM_RINGS
index|]
decl_stmt|;
name|struct
name|radeon_semaphore
modifier|*
name|semaphore
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|radeon_ring
block|{
name|struct
name|radeon_bo
modifier|*
name|ring_obj
decl_stmt|;
specifier|volatile
name|uint32_t
modifier|*
name|ring
decl_stmt|;
name|unsigned
name|rptr
decl_stmt|;
name|unsigned
name|rptr_offs
decl_stmt|;
name|unsigned
name|rptr_reg
decl_stmt|;
name|unsigned
name|rptr_save_reg
decl_stmt|;
name|u64
name|next_rptr_gpu_addr
decl_stmt|;
specifier|volatile
name|u32
modifier|*
name|next_rptr_cpu_addr
decl_stmt|;
name|unsigned
name|wptr
decl_stmt|;
name|unsigned
name|wptr_old
decl_stmt|;
name|unsigned
name|wptr_reg
decl_stmt|;
name|unsigned
name|ring_size
decl_stmt|;
name|unsigned
name|ring_free_dw
decl_stmt|;
name|int
name|count_dw
decl_stmt|;
name|unsigned
name|long
name|last_activity
decl_stmt|;
name|unsigned
name|last_rptr
decl_stmt|;
name|uint64_t
name|gpu_addr
decl_stmt|;
name|uint32_t
name|align_mask
decl_stmt|;
name|uint32_t
name|ptr_mask
decl_stmt|;
name|bool
name|ready
decl_stmt|;
name|u32
name|ptr_reg_shift
decl_stmt|;
name|u32
name|ptr_reg_mask
decl_stmt|;
name|u32
name|nop
decl_stmt|;
name|u32
name|idx
decl_stmt|;
name|u64
name|last_semaphore_signal_addr
decl_stmt|;
name|u64
name|last_semaphore_wait_addr
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * VM  */
end_comment

begin_comment
comment|/* maximum number of VMIDs */
end_comment

begin_define
define|#
directive|define
name|RADEON_NUM_VM
value|16
end_define

begin_comment
comment|/* defines number of bits in page table versus page directory,  * a page is 4KB so we have 12 bits offset, 9 bits in the page  * table and the remaining 19 bits are in the page directory */
end_comment

begin_define
define|#
directive|define
name|RADEON_VM_BLOCK_SIZE
value|9
end_define

begin_comment
comment|/* number of entries in page table */
end_comment

begin_define
define|#
directive|define
name|RADEON_VM_PTE_COUNT
value|(1<< RADEON_VM_BLOCK_SIZE)
end_define

begin_struct
struct|struct
name|radeon_vm
block|{
name|struct
name|list_head
name|list
decl_stmt|;
name|struct
name|list_head
name|va
decl_stmt|;
name|unsigned
name|id
decl_stmt|;
comment|/* contains the page directory */
name|struct
name|radeon_sa_bo
modifier|*
name|page_directory
decl_stmt|;
name|uint64_t
name|pd_gpu_addr
decl_stmt|;
comment|/* array of page tables, one for each page directory entry */
name|struct
name|radeon_sa_bo
modifier|*
modifier|*
name|page_tables
decl_stmt|;
name|struct
name|sx
name|mutex
decl_stmt|;
comment|/* last fence for cs using this vm */
name|struct
name|radeon_fence
modifier|*
name|fence
decl_stmt|;
comment|/* last flush or NULL if we still need to flush */
name|struct
name|radeon_fence
modifier|*
name|last_flush
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|radeon_vm_manager
block|{
name|struct
name|sx
name|lock
decl_stmt|;
name|struct
name|list_head
name|lru_vm
decl_stmt|;
name|struct
name|radeon_fence
modifier|*
name|active
index|[
name|RADEON_NUM_VM
index|]
decl_stmt|;
name|struct
name|radeon_sa_manager
name|sa_manager
decl_stmt|;
name|uint32_t
name|max_pfn
decl_stmt|;
comment|/* number of VMIDs */
name|unsigned
name|nvm
decl_stmt|;
comment|/* vram base address for page table entry  */
name|u64
name|vram_base_offset
decl_stmt|;
comment|/* is vm enabled? */
name|bool
name|enabled
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * file private structure  */
end_comment

begin_struct
struct|struct
name|radeon_fpriv
block|{
name|struct
name|radeon_vm
name|vm
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * R6xx+ IH ring  */
end_comment

begin_struct
struct|struct
name|r600_ih
block|{
name|struct
name|radeon_bo
modifier|*
name|ring_obj
decl_stmt|;
specifier|volatile
name|uint32_t
modifier|*
name|ring
decl_stmt|;
name|unsigned
name|rptr
decl_stmt|;
name|unsigned
name|ring_size
decl_stmt|;
name|uint64_t
name|gpu_addr
decl_stmt|;
name|uint32_t
name|ptr_mask
decl_stmt|;
name|atomic_t
name|lock
decl_stmt|;
name|bool
name|enabled
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|r600_blit_cp_primitives
block|{
name|void
function_decl|(
modifier|*
name|set_render_target
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|format
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|u64
name|gpu_addr
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|cp_set_surface_sync
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|u32
name|sync_type
parameter_list|,
name|u32
name|size
parameter_list|,
name|u64
name|mc_addr
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_shaders
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_vtx_resource
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|u64
name|gpu_addr
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_tex_resource
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|format
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|pitch
parameter_list|,
name|u64
name|gpu_addr
parameter_list|,
name|u32
name|size
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_scissors
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|x1
parameter_list|,
name|int
name|y1
parameter_list|,
name|int
name|x2
parameter_list|,
name|int
name|y2
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|draw_auto
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_default_state
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|r600_blit
block|{
name|struct
name|radeon_bo
modifier|*
name|shader_obj
decl_stmt|;
name|struct
name|r600_blit_cp_primitives
name|primitives
decl_stmt|;
name|int
name|max_dim
decl_stmt|;
name|int
name|ring_size_common
decl_stmt|;
name|int
name|ring_size_per_loop
decl_stmt|;
name|u64
name|shader_gpu_addr
decl_stmt|;
name|u32
name|vs_offset
decl_stmt|,
name|ps_offset
decl_stmt|;
name|u32
name|state_offset
decl_stmt|;
name|u32
name|state_len
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * SI RLC stuff  */
end_comment

begin_struct
struct|struct
name|si_rlc
block|{
comment|/* for power gating */
name|struct
name|radeon_bo
modifier|*
name|save_restore_obj
decl_stmt|;
name|uint64_t
name|save_restore_gpu_addr
decl_stmt|;
comment|/* for clear state */
name|struct
name|radeon_bo
modifier|*
name|clear_state_obj
decl_stmt|;
name|uint64_t
name|clear_state_gpu_addr
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|radeon_ib_get
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|ring
parameter_list|,
name|struct
name|radeon_ib
modifier|*
name|ib
parameter_list|,
name|struct
name|radeon_vm
modifier|*
name|vm
parameter_list|,
name|unsigned
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_ib_free
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ib
modifier|*
name|ib
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_ib_schedule
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ib
modifier|*
name|ib
parameter_list|,
name|struct
name|radeon_ib
modifier|*
name|const_ib
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_ib_pool_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_ib_pool_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_ib_ring_tests
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Ring access between begin& end cannot sleep */
end_comment

begin_function_decl
name|bool
name|radeon_ring_supports_scratch_reg
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_ring_free_size
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_ring_alloc
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|,
name|unsigned
name|ndw
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_ring_lock
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|,
name|unsigned
name|ndw
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_ring_commit
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_ring_unlock_commit
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_ring_undo
parameter_list|(
name|struct
name|radeon_ring
modifier|*
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_ring_unlock_undo
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_ring_test
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_ring_force_activity
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_ring_lockup_update
parameter_list|(
name|struct
name|radeon_ring
modifier|*
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|radeon_ring_test_lockup
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|radeon_ring_backup
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|ring
parameter_list|,
name|uint32_t
modifier|*
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_ring_restore
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|ring
parameter_list|,
name|unsigned
name|size
parameter_list|,
name|uint32_t
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_ring_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|,
name|unsigned
name|ring_size
parameter_list|,
name|unsigned
name|rptr_offs
parameter_list|,
name|unsigned
name|rptr_reg
parameter_list|,
name|unsigned
name|wptr_reg
parameter_list|,
name|u32
name|ptr_reg_shift
parameter_list|,
name|u32
name|ptr_reg_mask
parameter_list|,
name|u32
name|nop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_ring_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* r600 async dma */
end_comment

begin_function_decl
name|void
name|r600_dma_stop
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|r600_dma_resume
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|r600_dma_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cayman_dma_stop
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cayman_dma_resume
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cayman_dma_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * CS.  */
end_comment

begin_struct
struct|struct
name|radeon_cs_reloc
block|{
name|struct
name|drm_gem_object
modifier|*
name|gobj
decl_stmt|;
name|struct
name|radeon_bo
modifier|*
name|robj
decl_stmt|;
name|struct
name|radeon_bo_list
name|lobj
decl_stmt|;
name|uint32_t
name|handle
decl_stmt|;
name|uint32_t
name|flags
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|radeon_cs_chunk
block|{
name|uint32_t
name|chunk_id
decl_stmt|;
name|uint32_t
name|length_dw
decl_stmt|;
name|int
name|kpage_idx
index|[
literal|2
index|]
decl_stmt|;
name|uint32_t
modifier|*
name|kpage
index|[
literal|2
index|]
decl_stmt|;
name|uint32_t
modifier|*
name|kdata
decl_stmt|;
name|void
name|__user
modifier|*
name|user_ptr
decl_stmt|;
name|int
name|last_copied_page
decl_stmt|;
name|int
name|last_page_index
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|radeon_cs_parser
block|{
name|device_t
name|dev
decl_stmt|;
name|struct
name|radeon_device
modifier|*
name|rdev
decl_stmt|;
name|struct
name|drm_file
modifier|*
name|filp
decl_stmt|;
comment|/* chunks */
name|unsigned
name|nchunks
decl_stmt|;
name|struct
name|radeon_cs_chunk
modifier|*
name|chunks
decl_stmt|;
name|uint64_t
modifier|*
name|chunks_array
decl_stmt|;
comment|/* IB */
name|unsigned
name|idx
decl_stmt|;
comment|/* relocations */
name|unsigned
name|nrelocs
decl_stmt|;
name|struct
name|radeon_cs_reloc
modifier|*
name|relocs
decl_stmt|;
name|struct
name|radeon_cs_reloc
modifier|*
modifier|*
name|relocs_ptr
decl_stmt|;
name|struct
name|list_head
name|validated
decl_stmt|;
name|unsigned
name|dma_reloc_idx
decl_stmt|;
comment|/* indices of various chunks */
name|int
name|chunk_ib_idx
decl_stmt|;
name|int
name|chunk_relocs_idx
decl_stmt|;
name|int
name|chunk_flags_idx
decl_stmt|;
name|int
name|chunk_const_ib_idx
decl_stmt|;
name|struct
name|radeon_ib
name|ib
decl_stmt|;
name|struct
name|radeon_ib
name|const_ib
decl_stmt|;
name|void
modifier|*
name|track
decl_stmt|;
name|unsigned
name|family
decl_stmt|;
name|int
name|parser_error
decl_stmt|;
name|u32
name|cs_flags
decl_stmt|;
name|u32
name|ring
decl_stmt|;
name|s32
name|priority
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
specifier|extern
name|int
name|radeon_cs_finish_pages
parameter_list|(
name|struct
name|radeon_cs_parser
modifier|*
name|p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|u32
name|radeon_get_ib_value
parameter_list|(
name|struct
name|radeon_cs_parser
modifier|*
name|p
parameter_list|,
name|int
name|idx
parameter_list|)
function_decl|;
end_function_decl

begin_struct
struct|struct
name|radeon_cs_packet
block|{
name|unsigned
name|idx
decl_stmt|;
name|unsigned
name|type
decl_stmt|;
name|unsigned
name|reg
decl_stmt|;
name|unsigned
name|opcode
decl_stmt|;
name|int
name|count
decl_stmt|;
name|unsigned
name|one_reg_wr
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|radeon_packet0_check_t
function_decl|)
parameter_list|(
name|struct
name|radeon_cs_parser
modifier|*
name|p
parameter_list|,
name|struct
name|radeon_cs_packet
modifier|*
name|pkt
parameter_list|,
name|unsigned
name|idx
parameter_list|,
name|unsigned
name|reg
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|radeon_packet3_check_t
function_decl|)
parameter_list|(
name|struct
name|radeon_cs_parser
modifier|*
name|p
parameter_list|,
name|struct
name|radeon_cs_packet
modifier|*
name|pkt
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/*  * AGP  */
end_comment

begin_function_decl
name|int
name|radeon_agp_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_agp_resume
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_agp_suspend
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_agp_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Writeback  */
end_comment

begin_struct
struct|struct
name|radeon_wb
block|{
name|struct
name|radeon_bo
modifier|*
name|wb_obj
decl_stmt|;
specifier|volatile
name|uint32_t
modifier|*
name|wb
decl_stmt|;
name|uint64_t
name|gpu_addr
decl_stmt|;
name|bool
name|enabled
decl_stmt|;
name|bool
name|use_event
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|RADEON_WB_SCRATCH_OFFSET
value|0
end_define

begin_define
define|#
directive|define
name|RADEON_WB_RING0_NEXT_RPTR
value|256
end_define

begin_define
define|#
directive|define
name|RADEON_WB_CP_RPTR_OFFSET
value|1024
end_define

begin_define
define|#
directive|define
name|RADEON_WB_CP1_RPTR_OFFSET
value|1280
end_define

begin_define
define|#
directive|define
name|RADEON_WB_CP2_RPTR_OFFSET
value|1536
end_define

begin_define
define|#
directive|define
name|R600_WB_DMA_RPTR_OFFSET
value|1792
end_define

begin_define
define|#
directive|define
name|R600_WB_IH_WPTR_OFFSET
value|2048
end_define

begin_define
define|#
directive|define
name|CAYMAN_WB_DMA1_RPTR_OFFSET
value|2304
end_define

begin_define
define|#
directive|define
name|R600_WB_EVENT_OFFSET
value|3072
end_define

begin_comment
comment|/**  * struct radeon_pm - power management datas  * @max_bandwidth:      maximum bandwidth the gpu has (MByte/s)  * @igp_sideport_mclk:  sideport memory clock Mhz (rs690,rs740,rs780,rs880)  * @igp_system_mclk:    system clock Mhz (rs690,rs740,rs780,rs880)  * @igp_ht_link_clk:    ht link clock Mhz (rs690,rs740,rs780,rs880)  * @igp_ht_link_width:  ht link width in bits (rs690,rs740,rs780,rs880)  * @k8_bandwidth:       k8 bandwidth the gpu has (MByte/s) (IGP)  * @sideport_bandwidth: sideport bandwidth the gpu has (MByte/s) (IGP)  * @ht_bandwidth:       ht bandwidth the gpu has (MByte/s) (IGP)  * @core_bandwidth:     core GPU bandwidth the gpu has (MByte/s) (IGP)  * @sclk:          	GPU clock Mhz (core bandwidth depends of this clock)  * @needed_bandwidth:   current bandwidth needs  *  * It keeps track of various data needed to take powermanagement decision.  * Bandwidth need is used to determine minimun clock of the GPU and memory.  * Equation between gpu/memory clock and available bandwidth is hw dependent  * (type of memory, bus size, efficiency, ...)  */
end_comment

begin_enum
enum|enum
name|radeon_pm_method
block|{
name|PM_METHOD_PROFILE
block|,
name|PM_METHOD_DYNPM
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|radeon_dynpm_state
block|{
name|DYNPM_STATE_DISABLED
block|,
name|DYNPM_STATE_MINIMUM
block|,
name|DYNPM_STATE_PAUSED
block|,
name|DYNPM_STATE_ACTIVE
block|,
name|DYNPM_STATE_SUSPENDED
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|radeon_dynpm_action
block|{
name|DYNPM_ACTION_NONE
block|,
name|DYNPM_ACTION_MINIMUM
block|,
name|DYNPM_ACTION_DOWNCLOCK
block|,
name|DYNPM_ACTION_UPCLOCK
block|,
name|DYNPM_ACTION_DEFAULT
block|}
enum|;
end_enum

begin_enum
enum|enum
name|radeon_voltage_type
block|{
name|VOLTAGE_NONE
init|=
literal|0
block|,
name|VOLTAGE_GPIO
block|,
name|VOLTAGE_VDDC
block|,
name|VOLTAGE_SW
block|}
enum|;
end_enum

begin_enum
enum|enum
name|radeon_pm_state_type
block|{
name|POWER_STATE_TYPE_DEFAULT
block|,
name|POWER_STATE_TYPE_POWERSAVE
block|,
name|POWER_STATE_TYPE_BATTERY
block|,
name|POWER_STATE_TYPE_BALANCED
block|,
name|POWER_STATE_TYPE_PERFORMANCE
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|radeon_pm_profile_type
block|{
name|PM_PROFILE_DEFAULT
block|,
name|PM_PROFILE_AUTO
block|,
name|PM_PROFILE_LOW
block|,
name|PM_PROFILE_MID
block|,
name|PM_PROFILE_HIGH
block|, }
enum|;
end_enum

begin_define
define|#
directive|define
name|PM_PROFILE_DEFAULT_IDX
value|0
end_define

begin_define
define|#
directive|define
name|PM_PROFILE_LOW_SH_IDX
value|1
end_define

begin_define
define|#
directive|define
name|PM_PROFILE_MID_SH_IDX
value|2
end_define

begin_define
define|#
directive|define
name|PM_PROFILE_HIGH_SH_IDX
value|3
end_define

begin_define
define|#
directive|define
name|PM_PROFILE_LOW_MH_IDX
value|4
end_define

begin_define
define|#
directive|define
name|PM_PROFILE_MID_MH_IDX
value|5
end_define

begin_define
define|#
directive|define
name|PM_PROFILE_HIGH_MH_IDX
value|6
end_define

begin_define
define|#
directive|define
name|PM_PROFILE_MAX
value|7
end_define

begin_struct
struct|struct
name|radeon_pm_profile
block|{
name|int
name|dpms_off_ps_idx
decl_stmt|;
name|int
name|dpms_on_ps_idx
decl_stmt|;
name|int
name|dpms_off_cm_idx
decl_stmt|;
name|int
name|dpms_on_cm_idx
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|radeon_int_thermal_type
block|{
name|THERMAL_TYPE_NONE
block|,
name|THERMAL_TYPE_RV6XX
block|,
name|THERMAL_TYPE_RV770
block|,
name|THERMAL_TYPE_EVERGREEN
block|,
name|THERMAL_TYPE_SUMO
block|,
name|THERMAL_TYPE_NI
block|,
name|THERMAL_TYPE_SI
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|radeon_voltage
block|{
name|enum
name|radeon_voltage_type
name|type
decl_stmt|;
comment|/* gpio voltage */
name|struct
name|radeon_gpio_rec
name|gpio
decl_stmt|;
name|u32
name|delay
decl_stmt|;
comment|/* delay in usec from voltage drop to sclk change */
name|bool
name|active_high
decl_stmt|;
comment|/* voltage drop is active when bit is high */
comment|/* VDDC voltage */
name|u8
name|vddc_id
decl_stmt|;
comment|/* index into vddc voltage table */
name|u8
name|vddci_id
decl_stmt|;
comment|/* index into vddci voltage table */
name|bool
name|vddci_enabled
decl_stmt|;
comment|/* r6xx+ sw */
name|u16
name|voltage
decl_stmt|;
comment|/* evergreen+ vddci */
name|u16
name|vddci
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* clock mode flags */
end_comment

begin_define
define|#
directive|define
name|RADEON_PM_MODE_NO_DISPLAY
value|(1<< 0)
end_define

begin_struct
struct|struct
name|radeon_pm_clock_info
block|{
comment|/* memory clock */
name|u32
name|mclk
decl_stmt|;
comment|/* engine clock */
name|u32
name|sclk
decl_stmt|;
comment|/* voltage info */
name|struct
name|radeon_voltage
name|voltage
decl_stmt|;
comment|/* standardized clock flags */
name|u32
name|flags
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* state flags */
end_comment

begin_define
define|#
directive|define
name|RADEON_PM_STATE_SINGLE_DISPLAY_ONLY
value|(1<< 0)
end_define

begin_struct
struct|struct
name|radeon_power_state
block|{
name|enum
name|radeon_pm_state_type
name|type
decl_stmt|;
name|struct
name|radeon_pm_clock_info
modifier|*
name|clock_info
decl_stmt|;
comment|/* number of valid clock modes in this power state */
name|int
name|num_clock_modes
decl_stmt|;
name|struct
name|radeon_pm_clock_info
modifier|*
name|default_clock_mode
decl_stmt|;
comment|/* standardized state flags */
name|u32
name|flags
decl_stmt|;
name|u32
name|misc
decl_stmt|;
comment|/* vbios specific flags */
name|u32
name|misc2
decl_stmt|;
comment|/* vbios specific flags */
name|int
name|pcie_lanes
decl_stmt|;
comment|/* pcie lanes */
block|}
struct|;
end_struct

begin_comment
comment|/*  * Some modes are overclocked by very low value, accept them  */
end_comment

begin_define
define|#
directive|define
name|RADEON_MODE_OVERCLOCK_MARGIN
value|500
end_define

begin_comment
comment|/* 5 MHz */
end_comment

begin_struct
struct|struct
name|radeon_pm
block|{
name|struct
name|sx
name|mutex
decl_stmt|;
comment|/* write locked while reprogramming mclk */
name|struct
name|sx
name|mclk_lock
decl_stmt|;
name|u32
name|active_crtcs
decl_stmt|;
name|int
name|active_crtc_count
decl_stmt|;
name|int
name|req_vblank
decl_stmt|;
name|bool
name|vblank_sync
decl_stmt|;
name|fixed20_12
name|max_bandwidth
decl_stmt|;
name|fixed20_12
name|igp_sideport_mclk
decl_stmt|;
name|fixed20_12
name|igp_system_mclk
decl_stmt|;
name|fixed20_12
name|igp_ht_link_clk
decl_stmt|;
name|fixed20_12
name|igp_ht_link_width
decl_stmt|;
name|fixed20_12
name|k8_bandwidth
decl_stmt|;
name|fixed20_12
name|sideport_bandwidth
decl_stmt|;
name|fixed20_12
name|ht_bandwidth
decl_stmt|;
name|fixed20_12
name|core_bandwidth
decl_stmt|;
name|fixed20_12
name|sclk
decl_stmt|;
name|fixed20_12
name|mclk
decl_stmt|;
name|fixed20_12
name|needed_bandwidth
decl_stmt|;
name|struct
name|radeon_power_state
modifier|*
name|power_state
decl_stmt|;
comment|/* number of valid power states */
name|int
name|num_power_states
decl_stmt|;
name|int
name|current_power_state_index
decl_stmt|;
name|int
name|current_clock_mode_index
decl_stmt|;
name|int
name|requested_power_state_index
decl_stmt|;
name|int
name|requested_clock_mode_index
decl_stmt|;
name|int
name|default_power_state_index
decl_stmt|;
name|u32
name|current_sclk
decl_stmt|;
name|u32
name|current_mclk
decl_stmt|;
name|u16
name|current_vddc
decl_stmt|;
name|u16
name|current_vddci
decl_stmt|;
name|u32
name|default_sclk
decl_stmt|;
name|u32
name|default_mclk
decl_stmt|;
name|u16
name|default_vddc
decl_stmt|;
name|u16
name|default_vddci
decl_stmt|;
name|struct
name|radeon_i2c_chan
modifier|*
name|i2c_bus
decl_stmt|;
comment|/* selected pm method */
name|enum
name|radeon_pm_method
name|pm_method
decl_stmt|;
comment|/* dynpm power management */
ifdef|#
directive|ifdef
name|FREEBSD_WIP
name|struct
name|delayed_work
name|dynpm_idle_work
decl_stmt|;
endif|#
directive|endif
comment|/* FREEBSD_WIP */
name|enum
name|radeon_dynpm_state
name|dynpm_state
decl_stmt|;
name|enum
name|radeon_dynpm_action
name|dynpm_planned_action
decl_stmt|;
name|unsigned
name|long
name|dynpm_action_timeout
decl_stmt|;
name|bool
name|dynpm_can_upclock
decl_stmt|;
name|bool
name|dynpm_can_downclock
decl_stmt|;
comment|/* profile-based power management */
name|enum
name|radeon_pm_profile_type
name|profile
decl_stmt|;
name|int
name|profile_index
decl_stmt|;
name|struct
name|radeon_pm_profile
name|profiles
index|[
name|PM_PROFILE_MAX
index|]
decl_stmt|;
comment|/* internal thermal controller on rv6xx+ */
name|enum
name|radeon_int_thermal_type
name|int_thermal_type
decl_stmt|;
ifdef|#
directive|ifdef
name|FREEBSD_WIP
name|struct
name|device
modifier|*
name|int_hwmon_dev
decl_stmt|;
endif|#
directive|endif
comment|/* FREEBSD_WIP */
block|}
struct|;
end_struct

begin_function_decl
name|int
name|radeon_pm_get_type_index
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|enum
name|radeon_pm_state_type
name|ps_type
parameter_list|,
name|int
name|instance
parameter_list|)
function_decl|;
end_function_decl

begin_struct
struct|struct
name|r600_audio
block|{
name|int
name|channels
decl_stmt|;
name|int
name|rate
decl_stmt|;
name|int
name|bits_per_sample
decl_stmt|;
name|u8
name|status_bits
decl_stmt|;
name|u8
name|category_code
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Benchmarking  */
end_comment

begin_function_decl
name|void
name|radeon_benchmark
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|test_number
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Testing  */
end_comment

begin_function_decl
name|void
name|radeon_test_moves
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_test_ring_sync
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cpA
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cpB
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_test_syncing
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Debugfs  */
end_comment

begin_struct
struct|struct
name|radeon_debugfs
block|{
name|struct
name|drm_info_list
modifier|*
name|files
decl_stmt|;
name|unsigned
name|num_files
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|radeon_debugfs_add_files
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|drm_info_list
modifier|*
name|files
parameter_list|,
name|unsigned
name|nfiles
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_debugfs_fence_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * ASIC specific functions.  */
end_comment

begin_struct
struct|struct
name|radeon_asic
block|{
name|int
function_decl|(
modifier|*
name|init
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|fini
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|resume
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|suspend
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|vga_set_state
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|bool
name|state
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|asic_reset
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
comment|/* ioctl hw specific callback. Some hw might want to perform special 	 * operation on specific ioctl. For instance on wait idle some hw 	 * might want to perform and HDP flush through MMIO as it seems that 	 * some R6XX/R7XX hw doesn't take HDP flush into account if programmed 	 * through ring. 	 */
name|void
function_decl|(
modifier|*
name|ioctl_wait_idle
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
function_decl|;
comment|/* check if 3D engine is idle */
name|bool
function_decl|(
modifier|*
name|gui_idle
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
comment|/* wait for mc_idle */
name|int
function_decl|(
modifier|*
name|mc_wait_for_idle
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
comment|/* gart */
struct|struct
block|{
name|void
function_decl|(
modifier|*
name|tlb_flush
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_page
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|i
parameter_list|,
name|uint64_t
name|addr
parameter_list|)
function_decl|;
block|}
name|gart
struct|;
struct|struct
block|{
name|int
function_decl|(
modifier|*
name|init
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|fini
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|u32
name|pt_ring_index
decl_stmt|;
name|void
function_decl|(
modifier|*
name|set_page
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint64_t
name|pe
parameter_list|,
name|uint64_t
name|addr
parameter_list|,
name|unsigned
name|count
parameter_list|,
name|uint32_t
name|incr
parameter_list|,
name|uint32_t
name|flags
parameter_list|)
function_decl|;
block|}
name|vm
struct|;
comment|/* ring specific callbacks */
struct|struct
block|{
name|void
function_decl|(
modifier|*
name|ib_execute
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ib
modifier|*
name|ib
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|ib_parse
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ib
modifier|*
name|ib
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|emit_fence
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_fence
modifier|*
name|fence
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|emit_semaphore
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|,
name|struct
name|radeon_semaphore
modifier|*
name|semaphore
parameter_list|,
name|bool
name|emit_wait
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|cs_parse
function_decl|)
parameter_list|(
name|struct
name|radeon_cs_parser
modifier|*
name|p
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|ring_start
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|ring_test
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|ib_test
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|)
function_decl|;
name|bool
function_decl|(
modifier|*
name|is_lockup
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_ring
modifier|*
name|cp
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|vm_flush
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|ridx
parameter_list|,
name|struct
name|radeon_vm
modifier|*
name|vm
parameter_list|)
function_decl|;
block|}
name|ring
index|[
name|RADEON_NUM_RINGS
index|]
struct|;
comment|/* irqs */
struct|struct
block|{
name|int
function_decl|(
modifier|*
name|set
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|irqreturn_t
function_decl|(
modifier|*
name|process
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
block|}
name|irq
struct|;
comment|/* displays */
struct|struct
block|{
comment|/* display watermarks */
name|void
function_decl|(
modifier|*
name|bandwidth_update
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
comment|/* get frame count */
name|u32
function_decl|(
modifier|*
name|get_vblank_counter
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|crtc
parameter_list|)
function_decl|;
comment|/* wait for vblank */
name|void
function_decl|(
modifier|*
name|wait_for_vblank
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|crtc
parameter_list|)
function_decl|;
comment|/* set backlight level */
name|void
function_decl|(
modifier|*
name|set_backlight_level
function_decl|)
parameter_list|(
name|struct
name|radeon_encoder
modifier|*
name|radeon_encoder
parameter_list|,
name|u8
name|level
parameter_list|)
function_decl|;
comment|/* get backlight level */
name|u8
function_decl|(
modifier|*
name|get_backlight_level
function_decl|)
parameter_list|(
name|struct
name|radeon_encoder
modifier|*
name|radeon_encoder
parameter_list|)
function_decl|;
block|}
name|display
struct|;
comment|/* copy functions for bo handling */
struct|struct
block|{
name|int
function_decl|(
modifier|*
name|blit
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint64_t
name|src_offset
parameter_list|,
name|uint64_t
name|dst_offset
parameter_list|,
name|unsigned
name|num_gpu_pages
parameter_list|,
name|struct
name|radeon_fence
modifier|*
modifier|*
name|fence
parameter_list|)
function_decl|;
name|u32
name|blit_ring_index
decl_stmt|;
name|int
function_decl|(
modifier|*
name|dma
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint64_t
name|src_offset
parameter_list|,
name|uint64_t
name|dst_offset
parameter_list|,
name|unsigned
name|num_gpu_pages
parameter_list|,
name|struct
name|radeon_fence
modifier|*
modifier|*
name|fence
parameter_list|)
function_decl|;
name|u32
name|dma_ring_index
decl_stmt|;
comment|/* method used for bo copy */
name|int
function_decl|(
modifier|*
name|copy
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint64_t
name|src_offset
parameter_list|,
name|uint64_t
name|dst_offset
parameter_list|,
name|unsigned
name|num_gpu_pages
parameter_list|,
name|struct
name|radeon_fence
modifier|*
modifier|*
name|fence
parameter_list|)
function_decl|;
comment|/* ring used for bo copies */
name|u32
name|copy_ring_index
decl_stmt|;
block|}
name|copy
struct|;
comment|/* surfaces */
struct|struct
block|{
name|int
function_decl|(
modifier|*
name|set_reg
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|reg
parameter_list|,
name|uint32_t
name|tiling_flags
parameter_list|,
name|uint32_t
name|pitch
parameter_list|,
name|uint32_t
name|offset
parameter_list|,
name|uint32_t
name|obj_size
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|clear_reg
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|reg
parameter_list|)
function_decl|;
block|}
name|surface
struct|;
comment|/* hotplug detect */
struct|struct
block|{
name|void
function_decl|(
modifier|*
name|init
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|fini
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|bool
function_decl|(
modifier|*
name|sense
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|enum
name|radeon_hpd_id
name|hpd
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_polarity
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|enum
name|radeon_hpd_id
name|hpd
parameter_list|)
function_decl|;
block|}
name|hpd
struct|;
comment|/* power management */
struct|struct
block|{
name|void
function_decl|(
modifier|*
name|misc
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|prepare
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|finish
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|init_profile
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|get_dynpm_state
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|uint32_t
function_decl|(
modifier|*
name|get_engine_clock
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_engine_clock
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint32_t
name|eng_clock
parameter_list|)
function_decl|;
name|uint32_t
function_decl|(
modifier|*
name|get_memory_clock
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_memory_clock
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint32_t
name|mem_clock
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_pcie_lanes
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_pcie_lanes
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|lanes
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_clock_gating
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|enable
parameter_list|)
function_decl|;
block|}
name|pm
struct|;
comment|/* pageflipping */
struct|struct
block|{
name|void
function_decl|(
modifier|*
name|pre_page_flip
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|crtc
parameter_list|)
function_decl|;
name|u32
function_decl|(
modifier|*
name|page_flip
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|crtc
parameter_list|,
name|u64
name|crtc_base
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|post_page_flip
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|crtc
parameter_list|)
function_decl|;
block|}
name|pflip
struct|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Asic structures  */
end_comment

begin_struct
struct|struct
name|r100_asic
block|{
specifier|const
name|unsigned
modifier|*
name|reg_safe_bm
decl_stmt|;
name|unsigned
name|reg_safe_bm_size
decl_stmt|;
name|u32
name|hdp_cntl
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|r300_asic
block|{
specifier|const
name|unsigned
modifier|*
name|reg_safe_bm
decl_stmt|;
name|unsigned
name|reg_safe_bm_size
decl_stmt|;
name|u32
name|resync_scratch
decl_stmt|;
name|u32
name|hdp_cntl
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|r600_asic
block|{
name|unsigned
name|max_pipes
decl_stmt|;
name|unsigned
name|max_tile_pipes
decl_stmt|;
name|unsigned
name|max_simds
decl_stmt|;
name|unsigned
name|max_backends
decl_stmt|;
name|unsigned
name|max_gprs
decl_stmt|;
name|unsigned
name|max_threads
decl_stmt|;
name|unsigned
name|max_stack_entries
decl_stmt|;
name|unsigned
name|max_hw_contexts
decl_stmt|;
name|unsigned
name|max_gs_threads
decl_stmt|;
name|unsigned
name|sx_max_export_size
decl_stmt|;
name|unsigned
name|sx_max_export_pos_size
decl_stmt|;
name|unsigned
name|sx_max_export_smx_size
decl_stmt|;
name|unsigned
name|sq_num_cf_insts
decl_stmt|;
name|unsigned
name|tiling_nbanks
decl_stmt|;
name|unsigned
name|tiling_npipes
decl_stmt|;
name|unsigned
name|tiling_group_size
decl_stmt|;
name|unsigned
name|tile_config
decl_stmt|;
name|unsigned
name|backend_map
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rv770_asic
block|{
name|unsigned
name|max_pipes
decl_stmt|;
name|unsigned
name|max_tile_pipes
decl_stmt|;
name|unsigned
name|max_simds
decl_stmt|;
name|unsigned
name|max_backends
decl_stmt|;
name|unsigned
name|max_gprs
decl_stmt|;
name|unsigned
name|max_threads
decl_stmt|;
name|unsigned
name|max_stack_entries
decl_stmt|;
name|unsigned
name|max_hw_contexts
decl_stmt|;
name|unsigned
name|max_gs_threads
decl_stmt|;
name|unsigned
name|sx_max_export_size
decl_stmt|;
name|unsigned
name|sx_max_export_pos_size
decl_stmt|;
name|unsigned
name|sx_max_export_smx_size
decl_stmt|;
name|unsigned
name|sq_num_cf_insts
decl_stmt|;
name|unsigned
name|sx_num_of_sets
decl_stmt|;
name|unsigned
name|sc_prim_fifo_size
decl_stmt|;
name|unsigned
name|sc_hiz_tile_fifo_size
decl_stmt|;
name|unsigned
name|sc_earlyz_tile_fifo_fize
decl_stmt|;
name|unsigned
name|tiling_nbanks
decl_stmt|;
name|unsigned
name|tiling_npipes
decl_stmt|;
name|unsigned
name|tiling_group_size
decl_stmt|;
name|unsigned
name|tile_config
decl_stmt|;
name|unsigned
name|backend_map
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|evergreen_asic
block|{
name|unsigned
name|num_ses
decl_stmt|;
name|unsigned
name|max_pipes
decl_stmt|;
name|unsigned
name|max_tile_pipes
decl_stmt|;
name|unsigned
name|max_simds
decl_stmt|;
name|unsigned
name|max_backends
decl_stmt|;
name|unsigned
name|max_gprs
decl_stmt|;
name|unsigned
name|max_threads
decl_stmt|;
name|unsigned
name|max_stack_entries
decl_stmt|;
name|unsigned
name|max_hw_contexts
decl_stmt|;
name|unsigned
name|max_gs_threads
decl_stmt|;
name|unsigned
name|sx_max_export_size
decl_stmt|;
name|unsigned
name|sx_max_export_pos_size
decl_stmt|;
name|unsigned
name|sx_max_export_smx_size
decl_stmt|;
name|unsigned
name|sq_num_cf_insts
decl_stmt|;
name|unsigned
name|sx_num_of_sets
decl_stmt|;
name|unsigned
name|sc_prim_fifo_size
decl_stmt|;
name|unsigned
name|sc_hiz_tile_fifo_size
decl_stmt|;
name|unsigned
name|sc_earlyz_tile_fifo_size
decl_stmt|;
name|unsigned
name|tiling_nbanks
decl_stmt|;
name|unsigned
name|tiling_npipes
decl_stmt|;
name|unsigned
name|tiling_group_size
decl_stmt|;
name|unsigned
name|tile_config
decl_stmt|;
name|unsigned
name|backend_map
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cayman_asic
block|{
name|unsigned
name|max_shader_engines
decl_stmt|;
name|unsigned
name|max_pipes_per_simd
decl_stmt|;
name|unsigned
name|max_tile_pipes
decl_stmt|;
name|unsigned
name|max_simds_per_se
decl_stmt|;
name|unsigned
name|max_backends_per_se
decl_stmt|;
name|unsigned
name|max_texture_channel_caches
decl_stmt|;
name|unsigned
name|max_gprs
decl_stmt|;
name|unsigned
name|max_threads
decl_stmt|;
name|unsigned
name|max_gs_threads
decl_stmt|;
name|unsigned
name|max_stack_entries
decl_stmt|;
name|unsigned
name|sx_num_of_sets
decl_stmt|;
name|unsigned
name|sx_max_export_size
decl_stmt|;
name|unsigned
name|sx_max_export_pos_size
decl_stmt|;
name|unsigned
name|sx_max_export_smx_size
decl_stmt|;
name|unsigned
name|max_hw_contexts
decl_stmt|;
name|unsigned
name|sq_num_cf_insts
decl_stmt|;
name|unsigned
name|sc_prim_fifo_size
decl_stmt|;
name|unsigned
name|sc_hiz_tile_fifo_size
decl_stmt|;
name|unsigned
name|sc_earlyz_tile_fifo_size
decl_stmt|;
name|unsigned
name|num_shader_engines
decl_stmt|;
name|unsigned
name|num_shader_pipes_per_simd
decl_stmt|;
name|unsigned
name|num_tile_pipes
decl_stmt|;
name|unsigned
name|num_simds_per_se
decl_stmt|;
name|unsigned
name|num_backends_per_se
decl_stmt|;
name|unsigned
name|backend_disable_mask_per_asic
decl_stmt|;
name|unsigned
name|backend_map
decl_stmt|;
name|unsigned
name|num_texture_channel_caches
decl_stmt|;
name|unsigned
name|mem_max_burst_length_bytes
decl_stmt|;
name|unsigned
name|mem_row_size_in_kb
decl_stmt|;
name|unsigned
name|shader_engine_tile_size
decl_stmt|;
name|unsigned
name|num_gpus
decl_stmt|;
name|unsigned
name|multi_gpu_tile_size
decl_stmt|;
name|unsigned
name|tile_config
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|si_asic
block|{
name|unsigned
name|max_shader_engines
decl_stmt|;
name|unsigned
name|max_tile_pipes
decl_stmt|;
name|unsigned
name|max_cu_per_sh
decl_stmt|;
name|unsigned
name|max_sh_per_se
decl_stmt|;
name|unsigned
name|max_backends_per_se
decl_stmt|;
name|unsigned
name|max_texture_channel_caches
decl_stmt|;
name|unsigned
name|max_gprs
decl_stmt|;
name|unsigned
name|max_gs_threads
decl_stmt|;
name|unsigned
name|max_hw_contexts
decl_stmt|;
name|unsigned
name|sc_prim_fifo_size_frontend
decl_stmt|;
name|unsigned
name|sc_prim_fifo_size_backend
decl_stmt|;
name|unsigned
name|sc_hiz_tile_fifo_size
decl_stmt|;
name|unsigned
name|sc_earlyz_tile_fifo_size
decl_stmt|;
name|unsigned
name|num_tile_pipes
decl_stmt|;
name|unsigned
name|num_backends_per_se
decl_stmt|;
name|unsigned
name|backend_disable_mask_per_asic
decl_stmt|;
name|unsigned
name|backend_map
decl_stmt|;
name|unsigned
name|num_texture_channel_caches
decl_stmt|;
name|unsigned
name|mem_max_burst_length_bytes
decl_stmt|;
name|unsigned
name|mem_row_size_in_kb
decl_stmt|;
name|unsigned
name|shader_engine_tile_size
decl_stmt|;
name|unsigned
name|num_gpus
decl_stmt|;
name|unsigned
name|multi_gpu_tile_size
decl_stmt|;
name|unsigned
name|tile_config
decl_stmt|;
block|}
struct|;
end_struct

begin_union
union|union
name|radeon_asic_config
block|{
name|struct
name|r300_asic
name|r300
decl_stmt|;
name|struct
name|r100_asic
name|r100
decl_stmt|;
name|struct
name|r600_asic
name|r600
decl_stmt|;
name|struct
name|rv770_asic
name|rv770
decl_stmt|;
name|struct
name|evergreen_asic
name|evergreen
decl_stmt|;
name|struct
name|cayman_asic
name|cayman
decl_stmt|;
name|struct
name|si_asic
name|si
decl_stmt|;
block|}
union|;
end_union

begin_comment
comment|/*  * asic initizalization from radeon_asic.c  */
end_comment

begin_function_decl
name|int
name|radeon_asic_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * IOCTL.  */
end_comment

begin_function_decl
name|int
name|radeon_gem_info_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|filp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_create_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|filp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_pin_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_unpin_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_pwrite_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_pread_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_set_domain_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|filp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_mmap_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|filp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_busy_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|filp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_wait_idle_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|filp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_va_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|filp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_cs_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|filp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_set_tiling_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|filp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gem_get_tiling_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|filp
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* VRAM scratch page for HDP bug, default vram page */
end_comment

begin_struct
struct|struct
name|r600_vram_scratch
block|{
name|struct
name|radeon_bo
modifier|*
name|robj
decl_stmt|;
specifier|volatile
name|uint32_t
modifier|*
name|ptr
decl_stmt|;
name|u64
name|gpu_addr
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * ACPI  */
end_comment

begin_struct
struct|struct
name|radeon_atif_notification_cfg
block|{
name|bool
name|enabled
decl_stmt|;
name|int
name|command_code
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|radeon_atif_notifications
block|{
name|bool
name|display_switch
decl_stmt|;
name|bool
name|expansion_mode_change
decl_stmt|;
name|bool
name|thermal_state
decl_stmt|;
name|bool
name|forced_power_state
decl_stmt|;
name|bool
name|system_power_state
decl_stmt|;
name|bool
name|display_conf_change
decl_stmt|;
name|bool
name|px_gfx_switch
decl_stmt|;
name|bool
name|brightness_change
decl_stmt|;
name|bool
name|dgpu_display_event
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|radeon_atif_functions
block|{
name|bool
name|system_params
decl_stmt|;
name|bool
name|sbios_requests
decl_stmt|;
name|bool
name|select_active_disp
decl_stmt|;
name|bool
name|lid_state
decl_stmt|;
name|bool
name|get_tv_standard
decl_stmt|;
name|bool
name|set_tv_standard
decl_stmt|;
name|bool
name|get_panel_expansion_mode
decl_stmt|;
name|bool
name|set_panel_expansion_mode
decl_stmt|;
name|bool
name|temperature_change
decl_stmt|;
name|bool
name|graphics_device_types
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|radeon_atif
block|{
name|struct
name|radeon_atif_notifications
name|notifications
decl_stmt|;
name|struct
name|radeon_atif_functions
name|functions
decl_stmt|;
name|struct
name|radeon_atif_notification_cfg
name|notification_cfg
decl_stmt|;
name|struct
name|radeon_encoder
modifier|*
name|encoder_for_bl
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|radeon_atcs_functions
block|{
name|bool
name|get_ext_state
decl_stmt|;
name|bool
name|pcie_perf_req
decl_stmt|;
name|bool
name|pcie_dev_rdy
decl_stmt|;
name|bool
name|pcie_bus_width
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|radeon_atcs
block|{
name|struct
name|radeon_atcs_functions
name|functions
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Core structure, functions and helpers.  */
end_comment

begin_typedef
typedef|typedef
name|uint32_t
function_decl|(
modifier|*
name|radeon_rreg_t
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|radeon_wreg_t
function_decl|)
parameter_list|(
name|struct
name|radeon_device
modifier|*
parameter_list|,
name|uint32_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|radeon_device
block|{
name|device_t
name|dev
decl_stmt|;
name|struct
name|drm_device
modifier|*
name|ddev
decl_stmt|;
name|struct
name|sx
name|exclusive_lock
decl_stmt|;
comment|/* ASIC */
name|union
name|radeon_asic_config
name|config
decl_stmt|;
name|enum
name|radeon_family
name|family
decl_stmt|;
name|unsigned
name|long
name|flags
decl_stmt|;
name|int
name|usec_timeout
decl_stmt|;
name|enum
name|radeon_pll_errata
name|pll_errata
decl_stmt|;
name|int
name|num_gb_pipes
decl_stmt|;
name|int
name|num_z_pipes
decl_stmt|;
name|int
name|disp_priority
decl_stmt|;
comment|/* BIOS */
name|uint8_t
modifier|*
name|bios
decl_stmt|;
name|bool
name|is_atom_bios
decl_stmt|;
name|uint16_t
name|bios_header_start
decl_stmt|;
name|struct
name|radeon_bo
modifier|*
name|stollen_vga_memory
decl_stmt|;
comment|/* Register mmio */
name|resource_size_t
name|rmmio_base
decl_stmt|;
name|resource_size_t
name|rmmio_size
decl_stmt|;
comment|/* protects concurrent MM_INDEX/DATA based register access */
name|struct
name|mtx
name|mmio_idx_lock
decl_stmt|;
name|int
name|rmmio_rid
decl_stmt|;
name|struct
name|resource
modifier|*
name|rmmio
decl_stmt|;
name|radeon_rreg_t
name|mc_rreg
decl_stmt|;
name|radeon_wreg_t
name|mc_wreg
decl_stmt|;
name|radeon_rreg_t
name|pll_rreg
decl_stmt|;
name|radeon_wreg_t
name|pll_wreg
decl_stmt|;
name|uint32_t
name|pcie_reg_mask
decl_stmt|;
name|radeon_rreg_t
name|pciep_rreg
decl_stmt|;
name|radeon_wreg_t
name|pciep_wreg
decl_stmt|;
comment|/* io port */
name|int
name|rio_rid
decl_stmt|;
name|struct
name|resource
modifier|*
name|rio_mem
decl_stmt|;
name|resource_size_t
name|rio_mem_size
decl_stmt|;
name|struct
name|radeon_clock
name|clock
decl_stmt|;
name|struct
name|radeon_mc
name|mc
decl_stmt|;
name|struct
name|radeon_gart
name|gart
decl_stmt|;
name|struct
name|radeon_mode_info
name|mode_info
decl_stmt|;
name|struct
name|radeon_scratch
name|scratch
decl_stmt|;
name|struct
name|radeon_mman
name|mman
decl_stmt|;
name|struct
name|radeon_fence_driver
name|fence_drv
index|[
name|RADEON_NUM_RINGS
index|]
decl_stmt|;
name|struct
name|cv
name|fence_queue
decl_stmt|;
name|struct
name|mtx
name|fence_queue_mtx
decl_stmt|;
name|struct
name|sx
name|ring_lock
decl_stmt|;
name|struct
name|radeon_ring
name|ring
index|[
name|RADEON_NUM_RINGS
index|]
decl_stmt|;
name|bool
name|ib_pool_ready
decl_stmt|;
name|struct
name|radeon_sa_manager
name|ring_tmp_bo
decl_stmt|;
name|struct
name|radeon_irq
name|irq
decl_stmt|;
name|struct
name|radeon_asic
modifier|*
name|asic
decl_stmt|;
name|struct
name|radeon_gem
name|gem
decl_stmt|;
name|struct
name|radeon_pm
name|pm
decl_stmt|;
name|uint32_t
name|bios_scratch
index|[
name|RADEON_BIOS_NUM_SCRATCH
index|]
decl_stmt|;
name|struct
name|radeon_wb
name|wb
decl_stmt|;
name|struct
name|radeon_dummy_page
name|dummy_page
decl_stmt|;
name|bool
name|shutdown
decl_stmt|;
name|bool
name|suspend
decl_stmt|;
name|bool
name|need_dma32
decl_stmt|;
name|bool
name|accel_working
decl_stmt|;
name|bool
name|fictitious_range_registered
decl_stmt|;
name|bool
name|fictitious_agp_range_registered
decl_stmt|;
name|struct
name|radeon_surface_reg
name|surface_regs
index|[
name|RADEON_GEM_MAX_SURFACES
index|]
decl_stmt|;
specifier|const
name|struct
name|firmware
modifier|*
name|me_fw
decl_stmt|;
comment|/* all family ME firmware */
specifier|const
name|struct
name|firmware
modifier|*
name|pfp_fw
decl_stmt|;
comment|/* r6/700 PFP firmware */
specifier|const
name|struct
name|firmware
modifier|*
name|rlc_fw
decl_stmt|;
comment|/* r6/700 RLC firmware */
specifier|const
name|struct
name|firmware
modifier|*
name|mc_fw
decl_stmt|;
comment|/* NI MC firmware */
specifier|const
name|struct
name|firmware
modifier|*
name|ce_fw
decl_stmt|;
comment|/* SI CE firmware */
name|struct
name|r600_blit
name|r600_blit
decl_stmt|;
name|struct
name|r600_vram_scratch
name|vram_scratch
decl_stmt|;
name|int
name|msi_enabled
decl_stmt|;
comment|/* msi enabled */
name|struct
name|r600_ih
name|ih
decl_stmt|;
comment|/* r6/700 interrupt ring */
name|struct
name|si_rlc
name|rlc
decl_stmt|;
name|struct
name|taskqueue
modifier|*
name|tq
decl_stmt|;
name|struct
name|task
name|hotplug_work
decl_stmt|;
name|struct
name|task
name|audio_work
decl_stmt|;
name|int
name|num_crtc
decl_stmt|;
comment|/* number of crtcs */
name|struct
name|sx
name|dc_hw_i2c_mutex
decl_stmt|;
comment|/* display controller hw i2c mutex */
name|bool
name|audio_enabled
decl_stmt|;
name|struct
name|r600_audio
name|audio_status
decl_stmt|;
comment|/* audio stuff */
if|#
directive|if
name|defined
argument_list|(
name|CONFIG_ACPI
argument_list|)
struct|struct
block|{
name|ACPI_HANDLE
name|handle
decl_stmt|;
name|ACPI_NOTIFY_HANDLER
name|notifier_call
decl_stmt|;
block|}
name|acpi
struct|;
endif|#
directive|endif
comment|/* only one userspace can use Hyperz features or CMASK at a time */
name|struct
name|drm_file
modifier|*
name|hyperz_filp
decl_stmt|;
name|struct
name|drm_file
modifier|*
name|cmask_filp
decl_stmt|;
comment|/* i2c buses */
name|struct
name|radeon_i2c_chan
modifier|*
name|i2c_bus
index|[
name|RADEON_MAX_I2C_BUS
index|]
decl_stmt|;
comment|/* debugfs */
name|struct
name|radeon_debugfs
name|debugfs
index|[
name|RADEON_DEBUGFS_MAX_COMPONENTS
index|]
decl_stmt|;
name|unsigned
name|debugfs_count
decl_stmt|;
comment|/* virtual memory */
name|struct
name|radeon_vm_manager
name|vm_manager
decl_stmt|;
name|struct
name|sx
name|gpu_clock_mutex
decl_stmt|;
comment|/* ACPI interface */
name|struct
name|radeon_atif
name|atif
decl_stmt|;
name|struct
name|radeon_atcs
name|atcs
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|radeon_device_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|drm_device
modifier|*
name|ddev
parameter_list|,
name|uint32_t
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_device_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_gpu_wait_for_idle
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|r100_mm_rreg
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint32_t
name|reg
parameter_list|,
name|bool
name|always_indirect
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|r100_mm_wreg
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint32_t
name|reg
parameter_list|,
name|uint32_t
name|v
parameter_list|,
name|bool
name|always_indirect
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|r100_io_rreg
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|u32
name|reg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|r100_io_wreg
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|u32
name|reg
parameter_list|,
name|u32
name|v
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Cast helper  */
end_comment

begin_define
define|#
directive|define
name|to_radeon_fence
parameter_list|(
name|p
parameter_list|)
value|((struct radeon_fence *)(p))
end_define

begin_comment
comment|/*  * Registers read& write functions.  */
end_comment

begin_define
define|#
directive|define
name|RREG8
parameter_list|(
name|reg
parameter_list|)
value|bus_read_1((rdev->rmmio), (reg))
end_define

begin_define
define|#
directive|define
name|WREG8
parameter_list|(
name|reg
parameter_list|,
name|v
parameter_list|)
value|bus_write_1((rdev->rmmio), (reg), v)
end_define

begin_define
define|#
directive|define
name|RREG16
parameter_list|(
name|reg
parameter_list|)
value|bus_read_2((rdev->rmmio), (reg))
end_define

begin_define
define|#
directive|define
name|WREG16
parameter_list|(
name|reg
parameter_list|,
name|v
parameter_list|)
value|bus_write_2((rdev->rmmio), (reg), v)
end_define

begin_define
define|#
directive|define
name|RREG32
parameter_list|(
name|reg
parameter_list|)
value|r100_mm_rreg(rdev, (reg), false)
end_define

begin_define
define|#
directive|define
name|RREG32_IDX
parameter_list|(
name|reg
parameter_list|)
value|r100_mm_rreg(rdev, (reg), true)
end_define

begin_define
define|#
directive|define
name|DREG32
parameter_list|(
name|reg
parameter_list|)
value|DRM_INFO("REGISTER: " #reg " : 0x%08X\n", r100_mm_rreg(rdev, (reg)))
end_define

begin_define
define|#
directive|define
name|WREG32
parameter_list|(
name|reg
parameter_list|,
name|v
parameter_list|)
value|r100_mm_wreg(rdev, (reg), (v), false)
end_define

begin_define
define|#
directive|define
name|WREG32_IDX
parameter_list|(
name|reg
parameter_list|,
name|v
parameter_list|)
value|r100_mm_wreg(rdev, (reg), (v), true)
end_define

begin_define
define|#
directive|define
name|REG_SET
parameter_list|(
name|FIELD
parameter_list|,
name|v
parameter_list|)
value|(((v)<< FIELD##_SHIFT)& FIELD##_MASK)
end_define

begin_define
define|#
directive|define
name|REG_GET
parameter_list|(
name|FIELD
parameter_list|,
name|v
parameter_list|)
value|(((v)<< FIELD##_SHIFT)& FIELD##_MASK)
end_define

begin_define
define|#
directive|define
name|RREG32_PLL
parameter_list|(
name|reg
parameter_list|)
value|rdev->pll_rreg(rdev, (reg))
end_define

begin_define
define|#
directive|define
name|WREG32_PLL
parameter_list|(
name|reg
parameter_list|,
name|v
parameter_list|)
value|rdev->pll_wreg(rdev, (reg), (v))
end_define

begin_define
define|#
directive|define
name|RREG32_MC
parameter_list|(
name|reg
parameter_list|)
value|rdev->mc_rreg(rdev, (reg))
end_define

begin_define
define|#
directive|define
name|WREG32_MC
parameter_list|(
name|reg
parameter_list|,
name|v
parameter_list|)
value|rdev->mc_wreg(rdev, (reg), (v))
end_define

begin_define
define|#
directive|define
name|RREG32_PCIE
parameter_list|(
name|reg
parameter_list|)
value|rv370_pcie_rreg(rdev, (reg))
end_define

begin_define
define|#
directive|define
name|WREG32_PCIE
parameter_list|(
name|reg
parameter_list|,
name|v
parameter_list|)
value|rv370_pcie_wreg(rdev, (reg), (v))
end_define

begin_define
define|#
directive|define
name|RREG32_PCIE_P
parameter_list|(
name|reg
parameter_list|)
value|rdev->pciep_rreg(rdev, (reg))
end_define

begin_define
define|#
directive|define
name|WREG32_PCIE_P
parameter_list|(
name|reg
parameter_list|,
name|v
parameter_list|)
value|rdev->pciep_wreg(rdev, (reg), (v))
end_define

begin_define
define|#
directive|define
name|WREG32_P
parameter_list|(
name|reg
parameter_list|,
name|val
parameter_list|,
name|mask
parameter_list|)
define|\
value|do {							\ 		uint32_t tmp_ = RREG32(reg);			\ 		tmp_&= (mask);					\ 		tmp_ |= ((val)& ~(mask));			\ 		WREG32(reg, tmp_);				\ 	} while (0)
end_define

begin_define
define|#
directive|define
name|WREG32_PLL_P
parameter_list|(
name|reg
parameter_list|,
name|val
parameter_list|,
name|mask
parameter_list|)
define|\
value|do {							\ 		uint32_t tmp_ = RREG32_PLL(reg);		\ 		tmp_&= (mask);					\ 		tmp_ |= ((val)& ~(mask));			\ 		WREG32_PLL(reg, tmp_);				\ 	} while (0)
end_define

begin_define
define|#
directive|define
name|DREG32_SYS
parameter_list|(
name|sqf
parameter_list|,
name|rdev
parameter_list|,
name|reg
parameter_list|)
value|seq_printf((sqf), #reg " : 0x%08X\n", r100_mm_rreg((rdev), (reg), false))
end_define

begin_define
define|#
directive|define
name|RREG32_IO
parameter_list|(
name|reg
parameter_list|)
value|r100_io_rreg(rdev, (reg))
end_define

begin_define
define|#
directive|define
name|WREG32_IO
parameter_list|(
name|reg
parameter_list|,
name|v
parameter_list|)
value|r100_io_wreg(rdev, (reg), (v))
end_define

begin_comment
comment|/*  * Indirect registers accessor  */
end_comment

begin_function
specifier|static
specifier|inline
name|uint32_t
name|rv370_pcie_rreg
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint32_t
name|reg
parameter_list|)
block|{
name|uint32_t
name|r
decl_stmt|;
name|WREG32
argument_list|(
name|RADEON_PCIE_INDEX
argument_list|,
operator|(
operator|(
name|reg
operator|)
operator|&
name|rdev
operator|->
name|pcie_reg_mask
operator|)
argument_list|)
expr_stmt|;
name|r
operator|=
name|RREG32
argument_list|(
name|RADEON_PCIE_DATA
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|rv370_pcie_wreg
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint32_t
name|reg
parameter_list|,
name|uint32_t
name|v
parameter_list|)
block|{
name|WREG32
argument_list|(
name|RADEON_PCIE_INDEX
argument_list|,
operator|(
operator|(
name|reg
operator|)
operator|&
name|rdev
operator|->
name|pcie_reg_mask
operator|)
argument_list|)
expr_stmt|;
name|WREG32
argument_list|(
name|RADEON_PCIE_DATA
argument_list|,
operator|(
name|v
operator|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function_decl
name|void
name|r100_pll_errata_after_index
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * ASICs helpers.  */
end_comment

begin_define
define|#
directive|define
name|ASIC_IS_RN50
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->ddev->pci_device == 0x515e) || \ 			    (rdev->ddev->pci_device == 0x5969))
end_define

begin_define
define|#
directive|define
name|ASIC_IS_RV100
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->family == CHIP_RV100) || \ 		(rdev->family == CHIP_RV200) || \ 		(rdev->family == CHIP_RS100) || \ 		(rdev->family == CHIP_RS200) || \ 		(rdev->family == CHIP_RV250) || \ 		(rdev->family == CHIP_RV280) || \ 		(rdev->family == CHIP_RS300))
end_define

begin_define
define|#
directive|define
name|ASIC_IS_R300
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->family == CHIP_R300)  ||	\ 		(rdev->family == CHIP_RV350) ||			\ 		(rdev->family == CHIP_R350)  ||			\ 		(rdev->family == CHIP_RV380) ||			\ 		(rdev->family == CHIP_R420)  ||			\ 		(rdev->family == CHIP_R423)  ||			\ 		(rdev->family == CHIP_RV410) ||			\ 		(rdev->family == CHIP_RS400) ||			\ 		(rdev->family == CHIP_RS480))
end_define

begin_define
define|#
directive|define
name|ASIC_IS_X2
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->ddev->pci_device == 0x9441) || \ 		(rdev->ddev->pci_device == 0x9443) || \ 		(rdev->ddev->pci_device == 0x944B) || \ 		(rdev->ddev->pci_device == 0x9506) || \ 		(rdev->ddev->pci_device == 0x9509) || \ 		(rdev->ddev->pci_device == 0x950F) || \ 		(rdev->ddev->pci_device == 0x689C) || \ 		(rdev->ddev->pci_device == 0x689D))
end_define

begin_define
define|#
directive|define
name|ASIC_IS_AVIVO
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->family>= CHIP_RS600))
end_define

begin_define
define|#
directive|define
name|ASIC_IS_DCE2
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->family == CHIP_RS600)  ||	\ 			    (rdev->family == CHIP_RS690)  ||	\ 			    (rdev->family == CHIP_RS740)  ||	\ 			    (rdev->family>= CHIP_R600))
end_define

begin_define
define|#
directive|define
name|ASIC_IS_DCE3
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->family>= CHIP_RV620))
end_define

begin_define
define|#
directive|define
name|ASIC_IS_DCE32
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->family>= CHIP_RV730))
end_define

begin_define
define|#
directive|define
name|ASIC_IS_DCE4
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->family>= CHIP_CEDAR))
end_define

begin_define
define|#
directive|define
name|ASIC_IS_DCE41
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->family>= CHIP_PALM)&& \ 			     (rdev->flags& RADEON_IS_IGP))
end_define

begin_define
define|#
directive|define
name|ASIC_IS_DCE5
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->family>= CHIP_BARTS))
end_define

begin_define
define|#
directive|define
name|ASIC_IS_DCE6
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->family>= CHIP_ARUBA))
end_define

begin_define
define|#
directive|define
name|ASIC_IS_DCE61
parameter_list|(
name|rdev
parameter_list|)
value|((rdev->family>= CHIP_ARUBA)&& \ 			     (rdev->flags& RADEON_IS_IGP))
end_define

begin_comment
comment|/*  * BIOS helpers.  */
end_comment

begin_define
define|#
directive|define
name|RBIOS8
parameter_list|(
name|i
parameter_list|)
value|(rdev->bios[i])
end_define

begin_define
define|#
directive|define
name|RBIOS16
parameter_list|(
name|i
parameter_list|)
value|(RBIOS8(i) | (RBIOS8((i)+1)<< 8))
end_define

begin_define
define|#
directive|define
name|RBIOS32
parameter_list|(
name|i
parameter_list|)
value|((RBIOS16(i)) | (RBIOS16((i)+2)<< 16))
end_define

begin_function_decl
name|int
name|radeon_combios_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_combios_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_atombios_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_atombios_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * RING helpers.  */
end_comment

begin_if
if|#
directive|if
name|DRM_DEBUG_CODE
operator|==
literal|0
end_if

begin_function
specifier|static
specifier|inline
name|void
name|radeon_ring_write
parameter_list|(
name|struct
name|radeon_ring
modifier|*
name|ring
parameter_list|,
name|uint32_t
name|v
parameter_list|)
block|{
name|ring
operator|->
name|ring
index|[
name|ring
operator|->
name|wptr
operator|++
index|]
operator|=
name|v
expr_stmt|;
name|ring
operator|->
name|wptr
operator|&=
name|ring
operator|->
name|ptr_mask
expr_stmt|;
name|ring
operator|->
name|count_dw
operator|--
expr_stmt|;
name|ring
operator|->
name|ring_free_dw
operator|--
expr_stmt|;
block|}
end_function

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* With debugging this is just too big to inline */
end_comment

begin_function_decl
name|void
name|radeon_ring_write
parameter_list|(
name|struct
name|radeon_ring
modifier|*
name|ring
parameter_list|,
name|uint32_t
name|v
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * ASICs macro.  */
end_comment

begin_define
define|#
directive|define
name|radeon_init
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->init((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_fini
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->fini((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_resume
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->resume((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_suspend
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->suspend((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_cs_parse
parameter_list|(
name|rdev
parameter_list|,
name|r
parameter_list|,
name|p
parameter_list|)
value|(rdev)->asic->ring[(r)].cs_parse((p))
end_define

begin_define
define|#
directive|define
name|radeon_vga_set_state
parameter_list|(
name|rdev
parameter_list|,
name|state
parameter_list|)
value|(rdev)->asic->vga_set_state((rdev), (state))
end_define

begin_define
define|#
directive|define
name|radeon_asic_reset
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->asic_reset((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_gart_tlb_flush
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->gart.tlb_flush((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_gart_set_page
parameter_list|(
name|rdev
parameter_list|,
name|i
parameter_list|,
name|p
parameter_list|)
value|(rdev)->asic->gart.set_page((rdev), (i), (p))
end_define

begin_define
define|#
directive|define
name|radeon_asic_vm_init
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->vm.init((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_asic_vm_fini
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->vm.fini((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_asic_vm_set_page
parameter_list|(
name|rdev
parameter_list|,
name|pe
parameter_list|,
name|addr
parameter_list|,
name|count
parameter_list|,
name|incr
parameter_list|,
name|flags
parameter_list|)
value|((rdev)->asic->vm.set_page((rdev), (pe), (addr), (count), (incr), (flags)))
end_define

begin_define
define|#
directive|define
name|radeon_ring_start
parameter_list|(
name|rdev
parameter_list|,
name|r
parameter_list|,
name|cp
parameter_list|)
value|(rdev)->asic->ring[(r)].ring_start((rdev), (cp))
end_define

begin_define
define|#
directive|define
name|radeon_ring_test
parameter_list|(
name|rdev
parameter_list|,
name|r
parameter_list|,
name|cp
parameter_list|)
value|(rdev)->asic->ring[(r)].ring_test((rdev), (cp))
end_define

begin_define
define|#
directive|define
name|radeon_ib_test
parameter_list|(
name|rdev
parameter_list|,
name|r
parameter_list|,
name|cp
parameter_list|)
value|(rdev)->asic->ring[(r)].ib_test((rdev), (cp))
end_define

begin_define
define|#
directive|define
name|radeon_ring_ib_execute
parameter_list|(
name|rdev
parameter_list|,
name|r
parameter_list|,
name|ib
parameter_list|)
value|(rdev)->asic->ring[(r)].ib_execute((rdev), (ib))
end_define

begin_define
define|#
directive|define
name|radeon_ring_ib_parse
parameter_list|(
name|rdev
parameter_list|,
name|r
parameter_list|,
name|ib
parameter_list|)
value|(rdev)->asic->ring[(r)].ib_parse((rdev), (ib))
end_define

begin_define
define|#
directive|define
name|radeon_ring_is_lockup
parameter_list|(
name|rdev
parameter_list|,
name|r
parameter_list|,
name|cp
parameter_list|)
value|(rdev)->asic->ring[(r)].is_lockup((rdev), (cp))
end_define

begin_define
define|#
directive|define
name|radeon_ring_vm_flush
parameter_list|(
name|rdev
parameter_list|,
name|r
parameter_list|,
name|vm
parameter_list|)
value|(rdev)->asic->ring[(r)].vm_flush((rdev), (r), (vm))
end_define

begin_define
define|#
directive|define
name|radeon_irq_set
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->irq.set((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_irq_process
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->irq.process((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_get_vblank_counter
parameter_list|(
name|rdev
parameter_list|,
name|crtc
parameter_list|)
value|(rdev)->asic->display.get_vblank_counter((rdev), (crtc))
end_define

begin_define
define|#
directive|define
name|radeon_set_backlight_level
parameter_list|(
name|rdev
parameter_list|,
name|e
parameter_list|,
name|l
parameter_list|)
value|(rdev)->asic->display.set_backlight_level((e), (l))
end_define

begin_define
define|#
directive|define
name|radeon_get_backlight_level
parameter_list|(
name|rdev
parameter_list|,
name|e
parameter_list|)
value|(rdev)->asic->display.get_backlight_level((e))
end_define

begin_define
define|#
directive|define
name|radeon_fence_ring_emit
parameter_list|(
name|rdev
parameter_list|,
name|r
parameter_list|,
name|fence
parameter_list|)
value|(rdev)->asic->ring[(r)].emit_fence((rdev), (fence))
end_define

begin_define
define|#
directive|define
name|radeon_semaphore_ring_emit
parameter_list|(
name|rdev
parameter_list|,
name|r
parameter_list|,
name|cp
parameter_list|,
name|semaphore
parameter_list|,
name|emit_wait
parameter_list|)
value|(rdev)->asic->ring[(r)].emit_semaphore((rdev), (cp), (semaphore), (emit_wait))
end_define

begin_define
define|#
directive|define
name|radeon_copy_blit
parameter_list|(
name|rdev
parameter_list|,
name|s
parameter_list|,
name|d
parameter_list|,
name|np
parameter_list|,
name|f
parameter_list|)
value|(rdev)->asic->copy.blit((rdev), (s), (d), (np), (f))
end_define

begin_define
define|#
directive|define
name|radeon_copy_dma
parameter_list|(
name|rdev
parameter_list|,
name|s
parameter_list|,
name|d
parameter_list|,
name|np
parameter_list|,
name|f
parameter_list|)
value|(rdev)->asic->copy.dma((rdev), (s), (d), (np), (f))
end_define

begin_define
define|#
directive|define
name|radeon_copy
parameter_list|(
name|rdev
parameter_list|,
name|s
parameter_list|,
name|d
parameter_list|,
name|np
parameter_list|,
name|f
parameter_list|)
value|(rdev)->asic->copy.copy((rdev), (s), (d), (np), (f))
end_define

begin_define
define|#
directive|define
name|radeon_copy_blit_ring_index
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->copy.blit_ring_index
end_define

begin_define
define|#
directive|define
name|radeon_copy_dma_ring_index
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->copy.dma_ring_index
end_define

begin_define
define|#
directive|define
name|radeon_copy_ring_index
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->copy.copy_ring_index
end_define

begin_define
define|#
directive|define
name|radeon_get_engine_clock
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->pm.get_engine_clock((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_set_engine_clock
parameter_list|(
name|rdev
parameter_list|,
name|e
parameter_list|)
value|(rdev)->asic->pm.set_engine_clock((rdev), (e))
end_define

begin_define
define|#
directive|define
name|radeon_get_memory_clock
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->pm.get_memory_clock((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_set_memory_clock
parameter_list|(
name|rdev
parameter_list|,
name|e
parameter_list|)
value|(rdev)->asic->pm.set_memory_clock((rdev), (e))
end_define

begin_define
define|#
directive|define
name|radeon_get_pcie_lanes
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->pm.get_pcie_lanes((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_set_pcie_lanes
parameter_list|(
name|rdev
parameter_list|,
name|l
parameter_list|)
value|(rdev)->asic->pm.set_pcie_lanes((rdev), (l))
end_define

begin_define
define|#
directive|define
name|radeon_set_clock_gating
parameter_list|(
name|rdev
parameter_list|,
name|e
parameter_list|)
value|(rdev)->asic->pm.set_clock_gating((rdev), (e))
end_define

begin_define
define|#
directive|define
name|radeon_set_surface_reg
parameter_list|(
name|rdev
parameter_list|,
name|r
parameter_list|,
name|f
parameter_list|,
name|p
parameter_list|,
name|o
parameter_list|,
name|s
parameter_list|)
value|((rdev)->asic->surface.set_reg((rdev), (r), (f), (p), (o), (s)))
end_define

begin_define
define|#
directive|define
name|radeon_clear_surface_reg
parameter_list|(
name|rdev
parameter_list|,
name|r
parameter_list|)
value|((rdev)->asic->surface.clear_reg((rdev), (r)))
end_define

begin_define
define|#
directive|define
name|radeon_bandwidth_update
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->display.bandwidth_update((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_hpd_init
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->hpd.init((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_hpd_fini
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->hpd.fini((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_hpd_sense
parameter_list|(
name|rdev
parameter_list|,
name|h
parameter_list|)
value|(rdev)->asic->hpd.sense((rdev), (h))
end_define

begin_define
define|#
directive|define
name|radeon_hpd_set_polarity
parameter_list|(
name|rdev
parameter_list|,
name|h
parameter_list|)
value|(rdev)->asic->hpd.set_polarity((rdev), (h))
end_define

begin_define
define|#
directive|define
name|radeon_gui_idle
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->gui_idle((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_pm_misc
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->pm.misc((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_pm_prepare
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->pm.prepare((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_pm_finish
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->pm.finish((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_pm_init_profile
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->pm.init_profile((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_pm_get_dynpm_state
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->pm.get_dynpm_state((rdev))
end_define

begin_define
define|#
directive|define
name|radeon_pre_page_flip
parameter_list|(
name|rdev
parameter_list|,
name|crtc
parameter_list|)
value|(rdev)->asic->pflip.pre_page_flip((rdev), (crtc))
end_define

begin_define
define|#
directive|define
name|radeon_page_flip
parameter_list|(
name|rdev
parameter_list|,
name|crtc
parameter_list|,
name|base
parameter_list|)
value|(rdev)->asic->pflip.page_flip((rdev), (crtc), (base))
end_define

begin_define
define|#
directive|define
name|radeon_post_page_flip
parameter_list|(
name|rdev
parameter_list|,
name|crtc
parameter_list|)
value|(rdev)->asic->pflip.post_page_flip((rdev), (crtc))
end_define

begin_define
define|#
directive|define
name|radeon_wait_for_vblank
parameter_list|(
name|rdev
parameter_list|,
name|crtc
parameter_list|)
value|(rdev)->asic->display.wait_for_vblank((rdev), (crtc))
end_define

begin_define
define|#
directive|define
name|radeon_mc_wait_for_idle
parameter_list|(
name|rdev
parameter_list|)
value|(rdev)->asic->mc_wait_for_idle((rdev))
end_define

begin_comment
comment|/* Common functions */
end_comment

begin_comment
comment|/* AGP */
end_comment

begin_function_decl
specifier|extern
name|int
name|radeon_gpu_reset
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_agp_disable
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_modeset_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_modeset_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|bool
name|radeon_card_posted
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_update_bandwidth_info
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_update_display_priority
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|bool
name|radeon_boot_test_post_card
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_scratch_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_wb_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_wb_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_wb_disable
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_surface_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_cs_parser_init
parameter_list|(
name|struct
name|radeon_cs_parser
modifier|*
name|p
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_ttm_placement_from_domain
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|rbo
parameter_list|,
name|u32
name|domain
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|bool
name|radeon_ttm_bo_is_radeon_bo
parameter_list|(
name|struct
name|ttm_buffer_object
modifier|*
name|bo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_vram_location
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_mc
modifier|*
name|mc
parameter_list|,
name|u64
name|base
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_gtt_location
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_mc
modifier|*
name|mc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_resume_kms
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_suspend_kms
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_ttm_set_active_vram_size
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|u64
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * vm  */
end_comment

begin_function_decl
name|int
name|radeon_vm_manager_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_vm_manager_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_vm_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_vm
modifier|*
name|vm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_vm_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_vm
modifier|*
name|vm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_vm_alloc_pt
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_vm
modifier|*
name|vm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_vm_add_to_lru
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_vm
modifier|*
name|vm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|radeon_fence
modifier|*
name|radeon_vm_grab_id
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_vm
modifier|*
name|vm
parameter_list|,
name|int
name|ring
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_vm_fence
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_vm
modifier|*
name|vm
parameter_list|,
name|struct
name|radeon_fence
modifier|*
name|fence
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint64_t
name|radeon_vm_map_gart
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|uint64_t
name|addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_vm_bo_update_pte
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_vm
modifier|*
name|vm
parameter_list|,
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|,
name|struct
name|ttm_mem_reg
modifier|*
name|mem
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_vm_bo_invalidate
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|radeon_bo_va
modifier|*
name|radeon_vm_bo_find
parameter_list|(
name|struct
name|radeon_vm
modifier|*
name|vm
parameter_list|,
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|radeon_bo_va
modifier|*
name|radeon_vm_bo_add
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_vm
modifier|*
name|vm
parameter_list|,
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_vm_bo_set_addr
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_bo_va
modifier|*
name|bo_va
parameter_list|,
name|uint64_t
name|offset
parameter_list|,
name|uint32_t
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radeon_vm_bo_rmv
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_bo_va
modifier|*
name|bo_va
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* audio */
end_comment

begin_function_decl
name|void
name|r600_audio_update_hdmi
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|,
name|int
name|pending
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * R600 vram scratch functions  */
end_comment

begin_function_decl
name|int
name|r600_vram_scratch_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|r600_vram_scratch_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * r600 cs checking helper  */
end_comment

begin_function_decl
name|unsigned
name|r600_mip_minify
parameter_list|(
name|unsigned
name|size
parameter_list|,
name|unsigned
name|level
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|r600_fmt_is_valid_color
parameter_list|(
name|u32
name|format
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|r600_fmt_is_valid_texture
parameter_list|(
name|u32
name|format
parameter_list|,
name|enum
name|radeon_family
name|family
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|r600_fmt_get_blocksize
parameter_list|(
name|u32
name|format
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|r600_fmt_get_nblocksx
parameter_list|(
name|u32
name|format
parameter_list|,
name|u32
name|w
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|r600_fmt_get_nblocksy
parameter_list|(
name|u32
name|format
parameter_list|,
name|u32
name|h
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * r600 functions used by radeon_encoder.c  */
end_comment

begin_struct
struct|struct
name|radeon_hdmi_acr
block|{
name|u32
name|clock
decl_stmt|;
name|int
name|n_32khz
decl_stmt|;
name|int
name|cts_32khz
decl_stmt|;
name|int
name|n_44_1khz
decl_stmt|;
name|int
name|cts_44_1khz
decl_stmt|;
name|int
name|n_48khz
decl_stmt|;
name|int
name|cts_48khz
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
specifier|extern
name|struct
name|radeon_hdmi_acr
name|r600_hdmi_acr
parameter_list|(
name|uint32_t
name|clock
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|r600_hdmi_enable
parameter_list|(
name|struct
name|drm_encoder
modifier|*
name|encoder
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|r600_hdmi_disable
parameter_list|(
name|struct
name|drm_encoder
modifier|*
name|encoder
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|r600_hdmi_setmode
parameter_list|(
name|struct
name|drm_encoder
modifier|*
name|encoder
parameter_list|,
name|struct
name|drm_display_mode
modifier|*
name|mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|u32
name|r6xx_remap_render_backend
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|u32
name|tiling_pipe_num
parameter_list|,
name|u32
name|max_rb_num
parameter_list|,
name|u32
name|total_max_rb_num
parameter_list|,
name|u32
name|enabled_rb_mask
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * evergreen functions used by radeon_encoder.c  */
end_comment

begin_function_decl
specifier|extern
name|void
name|evergreen_hdmi_setmode
parameter_list|(
name|struct
name|drm_encoder
modifier|*
name|encoder
parameter_list|,
name|struct
name|drm_display_mode
modifier|*
name|mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ni_init_microcode
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ni_mc_load_microcode
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ni_fini_microcode
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* radeon_acpi.c */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|CONFIG_ACPI
argument_list|)
end_if

begin_function_decl
specifier|extern
name|int
name|radeon_acpi_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_acpi_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_function
specifier|static
specifier|inline
name|int
name|radeon_acpi_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|radeon_acpi_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
block|{ }
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Prototypes added by @dumbbell. */
end_comment

begin_comment
comment|/* atombios_encoders.c */
end_comment

begin_function_decl
name|void
name|radeon_atom_backlight_init
parameter_list|(
name|struct
name|radeon_encoder
modifier|*
name|radeon_encoder
parameter_list|,
name|struct
name|drm_connector
modifier|*
name|drm_connector
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_add_atom_encoder
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|uint32_t
name|encoder_enum
parameter_list|,
name|uint32_t
name|supported_device
parameter_list|,
name|u16
name|caps
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* radeon_atombios.c */
end_comment

begin_function_decl
name|bool
name|radeon_atom_get_tv_timings
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|int
name|index
parameter_list|,
name|struct
name|drm_display_mode
modifier|*
name|mode
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* radeon_combios.c */
end_comment

begin_function_decl
name|void
name|radeon_combios_connected_scratch_regs
parameter_list|(
name|struct
name|drm_connector
modifier|*
name|connector
parameter_list|,
name|struct
name|drm_encoder
modifier|*
name|encoder
parameter_list|,
name|bool
name|connected
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* radeon_connectors.c */
end_comment

begin_function_decl
name|void
name|radeon_atombios_connected_scratch_regs
parameter_list|(
name|struct
name|drm_connector
modifier|*
name|connector
parameter_list|,
name|struct
name|drm_encoder
modifier|*
name|encoder
parameter_list|,
name|bool
name|connected
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_add_legacy_connector
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|uint32_t
name|connector_id
parameter_list|,
name|uint32_t
name|supported_device
parameter_list|,
name|int
name|connector_type
parameter_list|,
name|struct
name|radeon_i2c_bus_rec
modifier|*
name|i2c_bus
parameter_list|,
name|uint16_t
name|connector_object_id
parameter_list|,
name|struct
name|radeon_hpd
modifier|*
name|hpd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_add_atom_connector
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|uint32_t
name|connector_id
parameter_list|,
name|uint32_t
name|supported_device
parameter_list|,
name|int
name|connector_type
parameter_list|,
name|struct
name|radeon_i2c_bus_rec
modifier|*
name|i2c_bus
parameter_list|,
name|uint32_t
name|igp_lane_info
parameter_list|,
name|uint16_t
name|connector_object_id
parameter_list|,
name|struct
name|radeon_hpd
modifier|*
name|hpd
parameter_list|,
name|struct
name|radeon_router
modifier|*
name|router
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* radeon_encoders.c */
end_comment

begin_function_decl
name|uint32_t
name|radeon_get_encoder_enum
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|uint32_t
name|supported_device
parameter_list|,
name|uint8_t
name|dac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_link_encoder_connector
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* radeon_legacy_encoders.c */
end_comment

begin_function_decl
name|void
name|radeon_add_legacy_encoder
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|uint32_t
name|encoder_enum
parameter_list|,
name|uint32_t
name|supported_device
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_legacy_backlight_init
parameter_list|(
name|struct
name|radeon_encoder
modifier|*
name|radeon_encoder
parameter_list|,
name|struct
name|drm_connector
modifier|*
name|drm_connector
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* radeon_pm.c */
end_comment

begin_function_decl
name|void
name|radeon_pm_acpi_event_handler
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* radeon_ttm.c */
end_comment

begin_function_decl
name|int
name|radeon_ttm_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radeon_ttm_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* radeon_fb.c */
end_comment

begin_function_decl
name|struct
name|fb_info
modifier|*
name|radeon_fb_helper_getinfo
parameter_list|(
name|device_t
name|kdev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* r600.c */
end_comment

begin_function_decl
name|int
name|r600_ih_ring_alloc
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|r600_ih_ring_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_include
include|#
directive|include
file|"radeon_object.h"
end_include

begin_endif
endif|#
directive|endif
end_endif

end_unit

