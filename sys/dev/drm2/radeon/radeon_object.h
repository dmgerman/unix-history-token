begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2008 Advanced Micro Devices, Inc.  * Copyright 2008 Red Hat Inc.  * Copyright 2009 Jerome Glisse.  *  * Permission is hereby granted, free of charge, to any person obtaining a  * copy of this software and associated documentation files (the "Software"),  * to deal in the Software without restriction, including without limitation  * the rights to use, copy, modify, merge, publish, distribute, sublicense,  * and/or sell copies of the Software, and to permit persons to whom the  * Software is furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice shall be included in  * all copies or substantial portions of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL  * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR  * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR  * OTHER DEALINGS IN THE SOFTWARE.  *  * Authors: Dave Airlie  *          Alex Deucher  *          Jerome Glisse  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|__RADEON_OBJECT_H__
end_ifndef

begin_define
define|#
directive|define
name|__RADEON_OBJECT_H__
end_define

begin_include
include|#
directive|include
file|<dev/drm2/radeon/radeon_drm.h>
end_include

begin_include
include|#
directive|include
file|"radeon.h"
end_include

begin_comment
comment|/*  * Undefine max_offset (defined in vm/vm_map.h), because it conflicts  * with an argument of the function radeon_bo_pin_restricted().  */
end_comment

begin_undef
undef|#
directive|undef
name|max_offset
end_undef

begin_comment
comment|/**  * radeon_mem_type_to_domain - return domain corresponding to mem_type  * @mem_type:	ttm memory type  *  * Returns corresponding domain of the ttm mem_type  */
end_comment

begin_function
specifier|static
specifier|inline
name|unsigned
name|radeon_mem_type_to_domain
parameter_list|(
name|u32
name|mem_type
parameter_list|)
block|{
switch|switch
condition|(
name|mem_type
condition|)
block|{
case|case
name|TTM_PL_VRAM
case|:
return|return
name|RADEON_GEM_DOMAIN_VRAM
return|;
case|case
name|TTM_PL_TT
case|:
return|return
name|RADEON_GEM_DOMAIN_GTT
return|;
case|case
name|TTM_PL_SYSTEM
case|:
return|return
name|RADEON_GEM_DOMAIN_CPU
return|;
default|default:
break|break;
block|}
return|return
literal|0
return|;
block|}
end_function

begin_function_decl
name|int
name|radeon_bo_reserve
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|,
name|bool
name|no_intr
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|void
name|radeon_bo_unreserve
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
block|{
name|ttm_bo_unreserve
argument_list|(
operator|&
name|bo
operator|->
name|tbo
argument_list|)
expr_stmt|;
block|}
end_function

begin_comment
comment|/**  * radeon_bo_gpu_offset - return GPU offset of bo  * @bo:	radeon object for which we query the offset  *  * Returns current GPU offset of the object.  *  * Note: object should either be pinned or reserved when calling this  * function, it might be useful to add check for this for debugging.  */
end_comment

begin_function
specifier|static
specifier|inline
name|u64
name|radeon_bo_gpu_offset
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
block|{
return|return
name|bo
operator|->
name|tbo
operator|.
name|offset
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|long
name|radeon_bo_size
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
block|{
return|return
name|bo
operator|->
name|tbo
operator|.
name|num_pages
operator|<<
name|PAGE_SHIFT
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|bool
name|radeon_bo_is_reserved
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
block|{
return|return
name|ttm_bo_is_reserved
argument_list|(
operator|&
name|bo
operator|->
name|tbo
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|radeon_bo_ngpu_pages
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
block|{
return|return
operator|(
name|bo
operator|->
name|tbo
operator|.
name|num_pages
operator|<<
name|PAGE_SHIFT
operator|)
operator|/
name|RADEON_GPU_PAGE_SIZE
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|radeon_bo_gpu_page_alignment
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
block|{
return|return
operator|(
name|bo
operator|->
name|tbo
operator|.
name|mem
operator|.
name|page_alignment
operator|<<
name|PAGE_SHIFT
operator|)
operator|/
name|RADEON_GPU_PAGE_SIZE
return|;
block|}
end_function

begin_comment
comment|/**  * radeon_bo_mmap_offset - return mmap offset of bo  * @bo:	radeon object for which we query the offset  *  * Returns mmap offset of the object.  *  * Note: addr_space_offset is constant after ttm bo init thus isn't protected  * by any lock.  */
end_comment

begin_function
specifier|static
specifier|inline
name|u64
name|radeon_bo_mmap_offset
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
block|{
return|return
name|bo
operator|->
name|tbo
operator|.
name|addr_space_offset
return|;
block|}
end_function

begin_function_decl
specifier|extern
name|int
name|radeon_bo_wait
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|,
name|u32
modifier|*
name|mem_type
parameter_list|,
name|bool
name|no_wait
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_bo_create
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|int
name|byte_align
parameter_list|,
name|bool
name|kernel
parameter_list|,
name|u32
name|domain
parameter_list|,
name|struct
name|sg_table
modifier|*
name|sg
parameter_list|,
name|struct
name|radeon_bo
modifier|*
modifier|*
name|bo_ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_bo_kmap
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|,
name|void
modifier|*
modifier|*
name|ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_bo_kunmap
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_bo_unref
parameter_list|(
name|struct
name|radeon_bo
modifier|*
modifier|*
name|bo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_bo_pin
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|,
name|u32
name|domain
parameter_list|,
name|u64
modifier|*
name|gpu_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_bo_pin_restricted
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|,
name|u32
name|domain
parameter_list|,
name|u64
name|max_offset
parameter_list|,
name|u64
modifier|*
name|gpu_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_bo_unpin
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_bo_evict_vram
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_bo_force_delete
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_bo_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_bo_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_bo_list_add_object
parameter_list|(
name|struct
name|radeon_bo_list
modifier|*
name|lobj
parameter_list|,
name|struct
name|list_head
modifier|*
name|head
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_bo_list_validate
parameter_list|(
name|struct
name|list_head
modifier|*
name|head
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|DUMBBELL_WIP
end_ifdef

begin_function_decl
specifier|extern
name|int
name|radeon_bo_fbdev_mmap
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|,
name|struct
name|vm_area_struct
modifier|*
name|vma
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* DUMBBELL_WIP */
end_comment

begin_function_decl
specifier|extern
name|int
name|radeon_bo_set_tiling_flags
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|,
name|u32
name|tiling_flags
parameter_list|,
name|u32
name|pitch
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_bo_get_tiling_flags
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|,
name|u32
modifier|*
name|tiling_flags
parameter_list|,
name|u32
modifier|*
name|pitch
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_bo_check_tiling
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|,
name|bool
name|has_moved
parameter_list|,
name|bool
name|force_drop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_bo_move_notify
parameter_list|(
name|struct
name|ttm_buffer_object
modifier|*
name|bo
parameter_list|,
name|struct
name|ttm_mem_reg
modifier|*
name|mem
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_bo_fault_reserve_notify
parameter_list|(
name|struct
name|ttm_buffer_object
modifier|*
name|bo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_bo_get_surface_reg
parameter_list|(
name|struct
name|radeon_bo
modifier|*
name|bo
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * sub allocation  */
end_comment

begin_function
specifier|static
specifier|inline
name|uint64_t
name|radeon_sa_bo_gpu_addr
parameter_list|(
name|struct
name|radeon_sa_bo
modifier|*
name|sa_bo
parameter_list|)
block|{
return|return
name|sa_bo
operator|->
name|manager
operator|->
name|gpu_addr
operator|+
name|sa_bo
operator|->
name|soffset
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
modifier|*
name|radeon_sa_bo_cpu_addr
parameter_list|(
name|struct
name|radeon_sa_bo
modifier|*
name|sa_bo
parameter_list|)
block|{
return|return
operator|(
name|char
operator|*
operator|)
name|sa_bo
operator|->
name|manager
operator|->
name|cpu_ptr
operator|+
name|sa_bo
operator|->
name|soffset
return|;
block|}
end_function

begin_function_decl
specifier|extern
name|int
name|radeon_sa_bo_manager_init
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_sa_manager
modifier|*
name|sa_manager
parameter_list|,
name|unsigned
name|size
parameter_list|,
name|u32
name|domain
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_sa_bo_manager_fini
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_sa_manager
modifier|*
name|sa_manager
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_sa_bo_manager_start
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_sa_manager
modifier|*
name|sa_manager
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_sa_bo_manager_suspend
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_sa_manager
modifier|*
name|sa_manager
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|radeon_sa_bo_new
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_sa_manager
modifier|*
name|sa_manager
parameter_list|,
name|struct
name|radeon_sa_bo
modifier|*
modifier|*
name|sa_bo
parameter_list|,
name|unsigned
name|size
parameter_list|,
name|unsigned
name|align
parameter_list|,
name|bool
name|block
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|radeon_sa_bo_free
parameter_list|(
name|struct
name|radeon_device
modifier|*
name|rdev
parameter_list|,
name|struct
name|radeon_sa_bo
modifier|*
modifier|*
name|sa_bo
parameter_list|,
name|struct
name|radeon_fence
modifier|*
name|fence
parameter_list|)
function_decl|;
end_function_decl

begin_if
if|#
directive|if
name|defined
argument_list|(
name|CONFIG_DEBUG_FS
argument_list|)
end_if

begin_function_decl
specifier|extern
name|void
name|radeon_sa_bo_dump_debug_info
parameter_list|(
name|struct
name|radeon_sa_manager
modifier|*
name|sa_manager
parameter_list|,
name|struct
name|seq_file
modifier|*
name|m
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

