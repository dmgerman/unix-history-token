begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2008 Advanced Micro Devices, Inc.  * Copyright 2008 Red Hat Inc.  * Copyright 2009 Jerome Glisse.  *  * Permission is hereby granted, free of charge, to any person obtaining a  * copy of this software and associated documentation files (the "Software"),  * to deal in the Software without restriction, including without limitation  * the rights to use, copy, modify, merge, publish, distribute, sublicense,  * and/or sell copies of the Software, and to permit persons to whom the  * Software is furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice shall be included in  * all copies or substantial portions of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL  * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR  * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR  * OTHER DEALINGS IN THE SOFTWARE.  *  * Authors: Dave Airlie  *          Alex Deucher  *          Jerome Glisse  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* this file defines the CHIP_  and family flags used in the pciids,  * its is common between kms and non-kms because duplicating it and  * changing one place is fail.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|RADEON_FAMILY_H
end_ifndef

begin_define
define|#
directive|define
name|RADEON_FAMILY_H
end_define

begin_comment
comment|/*  * Radeon chip families  */
end_comment

begin_enum
enum|enum
name|radeon_family
block|{
name|CHIP_R100
init|=
literal|0
block|,
name|CHIP_RV100
block|,
name|CHIP_RS100
block|,
name|CHIP_RV200
block|,
name|CHIP_RS200
block|,
name|CHIP_R200
block|,
name|CHIP_RV250
block|,
name|CHIP_RS300
block|,
name|CHIP_RV280
block|,
name|CHIP_R300
block|,
name|CHIP_R350
block|,
name|CHIP_RV350
block|,
name|CHIP_RV380
block|,
name|CHIP_R420
block|,
name|CHIP_R423
block|,
name|CHIP_RV410
block|,
name|CHIP_RS400
block|,
name|CHIP_RS480
block|,
name|CHIP_RS600
block|,
name|CHIP_RS690
block|,
name|CHIP_RS740
block|,
name|CHIP_RV515
block|,
name|CHIP_R520
block|,
name|CHIP_RV530
block|,
name|CHIP_RV560
block|,
name|CHIP_RV570
block|,
name|CHIP_R580
block|,
name|CHIP_R600
block|,
name|CHIP_RV610
block|,
name|CHIP_RV630
block|,
name|CHIP_RV670
block|,
name|CHIP_RV620
block|,
name|CHIP_RV635
block|,
name|CHIP_RS780
block|,
name|CHIP_RS880
block|,
name|CHIP_RV770
block|,
name|CHIP_RV730
block|,
name|CHIP_RV710
block|,
name|CHIP_RV740
block|,
name|CHIP_CEDAR
block|,
name|CHIP_REDWOOD
block|,
name|CHIP_JUNIPER
block|,
name|CHIP_CYPRESS
block|,
name|CHIP_HEMLOCK
block|,
name|CHIP_PALM
block|,
name|CHIP_SUMO
block|,
name|CHIP_SUMO2
block|,
name|CHIP_BARTS
block|,
name|CHIP_TURKS
block|,
name|CHIP_CAICOS
block|,
name|CHIP_CAYMAN
block|,
name|CHIP_ARUBA
block|,
name|CHIP_TAHITI
block|,
name|CHIP_PITCAIRN
block|,
name|CHIP_VERDE
block|,
name|CHIP_LAST
block|, }
enum|;
end_enum

begin_comment
comment|/*  * Chip flags  */
end_comment

begin_enum
enum|enum
name|radeon_chip_flags
block|{
name|RADEON_FAMILY_MASK
init|=
literal|0x0000ffffUL
block|,
name|RADEON_FLAGS_MASK
init|=
literal|0xffff0000UL
block|,
name|RADEON_IS_MOBILITY
init|=
literal|0x00010000UL
block|,
name|RADEON_IS_IGP
init|=
literal|0x00020000UL
block|,
name|RADEON_SINGLE_CRTC
init|=
literal|0x00040000UL
block|,
name|RADEON_IS_AGP
init|=
literal|0x00080000UL
block|,
name|RADEON_HAS_HIERZ
init|=
literal|0x00100000UL
block|,
name|RADEON_IS_PCIE
init|=
literal|0x00200000UL
block|,
name|RADEON_NEW_MEMMAP
init|=
literal|0x00400000UL
block|,
name|RADEON_IS_PCI
init|=
literal|0x00800000UL
block|,
name|RADEON_IS_IGPGART
init|=
literal|0x01000000UL
block|, }
enum|;
end_enum

begin_endif
endif|#
directive|endif
end_endif

end_unit

