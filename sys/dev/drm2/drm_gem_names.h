begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2011 The FreeBSD Foundation  * All rights reserved.  *  * This software was developed by Konstantin Belousov under sponsorship from  * the FreeBSD Foundation.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|DRM_GEM_NAMES_H
end_ifndef

begin_define
define|#
directive|define
name|DRM_GEM_NAMES_H
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<sys/lock.h>
end_include

begin_include
include|#
directive|include
file|<sys/mutex.h>
end_include

begin_include
include|#
directive|include
file|<sys/queue.h>
end_include

begin_struct
struct|struct
name|drm_gem_name
block|{
name|uint32_t
name|name
decl_stmt|;
name|void
modifier|*
name|ptr
decl_stmt|;
name|LIST_ENTRY
argument_list|(
argument|drm_gem_name
argument_list|)
name|link
expr_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|drm_gem_names
block|{
name|struct
name|mtx
name|lock
decl_stmt|;
name|LIST_HEAD
argument_list|(
name|drm_gem_names_head
argument_list|,
name|drm_gem_name
argument_list|)
operator|*
name|names_hash
expr_stmt|;
name|u_long
name|hash_mask
decl_stmt|;
name|struct
name|unrhdr
modifier|*
name|unr
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|void
name|drm_gem_names_init
parameter_list|(
name|struct
name|drm_gem_names
modifier|*
name|names
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|drm_gem_names_fini
parameter_list|(
name|struct
name|drm_gem_names
modifier|*
name|names
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|drm_gem_find_name
parameter_list|(
name|struct
name|drm_gem_names
modifier|*
name|names
parameter_list|,
name|void
modifier|*
name|ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|drm_gem_name_ref
parameter_list|(
name|struct
name|drm_gem_names
modifier|*
name|names
parameter_list|,
name|uint32_t
name|name
parameter_list|,
name|void
function_decl|(
modifier|*
name|ref
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|drm_gem_name_create
parameter_list|(
name|struct
name|drm_gem_names
modifier|*
name|names
parameter_list|,
name|void
modifier|*
name|obj
parameter_list|,
name|uint32_t
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|drm_gem_names_foreach
parameter_list|(
name|struct
name|drm_gem_names
modifier|*
name|names
parameter_list|,
name|int
function_decl|(
modifier|*
name|f
function_decl|)
parameter_list|(
name|uint32_t
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|drm_gem_names_remove
parameter_list|(
name|struct
name|drm_gem_names
modifier|*
name|names
parameter_list|,
name|uint32_t
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

