begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright Â© 2008 Intel Corporation  *  * Permission is hereby granted, free of charge, to any person obtaining a  * copy of this software and associated documentation files (the "Software"),  * to deal in the Software without restriction, including without limitation  * the rights to use, copy, modify, merge, publish, distribute, sublicense,  * and/or sell copies of the Software, and to permit persons to whom the  * Software is furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice (including the next  * paragraph) shall be included in all copies or substantial portions of the  * Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL  * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS  * IN THE SOFTWARE.  *  * Authors:  *     Jesse Barnes<jbarnes@virtuousgeek.org>  *  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|_DRM_MEM_UTIL_H_
end_ifndef

begin_define
define|#
directive|define
name|_DRM_MEM_UTIL_H_
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<sys/malloc.h>
end_include

begin_function
specifier|static
name|__inline__
name|void
modifier|*
name|drm_calloc_large
parameter_list|(
name|size_t
name|nmemb
parameter_list|,
name|size_t
name|size
parameter_list|)
block|{
if|if
condition|(
name|size
operator|!=
literal|0
operator|&&
name|nmemb
operator|>
name|SIZE_MAX
operator|/
name|size
condition|)
return|return
name|NULL
return|;
return|return
name|malloc
argument_list|(
name|nmemb
operator|*
name|size
argument_list|,
name|DRM_MEM_DRIVER
argument_list|,
name|M_NOWAIT
operator||
name|M_ZERO
argument_list|)
return|;
block|}
end_function

begin_comment
comment|/* Modeled after cairo's malloc_ab, it's like calloc but without the zeroing. */
end_comment

begin_function
specifier|static
name|__inline__
name|void
modifier|*
name|drm_malloc_ab
parameter_list|(
name|size_t
name|nmemb
parameter_list|,
name|size_t
name|size
parameter_list|)
block|{
if|if
condition|(
name|size
operator|!=
literal|0
operator|&&
name|nmemb
operator|>
name|SIZE_MAX
operator|/
name|size
condition|)
return|return
name|NULL
return|;
return|return
name|malloc
argument_list|(
name|nmemb
operator|*
name|size
argument_list|,
name|DRM_MEM_DRIVER
argument_list|,
name|M_NOWAIT
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|drm_free_large
parameter_list|(
name|void
modifier|*
name|ptr
parameter_list|)
block|{
name|free
argument_list|(
name|ptr
argument_list|,
name|DRM_MEM_DRIVER
argument_list|)
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

end_unit

