begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/**************************************************************************  *  * Copyright 2006-2008 Tungsten Graphics, Inc., Cedar Park, TX. USA.  * All Rights Reserved.  *  * Permission is hereby granted, free of charge, to any person obtaining a  * copy of this software and associated documentation files (the  * "Software"), to deal in the Software without restriction, including  * without limitation the rights to use, copy, modify, merge, publish,  * distribute, sub license, and/or sell copies of the Software, and to  * permit persons to whom the Software is furnished to do so, subject to  * the following conditions:  *  * The above copyright notice and this permission notice (including the  * next paragraph) shall be included in all copies or substantial portions  * of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL  * THE COPYRIGHT HOLDERS, AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM,  * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR  * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE  * USE OR OTHER DEALINGS IN THE SOFTWARE.  *  *  **************************************************************************/
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/*  * Authors:  * Thomas Hellstrom<thomas-at-tungstengraphics-dot-com>  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_DRM_MM_H_
end_ifndef

begin_define
define|#
directive|define
name|_DRM_MM_H_
end_define

begin_include
include|#
directive|include
file|<dev/drm2/drm_linux_list.h>
end_include

begin_struct
struct|struct
name|drm_mm_node
block|{
name|struct
name|list_head
name|node_list
decl_stmt|;
name|struct
name|list_head
name|hole_stack
decl_stmt|;
name|unsigned
name|hole_follows
range|:
literal|1
decl_stmt|;
name|unsigned
name|scanned_block
range|:
literal|1
decl_stmt|;
name|unsigned
name|scanned_prev_free
range|:
literal|1
decl_stmt|;
name|unsigned
name|scanned_next_free
range|:
literal|1
decl_stmt|;
name|unsigned
name|scanned_preceeds_hole
range|:
literal|1
decl_stmt|;
name|unsigned
name|allocated
range|:
literal|1
decl_stmt|;
name|unsigned
name|long
name|start
decl_stmt|;
name|unsigned
name|long
name|size
decl_stmt|;
name|struct
name|drm_mm
modifier|*
name|mm
decl_stmt|;
name|void
modifier|*
name|private
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|drm_mm
block|{
name|struct
name|list_head
name|hole_stack
decl_stmt|;
name|struct
name|drm_mm_node
name|head_node
decl_stmt|;
name|struct
name|list_head
name|unused_nodes
decl_stmt|;
name|int
name|num_unused
decl_stmt|;
name|struct
name|mtx
name|unused_lock
decl_stmt|;
name|unsigned
name|int
name|scan_check_range
range|:
literal|1
decl_stmt|;
name|unsigned
name|scan_alignment
decl_stmt|;
name|unsigned
name|long
name|scan_size
decl_stmt|;
name|unsigned
name|long
name|scan_hit_start
decl_stmt|;
name|unsigned
name|scan_hit_size
decl_stmt|;
name|unsigned
name|scanned_blocks
decl_stmt|;
name|unsigned
name|long
name|scan_start
decl_stmt|;
name|unsigned
name|long
name|scan_end
decl_stmt|;
name|struct
name|drm_mm_node
modifier|*
name|prev_scanned_node
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|bool
name|drm_mm_node_allocated
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|node
parameter_list|)
block|{
return|return
name|node
operator|->
name|allocated
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|bool
name|drm_mm_initialized
parameter_list|(
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|)
block|{
return|return
operator|(
name|mm
operator|->
name|hole_stack
operator|.
name|next
operator|!=
name|NULL
operator|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|drm_mm_for_each_node
parameter_list|(
name|entry
parameter_list|,
name|mm
parameter_list|)
value|list_for_each_entry(entry, \&(mm)->head_node.node_list, \ 						node_list)
end_define

begin_define
define|#
directive|define
name|drm_mm_for_each_scanned_node_reverse
parameter_list|(
name|entry
parameter_list|,
name|n
parameter_list|,
name|mm
parameter_list|)
define|\
value|for (entry = (mm)->prev_scanned_node, \ 		next = entry ? list_entry(entry->node_list.next, \ 			struct drm_mm_node, node_list) : NULL; \ 	     entry != NULL; entry = next, \ 		next = entry ? list_entry(entry->node_list.next, \ 			struct drm_mm_node, node_list) : NULL)
end_define

begin_comment
comment|/*  * Basic range manager support (drm_mm.c)  */
end_comment

begin_function_decl
specifier|extern
name|struct
name|drm_mm_node
modifier|*
name|drm_mm_get_block_generic
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|node
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|unsigned
name|alignment
parameter_list|,
name|int
name|atomic
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|drm_mm_node
modifier|*
name|drm_mm_get_block_range_generic
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|node
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|unsigned
name|alignment
parameter_list|,
name|unsigned
name|long
name|start
parameter_list|,
name|unsigned
name|long
name|end
parameter_list|,
name|int
name|atomic
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|struct
name|drm_mm_node
modifier|*
name|drm_mm_get_block
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|parent
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|unsigned
name|alignment
parameter_list|)
block|{
return|return
name|drm_mm_get_block_generic
argument_list|(
name|parent
argument_list|,
name|size
argument_list|,
name|alignment
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|drm_mm_node
modifier|*
name|drm_mm_get_block_atomic
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|parent
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|unsigned
name|alignment
parameter_list|)
block|{
return|return
name|drm_mm_get_block_generic
argument_list|(
name|parent
argument_list|,
name|size
argument_list|,
name|alignment
argument_list|,
literal|1
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|drm_mm_node
modifier|*
name|drm_mm_get_block_range
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|parent
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|unsigned
name|alignment
parameter_list|,
name|unsigned
name|long
name|start
parameter_list|,
name|unsigned
name|long
name|end
parameter_list|)
block|{
return|return
name|drm_mm_get_block_range_generic
argument_list|(
name|parent
argument_list|,
name|size
argument_list|,
name|alignment
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|drm_mm_node
modifier|*
name|drm_mm_get_block_atomic_range
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|parent
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|unsigned
name|alignment
parameter_list|,
name|unsigned
name|long
name|start
parameter_list|,
name|unsigned
name|long
name|end
parameter_list|)
block|{
return|return
name|drm_mm_get_block_range_generic
argument_list|(
name|parent
argument_list|,
name|size
argument_list|,
name|alignment
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
literal|1
argument_list|)
return|;
block|}
end_function

begin_function_decl
specifier|extern
name|int
name|drm_mm_insert_node
parameter_list|(
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|,
name|struct
name|drm_mm_node
modifier|*
name|node
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|unsigned
name|alignment
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|drm_mm_insert_node_in_range
parameter_list|(
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|,
name|struct
name|drm_mm_node
modifier|*
name|node
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|unsigned
name|alignment
parameter_list|,
name|unsigned
name|long
name|start
parameter_list|,
name|unsigned
name|long
name|end
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|drm_mm_put_block
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|cur
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|drm_mm_remove_node
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|node
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|drm_mm_replace_node
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|old
parameter_list|,
name|struct
name|drm_mm_node
modifier|*
name|new
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|drm_mm_node
modifier|*
name|drm_mm_search_free
parameter_list|(
specifier|const
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|unsigned
name|alignment
parameter_list|,
name|int
name|best_match
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|drm_mm_node
modifier|*
name|drm_mm_search_free_in_range
parameter_list|(
specifier|const
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|unsigned
name|alignment
parameter_list|,
name|unsigned
name|long
name|start
parameter_list|,
name|unsigned
name|long
name|end
parameter_list|,
name|int
name|best_match
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|drm_mm_init
parameter_list|(
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|,
name|unsigned
name|long
name|start
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|drm_mm_takedown
parameter_list|(
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|drm_mm_clean
parameter_list|(
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|unsigned
name|long
name|drm_mm_tail_space
parameter_list|(
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|drm_mm_remove_space_from_tail
parameter_list|(
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|drm_mm_add_space_to_tail
parameter_list|(
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|int
name|atomic
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|drm_mm_pre_get
parameter_list|(
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|struct
name|drm_mm
modifier|*
name|drm_get_mm
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|block
parameter_list|)
block|{
return|return
name|block
operator|->
name|mm
return|;
block|}
end_function

begin_function_decl
name|void
name|drm_mm_init_scan
parameter_list|(
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|unsigned
name|alignment
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|drm_mm_init_scan_with_range
parameter_list|(
name|struct
name|drm_mm
modifier|*
name|mm
parameter_list|,
name|unsigned
name|long
name|size
parameter_list|,
name|unsigned
name|alignment
parameter_list|,
name|unsigned
name|long
name|start
parameter_list|,
name|unsigned
name|long
name|end
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|drm_mm_scan_add_block
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|node
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|drm_mm_scan_remove_block
parameter_list|(
name|struct
name|drm_mm_node
modifier|*
name|node
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

