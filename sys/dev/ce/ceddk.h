begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Middle-level code for Cronyx Tau32-PCI adapters.  *  * Copyright (C) 2004 Cronyx Engineering  * Copyright (C) 2004 Roman Kurakin<rik@FreeBSD.org>  *  * This software is distributed with NO WARRANTIES, not even the implied  * warranties for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  *  * Authors grant any other persons or organisations a permission to use,  * modify and redistribute this software in source and binary forms,  * as long as this message is kept with the software, all derivative  * works or modified versions.  *  * $Cronyx: ceddk.h,v 1.2.6.1 2005/11/09 13:01:39 rik Exp $  * $FreeBSD$  */
end_comment

begin_define
define|#
directive|define
name|TAU32_UserContext_Add
value|void	*sys;
end_define

begin_define
define|#
directive|define
name|TAU32_UserRequest_Add
value|void	*sys; TAU32_UserRequest *next;
end_define

begin_include
include|#
directive|include
file|<dev/ce/tau32-ddk.h>
end_include

begin_define
define|#
directive|define
name|NCHAN
value|TAU32_CHANNELS
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|NBRD
end_ifndef

begin_define
define|#
directive|define
name|NBRD
value|6
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
name|NBRD
operator|!=
literal|6
end_if

begin_error
error|#
directive|error
literal|"NBRD != 6"
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|BUFSZ
value|1664
end_define

begin_typedef
typedef|typedef
struct|struct
name|_ce_buf_item_t
block|{
name|TAU32_UserRequest
name|req
decl_stmt|;
name|unsigned
name|char
name|buf
index|[
name|BUFSZ
operator|+
literal|4
index|]
decl_stmt|;
name|unsigned
name|long
name|phys
decl_stmt|;
block|}
name|ce_buf_item_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_ce_buf_t
block|{
name|ce_buf_item_t
name|tx_item
index|[
name|TAU32_IO_QUEUE
index|]
decl_stmt|;
name|ce_buf_item_t
name|rx_item
index|[
name|TAU32_IO_QUEUE
index|]
decl_stmt|;
block|}
name|ce_buf_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|long
name|bpv
decl_stmt|;
comment|/* bipolar violations */
name|unsigned
name|long
name|fse
decl_stmt|;
comment|/* frame sync errors */
name|unsigned
name|long
name|crce
decl_stmt|;
comment|/* CRC errors */
name|unsigned
name|long
name|rcrce
decl_stmt|;
comment|/* remote CRC errors (E-bit) */
name|unsigned
name|long
name|uas
decl_stmt|;
comment|/* unavailable seconds */
name|unsigned
name|long
name|les
decl_stmt|;
comment|/* line errored seconds */
name|unsigned
name|long
name|es
decl_stmt|;
comment|/* errored seconds */
name|unsigned
name|long
name|bes
decl_stmt|;
comment|/* bursty errored seconds */
name|unsigned
name|long
name|ses
decl_stmt|;
comment|/* severely errored seconds */
name|unsigned
name|long
name|oofs
decl_stmt|;
comment|/* out of frame seconds */
name|unsigned
name|long
name|css
decl_stmt|;
comment|/* controlled slip seconds */
name|unsigned
name|long
name|dm
decl_stmt|;
comment|/* degraded minutes */
block|}
name|ce_gstat_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_ce_chan_t
block|{
name|unsigned
name|char
name|num
decl_stmt|;
name|unsigned
name|char
name|type
decl_stmt|;
define|#
directive|define
name|T_NONE
value|0
comment|/* no channel */
define|#
directive|define
name|T_E1
value|3
comment|/* E1 */
define|#
directive|define
name|T_DATA
value|6
comment|/* no physical interface */
name|struct
name|_ce_board_t
modifier|*
name|board
decl_stmt|;
name|unsigned
name|char
name|dtr
decl_stmt|;
name|unsigned
name|char
name|rts
decl_stmt|;
name|ce_buf_item_t
modifier|*
name|tx_item
decl_stmt|;
name|ce_buf_item_t
modifier|*
name|rx_item
decl_stmt|;
name|TAU32_UserRequest
modifier|*
name|rx_queue
decl_stmt|;
name|TAU32_UserRequest
modifier|*
name|tx_queue
decl_stmt|;
name|unsigned
name|char
name|debug
decl_stmt|;
name|unsigned
name|char
name|debug_shadow
decl_stmt|;
name|void
function_decl|(
modifier|*
name|transmit
function_decl|)
parameter_list|(
name|struct
name|_ce_chan_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|receive
function_decl|)
parameter_list|(
name|struct
name|_ce_chan_t
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|error
function_decl|)
parameter_list|(
name|struct
name|_ce_chan_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
define|#
directive|define
name|CE_FRAME
value|1
define|#
directive|define
name|CE_CRC
value|2
define|#
directive|define
name|CE_UNDERRUN
value|3
define|#
directive|define
name|CE_OVERRUN
value|4
define|#
directive|define
name|CE_OVERFLOW
value|5
name|int
name|tx_pending
decl_stmt|;
name|int
name|rx_pending
decl_stmt|;
name|unsigned
name|long
name|rintr
decl_stmt|;
name|unsigned
name|long
name|tintr
decl_stmt|;
name|ulong64
name|ibytes
decl_stmt|;
name|ulong64
name|obytes
decl_stmt|;
name|unsigned
name|long
name|ipkts
decl_stmt|;
name|unsigned
name|long
name|opkts
decl_stmt|;
name|unsigned
name|long
name|underrun
decl_stmt|;
name|unsigned
name|long
name|overrun
decl_stmt|;
name|unsigned
name|long
name|frame
decl_stmt|;
name|unsigned
name|long
name|crc
decl_stmt|;
name|unsigned
name|short
name|status
decl_stmt|;
comment|/* E1/G.703 line status bit mask */
define|#
directive|define
name|ESTS_NOALARM
value|0x0001
comment|/* no alarm present */
define|#
directive|define
name|ESTS_FARLOF
value|0x0002
comment|/* receiving far loss of framing */
define|#
directive|define
name|ESTS_AIS
value|0x0008
comment|/* receiving all ones */
define|#
directive|define
name|ESTS_LOF
value|0x0020
comment|/* loss of framing */
define|#
directive|define
name|ESTS_LOS
value|0x0040
comment|/* loss of signal */
define|#
directive|define
name|ESTS_AIS16
value|0x0100
comment|/* receiving all ones in timeslot 16 */
define|#
directive|define
name|ESTS_FARLOMF
value|0x0200
comment|/* receiving alarm in timeslot 16 */
define|#
directive|define
name|ESTS_LOMF
value|0x0400
comment|/* loss of multiframe sync */
define|#
directive|define
name|ESTS_TSTREQ
value|0x0800
comment|/* test code detected */
define|#
directive|define
name|ESTS_TSTERR
value|0x1000
comment|/* test error */
name|unsigned
name|long
name|totsec
decl_stmt|;
comment|/* total seconds elapsed */
name|unsigned
name|long
name|cursec
decl_stmt|;
comment|/* current seconds elapsed */
name|unsigned
name|long
name|degsec
decl_stmt|;
comment|/* degraded seconds */
name|unsigned
name|long
name|degerr
decl_stmt|;
comment|/* errors during degraded seconds */
name|ce_gstat_t
name|currnt
decl_stmt|;
comment|/* current 15-min interval data */
name|ce_gstat_t
name|total
decl_stmt|;
comment|/* total statistics data */
name|ce_gstat_t
name|interval
index|[
literal|48
index|]
decl_stmt|;
comment|/* 12 hour period data */
name|unsigned
name|int
name|acc_status
decl_stmt|;
name|unsigned
name|long
name|config
decl_stmt|;
name|unsigned
name|long
name|baud
decl_stmt|;
name|unsigned
name|long
name|ts
decl_stmt|;
name|unsigned
name|long
name|ts_mask
decl_stmt|;
name|unsigned
name|char
name|dir
decl_stmt|;
name|unsigned
name|char
name|lloop
decl_stmt|;
name|unsigned
name|char
name|rloop
decl_stmt|;
name|unsigned
name|char
name|higain
decl_stmt|;
name|unsigned
name|char
name|phony
decl_stmt|;
name|unsigned
name|char
name|scrambler
decl_stmt|;
name|unsigned
name|char
name|unfram
decl_stmt|;
name|unsigned
name|char
name|monitor
decl_stmt|;
name|unsigned
name|char
name|crc4
decl_stmt|;
name|unsigned
name|char
name|use16
decl_stmt|;
name|unsigned
name|char
name|gsyn
decl_stmt|;
comment|/* G.703 clock mode */
define|#
directive|define
name|GSYN_INT
value|0
comment|/* internal transmit clock source */
define|#
directive|define
name|GSYN_RCV
value|1
comment|/* transmit clock source = receive */
define|#
directive|define
name|GSYN_RCV0
value|2
comment|/* tclk = rclk from channel 0 */
define|#
directive|define
name|GSYN_RCV1
value|3
comment|/* ...from channel 1 */
name|unsigned
name|long
name|mtu
decl_stmt|;
name|void
modifier|*
name|sys
decl_stmt|;
block|}
name|ce_chan_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|CONFREQSZ
value|128
end_define

begin_typedef
typedef|typedef
struct|struct
name|_ce_conf_req
block|{
name|TAU32_UserRequest
name|req
index|[
name|CONFREQSZ
operator|+
literal|10
index|]
decl_stmt|;
name|TAU32_UserRequest
modifier|*
name|queue
decl_stmt|;
name|int
name|pending
decl_stmt|;
block|}
name|ce_conf_req
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_ce_board_t
block|{
name|TAU32_UserContext
name|ddk
decl_stmt|;
name|ce_chan_t
name|chan
index|[
name|NCHAN
index|]
decl_stmt|;
name|int
name|num
decl_stmt|;
name|int
name|mux
decl_stmt|;
define|#
directive|define
name|TAU32_BASE_NAME
value|"Tau-PCI-32"
define|#
directive|define
name|TAU32_LITE_NAME
value|"Tau-PCI-32/Lite"
define|#
directive|define
name|TAU32_ADPCM_NAME
value|"Tau-PCI-32/ADPCM"
define|#
directive|define
name|TAU32_UNKNOWN_NAME
value|"Unknown Tau-PCI-32"
name|char
name|name
index|[
literal|32
index|]
decl_stmt|;
name|ce_conf_req
name|cr
decl_stmt|;
name|TAU32_CrossMatrix
name|dxc
decl_stmt|;
name|unsigned
name|long
name|pmask
decl_stmt|;
name|void
modifier|*
name|sys
decl_stmt|;
block|}
name|ce_board_t
typedef|;
end_typedef

begin_function_decl
name|void
name|ce_set_dtr
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|int
name|on
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_rts
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|int
name|on
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ce_get_cd
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ce_get_cts
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ce_get_dsr
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ce_transmit_space
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ce_send_packet
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|unsigned
name|char
modifier|*
name|buf
parameter_list|,
name|int
name|len
parameter_list|,
name|void
modifier|*
name|tag
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_start_chan
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|int
name|tx
parameter_list|,
name|int
name|rx
parameter_list|,
name|ce_buf_t
modifier|*
name|cb
parameter_list|,
name|unsigned
name|long
name|phys
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_stop_chan
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_register_transmit
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|void
function_decl|(
modifier|*
name|func
function_decl|)
parameter_list|(
name|ce_chan_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_register_receive
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|void
function_decl|(
modifier|*
name|func
function_decl|)
parameter_list|(
name|ce_chan_t
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_register_error
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|void
function_decl|(
modifier|*
name|func
function_decl|)
parameter_list|(
name|ce_chan_t
modifier|*
parameter_list|,
name|int
parameter_list|)
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|TAU32_CALLBACK_TYPE
name|ce_error_callback
parameter_list|(
name|TAU32_UserContext
modifier|*
name|pContext
parameter_list|,
name|int
name|Item
parameter_list|,
name|unsigned
name|NotifyBits
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|TAU32_CALLBACK_TYPE
name|ce_status_callback
parameter_list|(
name|TAU32_UserContext
modifier|*
name|pContext
parameter_list|,
name|int
name|Item
parameter_list|,
name|unsigned
name|NotifyBits
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_baud
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|unsigned
name|long
name|baud
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_lloop
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|unsigned
name|char
name|on
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_rloop
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|unsigned
name|char
name|on
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_higain
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|unsigned
name|char
name|on
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_unfram
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|unsigned
name|char
name|on
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_ts
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|unsigned
name|long
name|ts
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_phony
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|unsigned
name|char
name|on
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_scrambler
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|unsigned
name|char
name|on
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_monitor
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|unsigned
name|char
name|on
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_use16
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|unsigned
name|char
name|on
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_crc4
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|unsigned
name|char
name|on
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_gsyn
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|int
name|syn
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|CABLE_TP
value|11
end_define

begin_function_decl
name|int
name|ce_get_cable
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_set_dir
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|,
name|int
name|dir
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_e1_timer
parameter_list|(
name|ce_chan_t
modifier|*
name|c
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ce_init_board
parameter_list|(
name|ce_board_t
modifier|*
name|b
parameter_list|)
function_decl|;
end_function_decl

end_unit

