begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/******************************************************************************    Copyright (c) 2013-2015, Intel Corporation    All rights reserved.      Redistribution and use in source and binary forms, with or without    modification, are permitted provided that the following conditions are met:       1. Redistributions of source code must retain the above copyright notice,        this list of conditions and the following disclaimer.       2. Redistributions in binary form must reproduce the above copyright        notice, this list of conditions and the following disclaimer in the        documentation and/or other materials provided with the distribution.       3. Neither the name of the Intel Corporation nor the names of its        contributors may be used to endorse or promote products derived from        this software without specific prior written permission.      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE    ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   POSSIBILITY OF SUCH DAMAGE.  ******************************************************************************/
end_comment

begin_comment
comment|/*$FreeBSD$*/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_I40E_ADMINQ_CMD_H_
end_ifndef

begin_define
define|#
directive|define
name|_I40E_ADMINQ_CMD_H_
end_define

begin_comment
comment|/* This header file defines the i40e Admin Queue commands and is shared between  * i40e Firmware and Software.  *  * This file needs to comply with the Linux Kernel coding style.  */
end_comment

begin_define
define|#
directive|define
name|I40E_FW_API_VERSION_MAJOR
value|0x0001
end_define

begin_define
define|#
directive|define
name|I40E_FW_API_VERSION_MINOR
value|0x0005
end_define

begin_struct
struct|struct
name|i40e_aq_desc
block|{
name|__le16
name|flags
decl_stmt|;
name|__le16
name|opcode
decl_stmt|;
name|__le16
name|datalen
decl_stmt|;
name|__le16
name|retval
decl_stmt|;
name|__le32
name|cookie_high
decl_stmt|;
name|__le32
name|cookie_low
decl_stmt|;
union|union
block|{
struct|struct
block|{
name|__le32
name|param0
decl_stmt|;
name|__le32
name|param1
decl_stmt|;
name|__le32
name|param2
decl_stmt|;
name|__le32
name|param3
decl_stmt|;
block|}
name|internal
struct|;
struct|struct
block|{
name|__le32
name|param0
decl_stmt|;
name|__le32
name|param1
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
name|external
struct|;
name|u8
name|raw
index|[
literal|16
index|]
decl_stmt|;
block|}
name|params
union|;
block|}
struct|;
end_struct

begin_comment
comment|/* Flags sub-structure  * |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10 |11 |12 |13 |14 |15 |  * |DD |CMP|ERR|VFE| * *  RESERVED * * |LB |RD |VFC|BUF|SI |EI |FE |  */
end_comment

begin_comment
comment|/* command flags and offsets*/
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_DD_SHIFT
value|0
end_define

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_CMP_SHIFT
value|1
end_define

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_ERR_SHIFT
value|2
end_define

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_VFE_SHIFT
value|3
end_define

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_LB_SHIFT
value|9
end_define

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_RD_SHIFT
value|10
end_define

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_VFC_SHIFT
value|11
end_define

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_BUF_SHIFT
value|12
end_define

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_SI_SHIFT
value|13
end_define

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_EI_SHIFT
value|14
end_define

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_FE_SHIFT
value|15
end_define

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_DD
value|(1<< I40E_AQ_FLAG_DD_SHIFT)
end_define

begin_comment
comment|/* 0x1    */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_CMP
value|(1<< I40E_AQ_FLAG_CMP_SHIFT)
end_define

begin_comment
comment|/* 0x2    */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_ERR
value|(1<< I40E_AQ_FLAG_ERR_SHIFT)
end_define

begin_comment
comment|/* 0x4    */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_VFE
value|(1<< I40E_AQ_FLAG_VFE_SHIFT)
end_define

begin_comment
comment|/* 0x8    */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_LB
value|(1<< I40E_AQ_FLAG_LB_SHIFT)
end_define

begin_comment
comment|/* 0x200  */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_RD
value|(1<< I40E_AQ_FLAG_RD_SHIFT)
end_define

begin_comment
comment|/* 0x400  */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_VFC
value|(1<< I40E_AQ_FLAG_VFC_SHIFT)
end_define

begin_comment
comment|/* 0x800  */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_BUF
value|(1<< I40E_AQ_FLAG_BUF_SHIFT)
end_define

begin_comment
comment|/* 0x1000 */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_SI
value|(1<< I40E_AQ_FLAG_SI_SHIFT)
end_define

begin_comment
comment|/* 0x2000 */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_EI
value|(1<< I40E_AQ_FLAG_EI_SHIFT)
end_define

begin_comment
comment|/* 0x4000 */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_FLAG_FE
value|(1<< I40E_AQ_FLAG_FE_SHIFT)
end_define

begin_comment
comment|/* 0x8000 */
end_comment

begin_comment
comment|/* error codes */
end_comment

begin_enum
enum|enum
name|i40e_admin_queue_err
block|{
name|I40E_AQ_RC_OK
init|=
literal|0
block|,
comment|/* success */
name|I40E_AQ_RC_EPERM
init|=
literal|1
block|,
comment|/* Operation not permitted */
name|I40E_AQ_RC_ENOENT
init|=
literal|2
block|,
comment|/* No such element */
name|I40E_AQ_RC_ESRCH
init|=
literal|3
block|,
comment|/* Bad opcode */
name|I40E_AQ_RC_EINTR
init|=
literal|4
block|,
comment|/* operation interrupted */
name|I40E_AQ_RC_EIO
init|=
literal|5
block|,
comment|/* I/O error */
name|I40E_AQ_RC_ENXIO
init|=
literal|6
block|,
comment|/* No such resource */
name|I40E_AQ_RC_E2BIG
init|=
literal|7
block|,
comment|/* Arg too long */
name|I40E_AQ_RC_EAGAIN
init|=
literal|8
block|,
comment|/* Try again */
name|I40E_AQ_RC_ENOMEM
init|=
literal|9
block|,
comment|/* Out of memory */
name|I40E_AQ_RC_EACCES
init|=
literal|10
block|,
comment|/* Permission denied */
name|I40E_AQ_RC_EFAULT
init|=
literal|11
block|,
comment|/* Bad address */
name|I40E_AQ_RC_EBUSY
init|=
literal|12
block|,
comment|/* Device or resource busy */
name|I40E_AQ_RC_EEXIST
init|=
literal|13
block|,
comment|/* object already exists */
name|I40E_AQ_RC_EINVAL
init|=
literal|14
block|,
comment|/* Invalid argument */
name|I40E_AQ_RC_ENOTTY
init|=
literal|15
block|,
comment|/* Not a typewriter */
name|I40E_AQ_RC_ENOSPC
init|=
literal|16
block|,
comment|/* No space left or alloc failure */
name|I40E_AQ_RC_ENOSYS
init|=
literal|17
block|,
comment|/* Function not implemented */
name|I40E_AQ_RC_ERANGE
init|=
literal|18
block|,
comment|/* Parameter out of range */
name|I40E_AQ_RC_EFLUSHED
init|=
literal|19
block|,
comment|/* Cmd flushed due to prev cmd error */
name|I40E_AQ_RC_BAD_ADDR
init|=
literal|20
block|,
comment|/* Descriptor contains a bad pointer */
name|I40E_AQ_RC_EMODE
init|=
literal|21
block|,
comment|/* Op not allowed in current dev mode */
name|I40E_AQ_RC_EFBIG
init|=
literal|22
block|,
comment|/* File too large */
block|}
enum|;
end_enum

begin_comment
comment|/* Admin Queue command opcodes */
end_comment

begin_enum
enum|enum
name|i40e_admin_queue_opc
block|{
comment|/* aq commands */
name|i40e_aqc_opc_get_version
init|=
literal|0x0001
block|,
name|i40e_aqc_opc_driver_version
init|=
literal|0x0002
block|,
name|i40e_aqc_opc_queue_shutdown
init|=
literal|0x0003
block|,
name|i40e_aqc_opc_set_pf_context
init|=
literal|0x0004
block|,
comment|/* resource ownership */
name|i40e_aqc_opc_request_resource
init|=
literal|0x0008
block|,
name|i40e_aqc_opc_release_resource
init|=
literal|0x0009
block|,
name|i40e_aqc_opc_list_func_capabilities
init|=
literal|0x000A
block|,
name|i40e_aqc_opc_list_dev_capabilities
init|=
literal|0x000B
block|,
comment|/* LAA */
name|i40e_aqc_opc_mac_address_read
init|=
literal|0x0107
block|,
name|i40e_aqc_opc_mac_address_write
init|=
literal|0x0108
block|,
comment|/* PXE */
name|i40e_aqc_opc_clear_pxe_mode
init|=
literal|0x0110
block|,
comment|/* internal switch commands */
name|i40e_aqc_opc_get_switch_config
init|=
literal|0x0200
block|,
name|i40e_aqc_opc_add_statistics
init|=
literal|0x0201
block|,
name|i40e_aqc_opc_remove_statistics
init|=
literal|0x0202
block|,
name|i40e_aqc_opc_set_port_parameters
init|=
literal|0x0203
block|,
name|i40e_aqc_opc_get_switch_resource_alloc
init|=
literal|0x0204
block|,
name|i40e_aqc_opc_set_switch_config
init|=
literal|0x0205
block|,
name|i40e_aqc_opc_add_vsi
init|=
literal|0x0210
block|,
name|i40e_aqc_opc_update_vsi_parameters
init|=
literal|0x0211
block|,
name|i40e_aqc_opc_get_vsi_parameters
init|=
literal|0x0212
block|,
name|i40e_aqc_opc_add_pv
init|=
literal|0x0220
block|,
name|i40e_aqc_opc_update_pv_parameters
init|=
literal|0x0221
block|,
name|i40e_aqc_opc_get_pv_parameters
init|=
literal|0x0222
block|,
name|i40e_aqc_opc_add_veb
init|=
literal|0x0230
block|,
name|i40e_aqc_opc_update_veb_parameters
init|=
literal|0x0231
block|,
name|i40e_aqc_opc_get_veb_parameters
init|=
literal|0x0232
block|,
name|i40e_aqc_opc_delete_element
init|=
literal|0x0243
block|,
name|i40e_aqc_opc_add_macvlan
init|=
literal|0x0250
block|,
name|i40e_aqc_opc_remove_macvlan
init|=
literal|0x0251
block|,
name|i40e_aqc_opc_add_vlan
init|=
literal|0x0252
block|,
name|i40e_aqc_opc_remove_vlan
init|=
literal|0x0253
block|,
name|i40e_aqc_opc_set_vsi_promiscuous_modes
init|=
literal|0x0254
block|,
name|i40e_aqc_opc_add_tag
init|=
literal|0x0255
block|,
name|i40e_aqc_opc_remove_tag
init|=
literal|0x0256
block|,
name|i40e_aqc_opc_add_multicast_etag
init|=
literal|0x0257
block|,
name|i40e_aqc_opc_remove_multicast_etag
init|=
literal|0x0258
block|,
name|i40e_aqc_opc_update_tag
init|=
literal|0x0259
block|,
name|i40e_aqc_opc_add_control_packet_filter
init|=
literal|0x025A
block|,
name|i40e_aqc_opc_remove_control_packet_filter
init|=
literal|0x025B
block|,
name|i40e_aqc_opc_add_cloud_filters
init|=
literal|0x025C
block|,
name|i40e_aqc_opc_remove_cloud_filters
init|=
literal|0x025D
block|,
name|i40e_aqc_opc_add_mirror_rule
init|=
literal|0x0260
block|,
name|i40e_aqc_opc_delete_mirror_rule
init|=
literal|0x0261
block|,
comment|/* DCB commands */
name|i40e_aqc_opc_dcb_ignore_pfc
init|=
literal|0x0301
block|,
name|i40e_aqc_opc_dcb_updated
init|=
literal|0x0302
block|,
comment|/* TX scheduler */
name|i40e_aqc_opc_configure_vsi_bw_limit
init|=
literal|0x0400
block|,
name|i40e_aqc_opc_configure_vsi_ets_sla_bw_limit
init|=
literal|0x0406
block|,
name|i40e_aqc_opc_configure_vsi_tc_bw
init|=
literal|0x0407
block|,
name|i40e_aqc_opc_query_vsi_bw_config
init|=
literal|0x0408
block|,
name|i40e_aqc_opc_query_vsi_ets_sla_config
init|=
literal|0x040A
block|,
name|i40e_aqc_opc_configure_switching_comp_bw_limit
init|=
literal|0x0410
block|,
name|i40e_aqc_opc_enable_switching_comp_ets
init|=
literal|0x0413
block|,
name|i40e_aqc_opc_modify_switching_comp_ets
init|=
literal|0x0414
block|,
name|i40e_aqc_opc_disable_switching_comp_ets
init|=
literal|0x0415
block|,
name|i40e_aqc_opc_configure_switching_comp_ets_bw_limit
init|=
literal|0x0416
block|,
name|i40e_aqc_opc_configure_switching_comp_bw_config
init|=
literal|0x0417
block|,
name|i40e_aqc_opc_query_switching_comp_ets_config
init|=
literal|0x0418
block|,
name|i40e_aqc_opc_query_port_ets_config
init|=
literal|0x0419
block|,
name|i40e_aqc_opc_query_switching_comp_bw_config
init|=
literal|0x041A
block|,
name|i40e_aqc_opc_suspend_port_tx
init|=
literal|0x041B
block|,
name|i40e_aqc_opc_resume_port_tx
init|=
literal|0x041C
block|,
name|i40e_aqc_opc_configure_partition_bw
init|=
literal|0x041D
block|,
comment|/* hmc */
name|i40e_aqc_opc_query_hmc_resource_profile
init|=
literal|0x0500
block|,
name|i40e_aqc_opc_set_hmc_resource_profile
init|=
literal|0x0501
block|,
comment|/* phy commands*/
name|i40e_aqc_opc_get_phy_abilities
init|=
literal|0x0600
block|,
name|i40e_aqc_opc_set_phy_config
init|=
literal|0x0601
block|,
name|i40e_aqc_opc_set_mac_config
init|=
literal|0x0603
block|,
name|i40e_aqc_opc_set_link_restart_an
init|=
literal|0x0605
block|,
name|i40e_aqc_opc_get_link_status
init|=
literal|0x0607
block|,
name|i40e_aqc_opc_set_phy_int_mask
init|=
literal|0x0613
block|,
name|i40e_aqc_opc_get_local_advt_reg
init|=
literal|0x0614
block|,
name|i40e_aqc_opc_set_local_advt_reg
init|=
literal|0x0615
block|,
name|i40e_aqc_opc_get_partner_advt
init|=
literal|0x0616
block|,
name|i40e_aqc_opc_set_lb_modes
init|=
literal|0x0618
block|,
name|i40e_aqc_opc_get_phy_wol_caps
init|=
literal|0x0621
block|,
name|i40e_aqc_opc_set_phy_debug
init|=
literal|0x0622
block|,
name|i40e_aqc_opc_upload_ext_phy_fm
init|=
literal|0x0625
block|,
name|i40e_aqc_opc_run_phy_activity
init|=
literal|0x0626
block|,
comment|/* NVM commands */
name|i40e_aqc_opc_nvm_read
init|=
literal|0x0701
block|,
name|i40e_aqc_opc_nvm_erase
init|=
literal|0x0702
block|,
name|i40e_aqc_opc_nvm_update
init|=
literal|0x0703
block|,
name|i40e_aqc_opc_nvm_config_read
init|=
literal|0x0704
block|,
name|i40e_aqc_opc_nvm_config_write
init|=
literal|0x0705
block|,
name|i40e_aqc_opc_oem_post_update
init|=
literal|0x0720
block|,
name|i40e_aqc_opc_thermal_sensor
init|=
literal|0x0721
block|,
comment|/* virtualization commands */
name|i40e_aqc_opc_send_msg_to_pf
init|=
literal|0x0801
block|,
name|i40e_aqc_opc_send_msg_to_vf
init|=
literal|0x0802
block|,
name|i40e_aqc_opc_send_msg_to_peer
init|=
literal|0x0803
block|,
comment|/* alternate structure */
name|i40e_aqc_opc_alternate_write
init|=
literal|0x0900
block|,
name|i40e_aqc_opc_alternate_write_indirect
init|=
literal|0x0901
block|,
name|i40e_aqc_opc_alternate_read
init|=
literal|0x0902
block|,
name|i40e_aqc_opc_alternate_read_indirect
init|=
literal|0x0903
block|,
name|i40e_aqc_opc_alternate_write_done
init|=
literal|0x0904
block|,
name|i40e_aqc_opc_alternate_set_mode
init|=
literal|0x0905
block|,
name|i40e_aqc_opc_alternate_clear_port
init|=
literal|0x0906
block|,
comment|/* LLDP commands */
name|i40e_aqc_opc_lldp_get_mib
init|=
literal|0x0A00
block|,
name|i40e_aqc_opc_lldp_update_mib
init|=
literal|0x0A01
block|,
name|i40e_aqc_opc_lldp_add_tlv
init|=
literal|0x0A02
block|,
name|i40e_aqc_opc_lldp_update_tlv
init|=
literal|0x0A03
block|,
name|i40e_aqc_opc_lldp_delete_tlv
init|=
literal|0x0A04
block|,
name|i40e_aqc_opc_lldp_stop
init|=
literal|0x0A05
block|,
name|i40e_aqc_opc_lldp_start
init|=
literal|0x0A06
block|,
name|i40e_aqc_opc_get_cee_dcb_cfg
init|=
literal|0x0A07
block|,
name|i40e_aqc_opc_lldp_set_local_mib
init|=
literal|0x0A08
block|,
name|i40e_aqc_opc_lldp_stop_start_spec_agent
init|=
literal|0x0A09
block|,
comment|/* Tunnel commands */
name|i40e_aqc_opc_add_udp_tunnel
init|=
literal|0x0B00
block|,
name|i40e_aqc_opc_del_udp_tunnel
init|=
literal|0x0B01
block|,
comment|/* Async Events */
name|i40e_aqc_opc_event_lan_overflow
init|=
literal|0x1001
block|,
comment|/* OEM commands */
name|i40e_aqc_opc_oem_parameter_change
init|=
literal|0xFE00
block|,
name|i40e_aqc_opc_oem_device_status_change
init|=
literal|0xFE01
block|,
name|i40e_aqc_opc_oem_ocsd_initialize
init|=
literal|0xFE02
block|,
name|i40e_aqc_opc_oem_ocbb_initialize
init|=
literal|0xFE03
block|,
comment|/* debug commands */
name|i40e_aqc_opc_debug_read_reg
init|=
literal|0xFF03
block|,
name|i40e_aqc_opc_debug_write_reg
init|=
literal|0xFF04
block|,
name|i40e_aqc_opc_debug_modify_reg
init|=
literal|0xFF07
block|,
name|i40e_aqc_opc_debug_dump_internals
init|=
literal|0xFF08
block|, }
enum|;
end_enum

begin_comment
comment|/* command structures and indirect data structures */
end_comment

begin_comment
comment|/* Structure naming conventions:  * - no suffix for direct command descriptor structures  * - _data for indirect sent data  * - _resp for indirect return data (data which is both will use _data)  * - _completion for direct return data  * - _element_ for repeated elements (may also be _data or _resp)  *  * Command structures are expected to overlay the params.raw member of the basic  * descriptor, and as such cannot exceed 16 bytes in length.  */
end_comment

begin_comment
comment|/* This macro is used to generate a compilation error if a structure  * is not exactly the correct length. It gives a divide by zero error if the  * structure is not of the correct size, otherwise it creates an enum that is  * never used.  */
end_comment

begin_define
define|#
directive|define
name|I40E_CHECK_STRUCT_LEN
parameter_list|(
name|n
parameter_list|,
name|X
parameter_list|)
value|enum i40e_static_assert_enum_##X \ 	{ i40e_static_assert_##X = (n)/((sizeof(struct X) == (n)) ? 1 : 0) }
end_define

begin_comment
comment|/* This macro is used extensively to ensure that command structures are 16  * bytes in length as they have to map to the raw array of that size.  */
end_comment

begin_define
define|#
directive|define
name|I40E_CHECK_CMD_LENGTH
parameter_list|(
name|X
parameter_list|)
value|I40E_CHECK_STRUCT_LEN(16, X)
end_define

begin_comment
comment|/* internal (0x00XX) commands */
end_comment

begin_comment
comment|/* Get version (direct 0x0001) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_get_version
block|{
name|__le32
name|rom_ver
decl_stmt|;
name|__le32
name|fw_build
decl_stmt|;
name|__le16
name|fw_major
decl_stmt|;
name|__le16
name|fw_minor
decl_stmt|;
name|__le16
name|api_major
decl_stmt|;
name|__le16
name|api_minor
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_get_version
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Send driver version (indirect 0x0002) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_driver_version
block|{
name|u8
name|driver_major_ver
decl_stmt|;
name|u8
name|driver_minor_ver
decl_stmt|;
name|u8
name|driver_build_ver
decl_stmt|;
name|u8
name|driver_subbuild_ver
decl_stmt|;
name|u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
name|__le32
name|address_high
decl_stmt|;
name|__le32
name|address_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_driver_version
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Queue Shutdown (direct 0x0003) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_queue_shutdown
block|{
name|__le32
name|driver_unloading
decl_stmt|;
define|#
directive|define
name|I40E_AQ_DRIVER_UNLOADING
value|0x1
name|u8
name|reserved
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_queue_shutdown
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Set PF context (0x0004, direct) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_set_pf_context
block|{
name|u8
name|pf_id
decl_stmt|;
name|u8
name|reserved
index|[
literal|15
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_set_pf_context
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Request resource ownership (direct 0x0008)  * Release resource ownership (direct 0x0009)  */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_RESOURCE_NVM
value|1
end_define

begin_define
define|#
directive|define
name|I40E_AQ_RESOURCE_SDP
value|2
end_define

begin_define
define|#
directive|define
name|I40E_AQ_RESOURCE_ACCESS_READ
value|1
end_define

begin_define
define|#
directive|define
name|I40E_AQ_RESOURCE_ACCESS_WRITE
value|2
end_define

begin_define
define|#
directive|define
name|I40E_AQ_RESOURCE_NVM_READ_TIMEOUT
value|3000
end_define

begin_define
define|#
directive|define
name|I40E_AQ_RESOURCE_NVM_WRITE_TIMEOUT
value|180000
end_define

begin_struct
struct|struct
name|i40e_aqc_request_resource
block|{
name|__le16
name|resource_id
decl_stmt|;
name|__le16
name|access_type
decl_stmt|;
name|__le32
name|timeout
decl_stmt|;
name|__le32
name|resource_number
decl_stmt|;
name|u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_request_resource
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Get function capabilities (indirect 0x000A)  * Get device capabilities (indirect 0x000B)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_list_capabilites
block|{
name|u8
name|command_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_LIST_CAP_PF_INDEX_EN
value|1
name|u8
name|pf_index
decl_stmt|;
name|u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|__le32
name|count
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_list_capabilites
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_list_capabilities_element_resp
block|{
name|__le16
name|id
decl_stmt|;
name|u8
name|major_rev
decl_stmt|;
name|u8
name|minor_rev
decl_stmt|;
name|__le32
name|number
decl_stmt|;
name|__le32
name|logical_id
decl_stmt|;
name|__le32
name|phys_id
decl_stmt|;
name|u8
name|reserved
index|[
literal|16
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* list of caps */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_SWITCH_MODE
value|0x0001
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_MNG_MODE
value|0x0002
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_NPAR_ACTIVE
value|0x0003
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_OS2BMC_CAP
value|0x0004
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_FUNCTIONS_VALID
value|0x0005
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_ALTERNATE_RAM
value|0x0006
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_WOL_AND_PROXY
value|0x0008
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_SRIOV
value|0x0012
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_VF
value|0x0013
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_VMDQ
value|0x0014
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_8021QBG
value|0x0015
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_8021QBR
value|0x0016
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_VSI
value|0x0017
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_DCB
value|0x0018
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_FCOE
value|0x0021
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_ISCSI
value|0x0022
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_RSS
value|0x0040
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_RXQ
value|0x0041
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_TXQ
value|0x0042
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_MSIX
value|0x0043
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_VF_MSIX
value|0x0044
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_FLOW_DIRECTOR
value|0x0045
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_1588
value|0x0046
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_IWARP
value|0x0051
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_LED
value|0x0061
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_SDP
value|0x0062
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_MDIO
value|0x0063
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_WSR_PROT
value|0x0064
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_FLEX10
value|0x00F1
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CAP_ID_CEM
value|0x00F2
end_define

begin_comment
comment|/* Set CPPM Configuration (direct 0x0103) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_cppm_configuration
block|{
name|__le16
name|command_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_CPPM_EN_LTRC
value|0x0800
define|#
directive|define
name|I40E_AQ_CPPM_EN_DMCTH
value|0x1000
define|#
directive|define
name|I40E_AQ_CPPM_EN_DMCTLX
value|0x2000
define|#
directive|define
name|I40E_AQ_CPPM_EN_HPTC
value|0x4000
define|#
directive|define
name|I40E_AQ_CPPM_EN_DMARC
value|0x8000
name|__le16
name|ttlx
decl_stmt|;
name|__le32
name|dmacr
decl_stmt|;
name|__le16
name|dmcth
decl_stmt|;
name|u8
name|hptc
decl_stmt|;
name|u8
name|reserved
decl_stmt|;
name|__le32
name|pfltrc
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_cppm_configuration
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Set ARP Proxy command / response (indirect 0x0104) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_arp_proxy_data
block|{
name|__le16
name|command_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_ARP_INIT_IPV4
value|0x0008
define|#
directive|define
name|I40E_AQ_ARP_UNSUP_CTL
value|0x0010
define|#
directive|define
name|I40E_AQ_ARP_ENA
value|0x0020
define|#
directive|define
name|I40E_AQ_ARP_ADD_IPV4
value|0x0040
define|#
directive|define
name|I40E_AQ_ARP_DEL_IPV4
value|0x0080
name|__le16
name|table_id
decl_stmt|;
name|__le32
name|pfpm_proxyfc
decl_stmt|;
name|__le32
name|ip_addr
decl_stmt|;
name|u8
name|mac_addr
index|[
literal|6
index|]
decl_stmt|;
name|u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x14
argument_list|,
name|i40e_aqc_arp_proxy_data
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Set NS Proxy Table Entry Command (indirect 0x0105) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_ns_proxy_data
block|{
name|__le16
name|table_idx_mac_addr_0
decl_stmt|;
name|__le16
name|table_idx_mac_addr_1
decl_stmt|;
name|__le16
name|table_idx_ipv6_0
decl_stmt|;
name|__le16
name|table_idx_ipv6_1
decl_stmt|;
name|__le16
name|control
decl_stmt|;
define|#
directive|define
name|I40E_AQ_NS_PROXY_ADD_0
value|0x0100
define|#
directive|define
name|I40E_AQ_NS_PROXY_DEL_0
value|0x0200
define|#
directive|define
name|I40E_AQ_NS_PROXY_ADD_1
value|0x0400
define|#
directive|define
name|I40E_AQ_NS_PROXY_DEL_1
value|0x0800
define|#
directive|define
name|I40E_AQ_NS_PROXY_ADD_IPV6_0
value|0x1000
define|#
directive|define
name|I40E_AQ_NS_PROXY_DEL_IPV6_0
value|0x2000
define|#
directive|define
name|I40E_AQ_NS_PROXY_ADD_IPV6_1
value|0x4000
define|#
directive|define
name|I40E_AQ_NS_PROXY_DEL_IPV6_1
value|0x8000
define|#
directive|define
name|I40E_AQ_NS_PROXY_COMMAND_SEQ
value|0x0001
define|#
directive|define
name|I40E_AQ_NS_PROXY_INIT_IPV6_TBL
value|0x0002
define|#
directive|define
name|I40E_AQ_NS_PROXY_INIT_MAC_TBL
value|0x0004
name|u8
name|mac_addr_0
index|[
literal|6
index|]
decl_stmt|;
name|u8
name|mac_addr_1
index|[
literal|6
index|]
decl_stmt|;
name|u8
name|local_mac_addr
index|[
literal|6
index|]
decl_stmt|;
name|u8
name|ipv6_addr_0
index|[
literal|16
index|]
decl_stmt|;
comment|/* Warning! spec specifies BE byte order */
name|u8
name|ipv6_addr_1
index|[
literal|16
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x3c
argument_list|,
name|i40e_aqc_ns_proxy_data
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Manage LAA Command (0x0106) - obsolete */
end_comment

begin_struct
struct|struct
name|i40e_aqc_mng_laa
block|{
name|__le16
name|command_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_LAA_FLAG_WR
value|0x8000
name|u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|__le32
name|sal
decl_stmt|;
name|__le16
name|sah
decl_stmt|;
name|u8
name|reserved2
index|[
literal|6
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_mng_laa
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Manage MAC Address Read Command (indirect 0x0107) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_mac_address_read
block|{
name|__le16
name|command_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQC_LAN_ADDR_VALID
value|0x10
define|#
directive|define
name|I40E_AQC_SAN_ADDR_VALID
value|0x20
define|#
directive|define
name|I40E_AQC_PORT_ADDR_VALID
value|0x40
define|#
directive|define
name|I40E_AQC_WOL_ADDR_VALID
value|0x80
define|#
directive|define
name|I40E_AQC_MC_MAG_EN_VALID
value|0x100
define|#
directive|define
name|I40E_AQC_ADDR_VALID_MASK
value|0x1F0
name|u8
name|reserved
index|[
literal|6
index|]
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_mac_address_read
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_mac_address_read_data
block|{
name|u8
name|pf_lan_mac
index|[
literal|6
index|]
decl_stmt|;
name|u8
name|pf_san_mac
index|[
literal|6
index|]
decl_stmt|;
name|u8
name|port_mac
index|[
literal|6
index|]
decl_stmt|;
name|u8
name|pf_wol_mac
index|[
literal|6
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|24
argument_list|,
name|i40e_aqc_mac_address_read_data
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Manage MAC Address Write Command (0x0108) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_mac_address_write
block|{
name|__le16
name|command_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQC_WRITE_TYPE_LAA_ONLY
value|0x0000
define|#
directive|define
name|I40E_AQC_WRITE_TYPE_LAA_WOL
value|0x4000
define|#
directive|define
name|I40E_AQC_WRITE_TYPE_PORT
value|0x8000
define|#
directive|define
name|I40E_AQC_WRITE_TYPE_UPDATE_MC_MAG
value|0xC000
define|#
directive|define
name|I40E_AQC_WRITE_TYPE_MASK
value|0xC000
name|__le16
name|mac_sah
decl_stmt|;
name|__le32
name|mac_sal
decl_stmt|;
name|u8
name|reserved
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_mac_address_write
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* PXE commands (0x011x) */
end_comment

begin_comment
comment|/* Clear PXE Command and response  (direct 0x0110) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_clear_pxe
block|{
name|u8
name|rx_cnt
decl_stmt|;
name|u8
name|reserved
index|[
literal|15
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_clear_pxe
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Switch configuration commands (0x02xx) */
end_comment

begin_comment
comment|/* Used by many indirect commands that only pass an seid and a buffer in the  * command  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_switch_seid
block|{
name|__le16
name|seid
decl_stmt|;
name|u8
name|reserved
index|[
literal|6
index|]
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_switch_seid
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Get Switch Configuration command (indirect 0x0200)  * uses i40e_aqc_switch_seid for the descriptor  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_get_switch_config_header_resp
block|{
name|__le16
name|num_reported
decl_stmt|;
name|__le16
name|num_total
decl_stmt|;
name|u8
name|reserved
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_get_switch_config_header_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_switch_config_element_resp
block|{
name|u8
name|element_type
decl_stmt|;
define|#
directive|define
name|I40E_AQ_SW_ELEM_TYPE_MAC
value|1
define|#
directive|define
name|I40E_AQ_SW_ELEM_TYPE_PF
value|2
define|#
directive|define
name|I40E_AQ_SW_ELEM_TYPE_VF
value|3
define|#
directive|define
name|I40E_AQ_SW_ELEM_TYPE_EMP
value|4
define|#
directive|define
name|I40E_AQ_SW_ELEM_TYPE_BMC
value|5
define|#
directive|define
name|I40E_AQ_SW_ELEM_TYPE_PV
value|16
define|#
directive|define
name|I40E_AQ_SW_ELEM_TYPE_VEB
value|17
define|#
directive|define
name|I40E_AQ_SW_ELEM_TYPE_PA
value|18
define|#
directive|define
name|I40E_AQ_SW_ELEM_TYPE_VSI
value|19
name|u8
name|revision
decl_stmt|;
define|#
directive|define
name|I40E_AQ_SW_ELEM_REV_1
value|1
name|__le16
name|seid
decl_stmt|;
name|__le16
name|uplink_seid
decl_stmt|;
name|__le16
name|downlink_seid
decl_stmt|;
name|u8
name|reserved
index|[
literal|3
index|]
decl_stmt|;
name|u8
name|connection_type
decl_stmt|;
define|#
directive|define
name|I40E_AQ_CONN_TYPE_REGULAR
value|0x1
define|#
directive|define
name|I40E_AQ_CONN_TYPE_DEFAULT
value|0x2
define|#
directive|define
name|I40E_AQ_CONN_TYPE_CASCADED
value|0x3
name|__le16
name|scheduler_id
decl_stmt|;
name|__le16
name|element_info
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x10
argument_list|,
name|i40e_aqc_switch_config_element_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Get Switch Configuration (indirect 0x0200)  *    an array of elements are returned in the response buffer  *    the first in the array is the header, remainder are elements  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_get_switch_config_resp
block|{
name|struct
name|i40e_aqc_get_switch_config_header_resp
name|header
decl_stmt|;
name|struct
name|i40e_aqc_switch_config_element_resp
name|element
index|[
literal|1
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x20
argument_list|,
name|i40e_aqc_get_switch_config_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Add Statistics (direct 0x0201)  * Remove Statistics (direct 0x0202)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_add_remove_statistics
block|{
name|__le16
name|seid
decl_stmt|;
name|__le16
name|vlan
decl_stmt|;
name|__le16
name|stat_index
decl_stmt|;
name|u8
name|reserved
index|[
literal|10
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_remove_statistics
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Set Port Parameters command (direct 0x0203) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_set_port_parameters
block|{
name|__le16
name|command_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_SET_P_PARAMS_SAVE_BAD_PACKETS
value|1
define|#
directive|define
name|I40E_AQ_SET_P_PARAMS_PAD_SHORT_PACKETS
value|2
comment|/* must set! */
define|#
directive|define
name|I40E_AQ_SET_P_PARAMS_DOUBLE_VLAN_ENA
value|4
name|__le16
name|bad_frame_vsi
decl_stmt|;
name|__le16
name|default_seid
decl_stmt|;
comment|/* reserved for command */
name|u8
name|reserved
index|[
literal|10
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_set_port_parameters
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Get Switch Resource Allocation (indirect 0x0204) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_get_switch_resource_alloc
block|{
name|u8
name|num_entries
decl_stmt|;
comment|/* reserved for command */
name|u8
name|reserved
index|[
literal|7
index|]
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_get_switch_resource_alloc
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* expect an array of these structs in the response buffer */
end_comment

begin_struct
struct|struct
name|i40e_aqc_switch_resource_alloc_element_resp
block|{
name|u8
name|resource_type
decl_stmt|;
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_VEB
value|0x0
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_VSI
value|0x1
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_MACADDR
value|0x2
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_STAG
value|0x3
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_ETAG
value|0x4
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_MULTICAST_HASH
value|0x5
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_UNICAST_HASH
value|0x6
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_VLAN
value|0x7
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_VSI_LIST_ENTRY
value|0x8
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_ETAG_LIST_ENTRY
value|0x9
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_VLAN_STAT_POOL
value|0xA
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_MIRROR_RULE
value|0xB
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_QUEUE_SETS
value|0xC
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_VLAN_FILTERS
value|0xD
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_INNER_MAC_FILTERS
value|0xF
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_IP_FILTERS
value|0x10
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_GRE_VN_KEYS
value|0x11
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_VN2_KEYS
value|0x12
define|#
directive|define
name|I40E_AQ_RESOURCE_TYPE_TUNNEL_PORTS
value|0x13
name|u8
name|reserved1
decl_stmt|;
name|__le16
name|guaranteed
decl_stmt|;
name|__le16
name|total
decl_stmt|;
name|__le16
name|used
decl_stmt|;
name|__le16
name|total_unalloced
decl_stmt|;
name|u8
name|reserved2
index|[
literal|6
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x10
argument_list|,
name|i40e_aqc_switch_resource_alloc_element_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Set Switch Configuration (direct 0x0205) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_set_switch_config
block|{
name|__le16
name|flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_SET_SWITCH_CFG_PROMISC
value|0x0001
define|#
directive|define
name|I40E_AQ_SET_SWITCH_CFG_L2_FILTER
value|0x0002
name|__le16
name|valid_flags
decl_stmt|;
name|u8
name|reserved
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_set_switch_config
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Add VSI (indirect 0x0210)  *    this indirect command uses struct i40e_aqc_vsi_properties_data  *    as the indirect buffer (128 bytes)  *  * Update VSI (indirect 0x211)  *     uses the same data structure as Add VSI  *  * Get VSI (indirect 0x0212)  *     uses the same completion and data structure as Add VSI  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_add_get_update_vsi
block|{
name|__le16
name|uplink_seid
decl_stmt|;
name|u8
name|connection_type
decl_stmt|;
define|#
directive|define
name|I40E_AQ_VSI_CONN_TYPE_NORMAL
value|0x1
define|#
directive|define
name|I40E_AQ_VSI_CONN_TYPE_DEFAULT
value|0x2
define|#
directive|define
name|I40E_AQ_VSI_CONN_TYPE_CASCADED
value|0x3
name|u8
name|reserved1
decl_stmt|;
name|u8
name|vf_id
decl_stmt|;
name|u8
name|reserved2
decl_stmt|;
name|__le16
name|vsi_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_VSI_TYPE_SHIFT
value|0x0
define|#
directive|define
name|I40E_AQ_VSI_TYPE_MASK
value|(0x3<< I40E_AQ_VSI_TYPE_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_TYPE_VF
value|0x0
define|#
directive|define
name|I40E_AQ_VSI_TYPE_VMDQ2
value|0x1
define|#
directive|define
name|I40E_AQ_VSI_TYPE_PF
value|0x2
define|#
directive|define
name|I40E_AQ_VSI_TYPE_EMP_MNG
value|0x3
define|#
directive|define
name|I40E_AQ_VSI_FLAG_CASCADED_PV
value|0x4
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_get_update_vsi
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_add_get_update_vsi_completion
block|{
name|__le16
name|seid
decl_stmt|;
name|__le16
name|vsi_number
decl_stmt|;
name|__le16
name|vsi_used
decl_stmt|;
name|__le16
name|vsi_free
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_get_update_vsi_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_vsi_properties_data
block|{
comment|/* first 96 byte are written by SW */
name|__le16
name|valid_sections
decl_stmt|;
define|#
directive|define
name|I40E_AQ_VSI_PROP_SWITCH_VALID
value|0x0001
define|#
directive|define
name|I40E_AQ_VSI_PROP_SECURITY_VALID
value|0x0002
define|#
directive|define
name|I40E_AQ_VSI_PROP_VLAN_VALID
value|0x0004
define|#
directive|define
name|I40E_AQ_VSI_PROP_CAS_PV_VALID
value|0x0008
define|#
directive|define
name|I40E_AQ_VSI_PROP_INGRESS_UP_VALID
value|0x0010
define|#
directive|define
name|I40E_AQ_VSI_PROP_EGRESS_UP_VALID
value|0x0020
define|#
directive|define
name|I40E_AQ_VSI_PROP_QUEUE_MAP_VALID
value|0x0040
define|#
directive|define
name|I40E_AQ_VSI_PROP_QUEUE_OPT_VALID
value|0x0080
define|#
directive|define
name|I40E_AQ_VSI_PROP_OUTER_UP_VALID
value|0x0100
define|#
directive|define
name|I40E_AQ_VSI_PROP_SCHED_VALID
value|0x0200
comment|/* switch section */
name|__le16
name|switch_id
decl_stmt|;
comment|/* 12bit id combined with flags below */
define|#
directive|define
name|I40E_AQ_VSI_SW_ID_SHIFT
value|0x0000
define|#
directive|define
name|I40E_AQ_VSI_SW_ID_MASK
value|(0xFFF<< I40E_AQ_VSI_SW_ID_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_SW_ID_FLAG_NOT_STAG
value|0x1000
define|#
directive|define
name|I40E_AQ_VSI_SW_ID_FLAG_ALLOW_LB
value|0x2000
define|#
directive|define
name|I40E_AQ_VSI_SW_ID_FLAG_LOCAL_LB
value|0x4000
name|u8
name|sw_reserved
index|[
literal|2
index|]
decl_stmt|;
comment|/* security section */
name|u8
name|sec_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_VSI_SEC_FLAG_ALLOW_DEST_OVRD
value|0x01
define|#
directive|define
name|I40E_AQ_VSI_SEC_FLAG_ENABLE_VLAN_CHK
value|0x02
define|#
directive|define
name|I40E_AQ_VSI_SEC_FLAG_ENABLE_MAC_CHK
value|0x04
name|u8
name|sec_reserved
decl_stmt|;
comment|/* VLAN section */
name|__le16
name|pvid
decl_stmt|;
comment|/* VLANS include priority bits */
name|__le16
name|fcoe_pvid
decl_stmt|;
name|u8
name|port_vlan_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_VSI_PVLAN_MODE_SHIFT
value|0x00
define|#
directive|define
name|I40E_AQ_VSI_PVLAN_MODE_MASK
value|(0x03<< \ 					 I40E_AQ_VSI_PVLAN_MODE_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_PVLAN_MODE_TAGGED
value|0x01
define|#
directive|define
name|I40E_AQ_VSI_PVLAN_MODE_UNTAGGED
value|0x02
define|#
directive|define
name|I40E_AQ_VSI_PVLAN_MODE_ALL
value|0x03
define|#
directive|define
name|I40E_AQ_VSI_PVLAN_INSERT_PVID
value|0x04
define|#
directive|define
name|I40E_AQ_VSI_PVLAN_EMOD_SHIFT
value|0x03
define|#
directive|define
name|I40E_AQ_VSI_PVLAN_EMOD_MASK
value|(0x3<< \ 					 I40E_AQ_VSI_PVLAN_EMOD_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_PVLAN_EMOD_STR_BOTH
value|0x0
define|#
directive|define
name|I40E_AQ_VSI_PVLAN_EMOD_STR_UP
value|0x08
define|#
directive|define
name|I40E_AQ_VSI_PVLAN_EMOD_STR
value|0x10
define|#
directive|define
name|I40E_AQ_VSI_PVLAN_EMOD_NOTHING
value|0x18
name|u8
name|pvlan_reserved
index|[
literal|3
index|]
decl_stmt|;
comment|/* ingress egress up sections */
name|__le32
name|ingress_table
decl_stmt|;
comment|/* bitmap, 3 bits per up */
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP0_SHIFT
value|0
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP0_MASK
value|(0x7<< \ 					 I40E_AQ_VSI_UP_TABLE_UP0_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP1_SHIFT
value|3
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP1_MASK
value|(0x7<< \ 					 I40E_AQ_VSI_UP_TABLE_UP1_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP2_SHIFT
value|6
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP2_MASK
value|(0x7<< \ 					 I40E_AQ_VSI_UP_TABLE_UP2_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP3_SHIFT
value|9
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP3_MASK
value|(0x7<< \ 					 I40E_AQ_VSI_UP_TABLE_UP3_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP4_SHIFT
value|12
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP4_MASK
value|(0x7<< \ 					 I40E_AQ_VSI_UP_TABLE_UP4_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP5_SHIFT
value|15
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP5_MASK
value|(0x7<< \ 					 I40E_AQ_VSI_UP_TABLE_UP5_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP6_SHIFT
value|18
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP6_MASK
value|(0x7<< \ 					 I40E_AQ_VSI_UP_TABLE_UP6_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP7_SHIFT
value|21
define|#
directive|define
name|I40E_AQ_VSI_UP_TABLE_UP7_MASK
value|(0x7<< \ 					 I40E_AQ_VSI_UP_TABLE_UP7_SHIFT)
name|__le32
name|egress_table
decl_stmt|;
comment|/* same defines as for ingress table */
comment|/* cascaded PV section */
name|__le16
name|cas_pv_tag
decl_stmt|;
name|u8
name|cas_pv_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_VSI_CAS_PV_TAGX_SHIFT
value|0x00
define|#
directive|define
name|I40E_AQ_VSI_CAS_PV_TAGX_MASK
value|(0x03<< \ 						 I40E_AQ_VSI_CAS_PV_TAGX_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_CAS_PV_TAGX_LEAVE
value|0x00
define|#
directive|define
name|I40E_AQ_VSI_CAS_PV_TAGX_REMOVE
value|0x01
define|#
directive|define
name|I40E_AQ_VSI_CAS_PV_TAGX_COPY
value|0x02
define|#
directive|define
name|I40E_AQ_VSI_CAS_PV_INSERT_TAG
value|0x10
define|#
directive|define
name|I40E_AQ_VSI_CAS_PV_ETAG_PRUNE
value|0x20
define|#
directive|define
name|I40E_AQ_VSI_CAS_PV_ACCEPT_HOST_TAG
value|0x40
name|u8
name|cas_pv_reserved
decl_stmt|;
comment|/* queue mapping section */
name|__le16
name|mapping_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_VSI_QUE_MAP_CONTIG
value|0x0
define|#
directive|define
name|I40E_AQ_VSI_QUE_MAP_NONCONTIG
value|0x1
name|__le16
name|queue_mapping
index|[
literal|16
index|]
decl_stmt|;
define|#
directive|define
name|I40E_AQ_VSI_QUEUE_SHIFT
value|0x0
define|#
directive|define
name|I40E_AQ_VSI_QUEUE_MASK
value|(0x7FF<< I40E_AQ_VSI_QUEUE_SHIFT)
name|__le16
name|tc_mapping
index|[
literal|8
index|]
decl_stmt|;
define|#
directive|define
name|I40E_AQ_VSI_TC_QUE_OFFSET_SHIFT
value|0
define|#
directive|define
name|I40E_AQ_VSI_TC_QUE_OFFSET_MASK
value|(0x1FF<< \ 					 I40E_AQ_VSI_TC_QUE_OFFSET_SHIFT)
define|#
directive|define
name|I40E_AQ_VSI_TC_QUE_NUMBER_SHIFT
value|9
define|#
directive|define
name|I40E_AQ_VSI_TC_QUE_NUMBER_MASK
value|(0x7<< \ 					 I40E_AQ_VSI_TC_QUE_NUMBER_SHIFT)
comment|/* queueing option section */
name|u8
name|queueing_opt_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_VSI_QUE_OPT_TCP_ENA
value|0x10
define|#
directive|define
name|I40E_AQ_VSI_QUE_OPT_FCOE_ENA
value|0x20
name|u8
name|queueing_opt_reserved
index|[
literal|3
index|]
decl_stmt|;
comment|/* scheduler section */
name|u8
name|up_enable_bits
decl_stmt|;
name|u8
name|sched_reserved
decl_stmt|;
comment|/* outer up section */
name|__le32
name|outer_up_table
decl_stmt|;
comment|/* same structure and defines as ingress table */
name|u8
name|cmd_reserved
index|[
literal|8
index|]
decl_stmt|;
comment|/* last 32 bytes are written by FW */
name|__le16
name|qs_handle
index|[
literal|8
index|]
decl_stmt|;
define|#
directive|define
name|I40E_AQ_VSI_QS_HANDLE_INVALID
value|0xFFFF
name|__le16
name|stat_counter_idx
decl_stmt|;
name|__le16
name|sched_id
decl_stmt|;
name|u8
name|resp_reserved
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|128
argument_list|,
name|i40e_aqc_vsi_properties_data
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Add Port Virtualizer (direct 0x0220)  * also used for update PV (direct 0x0221) but only flags are used  * (IS_CTRL_PORT only works on add PV)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_add_update_pv
block|{
name|__le16
name|command_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQC_PV_FLAG_PV_TYPE
value|0x1
define|#
directive|define
name|I40E_AQC_PV_FLAG_FWD_UNKNOWN_STAG_EN
value|0x2
define|#
directive|define
name|I40E_AQC_PV_FLAG_FWD_UNKNOWN_ETAG_EN
value|0x4
define|#
directive|define
name|I40E_AQC_PV_FLAG_IS_CTRL_PORT
value|0x8
name|__le16
name|uplink_seid
decl_stmt|;
name|__le16
name|connected_seid
decl_stmt|;
name|u8
name|reserved
index|[
literal|10
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_update_pv
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_add_update_pv_completion
block|{
comment|/* reserved for update; for add also encodes error if rc == ENOSPC */
name|__le16
name|pv_seid
decl_stmt|;
define|#
directive|define
name|I40E_AQC_PV_ERR_FLAG_NO_PV
value|0x1
define|#
directive|define
name|I40E_AQC_PV_ERR_FLAG_NO_SCHED
value|0x2
define|#
directive|define
name|I40E_AQC_PV_ERR_FLAG_NO_COUNTER
value|0x4
define|#
directive|define
name|I40E_AQC_PV_ERR_FLAG_NO_ENTRY
value|0x8
name|u8
name|reserved
index|[
literal|14
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_update_pv_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Get PV Params (direct 0x0222)  * uses i40e_aqc_switch_seid for the descriptor  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_get_pv_params_completion
block|{
name|__le16
name|seid
decl_stmt|;
name|__le16
name|default_stag
decl_stmt|;
name|__le16
name|pv_flags
decl_stmt|;
comment|/* same flags as add_pv */
define|#
directive|define
name|I40E_AQC_GET_PV_PV_TYPE
value|0x1
define|#
directive|define
name|I40E_AQC_GET_PV_FRWD_UNKNOWN_STAG
value|0x2
define|#
directive|define
name|I40E_AQC_GET_PV_FRWD_UNKNOWN_ETAG
value|0x4
name|u8
name|reserved
index|[
literal|8
index|]
decl_stmt|;
name|__le16
name|default_port_seid
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_get_pv_params_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Add VEB (direct 0x0230) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_add_veb
block|{
name|__le16
name|uplink_seid
decl_stmt|;
name|__le16
name|downlink_seid
decl_stmt|;
name|__le16
name|veb_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQC_ADD_VEB_FLOATING
value|0x1
define|#
directive|define
name|I40E_AQC_ADD_VEB_PORT_TYPE_SHIFT
value|1
define|#
directive|define
name|I40E_AQC_ADD_VEB_PORT_TYPE_MASK
value|(0x3<< \ 					I40E_AQC_ADD_VEB_PORT_TYPE_SHIFT)
define|#
directive|define
name|I40E_AQC_ADD_VEB_PORT_TYPE_DEFAULT
value|0x2
define|#
directive|define
name|I40E_AQC_ADD_VEB_PORT_TYPE_DATA
value|0x4
define|#
directive|define
name|I40E_AQC_ADD_VEB_ENABLE_L2_FILTER
value|0x8
comment|/* deprecated */
define|#
directive|define
name|I40E_AQC_ADD_VEB_ENABLE_DISABLE_STATS
value|0x10
name|u8
name|enable_tcs
decl_stmt|;
name|u8
name|reserved
index|[
literal|9
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_veb
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_add_veb_completion
block|{
name|u8
name|reserved
index|[
literal|6
index|]
decl_stmt|;
name|__le16
name|switch_seid
decl_stmt|;
comment|/* also encodes error if rc == ENOSPC; codes are the same as add_pv */
name|__le16
name|veb_seid
decl_stmt|;
define|#
directive|define
name|I40E_AQC_VEB_ERR_FLAG_NO_VEB
value|0x1
define|#
directive|define
name|I40E_AQC_VEB_ERR_FLAG_NO_SCHED
value|0x2
define|#
directive|define
name|I40E_AQC_VEB_ERR_FLAG_NO_COUNTER
value|0x4
define|#
directive|define
name|I40E_AQC_VEB_ERR_FLAG_NO_ENTRY
value|0x8
name|__le16
name|statistic_index
decl_stmt|;
name|__le16
name|vebs_used
decl_stmt|;
name|__le16
name|vebs_free
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_veb_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Get VEB Parameters (direct 0x0232)  * uses i40e_aqc_switch_seid for the descriptor  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_get_veb_parameters_completion
block|{
name|__le16
name|seid
decl_stmt|;
name|__le16
name|switch_id
decl_stmt|;
name|__le16
name|veb_flags
decl_stmt|;
comment|/* only the first/last flags from 0x0230 is valid */
name|__le16
name|statistic_index
decl_stmt|;
name|__le16
name|vebs_used
decl_stmt|;
name|__le16
name|vebs_free
decl_stmt|;
name|u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_get_veb_parameters_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Delete Element (direct 0x0243)  * uses the generic i40e_aqc_switch_seid  */
end_comment

begin_comment
comment|/* Add MAC-VLAN (indirect 0x0250) */
end_comment

begin_comment
comment|/* used for the command for most vlan commands */
end_comment

begin_struct
struct|struct
name|i40e_aqc_macvlan
block|{
name|__le16
name|num_addresses
decl_stmt|;
name|__le16
name|seid
index|[
literal|3
index|]
decl_stmt|;
define|#
directive|define
name|I40E_AQC_MACVLAN_CMD_SEID_NUM_SHIFT
value|0
define|#
directive|define
name|I40E_AQC_MACVLAN_CMD_SEID_NUM_MASK
value|(0x3FF<< \ 					I40E_AQC_MACVLAN_CMD_SEID_NUM_SHIFT)
define|#
directive|define
name|I40E_AQC_MACVLAN_CMD_SEID_VALID
value|0x8000
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_macvlan
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* indirect data for command and response */
end_comment

begin_struct
struct|struct
name|i40e_aqc_add_macvlan_element_data
block|{
name|u8
name|mac_addr
index|[
literal|6
index|]
decl_stmt|;
name|__le16
name|vlan_tag
decl_stmt|;
name|__le16
name|flags
decl_stmt|;
define|#
directive|define
name|I40E_AQC_MACVLAN_ADD_PERFECT_MATCH
value|0x0001
define|#
directive|define
name|I40E_AQC_MACVLAN_ADD_HASH_MATCH
value|0x0002
define|#
directive|define
name|I40E_AQC_MACVLAN_ADD_IGNORE_VLAN
value|0x0004
define|#
directive|define
name|I40E_AQC_MACVLAN_ADD_TO_QUEUE
value|0x0008
define|#
directive|define
name|I40E_AQC_MACVLAN_ADD_USE_SHARED_MAC
value|0x0010
name|__le16
name|queue_number
decl_stmt|;
define|#
directive|define
name|I40E_AQC_MACVLAN_CMD_QUEUE_SHIFT
value|0
define|#
directive|define
name|I40E_AQC_MACVLAN_CMD_QUEUE_MASK
value|(0x7FF<< \ 					I40E_AQC_MACVLAN_CMD_SEID_NUM_SHIFT)
comment|/* response section */
name|u8
name|match_method
decl_stmt|;
define|#
directive|define
name|I40E_AQC_MM_PERFECT_MATCH
value|0x01
define|#
directive|define
name|I40E_AQC_MM_HASH_MATCH
value|0x02
define|#
directive|define
name|I40E_AQC_MM_ERR_NO_RES
value|0xFF
name|u8
name|reserved1
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|i40e_aqc_add_remove_macvlan_completion
block|{
name|__le16
name|perfect_mac_used
decl_stmt|;
name|__le16
name|perfect_mac_free
decl_stmt|;
name|__le16
name|unicast_hash_free
decl_stmt|;
name|__le16
name|multicast_hash_free
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_remove_macvlan_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Remove MAC-VLAN (indirect 0x0251)  * uses i40e_aqc_macvlan for the descriptor  * data points to an array of num_addresses of elements  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_remove_macvlan_element_data
block|{
name|u8
name|mac_addr
index|[
literal|6
index|]
decl_stmt|;
name|__le16
name|vlan_tag
decl_stmt|;
name|u8
name|flags
decl_stmt|;
define|#
directive|define
name|I40E_AQC_MACVLAN_DEL_PERFECT_MATCH
value|0x01
define|#
directive|define
name|I40E_AQC_MACVLAN_DEL_HASH_MATCH
value|0x02
define|#
directive|define
name|I40E_AQC_MACVLAN_DEL_IGNORE_VLAN
value|0x08
define|#
directive|define
name|I40E_AQC_MACVLAN_DEL_ALL_VSIS
value|0x10
name|u8
name|reserved
index|[
literal|3
index|]
decl_stmt|;
comment|/* reply section */
name|u8
name|error_code
decl_stmt|;
define|#
directive|define
name|I40E_AQC_REMOVE_MACVLAN_SUCCESS
value|0x0
define|#
directive|define
name|I40E_AQC_REMOVE_MACVLAN_FAIL
value|0xFF
name|u8
name|reply_reserved
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Add VLAN (indirect 0x0252)  * Remove VLAN (indirect 0x0253)  * use the generic i40e_aqc_macvlan for the command  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_add_remove_vlan_element_data
block|{
name|__le16
name|vlan_tag
decl_stmt|;
name|u8
name|vlan_flags
decl_stmt|;
comment|/* flags for add VLAN */
define|#
directive|define
name|I40E_AQC_ADD_VLAN_LOCAL
value|0x1
define|#
directive|define
name|I40E_AQC_ADD_PVLAN_TYPE_SHIFT
value|1
define|#
directive|define
name|I40E_AQC_ADD_PVLAN_TYPE_MASK
value|(0x3<< I40E_AQC_ADD_PVLAN_TYPE_SHIFT)
define|#
directive|define
name|I40E_AQC_ADD_PVLAN_TYPE_REGULAR
value|0x0
define|#
directive|define
name|I40E_AQC_ADD_PVLAN_TYPE_PRIMARY
value|0x2
define|#
directive|define
name|I40E_AQC_ADD_PVLAN_TYPE_SECONDARY
value|0x4
define|#
directive|define
name|I40E_AQC_VLAN_PTYPE_SHIFT
value|3
define|#
directive|define
name|I40E_AQC_VLAN_PTYPE_MASK
value|(0x3<< I40E_AQC_VLAN_PTYPE_SHIFT)
define|#
directive|define
name|I40E_AQC_VLAN_PTYPE_REGULAR_VSI
value|0x0
define|#
directive|define
name|I40E_AQC_VLAN_PTYPE_PROMISC_VSI
value|0x8
define|#
directive|define
name|I40E_AQC_VLAN_PTYPE_COMMUNITY_VSI
value|0x10
define|#
directive|define
name|I40E_AQC_VLAN_PTYPE_ISOLATED_VSI
value|0x18
comment|/* flags for remove VLAN */
define|#
directive|define
name|I40E_AQC_REMOVE_VLAN_ALL
value|0x1
name|u8
name|reserved
decl_stmt|;
name|u8
name|result
decl_stmt|;
comment|/* flags for add VLAN */
define|#
directive|define
name|I40E_AQC_ADD_VLAN_SUCCESS
value|0x0
define|#
directive|define
name|I40E_AQC_ADD_VLAN_FAIL_REQUEST
value|0xFE
define|#
directive|define
name|I40E_AQC_ADD_VLAN_FAIL_RESOURCE
value|0xFF
comment|/* flags for remove VLAN */
define|#
directive|define
name|I40E_AQC_REMOVE_VLAN_SUCCESS
value|0x0
define|#
directive|define
name|I40E_AQC_REMOVE_VLAN_FAIL
value|0xFF
name|u8
name|reserved1
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|i40e_aqc_add_remove_vlan_completion
block|{
name|u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
name|__le16
name|vlans_used
decl_stmt|;
name|__le16
name|vlans_free
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Set VSI Promiscuous Modes (direct 0x0254) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_set_vsi_promiscuous_modes
block|{
name|__le16
name|promiscuous_flags
decl_stmt|;
name|__le16
name|valid_flags
decl_stmt|;
comment|/* flags used for both fields above */
define|#
directive|define
name|I40E_AQC_SET_VSI_PROMISC_UNICAST
value|0x01
define|#
directive|define
name|I40E_AQC_SET_VSI_PROMISC_MULTICAST
value|0x02
define|#
directive|define
name|I40E_AQC_SET_VSI_PROMISC_BROADCAST
value|0x04
define|#
directive|define
name|I40E_AQC_SET_VSI_DEFAULT
value|0x08
define|#
directive|define
name|I40E_AQC_SET_VSI_PROMISC_VLAN
value|0x10
define|#
directive|define
name|I40E_AQC_SET_VSI_PROMISC_TX
value|0x8000
name|__le16
name|seid
decl_stmt|;
define|#
directive|define
name|I40E_AQC_VSI_PROM_CMD_SEID_MASK
value|0x3FF
name|__le16
name|vlan_tag
decl_stmt|;
define|#
directive|define
name|I40E_AQC_SET_VSI_VLAN_MASK
value|0x0FFF
define|#
directive|define
name|I40E_AQC_SET_VSI_VLAN_VALID
value|0x8000
name|u8
name|reserved
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_set_vsi_promiscuous_modes
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Add S/E-tag command (direct 0x0255)  * Uses generic i40e_aqc_add_remove_tag_completion for completion  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_add_tag
block|{
name|__le16
name|flags
decl_stmt|;
define|#
directive|define
name|I40E_AQC_ADD_TAG_FLAG_TO_QUEUE
value|0x0001
name|__le16
name|seid
decl_stmt|;
define|#
directive|define
name|I40E_AQC_ADD_TAG_CMD_SEID_NUM_SHIFT
value|0
define|#
directive|define
name|I40E_AQC_ADD_TAG_CMD_SEID_NUM_MASK
value|(0x3FF<< \ 					I40E_AQC_ADD_TAG_CMD_SEID_NUM_SHIFT)
name|__le16
name|tag
decl_stmt|;
name|__le16
name|queue_number
decl_stmt|;
name|u8
name|reserved
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_tag
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_add_remove_tag_completion
block|{
name|u8
name|reserved
index|[
literal|12
index|]
decl_stmt|;
name|__le16
name|tags_used
decl_stmt|;
name|__le16
name|tags_free
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_remove_tag_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Remove S/E-tag command (direct 0x0256)  * Uses generic i40e_aqc_add_remove_tag_completion for completion  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_remove_tag
block|{
name|__le16
name|seid
decl_stmt|;
define|#
directive|define
name|I40E_AQC_REMOVE_TAG_CMD_SEID_NUM_SHIFT
value|0
define|#
directive|define
name|I40E_AQC_REMOVE_TAG_CMD_SEID_NUM_MASK
value|(0x3FF<< \ 					I40E_AQC_REMOVE_TAG_CMD_SEID_NUM_SHIFT)
name|__le16
name|tag
decl_stmt|;
name|u8
name|reserved
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_remove_tag
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Add multicast E-Tag (direct 0x0257)  * del multicast E-Tag (direct 0x0258) only uses pv_seid and etag fields  * and no external data  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_add_remove_mcast_etag
block|{
name|__le16
name|pv_seid
decl_stmt|;
name|__le16
name|etag
decl_stmt|;
name|u8
name|num_unicast_etags
decl_stmt|;
name|u8
name|reserved
index|[
literal|3
index|]
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
comment|/* address of array of 2-byte s-tags */
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_remove_mcast_etag
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_add_remove_mcast_etag_completion
block|{
name|u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
name|__le16
name|mcast_etags_used
decl_stmt|;
name|__le16
name|mcast_etags_free
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_remove_mcast_etag_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Update S/E-Tag (direct 0x0259) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_update_tag
block|{
name|__le16
name|seid
decl_stmt|;
define|#
directive|define
name|I40E_AQC_UPDATE_TAG_CMD_SEID_NUM_SHIFT
value|0
define|#
directive|define
name|I40E_AQC_UPDATE_TAG_CMD_SEID_NUM_MASK
value|(0x3FF<< \ 					I40E_AQC_UPDATE_TAG_CMD_SEID_NUM_SHIFT)
name|__le16
name|old_tag
decl_stmt|;
name|__le16
name|new_tag
decl_stmt|;
name|u8
name|reserved
index|[
literal|10
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_update_tag
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_update_tag_completion
block|{
name|u8
name|reserved
index|[
literal|12
index|]
decl_stmt|;
name|__le16
name|tags_used
decl_stmt|;
name|__le16
name|tags_free
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_update_tag_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Add Control Packet filter (direct 0x025A)  * Remove Control Packet filter (direct 0x025B)  * uses the i40e_aqc_add_oveb_cloud,  * and the generic direct completion structure  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_add_remove_control_packet_filter
block|{
name|u8
name|mac
index|[
literal|6
index|]
decl_stmt|;
name|__le16
name|etype
decl_stmt|;
name|__le16
name|flags
decl_stmt|;
define|#
directive|define
name|I40E_AQC_ADD_CONTROL_PACKET_FLAGS_IGNORE_MAC
value|0x0001
define|#
directive|define
name|I40E_AQC_ADD_CONTROL_PACKET_FLAGS_DROP
value|0x0002
define|#
directive|define
name|I40E_AQC_ADD_CONTROL_PACKET_FLAGS_TO_QUEUE
value|0x0004
define|#
directive|define
name|I40E_AQC_ADD_CONTROL_PACKET_FLAGS_TX
value|0x0008
define|#
directive|define
name|I40E_AQC_ADD_CONTROL_PACKET_FLAGS_RX
value|0x0000
name|__le16
name|seid
decl_stmt|;
define|#
directive|define
name|I40E_AQC_ADD_CONTROL_PACKET_CMD_SEID_NUM_SHIFT
value|0
define|#
directive|define
name|I40E_AQC_ADD_CONTROL_PACKET_CMD_SEID_NUM_MASK
value|(0x3FF<< \ 				I40E_AQC_ADD_CONTROL_PACKET_CMD_SEID_NUM_SHIFT)
name|__le16
name|queue
decl_stmt|;
name|u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_remove_control_packet_filter
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_add_remove_control_packet_filter_completion
block|{
name|__le16
name|mac_etype_used
decl_stmt|;
name|__le16
name|etype_used
decl_stmt|;
name|__le16
name|mac_etype_free
decl_stmt|;
name|__le16
name|etype_free
decl_stmt|;
name|u8
name|reserved
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_remove_control_packet_filter_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Add Cloud filters (indirect 0x025C)  * Remove Cloud filters (indirect 0x025D)  * uses the i40e_aqc_add_remove_cloud_filters,  * and the generic indirect completion structure  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_add_remove_cloud_filters
block|{
name|u8
name|num_filters
decl_stmt|;
name|u8
name|reserved
decl_stmt|;
name|__le16
name|seid
decl_stmt|;
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_CMD_SEID_NUM_SHIFT
value|0
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_CMD_SEID_NUM_MASK
value|(0x3FF<< \ 					I40E_AQC_ADD_CLOUD_CMD_SEID_NUM_SHIFT)
name|u8
name|reserved2
index|[
literal|4
index|]
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_remove_cloud_filters
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_add_remove_cloud_filters_element_data
block|{
name|u8
name|outer_mac
index|[
literal|6
index|]
decl_stmt|;
name|u8
name|inner_mac
index|[
literal|6
index|]
decl_stmt|;
name|__le16
name|inner_vlan
decl_stmt|;
union|union
block|{
struct|struct
block|{
name|u8
name|reserved
index|[
literal|12
index|]
decl_stmt|;
name|u8
name|data
index|[
literal|4
index|]
decl_stmt|;
block|}
name|v4
struct|;
struct|struct
block|{
name|u8
name|data
index|[
literal|16
index|]
decl_stmt|;
block|}
name|v6
struct|;
block|}
name|ipaddr
union|;
name|__le16
name|flags
decl_stmt|;
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FILTER_SHIFT
value|0
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FILTER_MASK
value|(0x3F<< \ 					I40E_AQC_ADD_CLOUD_FILTER_SHIFT)
comment|/* 0x0000 reserved */
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FILTER_OIP
value|0x0001
comment|/* 0x0002 reserved */
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FILTER_IMAC_IVLAN
value|0x0003
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FILTER_IMAC_IVLAN_TEN_ID
value|0x0004
comment|/* 0x0005 reserved */
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FILTER_IMAC_TEN_ID
value|0x0006
comment|/* 0x0007 reserved */
comment|/* 0x0008 reserved */
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FILTER_OMAC
value|0x0009
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FILTER_IMAC
value|0x000A
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FILTER_OMAC_TEN_ID_IMAC
value|0x000B
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FILTER_IIP
value|0x000C
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FLAGS_TO_QUEUE
value|0x0080
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_VNK_SHIFT
value|6
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_VNK_MASK
value|0x00C0
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FLAGS_IPV4
value|0
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FLAGS_IPV6
value|0x0100
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_TNL_TYPE_SHIFT
value|9
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_TNL_TYPE_MASK
value|0x1E00
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_TNL_TYPE_VXLAN
value|0
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_TNL_TYPE_NVGRE_OMAC
value|1
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_TNL_TYPE_GENEVE
value|2
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_TNL_TYPE_IP
value|3
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_TNL_TYPE_RESERVED
value|4
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_TNL_TYPE_VXLAN_GPE
value|5
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FLAGS_SHARED_OUTER_MAC
value|0x2000
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FLAGS_SHARED_INNER_MAC
value|0x4000
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FLAGS_SHARED_OUTER_IP
value|0x8000
name|__le32
name|tenant_id
decl_stmt|;
name|u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
name|__le16
name|queue_number
decl_stmt|;
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_QUEUE_SHIFT
value|0
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_QUEUE_MASK
value|(0x7FF<< \ 						 I40E_AQC_ADD_CLOUD_QUEUE_SHIFT)
name|u8
name|reserved2
index|[
literal|14
index|]
decl_stmt|;
comment|/* response section */
name|u8
name|allocation_result
decl_stmt|;
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FILTER_SUCCESS
value|0x0
define|#
directive|define
name|I40E_AQC_ADD_CLOUD_FILTER_FAIL
value|0xFF
name|u8
name|response_reserved
index|[
literal|7
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|i40e_aqc_remove_cloud_filters_completion
block|{
name|__le16
name|perfect_ovlan_used
decl_stmt|;
name|__le16
name|perfect_ovlan_free
decl_stmt|;
name|__le16
name|vlan_used
decl_stmt|;
name|__le16
name|vlan_free
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_remove_cloud_filters_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Add Mirror Rule (indirect or direct 0x0260)  * Delete Mirror Rule (indirect or direct 0x0261)  * note: some rule types (4,5) do not use an external buffer.  *       take care to set the flags correctly.  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_add_delete_mirror_rule
block|{
name|__le16
name|seid
decl_stmt|;
name|__le16
name|rule_type
decl_stmt|;
define|#
directive|define
name|I40E_AQC_MIRROR_RULE_TYPE_SHIFT
value|0
define|#
directive|define
name|I40E_AQC_MIRROR_RULE_TYPE_MASK
value|(0x7<< \ 						I40E_AQC_MIRROR_RULE_TYPE_SHIFT)
define|#
directive|define
name|I40E_AQC_MIRROR_RULE_TYPE_VPORT_INGRESS
value|1
define|#
directive|define
name|I40E_AQC_MIRROR_RULE_TYPE_VPORT_EGRESS
value|2
define|#
directive|define
name|I40E_AQC_MIRROR_RULE_TYPE_VLAN
value|3
define|#
directive|define
name|I40E_AQC_MIRROR_RULE_TYPE_ALL_INGRESS
value|4
define|#
directive|define
name|I40E_AQC_MIRROR_RULE_TYPE_ALL_EGRESS
value|5
name|__le16
name|num_entries
decl_stmt|;
name|__le16
name|destination
decl_stmt|;
comment|/* VSI for add, rule id for delete */
name|__le32
name|addr_high
decl_stmt|;
comment|/* address of array of 2-byte VSI or VLAN ids */
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_delete_mirror_rule
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_add_delete_mirror_rule_completion
block|{
name|u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|__le16
name|rule_id
decl_stmt|;
comment|/* only used on add */
name|__le16
name|mirror_rules_used
decl_stmt|;
name|__le16
name|mirror_rules_free
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_delete_mirror_rule_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* DCB 0x03xx*/
end_comment

begin_comment
comment|/* PFC Ignore (direct 0x0301)  *    the command and response use the same descriptor structure  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_pfc_ignore
block|{
name|u8
name|tc_bitmap
decl_stmt|;
name|u8
name|command_flags
decl_stmt|;
comment|/* unused on response */
define|#
directive|define
name|I40E_AQC_PFC_IGNORE_SET
value|0x80
define|#
directive|define
name|I40E_AQC_PFC_IGNORE_CLEAR
value|0x0
name|u8
name|reserved
index|[
literal|14
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_pfc_ignore
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* DCB Update (direct 0x0302) uses the i40e_aq_desc structure  * with no parameters  */
end_comment

begin_comment
comment|/* TX scheduler 0x04xx */
end_comment

begin_comment
comment|/* Almost all the indirect commands use  * this generic struct to pass the SEID in param0  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_tx_sched_ind
block|{
name|__le16
name|vsi_seid
decl_stmt|;
name|u8
name|reserved
index|[
literal|6
index|]
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_tx_sched_ind
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Several commands respond with a set of queue set handles */
end_comment

begin_struct
struct|struct
name|i40e_aqc_qs_handles_resp
block|{
name|__le16
name|qs_handles
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Configure VSI BW limits (direct 0x0400) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_configure_vsi_bw_limit
block|{
name|__le16
name|vsi_seid
decl_stmt|;
name|u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|__le16
name|credit
decl_stmt|;
name|u8
name|reserved1
index|[
literal|2
index|]
decl_stmt|;
name|u8
name|max_credit
decl_stmt|;
comment|/* 0-3, limit = 2^max */
name|u8
name|reserved2
index|[
literal|7
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_configure_vsi_bw_limit
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Configure VSI Bandwidth Limit per Traffic Type (indirect 0x0406)  *    responds with i40e_aqc_qs_handles_resp  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_configure_vsi_ets_sla_bw_data
block|{
name|u8
name|tc_valid_bits
decl_stmt|;
name|u8
name|reserved
index|[
literal|15
index|]
decl_stmt|;
name|__le16
name|tc_bw_credits
index|[
literal|8
index|]
decl_stmt|;
comment|/* FW writesback QS handles here */
comment|/* 4 bits per tc 0-7, 4th bit is reserved, limit = 2^max */
name|__le16
name|tc_bw_max
index|[
literal|2
index|]
decl_stmt|;
name|u8
name|reserved1
index|[
literal|28
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x40
argument_list|,
name|i40e_aqc_configure_vsi_ets_sla_bw_data
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Configure VSI Bandwidth Allocation per Traffic Type (indirect 0x0407)  *    responds with i40e_aqc_qs_handles_resp  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_configure_vsi_tc_bw_data
block|{
name|u8
name|tc_valid_bits
decl_stmt|;
name|u8
name|reserved
index|[
literal|3
index|]
decl_stmt|;
name|u8
name|tc_bw_credits
index|[
literal|8
index|]
decl_stmt|;
name|u8
name|reserved1
index|[
literal|4
index|]
decl_stmt|;
name|__le16
name|qs_handles
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x20
argument_list|,
name|i40e_aqc_configure_vsi_tc_bw_data
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Query vsi bw configuration (indirect 0x0408) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_query_vsi_bw_config_resp
block|{
name|u8
name|tc_valid_bits
decl_stmt|;
name|u8
name|tc_suspended_bits
decl_stmt|;
name|u8
name|reserved
index|[
literal|14
index|]
decl_stmt|;
name|__le16
name|qs_handles
index|[
literal|8
index|]
decl_stmt|;
name|u8
name|reserved1
index|[
literal|4
index|]
decl_stmt|;
name|__le16
name|port_bw_limit
decl_stmt|;
name|u8
name|reserved2
index|[
literal|2
index|]
decl_stmt|;
name|u8
name|max_bw
decl_stmt|;
comment|/* 0-3, limit = 2^max */
name|u8
name|reserved3
index|[
literal|23
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x40
argument_list|,
name|i40e_aqc_query_vsi_bw_config_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Query VSI Bandwidth Allocation per Traffic Type (indirect 0x040A) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_query_vsi_ets_sla_config_resp
block|{
name|u8
name|tc_valid_bits
decl_stmt|;
name|u8
name|reserved
index|[
literal|3
index|]
decl_stmt|;
name|u8
name|share_credits
index|[
literal|8
index|]
decl_stmt|;
name|__le16
name|credits
index|[
literal|8
index|]
decl_stmt|;
comment|/* 4 bits per tc 0-7, 4th bit is reserved, limit = 2^max */
name|__le16
name|tc_bw_max
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x20
argument_list|,
name|i40e_aqc_query_vsi_ets_sla_config_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Configure Switching Component Bandwidth Limit (direct 0x0410) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_configure_switching_comp_bw_limit
block|{
name|__le16
name|seid
decl_stmt|;
name|u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|__le16
name|credit
decl_stmt|;
name|u8
name|reserved1
index|[
literal|2
index|]
decl_stmt|;
name|u8
name|max_bw
decl_stmt|;
comment|/* 0-3, limit = 2^max */
name|u8
name|reserved2
index|[
literal|7
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_configure_switching_comp_bw_limit
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Enable  Physical Port ETS (indirect 0x0413)  * Modify  Physical Port ETS (indirect 0x0414)  * Disable Physical Port ETS (indirect 0x0415)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_configure_switching_comp_ets_data
block|{
name|u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
name|u8
name|tc_valid_bits
decl_stmt|;
name|u8
name|seepage
decl_stmt|;
define|#
directive|define
name|I40E_AQ_ETS_SEEPAGE_EN_MASK
value|0x1
name|u8
name|tc_strict_priority_flags
decl_stmt|;
name|u8
name|reserved1
index|[
literal|17
index|]
decl_stmt|;
name|u8
name|tc_bw_share_credits
index|[
literal|8
index|]
decl_stmt|;
name|u8
name|reserved2
index|[
literal|96
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x80
argument_list|,
name|i40e_aqc_configure_switching_comp_ets_data
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Configure Switching Component Bandwidth Limits per Tc (indirect 0x0416) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_configure_switching_comp_ets_bw_limit_data
block|{
name|u8
name|tc_valid_bits
decl_stmt|;
name|u8
name|reserved
index|[
literal|15
index|]
decl_stmt|;
name|__le16
name|tc_bw_credit
index|[
literal|8
index|]
decl_stmt|;
comment|/* 4 bits per tc 0-7, 4th bit is reserved, limit = 2^max */
name|__le16
name|tc_bw_max
index|[
literal|2
index|]
decl_stmt|;
name|u8
name|reserved1
index|[
literal|28
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x40
argument_list|,
name|i40e_aqc_configure_switching_comp_ets_bw_limit_data
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Configure Switching Component Bandwidth Allocation per Tc  * (indirect 0x0417)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_configure_switching_comp_bw_config_data
block|{
name|u8
name|tc_valid_bits
decl_stmt|;
name|u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|u8
name|absolute_credits
decl_stmt|;
comment|/* bool */
name|u8
name|tc_bw_share_credits
index|[
literal|8
index|]
decl_stmt|;
name|u8
name|reserved1
index|[
literal|20
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x20
argument_list|,
name|i40e_aqc_configure_switching_comp_bw_config_data
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Query Switching Component Configuration (indirect 0x0418) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_query_switching_comp_ets_config_resp
block|{
name|u8
name|tc_valid_bits
decl_stmt|;
name|u8
name|reserved
index|[
literal|35
index|]
decl_stmt|;
name|__le16
name|port_bw_limit
decl_stmt|;
name|u8
name|reserved1
index|[
literal|2
index|]
decl_stmt|;
name|u8
name|tc_bw_max
decl_stmt|;
comment|/* 0-3, limit = 2^max */
name|u8
name|reserved2
index|[
literal|23
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x40
argument_list|,
name|i40e_aqc_query_switching_comp_ets_config_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Query PhysicalPort ETS Configuration (indirect 0x0419) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_query_port_ets_config_resp
block|{
name|u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
name|u8
name|tc_valid_bits
decl_stmt|;
name|u8
name|reserved1
decl_stmt|;
name|u8
name|tc_strict_priority_bits
decl_stmt|;
name|u8
name|reserved2
decl_stmt|;
name|u8
name|tc_bw_share_credits
index|[
literal|8
index|]
decl_stmt|;
name|__le16
name|tc_bw_limits
index|[
literal|8
index|]
decl_stmt|;
comment|/* 4 bits per tc 0-7, 4th bit reserved, limit = 2^max */
name|__le16
name|tc_bw_max
index|[
literal|2
index|]
decl_stmt|;
name|u8
name|reserved3
index|[
literal|32
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x44
argument_list|,
name|i40e_aqc_query_port_ets_config_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Query Switching Component Bandwidth Allocation per Traffic Type  * (indirect 0x041A)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_query_switching_comp_bw_config_resp
block|{
name|u8
name|tc_valid_bits
decl_stmt|;
name|u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|u8
name|absolute_credits_enable
decl_stmt|;
comment|/* bool */
name|u8
name|tc_bw_share_credits
index|[
literal|8
index|]
decl_stmt|;
name|__le16
name|tc_bw_limits
index|[
literal|8
index|]
decl_stmt|;
comment|/* 4 bits per tc 0-7, 4th bit is reserved, limit = 2^max */
name|__le16
name|tc_bw_max
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x20
argument_list|,
name|i40e_aqc_query_switching_comp_bw_config_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Suspend/resume port TX traffic  * (direct 0x041B and 0x041C) uses the generic SEID struct  */
end_comment

begin_comment
comment|/* Configure partition BW  * (indirect 0x041D)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_configure_partition_bw_data
block|{
name|__le16
name|pf_valid_bits
decl_stmt|;
name|u8
name|min_bw
index|[
literal|16
index|]
decl_stmt|;
comment|/* guaranteed bandwidth */
name|u8
name|max_bw
index|[
literal|16
index|]
decl_stmt|;
comment|/* bandwidth limit */
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x22
argument_list|,
name|i40e_aqc_configure_partition_bw_data
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Get and set the active HMC resource profile and status.  * (direct 0x0500) and (direct 0x0501)  */
end_comment

begin_struct
struct|struct
name|i40e_aq_get_set_hmc_resource_profile
block|{
name|u8
name|pm_profile
decl_stmt|;
name|u8
name|pe_vf_enabled
decl_stmt|;
name|u8
name|reserved
index|[
literal|14
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aq_get_set_hmc_resource_profile
argument_list|)
expr_stmt|;
end_expr_stmt

begin_enum
enum|enum
name|i40e_aq_hmc_profile
block|{
comment|/* I40E_HMC_PROFILE_NO_CHANGE    = 0, reserved */
name|I40E_HMC_PROFILE_DEFAULT
init|=
literal|1
block|,
name|I40E_HMC_PROFILE_FAVOR_VF
init|=
literal|2
block|,
name|I40E_HMC_PROFILE_EQUAL
init|=
literal|3
block|, }
enum|;
end_enum

begin_define
define|#
directive|define
name|I40E_AQ_GET_HMC_RESOURCE_PROFILE_PM_MASK
value|0xF
end_define

begin_define
define|#
directive|define
name|I40E_AQ_GET_HMC_RESOURCE_PROFILE_COUNT_MASK
value|0x3F
end_define

begin_comment
comment|/* Get PHY Abilities (indirect 0x0600) uses the generic indirect struct */
end_comment

begin_comment
comment|/* set in param0 for get phy abilities to report qualified modules */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_PHY_REPORT_QUALIFIED_MODULES
value|0x0001
end_define

begin_define
define|#
directive|define
name|I40E_AQ_PHY_REPORT_INITIAL_VALUES
value|0x0002
end_define

begin_enum
enum|enum
name|i40e_aq_phy_type
block|{
name|I40E_PHY_TYPE_SGMII
init|=
literal|0x0
block|,
name|I40E_PHY_TYPE_1000BASE_KX
init|=
literal|0x1
block|,
name|I40E_PHY_TYPE_10GBASE_KX4
init|=
literal|0x2
block|,
name|I40E_PHY_TYPE_10GBASE_KR
init|=
literal|0x3
block|,
name|I40E_PHY_TYPE_40GBASE_KR4
init|=
literal|0x4
block|,
name|I40E_PHY_TYPE_XAUI
init|=
literal|0x5
block|,
name|I40E_PHY_TYPE_XFI
init|=
literal|0x6
block|,
name|I40E_PHY_TYPE_SFI
init|=
literal|0x7
block|,
name|I40E_PHY_TYPE_XLAUI
init|=
literal|0x8
block|,
name|I40E_PHY_TYPE_XLPPI
init|=
literal|0x9
block|,
name|I40E_PHY_TYPE_40GBASE_CR4_CU
init|=
literal|0xA
block|,
name|I40E_PHY_TYPE_10GBASE_CR1_CU
init|=
literal|0xB
block|,
name|I40E_PHY_TYPE_10GBASE_AOC
init|=
literal|0xC
block|,
name|I40E_PHY_TYPE_40GBASE_AOC
init|=
literal|0xD
block|,
name|I40E_PHY_TYPE_100BASE_TX
init|=
literal|0x11
block|,
name|I40E_PHY_TYPE_1000BASE_T
init|=
literal|0x12
block|,
name|I40E_PHY_TYPE_10GBASE_T
init|=
literal|0x13
block|,
name|I40E_PHY_TYPE_10GBASE_SR
init|=
literal|0x14
block|,
name|I40E_PHY_TYPE_10GBASE_LR
init|=
literal|0x15
block|,
name|I40E_PHY_TYPE_10GBASE_SFPP_CU
init|=
literal|0x16
block|,
name|I40E_PHY_TYPE_10GBASE_CR1
init|=
literal|0x17
block|,
name|I40E_PHY_TYPE_40GBASE_CR4
init|=
literal|0x18
block|,
name|I40E_PHY_TYPE_40GBASE_SR4
init|=
literal|0x19
block|,
name|I40E_PHY_TYPE_40GBASE_LR4
init|=
literal|0x1A
block|,
name|I40E_PHY_TYPE_1000BASE_SX
init|=
literal|0x1B
block|,
name|I40E_PHY_TYPE_1000BASE_LX
init|=
literal|0x1C
block|,
name|I40E_PHY_TYPE_1000BASE_T_OPTICAL
init|=
literal|0x1D
block|,
name|I40E_PHY_TYPE_20GBASE_KR2
init|=
literal|0x1E
block|,
name|I40E_PHY_TYPE_MAX
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|I40E_LINK_SPEED_100MB_SHIFT
value|0x1
end_define

begin_define
define|#
directive|define
name|I40E_LINK_SPEED_1000MB_SHIFT
value|0x2
end_define

begin_define
define|#
directive|define
name|I40E_LINK_SPEED_10GB_SHIFT
value|0x3
end_define

begin_define
define|#
directive|define
name|I40E_LINK_SPEED_40GB_SHIFT
value|0x4
end_define

begin_define
define|#
directive|define
name|I40E_LINK_SPEED_20GB_SHIFT
value|0x5
end_define

begin_enum
enum|enum
name|i40e_aq_link_speed
block|{
name|I40E_LINK_SPEED_UNKNOWN
init|=
literal|0
block|,
name|I40E_LINK_SPEED_100MB
init|=
operator|(
literal|1
operator|<<
name|I40E_LINK_SPEED_100MB_SHIFT
operator|)
block|,
name|I40E_LINK_SPEED_1GB
init|=
operator|(
literal|1
operator|<<
name|I40E_LINK_SPEED_1000MB_SHIFT
operator|)
block|,
name|I40E_LINK_SPEED_10GB
init|=
operator|(
literal|1
operator|<<
name|I40E_LINK_SPEED_10GB_SHIFT
operator|)
block|,
name|I40E_LINK_SPEED_40GB
init|=
operator|(
literal|1
operator|<<
name|I40E_LINK_SPEED_40GB_SHIFT
operator|)
block|,
name|I40E_LINK_SPEED_20GB
init|=
operator|(
literal|1
operator|<<
name|I40E_LINK_SPEED_20GB_SHIFT
operator|)
block|}
enum|;
end_enum

begin_struct
struct|struct
name|i40e_aqc_module_desc
block|{
name|u8
name|oui
index|[
literal|3
index|]
decl_stmt|;
name|u8
name|reserved1
decl_stmt|;
name|u8
name|part_number
index|[
literal|16
index|]
decl_stmt|;
name|u8
name|revision
index|[
literal|4
index|]
decl_stmt|;
name|u8
name|reserved2
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x20
argument_list|,
name|i40e_aqc_module_desc
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aq_get_phy_abilities_resp
block|{
name|__le32
name|phy_type
decl_stmt|;
comment|/* bitmap using the above enum for offsets */
name|u8
name|link_speed
decl_stmt|;
comment|/* bitmap using the above enum bit patterns */
name|u8
name|abilities
decl_stmt|;
define|#
directive|define
name|I40E_AQ_PHY_FLAG_PAUSE_TX
value|0x01
define|#
directive|define
name|I40E_AQ_PHY_FLAG_PAUSE_RX
value|0x02
define|#
directive|define
name|I40E_AQ_PHY_FLAG_LOW_POWER
value|0x04
define|#
directive|define
name|I40E_AQ_PHY_LINK_ENABLED
value|0x08
define|#
directive|define
name|I40E_AQ_PHY_AN_ENABLED
value|0x10
define|#
directive|define
name|I40E_AQ_PHY_FLAG_MODULE_QUAL
value|0x20
name|__le16
name|eee_capability
decl_stmt|;
define|#
directive|define
name|I40E_AQ_EEE_100BASE_TX
value|0x0002
define|#
directive|define
name|I40E_AQ_EEE_1000BASE_T
value|0x0004
define|#
directive|define
name|I40E_AQ_EEE_10GBASE_T
value|0x0008
define|#
directive|define
name|I40E_AQ_EEE_1000BASE_KX
value|0x0010
define|#
directive|define
name|I40E_AQ_EEE_10GBASE_KX4
value|0x0020
define|#
directive|define
name|I40E_AQ_EEE_10GBASE_KR
value|0x0040
name|__le32
name|eeer_val
decl_stmt|;
name|u8
name|d3_lpan
decl_stmt|;
define|#
directive|define
name|I40E_AQ_SET_PHY_D3_LPAN_ENA
value|0x01
name|u8
name|reserved
index|[
literal|3
index|]
decl_stmt|;
name|u8
name|phy_id
index|[
literal|4
index|]
decl_stmt|;
name|u8
name|module_type
index|[
literal|3
index|]
decl_stmt|;
name|u8
name|qualified_module_count
decl_stmt|;
define|#
directive|define
name|I40E_AQ_PHY_MAX_QMS
value|16
name|struct
name|i40e_aqc_module_desc
name|qualified_module
index|[
name|I40E_AQ_PHY_MAX_QMS
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x218
argument_list|,
name|i40e_aq_get_phy_abilities_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Set PHY Config (direct 0x0601) */
end_comment

begin_struct
struct|struct
name|i40e_aq_set_phy_config
block|{
comment|/* same bits as above in all */
name|__le32
name|phy_type
decl_stmt|;
name|u8
name|link_speed
decl_stmt|;
name|u8
name|abilities
decl_stmt|;
comment|/* bits 0-2 use the values from get_phy_abilities_resp */
define|#
directive|define
name|I40E_AQ_PHY_ENABLE_LINK
value|0x08
define|#
directive|define
name|I40E_AQ_PHY_ENABLE_AN
value|0x10
define|#
directive|define
name|I40E_AQ_PHY_ENABLE_ATOMIC_LINK
value|0x20
name|__le16
name|eee_capability
decl_stmt|;
name|__le32
name|eeer
decl_stmt|;
name|u8
name|low_power_ctrl
decl_stmt|;
name|u8
name|reserved
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aq_set_phy_config
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Set MAC Config command data structure (direct 0x0603) */
end_comment

begin_struct
struct|struct
name|i40e_aq_set_mac_config
block|{
name|__le16
name|max_frame_size
decl_stmt|;
name|u8
name|params
decl_stmt|;
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_CRC_EN
value|0x04
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_MASK
value|0x78
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_SHIFT
value|3
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_NONE
value|0x0
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_1B_13TX
value|0xF
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_1DW_9TX
value|0x9
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_1DW_4TX
value|0x8
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_3DW_7TX
value|0x7
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_2DW_3TX
value|0x6
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_1DW_1TX
value|0x5
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_3DW_2TX
value|0x4
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_7DW_3TX
value|0x3
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_4DW_1TX
value|0x2
define|#
directive|define
name|I40E_AQ_SET_MAC_CONFIG_PACING_9DW_1TX
value|0x1
name|u8
name|tx_timer_priority
decl_stmt|;
comment|/* bitmap */
name|__le16
name|tx_timer_value
decl_stmt|;
name|__le16
name|fc_refresh_threshold
decl_stmt|;
name|u8
name|reserved
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aq_set_mac_config
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Restart Auto-Negotiation (direct 0x605) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_set_link_restart_an
block|{
name|u8
name|command
decl_stmt|;
define|#
directive|define
name|I40E_AQ_PHY_RESTART_AN
value|0x02
define|#
directive|define
name|I40E_AQ_PHY_LINK_ENABLE
value|0x04
name|u8
name|reserved
index|[
literal|15
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_set_link_restart_an
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Get Link Status cmd& response data structure (direct 0x0607) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_get_link_status
block|{
name|__le16
name|command_flags
decl_stmt|;
comment|/* only field set on command */
define|#
directive|define
name|I40E_AQ_LSE_MASK
value|0x3
define|#
directive|define
name|I40E_AQ_LSE_NOP
value|0x0
define|#
directive|define
name|I40E_AQ_LSE_DISABLE
value|0x2
define|#
directive|define
name|I40E_AQ_LSE_ENABLE
value|0x3
comment|/* only response uses this flag */
define|#
directive|define
name|I40E_AQ_LSE_IS_ENABLED
value|0x1
name|u8
name|phy_type
decl_stmt|;
comment|/* i40e_aq_phy_type   */
name|u8
name|link_speed
decl_stmt|;
comment|/* i40e_aq_link_speed */
name|u8
name|link_info
decl_stmt|;
define|#
directive|define
name|I40E_AQ_LINK_UP
value|0x01
comment|/* obsolete */
define|#
directive|define
name|I40E_AQ_LINK_UP_FUNCTION
value|0x01
define|#
directive|define
name|I40E_AQ_LINK_FAULT
value|0x02
define|#
directive|define
name|I40E_AQ_LINK_FAULT_TX
value|0x04
define|#
directive|define
name|I40E_AQ_LINK_FAULT_RX
value|0x08
define|#
directive|define
name|I40E_AQ_LINK_FAULT_REMOTE
value|0x10
define|#
directive|define
name|I40E_AQ_LINK_UP_PORT
value|0x20
define|#
directive|define
name|I40E_AQ_MEDIA_AVAILABLE
value|0x40
define|#
directive|define
name|I40E_AQ_SIGNAL_DETECT
value|0x80
name|u8
name|an_info
decl_stmt|;
define|#
directive|define
name|I40E_AQ_AN_COMPLETED
value|0x01
define|#
directive|define
name|I40E_AQ_LP_AN_ABILITY
value|0x02
define|#
directive|define
name|I40E_AQ_PD_FAULT
value|0x04
define|#
directive|define
name|I40E_AQ_FEC_EN
value|0x08
define|#
directive|define
name|I40E_AQ_PHY_LOW_POWER
value|0x10
define|#
directive|define
name|I40E_AQ_LINK_PAUSE_TX
value|0x20
define|#
directive|define
name|I40E_AQ_LINK_PAUSE_RX
value|0x40
define|#
directive|define
name|I40E_AQ_QUALIFIED_MODULE
value|0x80
name|u8
name|ext_info
decl_stmt|;
define|#
directive|define
name|I40E_AQ_LINK_PHY_TEMP_ALARM
value|0x01
define|#
directive|define
name|I40E_AQ_LINK_XCESSIVE_ERRORS
value|0x02
define|#
directive|define
name|I40E_AQ_LINK_TX_SHIFT
value|0x02
define|#
directive|define
name|I40E_AQ_LINK_TX_MASK
value|(0x03<< I40E_AQ_LINK_TX_SHIFT)
define|#
directive|define
name|I40E_AQ_LINK_TX_ACTIVE
value|0x00
define|#
directive|define
name|I40E_AQ_LINK_TX_DRAINED
value|0x01
define|#
directive|define
name|I40E_AQ_LINK_TX_FLUSHED
value|0x03
define|#
directive|define
name|I40E_AQ_LINK_FORCED_40G
value|0x10
name|u8
name|loopback
decl_stmt|;
comment|/* use defines from i40e_aqc_set_lb_mode */
name|__le16
name|max_frame_size
decl_stmt|;
name|u8
name|config
decl_stmt|;
define|#
directive|define
name|I40E_AQ_CONFIG_CRC_ENA
value|0x04
define|#
directive|define
name|I40E_AQ_CONFIG_PACING_MASK
value|0x78
name|u8
name|external_power_ability
decl_stmt|;
define|#
directive|define
name|I40E_AQ_LINK_POWER_CLASS_1
value|0x00
define|#
directive|define
name|I40E_AQ_LINK_POWER_CLASS_2
value|0x01
define|#
directive|define
name|I40E_AQ_LINK_POWER_CLASS_3
value|0x02
define|#
directive|define
name|I40E_AQ_LINK_POWER_CLASS_4
value|0x03
name|u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_get_link_status
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Set event mask command (direct 0x613) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_set_phy_int_mask
block|{
name|u8
name|reserved
index|[
literal|8
index|]
decl_stmt|;
name|__le16
name|event_mask
decl_stmt|;
define|#
directive|define
name|I40E_AQ_EVENT_LINK_UPDOWN
value|0x0002
define|#
directive|define
name|I40E_AQ_EVENT_MEDIA_NA
value|0x0004
define|#
directive|define
name|I40E_AQ_EVENT_LINK_FAULT
value|0x0008
define|#
directive|define
name|I40E_AQ_EVENT_PHY_TEMP_ALARM
value|0x0010
define|#
directive|define
name|I40E_AQ_EVENT_EXCESSIVE_ERRORS
value|0x0020
define|#
directive|define
name|I40E_AQ_EVENT_SIGNAL_DETECT
value|0x0040
define|#
directive|define
name|I40E_AQ_EVENT_AN_COMPLETED
value|0x0080
define|#
directive|define
name|I40E_AQ_EVENT_MODULE_QUAL_FAIL
value|0x0100
define|#
directive|define
name|I40E_AQ_EVENT_PORT_TX_SUSPENDED
value|0x0200
name|u8
name|reserved1
index|[
literal|6
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_set_phy_int_mask
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Get Local AN advt register (direct 0x0614)  * Set Local AN advt register (direct 0x0615)  * Get Link Partner AN advt register (direct 0x0616)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_an_advt_reg
block|{
name|__le32
name|local_an_reg0
decl_stmt|;
name|__le16
name|local_an_reg1
decl_stmt|;
name|u8
name|reserved
index|[
literal|10
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_an_advt_reg
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Set Loopback mode (0x0618) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_set_lb_mode
block|{
name|__le16
name|lb_mode
decl_stmt|;
define|#
directive|define
name|I40E_AQ_LB_PHY_LOCAL
value|0x01
define|#
directive|define
name|I40E_AQ_LB_PHY_REMOTE
value|0x02
define|#
directive|define
name|I40E_AQ_LB_MAC_LOCAL
value|0x04
name|u8
name|reserved
index|[
literal|14
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_set_lb_mode
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Set PHY Debug command (0x0622) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_set_phy_debug
block|{
name|u8
name|command_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_PHY_DEBUG_RESET_INTERNAL
value|0x02
define|#
directive|define
name|I40E_AQ_PHY_DEBUG_RESET_EXTERNAL_SHIFT
value|2
define|#
directive|define
name|I40E_AQ_PHY_DEBUG_RESET_EXTERNAL_MASK
value|(0x03<< \ 					I40E_AQ_PHY_DEBUG_RESET_EXTERNAL_SHIFT)
define|#
directive|define
name|I40E_AQ_PHY_DEBUG_RESET_EXTERNAL_NONE
value|0x00
define|#
directive|define
name|I40E_AQ_PHY_DEBUG_RESET_EXTERNAL_HARD
value|0x01
define|#
directive|define
name|I40E_AQ_PHY_DEBUG_RESET_EXTERNAL_SOFT
value|0x02
define|#
directive|define
name|I40E_AQ_PHY_DEBUG_DISABLE_LINK_FW
value|0x10
name|u8
name|reserved
index|[
literal|15
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_set_phy_debug
argument_list|)
expr_stmt|;
end_expr_stmt

begin_enum
enum|enum
name|i40e_aq_phy_reg_type
block|{
name|I40E_AQC_PHY_REG_INTERNAL
init|=
literal|0x1
block|,
name|I40E_AQC_PHY_REG_EXERNAL_BASET
init|=
literal|0x2
block|,
name|I40E_AQC_PHY_REG_EXERNAL_MODULE
init|=
literal|0x3
block|}
enum|;
end_enum

begin_comment
comment|/* Run PHY Activity (0x0626) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_run_phy_activity
block|{
name|__le16
name|activity_id
decl_stmt|;
name|u8
name|flags
decl_stmt|;
name|u8
name|reserved1
decl_stmt|;
name|__le32
name|control
decl_stmt|;
name|__le32
name|data
decl_stmt|;
name|u8
name|reserved2
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_run_phy_activity
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* NVM Read command (indirect 0x0701)  * NVM Erase commands (direct 0x0702)  * NVM Update commands (indirect 0x0703)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_nvm_update
block|{
name|u8
name|command_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_NVM_LAST_CMD
value|0x01
define|#
directive|define
name|I40E_AQ_NVM_FLASH_ONLY
value|0x80
name|u8
name|module_pointer
decl_stmt|;
name|__le16
name|length
decl_stmt|;
name|__le32
name|offset
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_nvm_update
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* NVM Config Read (indirect 0x0704) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_nvm_config_read
block|{
name|__le16
name|cmd_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_ANVM_SINGLE_OR_MULTIPLE_FEATURES_MASK
value|1
define|#
directive|define
name|I40E_AQ_ANVM_READ_SINGLE_FEATURE
value|0
define|#
directive|define
name|I40E_AQ_ANVM_READ_MULTIPLE_FEATURES
value|1
name|__le16
name|element_count
decl_stmt|;
name|__le16
name|element_id
decl_stmt|;
comment|/* Feature/field ID */
name|__le16
name|element_id_msw
decl_stmt|;
comment|/* MSWord of field ID */
name|__le32
name|address_high
decl_stmt|;
name|__le32
name|address_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_nvm_config_read
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* NVM Config Write (indirect 0x0705) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_nvm_config_write
block|{
name|__le16
name|cmd_flags
decl_stmt|;
name|__le16
name|element_count
decl_stmt|;
name|u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
name|__le32
name|address_high
decl_stmt|;
name|__le32
name|address_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_nvm_config_write
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Used for 0x0704 as well as for 0x0705 commands */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_ANVM_FEATURE_OR_IMMEDIATE_SHIFT
value|1
end_define

begin_define
define|#
directive|define
name|I40E_AQ_ANVM_FEATURE_OR_IMMEDIATE_MASK
value|(1<< I40E_AQ_ANVM_FEATURE_OR_IMMEDIATE_SHIFT)
end_define

begin_define
define|#
directive|define
name|I40E_AQ_ANVM_FEATURE
value|0
end_define

begin_define
define|#
directive|define
name|I40E_AQ_ANVM_IMMEDIATE_FIELD
value|(1<< FEATURE_OR_IMMEDIATE_SHIFT)
end_define

begin_struct
struct|struct
name|i40e_aqc_nvm_config_data_feature
block|{
name|__le16
name|feature_id
decl_stmt|;
define|#
directive|define
name|I40E_AQ_ANVM_FEATURE_OPTION_OEM_ONLY
value|0x01
define|#
directive|define
name|I40E_AQ_ANVM_FEATURE_OPTION_DWORD_MAP
value|0x08
define|#
directive|define
name|I40E_AQ_ANVM_FEATURE_OPTION_POR_CSR
value|0x10
name|__le16
name|feature_options
decl_stmt|;
name|__le16
name|feature_selection
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x6
argument_list|,
name|i40e_aqc_nvm_config_data_feature
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_nvm_config_data_immediate_field
block|{
name|__le32
name|field_id
decl_stmt|;
name|__le32
name|field_value
decl_stmt|;
name|__le16
name|field_options
decl_stmt|;
name|__le16
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0xc
argument_list|,
name|i40e_aqc_nvm_config_data_immediate_field
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* OEM Post Update (indirect 0x0720)  * no command data struct used  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_nvm_oem_post_update
block|{
define|#
directive|define
name|I40E_AQ_NVM_OEM_POST_UPDATE_EXTERNAL_DATA
value|0x01
name|u8
name|sel_data
decl_stmt|;
name|u8
name|reserved
index|[
literal|7
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x8
argument_list|,
name|i40e_aqc_nvm_oem_post_update
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_nvm_oem_post_update_buffer
block|{
name|u8
name|str_len
decl_stmt|;
name|u8
name|dev_addr
decl_stmt|;
name|__le16
name|eeprom_addr
decl_stmt|;
name|u8
name|data
index|[
literal|36
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x28
argument_list|,
name|i40e_aqc_nvm_oem_post_update_buffer
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Thermal Sensor (indirect 0x0721)  *     read or set thermal sensor configs and values  *     takes a sensor and command specific data buffer, not detailed here  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_thermal_sensor
block|{
name|u8
name|sensor_action
decl_stmt|;
define|#
directive|define
name|I40E_AQ_THERMAL_SENSOR_READ_CONFIG
value|0
define|#
directive|define
name|I40E_AQ_THERMAL_SENSOR_SET_CONFIG
value|1
define|#
directive|define
name|I40E_AQ_THERMAL_SENSOR_READ_TEMP
value|2
name|u8
name|reserved
index|[
literal|7
index|]
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_thermal_sensor
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Send to PF command (indirect 0x0801) id is only used by PF  * Send to VF command (indirect 0x0802) id is only used by PF  * Send to Peer PF command (indirect 0x0803)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_pf_vf_message
block|{
name|__le32
name|id
decl_stmt|;
name|u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_pf_vf_message
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Alternate structure */
end_comment

begin_comment
comment|/* Direct write (direct 0x0900)  * Direct read (direct 0x0902)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_alternate_write
block|{
name|__le32
name|address0
decl_stmt|;
name|__le32
name|data0
decl_stmt|;
name|__le32
name|address1
decl_stmt|;
name|__le32
name|data1
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_alternate_write
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Indirect write (indirect 0x0901)  * Indirect read (indirect 0x0903)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_alternate_ind_write
block|{
name|__le32
name|address
decl_stmt|;
name|__le32
name|length
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_alternate_ind_write
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Done alternate write (direct 0x0904)  * uses i40e_aq_desc  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_alternate_write_done
block|{
name|__le16
name|cmd_flags
decl_stmt|;
define|#
directive|define
name|I40E_AQ_ALTERNATE_MODE_BIOS_MASK
value|1
define|#
directive|define
name|I40E_AQ_ALTERNATE_MODE_BIOS_LEGACY
value|0
define|#
directive|define
name|I40E_AQ_ALTERNATE_MODE_BIOS_UEFI
value|1
define|#
directive|define
name|I40E_AQ_ALTERNATE_RESET_NEEDED
value|2
name|u8
name|reserved
index|[
literal|14
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_alternate_write_done
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Set OEM mode (direct 0x0905) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_alternate_set_mode
block|{
name|__le32
name|mode
decl_stmt|;
define|#
directive|define
name|I40E_AQ_ALTERNATE_MODE_NONE
value|0
define|#
directive|define
name|I40E_AQ_ALTERNATE_MODE_OEM
value|1
name|u8
name|reserved
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_alternate_set_mode
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Clear port Alternate RAM (direct 0x0906) uses i40e_aq_desc */
end_comment

begin_comment
comment|/* async events 0x10xx */
end_comment

begin_comment
comment|/* Lan Queue Overflow Event (direct, 0x1001) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_lan_overflow
block|{
name|__le32
name|prtdcb_rupto
decl_stmt|;
name|__le32
name|otx_ctl
decl_stmt|;
name|u8
name|reserved
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_lan_overflow
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Get LLDP MIB (indirect 0x0A00) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_lldp_get_mib
block|{
name|u8
name|type
decl_stmt|;
name|u8
name|reserved1
decl_stmt|;
define|#
directive|define
name|I40E_AQ_LLDP_MIB_TYPE_MASK
value|0x3
define|#
directive|define
name|I40E_AQ_LLDP_MIB_LOCAL
value|0x0
define|#
directive|define
name|I40E_AQ_LLDP_MIB_REMOTE
value|0x1
define|#
directive|define
name|I40E_AQ_LLDP_MIB_LOCAL_AND_REMOTE
value|0x2
define|#
directive|define
name|I40E_AQ_LLDP_BRIDGE_TYPE_MASK
value|0xC
define|#
directive|define
name|I40E_AQ_LLDP_BRIDGE_TYPE_SHIFT
value|0x2
define|#
directive|define
name|I40E_AQ_LLDP_BRIDGE_TYPE_NEAREST_BRIDGE
value|0x0
define|#
directive|define
name|I40E_AQ_LLDP_BRIDGE_TYPE_NON_TPMR
value|0x1
define|#
directive|define
name|I40E_AQ_LLDP_TX_SHIFT
value|0x4
define|#
directive|define
name|I40E_AQ_LLDP_TX_MASK
value|(0x03<< I40E_AQ_LLDP_TX_SHIFT)
comment|/* TX pause flags use I40E_AQ_LINK_TX_* above */
name|__le16
name|local_len
decl_stmt|;
name|__le16
name|remote_len
decl_stmt|;
name|u8
name|reserved2
index|[
literal|2
index|]
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_lldp_get_mib
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Configure LLDP MIB Change Event (direct 0x0A01)  * also used for the event (with type in the command field)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_lldp_update_mib
block|{
name|u8
name|command
decl_stmt|;
define|#
directive|define
name|I40E_AQ_LLDP_MIB_UPDATE_ENABLE
value|0x0
define|#
directive|define
name|I40E_AQ_LLDP_MIB_UPDATE_DISABLE
value|0x1
name|u8
name|reserved
index|[
literal|7
index|]
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_lldp_update_mib
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Add LLDP TLV (indirect 0x0A02)  * Delete LLDP TLV (indirect 0x0A04)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_lldp_add_tlv
block|{
name|u8
name|type
decl_stmt|;
comment|/* only nearest bridge and non-TPMR from 0x0A00 */
name|u8
name|reserved1
index|[
literal|1
index|]
decl_stmt|;
name|__le16
name|len
decl_stmt|;
name|u8
name|reserved2
index|[
literal|4
index|]
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_lldp_add_tlv
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Update LLDP TLV (indirect 0x0A03) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_lldp_update_tlv
block|{
name|u8
name|type
decl_stmt|;
comment|/* only nearest bridge and non-TPMR from 0x0A00 */
name|u8
name|reserved
decl_stmt|;
name|__le16
name|old_len
decl_stmt|;
name|__le16
name|new_offset
decl_stmt|;
name|__le16
name|new_len
decl_stmt|;
name|__le32
name|addr_high
decl_stmt|;
name|__le32
name|addr_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_lldp_update_tlv
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Stop LLDP (direct 0x0A05) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_lldp_stop
block|{
name|u8
name|command
decl_stmt|;
define|#
directive|define
name|I40E_AQ_LLDP_AGENT_STOP
value|0x0
define|#
directive|define
name|I40E_AQ_LLDP_AGENT_SHUTDOWN
value|0x1
name|u8
name|reserved
index|[
literal|15
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_lldp_stop
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Start LLDP (direct 0x0A06) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_lldp_start
block|{
name|u8
name|command
decl_stmt|;
define|#
directive|define
name|I40E_AQ_LLDP_AGENT_START
value|0x1
name|u8
name|reserved
index|[
literal|15
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_lldp_start
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Get CEE DCBX Oper Config (0x0A07)  * uses the generic descriptor struct  * returns below as indirect response  */
end_comment

begin_define
define|#
directive|define
name|I40E_AQC_CEE_APP_FCOE_SHIFT
value|0x0
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_APP_FCOE_MASK
value|(0x7<< I40E_AQC_CEE_APP_FCOE_SHIFT)
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_APP_ISCSI_SHIFT
value|0x3
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_APP_ISCSI_MASK
value|(0x7<< I40E_AQC_CEE_APP_ISCSI_SHIFT)
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_APP_FIP_SHIFT
value|0x8
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_APP_FIP_MASK
value|(0x7<< I40E_AQC_CEE_APP_FIP_SHIFT)
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_PG_STATUS_SHIFT
value|0x0
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_PG_STATUS_MASK
value|(0x7<< I40E_AQC_CEE_PG_STATUS_SHIFT)
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_PFC_STATUS_SHIFT
value|0x3
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_PFC_STATUS_MASK
value|(0x7<< I40E_AQC_CEE_PFC_STATUS_SHIFT)
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_APP_STATUS_SHIFT
value|0x8
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_APP_STATUS_MASK
value|(0x7<< I40E_AQC_CEE_APP_STATUS_SHIFT)
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_FCOE_STATUS_SHIFT
value|0x8
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_FCOE_STATUS_MASK
value|(0x7<< I40E_AQC_CEE_FCOE_STATUS_SHIFT)
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_ISCSI_STATUS_SHIFT
value|0xB
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_ISCSI_STATUS_MASK
value|(0x7<< I40E_AQC_CEE_ISCSI_STATUS_SHIFT)
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_FIP_STATUS_SHIFT
value|0x10
end_define

begin_define
define|#
directive|define
name|I40E_AQC_CEE_FIP_STATUS_MASK
value|(0x7<< I40E_AQC_CEE_FIP_STATUS_SHIFT)
end_define

begin_comment
comment|/* struct i40e_aqc_get_cee_dcb_cfg_v1_resp was originally defined with  * word boundary layout issues, which the Linux compilers silently deal  * with by adding padding, making the actual struct larger than designed.  * However, the FW compiler for the NIC is less lenient and complains  * about the struct.  Hence, the struct defined here has an extra byte in  * fields reserved3 and reserved4 to directly acknowledge that padding,  * and the new length is used in the length check macro.  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_get_cee_dcb_cfg_v1_resp
block|{
name|u8
name|reserved1
decl_stmt|;
name|u8
name|oper_num_tc
decl_stmt|;
name|u8
name|oper_prio_tc
index|[
literal|4
index|]
decl_stmt|;
name|u8
name|reserved2
decl_stmt|;
name|u8
name|oper_tc_bw
index|[
literal|8
index|]
decl_stmt|;
name|u8
name|oper_pfc_en
decl_stmt|;
name|u8
name|reserved3
index|[
literal|2
index|]
decl_stmt|;
name|__le16
name|oper_app_prio
decl_stmt|;
name|u8
name|reserved4
index|[
literal|2
index|]
decl_stmt|;
name|__le16
name|tlv_status
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x18
argument_list|,
name|i40e_aqc_get_cee_dcb_cfg_v1_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_get_cee_dcb_cfg_resp
block|{
name|u8
name|oper_num_tc
decl_stmt|;
name|u8
name|oper_prio_tc
index|[
literal|4
index|]
decl_stmt|;
name|u8
name|oper_tc_bw
index|[
literal|8
index|]
decl_stmt|;
name|u8
name|oper_pfc_en
decl_stmt|;
name|__le16
name|oper_app_prio
decl_stmt|;
name|__le32
name|tlv_status
decl_stmt|;
name|u8
name|reserved
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x20
argument_list|,
name|i40e_aqc_get_cee_dcb_cfg_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/*	Set Local LLDP MIB (indirect 0x0A08)  *	Used to replace the local MIB of a given LLDP agent. e.g. DCBx  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_lldp_set_local_mib
block|{
define|#
directive|define
name|SET_LOCAL_MIB_AC_TYPE_DCBX_SHIFT
value|0
define|#
directive|define
name|SET_LOCAL_MIB_AC_TYPE_DCBX_MASK
value|(1<< \ 					SET_LOCAL_MIB_AC_TYPE_DCBX_SHIFT)
define|#
directive|define
name|SET_LOCAL_MIB_AC_TYPE_LOCAL_MIB
value|0x0
define|#
directive|define
name|SET_LOCAL_MIB_AC_TYPE_NON_WILLING_APPS_SHIFT
value|(1)
define|#
directive|define
name|SET_LOCAL_MIB_AC_TYPE_NON_WILLING_APPS_MASK
value|(1<< \ 				SET_LOCAL_MIB_AC_TYPE_NON_WILLING_APPS_SHIFT)
define|#
directive|define
name|SET_LOCAL_MIB_AC_TYPE_NON_WILLING_APPS
value|0x1
name|u8
name|type
decl_stmt|;
name|u8
name|reserved0
decl_stmt|;
name|__le16
name|length
decl_stmt|;
name|u8
name|reserved1
index|[
literal|4
index|]
decl_stmt|;
name|__le32
name|address_high
decl_stmt|;
name|__le32
name|address_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_lldp_set_local_mib
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_lldp_set_local_mib_resp
block|{
define|#
directive|define
name|SET_LOCAL_MIB_RESP_EVENT_TRIGGERED_MASK
value|0x01
name|u8
name|status
decl_stmt|;
name|u8
name|reserved
index|[
literal|15
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_STRUCT_LEN
argument_list|(
literal|0x10
argument_list|,
name|i40e_aqc_lldp_set_local_mib_resp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/*	Stop/Start LLDP Agent (direct 0x0A09)  *	Used for stopping/starting specific LLDP agent. e.g. DCBx  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_lldp_stop_start_specific_agent
block|{
define|#
directive|define
name|I40E_AQC_START_SPECIFIC_AGENT_SHIFT
value|0
define|#
directive|define
name|I40E_AQC_START_SPECIFIC_AGENT_MASK
value|(1<< I40E_AQC_START_SPECIFIC_AGENT_SHIFT)
name|u8
name|command
decl_stmt|;
name|u8
name|reserved
index|[
literal|15
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_lldp_stop_start_specific_agent
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Add Udp Tunnel command and completion (direct 0x0B00) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_add_udp_tunnel
block|{
name|__le16
name|udp_port
decl_stmt|;
name|u8
name|reserved0
index|[
literal|3
index|]
decl_stmt|;
name|u8
name|protocol_type
decl_stmt|;
define|#
directive|define
name|I40E_AQC_TUNNEL_TYPE_VXLAN
value|0x00
define|#
directive|define
name|I40E_AQC_TUNNEL_TYPE_NGE
value|0x01
define|#
directive|define
name|I40E_AQC_TUNNEL_TYPE_TEREDO
value|0x10
define|#
directive|define
name|I40E_AQC_TUNNEL_TYPE_VXLAN_GPE
value|0x11
name|u8
name|reserved1
index|[
literal|10
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_udp_tunnel
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_add_udp_tunnel_completion
block|{
name|__le16
name|udp_port
decl_stmt|;
name|u8
name|filter_entry_index
decl_stmt|;
name|u8
name|multiple_pfs
decl_stmt|;
define|#
directive|define
name|I40E_AQC_SINGLE_PF
value|0x0
define|#
directive|define
name|I40E_AQC_MULTIPLE_PFS
value|0x1
name|u8
name|total_filters
decl_stmt|;
name|u8
name|reserved
index|[
literal|11
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_add_udp_tunnel_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* remove UDP Tunnel command (0x0B01) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_remove_udp_tunnel
block|{
name|u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|u8
name|index
decl_stmt|;
comment|/* 0 to 15 */
name|u8
name|reserved2
index|[
literal|13
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_remove_udp_tunnel
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_del_udp_tunnel_completion
block|{
name|__le16
name|udp_port
decl_stmt|;
name|u8
name|index
decl_stmt|;
comment|/* 0 to 15 */
name|u8
name|multiple_pfs
decl_stmt|;
name|u8
name|total_filters_used
decl_stmt|;
name|u8
name|reserved1
index|[
literal|11
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_del_udp_tunnel_completion
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* tunnel key structure 0x0B10 */
end_comment

begin_struct
struct|struct
name|i40e_aqc_tunnel_key_structure
block|{
name|u8
name|key1_off
decl_stmt|;
name|u8
name|key2_off
decl_stmt|;
name|u8
name|key1_len
decl_stmt|;
comment|/* 0 to 15 */
name|u8
name|key2_len
decl_stmt|;
comment|/* 0 to 15 */
name|u8
name|flags
decl_stmt|;
define|#
directive|define
name|I40E_AQC_TUNNEL_KEY_STRUCT_OVERRIDE
value|0x01
comment|/* response flags */
define|#
directive|define
name|I40E_AQC_TUNNEL_KEY_STRUCT_SUCCESS
value|0x01
define|#
directive|define
name|I40E_AQC_TUNNEL_KEY_STRUCT_MODIFIED
value|0x02
define|#
directive|define
name|I40E_AQC_TUNNEL_KEY_STRUCT_OVERRIDDEN
value|0x03
name|u8
name|network_key_index
decl_stmt|;
define|#
directive|define
name|I40E_AQC_NETWORK_KEY_INDEX_VXLAN
value|0x0
define|#
directive|define
name|I40E_AQC_NETWORK_KEY_INDEX_NGE
value|0x1
define|#
directive|define
name|I40E_AQC_NETWORK_KEY_INDEX_FLEX_MAC_IN_UDP
value|0x2
define|#
directive|define
name|I40E_AQC_NETWORK_KEY_INDEX_GRE
value|0x3
name|u8
name|reserved
index|[
literal|10
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_tunnel_key_structure
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* OEM mode commands (direct 0xFE0x) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_oem_param_change
block|{
name|__le32
name|param_type
decl_stmt|;
define|#
directive|define
name|I40E_AQ_OEM_PARAM_TYPE_PF_CTL
value|0
define|#
directive|define
name|I40E_AQ_OEM_PARAM_TYPE_BW_CTL
value|1
define|#
directive|define
name|I40E_AQ_OEM_PARAM_MAC
value|2
name|__le32
name|param_value1
decl_stmt|;
name|__le16
name|param_value2
decl_stmt|;
name|u8
name|reserved
index|[
literal|6
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_oem_param_change
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_oem_state_change
block|{
name|__le32
name|state
decl_stmt|;
define|#
directive|define
name|I40E_AQ_OEM_STATE_LINK_DOWN
value|0x0
define|#
directive|define
name|I40E_AQ_OEM_STATE_LINK_UP
value|0x1
name|u8
name|reserved
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_oem_state_change
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Initialize OCSD (0xFE02, direct) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_opc_oem_ocsd_initialize
block|{
name|u8
name|type_status
decl_stmt|;
name|u8
name|reserved1
index|[
literal|3
index|]
decl_stmt|;
name|__le32
name|ocsd_memory_block_addr_high
decl_stmt|;
name|__le32
name|ocsd_memory_block_addr_low
decl_stmt|;
name|__le32
name|requested_update_interval
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_opc_oem_ocsd_initialize
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Initialize OCBB  (0xFE03, direct) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_opc_oem_ocbb_initialize
block|{
name|u8
name|type_status
decl_stmt|;
name|u8
name|reserved1
index|[
literal|3
index|]
decl_stmt|;
name|__le32
name|ocbb_memory_block_addr_high
decl_stmt|;
name|__le32
name|ocbb_memory_block_addr_low
decl_stmt|;
name|u8
name|reserved2
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_opc_oem_ocbb_initialize
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* debug commands */
end_comment

begin_comment
comment|/* get device id (0xFF00) uses the generic structure */
end_comment

begin_comment
comment|/* set test more (0xFF01, internal) */
end_comment

begin_struct
struct|struct
name|i40e_acq_set_test_mode
block|{
name|u8
name|mode
decl_stmt|;
define|#
directive|define
name|I40E_AQ_TEST_PARTIAL
value|0
define|#
directive|define
name|I40E_AQ_TEST_FULL
value|1
define|#
directive|define
name|I40E_AQ_TEST_NVM
value|2
name|u8
name|reserved
index|[
literal|3
index|]
decl_stmt|;
name|u8
name|command
decl_stmt|;
define|#
directive|define
name|I40E_AQ_TEST_OPEN
value|0
define|#
directive|define
name|I40E_AQ_TEST_CLOSE
value|1
define|#
directive|define
name|I40E_AQ_TEST_INC
value|2
name|u8
name|reserved2
index|[
literal|3
index|]
decl_stmt|;
name|__le32
name|address_high
decl_stmt|;
name|__le32
name|address_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_acq_set_test_mode
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Debug Read Register command (0xFF03)  * Debug Write Register command (0xFF04)  */
end_comment

begin_struct
struct|struct
name|i40e_aqc_debug_reg_read_write
block|{
name|__le32
name|reserved
decl_stmt|;
name|__le32
name|address
decl_stmt|;
name|__le32
name|value_high
decl_stmt|;
name|__le32
name|value_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_debug_reg_read_write
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Scatter/gather Reg Read  (indirect 0xFF05)  * Scatter/gather Reg Write (indirect 0xFF06)  */
end_comment

begin_comment
comment|/* i40e_aq_desc is used for the command */
end_comment

begin_struct
struct|struct
name|i40e_aqc_debug_reg_sg_element_data
block|{
name|__le32
name|address
decl_stmt|;
name|__le32
name|value
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Debug Modify register (direct 0xFF07) */
end_comment

begin_struct
struct|struct
name|i40e_aqc_debug_modify_reg
block|{
name|__le32
name|address
decl_stmt|;
name|__le32
name|value
decl_stmt|;
name|__le32
name|clear_mask
decl_stmt|;
name|__le32
name|set_mask
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_debug_modify_reg
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* dump internal data (0xFF08, indirect) */
end_comment

begin_define
define|#
directive|define
name|I40E_AQ_CLUSTER_ID_AUX
value|0
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CLUSTER_ID_SWITCH_FLU
value|1
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CLUSTER_ID_TXSCHED
value|2
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CLUSTER_ID_HMC
value|3
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CLUSTER_ID_MAC0
value|4
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CLUSTER_ID_MAC1
value|5
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CLUSTER_ID_MAC2
value|6
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CLUSTER_ID_MAC3
value|7
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CLUSTER_ID_DCB
value|8
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CLUSTER_ID_EMP_MEM
value|9
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CLUSTER_ID_PKT_BUF
value|10
end_define

begin_define
define|#
directive|define
name|I40E_AQ_CLUSTER_ID_ALTRAM
value|11
end_define

begin_struct
struct|struct
name|i40e_aqc_debug_dump_internals
block|{
name|u8
name|cluster_id
decl_stmt|;
name|u8
name|table_id
decl_stmt|;
name|__le16
name|data_size
decl_stmt|;
name|__le32
name|idx
decl_stmt|;
name|__le32
name|address_high
decl_stmt|;
name|__le32
name|address_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_debug_dump_internals
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|i40e_aqc_debug_modify_internals
block|{
name|u8
name|cluster_id
decl_stmt|;
name|u8
name|cluster_specific_params
index|[
literal|7
index|]
decl_stmt|;
name|__le32
name|address_high
decl_stmt|;
name|__le32
name|address_low
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|I40E_CHECK_CMD_LENGTH
argument_list|(
name|i40e_aqc_debug_modify_internals
argument_list|)
expr_stmt|;
end_expr_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _I40E_ADMINQ_CMD_H_ */
end_comment

end_unit

