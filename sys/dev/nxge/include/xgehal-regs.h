begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2002-2007 Neterion, Inc.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|XGE_HAL_REGS_H
end_ifndef

begin_define
define|#
directive|define
name|XGE_HAL_REGS_H
end_define

begin_macro
name|__EXTERN_BEGIN_DECLS
end_macro

begin_typedef
typedef|typedef
struct|struct
block|{
comment|/* General Control-Status Registers */
name|u64
name|general_int_status
decl_stmt|;
define|#
directive|define
name|XGE_HAL_GEN_INTR_TXPIC
value|BIT(0)
define|#
directive|define
name|XGE_HAL_GEN_INTR_TXDMA
value|BIT(1)
define|#
directive|define
name|XGE_HAL_GEN_INTR_TXMAC
value|BIT(2)
define|#
directive|define
name|XGE_HAL_GEN_INTR_TXXGXS
value|BIT(3)
define|#
directive|define
name|XGE_HAL_GEN_INTR_TXTRAFFIC
value|BIT(8)
define|#
directive|define
name|XGE_HAL_GEN_INTR_RXPIC
value|BIT(32)
define|#
directive|define
name|XGE_HAL_GEN_INTR_RXDMA
value|BIT(33)
define|#
directive|define
name|XGE_HAL_GEN_INTR_RXMAC
value|BIT(34)
define|#
directive|define
name|XGE_HAL_GEN_INTR_MC
value|BIT(35)
define|#
directive|define
name|XGE_HAL_GEN_INTR_RXXGXS
value|BIT(36)
define|#
directive|define
name|XGE_HAL_GEN_INTR_RXTRAFFIC
value|BIT(40)
define|#
directive|define
name|XGE_HAL_GEN_ERROR_INTR
value|(XGE_HAL_GEN_INTR_TXPIC  | \ 	                 XGE_HAL_GEN_INTR_RXPIC  | \ 	                 XGE_HAL_GEN_INTR_TXDMA  | \ 	                 XGE_HAL_GEN_INTR_RXDMA  | \ 	                 XGE_HAL_GEN_INTR_TXMAC  | \ 	                 XGE_HAL_GEN_INTR_RXMAC  | \ 	                 XGE_HAL_GEN_INTR_TXXGXS | \ 	                 XGE_HAL_GEN_INTR_RXXGXS | \ 	                 XGE_HAL_GEN_INTR_MC)
name|u64
name|general_int_mask
decl_stmt|;
name|u8
name|unused0
index|[
literal|0x100
operator|-
literal|0x10
index|]
decl_stmt|;
name|u64
name|sw_reset
decl_stmt|;
comment|/* XGXS must be removed from reset only once. */
define|#
directive|define
name|XGE_HAL_SW_RESET_XENA
value|vBIT(0xA5,0,8)
define|#
directive|define
name|XGE_HAL_SW_RESET_FLASH
value|vBIT(0xA5,8,8)
define|#
directive|define
name|XGE_HAL_SW_RESET_EOI
value|vBIT(0xA5,16,8)
define|#
directive|define
name|XGE_HAL_SW_RESET_XGXS
value|vBIT(0xA5,24,8)
define|#
directive|define
name|XGE_HAL_SW_RESET_ALL
value|(XGE_HAL_SW_RESET_XENA  | \ 	                    XGE_HAL_SW_RESET_FLASH | \ 	                    XGE_HAL_SW_RESET_EOI | \ 	                    XGE_HAL_SW_RESET_XGXS)
comment|/* The SW_RESET register must read this value after a successful reset. */
if|#
directive|if
name|defined
argument_list|(
name|XGE_OS_HOST_BIG_ENDIAN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|XGE_OS_PIO_LITTLE_ENDIAN
argument_list|)
define|#
directive|define
name|XGE_HAL_SW_RESET_RAW_VAL_XENA
value|0xA500000000ULL
define|#
directive|define
name|XGE_HAL_SW_RESET_RAW_VAL_HERC
value|0xA5A500000000ULL
else|#
directive|else
define|#
directive|define
name|XGE_HAL_SW_RESET_RAW_VAL_XENA
value|0xA5000000ULL
define|#
directive|define
name|XGE_HAL_SW_RESET_RAW_VAL_HERC
value|0xA5A50000ULL
endif|#
directive|endif
name|u64
name|adapter_status
decl_stmt|;
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_TDMA_READY
value|BIT(0)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_RDMA_READY
value|BIT(1)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_PFC_READY
value|BIT(2)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_TMAC_BUF_EMPTY
value|BIT(3)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_PIC_QUIESCENT
value|BIT(5)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_RMAC_REMOTE_FAULT
value|BIT(6)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_RMAC_LOCAL_FAULT
value|BIT(7)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_RMAC_PCC_IDLE
value|vBIT(0xFF,8,8)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_RMAC_PCC_4_IDLE
value|vBIT(0x0F,8,8)
define|#
directive|define
name|XGE_HAL_ADAPTER_PCC_ENABLE_FOUR
value|vBIT(0x0F,0,8)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_RC_PRC_QUIESCENT
value|vBIT(0xFF,16,8)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_MC_DRAM_READY
value|BIT(24)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_MC_QUEUES_READY
value|BIT(25)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_M_PLL_LOCK
value|BIT(30)
define|#
directive|define
name|XGE_HAL_ADAPTER_STATUS_P_PLL_LOCK
value|BIT(31)
name|u64
name|adapter_control
decl_stmt|;
define|#
directive|define
name|XGE_HAL_ADAPTER_CNTL_EN
value|BIT(7)
define|#
directive|define
name|XGE_HAL_ADAPTER_EOI_TX_ON
value|BIT(15)
define|#
directive|define
name|XGE_HAL_ADAPTER_LED_ON
value|BIT(23)
define|#
directive|define
name|XGE_HAL_ADAPTER_UDPI
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,36,4)
define|#
directive|define
name|XGE_HAL_ADAPTER_WAIT_INT
value|BIT(48)
define|#
directive|define
name|XGE_HAL_ADAPTER_ECC_EN
value|BIT(55)
name|u64
name|serr_source
decl_stmt|;
define|#
directive|define
name|XGE_HAL_SERR_SOURCE_PIC
value|BIT(0)
define|#
directive|define
name|XGE_HAL_SERR_SOURCE_TXDMA
value|BIT(1)
define|#
directive|define
name|XGE_HAL_SERR_SOURCE_RXDMA
value|BIT(2)
define|#
directive|define
name|XGE_HAL_SERR_SOURCE_MAC
value|BIT(3)
define|#
directive|define
name|XGE_HAL_SERR_SOURCE_MC
value|BIT(4)
define|#
directive|define
name|XGE_HAL_SERR_SOURCE_XGXS
value|BIT(5)
define|#
directive|define
name|XGE_HAL_SERR_SOURCE_ANY
value|(XGE_HAL_SERR_SOURCE_PIC   | \ 	                 XGE_HAL_SERR_SOURCE_TXDMA | \ 	                 XGE_HAL_SERR_SOURCE_RXDMA | \ 	                 XGE_HAL_SERR_SOURCE_MAC   | \ 	                 XGE_HAL_SERR_SOURCE_MC    | \ 	                 XGE_HAL_SERR_SOURCE_XGXS)
name|u64
name|pci_info
decl_stmt|;
define|#
directive|define
name|XGE_HAL_PCI_INFO
value|vBIT(0xF,0,4)
define|#
directive|define
name|XGE_HAL_PCI_32_BIT
value|BIT(8)
name|u8
name|unused0_1
index|[
literal|0x160
operator|-
literal|0x128
index|]
decl_stmt|;
name|u64
name|ric_status
decl_stmt|;
name|u8
name|unused0_2
index|[
literal|0x558
operator|-
literal|0x168
index|]
decl_stmt|;
name|u64
name|mbist_status
decl_stmt|;
name|u8
name|unused0_3
index|[
literal|0x800
operator|-
literal|0x560
index|]
decl_stmt|;
comment|/* PCI-X Controller registers */
name|u64
name|pic_int_status
decl_stmt|;
name|u64
name|pic_int_mask
decl_stmt|;
define|#
directive|define
name|XGE_HAL_PIC_INT_TX
value|BIT(0)
define|#
directive|define
name|XGE_HAL_PIC_INT_FLSH
value|BIT(1)
define|#
directive|define
name|XGE_HAL_PIC_INT_MDIO
value|BIT(2)
define|#
directive|define
name|XGE_HAL_PIC_INT_IIC
value|BIT(3)
define|#
directive|define
name|XGE_HAL_PIC_INT_MISC
value|BIT(4)
define|#
directive|define
name|XGE_HAL_PIC_INT_RX
value|BIT(32)
name|u64
name|txpic_int_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TXPIC_INT_SCHED_INTR
value|BIT(42)
name|u64
name|txpic_int_mask
decl_stmt|;
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_ECC_SG_ERR
value|BIT(0)
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_ECC_DB_ERR
value|BIT(1)
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_FLASHR_R_FSM_ERR
value|BIT(8)
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_FLASHR_W_FSM_ERR
value|BIT(9)
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_INI_TX_FSM_SERR
value|BIT(10)
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_INI_TXO_FSM_ERR
value|BIT(11)
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_TRT_FSM_SERR
value|BIT(13)
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_SRT_FSM_SERR
value|BIT(14)
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_PIFR_FSM_SERR
value|BIT(15)
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_WRC_TX_SEND_FSM_SERR
value|BIT(21)
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_RRC_TX_REQ_FSM_SERR
value|BIT(23)
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_INI_RX_FSM_SERR
value|BIT(48)
define|#
directive|define
name|XGE_HAL_PCIX_INT_REG_RA_RX_FSM_SERR
value|BIT(50)
comment|/* #define XGE_HAL_PCIX_INT_REG_WRC_RX_SEND_FSM_SERR      BIT(52) #define XGE_HAL_PCIX_INT_REG_RRC_RX_REQ_FSM_SERR       BIT(54) #define XGE_HAL_PCIX_INT_REG_RRC_RX_SPLIT_FSM_SERR     BIT(58) */
name|u64
name|txpic_alarms
decl_stmt|;
name|u64
name|rxpic_int_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RX_PIC_INT_REG_SPDM_READY
value|BIT(0)
define|#
directive|define
name|XGE_HAL_RX_PIC_INT_REG_SPDM_OVERWRITE_ERR
value|BIT(44)
define|#
directive|define
name|XGE_HAL_RX_PIC_INT_REG_SPDM_PERR
value|BIT(55)
name|u64
name|rxpic_int_mask
decl_stmt|;
name|u64
name|rxpic_alarms
decl_stmt|;
name|u64
name|flsh_int_reg
decl_stmt|;
name|u64
name|flsh_int_mask
decl_stmt|;
define|#
directive|define
name|XGE_HAL_PIC_FLSH_INT_REG_CYCLE_FSM_ERR
value|BIT(63)
define|#
directive|define
name|XGE_HAL_PIC_FLSH_INT_REG_ERR
value|BIT(62)
name|u64
name|flash_alarms
decl_stmt|;
name|u64
name|mdio_int_reg
decl_stmt|;
name|u64
name|mdio_int_mask
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MDIO_INT_REG_MDIO_BUS_ERR
value|BIT(0)
define|#
directive|define
name|XGE_HAL_MDIO_INT_REG_DTX_BUS_ERR
value|BIT(8)
define|#
directive|define
name|XGE_HAL_MDIO_INT_REG_LASI
value|BIT(39)
name|u64
name|mdio_alarms
decl_stmt|;
name|u64
name|iic_int_reg
decl_stmt|;
name|u64
name|iic_int_mask
decl_stmt|;
define|#
directive|define
name|XGE_HAL_IIC_INT_REG_BUS_FSM_ERR
value|BIT(4)
define|#
directive|define
name|XGE_HAL_IIC_INT_REG_BIT_FSM_ERR
value|BIT(5)
define|#
directive|define
name|XGE_HAL_IIC_INT_REG_CYCLE_FSM_ERR
value|BIT(6)
define|#
directive|define
name|XGE_HAL_IIC_INT_REG_REQ_FSM_ERR
value|BIT(7)
define|#
directive|define
name|XGE_HAL_IIC_INT_REG_ACK_ERR
value|BIT(8)
name|u64
name|iic_alarms
decl_stmt|;
name|u64
name|msi_pending_reg
decl_stmt|;
name|u64
name|misc_int_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MISC_INT_REG_DP_ERR_INT
value|BIT(0)
define|#
directive|define
name|XGE_HAL_MISC_INT_REG_LINK_DOWN_INT
value|BIT(1)
define|#
directive|define
name|XGE_HAL_MISC_INT_REG_LINK_UP_INT
value|BIT(2)
name|u64
name|misc_int_mask
decl_stmt|;
name|u64
name|misc_alarms
decl_stmt|;
name|u64
name|msi_triggered_reg
decl_stmt|;
name|u64
name|xfp_gpio_int_reg
decl_stmt|;
name|u64
name|xfp_gpio_int_mask
decl_stmt|;
name|u64
name|xfp_alarms
decl_stmt|;
name|u8
name|unused5
index|[
literal|0x8E0
operator|-
literal|0x8C8
index|]
decl_stmt|;
name|u64
name|tx_traffic_int
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TX_TRAFFIC_INT_n
parameter_list|(
name|n
parameter_list|)
value|BIT(n)
name|u64
name|tx_traffic_mask
decl_stmt|;
name|u64
name|rx_traffic_int
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RX_TRAFFIC_INT_n
parameter_list|(
name|n
parameter_list|)
value|BIT(n)
name|u64
name|rx_traffic_mask
decl_stmt|;
comment|/* PIC Control registers */
name|u64
name|pic_control
decl_stmt|;
define|#
directive|define
name|XGE_HAL_PIC_CNTL_RX_ALARM_MAP_1
value|BIT(0)
define|#
directive|define
name|XGE_HAL_PIC_CNTL_ONE_SHOT_TINT
value|BIT(1)
define|#
directive|define
name|XGE_HAL_PIC_CNTL_SHARED_SPLITS
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,11,4)
name|u64
name|swapper_ctrl
decl_stmt|;
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_PIF_R_FE
value|BIT(0)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_PIF_R_SE
value|BIT(1)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_PIF_W_FE
value|BIT(8)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_PIF_W_SE
value|BIT(9)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_RTH_FE
value|BIT(10)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_RTH_SE
value|BIT(11)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_TXP_FE
value|BIT(16)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_TXP_SE
value|BIT(17)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_TXD_R_FE
value|BIT(18)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_TXD_R_SE
value|BIT(19)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_TXD_W_FE
value|BIT(20)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_TXD_W_SE
value|BIT(21)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_TXF_R_FE
value|BIT(22)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_TXF_R_SE
value|BIT(23)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_RXD_R_FE
value|BIT(32)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_RXD_R_SE
value|BIT(33)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_RXD_W_FE
value|BIT(34)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_RXD_W_SE
value|BIT(35)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_RXF_W_FE
value|BIT(36)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_RXF_W_SE
value|BIT(37)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_XMSI_FE
value|BIT(40)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_XMSI_SE
value|BIT(41)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_STATS_FE
value|BIT(48)
define|#
directive|define
name|XGE_HAL_SWAPPER_CTRL_STATS_SE
value|BIT(49)
name|u64
name|pif_rd_swapper_fb
decl_stmt|;
define|#
directive|define
name|XGE_HAL_IF_RD_SWAPPER_FB
value|0x0123456789ABCDEFULL
name|u64
name|scheduled_int_ctrl
decl_stmt|;
define|#
directive|define
name|XGE_HAL_SCHED_INT_CTRL_TIMER_EN
value|BIT(0)
define|#
directive|define
name|XGE_HAL_SCHED_INT_CTRL_ONE_SHOT
value|BIT(1)
define|#
directive|define
name|XGE_HAL_SCHED_INT_CTRL_INT2MSI
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,10,6)
define|#
directive|define
name|XGE_HAL_SCHED_INT_PERIOD
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,32,32)
define|#
directive|define
name|XGE_HAL_SCHED_INT_PERIOD_MASK
value|0xFFFFFFFF00000000ULL
name|u64
name|txreqtimeout
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TXREQTO_VAL
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,0,32)
define|#
directive|define
name|XGE_HAL_TXREQTO_EN
value|BIT(63)
name|u64
name|statsreqtimeout
decl_stmt|;
define|#
directive|define
name|XGE_HAL_STATREQTO_VAL
parameter_list|(
name|n
parameter_list|)
value|TBD
define|#
directive|define
name|XGE_HAL_STATREQTO_EN
value|BIT(63)
name|u64
name|read_retry_delay
decl_stmt|;
name|u64
name|read_retry_acceleration
decl_stmt|;
name|u64
name|write_retry_delay
decl_stmt|;
name|u64
name|write_retry_acceleration
decl_stmt|;
name|u64
name|xmsi_control
decl_stmt|;
define|#
directive|define
name|XGE_HAL_XMSI_EN
value|BIT(0)
define|#
directive|define
name|XGE_HAL_XMSI_DIS_TINT_SERR
value|BIT(1)
define|#
directive|define
name|XGE_HAL_XMSI_BYTE_COUNT
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,13,3)
name|u64
name|xmsi_access
decl_stmt|;
define|#
directive|define
name|XGE_HAL_XMSI_WR_RDN
value|BIT(7)
define|#
directive|define
name|XGE_HAL_XMSI_STROBE
value|BIT(15)
define|#
directive|define
name|XGE_HAL_XMSI_NO
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,26,6)
name|u64
name|xmsi_address
decl_stmt|;
name|u64
name|xmsi_data
decl_stmt|;
name|u64
name|rx_mat
decl_stmt|;
define|#
directive|define
name|XGE_HAL_SET_RX_MAT
parameter_list|(
name|ring
parameter_list|,
name|msi
parameter_list|)
value|vBIT(msi, (8 * ring), 8)
name|u8
name|unused6
index|[
literal|0x8
index|]
decl_stmt|;
name|u64
name|tx_mat
index|[
literal|8
index|]
decl_stmt|;
define|#
directive|define
name|XGE_HAL_SET_TX_MAT
parameter_list|(
name|fifo
parameter_list|,
name|msi
parameter_list|)
value|vBIT(msi, (8 * fifo), 8)
name|u64
name|xmsi_mask_reg
decl_stmt|;
comment|/* Automated statistics collection */
name|u64
name|stat_byte_cnt
decl_stmt|;
name|u64
name|stat_cfg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_STAT_CFG_STAT_EN
value|BIT(0)
define|#
directive|define
name|XGE_HAL_STAT_CFG_ONE_SHOT_EN
value|BIT(1)
define|#
directive|define
name|XGE_HAL_STAT_CFG_STAT_NS_EN
value|BIT(8)
define|#
directive|define
name|XGE_HAL_STAT_CFG_STAT_RO
value|BIT(9)
define|#
directive|define
name|XGE_HAL_XENA_PER_SEC
value|0x208d5
define|#
directive|define
name|XGE_HAL_SET_UPDT_PERIOD
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,32,32)
name|u64
name|stat_addr
decl_stmt|;
comment|/* General Configuration */
name|u64
name|mdio_control
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MDIO_CONTROL_MMD_INDX_ADDR
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,0,16)
define|#
directive|define
name|XGE_HAL_MDIO_CONTROL_MMD_DEV_ADDR
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,19,5)
define|#
directive|define
name|XGE_HAL_MDIO_CONTROL_MMD_PRT_ADDR
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,27,5)
define|#
directive|define
name|XGE_HAL_MDIO_CONTROL_MMD_DATA
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,32,16)
define|#
directive|define
name|XGE_HAL_MDIO_CONTROL_MMD_CTRL
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,56,4)
define|#
directive|define
name|XGE_HAL_MDIO_CONTROL_MMD_OP
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,60,2)
define|#
directive|define
name|XGE_HAL_MDIO_CONTROL_MMD_DATA_GET
parameter_list|(
name|n
parameter_list|)
value|((n>>16)&0xFFFF)
define|#
directive|define
name|XGE_HAL_MDIO_MMD_PMA_DEV_ADDR
value|0x01
define|#
directive|define
name|XGE_HAL_MDIO_DOM_REG_ADDR
value|0xA100
define|#
directive|define
name|XGE_HAL_MDIO_ALARM_FLAGS_ADDR
value|0xA070
define|#
directive|define
name|XGE_HAL_MDIO_WARN_FLAGS_ADDR
value|0xA074
define|#
directive|define
name|XGE_HAL_MDIO_CTRL_START
value|0xE
define|#
directive|define
name|XGE_HAL_MDIO_OP_ADDRESS
value|0x0
define|#
directive|define
name|XGE_HAL_MDIO_OP_WRITE
value|0x1
define|#
directive|define
name|XGE_HAL_MDIO_OP_READ
value|0x3
define|#
directive|define
name|XGE_HAL_MDIO_OP_READ_POST_INCREMENT
value|0x2
define|#
directive|define
name|XGE_HAL_MDIO_ALARM_TEMPHIGH
value|0x0080
define|#
directive|define
name|XGE_HAL_MDIO_ALARM_TEMPLOW
value|0x0040
define|#
directive|define
name|XGE_HAL_MDIO_ALARM_BIASHIGH
value|0x0008
define|#
directive|define
name|XGE_HAL_MDIO_ALARM_BIASLOW
value|0x0004
define|#
directive|define
name|XGE_HAL_MDIO_ALARM_POUTPUTHIGH
value|0x0002
define|#
directive|define
name|XGE_HAL_MDIO_ALARM_POUTPUTLOW
value|0x0001
define|#
directive|define
name|XGE_HAL_MDIO_WARN_TEMPHIGH
value|0x0080
define|#
directive|define
name|XGE_HAL_MDIO_WARN_TEMPLOW
value|0x0040
define|#
directive|define
name|XGE_HAL_MDIO_WARN_BIASHIGH
value|0x0008
define|#
directive|define
name|XGE_HAL_MDIO_WARN_BIASLOW
value|0x0004
define|#
directive|define
name|XGE_HAL_MDIO_WARN_POUTPUTHIGH
value|0x0002
define|#
directive|define
name|XGE_HAL_MDIO_WARN_POUTPUTLOW
value|0x0001
name|u64
name|dtx_control
decl_stmt|;
name|u64
name|i2c_control
decl_stmt|;
define|#
directive|define
name|XGE_HAL_I2C_CONTROL_DEV_ID
parameter_list|(
name|id
parameter_list|)
value|vBIT(id,1,3)
define|#
directive|define
name|XGE_HAL_I2C_CONTROL_ADDR
parameter_list|(
name|addr
parameter_list|)
value|vBIT(addr,5,11)
define|#
directive|define
name|XGE_HAL_I2C_CONTROL_BYTE_CNT
parameter_list|(
name|cnt
parameter_list|)
value|vBIT(cnt,22,2)
define|#
directive|define
name|XGE_HAL_I2C_CONTROL_READ
value|BIT(24)
define|#
directive|define
name|XGE_HAL_I2C_CONTROL_NACK
value|BIT(25)
define|#
directive|define
name|XGE_HAL_I2C_CONTROL_CNTL_START
value|vBIT(0xE,28,4)
define|#
directive|define
name|XGE_HAL_I2C_CONTROL_CNTL_END
parameter_list|(
name|val
parameter_list|)
value|(val& vBIT(0x1,28,4))
define|#
directive|define
name|XGE_HAL_I2C_CONTROL_GET_DATA
parameter_list|(
name|val
parameter_list|)
value|(u32)(val& 0xFFFFFFFF)
define|#
directive|define
name|XGE_HAL_I2C_CONTROL_SET_DATA
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,32,32)
name|u64
name|beacon_control
decl_stmt|;
name|u64
name|misc_control
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MISC_CONTROL_LINK_STABILITY_PERIOD
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,29,3)
define|#
directive|define
name|XGE_HAL_MISC_CONTROL_EXT_REQ_EN
value|BIT(1)
define|#
directive|define
name|XGE_HAL_MISC_CONTROL_LINK_FAULT
value|BIT(0)
name|u64
name|xfb_control
decl_stmt|;
name|u64
name|gpio_control
decl_stmt|;
define|#
directive|define
name|XGE_HAL_GPIO_CTRL_GPIO_0
value|BIT(8)
name|u64
name|txfifo_dw_mask
decl_stmt|;
name|u64
name|split_table_line_no
decl_stmt|;
name|u64
name|sc_timeout
decl_stmt|;
name|u64
name|pic_control_2
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TXD_WRITE_BC
parameter_list|(
name|n
parameter_list|)
value|vBIT(n, 13, 3)
name|u64
name|ini_dperr_ctrl
decl_stmt|;
name|u64
name|wreq_split_mask
decl_stmt|;
name|u64
name|qw_per_rxd
decl_stmt|;
name|u8
name|unused7
index|[
literal|0x300
operator|-
literal|0x250
index|]
decl_stmt|;
name|u64
name|pic_status
decl_stmt|;
name|u64
name|txp_status
decl_stmt|;
name|u64
name|txp_err_context
decl_stmt|;
name|u64
name|spdm_bir_offset
decl_stmt|;
define|#
directive|define
name|XGE_HAL_SPDM_PCI_BAR_NUM
parameter_list|(
name|spdm_bir_offset
parameter_list|)
define|\
value|(u8)(spdm_bir_offset>> 61)
define|#
directive|define
name|XGE_HAL_SPDM_PCI_BAR_OFFSET
parameter_list|(
name|spdm_bir_offset
parameter_list|)
define|\
value|(u32)((spdm_bir_offset>> 32)& 0x1FFFFFFF)
name|u64
name|spdm_overwrite
decl_stmt|;
define|#
directive|define
name|XGE_HAL_SPDM_OVERWRITE_ERR_SPDM_ENTRY
parameter_list|(
name|spdm_overwrite
parameter_list|)
define|\
value|(u8)((spdm_overwrite>> 48)& 0xff)
define|#
directive|define
name|XGE_HAL_SPDM_OVERWRITE_ERR_SPDM_DW
parameter_list|(
name|spdm_overwrite
parameter_list|)
define|\
value|(u8)((spdm_overwrite>> 40)& 0x3)
define|#
directive|define
name|XGE_HAL_SPDM_OVERWRITE_ERR_SPDM_LINE
parameter_list|(
name|spdm_overwrite
parameter_list|)
define|\
value|(u8)((spdm_overwrite>> 32)& 0x7)
name|u64
name|cfg_addr_on_dperr
decl_stmt|;
name|u64
name|pif_addr_on_dperr
decl_stmt|;
name|u64
name|tags_in_use
decl_stmt|;
name|u64
name|rd_req_types
decl_stmt|;
name|u64
name|split_table_line
decl_stmt|;
name|u64
name|unxp_split_add_ph
decl_stmt|;
name|u64
name|unexp_split_attr_ph
decl_stmt|;
name|u64
name|split_message
decl_stmt|;
name|u64
name|spdm_structure
decl_stmt|;
define|#
directive|define
name|XGE_HAL_SPDM_MAX_ENTRIES
parameter_list|(
name|spdm_structure
parameter_list|)
value|(u16)(spdm_structure>> 48)
define|#
directive|define
name|XGE_HAL_SPDM_INT_QW_PER_ENTRY
parameter_list|(
name|spdm_structure
parameter_list|)
define|\
value|(u8)((spdm_structure>> 40)& 0xff)
define|#
directive|define
name|XGE_HAL_SPDM_PCI_QW_PER_ENTRY
parameter_list|(
name|spdm_structure
parameter_list|)
define|\
value|(u8)((spdm_structure>> 32)& 0xff)
name|u64
name|txdw_ptr_cnt_0
decl_stmt|;
name|u64
name|txdw_ptr_cnt_1
decl_stmt|;
name|u64
name|txdw_ptr_cnt_2
decl_stmt|;
name|u64
name|txdw_ptr_cnt_3
decl_stmt|;
name|u64
name|txdw_ptr_cnt_4
decl_stmt|;
name|u64
name|txdw_ptr_cnt_5
decl_stmt|;
name|u64
name|txdw_ptr_cnt_6
decl_stmt|;
name|u64
name|txdw_ptr_cnt_7
decl_stmt|;
name|u64
name|rxdw_cnt_ring_0
decl_stmt|;
name|u64
name|rxdw_cnt_ring_1
decl_stmt|;
name|u64
name|rxdw_cnt_ring_2
decl_stmt|;
name|u64
name|rxdw_cnt_ring_3
decl_stmt|;
name|u64
name|rxdw_cnt_ring_4
decl_stmt|;
name|u64
name|rxdw_cnt_ring_5
decl_stmt|;
name|u64
name|rxdw_cnt_ring_6
decl_stmt|;
name|u64
name|rxdw_cnt_ring_7
decl_stmt|;
name|u8
name|unused8
index|[
literal|0x410
index|]
decl_stmt|;
comment|/* TxDMA registers */
name|u64
name|txdma_int_status
decl_stmt|;
name|u64
name|txdma_int_mask
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TXDMA_PFC_INT
value|BIT(0)
define|#
directive|define
name|XGE_HAL_TXDMA_TDA_INT
value|BIT(1)
define|#
directive|define
name|XGE_HAL_TXDMA_PCC_INT
value|BIT(2)
define|#
directive|define
name|XGE_HAL_TXDMA_TTI_INT
value|BIT(3)
define|#
directive|define
name|XGE_HAL_TXDMA_LSO_INT
value|BIT(4)
define|#
directive|define
name|XGE_HAL_TXDMA_TPA_INT
value|BIT(5)
define|#
directive|define
name|XGE_HAL_TXDMA_SM_INT
value|BIT(6)
name|u64
name|pfc_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_PFC_ECC_SG_ERR
value|BIT(7)
define|#
directive|define
name|XGE_HAL_PFC_ECC_DB_ERR
value|BIT(15)
define|#
directive|define
name|XGE_HAL_PFC_SM_ERR_ALARM
value|BIT(23)
define|#
directive|define
name|XGE_HAL_PFC_MISC_0_ERR
value|BIT(31)
define|#
directive|define
name|XGE_HAL_PFC_MISC_1_ERR
value|BIT(32)
define|#
directive|define
name|XGE_HAL_PFC_PCIX_ERR
value|BIT(39)
name|u64
name|pfc_err_mask
decl_stmt|;
name|u64
name|pfc_err_alarm
decl_stmt|;
name|u64
name|tda_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TDA_Fn_ECC_SG_ERR
value|vBIT(0xff,0,8)
define|#
directive|define
name|XGE_HAL_TDA_Fn_ECC_DB_ERR
value|vBIT(0xff,8,8)
define|#
directive|define
name|XGE_HAL_TDA_SM0_ERR_ALARM
value|BIT(22)
define|#
directive|define
name|XGE_HAL_TDA_SM1_ERR_ALARM
value|BIT(23)
define|#
directive|define
name|XGE_HAL_TDA_PCIX_ERR
value|BIT(39)
name|u64
name|tda_err_mask
decl_stmt|;
name|u64
name|tda_err_alarm
decl_stmt|;
name|u64
name|pcc_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_PCC_FB_ECC_SG_ERR
value|vBIT(0xFF,0,8)
define|#
directive|define
name|XGE_HAL_PCC_TXB_ECC_SG_ERR
value|vBIT(0xFF,8,8)
define|#
directive|define
name|XGE_HAL_PCC_FB_ECC_DB_ERR
value|vBIT(0xFF,16, 8)
define|#
directive|define
name|XGE_HAL_PCC_TXB_ECC_DB_ERR
value|vBIT(0xff,24,8)
define|#
directive|define
name|XGE_HAL_PCC_SM_ERR_ALARM
value|vBIT(0xff,32,8)
define|#
directive|define
name|XGE_HAL_PCC_WR_ERR_ALARM
value|vBIT(0xff,40,8)
define|#
directive|define
name|XGE_HAL_PCC_N_SERR
value|vBIT(0xff,48,8)
define|#
directive|define
name|XGE_HAL_PCC_ENABLE_FOUR
value|vBIT(0x0F,0,8)
define|#
directive|define
name|XGE_HAL_PCC_6_COF_OV_ERR
value|BIT(56)
define|#
directive|define
name|XGE_HAL_PCC_7_COF_OV_ERR
value|BIT(57)
define|#
directive|define
name|XGE_HAL_PCC_6_LSO_OV_ERR
value|BIT(58)
define|#
directive|define
name|XGE_HAL_PCC_7_LSO_OV_ERR
value|BIT(59)
name|u64
name|pcc_err_mask
decl_stmt|;
name|u64
name|pcc_err_alarm
decl_stmt|;
name|u64
name|tti_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TTI_ECC_SG_ERR
value|BIT(7)
define|#
directive|define
name|XGE_HAL_TTI_ECC_DB_ERR
value|BIT(15)
define|#
directive|define
name|XGE_HAL_TTI_SM_ERR_ALARM
value|BIT(23)
name|u64
name|tti_err_mask
decl_stmt|;
name|u64
name|tti_err_alarm
decl_stmt|;
name|u64
name|lso_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_LSO6_SEND_OFLOW
value|BIT(12)
define|#
directive|define
name|XGE_HAL_LSO7_SEND_OFLOW
value|BIT(13)
define|#
directive|define
name|XGE_HAL_LSO6_ABORT
value|BIT(14)
define|#
directive|define
name|XGE_HAL_LSO7_ABORT
value|BIT(15)
define|#
directive|define
name|XGE_HAL_LSO6_SM_ERR_ALARM
value|BIT(22)
define|#
directive|define
name|XGE_HAL_LSO7_SM_ERR_ALARM
value|BIT(23)
name|u64
name|lso_err_mask
decl_stmt|;
name|u64
name|lso_err_alarm
decl_stmt|;
name|u64
name|tpa_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TPA_TX_FRM_DROP
value|BIT(7)
define|#
directive|define
name|XGE_HAL_TPA_SM_ERR_ALARM
value|BIT(23)
name|u64
name|tpa_err_mask
decl_stmt|;
name|u64
name|tpa_err_alarm
decl_stmt|;
name|u64
name|sm_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_SM_SM_ERR_ALARM
value|BIT(15)
name|u64
name|sm_err_mask
decl_stmt|;
name|u64
name|sm_err_alarm
decl_stmt|;
name|u8
name|unused9
index|[
literal|0x100
operator|-
literal|0xB8
index|]
decl_stmt|;
comment|/* TxDMA arbiter */
name|u64
name|tx_dma_wrap_stat
decl_stmt|;
comment|/* Tx FIFO controller */
define|#
directive|define
name|XGE_HAL_X_MAX_FIFOS
value|8
define|#
directive|define
name|XGE_HAL_X_FIFO_MAX_LEN
value|0x1FFF
comment|/*8191 */
name|u64
name|tx_fifo_partition_0
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_EN
value|BIT(0)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_0_PRI
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,5,3)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_0_LEN
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,19,13)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_1_PRI
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,37,3)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_1_LEN
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,51,13  )
name|u64
name|tx_fifo_partition_1
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_2_PRI
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,5,3)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_2_LEN
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,19,13)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_3_PRI
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,37,3)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_3_LEN
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,51,13)
name|u64
name|tx_fifo_partition_2
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_4_PRI
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,5,3)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_4_LEN
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,19,13)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_5_PRI
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,37,3)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_5_LEN
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,51,13)
name|u64
name|tx_fifo_partition_3
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_6_PRI
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,5,3)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_6_LEN
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,19,13)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_7_PRI
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,37,3)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_7_LEN
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,51,13)
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_PRI_0
value|0
comment|/* highest */
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_PRI_1
value|1
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_PRI_2
value|2
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_PRI_3
value|3
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_PRI_4
value|4
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_PRI_5
value|5
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_PRI_6
value|6
define|#
directive|define
name|XGE_HAL_TX_FIFO_PARTITION_PRI_7
value|7
comment|/* lowest */
name|u64
name|tx_w_round_robin_0
decl_stmt|;
name|u64
name|tx_w_round_robin_1
decl_stmt|;
name|u64
name|tx_w_round_robin_2
decl_stmt|;
name|u64
name|tx_w_round_robin_3
decl_stmt|;
name|u64
name|tx_w_round_robin_4
decl_stmt|;
name|u64
name|tti_command_mem
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TTI_CMD_MEM_WE
value|BIT(7)
define|#
directive|define
name|XGE_HAL_TTI_CMD_MEM_STROBE_NEW_CMD
value|BIT(15)
define|#
directive|define
name|XGE_HAL_TTI_CMD_MEM_STROBE_BEING_EXECUTED
value|BIT(15)
define|#
directive|define
name|XGE_HAL_TTI_CMD_MEM_OFFSET
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,26,6)
name|u64
name|tti_data1_mem
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TTI_DATA1_MEM_TX_TIMER_VAL
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,6,26)
define|#
directive|define
name|XGE_HAL_TTI_DATA1_MEM_TX_TIMER_AC_CI
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,38,2)
define|#
directive|define
name|XGE_HAL_TTI_DATA1_MEM_TX_TIMER_AC_EN
value|BIT(38)
define|#
directive|define
name|XGE_HAL_TTI_DATA1_MEM_TX_TIMER_CI_EN
value|BIT(39)
define|#
directive|define
name|XGE_HAL_TTI_DATA1_MEM_TX_URNG_A
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,41,7)
define|#
directive|define
name|XGE_HAL_TTI_DATA1_MEM_TX_URNG_B
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,49,7)
define|#
directive|define
name|XGE_HAL_TTI_DATA1_MEM_TX_URNG_C
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,57,7)
name|u64
name|tti_data2_mem
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TTI_DATA2_MEM_TX_UFC_A
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,0,16)
define|#
directive|define
name|XGE_HAL_TTI_DATA2_MEM_TX_UFC_B
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,16,16)
define|#
directive|define
name|XGE_HAL_TTI_DATA2_MEM_TX_UFC_C
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,32,16)
define|#
directive|define
name|XGE_HAL_TTI_DATA2_MEM_TX_UFC_D
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,48,16)
comment|/* Tx Protocol assist */
name|u64
name|tx_pa_cfg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TX_PA_CFG_IGNORE_FRM_ERR
value|BIT(1)
define|#
directive|define
name|XGE_HAL_TX_PA_CFG_IGNORE_SNAP_OUI
value|BIT(2)
define|#
directive|define
name|XGE_HAL_TX_PA_CFG_IGNORE_LLC_CTRL
value|BIT(3)
define|#
directive|define
name|XGE_HAL_TX_PA_CFG_IGNORE_L2_ERR
value|BIT(6)
comment|/* Recent add, used only debug purposes. */
name|u64
name|pcc_enable
decl_stmt|;
name|u64
name|pfc_monitor_0
decl_stmt|;
name|u64
name|pfc_monitor_1
decl_stmt|;
name|u64
name|pfc_monitor_2
decl_stmt|;
name|u64
name|pfc_monitor_3
decl_stmt|;
name|u64
name|txd_ownership_ctrl
decl_stmt|;
name|u64
name|pfc_read_cntrl
decl_stmt|;
name|u64
name|pfc_read_data
decl_stmt|;
name|u8
name|unused10
index|[
literal|0x1700
operator|-
literal|0x11B0
index|]
decl_stmt|;
name|u64
name|txdma_debug_ctrl
decl_stmt|;
name|u8
name|unused11
index|[
literal|0x1800
operator|-
literal|0x1708
index|]
decl_stmt|;
comment|/* RxDMA Registers */
name|u64
name|rxdma_int_status
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RXDMA_RC_INT
value|BIT(0)
define|#
directive|define
name|XGE_HAL_RXDMA_RPA_INT
value|BIT(1)
define|#
directive|define
name|XGE_HAL_RXDMA_RDA_INT
value|BIT(2)
define|#
directive|define
name|XGE_HAL_RXDMA_RTI_INT
value|BIT(3)
name|u64
name|rxdma_int_mask
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RXDMA_INT_RC_INT_M
value|BIT(0)
define|#
directive|define
name|XGE_HAL_RXDMA_INT_RPA_INT_M
value|BIT(1)
define|#
directive|define
name|XGE_HAL_RXDMA_INT_RDA_INT_M
value|BIT(2)
define|#
directive|define
name|XGE_HAL_RXDMA_INT_RTI_INT_M
value|BIT(3)
name|u64
name|rda_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RDA_RXDn_ECC_SG_ERR
value|vBIT(0xFF,0,8)
define|#
directive|define
name|XGE_HAL_RDA_RXDn_ECC_DB_ERR
value|vBIT(0xFF,8,8)
define|#
directive|define
name|XGE_HAL_RDA_FRM_ECC_SG_ERR
value|BIT(23)
define|#
directive|define
name|XGE_HAL_RDA_FRM_ECC_DB_N_AERR
value|BIT(31)
define|#
directive|define
name|XGE_HAL_RDA_SM1_ERR_ALARM
value|BIT(38)
define|#
directive|define
name|XGE_HAL_RDA_SM0_ERR_ALARM
value|BIT(39)
define|#
directive|define
name|XGE_HAL_RDA_MISC_ERR
value|BIT(47)
define|#
directive|define
name|XGE_HAL_RDA_PCIX_ERR
value|BIT(55)
define|#
directive|define
name|XGE_HAL_RDA_RXD_ECC_DB_SERR
value|BIT(63)
name|u64
name|rda_err_mask
decl_stmt|;
name|u64
name|rda_err_alarm
decl_stmt|;
name|u64
name|rc_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RC_PRCn_ECC_SG_ERR
value|vBIT(0xFF,0,8)
define|#
directive|define
name|XGE_HAL_RC_PRCn_ECC_DB_ERR
value|vBIT(0xFF,8,8)
define|#
directive|define
name|XGE_HAL_RC_FTC_ECC_SG_ERR
value|BIT(23)
define|#
directive|define
name|XGE_HAL_RC_FTC_ECC_DB_ERR
value|BIT(31)
define|#
directive|define
name|XGE_HAL_RC_PRCn_SM_ERR_ALARM
value|vBIT(0xFF,32,8)
define|#
directive|define
name|XGE_HAL_RC_FTC_SM_ERR_ALARM
value|BIT(47)
define|#
directive|define
name|XGE_HAL_RC_RDA_FAIL_WR_Rn
value|vBIT(0xFF,48,8)
name|u64
name|rc_err_mask
decl_stmt|;
name|u64
name|rc_err_alarm
decl_stmt|;
name|u64
name|prc_pcix_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_PRC_PCI_AB_RD_Rn
value|vBIT(0xFF,0,8)
define|#
directive|define
name|XGE_HAL_PRC_PCI_DP_RD_Rn
value|vBIT(0xFF,8,8)
define|#
directive|define
name|XGE_HAL_PRC_PCI_AB_WR_Rn
value|vBIT(0xFF,16,8)
define|#
directive|define
name|XGE_HAL_PRC_PCI_DP_WR_Rn
value|vBIT(0xFF,24,8)
define|#
directive|define
name|XGE_HAL_PRC_PCI_AB_F_WR_Rn
value|vBIT(0xFF,32,8)
define|#
directive|define
name|XGE_HAL_PRC_PCI_DP_F_WR_Rn
value|vBIT(0xFF,40,8)
name|u64
name|prc_pcix_err_mask
decl_stmt|;
name|u64
name|prc_pcix_err_alarm
decl_stmt|;
name|u64
name|rpa_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RPA_ECC_SG_ERR
value|BIT(7)
define|#
directive|define
name|XGE_HAL_RPA_ECC_DB_ERR
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RPA_FLUSH_REQUEST
value|BIT(22)
define|#
directive|define
name|XGE_HAL_RPA_SM_ERR_ALARM
value|BIT(23)
define|#
directive|define
name|XGE_HAL_RPA_CREDIT_ERR
value|BIT(31)
name|u64
name|rpa_err_mask
decl_stmt|;
name|u64
name|rpa_err_alarm
decl_stmt|;
name|u64
name|rti_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTI_ECC_SG_ERR
value|BIT(7)
define|#
directive|define
name|XGE_HAL_RTI_ECC_DB_ERR
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RTI_SM_ERR_ALARM
value|BIT(23)
name|u64
name|rti_err_mask
decl_stmt|;
name|u64
name|rti_err_alarm
decl_stmt|;
name|u8
name|unused12
index|[
literal|0x100
operator|-
literal|0x88
index|]
decl_stmt|;
comment|/* DMA arbiter */
name|u64
name|rx_queue_priority
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RX_QUEUE_0_PRIORITY
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,5,3)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_1_PRIORITY
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,13,3)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_2_PRIORITY
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,21,3)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_3_PRIORITY
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,29,3)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_4_PRIORITY
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,37,3)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_5_PRIORITY
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,45,3)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_6_PRIORITY
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,53,3)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_7_PRIORITY
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,61,3)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_PRI_0
value|0
comment|/* highest */
define|#
directive|define
name|XGE_HAL_RX_QUEUE_PRI_1
value|1
define|#
directive|define
name|XGE_HAL_RX_QUEUE_PRI_2
value|2
define|#
directive|define
name|XGE_HAL_RX_QUEUE_PRI_3
value|3
define|#
directive|define
name|XGE_HAL_RX_QUEUE_PRI_4
value|4
define|#
directive|define
name|XGE_HAL_RX_QUEUE_PRI_5
value|5
define|#
directive|define
name|XGE_HAL_RX_QUEUE_PRI_6
value|6
define|#
directive|define
name|XGE_HAL_RX_QUEUE_PRI_7
value|7
comment|/* lowest */
name|u64
name|rx_w_round_robin_0
decl_stmt|;
name|u64
name|rx_w_round_robin_1
decl_stmt|;
name|u64
name|rx_w_round_robin_2
decl_stmt|;
name|u64
name|rx_w_round_robin_3
decl_stmt|;
name|u64
name|rx_w_round_robin_4
decl_stmt|;
comment|/* Per-ring controller regs */
define|#
directive|define
name|XGE_HAL_RX_MAX_RINGS
value|8
name|u64
name|prc_rxd0_n
index|[
name|XGE_HAL_RX_MAX_RINGS
index|]
decl_stmt|;
name|u64
name|prc_ctrl_n
index|[
name|XGE_HAL_RX_MAX_RINGS
index|]
decl_stmt|;
define|#
directive|define
name|XGE_HAL_PRC_CTRL_RC_ENABLED
value|BIT(7)
define|#
directive|define
name|XGE_HAL_PRC_CTRL_RING_MODE
value|(BIT(14)|BIT(15))
define|#
directive|define
name|XGE_HAL_PRC_CTRL_RING_MODE_1
value|vBIT(0,14,2)
define|#
directive|define
name|XGE_HAL_PRC_CTRL_RING_MODE_3
value|vBIT(1,14,2)
define|#
directive|define
name|XGE_HAL_PRC_CTRL_RING_MODE_5
value|vBIT(2,14,2)
define|#
directive|define
name|XGE_HAL_PRC_CTRL_RING_MODE_x
value|vBIT(3,14,2)
define|#
directive|define
name|XGE_HAL_PRC_CTRL_NO_SNOOP
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,22,2)
define|#
directive|define
name|XGE_HAL_PRC_CTRL_RTH_DISABLE
value|BIT(31)
define|#
directive|define
name|XGE_HAL_PRC_CTRL_BIMODAL_INTERRUPT
value|BIT(37)
define|#
directive|define
name|XGE_HAL_PRC_CTRL_GROUP_READS
value|BIT(38)
define|#
directive|define
name|XGE_HAL_PRC_CTRL_RXD_BACKOFF_INTERVAL
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,40,24)
name|u64
name|prc_alarm_action
decl_stmt|;
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RR_R0_STOP
value|BIT(3)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RW_R0_STOP
value|BIT(7)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RR_R1_STOP
value|BIT(11)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RW_R1_STOP
value|BIT(15)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RR_R2_STOP
value|BIT(19)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RW_R2_STOP
value|BIT(23)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RR_R3_STOP
value|BIT(27)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RW_R3_STOP
value|BIT(31)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RR_R4_STOP
value|BIT(35)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RW_R4_STOP
value|BIT(39)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RR_R5_STOP
value|BIT(43)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RW_R5_STOP
value|BIT(47)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RR_R6_STOP
value|BIT(51)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RW_R6_STOP
value|BIT(55)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RR_R7_STOP
value|BIT(59)
define|#
directive|define
name|XGE_HAL_PRC_ALARM_ACTION_RW_R7_STOP
value|BIT(63)
comment|/* Receive traffic interrupts */
name|u64
name|rti_command_mem
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTI_CMD_MEM_WE
value|BIT(7)
define|#
directive|define
name|XGE_HAL_RTI_CMD_MEM_STROBE
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RTI_CMD_MEM_STROBE_NEW_CMD
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RTI_CMD_MEM_STROBE_CMD_BEING_EXECUTED
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RTI_CMD_MEM_OFFSET
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,29,3)
name|u64
name|rti_data1_mem
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTI_DATA1_MEM_RX_TIMER_VAL
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,3,29)
define|#
directive|define
name|XGE_HAL_RTI_DATA1_MEM_RX_TIMER_AC_EN
value|BIT(38)
define|#
directive|define
name|XGE_HAL_RTI_DATA1_MEM_RX_TIMER_CI_EN
value|BIT(39)
define|#
directive|define
name|XGE_HAL_RTI_DATA1_MEM_RX_URNG_A
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,41,7)
define|#
directive|define
name|XGE_HAL_RTI_DATA1_MEM_RX_URNG_B
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,49,7)
define|#
directive|define
name|XGE_HAL_RTI_DATA1_MEM_RX_URNG_C
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,57,7)
name|u64
name|rti_data2_mem
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTI_DATA2_MEM_RX_UFC_A
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,0,16)
define|#
directive|define
name|XGE_HAL_RTI_DATA2_MEM_RX_UFC_B
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,16,16)
define|#
directive|define
name|XGE_HAL_RTI_DATA2_MEM_RX_UFC_C
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,32,16)
define|#
directive|define
name|XGE_HAL_RTI_DATA2_MEM_RX_UFC_D
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,48,16)
name|u64
name|rx_pa_cfg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RX_PA_CFG_IGNORE_FRM_ERR
value|BIT(1)
define|#
directive|define
name|XGE_HAL_RX_PA_CFG_IGNORE_SNAP_OUI
value|BIT(2)
define|#
directive|define
name|XGE_HAL_RX_PA_CFG_IGNORE_LLC_CTRL
value|BIT(3)
define|#
directive|define
name|XGE_HAL_RX_PA_CFG_SCATTER_MODE
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,6,1)
define|#
directive|define
name|XGE_HAL_RX_PA_CFG_STRIP_VLAN_TAG_MODE
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,15,1)
name|u8
name|unused13_0
index|[
literal|0x8
index|]
decl_stmt|;
name|u64
name|ring_bump_counter1
decl_stmt|;
name|u64
name|ring_bump_counter2
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RING_BUMP_CNT
parameter_list|(
name|i
parameter_list|,
name|val
parameter_list|)
value|(u16)(val>> (48 - (16 * (i % 4))))
name|u8
name|unused13
index|[
literal|0x700
operator|-
literal|0x1f0
index|]
decl_stmt|;
name|u64
name|rxdma_debug_ctrl
decl_stmt|;
name|u8
name|unused14
index|[
literal|0x2000
operator|-
literal|0x1f08
index|]
decl_stmt|;
comment|/* Media Access Controller Register */
name|u64
name|mac_int_status
decl_stmt|;
name|u64
name|mac_int_mask
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MAC_INT_STATUS_TMAC_INT
value|BIT(0)
define|#
directive|define
name|XGE_HAL_MAC_INT_STATUS_RMAC_INT
value|BIT(1)
name|u64
name|mac_tmac_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TMAC_ECC_DB_ERR
value|BIT(15)
define|#
directive|define
name|XGE_HAL_TMAC_TX_BUF_OVRN
value|BIT(23)
define|#
directive|define
name|XGE_HAL_TMAC_TX_CRI_ERR
value|BIT(31)
define|#
directive|define
name|XGE_HAL_TMAC_TX_SM_ERR
value|BIT(39)
name|u64
name|mac_tmac_err_mask
decl_stmt|;
name|u64
name|mac_tmac_err_alarm
decl_stmt|;
name|u64
name|mac_rmac_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RMAC_RX_BUFF_OVRN
value|BIT(0)
define|#
directive|define
name|XGE_HAL_RMAC_RTH_SPDM_ECC_SG_ERR
value|BIT(0)
define|#
directive|define
name|XGE_HAL_RMAC_RTS_ECC_DB_ERR
value|BIT(0)
define|#
directive|define
name|XGE_HAL_RMAC_ECC_DB_ERR
value|BIT(0)
define|#
directive|define
name|XGE_HAL_RMAC_RTH_SPDM_ECC_DB_ERR
value|BIT(0)
define|#
directive|define
name|XGE_HAL_RMAC_LINK_STATE_CHANGE_INT
value|BIT(0)
define|#
directive|define
name|XGE_HAL_RMAC_RX_SM_ERR
value|BIT(39)
name|u64
name|mac_rmac_err_mask
decl_stmt|;
name|u64
name|mac_rmac_err_alarm
decl_stmt|;
name|u8
name|unused15
index|[
literal|0x100
operator|-
literal|0x40
index|]
decl_stmt|;
name|u64
name|mac_cfg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MAC_CFG_TMAC_ENABLE
value|BIT(0)
define|#
directive|define
name|XGE_HAL_MAC_CFG_RMAC_ENABLE
value|BIT(1)
define|#
directive|define
name|XGE_HAL_MAC_CFG_LAN_NOT_WAN
value|BIT(2)
define|#
directive|define
name|XGE_HAL_MAC_CFG_TMAC_LOOPBACK
value|BIT(3)
define|#
directive|define
name|XGE_HAL_MAC_CFG_TMAC_APPEND_PAD
value|BIT(4)
define|#
directive|define
name|XGE_HAL_MAC_CFG_RMAC_STRIP_FCS
value|BIT(5)
define|#
directive|define
name|XGE_HAL_MAC_CFG_RMAC_STRIP_PAD
value|BIT(6)
define|#
directive|define
name|XGE_HAL_MAC_CFG_RMAC_PROM_ENABLE
value|BIT(7)
define|#
directive|define
name|XGE_HAL_MAC_RMAC_DISCARD_PFRM
value|BIT(8)
define|#
directive|define
name|XGE_HAL_MAC_RMAC_BCAST_ENABLE
value|BIT(9)
define|#
directive|define
name|XGE_HAL_MAC_RMAC_ALL_ADDR_ENABLE
value|BIT(10)
define|#
directive|define
name|XGE_HAL_MAC_RMAC_INVLD_IPG_THR
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,16,8)
name|u64
name|tmac_avg_ipg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TMAC_AVG_IPG
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,0,8)
name|u64
name|rmac_max_pyld_len
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RMAC_MAX_PYLD_LEN
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,2,14)
name|u64
name|rmac_err_cfg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RMAC_ERR_FCS
value|BIT(0)
define|#
directive|define
name|XGE_HAL_RMAC_ERR_FCS_ACCEPT
value|BIT(1)
define|#
directive|define
name|XGE_HAL_RMAC_ERR_TOO_LONG
value|BIT(1)
define|#
directive|define
name|XGE_HAL_RMAC_ERR_TOO_LONG_ACCEPT
value|BIT(1)
define|#
directive|define
name|XGE_HAL_RMAC_ERR_RUNT
value|BIT(2)
define|#
directive|define
name|XGE_HAL_RMAC_ERR_RUNT_ACCEPT
value|BIT(2)
define|#
directive|define
name|XGE_HAL_RMAC_ERR_LEN_MISMATCH
value|BIT(3)
define|#
directive|define
name|XGE_HAL_RMAC_ERR_LEN_MISMATCH_ACCEPT
value|BIT(3)
name|u64
name|rmac_cfg_key
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RMAC_CFG_KEY
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,0,16)
define|#
directive|define
name|XGE_HAL_MAX_MAC_ADDRESSES
value|64
define|#
directive|define
name|XGE_HAL_MAC_MC_ALL_MC_ADDR_OFFSET
value|63
define|#
directive|define
name|XGE_HAL_MAX_MAC_ADDRESSES_HERC
value|256
define|#
directive|define
name|XGE_HAL_MAC_MC_ALL_MC_ADDR_OFFSET_HERC
value|255
name|u64
name|rmac_addr_cmd_mem
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RMAC_ADDR_CMD_MEM_WE
value|BIT(7)
define|#
directive|define
name|XGE_HAL_RMAC_ADDR_CMD_MEM_RD
value|0
define|#
directive|define
name|XGE_HAL_RMAC_ADDR_CMD_MEM_STROBE_NEW_CMD
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RMAC_ADDR_CMD_MEM_STROBE_CMD_EXECUTING
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RMAC_ADDR_CMD_MEM_OFFSET
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,26,6)
name|u64
name|rmac_addr_data0_mem
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RMAC_ADDR_DATA0_MEM_ADDR
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,0,48)
define|#
directive|define
name|XGE_HAL_RMAC_ADDR_DATA0_MEM_USER
value|BIT(48)
name|u64
name|rmac_addr_data1_mem
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RMAC_ADDR_DATA1_MEM_MASK
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,0,48)
name|u8
name|unused16
index|[
literal|0x8
index|]
decl_stmt|;
comment|/* 	    u64 rmac_addr_cfg; #define XGE_HAL_RMAC_ADDR_UCASTn_EN(n)     mBIT(0)_n(n) #define XGE_HAL_RMAC_ADDR_MCASTn_EN(n)     mBIT(0)_n(n) #define XGE_HAL_RMAC_ADDR_BCAST_EN         vBIT(0)_48 #define XGE_HAL_RMAC_ADDR_ALL_ADDR_EN      vBIT(0)_49 */
name|u64
name|tmac_ipg_cfg
decl_stmt|;
name|u64
name|rmac_pause_cfg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RMAC_PAUSE_GEN_EN
value|BIT(0)
define|#
directive|define
name|XGE_HAL_RMAC_PAUSE_RCV_EN
value|BIT(1)
define|#
directive|define
name|XGE_HAL_RMAC_PAUSE_HG_PTIME_DEF
value|vBIT(0xFFFF,16,16)
define|#
directive|define
name|XGE_HAL_RMAC_PAUSE_HG_PTIME
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,16,16)
name|u64
name|rmac_red_cfg
decl_stmt|;
name|u64
name|rmac_red_rate_q0q3
decl_stmt|;
name|u64
name|rmac_red_rate_q4q7
decl_stmt|;
name|u64
name|mac_link_util
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MAC_TX_LINK_UTIL
value|vBIT(0xFE,1,7)
define|#
directive|define
name|XGE_HAL_MAC_TX_LINK_UTIL_DISABLE
value|vBIT(0xF, 8,4)
define|#
directive|define
name|XGE_HAL_MAC_TX_LINK_UTIL_VAL
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,8,4)
define|#
directive|define
name|XGE_HAL_MAC_RX_LINK_UTIL
value|vBIT(0xFE,33,7)
define|#
directive|define
name|XGE_HAL_MAC_RX_LINK_UTIL_DISABLE
value|vBIT(0xF,40,4)
define|#
directive|define
name|XGE_HAL_MAC_RX_LINK_UTIL_VAL
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,40,4)
define|#
directive|define
name|XGE_HAL_MAC_LINK_UTIL_DISABLE
value|(XGE_HAL_MAC_TX_LINK_UTIL_DISABLE | \ 	                   XGE_HAL_MAC_RX_LINK_UTIL_DISABLE)
name|u64
name|rmac_invalid_ipg
decl_stmt|;
comment|/* rx traffic steering */
define|#
directive|define
name|XGE_HAL_MAC_RTS_FRM_LEN_SET
parameter_list|(
name|len
parameter_list|)
value|vBIT(len,2,14)
name|u64
name|rts_frm_len_n
index|[
literal|8
index|]
decl_stmt|;
name|u64
name|rts_qos_steering
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MAX_DIX_MAP
value|4
name|u64
name|rts_dix_map_n
index|[
name|XGE_HAL_MAX_DIX_MAP
index|]
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_DIX_MAP_ETYPE
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,0,16)
define|#
directive|define
name|XGE_HAL_RTS_DIX_MAP_SCW
parameter_list|(
name|val
parameter_list|)
value|BIT(val,21)
name|u64
name|rts_q_alternates
decl_stmt|;
name|u64
name|rts_default_q
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_DEFAULT_Q
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,5,3)
name|u64
name|rts_ctrl
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_CTRL_IGNORE_SNAP_OUI
value|BIT(2)
define|#
directive|define
name|XGE_HAL_RTS_CTRL_IGNORE_LLC_CTRL
value|BIT(3)
define|#
directive|define
name|XGE_HAL_RTS_CTRL_ENHANCED_MODE
value|BIT(7)
name|u64
name|rts_pn_cam_ctrl
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_PN_CAM_CTRL_WE
value|BIT(7)
define|#
directive|define
name|XGE_HAL_RTS_PN_CAM_CTRL_STROBE_NEW_CMD
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RTS_PN_CAM_CTRL_STROBE_BEING_EXECUTED
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RTS_PN_CAM_CTRL_OFFSET
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,24,8)
name|u64
name|rts_pn_cam_data
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_PN_CAM_DATA_TCP_SELECT
value|BIT(7)
define|#
directive|define
name|XGE_HAL_RTS_PN_CAM_DATA_PORT
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,8,16)
define|#
directive|define
name|XGE_HAL_RTS_PN_CAM_DATA_SCW
parameter_list|(
name|val
parameter_list|)
value|vBIT(val,24,8)
name|u64
name|rts_ds_mem_ctrl
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_DS_MEM_CTRL_WE
value|BIT(7)
define|#
directive|define
name|XGE_HAL_RTS_DS_MEM_CTRL_STROBE_NEW_CMD
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RTS_DS_MEM_CTRL_STROBE_CMD_BEING_EXECUTED
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RTS_DS_MEM_CTRL_OFFSET
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,26,6)
name|u64
name|rts_ds_mem_data
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_DS_MEM_DATA
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,0,8)
name|u8
name|unused16_1
index|[
literal|0x308
operator|-
literal|0x220
index|]
decl_stmt|;
name|u64
name|rts_vid_mem_ctrl
decl_stmt|;
name|u64
name|rts_vid_mem_data
decl_stmt|;
name|u64
name|rts_p0_p3_map
decl_stmt|;
name|u64
name|rts_p4_p7_map
decl_stmt|;
name|u64
name|rts_p8_p11_map
decl_stmt|;
name|u64
name|rts_p12_p15_map
decl_stmt|;
name|u64
name|rts_mac_cfg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_MAC_SECT0_EN
value|BIT(0)
define|#
directive|define
name|XGE_HAL_RTS_MAC_SECT1_EN
value|BIT(1)
define|#
directive|define
name|XGE_HAL_RTS_MAC_SECT2_EN
value|BIT(2)
define|#
directive|define
name|XGE_HAL_RTS_MAC_SECT3_EN
value|BIT(3)
define|#
directive|define
name|XGE_HAL_RTS_MAC_SECT4_EN
value|BIT(4)
define|#
directive|define
name|XGE_HAL_RTS_MAC_SECT5_EN
value|BIT(5)
define|#
directive|define
name|XGE_HAL_RTS_MAC_SECT6_EN
value|BIT(6)
define|#
directive|define
name|XGE_HAL_RTS_MAC_SECT7_EN
value|BIT(7)
name|u8
name|unused16_2
index|[
literal|0x380
operator|-
literal|0x340
index|]
decl_stmt|;
name|u64
name|rts_rth_cfg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_RTH_EN
value|BIT(3)
define|#
directive|define
name|XGE_HAL_RTS_RTH_BUCKET_SIZE
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,4,4)
define|#
directive|define
name|XGE_HAL_RTS_RTH_ALG_SEL_MS
value|BIT(11)
define|#
directive|define
name|XGE_HAL_RTS_RTH_TCP_IPV4_EN
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RTS_RTH_UDP_IPV4_EN
value|BIT(19)
define|#
directive|define
name|XGE_HAL_RTS_RTH_IPV4_EN
value|BIT(23)
define|#
directive|define
name|XGE_HAL_RTS_RTH_TCP_IPV6_EN
value|BIT(27)
define|#
directive|define
name|XGE_HAL_RTS_RTH_UDP_IPV6_EN
value|BIT(31)
define|#
directive|define
name|XGE_HAL_RTS_RTH_IPV6_EN
value|BIT(35)
define|#
directive|define
name|XGE_HAL_RTS_RTH_TCP_IPV6_EX_EN
value|BIT(39)
define|#
directive|define
name|XGE_HAL_RTS_RTH_UDP_IPV6_EX_EN
value|BIT(43)
define|#
directive|define
name|XGE_HAL_RTS_RTH_IPV6_EX_EN
value|BIT(47)
name|u64
name|rts_rth_map_mem_ctrl
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_RTH_MAP_MEM_CTRL_WE
value|BIT(7)
define|#
directive|define
name|XGE_HAL_RTS_RTH_MAP_MEM_CTRL_STROBE
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RTS_RTH_MAP_MEM_CTRL_OFFSET
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,24,8)
name|u64
name|rts_rth_map_mem_data
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_RTH_MAP_MEM_DATA_ENTRY_EN
value|BIT(3)
define|#
directive|define
name|XGE_HAL_RTS_RTH_MAP_MEM_DATA
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,5,3)
name|u64
name|rts_rth_spdm_mem_ctrl
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_RTH_SPDM_MEM_CTRL_STROBE
value|BIT(15)
define|#
directive|define
name|XGE_HAL_RTS_RTH_SPDM_MEM_CTRL_LINE_SEL
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,21,3)
define|#
directive|define
name|XGE_HAL_RTS_RTH_SPDM_MEM_CTRL_OFFSET
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,24,8)
name|u64
name|rts_rth_spdm_mem_data
decl_stmt|;
name|u64
name|rts_rth_jhash_cfg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTS_RTH_JHASH_GOLDEN
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,0,32)
define|#
directive|define
name|XGE_HAL_RTS_RTH_JHASH_INIT_VAL
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,32,32)
name|u64
name|rts_rth_hash_mask
index|[
literal|5
index|]
decl_stmt|;
comment|/* rth mask's 0...4 */
name|u64
name|rts_rth_hash_mask_5
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTH_HASH_MASK_5
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,0,32)
name|u64
name|rts_rth_status
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RTH_STATUS_SPDM_USE_L4
value|BIT(3)
name|u8
name|unused17
index|[
literal|0x400
operator|-
literal|0x3E8
index|]
decl_stmt|;
name|u64
name|rmac_red_fine_q0q3
decl_stmt|;
name|u64
name|rmac_red_fine_q4q7
decl_stmt|;
name|u64
name|rmac_pthresh_cross
decl_stmt|;
name|u64
name|rmac_rthresh_cross
decl_stmt|;
name|u64
name|rmac_pnum_range
index|[
literal|32
index|]
decl_stmt|;
name|u64
name|rmac_mp_crc_0
decl_stmt|;
name|u64
name|rmac_mp_mask_a_0
decl_stmt|;
name|u64
name|rmac_mp_mask_b_0
decl_stmt|;
name|u64
name|rmac_mp_crc_1
decl_stmt|;
name|u64
name|rmac_mp_mask_a_1
decl_stmt|;
name|u64
name|rmac_mp_mask_b_1
decl_stmt|;
name|u64
name|rmac_mp_crc_2
decl_stmt|;
name|u64
name|rmac_mp_mask_a_2
decl_stmt|;
name|u64
name|rmac_mp_mask_b_2
decl_stmt|;
name|u64
name|rmac_mp_crc_3
decl_stmt|;
name|u64
name|rmac_mp_mask_a_3
decl_stmt|;
name|u64
name|rmac_mp_mask_b_3
decl_stmt|;
name|u64
name|rmac_mp_crc_4
decl_stmt|;
name|u64
name|rmac_mp_mask_a_4
decl_stmt|;
name|u64
name|rmac_mp_mask_b_4
decl_stmt|;
name|u64
name|rmac_mp_crc_5
decl_stmt|;
name|u64
name|rmac_mp_mask_a_5
decl_stmt|;
name|u64
name|rmac_mp_mask_b_5
decl_stmt|;
name|u64
name|rmac_mp_crc_6
decl_stmt|;
name|u64
name|rmac_mp_mask_a_6
decl_stmt|;
name|u64
name|rmac_mp_mask_b_6
decl_stmt|;
name|u64
name|rmac_mp_crc_7
decl_stmt|;
name|u64
name|rmac_mp_mask_a_7
decl_stmt|;
name|u64
name|rmac_mp_mask_b_7
decl_stmt|;
name|u64
name|mac_ctrl
decl_stmt|;
name|u64
name|activity_control
decl_stmt|;
name|u8
name|unused17_2
index|[
literal|0x700
operator|-
literal|0x5F0
index|]
decl_stmt|;
name|u64
name|mac_debug_ctrl
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MAC_DBG_ACTIVITY_VALUE
value|0x411040400000000ULL
name|u8
name|unused18
index|[
literal|0x2800
operator|-
literal|0x2708
index|]
decl_stmt|;
comment|/* memory controller registers */
name|u64
name|mc_int_status
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MC_INT_STATUS_MC_INT
value|BIT(0)
name|u64
name|mc_int_mask
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MC_INT_MASK_MC_INT
value|BIT(0)
name|u64
name|mc_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_ITQ_ECC_SG_ERR_L
value|BIT(2)
comment|/* non-Xena */
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_ITQ_ECC_SG_ERR_U
value|BIT(3)
comment|/* non-Xena */
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_RLD_ECC_SG_ERR_L
value|BIT(4)
comment|/* non-Xena */
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_RLD_ECC_SG_ERR_U
value|BIT(5)
comment|/* non-Xena */
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_ETQ_ECC_SG_ERR_L
value|BIT(6)
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_ETQ_ECC_SG_ERR_U
value|BIT(7)
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_ITQ_ECC_DB_ERR_L
value|BIT(10)
comment|/* non-Xena */
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_ITQ_ECC_DB_ERR_U
value|BIT(11)
comment|/* non-Xena */
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_RLD_ECC_DB_ERR_L
value|BIT(12)
comment|/* non-Xena */
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_RLD_ECC_DB_ERR_U
value|BIT(13)
comment|/* non-Xena */
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_ETQ_ECC_DB_ERR_L
value|BIT(14)
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_ETQ_ECC_DB_ERR_U
value|BIT(15)
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_MIRI_ECC_SG_ERR_0
value|BIT(17)
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_MIRI_ECC_DB_ERR_0
value|BIT(18)
comment|/* Xena: reset */
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_MIRI_ECC_SG_ERR_1
value|BIT(19)
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_MIRI_ECC_DB_ERR_1
value|BIT(20)
comment|/* Xena: reset */
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_MIRI_CRI_ERR_0
value|BIT(22)
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_MIRI_CRI_ERR_1
value|BIT(23)
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_SM_ERR
value|BIT(31)
define|#
directive|define
name|XGE_HAL_MC_ERR_REG_PL_LOCK_N
value|BIT(39)
name|u64
name|mc_err_mask
decl_stmt|;
name|u64
name|mc_err_alarm
decl_stmt|;
name|u8
name|unused19
index|[
literal|0x100
operator|-
literal|0x28
index|]
decl_stmt|;
comment|/* MC configuration */
name|u64
name|rx_queue_cfg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RX_QUEUE_CFG_Q0_SZ
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,0,8)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_CFG_Q1_SZ
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,8,8)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_CFG_Q2_SZ
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,16,8)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_CFG_Q3_SZ
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,24,8)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_CFG_Q4_SZ
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,32,8)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_CFG_Q5_SZ
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,40,8)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_CFG_Q6_SZ
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,48,8)
define|#
directive|define
name|XGE_HAL_RX_QUEUE_CFG_Q7_SZ
parameter_list|(
name|n
parameter_list|)
value|vBIT(n,56,8)
name|u64
name|mc_rldram_mrs
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MC_RLDRAM_QUEUE_SIZE_ENABLE
value|BIT(39)
define|#
directive|define
name|XGE_HAL_MC_RLDRAM_MRS_ENABLE
value|BIT(47)
name|u64
name|mc_rldram_interleave
decl_stmt|;
name|u64
name|mc_pause_thresh_q0q3
decl_stmt|;
name|u64
name|mc_pause_thresh_q4q7
decl_stmt|;
name|u64
name|mc_red_thresh_q
index|[
literal|8
index|]
decl_stmt|;
name|u8
name|unused20
index|[
literal|0x200
operator|-
literal|0x168
index|]
decl_stmt|;
name|u64
name|mc_rldram_ref_per
decl_stmt|;
name|u8
name|unused21
index|[
literal|0x220
operator|-
literal|0x208
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_ctrl
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MC_RLDRAM_TEST_MODE
value|BIT(47)
define|#
directive|define
name|XGE_HAL_MC_RLDRAM_TEST_WRITE
value|BIT(7)
define|#
directive|define
name|XGE_HAL_MC_RLDRAM_TEST_GO
value|BIT(15)
define|#
directive|define
name|XGE_HAL_MC_RLDRAM_TEST_DONE
value|BIT(23)
define|#
directive|define
name|XGE_HAL_MC_RLDRAM_TEST_PASS
value|BIT(31)
name|u8
name|unused22
index|[
literal|0x240
operator|-
literal|0x228
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_add
decl_stmt|;
name|u8
name|unused23
index|[
literal|0x260
operator|-
literal|0x248
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_d0
decl_stmt|;
name|u8
name|unused24
index|[
literal|0x280
operator|-
literal|0x268
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_d1
decl_stmt|;
name|u8
name|unused25
index|[
literal|0x300
operator|-
literal|0x288
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_d2
decl_stmt|;
name|u8
name|unused26_1
index|[
literal|0x2C00
operator|-
literal|0x2B08
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_read_d0
decl_stmt|;
name|u8
name|unused26_2
index|[
literal|0x20
operator|-
literal|0x8
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_read_d1
decl_stmt|;
name|u8
name|unused26_3
index|[
literal|0x40
operator|-
literal|0x28
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_read_d2
decl_stmt|;
name|u8
name|unused26_4
index|[
literal|0x60
operator|-
literal|0x48
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_add_bkg
decl_stmt|;
name|u8
name|unused26_5
index|[
literal|0x80
operator|-
literal|0x68
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_d0_bkg
decl_stmt|;
name|u8
name|unused26_6
index|[
literal|0xD00
operator|-
literal|0xC88
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_d1_bkg
decl_stmt|;
name|u8
name|unused26_7
index|[
literal|0x20
operator|-
literal|0x8
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_d2_bkg
decl_stmt|;
name|u8
name|unused26_8
index|[
literal|0x40
operator|-
literal|0x28
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_read_d0_bkg
decl_stmt|;
name|u8
name|unused26_9
index|[
literal|0x60
operator|-
literal|0x48
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_read_d1_bkg
decl_stmt|;
name|u8
name|unused26_10
index|[
literal|0x80
operator|-
literal|0x68
index|]
decl_stmt|;
name|u64
name|mc_rldram_test_read_d2_bkg
decl_stmt|;
name|u8
name|unused26_11
index|[
literal|0xE00
operator|-
literal|0xD88
index|]
decl_stmt|;
name|u64
name|mc_rldram_generation
decl_stmt|;
name|u8
name|unused26_12
index|[
literal|0x20
operator|-
literal|0x8
index|]
decl_stmt|;
name|u64
name|mc_driver
decl_stmt|;
name|u8
name|unused26_13
index|[
literal|0x40
operator|-
literal|0x28
index|]
decl_stmt|;
name|u64
name|mc_rldram_ref_per_herc
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MC_RLDRAM_SET_REF_PERIOD
parameter_list|(
name|n
parameter_list|)
value|vBIT(n, 0, 16)
name|u8
name|unused26_14
index|[
literal|0x660
operator|-
literal|0x648
index|]
decl_stmt|;
name|u64
name|mc_rldram_mrs_herc
decl_stmt|;
define|#
directive|define
name|XGE_HAL_MC_RLDRAM_MRS
parameter_list|(
name|n
parameter_list|)
value|vBIT(n, 14, 17)
name|u8
name|unused26_15
index|[
literal|0x700
operator|-
literal|0x668
index|]
decl_stmt|;
name|u64
name|mc_debug_ctrl
decl_stmt|;
name|u8
name|unused27
index|[
literal|0x3000
operator|-
literal|0x2f08
index|]
decl_stmt|;
comment|/* XGXG */
comment|/* XGXS control registers */
name|u64
name|xgxs_int_status
decl_stmt|;
define|#
directive|define
name|XGE_HAL_XGXS_INT_STATUS_TXGXS
value|BIT(0)
define|#
directive|define
name|XGE_HAL_XGXS_INT_STATUS_RXGXS
value|BIT(1)
name|u64
name|xgxs_int_mask
decl_stmt|;
define|#
directive|define
name|XGE_HAL_XGXS_INT_MASK_TXGXS
value|BIT(0)
define|#
directive|define
name|XGE_HAL_XGXS_INT_MASK_RXGXS
value|BIT(1)
name|u64
name|xgxs_txgxs_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_TXGXS_ECC_SG_ERR
value|BIT(7)
define|#
directive|define
name|XGE_HAL_TXGXS_ECC_DB_ERR
value|BIT(15)
define|#
directive|define
name|XGE_HAL_TXGXS_ESTORE_UFLOW
value|BIT(31)
define|#
directive|define
name|XGE_HAL_TXGXS_TX_SM_ERR
value|BIT(39)
name|u64
name|xgxs_txgxs_err_mask
decl_stmt|;
name|u64
name|xgxs_txgxs_err_alarm
decl_stmt|;
name|u64
name|xgxs_rxgxs_err_reg
decl_stmt|;
define|#
directive|define
name|XGE_HAL_RXGXS_ESTORE_OFLOW
value|BIT(7)
define|#
directive|define
name|XGE_HAL_RXGXS_RX_SM_ERR
value|BIT(39)
name|u64
name|xgxs_rxgxs_err_mask
decl_stmt|;
name|u64
name|xgxs_rxgxs_err_alarm
decl_stmt|;
name|u64
name|spi_err_reg
decl_stmt|;
name|u64
name|spi_err_mask
decl_stmt|;
name|u64
name|spi_err_alarm
decl_stmt|;
name|u8
name|unused28
index|[
literal|0x100
operator|-
literal|0x58
index|]
decl_stmt|;
name|u64
name|xgxs_cfg
decl_stmt|;
name|u64
name|xgxs_status
decl_stmt|;
name|u64
name|xgxs_cfg_key
decl_stmt|;
name|u64
name|xgxs_efifo_cfg
decl_stmt|;
comment|/* CHANGED */
name|u64
name|rxgxs_ber_0
decl_stmt|;
comment|/* CHANGED */
name|u64
name|rxgxs_ber_1
decl_stmt|;
comment|/* CHANGED */
name|u64
name|spi_control
decl_stmt|;
name|u64
name|spi_data
decl_stmt|;
name|u64
name|spi_write_protect
decl_stmt|;
name|u8
name|unused29
index|[
literal|0x80
operator|-
literal|0x48
index|]
decl_stmt|;
name|u64
name|xgxs_cfg_1
decl_stmt|;
block|}
name|xge_hal_pci_bar0_t
typedef|;
end_typedef

begin_comment
comment|/* Using this strcture to calculate offsets */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|xge_hal_pci_config_le_t
block|{
name|u16
name|vendor_id
decl_stmt|;
comment|// 0x00
name|u16
name|device_id
decl_stmt|;
comment|// 0x02
name|u16
name|command
decl_stmt|;
comment|// 0x04
name|u16
name|status
decl_stmt|;
comment|// 0x06
name|u8
name|revision
decl_stmt|;
comment|// 0x08
name|u8
name|pciClass
index|[
literal|3
index|]
decl_stmt|;
comment|// 0x09
name|u8
name|cache_line_size
decl_stmt|;
comment|// 0x0c
name|u8
name|latency_timer
decl_stmt|;
comment|// 0x0d
name|u8
name|header_type
decl_stmt|;
comment|// 0x0e
name|u8
name|bist
decl_stmt|;
comment|// 0x0f
name|u32
name|base_addr0_lo
decl_stmt|;
comment|// 0x10
name|u32
name|base_addr0_hi
decl_stmt|;
comment|// 0x14
name|u32
name|base_addr1_lo
decl_stmt|;
comment|// 0x18
name|u32
name|base_addr1_hi
decl_stmt|;
comment|// 0x1C
name|u32
name|not_Implemented1
decl_stmt|;
comment|// 0x20
name|u32
name|not_Implemented2
decl_stmt|;
comment|// 0x24
name|u32
name|cardbus_cis_pointer
decl_stmt|;
comment|// 0x28
name|u16
name|subsystem_vendor_id
decl_stmt|;
comment|// 0x2c
name|u16
name|subsystem_id
decl_stmt|;
comment|// 0x2e
name|u32
name|rom_base
decl_stmt|;
comment|// 0x30
name|u8
name|capabilities_pointer
decl_stmt|;
comment|// 0x34
name|u8
name|rsvd_35
index|[
literal|3
index|]
decl_stmt|;
comment|// 0x35
name|u32
name|rsvd_38
decl_stmt|;
comment|// 0x38
name|u8
name|interrupt_line
decl_stmt|;
comment|// 0x3c
name|u8
name|interrupt_pin
decl_stmt|;
comment|// 0x3d
name|u8
name|min_grant
decl_stmt|;
comment|// 0x3e
name|u8
name|max_latency
decl_stmt|;
comment|// 0x3f
name|u8
name|msi_cap_id
decl_stmt|;
comment|// 0x40
name|u8
name|msi_next_ptr
decl_stmt|;
comment|// 0x41
name|u16
name|msi_control
decl_stmt|;
comment|// 0x42
name|u32
name|msi_lower_address
decl_stmt|;
comment|// 0x44
name|u32
name|msi_higher_address
decl_stmt|;
comment|// 0x48
name|u16
name|msi_data
decl_stmt|;
comment|// 0x4c
name|u16
name|msi_unused
decl_stmt|;
comment|// 0x4e
name|u8
name|vpd_cap_id
decl_stmt|;
comment|// 0x50
name|u8
name|vpd_next_cap
decl_stmt|;
comment|// 0x51
name|u16
name|vpd_addr
decl_stmt|;
comment|// 0x52
name|u32
name|vpd_data
decl_stmt|;
comment|// 0x54
name|u8
name|rsvd_b0
index|[
literal|8
index|]
decl_stmt|;
comment|// 0x58
name|u8
name|pcix_cap
decl_stmt|;
comment|// 0x60
name|u8
name|pcix_next_cap
decl_stmt|;
comment|// 0x61
name|u16
name|pcix_command
decl_stmt|;
comment|// 0x62
name|u32
name|pcix_status
decl_stmt|;
comment|// 0x64
name|u8
name|rsvd_b1
index|[
name|XGE_HAL_PCI_XFRAME_CONFIG_SPACE_SIZE
operator|-
literal|0x68
index|]
decl_stmt|;
block|}
name|xge_hal_pci_config_le_t
typedef|;
end_typedef

begin_comment
comment|// 0x100
end_comment

begin_typedef
typedef|typedef
struct|struct
name|xge_hal_pci_config_t
block|{
ifdef|#
directive|ifdef
name|XGE_OS_HOST_BIG_ENDIAN
name|u16
name|device_id
decl_stmt|;
comment|// 0x02
name|u16
name|vendor_id
decl_stmt|;
comment|// 0x00
name|u16
name|status
decl_stmt|;
comment|// 0x06
name|u16
name|command
decl_stmt|;
comment|// 0x04
name|u8
name|pciClass
index|[
literal|3
index|]
decl_stmt|;
comment|// 0x09
name|u8
name|revision
decl_stmt|;
comment|// 0x08
name|u8
name|bist
decl_stmt|;
comment|// 0x0f
name|u8
name|header_type
decl_stmt|;
comment|// 0x0e
name|u8
name|latency_timer
decl_stmt|;
comment|// 0x0d
name|u8
name|cache_line_size
decl_stmt|;
comment|// 0x0c
name|u32
name|base_addr0_lo
decl_stmt|;
comment|// 0x10
name|u32
name|base_addr0_hi
decl_stmt|;
comment|// 0x14
name|u32
name|base_addr1_lo
decl_stmt|;
comment|// 0x18
name|u32
name|base_addr1_hi
decl_stmt|;
comment|// 0x1C
name|u32
name|not_Implemented1
decl_stmt|;
comment|// 0x20
name|u32
name|not_Implemented2
decl_stmt|;
comment|// 0x24
name|u32
name|cardbus_cis_pointer
decl_stmt|;
comment|// 0x28
name|u16
name|subsystem_id
decl_stmt|;
comment|// 0x2e
name|u16
name|subsystem_vendor_id
decl_stmt|;
comment|// 0x2c
name|u32
name|rom_base
decl_stmt|;
comment|// 0x30
name|u8
name|rsvd_35
index|[
literal|3
index|]
decl_stmt|;
comment|// 0x35
name|u8
name|capabilities_pointer
decl_stmt|;
comment|// 0x34
name|u32
name|rsvd_38
decl_stmt|;
comment|// 0x38
name|u8
name|max_latency
decl_stmt|;
comment|// 0x3f
name|u8
name|min_grant
decl_stmt|;
comment|// 0x3e
name|u8
name|interrupt_pin
decl_stmt|;
comment|// 0x3d
name|u8
name|interrupt_line
decl_stmt|;
comment|// 0x3c
name|u16
name|msi_control
decl_stmt|;
comment|// 0x42
name|u8
name|msi_next_ptr
decl_stmt|;
comment|// 0x41
name|u8
name|msi_cap_id
decl_stmt|;
comment|// 0x40
name|u32
name|msi_lower_address
decl_stmt|;
comment|// 0x44
name|u32
name|msi_higher_address
decl_stmt|;
comment|// 0x48
name|u16
name|msi_unused
decl_stmt|;
comment|// 0x4e
name|u16
name|msi_data
decl_stmt|;
comment|// 0x4c
name|u16
name|vpd_addr
decl_stmt|;
comment|// 0x52
name|u8
name|vpd_next_cap
decl_stmt|;
comment|// 0x51
name|u8
name|vpd_cap_id
decl_stmt|;
comment|// 0x50
name|u32
name|vpd_data
decl_stmt|;
comment|// 0x54
name|u8
name|rsvd_b0
index|[
literal|8
index|]
decl_stmt|;
comment|// 0x58
name|u16
name|pcix_command
decl_stmt|;
comment|// 0x62
name|u8
name|pcix_next_cap
decl_stmt|;
comment|// 0x61
name|u8
name|pcix_cap
decl_stmt|;
comment|// 0x60
name|u32
name|pcix_status
decl_stmt|;
comment|// 0x64
else|#
directive|else
name|u16
name|vendor_id
decl_stmt|;
comment|// 0x00
name|u16
name|device_id
decl_stmt|;
comment|// 0x02
name|u16
name|command
decl_stmt|;
comment|// 0x04
name|u16
name|status
decl_stmt|;
comment|// 0x06
name|u8
name|revision
decl_stmt|;
comment|// 0x08
name|u8
name|pciClass
index|[
literal|3
index|]
decl_stmt|;
comment|// 0x09
name|u8
name|cache_line_size
decl_stmt|;
comment|// 0x0c
name|u8
name|latency_timer
decl_stmt|;
comment|// 0x0d
name|u8
name|header_type
decl_stmt|;
comment|// 0x0e
name|u8
name|bist
decl_stmt|;
comment|// 0x0f
name|u32
name|base_addr0_lo
decl_stmt|;
comment|// 0x10
name|u32
name|base_addr0_hi
decl_stmt|;
comment|// 0x14
name|u32
name|base_addr1_lo
decl_stmt|;
comment|// 0x18
name|u32
name|base_addr1_hi
decl_stmt|;
comment|// 0x1C
name|u32
name|not_Implemented1
decl_stmt|;
comment|// 0x20
name|u32
name|not_Implemented2
decl_stmt|;
comment|// 0x24
name|u32
name|cardbus_cis_pointer
decl_stmt|;
comment|// 0x28
name|u16
name|subsystem_vendor_id
decl_stmt|;
comment|// 0x2c
name|u16
name|subsystem_id
decl_stmt|;
comment|// 0x2e
name|u32
name|rom_base
decl_stmt|;
comment|// 0x30
name|u8
name|capabilities_pointer
decl_stmt|;
comment|// 0x34
name|u8
name|rsvd_35
index|[
literal|3
index|]
decl_stmt|;
comment|// 0x35
name|u32
name|rsvd_38
decl_stmt|;
comment|// 0x38
name|u8
name|interrupt_line
decl_stmt|;
comment|// 0x3c
name|u8
name|interrupt_pin
decl_stmt|;
comment|// 0x3d
name|u8
name|min_grant
decl_stmt|;
comment|// 0x3e
name|u8
name|max_latency
decl_stmt|;
comment|// 0x3f
name|u8
name|msi_cap_id
decl_stmt|;
comment|// 0x40
name|u8
name|msi_next_ptr
decl_stmt|;
comment|// 0x41
name|u16
name|msi_control
decl_stmt|;
comment|// 0x42
name|u32
name|msi_lower_address
decl_stmt|;
comment|// 0x44
name|u32
name|msi_higher_address
decl_stmt|;
comment|// 0x48
name|u16
name|msi_data
decl_stmt|;
comment|// 0x4c
name|u16
name|msi_unused
decl_stmt|;
comment|// 0x4e
name|u8
name|vpd_cap_id
decl_stmt|;
comment|// 0x50
name|u8
name|vpd_next_cap
decl_stmt|;
comment|// 0x51
name|u16
name|vpd_addr
decl_stmt|;
comment|// 0x52
name|u32
name|vpd_data
decl_stmt|;
comment|// 0x54
name|u8
name|rsvd_b0
index|[
literal|8
index|]
decl_stmt|;
comment|// 0x58
name|u8
name|pcix_cap
decl_stmt|;
comment|// 0x60
name|u8
name|pcix_next_cap
decl_stmt|;
comment|// 0x61
name|u16
name|pcix_command
decl_stmt|;
comment|// 0x62
name|u32
name|pcix_status
decl_stmt|;
comment|// 0x64
endif|#
directive|endif
name|u8
name|rsvd_b1
index|[
name|XGE_HAL_PCI_XFRAME_CONFIG_SPACE_SIZE
operator|-
literal|0x68
index|]
decl_stmt|;
block|}
name|xge_hal_pci_config_t
typedef|;
end_typedef

begin_comment
comment|// 0x100
end_comment

begin_define
define|#
directive|define
name|XGE_HAL_REG_SPACE
value|sizeof(xge_hal_pci_bar0_t)
end_define

begin_define
define|#
directive|define
name|XGE_HAL_EEPROM_SIZE
value|(0x01<< 11)
end_define

begin_macro
name|__EXTERN_END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* XGE_HAL_REGS_H */
end_comment

end_unit

