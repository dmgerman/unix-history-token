begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2004, 2005 Topspin Communications.  All rights reserved.  * Copyright (c) 2005, 2006, 2007, 2008, 2014 Mellanox Technologies. All rights reserved.  * Copyright (c) 2006, 2007 Cisco Systems.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MLX4_FW_H
end_ifndef

begin_define
define|#
directive|define
name|MLX4_FW_H
end_define

begin_include
include|#
directive|include
file|"mlx4.h"
end_include

begin_include
include|#
directive|include
file|"icm.h"
end_include

begin_struct
struct|struct
name|mlx4_mod_stat_cfg
block|{
name|u8
name|log_pg_sz
decl_stmt|;
name|u8
name|log_pg_sz_m
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_dev_cap
block|{
name|int
name|max_srq_sz
decl_stmt|;
name|int
name|max_qp_sz
decl_stmt|;
name|int
name|reserved_qps
decl_stmt|;
name|int
name|max_qps
decl_stmt|;
name|int
name|reserved_srqs
decl_stmt|;
name|int
name|max_srqs
decl_stmt|;
name|int
name|max_cq_sz
decl_stmt|;
name|int
name|reserved_cqs
decl_stmt|;
name|int
name|max_cqs
decl_stmt|;
name|int
name|max_mpts
decl_stmt|;
name|int
name|reserved_eqs
decl_stmt|;
name|int
name|max_eqs
decl_stmt|;
name|int
name|num_sys_eqs
decl_stmt|;
name|int
name|reserved_mtts
decl_stmt|;
name|int
name|max_mrw_sz
decl_stmt|;
name|int
name|reserved_mrws
decl_stmt|;
name|int
name|max_mtt_seg
decl_stmt|;
name|int
name|max_requester_per_qp
decl_stmt|;
name|int
name|max_responder_per_qp
decl_stmt|;
name|int
name|max_rdma_global
decl_stmt|;
name|int
name|local_ca_ack_delay
decl_stmt|;
name|int
name|num_ports
decl_stmt|;
name|u32
name|max_msg_sz
decl_stmt|;
name|int
name|ib_mtu
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|max_port_width
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|max_vl
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|max_gids
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|max_pkeys
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u64
name|def_mac
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u16
name|eth_mtu
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|trans_type
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|vendor_oui
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u16
name|wavelength
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u64
name|trans_code
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u16
name|stat_rate_support
decl_stmt|;
name|int
name|fs_log_max_ucast_qp_range_size
decl_stmt|;
name|int
name|fs_max_num_qp_per_entry
decl_stmt|;
name|u64
name|flags
decl_stmt|;
name|u64
name|flags2
decl_stmt|;
name|int
name|reserved_uars
decl_stmt|;
name|int
name|uar_size
decl_stmt|;
name|int
name|min_page_sz
decl_stmt|;
name|int
name|bf_reg_size
decl_stmt|;
name|int
name|bf_regs_per_page
decl_stmt|;
name|int
name|max_sq_sg
decl_stmt|;
name|int
name|max_sq_desc_sz
decl_stmt|;
name|int
name|max_rq_sg
decl_stmt|;
name|int
name|max_rq_desc_sz
decl_stmt|;
name|int
name|max_qp_per_mcg
decl_stmt|;
name|int
name|reserved_mgms
decl_stmt|;
name|int
name|max_mcgs
decl_stmt|;
name|int
name|reserved_pds
decl_stmt|;
name|int
name|max_pds
decl_stmt|;
name|int
name|reserved_xrcds
decl_stmt|;
name|int
name|max_xrcds
decl_stmt|;
name|int
name|qpc_entry_sz
decl_stmt|;
name|int
name|rdmarc_entry_sz
decl_stmt|;
name|int
name|altc_entry_sz
decl_stmt|;
name|int
name|aux_entry_sz
decl_stmt|;
name|int
name|srq_entry_sz
decl_stmt|;
name|int
name|cqc_entry_sz
decl_stmt|;
name|int
name|eqc_entry_sz
decl_stmt|;
name|int
name|dmpt_entry_sz
decl_stmt|;
name|int
name|cmpt_entry_sz
decl_stmt|;
name|int
name|mtt_entry_sz
decl_stmt|;
name|int
name|resize_srq
decl_stmt|;
name|u32
name|bmme_flags
decl_stmt|;
name|u32
name|reserved_lkey
decl_stmt|;
name|u64
name|max_icm_sz
decl_stmt|;
name|int
name|max_gso_sz
decl_stmt|;
name|int
name|max_rss_tbl_sz
decl_stmt|;
name|u8
name|supported_port_types
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u8
name|suggested_type
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u8
name|default_sense
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u8
name|log_max_macs
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u8
name|log_max_vlans
index|[
name|MLX4_MAX_PORTS
operator|+
literal|1
index|]
decl_stmt|;
name|u32
name|max_basic_counters
decl_stmt|;
name|u32
name|sync_qp
decl_stmt|;
name|u8
name|timestamp_support
decl_stmt|;
name|u32
name|max_extended_counters
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_func_cap
block|{
name|u8
name|num_ports
decl_stmt|;
name|u8
name|flags
decl_stmt|;
name|u32
name|pf_context_behaviour
decl_stmt|;
name|int
name|qp_quota
decl_stmt|;
name|int
name|cq_quota
decl_stmt|;
name|int
name|srq_quota
decl_stmt|;
name|int
name|mpt_quota
decl_stmt|;
name|int
name|mtt_quota
decl_stmt|;
name|int
name|max_eq
decl_stmt|;
name|int
name|reserved_eq
decl_stmt|;
name|int
name|mcg_quota
decl_stmt|;
name|u32
name|qp0_tunnel_qpn
decl_stmt|;
name|u32
name|qp0_proxy_qpn
decl_stmt|;
name|u32
name|qp1_tunnel_qpn
decl_stmt|;
name|u32
name|qp1_proxy_qpn
decl_stmt|;
name|u8
name|physical_port
decl_stmt|;
name|u8
name|port_flags
decl_stmt|;
name|u8
name|def_counter_index
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_func
block|{
name|int
name|bus
decl_stmt|;
name|int
name|device
decl_stmt|;
name|int
name|function
decl_stmt|;
name|int
name|physical_function
decl_stmt|;
name|int
name|rsvd_eqs
decl_stmt|;
name|int
name|max_eq
decl_stmt|;
name|int
name|rsvd_uars
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_adapter
block|{
name|u16
name|vsd_vendor_id
decl_stmt|;
name|char
name|board_id
index|[
name|MLX4_BOARD_ID_LEN
index|]
decl_stmt|;
name|char
name|vsd
index|[
name|MLX4_VSD_LEN
index|]
decl_stmt|;
name|u8
name|inta_pin
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_init_hca_param
block|{
name|u64
name|qpc_base
decl_stmt|;
name|u64
name|rdmarc_base
decl_stmt|;
name|u64
name|auxc_base
decl_stmt|;
name|u64
name|altc_base
decl_stmt|;
name|u64
name|srqc_base
decl_stmt|;
name|u64
name|cqc_base
decl_stmt|;
name|u64
name|eqc_base
decl_stmt|;
name|u64
name|mc_base
decl_stmt|;
name|u64
name|dmpt_base
decl_stmt|;
name|u64
name|cmpt_base
decl_stmt|;
name|u64
name|mtt_base
decl_stmt|;
name|u64
name|global_caps
decl_stmt|;
name|u16
name|log_mc_entry_sz
decl_stmt|;
name|u16
name|log_mc_hash_sz
decl_stmt|;
name|u16
name|hca_core_clock
decl_stmt|;
name|u8
name|log_num_qps
decl_stmt|;
name|u8
name|log_num_srqs
decl_stmt|;
name|u8
name|log_num_cqs
decl_stmt|;
name|u8
name|log_num_eqs
decl_stmt|;
name|u16
name|num_sys_eqs
decl_stmt|;
name|u8
name|log_rd_per_qp
decl_stmt|;
name|u8
name|log_mc_table_sz
decl_stmt|;
name|u8
name|log_mpt_sz
decl_stmt|;
name|u8
name|log_uar_sz
decl_stmt|;
name|u8
name|uar_page_sz
decl_stmt|;
comment|/* log pg sz in 4k chunks */
name|u8
name|mw_enable
decl_stmt|;
comment|/* Enable memory windows */
name|u8
name|fs_hash_enable_bits
decl_stmt|;
name|u8
name|steering_mode
decl_stmt|;
comment|/* for QUERY_HCA */
name|u64
name|dev_cap_enabled
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_init_ib_param
block|{
name|int
name|port_width
decl_stmt|;
name|int
name|vl_cap
decl_stmt|;
name|int
name|mtu_cap
decl_stmt|;
name|u16
name|gid_cap
decl_stmt|;
name|u16
name|pkey_cap
decl_stmt|;
name|int
name|set_guid0
decl_stmt|;
name|u64
name|guid0
decl_stmt|;
name|int
name|set_node_guid
decl_stmt|;
name|u64
name|node_guid
decl_stmt|;
name|int
name|set_si_guid
decl_stmt|;
name|u64
name|si_guid
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_set_ib_param
block|{
name|int
name|set_si_guid
decl_stmt|;
name|int
name|reset_qkey_viol
decl_stmt|;
name|u64
name|si_guid
decl_stmt|;
name|u32
name|cap_mask
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|mlx4_QUERY_DEV_CAP
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_dev_cap
modifier|*
name|dev_cap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_QUERY_FUNC_CAP
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|gen_or_port
parameter_list|,
name|struct
name|mlx4_func_cap
modifier|*
name|func_cap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_QUERY_FUNC_CAP_wrapper
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|slave
parameter_list|,
name|struct
name|mlx4_vhcr
modifier|*
name|vhcr
parameter_list|,
name|struct
name|mlx4_cmd_mailbox
modifier|*
name|inbox
parameter_list|,
name|struct
name|mlx4_cmd_mailbox
modifier|*
name|outbox
parameter_list|,
name|struct
name|mlx4_cmd_info
modifier|*
name|cmd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_MAP_FA
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_icm
modifier|*
name|icm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_UNMAP_FA
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_RUN_FW
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_QUERY_FW
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_QUERY_ADAPTER
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_INIT_HCA
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_init_hca_param
modifier|*
name|param
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_QUERY_HCA
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_init_hca_param
modifier|*
name|param
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_CLOSE_HCA
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|int
name|panic
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_map_cmd
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u16
name|op
parameter_list|,
name|struct
name|mlx4_icm
modifier|*
name|icm
parameter_list|,
name|u64
name|virt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_SET_ICM_SIZE
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|u64
name|icm_size
parameter_list|,
name|u64
modifier|*
name|aux_pages
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_NOP
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_MOD_STAT_CFG
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_mod_stat_cfg
modifier|*
name|cfg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx4_QUERY_FUNC
parameter_list|(
name|struct
name|mlx4_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx4_func
modifier|*
name|func
parameter_list|,
name|int
name|slave
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx4_opreq_action
parameter_list|(
name|struct
name|work_struct
modifier|*
name|work
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* MLX4_FW_H */
end_comment

end_unit

