begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1998-2002 Katsushi Kobayashi and Hidetoshi Shimokawa  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the acknowledgement as bellow:  *  *    This product includes software developed by K. Kobayashi and H. Shimokawa  *  * 4. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  *   * $FreeBSD$  *  */
end_comment

begin_define
define|#
directive|define
name|CSRKEY_MVID
value|0x3
end_define

begin_define
define|#
directive|define
name|CSRKEY_NCAP
value|0xc
end_define

begin_define
define|#
directive|define
name|CSRKEY_NUNQ
value|0x8d
end_define

begin_define
define|#
directive|define
name|CSRKEY_NPWR
value|0x30
end_define

begin_define
define|#
directive|define
name|CSRKEY_SPEC
value|0x12
end_define

begin_define
define|#
directive|define
name|CSRVAL_1394TA
value|0x00a02d
end_define

begin_define
define|#
directive|define
name|CSRVAL_ANSIT10
value|0x00609e
end_define

begin_define
define|#
directive|define
name|CSRKEY_VER
value|0x13
end_define

begin_define
define|#
directive|define
name|CSR_PROTAVC
value|0x010001
end_define

begin_define
define|#
directive|define
name|CSR_PROTCAL
value|0x010002
end_define

begin_define
define|#
directive|define
name|CSR_PROTEHS
value|0x010004
end_define

begin_define
define|#
directive|define
name|CSR_PROTHAVI
value|0x010008
end_define

begin_define
define|#
directive|define
name|CSR_PROTCAM104
value|0x000100
end_define

begin_define
define|#
directive|define
name|CSR_PROTCAM120
value|0x000101
end_define

begin_define
define|#
directive|define
name|CSR_PROTCAM130
value|0x000102
end_define

begin_define
define|#
directive|define
name|CSR_PROTDPP
value|0x0a6be2
end_define

begin_define
define|#
directive|define
name|CSR_PROTIICP
value|0x4b661f
end_define

begin_define
define|#
directive|define
name|CSRVAL_T10SBP2
value|0x010483
end_define

begin_struct
struct|struct
name|csrreg
block|{
name|u_int32_t
name|val
range|:
literal|24
decl_stmt|,
name|key
range|:
literal|8
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|csrhdr
block|{
name|u_int32_t
name|crc
range|:
literal|16
decl_stmt|,
name|crc_len
range|:
literal|8
decl_stmt|,
name|info_len
range|:
literal|8
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|csrdirectory
block|{
name|u_int32_t
name|crc
range|:
literal|16
decl_stmt|,
name|crc_len
range|:
literal|16
decl_stmt|;
name|struct
name|csrreg
name|entry
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|csrtext
block|{
name|u_int32_t
name|crc
range|:
literal|16
decl_stmt|,
name|crc_len
range|:
literal|16
decl_stmt|;
name|u_int32_t
name|spec_id
range|:
literal|16
decl_stmt|,
name|spec_type
range|:
literal|16
decl_stmt|;
name|u_int32_t
name|lang_id
decl_stmt|;
name|u_int32_t
name|text
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|businfo
block|{
name|u_int32_t
name|crc
range|:
literal|16
decl_stmt|,
name|crc_len
range|:
literal|8
decl_stmt|,
range|:
literal|12
decl_stmt|,
name|max_rec
range|:
literal|4
decl_stmt|,
name|clk_acc
range|:
literal|8
decl_stmt|,
range|:
literal|4
decl_stmt|,
name|bmc
range|:
literal|1
decl_stmt|,
name|isc
range|:
literal|1
decl_stmt|,
name|cmc
range|:
literal|1
decl_stmt|,
name|irmc
range|:
literal|1
decl_stmt|;
name|u_int32_t
name|c_id_hi
range|:
literal|8
decl_stmt|,
name|v_id
range|:
literal|24
decl_stmt|;
name|u_int32_t
name|c_id_lo
decl_stmt|;
block|}
struct|;
end_struct

end_unit

