begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2003 Hidetoshi Shimokawa  * Copyright (c) 1998-2002 Katsushi Kobayashi and Hidetoshi Shimokawa  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the acknowledgement as bellow:  *  *    This product includes software developed by K. Kobayashi and H. Shimokawa  *  * 4. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  *   * $FreeBSD$  *  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__DragonFly__
end_ifdef

begin_typedef
typedef|typedef
name|d_thread_t
name|fw_proc
typedef|;
end_typedef

begin_include
include|#
directive|include
file|<sys/select.h>
end_include

begin_elif
elif|#
directive|elif
name|__FreeBSD_version
operator|>=
literal|500000
end_elif

begin_typedef
typedef|typedef
name|struct
name|thread
name|fw_proc
typedef|;
end_typedef

begin_include
include|#
directive|include
file|<sys/selinfo.h>
end_include

begin_else
else|#
directive|else
end_else

begin_typedef
typedef|typedef
name|struct
name|proc
name|fw_proc
typedef|;
end_typedef

begin_include
include|#
directive|include
file|<sys/select.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<sys/uio.h>
end_include

begin_include
include|#
directive|include
file|<sys/mutex.h>
end_include

begin_include
include|#
directive|include
file|<sys/taskqueue.h>
end_include

begin_define
define|#
directive|define
name|splfw
value|splimp
end_define

begin_expr_stmt
name|STAILQ_HEAD
argument_list|(
name|fw_xferlist
argument_list|,
name|fw_xfer
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|fw_device
block|{
name|uint16_t
name|dst
decl_stmt|;
name|struct
name|fw_eui64
name|eui
decl_stmt|;
name|uint8_t
name|speed
decl_stmt|;
name|uint8_t
name|maxrec
decl_stmt|;
name|uint8_t
name|nport
decl_stmt|;
name|uint8_t
name|power
decl_stmt|;
define|#
directive|define
name|CSRROMOFF
value|0x400
define|#
directive|define
name|CSRROMSIZE
value|0x400
name|int
name|rommax
decl_stmt|;
comment|/* offset from 0xffff f000 0000 */
name|uint32_t
name|csrrom
index|[
name|CSRROMSIZE
operator|/
literal|4
index|]
decl_stmt|;
name|int
name|rcnt
decl_stmt|;
name|struct
name|firewire_comm
modifier|*
name|fc
decl_stmt|;
name|uint32_t
name|status
decl_stmt|;
define|#
directive|define
name|FWDEVINIT
value|1
define|#
directive|define
name|FWDEVATTACHED
value|2
define|#
directive|define
name|FWDEVINVAL
value|3
name|STAILQ_ENTRY
argument_list|(
argument|fw_device
argument_list|)
name|link
expr_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|firewire_softc
block|{
if|#
directive|if
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|&&
name|__FreeBSD_version
operator|>=
literal|500000
name|struct
name|cdev
modifier|*
name|dev
decl_stmt|;
endif|#
directive|endif
name|struct
name|firewire_comm
modifier|*
name|fc
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|FW_MAX_DMACH
value|0x20
end_define

begin_define
define|#
directive|define
name|FW_MAX_DEVCH
value|FW_MAX_DMACH
end_define

begin_define
define|#
directive|define
name|FW_XFERTIMEOUT
value|1
end_define

begin_struct
struct|struct
name|firewire_dev_comm
block|{
name|device_t
name|dev
decl_stmt|;
name|struct
name|firewire_comm
modifier|*
name|fc
decl_stmt|;
name|void
function_decl|(
modifier|*
name|post_busreset
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|post_explore
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|tcode_info
block|{
name|u_char
name|hdr_len
decl_stmt|;
comment|/* IEEE1394 header length */
name|u_char
name|flag
decl_stmt|;
define|#
directive|define
name|FWTI_REQ
value|(1<< 0)
define|#
directive|define
name|FWTI_RES
value|(1<< 1)
define|#
directive|define
name|FWTI_TLABEL
value|(1<< 2)
define|#
directive|define
name|FWTI_BLOCK_STR
value|(1<< 3)
define|#
directive|define
name|FWTI_BLOCK_ASY
value|(1<< 4)
name|u_char
name|valid_res
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|firewire_comm
block|{
name|device_t
name|dev
decl_stmt|;
name|device_t
name|bdev
decl_stmt|;
name|uint16_t
name|busid
range|:
literal|10
decl_stmt|,
name|nodeid
range|:
literal|6
decl_stmt|;
name|u_int
name|mode
decl_stmt|;
name|u_int
name|nport
decl_stmt|;
name|u_int
name|speed
decl_stmt|;
name|u_int
name|maxrec
decl_stmt|;
name|u_int
name|irm
decl_stmt|;
name|u_int
name|max_node
decl_stmt|;
name|u_int
name|max_hop
decl_stmt|;
define|#
directive|define
name|FWPHYASYST
value|(1<< 0)
name|uint32_t
name|status
decl_stmt|;
define|#
directive|define
name|FWBUSDETACH
value|(-2)
define|#
directive|define
name|FWBUSNOTREADY
value|(-1)
define|#
directive|define
name|FWBUSRESET
value|0
define|#
directive|define
name|FWBUSINIT
value|1
define|#
directive|define
name|FWBUSCYMELECT
value|2
define|#
directive|define
name|FWBUSMGRELECT
value|3
define|#
directive|define
name|FWBUSMGRDONE
value|4
define|#
directive|define
name|FWBUSEXPLORE
value|5
define|#
directive|define
name|FWBUSPHYCONF
value|6
define|#
directive|define
name|FWBUSEXPDONE
value|7
define|#
directive|define
name|FWBUSCOMPLETION
value|10
name|int
name|nisodma
decl_stmt|;
name|struct
name|fw_eui64
name|eui
decl_stmt|;
name|struct
name|fw_xferq
modifier|*
name|arq
decl_stmt|,
modifier|*
name|atq
decl_stmt|,
modifier|*
name|ars
decl_stmt|,
modifier|*
name|ats
decl_stmt|,
modifier|*
name|it
index|[
name|FW_MAX_DMACH
index|]
decl_stmt|,
modifier|*
name|ir
index|[
name|FW_MAX_DMACH
index|]
decl_stmt|;
name|struct
name|fw_xferlist
name|tlabels
index|[
literal|0x40
index|]
decl_stmt|;
name|u_char
name|last_tlabel
index|[
literal|0x40
index|]
decl_stmt|;
name|struct
name|mtx
name|tlabel_lock
decl_stmt|;
name|STAILQ_HEAD
argument_list|(
argument_list|,
argument|fw_bind
argument_list|)
name|binds
expr_stmt|;
name|STAILQ_HEAD
argument_list|(
argument_list|,
argument|fw_device
argument_list|)
name|devices
expr_stmt|;
name|u_int
name|sid_cnt
decl_stmt|;
define|#
directive|define
name|CSRSIZE
value|0x4000
name|uint32_t
name|csr_arc
index|[
name|CSRSIZE
operator|/
literal|4
index|]
decl_stmt|;
define|#
directive|define
name|CROMSIZE
value|0x400
name|uint32_t
modifier|*
name|config_rom
decl_stmt|;
name|struct
name|crom_src_buf
modifier|*
name|crom_src_buf
decl_stmt|;
name|struct
name|crom_src
modifier|*
name|crom_src
decl_stmt|;
name|struct
name|crom_chunk
modifier|*
name|crom_root
decl_stmt|;
name|struct
name|fw_topology_map
modifier|*
name|topology_map
decl_stmt|;
name|struct
name|fw_speed_map
modifier|*
name|speed_map
decl_stmt|;
name|struct
name|callout
name|busprobe_callout
decl_stmt|;
name|struct
name|callout
name|bmr_callout
decl_stmt|;
name|struct
name|callout
name|timeout_callout
decl_stmt|;
name|struct
name|task
name|task_timeout
decl_stmt|;
name|uint32_t
function_decl|(
modifier|*
name|cyctimer
function_decl|)
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|ibr
function_decl|)
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|)
function_decl|;
name|uint32_t
function_decl|(
modifier|*
name|set_bmr
function_decl|)
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|ioctl
function_decl|)
parameter_list|(
name|struct
name|cdev
modifier|*
parameter_list|,
name|u_long
parameter_list|,
name|caddr_t
parameter_list|,
name|int
parameter_list|,
name|fw_proc
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|irx_enable
function_decl|)
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|irx_disable
function_decl|)
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|itx_enable
function_decl|)
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|itx_disable
function_decl|)
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|timeout
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|poll
function_decl|)
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_intr
function_decl|)
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|irx_post
function_decl|)
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|uint32_t
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|itx_post
function_decl|)
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|uint32_t
modifier|*
parameter_list|)
function_decl|;
name|struct
name|tcode_info
modifier|*
name|tcode
decl_stmt|;
name|bus_dma_tag_t
name|dmat
decl_stmt|;
name|struct
name|mtx
name|mtx
decl_stmt|;
name|struct
name|mtx
name|wait_lock
decl_stmt|;
name|struct
name|taskqueue
modifier|*
name|taskqueue
decl_stmt|;
name|struct
name|proc
modifier|*
name|probe_thread
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|CSRARC
parameter_list|(
name|sc
parameter_list|,
name|offset
parameter_list|)
value|((sc)->csr_arc[(offset)/4])
end_define

begin_define
define|#
directive|define
name|FW_GMTX
parameter_list|(
name|fc
parameter_list|)
value|(&(fc)->mtx)
end_define

begin_define
define|#
directive|define
name|FW_GLOCK
parameter_list|(
name|fc
parameter_list|)
value|mtx_lock(FW_GMTX(fc))
end_define

begin_define
define|#
directive|define
name|FW_GUNLOCK
parameter_list|(
name|fc
parameter_list|)
value|mtx_unlock(FW_GMTX(fc))
end_define

begin_define
define|#
directive|define
name|FW_GLOCK_ASSERT
parameter_list|(
name|fc
parameter_list|)
value|mtx_assert(FW_GMTX(fc), MA_OWNED)
end_define

begin_struct
struct|struct
name|fw_xferq
block|{
name|int
name|flag
decl_stmt|;
define|#
directive|define
name|FWXFERQ_CHTAGMASK
value|0xff
define|#
directive|define
name|FWXFERQ_RUNNING
value|(1<< 8)
define|#
directive|define
name|FWXFERQ_STREAM
value|(1<< 9)
define|#
directive|define
name|FWXFERQ_BULK
value|(1<< 11)
define|#
directive|define
name|FWXFERQ_MODEMASK
value|(7<< 10)
define|#
directive|define
name|FWXFERQ_EXTBUF
value|(1<< 13)
define|#
directive|define
name|FWXFERQ_OPEN
value|(1<< 14)
define|#
directive|define
name|FWXFERQ_HANDLER
value|(1<< 16)
define|#
directive|define
name|FWXFERQ_WAKEUP
value|(1<< 17)
name|void
function_decl|(
modifier|*
name|start
function_decl|)
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|)
function_decl|;
name|int
name|dmach
decl_stmt|;
name|struct
name|fw_xferlist
name|q
decl_stmt|;
name|u_int
name|queued
decl_stmt|;
name|u_int
name|maxq
decl_stmt|;
name|u_int
name|psize
decl_stmt|;
name|struct
name|fwdma_alloc_multi
modifier|*
name|buf
decl_stmt|;
name|u_int
name|bnchunk
decl_stmt|;
name|u_int
name|bnpacket
decl_stmt|;
name|struct
name|fw_bulkxfer
modifier|*
name|bulkxfer
decl_stmt|;
name|STAILQ_HEAD
argument_list|(
argument_list|,
argument|fw_bulkxfer
argument_list|)
name|stvalid
expr_stmt|;
name|STAILQ_HEAD
argument_list|(
argument_list|,
argument|fw_bulkxfer
argument_list|)
name|stfree
expr_stmt|;
name|STAILQ_HEAD
argument_list|(
argument_list|,
argument|fw_bulkxfer
argument_list|)
name|stdma
expr_stmt|;
name|struct
name|fw_bulkxfer
modifier|*
name|stproc
decl_stmt|;
name|struct
name|selinfo
name|rsel
decl_stmt|;
name|caddr_t
name|sc
decl_stmt|;
name|void
function_decl|(
modifier|*
name|hand
function_decl|)
parameter_list|(
name|struct
name|fw_xferq
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|fw_bulkxfer
block|{
name|int
name|poffset
decl_stmt|;
name|struct
name|mbuf
modifier|*
name|mbuf
decl_stmt|;
name|STAILQ_ENTRY
argument_list|(
argument|fw_bulkxfer
argument_list|)
name|link
expr_stmt|;
name|caddr_t
name|start
decl_stmt|;
name|caddr_t
name|end
decl_stmt|;
name|int
name|resp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|fw_bind
block|{
name|u_int64_t
name|start
decl_stmt|;
name|u_int64_t
name|end
decl_stmt|;
name|struct
name|fw_xferlist
name|xferlist
decl_stmt|;
name|STAILQ_ENTRY
argument_list|(
argument|fw_bind
argument_list|)
name|fclist
expr_stmt|;
name|STAILQ_ENTRY
argument_list|(
argument|fw_bind
argument_list|)
name|chlist
expr_stmt|;
name|void
modifier|*
name|sc
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|fw_xfer
block|{
name|caddr_t
name|sc
decl_stmt|;
name|struct
name|firewire_comm
modifier|*
name|fc
decl_stmt|;
name|struct
name|fw_xferq
modifier|*
name|q
decl_stmt|;
name|struct
name|timeval
name|tv
decl_stmt|;
name|int8_t
name|resp
decl_stmt|;
define|#
directive|define
name|FWXF_INIT
value|0x00
define|#
directive|define
name|FWXF_INQ
value|0x01
define|#
directive|define
name|FWXF_START
value|0x02
define|#
directive|define
name|FWXF_SENT
value|0x04
define|#
directive|define
name|FWXF_SENTERR
value|0x08
define|#
directive|define
name|FWXF_BUSY
value|0x10
define|#
directive|define
name|FWXF_RCVD
value|0x20
define|#
directive|define
name|FWXF_WAKE
value|0x80
name|uint8_t
name|flag
decl_stmt|;
name|int8_t
name|tl
decl_stmt|;
name|void
function_decl|(
modifier|*
name|hand
function_decl|)
parameter_list|(
name|struct
name|fw_xfer
modifier|*
parameter_list|)
function_decl|;
struct|struct
block|{
name|struct
name|fw_pkt
name|hdr
decl_stmt|;
name|uint32_t
modifier|*
name|payload
decl_stmt|;
name|uint16_t
name|pay_len
decl_stmt|;
name|uint8_t
name|spd
decl_stmt|;
block|}
name|send
struct|,
name|recv
struct|;
name|struct
name|mbuf
modifier|*
name|mbuf
decl_stmt|;
name|STAILQ_ENTRY
argument_list|(
argument|fw_xfer
argument_list|)
name|link
expr_stmt|;
name|STAILQ_ENTRY
argument_list|(
argument|fw_xfer
argument_list|)
name|tlabel
expr_stmt|;
name|struct
name|malloc_type
modifier|*
name|malloc
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|fw_rcv_buf
block|{
name|struct
name|firewire_comm
modifier|*
name|fc
decl_stmt|;
name|struct
name|fw_xfer
modifier|*
name|xfer
decl_stmt|;
name|struct
name|iovec
modifier|*
name|vec
decl_stmt|;
name|u_int
name|nvec
decl_stmt|;
name|uint8_t
name|spd
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|void
name|fw_sidrcv
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|uint32_t
modifier|*
parameter_list|,
name|u_int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fw_rcv
parameter_list|(
name|struct
name|fw_rcv_buf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fw_xfer_unload
parameter_list|(
name|struct
name|fw_xfer
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fw_xfer_free_buf
parameter_list|(
name|struct
name|fw_xfer
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fw_xfer_free
parameter_list|(
name|struct
name|fw_xfer
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|fw_xfer
modifier|*
name|fw_xfer_alloc
parameter_list|(
name|struct
name|malloc_type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|fw_xfer
modifier|*
name|fw_xfer_alloc_buf
parameter_list|(
name|struct
name|malloc_type
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fw_init
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fw_tbuf_update
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fw_rbuf_update
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fw_bindadd
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|struct
name|fw_bind
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fw_bindremove
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|struct
name|fw_bind
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fw_xferlist_add
parameter_list|(
name|struct
name|fw_xferlist
modifier|*
parameter_list|,
name|struct
name|malloc_type
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|struct
name|fw_xfer
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fw_xferlist_remove
parameter_list|(
name|struct
name|fw_xferlist
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fw_asyreq
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|fw_xfer
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fw_busreset
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint16_t
name|fw_crc16
parameter_list|(
name|uint32_t
modifier|*
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fw_xfer_timeout
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fw_xfer_done
parameter_list|(
name|struct
name|fw_xfer
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fw_xferwake
parameter_list|(
name|struct
name|fw_xfer
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fw_xferwait
parameter_list|(
name|struct
name|fw_xfer
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fw_asy_callback_free
parameter_list|(
name|struct
name|fw_xfer
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|fw_device
modifier|*
name|fw_noderesolve_nodeid
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|fw_device
modifier|*
name|fw_noderesolve_eui64
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|struct
name|fw_eui64
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|fw_bind
modifier|*
name|fw_bindlookup
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|uint16_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fw_drain_txq
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fwdev_makedev
parameter_list|(
name|struct
name|firewire_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fwdev_destroydev
parameter_list|(
name|struct
name|firewire_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fwdev_clone
parameter_list|(
name|void
modifier|*
parameter_list|,
name|struct
name|ucred
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|cdev
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fw_open_isodma
parameter_list|(
name|struct
name|firewire_comm
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|int
name|firewire_debug
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|devclass_t
name|firewire_devclass
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|firewire_phydma_enable
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|__DragonFly__
end_ifdef

begin_define
define|#
directive|define
name|FWPRI
value|PCATCH
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|FWPRI
value|((PZERO+8)|PCATCH)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__DragonFly__
argument_list|)
operator|||
name|__FreeBSD_version
operator|<
literal|500000
end_if

begin_define
define|#
directive|define
name|CALLOUT_INIT
parameter_list|(
name|x
parameter_list|)
value|callout_init(x)
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|CALLOUT_INIT
parameter_list|(
name|x
parameter_list|)
value|callout_init(x, 1
comment|/* mpsafe */
value|)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__DragonFly__
argument_list|)
operator|||
name|__FreeBSD_version
operator|<
literal|500000
end_if

begin_comment
comment|/* compatibility shim for 4.X */
end_comment

begin_define
define|#
directive|define
name|bio
value|buf
end_define

begin_define
define|#
directive|define
name|bio_bcount
value|b_bcount
end_define

begin_define
define|#
directive|define
name|bio_cmd
value|b_flags
end_define

begin_define
define|#
directive|define
name|bio_count
value|b_count
end_define

begin_define
define|#
directive|define
name|bio_data
value|b_data
end_define

begin_define
define|#
directive|define
name|bio_dev
value|b_dev
end_define

begin_define
define|#
directive|define
name|bio_error
value|b_error
end_define

begin_define
define|#
directive|define
name|bio_flags
value|b_flags
end_define

begin_define
define|#
directive|define
name|bio_offset
value|b_offset
end_define

begin_define
define|#
directive|define
name|bio_resid
value|b_resid
end_define

begin_define
define|#
directive|define
name|BIO_ERROR
value|B_ERROR
end_define

begin_define
define|#
directive|define
name|BIO_READ
value|B_READ
end_define

begin_define
define|#
directive|define
name|BIO_WRITE
value|B_WRITE
end_define

begin_define
define|#
directive|define
name|MIN
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|)
value|(((a)<(b))?(a):(b))
end_define

begin_define
define|#
directive|define
name|MAX
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|)
value|(((a)>(b))?(a):(b))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_expr_stmt
name|MALLOC_DECLARE
argument_list|(
name|M_FW
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|MALLOC_DECLARE
argument_list|(
name|M_FWXFER
argument_list|)
expr_stmt|;
end_expr_stmt

end_unit

