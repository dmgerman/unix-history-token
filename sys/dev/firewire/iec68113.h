begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1998-2001 Katsushi Kobayashi and Hidetoshi Shimokawa  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the acknowledgement as bellow:  *  *    This product includes software developed by K. Kobayashi and H. Shimokawa  *  * 4. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  *   * $FreeBSD$  *  */
end_comment

begin_struct
struct|struct
name|ciphdr
block|{
if|#
directive|if
name|BYTE_ORDER
operator|==
name|LITTLE_ENDIAN
name|u_int32_t
name|src
range|:
literal|8
decl_stmt|,
name|len
range|:
literal|8
decl_stmt|,
name|dummy
range|:
literal|8
decl_stmt|,
name|dbc
range|:
literal|8
decl_stmt|;
name|u_int32_t
label|:
literal|16
operator|,
name|cyc
operator|:
literal|16
expr_stmt|;
else|#
directive|else
name|u_int32_t
name|dbc
range|:
literal|8
decl_stmt|,
name|dummy
range|:
literal|8
decl_stmt|,
name|len
range|:
literal|8
decl_stmt|,
name|src
range|:
literal|8
decl_stmt|;
name|u_int32_t
name|cyc
range|:
literal|16
decl_stmt|,
range|:
literal|16
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|dvdbc
block|{
if|#
directive|if
name|BYTE_ORDER
operator|==
name|BIG_ENDIAN
name|u_int32_t
label|:
literal|8
operator|,
name|dbn
operator|:
literal|8
operator|,
name|rsv0
operator|:
literal|3
operator|,
name|z
operator|:
literal|1
operator|,
name|dseq
operator|:
literal|4
operator|,
name|seq
operator|:
literal|4
operator|,
name|rsv1
operator|:
literal|1
operator|,
name|sct
operator|:
literal|3
expr_stmt|;
else|#
directive|else
name|u_int32_t
name|seq
range|:
literal|4
decl_stmt|,
range|:
literal|1
decl_stmt|,
name|sct
range|:
literal|3
decl_stmt|,
range|:
literal|3
decl_stmt|,
name|z
range|:
literal|1
decl_stmt|,
name|dseq
range|:
literal|4
decl_stmt|,
name|dbn
range|:
literal|8
decl_stmt|,
range|:
literal|8
decl_stmt|;
endif|#
directive|endif
name|u_int32_t
name|ld
index|[
literal|19
index|]
decl_stmt|;
block|}
struct|;
end_struct

end_unit

