begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1998-2002 Katsushi Kobayashi and Hidetoshi SHimokawa  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the acknowledgement as bellow:  *  *    This product includes software developed by K. Kobayashi and H. Shimokawa  *  * 4. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  *   * $FreeBSD$  *  */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|fwohci_softc
block|{
name|struct
name|firewire_comm
name|fc
decl_stmt|;
name|bus_space_tag_t
name|bst
decl_stmt|;
name|bus_space_handle_t
name|bsh
decl_stmt|;
name|void
modifier|*
name|ih
decl_stmt|;
if|#
directive|if
name|__FreeBSD_version
operator|<
literal|500000
name|void
modifier|*
name|ih_cam
decl_stmt|;
endif|#
directive|endif
name|struct
name|resource
modifier|*
name|bsr
decl_stmt|;
name|struct
name|resource
modifier|*
name|irq_res
decl_stmt|;
struct|struct
name|fwohci_dbch
block|{
name|u_int
name|ndb
decl_stmt|;
name|u_int
name|ndesc
decl_stmt|;
name|caddr_t
name|dummy
decl_stmt|;
name|STAILQ_HEAD
argument_list|(
argument_list|,
argument|fwohcidb_tr
argument_list|)
name|db_trq
expr_stmt|;
name|struct
name|fwohcidb_tr
modifier|*
name|top
decl_stmt|,
modifier|*
name|bottom
decl_stmt|,
modifier|*
name|pdb_tr
decl_stmt|;
name|struct
name|fw_xferq
name|xferq
decl_stmt|;
struct|struct
block|{
name|int
name|len
decl_stmt|;
name|int
name|hlen
decl_stmt|;
name|int
name|plen
decl_stmt|;
name|caddr_t
name|buf
decl_stmt|;
block|}
name|frag
struct|;
name|int
name|flags
decl_stmt|;
define|#
directive|define
name|FWOHCI_DBCH_INIT
value|(1<<0)
define|#
directive|define
name|FWOHCI_DBCH_FULL
value|(1<<1)
name|int
name|buf_offset
decl_stmt|;
block|}
name|arrq
struct|,
name|arrs
struct|,
name|atrq
struct|,
name|atrs
struct|,
name|it
index|[
name|OHCI_DMA_ITCH
index|]
struct|,
name|ir
index|[
name|OHCI_DMA_IRCH
index|]
struct|;
name|u_int
name|maxrec
decl_stmt|;
name|u_int32_t
modifier|*
name|cromptr
decl_stmt|;
name|u_int32_t
name|intmask
decl_stmt|;
block|}
name|fwohci_softc_t
typedef|;
end_typedef

begin_decl_stmt
name|void
name|fwohci_intr
name|__P
argument_list|(
operator|(
name|void
operator|*
name|arg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|fwohci_init
name|__P
argument_list|(
operator|(
expr|struct
name|fwohci_softc
operator|*
operator|,
name|device_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|fwohci_detach
name|__P
argument_list|(
operator|(
expr|struct
name|fwohci_softc
operator|*
operator|,
name|device_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|fwohci_shutdown
name|__P
argument_list|(
operator|(
name|device_t
name|dev
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

end_unit

