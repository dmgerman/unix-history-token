begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2013-2017, Mellanox Technologies, Ltd.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS `AS IS' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MLX5_DRIVER_H
end_ifndef

begin_define
define|#
directive|define
name|MLX5_DRIVER_H
end_define

begin_include
include|#
directive|include
file|<linux/kernel.h>
end_include

begin_include
include|#
directive|include
file|<linux/completion.h>
end_include

begin_include
include|#
directive|include
file|<linux/pci.h>
end_include

begin_include
include|#
directive|include
file|<linux/cache.h>
end_include

begin_include
include|#
directive|include
file|<linux/rbtree.h>
end_include

begin_include
include|#
directive|include
file|<linux/if_ether.h>
end_include

begin_include
include|#
directive|include
file|<linux/semaphore.h>
end_include

begin_include
include|#
directive|include
file|<linux/slab.h>
end_include

begin_include
include|#
directive|include
file|<linux/vmalloc.h>
end_include

begin_include
include|#
directive|include
file|<linux/radix-tree.h>
end_include

begin_include
include|#
directive|include
file|<dev/mlx5/device.h>
end_include

begin_include
include|#
directive|include
file|<dev/mlx5/doorbell.h>
end_include

begin_define
define|#
directive|define
name|MLX5_QCOUNTER_SETS_NETDEV
value|64
end_define

begin_define
define|#
directive|define
name|MLX5_MAX_NUMBER_OF_VFS
value|128
end_define

begin_enum
enum|enum
block|{
name|MLX5_BOARD_ID_LEN
init|=
literal|64
block|,
name|MLX5_MAX_NAME_LEN
init|=
literal|16
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_CMD_TIMEOUT_MSEC
init|=
literal|8
operator|*
literal|60
operator|*
literal|1000
block|,
name|MLX5_CMD_WQ_MAX_NAME
init|=
literal|32
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|CMD_OWNER_SW
init|=
literal|0x0
block|,
name|CMD_OWNER_HW
init|=
literal|0x1
block|,
name|CMD_STATUS_SUCCESS
init|=
literal|0
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|mlx5_sqp_t
block|{
name|MLX5_SQP_SMI
init|=
literal|0
block|,
name|MLX5_SQP_GSI
init|=
literal|1
block|,
name|MLX5_SQP_IEEE_1588
init|=
literal|2
block|,
name|MLX5_SQP_SNIFFER
init|=
literal|3
block|,
name|MLX5_SQP_SYNC_UMR
init|=
literal|4
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_MAX_PORTS
init|=
literal|2
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_EQ_VEC_PAGES
init|=
literal|0
block|,
name|MLX5_EQ_VEC_CMD
init|=
literal|1
block|,
name|MLX5_EQ_VEC_ASYNC
init|=
literal|2
block|,
name|MLX5_EQ_VEC_COMP_BASE
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_MAX_IRQ_NAME
init|=
literal|32
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_ATOMIC_MODE_OFF
init|=
literal|16
block|,
name|MLX5_ATOMIC_MODE_NONE
init|=
literal|0
operator|<<
name|MLX5_ATOMIC_MODE_OFF
block|,
name|MLX5_ATOMIC_MODE_IB_COMP
init|=
literal|1
operator|<<
name|MLX5_ATOMIC_MODE_OFF
block|,
name|MLX5_ATOMIC_MODE_CX
init|=
literal|2
operator|<<
name|MLX5_ATOMIC_MODE_OFF
block|,
name|MLX5_ATOMIC_MODE_8B
init|=
literal|3
operator|<<
name|MLX5_ATOMIC_MODE_OFF
block|,
name|MLX5_ATOMIC_MODE_16B
init|=
literal|4
operator|<<
name|MLX5_ATOMIC_MODE_OFF
block|,
name|MLX5_ATOMIC_MODE_32B
init|=
literal|5
operator|<<
name|MLX5_ATOMIC_MODE_OFF
block|,
name|MLX5_ATOMIC_MODE_64B
init|=
literal|6
operator|<<
name|MLX5_ATOMIC_MODE_OFF
block|,
name|MLX5_ATOMIC_MODE_128B
init|=
literal|7
operator|<<
name|MLX5_ATOMIC_MODE_OFF
block|,
name|MLX5_ATOMIC_MODE_256B
init|=
literal|8
operator|<<
name|MLX5_ATOMIC_MODE_OFF
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_ATOMIC_MODE_DCT_OFF
init|=
literal|20
block|,
name|MLX5_ATOMIC_MODE_DCT_NONE
init|=
literal|0
operator|<<
name|MLX5_ATOMIC_MODE_DCT_OFF
block|,
name|MLX5_ATOMIC_MODE_DCT_IB_COMP
init|=
literal|1
operator|<<
name|MLX5_ATOMIC_MODE_DCT_OFF
block|,
name|MLX5_ATOMIC_MODE_DCT_CX
init|=
literal|2
operator|<<
name|MLX5_ATOMIC_MODE_DCT_OFF
block|,
name|MLX5_ATOMIC_MODE_DCT_8B
init|=
literal|3
operator|<<
name|MLX5_ATOMIC_MODE_DCT_OFF
block|,
name|MLX5_ATOMIC_MODE_DCT_16B
init|=
literal|4
operator|<<
name|MLX5_ATOMIC_MODE_DCT_OFF
block|,
name|MLX5_ATOMIC_MODE_DCT_32B
init|=
literal|5
operator|<<
name|MLX5_ATOMIC_MODE_DCT_OFF
block|,
name|MLX5_ATOMIC_MODE_DCT_64B
init|=
literal|6
operator|<<
name|MLX5_ATOMIC_MODE_DCT_OFF
block|,
name|MLX5_ATOMIC_MODE_DCT_128B
init|=
literal|7
operator|<<
name|MLX5_ATOMIC_MODE_DCT_OFF
block|,
name|MLX5_ATOMIC_MODE_DCT_256B
init|=
literal|8
operator|<<
name|MLX5_ATOMIC_MODE_DCT_OFF
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_ATOMIC_OPS_CMP_SWAP
init|=
literal|1
operator|<<
literal|0
block|,
name|MLX5_ATOMIC_OPS_FETCH_ADD
init|=
literal|1
operator|<<
literal|1
block|,
name|MLX5_ATOMIC_OPS_MASKED_CMP_SWAP
init|=
literal|1
operator|<<
literal|2
block|,
name|MLX5_ATOMIC_OPS_MASKED_FETCH_ADD
init|=
literal|1
operator|<<
literal|3
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_REG_QETCR
init|=
literal|0x4005
block|,
name|MLX5_REG_QPDP
init|=
literal|0x4007
block|,
name|MLX5_REG_QTCT
init|=
literal|0x400A
block|,
name|MLX5_REG_QHLL
init|=
literal|0x4016
block|,
name|MLX5_REG_DCBX_PARAM
init|=
literal|0x4020
block|,
name|MLX5_REG_DCBX_APP
init|=
literal|0x4021
block|,
name|MLX5_REG_PCAP
init|=
literal|0x5001
block|,
name|MLX5_REG_PMTU
init|=
literal|0x5003
block|,
name|MLX5_REG_PTYS
init|=
literal|0x5004
block|,
name|MLX5_REG_PAOS
init|=
literal|0x5006
block|,
name|MLX5_REG_PFCC
init|=
literal|0x5007
block|,
name|MLX5_REG_PPCNT
init|=
literal|0x5008
block|,
name|MLX5_REG_PMAOS
init|=
literal|0x5012
block|,
name|MLX5_REG_PUDE
init|=
literal|0x5009
block|,
name|MLX5_REG_PPTB
init|=
literal|0x500B
block|,
name|MLX5_REG_PBMC
init|=
literal|0x500C
block|,
name|MLX5_REG_PMPE
init|=
literal|0x5010
block|,
name|MLX5_REG_PELC
init|=
literal|0x500e
block|,
name|MLX5_REG_PVLC
init|=
literal|0x500f
block|,
name|MLX5_REG_PMLP
init|=
literal|0x5002
block|,
name|MLX5_REG_NODE_DESC
init|=
literal|0x6001
block|,
name|MLX5_REG_HOST_ENDIANNESS
init|=
literal|0x7004
block|,
name|MLX5_REG_MCIA
init|=
literal|0x9014
block|,
name|MLX5_REG_MPCNT
init|=
literal|0x9051
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|dbg_rsc_type
block|{
name|MLX5_DBG_RSC_QP
block|,
name|MLX5_DBG_RSC_EQ
block|,
name|MLX5_DBG_RSC_CQ
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_INTERFACE_PROTOCOL_IB
init|=
literal|0
block|,
name|MLX5_INTERFACE_PROTOCOL_ETH
init|=
literal|1
block|,
name|MLX5_INTERFACE_NUMBER
init|=
literal|2
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_field_desc
block|{
name|struct
name|dentry
modifier|*
name|dent
decl_stmt|;
name|int
name|i
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_rsc_debug
block|{
name|struct
name|mlx5_core_dev
modifier|*
name|dev
decl_stmt|;
name|void
modifier|*
name|object
decl_stmt|;
name|enum
name|dbg_rsc_type
name|type
decl_stmt|;
name|struct
name|dentry
modifier|*
name|root
decl_stmt|;
name|struct
name|mlx5_field_desc
name|fields
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|mlx5_dev_event
block|{
name|MLX5_DEV_EVENT_SYS_ERROR
block|,
name|MLX5_DEV_EVENT_PORT_UP
block|,
name|MLX5_DEV_EVENT_PORT_DOWN
block|,
name|MLX5_DEV_EVENT_PORT_INITIALIZED
block|,
name|MLX5_DEV_EVENT_LID_CHANGE
block|,
name|MLX5_DEV_EVENT_PKEY_CHANGE
block|,
name|MLX5_DEV_EVENT_GUID_CHANGE
block|,
name|MLX5_DEV_EVENT_CLIENT_REREG
block|,
name|MLX5_DEV_EVENT_VPORT_CHANGE
block|,
name|MLX5_DEV_EVENT_ERROR_STATE_DCBX
block|,
name|MLX5_DEV_EVENT_REMOTE_CONFIG_CHANGE
block|,
name|MLX5_DEV_EVENT_LOCAL_OPER_CHANGE
block|,
name|MLX5_DEV_EVENT_REMOTE_CONFIG_APPLICATION_PRIORITY_CHANGE
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|mlx5_port_status
block|{
name|MLX5_PORT_UP
init|=
literal|1
operator|<<
literal|0
block|,
name|MLX5_PORT_DOWN
init|=
literal|1
operator|<<
literal|1
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|mlx5_link_mode
block|{
name|MLX5_1000BASE_CX_SGMII
init|=
literal|0
block|,
name|MLX5_1000BASE_KX
init|=
literal|1
block|,
name|MLX5_10GBASE_CX4
init|=
literal|2
block|,
name|MLX5_10GBASE_KX4
init|=
literal|3
block|,
name|MLX5_10GBASE_KR
init|=
literal|4
block|,
name|MLX5_20GBASE_KR2
init|=
literal|5
block|,
name|MLX5_40GBASE_CR4
init|=
literal|6
block|,
name|MLX5_40GBASE_KR4
init|=
literal|7
block|,
name|MLX5_56GBASE_R4
init|=
literal|8
block|,
name|MLX5_10GBASE_CR
init|=
literal|12
block|,
name|MLX5_10GBASE_SR
init|=
literal|13
block|,
name|MLX5_10GBASE_ER
init|=
literal|14
block|,
name|MLX5_40GBASE_SR4
init|=
literal|15
block|,
name|MLX5_40GBASE_LR4
init|=
literal|16
block|,
name|MLX5_100GBASE_CR4
init|=
literal|20
block|,
name|MLX5_100GBASE_SR4
init|=
literal|21
block|,
name|MLX5_100GBASE_KR4
init|=
literal|22
block|,
name|MLX5_100GBASE_LR4
init|=
literal|23
block|,
name|MLX5_100BASE_TX
init|=
literal|24
block|,
name|MLX5_1000BASE_T
init|=
literal|25
block|,
name|MLX5_10GBASE_T
init|=
literal|26
block|,
name|MLX5_25GBASE_CR
init|=
literal|27
block|,
name|MLX5_25GBASE_KR
init|=
literal|28
block|,
name|MLX5_25GBASE_SR
init|=
literal|29
block|,
name|MLX5_50GBASE_CR2
init|=
literal|30
block|,
name|MLX5_50GBASE_KR2
init|=
literal|31
block|,
name|MLX5_LINK_MODES_NUMBER
block|, }
enum|;
end_enum

begin_define
define|#
directive|define
name|MLX5_PROT_MASK
parameter_list|(
name|link_mode
parameter_list|)
value|(1<< link_mode)
end_define

begin_struct
struct|struct
name|mlx5_uuar_info
block|{
name|struct
name|mlx5_uar
modifier|*
name|uars
decl_stmt|;
name|int
name|num_uars
decl_stmt|;
name|int
name|num_low_latency_uuars
decl_stmt|;
name|unsigned
name|long
modifier|*
name|bitmap
decl_stmt|;
name|unsigned
name|int
modifier|*
name|count
decl_stmt|;
name|struct
name|mlx5_bf
modifier|*
name|bfs
decl_stmt|;
comment|/* 	 * protect uuar allocation data structs 	 */
name|struct
name|mutex
name|lock
decl_stmt|;
name|u32
name|ver
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_bf
block|{
name|void
name|__iomem
modifier|*
name|reg
decl_stmt|;
name|void
name|__iomem
modifier|*
name|regreg
decl_stmt|;
name|int
name|buf_size
decl_stmt|;
name|struct
name|mlx5_uar
modifier|*
name|uar
decl_stmt|;
name|unsigned
name|long
name|offset
decl_stmt|;
name|int
name|need_lock
decl_stmt|;
comment|/* protect blue flame buffer selection when needed 	 */
name|spinlock_t
name|lock
decl_stmt|;
comment|/* serialize 64 bit writes when done as two 32 bit accesses 	 */
name|spinlock_t
name|lock32
decl_stmt|;
name|int
name|uuarn
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_cmd_first
block|{
name|__be32
name|data
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|cache_ent
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|mlx5_fw_page
block|{
union|union
block|{
name|struct
name|rb_node
name|rb_node
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
block|}
union|;
name|struct
name|mlx5_cmd_first
name|first
decl_stmt|;
name|struct
name|mlx5_core_dev
modifier|*
name|dev
decl_stmt|;
name|bus_dmamap_t
name|dma_map
decl_stmt|;
name|bus_addr_t
name|dma_addr
decl_stmt|;
name|void
modifier|*
name|virt_addr
decl_stmt|;
name|struct
name|cache_ent
modifier|*
name|cache
decl_stmt|;
name|u32
name|numpages
decl_stmt|;
name|u16
name|load_done
decl_stmt|;
define|#
directive|define
name|MLX5_LOAD_ST_NONE
value|0
define|#
directive|define
name|MLX5_LOAD_ST_SUCCESS
value|1
define|#
directive|define
name|MLX5_LOAD_ST_FAILURE
value|2
name|u16
name|func_id
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|mlx5_cmd_msg
value|mlx5_fw_page
end_define

begin_struct
struct|struct
name|mlx5_cmd_debug
block|{
name|struct
name|dentry
modifier|*
name|dbg_root
decl_stmt|;
name|struct
name|dentry
modifier|*
name|dbg_in
decl_stmt|;
name|struct
name|dentry
modifier|*
name|dbg_out
decl_stmt|;
name|struct
name|dentry
modifier|*
name|dbg_outlen
decl_stmt|;
name|struct
name|dentry
modifier|*
name|dbg_status
decl_stmt|;
name|struct
name|dentry
modifier|*
name|dbg_run
decl_stmt|;
name|void
modifier|*
name|in_msg
decl_stmt|;
name|void
modifier|*
name|out_msg
decl_stmt|;
name|u8
name|status
decl_stmt|;
name|u16
name|inlen
decl_stmt|;
name|u16
name|outlen
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cache_ent
block|{
comment|/* protect block chain allocations 	 */
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|list_head
name|head
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cmd_msg_cache
block|{
name|struct
name|cache_ent
name|large
decl_stmt|;
name|struct
name|cache_ent
name|med
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_traffic_counter
block|{
name|u64
name|packets
decl_stmt|;
name|u64
name|octets
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_cmd_stats
block|{
name|u64
name|sum
decl_stmt|;
name|u64
name|n
decl_stmt|;
name|struct
name|dentry
modifier|*
name|root
decl_stmt|;
name|struct
name|dentry
modifier|*
name|avg
decl_stmt|;
name|struct
name|dentry
modifier|*
name|count
decl_stmt|;
comment|/* protect command average calculations */
name|spinlock_t
name|lock
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_cmd
block|{
name|struct
name|mlx5_fw_page
modifier|*
name|cmd_page
decl_stmt|;
name|bus_dma_tag_t
name|dma_tag
decl_stmt|;
name|struct
name|sx
name|dma_sx
decl_stmt|;
name|struct
name|mtx
name|dma_mtx
decl_stmt|;
define|#
directive|define
name|MLX5_DMA_OWNED
parameter_list|(
name|dev
parameter_list|)
value|mtx_owned(&(dev)->cmd.dma_mtx)
define|#
directive|define
name|MLX5_DMA_LOCK
parameter_list|(
name|dev
parameter_list|)
value|mtx_lock(&(dev)->cmd.dma_mtx)
define|#
directive|define
name|MLX5_DMA_UNLOCK
parameter_list|(
name|dev
parameter_list|)
value|mtx_unlock(&(dev)->cmd.dma_mtx)
name|struct
name|cv
name|dma_cv
decl_stmt|;
define|#
directive|define
name|MLX5_DMA_DONE
parameter_list|(
name|dev
parameter_list|)
value|cv_broadcast(&(dev)->cmd.dma_cv)
define|#
directive|define
name|MLX5_DMA_WAIT
parameter_list|(
name|dev
parameter_list|)
value|cv_wait(&(dev)->cmd.dma_cv,&(dev)->cmd.dma_mtx)
name|void
modifier|*
name|cmd_buf
decl_stmt|;
name|dma_addr_t
name|dma
decl_stmt|;
name|u16
name|cmdif_rev
decl_stmt|;
name|u8
name|log_sz
decl_stmt|;
name|u8
name|log_stride
decl_stmt|;
name|int
name|max_reg_cmds
decl_stmt|;
name|int
name|events
decl_stmt|;
name|u32
name|__iomem
modifier|*
name|vector
decl_stmt|;
comment|/* protect command queue allocations 	 */
name|spinlock_t
name|alloc_lock
decl_stmt|;
comment|/* protect token allocations 	 */
name|spinlock_t
name|token_lock
decl_stmt|;
name|u8
name|token
decl_stmt|;
name|unsigned
name|long
name|bitmask
decl_stmt|;
name|char
name|wq_name
index|[
name|MLX5_CMD_WQ_MAX_NAME
index|]
decl_stmt|;
name|struct
name|workqueue_struct
modifier|*
name|wq
decl_stmt|;
name|struct
name|semaphore
name|sem
decl_stmt|;
name|struct
name|semaphore
name|pages_sem
decl_stmt|;
name|int
name|mode
decl_stmt|;
name|struct
name|mlx5_cmd_work_ent
modifier|*
name|ent_arr
index|[
name|MLX5_MAX_COMMANDS
index|]
decl_stmt|;
name|struct
name|mlx5_cmd_debug
name|dbg
decl_stmt|;
name|struct
name|cmd_msg_cache
name|cache
decl_stmt|;
name|int
name|checksum_disabled
decl_stmt|;
name|struct
name|mlx5_cmd_stats
name|stats
index|[
name|MLX5_CMD_OP_MAX
index|]
decl_stmt|;
name|int
name|moving_to_polling
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_port_caps
block|{
name|int
name|gid_table_len
decl_stmt|;
name|int
name|pkey_table_len
decl_stmt|;
name|u8
name|ext_port_cap
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_buf
block|{
name|bus_dma_tag_t
name|dma_tag
decl_stmt|;
name|bus_dmamap_t
name|dma_map
decl_stmt|;
name|struct
name|mlx5_core_dev
modifier|*
name|dev
decl_stmt|;
struct|struct
block|{
name|void
modifier|*
name|buf
decl_stmt|;
block|}
name|direct
struct|;
name|u64
modifier|*
name|page_list
decl_stmt|;
name|int
name|npages
decl_stmt|;
name|int
name|size
decl_stmt|;
name|u8
name|page_shift
decl_stmt|;
name|u8
name|load_done
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_eq
block|{
name|struct
name|mlx5_core_dev
modifier|*
name|dev
decl_stmt|;
name|__be32
name|__iomem
modifier|*
name|doorbell
decl_stmt|;
name|u32
name|cons_index
decl_stmt|;
name|struct
name|mlx5_buf
name|buf
decl_stmt|;
name|int
name|size
decl_stmt|;
name|u8
name|irqn
decl_stmt|;
name|u8
name|eqn
decl_stmt|;
name|int
name|nent
decl_stmt|;
name|u64
name|mask
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
name|int
name|index
decl_stmt|;
name|struct
name|mlx5_rsc_debug
modifier|*
name|dbg
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_core_psv
block|{
name|u32
name|psv_idx
decl_stmt|;
struct|struct
name|psv_layout
block|{
name|u32
name|pd
decl_stmt|;
name|u16
name|syndrome
decl_stmt|;
name|u16
name|reserved
decl_stmt|;
name|u16
name|bg
decl_stmt|;
name|u16
name|app_tag
decl_stmt|;
name|u32
name|ref_tag
decl_stmt|;
block|}
name|psv
struct|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_core_sig_ctx
block|{
name|struct
name|mlx5_core_psv
name|psv_memory
decl_stmt|;
name|struct
name|mlx5_core_psv
name|psv_wire
decl_stmt|;
if|#
directive|if
operator|(
name|__FreeBSD_version
operator|>=
literal|1100000
operator|)
name|struct
name|ib_sig_err
name|err_item
decl_stmt|;
endif|#
directive|endif
name|bool
name|sig_status_checked
decl_stmt|;
name|bool
name|sig_err_exists
decl_stmt|;
name|u32
name|sigerr_count
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_core_mr
block|{
name|u64
name|iova
decl_stmt|;
name|u64
name|size
decl_stmt|;
name|u32
name|key
decl_stmt|;
name|u32
name|pd
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|mlx5_res_type
block|{
name|MLX5_RES_QP
init|=
name|MLX5_EVENT_QUEUE_TYPE_QP
block|,
name|MLX5_RES_RQ
init|=
name|MLX5_EVENT_QUEUE_TYPE_RQ
block|,
name|MLX5_RES_SQ
init|=
name|MLX5_EVENT_QUEUE_TYPE_SQ
block|,
name|MLX5_RES_SRQ
init|=
literal|3
block|,
name|MLX5_RES_XSRQ
init|=
literal|4
block|,
name|MLX5_RES_DCT
init|=
literal|5
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_core_rsc_common
block|{
name|enum
name|mlx5_res_type
name|res
decl_stmt|;
name|atomic_t
name|refcount
decl_stmt|;
name|struct
name|completion
name|free
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_core_srq
block|{
name|struct
name|mlx5_core_rsc_common
name|common
decl_stmt|;
comment|/* must be first */
name|u32
name|srqn
decl_stmt|;
name|int
name|max
decl_stmt|;
name|int
name|max_gs
decl_stmt|;
name|int
name|max_avail_gather
decl_stmt|;
name|int
name|wqe_shift
decl_stmt|;
name|void
function_decl|(
modifier|*
name|event
function_decl|)
parameter_list|(
name|struct
name|mlx5_core_srq
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|atomic_t
name|refcount
decl_stmt|;
name|struct
name|completion
name|free
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_eq_table
block|{
name|void
name|__iomem
modifier|*
name|update_ci
decl_stmt|;
name|void
name|__iomem
modifier|*
name|update_arm_ci
decl_stmt|;
name|struct
name|list_head
name|comp_eqs_list
decl_stmt|;
name|struct
name|mlx5_eq
name|pages_eq
decl_stmt|;
name|struct
name|mlx5_eq
name|async_eq
decl_stmt|;
name|struct
name|mlx5_eq
name|cmd_eq
decl_stmt|;
name|int
name|num_comp_vectors
decl_stmt|;
comment|/* protect EQs list 	 */
name|spinlock_t
name|lock
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_uar
block|{
name|u32
name|index
decl_stmt|;
name|void
name|__iomem
modifier|*
name|bf_map
decl_stmt|;
name|void
name|__iomem
modifier|*
name|map
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_core_health
block|{
name|struct
name|mlx5_health_buffer
name|__iomem
modifier|*
name|health
decl_stmt|;
name|__be32
name|__iomem
modifier|*
name|health_counter
decl_stmt|;
name|struct
name|timer_list
name|timer
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
name|u32
name|prev
decl_stmt|;
name|int
name|miss_counter
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|MLX5_CQ_LINEAR_ARRAY_SIZE
value|1024
end_define

begin_struct
struct|struct
name|mlx5_cq_linear_array_entry
block|{
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|mlx5_core_cq
modifier|*
specifier|volatile
name|cq
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_cq_table
block|{
comment|/* protect radix tree 	 */
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|radix_tree_root
name|tree
decl_stmt|;
name|struct
name|mlx5_cq_linear_array_entry
name|linear_array
index|[
name|MLX5_CQ_LINEAR_ARRAY_SIZE
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_qp_table
block|{
comment|/* protect radix tree 	 */
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|radix_tree_root
name|tree
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_srq_table
block|{
comment|/* protect radix tree 	 */
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|radix_tree_root
name|tree
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_mr_table
block|{
comment|/* protect radix tree 	 */
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|radix_tree_root
name|tree
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_irq_info
block|{
name|char
name|name
index|[
name|MLX5_MAX_IRQ_NAME
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_priv
block|{
name|char
name|name
index|[
name|MLX5_MAX_NAME_LEN
index|]
decl_stmt|;
name|struct
name|mlx5_eq_table
name|eq_table
decl_stmt|;
name|struct
name|msix_entry
modifier|*
name|msix_arr
decl_stmt|;
name|struct
name|mlx5_irq_info
modifier|*
name|irq_info
decl_stmt|;
name|struct
name|mlx5_uuar_info
name|uuari
decl_stmt|;
name|MLX5_DECLARE_DOORBELL_LOCK
argument_list|(
name|cq_uar_lock
argument_list|)
expr_stmt|;
name|struct
name|io_mapping
modifier|*
name|bf_mapping
decl_stmt|;
comment|/* pages stuff */
name|struct
name|workqueue_struct
modifier|*
name|pg_wq
decl_stmt|;
name|struct
name|rb_root
name|page_root
decl_stmt|;
name|s64
name|fw_pages
decl_stmt|;
name|atomic_t
name|reg_pages
decl_stmt|;
name|s64
name|pages_per_func
index|[
name|MLX5_MAX_NUMBER_OF_VFS
index|]
decl_stmt|;
name|struct
name|mlx5_core_health
name|health
decl_stmt|;
name|struct
name|mlx5_srq_table
name|srq_table
decl_stmt|;
comment|/* start: qp staff */
name|struct
name|mlx5_qp_table
name|qp_table
decl_stmt|;
name|struct
name|dentry
modifier|*
name|qp_debugfs
decl_stmt|;
name|struct
name|dentry
modifier|*
name|eq_debugfs
decl_stmt|;
name|struct
name|dentry
modifier|*
name|cq_debugfs
decl_stmt|;
name|struct
name|dentry
modifier|*
name|cmdif_debugfs
decl_stmt|;
comment|/* end: qp staff */
comment|/* start: cq staff */
name|struct
name|mlx5_cq_table
name|cq_table
decl_stmt|;
comment|/* end: cq staff */
comment|/* start: mr staff */
name|struct
name|mlx5_mr_table
name|mr_table
decl_stmt|;
comment|/* end: mr staff */
comment|/* start: alloc staff */
name|int
name|numa_node
decl_stmt|;
name|struct
name|mutex
name|pgdir_mutex
decl_stmt|;
name|struct
name|list_head
name|pgdir_list
decl_stmt|;
comment|/* end: alloc staff */
name|struct
name|dentry
modifier|*
name|dbg_root
decl_stmt|;
comment|/* protect mkey key part */
name|spinlock_t
name|mkey_lock
decl_stmt|;
name|u8
name|mkey_key
decl_stmt|;
name|struct
name|list_head
name|dev_list
decl_stmt|;
name|struct
name|list_head
name|ctx_list
decl_stmt|;
name|spinlock_t
name|ctx_lock
decl_stmt|;
name|unsigned
name|long
name|pci_dev_data
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|mlx5_device_state
block|{
name|MLX5_DEVICE_STATE_UP
block|,
name|MLX5_DEVICE_STATE_INTERNAL_ERROR
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_special_contexts
block|{
name|int
name|resd_lkey
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|mlx5_flow_root_namespace
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|mlx5_core_dev
block|{
name|struct
name|pci_dev
modifier|*
name|pdev
decl_stmt|;
name|char
name|board_id
index|[
name|MLX5_BOARD_ID_LEN
index|]
decl_stmt|;
name|struct
name|mlx5_cmd
name|cmd
decl_stmt|;
name|struct
name|mlx5_port_caps
name|port_caps
index|[
name|MLX5_MAX_PORTS
index|]
decl_stmt|;
name|u32
name|hca_caps_cur
index|[
name|MLX5_CAP_NUM
index|]
index|[
name|MLX5_UN_SZ_DW
argument_list|(
name|hca_cap_union
argument_list|)
index|]
decl_stmt|;
name|u32
name|hca_caps_max
index|[
name|MLX5_CAP_NUM
index|]
index|[
name|MLX5_UN_SZ_DW
argument_list|(
name|hca_cap_union
argument_list|)
index|]
decl_stmt|;
name|phys_addr_t
name|iseg_base
decl_stmt|;
name|struct
name|mlx5_init_seg
name|__iomem
modifier|*
name|iseg
decl_stmt|;
name|enum
name|mlx5_device_state
name|state
decl_stmt|;
name|void
function_decl|(
modifier|*
name|event
function_decl|)
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|enum
name|mlx5_dev_event
name|event
parameter_list|,
name|unsigned
name|long
name|param
parameter_list|)
function_decl|;
name|struct
name|mlx5_priv
name|priv
decl_stmt|;
name|struct
name|mlx5_profile
modifier|*
name|profile
decl_stmt|;
name|atomic_t
name|num_qps
decl_stmt|;
name|u32
name|issi
decl_stmt|;
name|struct
name|mlx5_special_contexts
name|special_contexts
decl_stmt|;
name|unsigned
name|int
name|module_status
index|[
name|MLX5_MAX_PORTS
index|]
decl_stmt|;
name|struct
name|mlx5_flow_root_namespace
modifier|*
name|root_ns
decl_stmt|;
name|struct
name|mlx5_flow_root_namespace
modifier|*
name|fdb_root_ns
decl_stmt|;
name|struct
name|mlx5_flow_root_namespace
modifier|*
name|esw_egress_root_ns
decl_stmt|;
name|struct
name|mlx5_flow_root_namespace
modifier|*
name|esw_ingress_root_ns
decl_stmt|;
name|struct
name|mlx5_flow_root_namespace
modifier|*
name|sniffer_rx_root_ns
decl_stmt|;
name|struct
name|mlx5_flow_root_namespace
modifier|*
name|sniffer_tx_root_ns
decl_stmt|;
name|u32
name|num_q_counter_allocated
index|[
name|MLX5_INTERFACE_NUMBER
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
block|{
name|MLX5_WOL_DISABLE
init|=
literal|0
block|,
name|MLX5_WOL_SECURED_MAGIC
init|=
literal|1
operator|<<
literal|1
block|,
name|MLX5_WOL_MAGIC
init|=
literal|1
operator|<<
literal|2
block|,
name|MLX5_WOL_ARP
init|=
literal|1
operator|<<
literal|3
block|,
name|MLX5_WOL_BROADCAST
init|=
literal|1
operator|<<
literal|4
block|,
name|MLX5_WOL_MULTICAST
init|=
literal|1
operator|<<
literal|5
block|,
name|MLX5_WOL_UNICAST
init|=
literal|1
operator|<<
literal|6
block|,
name|MLX5_WOL_PHY_ACTIVITY
init|=
literal|1
operator|<<
literal|7
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_db
block|{
name|__be32
modifier|*
name|db
decl_stmt|;
union|union
block|{
name|struct
name|mlx5_db_pgdir
modifier|*
name|pgdir
decl_stmt|;
name|struct
name|mlx5_ib_user_db_page
modifier|*
name|user_page
decl_stmt|;
block|}
name|u
union|;
name|dma_addr_t
name|dma
decl_stmt|;
name|int
name|index
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_net_counters
block|{
name|u64
name|packets
decl_stmt|;
name|u64
name|octets
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ptys_reg
block|{
name|u8
name|an_dis_admin
decl_stmt|;
name|u8
name|an_dis_ap
decl_stmt|;
name|u8
name|local_port
decl_stmt|;
name|u8
name|proto_mask
decl_stmt|;
name|u32
name|eth_proto_cap
decl_stmt|;
name|u16
name|ib_link_width_cap
decl_stmt|;
name|u16
name|ib_proto_cap
decl_stmt|;
name|u32
name|eth_proto_admin
decl_stmt|;
name|u16
name|ib_link_width_admin
decl_stmt|;
name|u16
name|ib_proto_admin
decl_stmt|;
name|u32
name|eth_proto_oper
decl_stmt|;
name|u16
name|ib_link_width_oper
decl_stmt|;
name|u16
name|ib_proto_oper
decl_stmt|;
name|u32
name|eth_proto_lp_advertise
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_pvlc_reg
block|{
name|u8
name|local_port
decl_stmt|;
name|u8
name|vl_hw_cap
decl_stmt|;
name|u8
name|vl_admin
decl_stmt|;
name|u8
name|vl_operational
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_pmtu_reg
block|{
name|u8
name|local_port
decl_stmt|;
name|u16
name|max_mtu
decl_stmt|;
name|u16
name|admin_mtu
decl_stmt|;
name|u16
name|oper_mtu
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_vport_counters
block|{
name|struct
name|mlx5_net_counters
name|received_errors
decl_stmt|;
name|struct
name|mlx5_net_counters
name|transmit_errors
decl_stmt|;
name|struct
name|mlx5_net_counters
name|received_ib_unicast
decl_stmt|;
name|struct
name|mlx5_net_counters
name|transmitted_ib_unicast
decl_stmt|;
name|struct
name|mlx5_net_counters
name|received_ib_multicast
decl_stmt|;
name|struct
name|mlx5_net_counters
name|transmitted_ib_multicast
decl_stmt|;
name|struct
name|mlx5_net_counters
name|received_eth_broadcast
decl_stmt|;
name|struct
name|mlx5_net_counters
name|transmitted_eth_broadcast
decl_stmt|;
name|struct
name|mlx5_net_counters
name|received_eth_unicast
decl_stmt|;
name|struct
name|mlx5_net_counters
name|transmitted_eth_unicast
decl_stmt|;
name|struct
name|mlx5_net_counters
name|received_eth_multicast
decl_stmt|;
name|struct
name|mlx5_net_counters
name|transmitted_eth_multicast
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
block|{
name|MLX5_DB_PER_PAGE
init|=
name|MLX5_ADAPTER_PAGE_SIZE
operator|/
name|L1_CACHE_BYTES
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_core_dct
block|{
name|struct
name|mlx5_core_rsc_common
name|common
decl_stmt|;
comment|/* must be first */
name|void
function_decl|(
modifier|*
name|event
function_decl|)
parameter_list|(
name|struct
name|mlx5_core_dct
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
name|dctn
decl_stmt|;
name|struct
name|completion
name|drained
decl_stmt|;
name|struct
name|mlx5_rsc_debug
modifier|*
name|dbg
decl_stmt|;
name|int
name|pid
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
block|{
name|MLX5_COMP_EQ_SIZE
init|=
literal|1024
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_PTYS_IB
init|=
literal|1
operator|<<
literal|0
block|,
name|MLX5_PTYS_EN
init|=
literal|1
operator|<<
literal|2
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_db_pgdir
block|{
name|struct
name|list_head
name|list
decl_stmt|;
name|DECLARE_BITMAP
argument_list|(
name|bitmap
argument_list|,
name|MLX5_DB_PER_PAGE
argument_list|)
expr_stmt|;
name|struct
name|mlx5_fw_page
modifier|*
name|fw_page
decl_stmt|;
name|__be32
modifier|*
name|db_page
decl_stmt|;
name|dma_addr_t
name|db_dma
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|mlx5_cmd_cbk_t
function_decl|)
parameter_list|(
name|int
name|status
parameter_list|,
name|void
modifier|*
name|context
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|mlx5_cmd_work_ent
block|{
name|struct
name|mlx5_cmd_msg
modifier|*
name|in
decl_stmt|;
name|struct
name|mlx5_cmd_msg
modifier|*
name|out
decl_stmt|;
name|int
name|uin_size
decl_stmt|;
name|void
modifier|*
name|uout
decl_stmt|;
name|int
name|uout_size
decl_stmt|;
name|mlx5_cmd_cbk_t
name|callback
decl_stmt|;
name|void
modifier|*
name|context
decl_stmt|;
name|int
name|idx
decl_stmt|;
name|struct
name|completion
name|done
decl_stmt|;
name|struct
name|mlx5_cmd
modifier|*
name|cmd
decl_stmt|;
name|struct
name|work_struct
name|work
decl_stmt|;
name|struct
name|mlx5_cmd_layout
modifier|*
name|lay
decl_stmt|;
name|int
name|ret
decl_stmt|;
name|int
name|page_queue
decl_stmt|;
name|u8
name|status
decl_stmt|;
name|u8
name|token
decl_stmt|;
name|u64
name|ts1
decl_stmt|;
name|u64
name|ts2
decl_stmt|;
name|u16
name|op
decl_stmt|;
name|u8
name|busy
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_pas
block|{
name|u64
name|pa
decl_stmt|;
name|u8
name|log_sz
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|port_state_policy
block|{
name|MLX5_POLICY_DOWN
init|=
literal|0
block|,
name|MLX5_POLICY_UP
init|=
literal|1
block|,
name|MLX5_POLICY_FOLLOW
init|=
literal|2
block|,
name|MLX5_POLICY_INVALID
init|=
literal|0xffffffff
block|}
enum|;
end_enum

begin_function
specifier|static
specifier|inline
name|void
modifier|*
name|mlx5_buf_offset
parameter_list|(
name|struct
name|mlx5_buf
modifier|*
name|buf
parameter_list|,
name|int
name|offset
parameter_list|)
block|{
return|return
operator|(
operator|(
name|char
operator|*
operator|)
name|buf
operator|->
name|direct
operator|.
name|buf
operator|+
name|offset
operator|)
return|;
block|}
end_function

begin_decl_stmt
specifier|extern
name|struct
name|workqueue_struct
modifier|*
name|mlx5_core_wq
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|STRUCT_FIELD
parameter_list|(
name|header
parameter_list|,
name|field
parameter_list|)
define|\
value|.struct_offset_bytes = offsetof(struct ib_unpacked_ ## header, field),      \ 	.struct_size_bytes   = sizeof((struct ib_unpacked_ ## header *)0)->field
end_define

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_core_dev
modifier|*
name|pci2mlx5_core_dev
parameter_list|(
name|struct
name|pci_dev
modifier|*
name|pdev
parameter_list|)
block|{
return|return
name|pci_get_drvdata
argument_list|(
name|pdev
argument_list|)
return|;
block|}
end_function

begin_decl_stmt
specifier|extern
name|struct
name|dentry
modifier|*
name|mlx5_debugfs_root
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
specifier|inline
name|u16
name|fw_rev_maj
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
block|{
return|return
name|ioread32be
argument_list|(
operator|&
name|dev
operator|->
name|iseg
operator|->
name|fw_rev
argument_list|)
operator|&
literal|0xffff
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u16
name|fw_rev_min
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
block|{
return|return
name|ioread32be
argument_list|(
operator|&
name|dev
operator|->
name|iseg
operator|->
name|fw_rev
argument_list|)
operator|>>
literal|16
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u16
name|fw_rev_sub
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
block|{
return|return
name|ioread32be
argument_list|(
operator|&
name|dev
operator|->
name|iseg
operator|->
name|cmdif_rev_fw_sub
argument_list|)
operator|&
literal|0xffff
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u16
name|cmdif_rev_get
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
block|{
return|return
name|ioread32be
argument_list|(
operator|&
name|dev
operator|->
name|iseg
operator|->
name|cmdif_rev_fw_sub
argument_list|)
operator|>>
literal|16
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|mlx5_get_gid_table_len
parameter_list|(
name|u16
name|param
parameter_list|)
block|{
if|if
condition|(
name|param
operator|>
literal|4
condition|)
block|{
name|printf
argument_list|(
literal|"M4_CORE_DRV_NAME: WARN: "
literal|"gid table length is zero\n"
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
return|return
literal|8
operator|*
operator|(
literal|1
operator|<<
name|param
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
modifier|*
name|mlx5_vzalloc
parameter_list|(
name|unsigned
name|long
name|size
parameter_list|)
block|{
name|void
modifier|*
name|rtn
decl_stmt|;
name|rtn
operator|=
name|kzalloc
argument_list|(
name|size
argument_list|,
name|GFP_KERNEL
operator||
name|__GFP_NOWARN
argument_list|)
expr_stmt|;
return|return
name|rtn
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
modifier|*
name|mlx5_vmalloc
parameter_list|(
name|unsigned
name|long
name|size
parameter_list|)
block|{
name|void
modifier|*
name|rtn
decl_stmt|;
name|rtn
operator|=
name|kmalloc
argument_list|(
name|size
argument_list|,
name|GFP_KERNEL
operator||
name|__GFP_NOWARN
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|rtn
condition|)
name|rtn
operator|=
name|vmalloc
argument_list|(
name|size
argument_list|)
expr_stmt|;
return|return
name|rtn
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u32
name|mlx5_base_mkey
parameter_list|(
specifier|const
name|u32
name|key
parameter_list|)
block|{
return|return
name|key
operator|&
literal|0xffffff00u
return|;
block|}
end_function

begin_function_decl
name|void
name|mlx5_enter_error_state
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_cmd_init
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cmd_cleanup
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cmd_use_events
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cmd_use_polling
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_cmd_status_to_err
parameter_list|(
name|struct
name|mlx5_outbox_hdr
modifier|*
name|hdr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_cmd_status_to_err_v2
parameter_list|(
name|void
modifier|*
name|ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_get_caps
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|enum
name|mlx5_cap_type
name|cap_type
parameter_list|,
name|enum
name|mlx5_cap_mode
name|cap_mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_cmd_exec
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|in
parameter_list|,
name|int
name|in_size
parameter_list|,
name|void
modifier|*
name|out
parameter_list|,
name|int
name|out_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_cmd_exec_cb
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|in
parameter_list|,
name|int
name|in_size
parameter_list|,
name|void
modifier|*
name|out
parameter_list|,
name|int
name|out_size
parameter_list|,
name|mlx5_cmd_cbk_t
name|callback
parameter_list|,
name|void
modifier|*
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_cmd_alloc_uar
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
modifier|*
name|uarn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_cmd_free_uar
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|uarn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_alloc_uuars
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_uuar_info
modifier|*
name|uuari
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_free_uuars
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_uuar_info
modifier|*
name|uuari
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_alloc_map_uar
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|mdev
parameter_list|,
name|struct
name|mlx5_uar
modifier|*
name|uar
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_unmap_free_uar
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|mdev
parameter_list|,
name|struct
name|mlx5_uar
modifier|*
name|uar
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_health_cleanup
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__init
name|mlx5_health_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_start_health_poll
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_stop_health_poll
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|mlx5_buf_alloc_node
parameter_list|(
name|dev
parameter_list|,
name|size
parameter_list|,
name|direct
parameter_list|,
name|buf
parameter_list|,
name|node
parameter_list|)
define|\
value|mlx5_buf_alloc(dev, size, direct, buf)
end_define

begin_function_decl
name|int
name|mlx5_buf_alloc
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|int
name|size
parameter_list|,
name|int
name|max_direct
parameter_list|,
name|struct
name|mlx5_buf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_buf_free
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_buf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_create_srq
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_core_srq
modifier|*
name|srq
parameter_list|,
name|struct
name|mlx5_create_srq_mbox_in
modifier|*
name|in
parameter_list|,
name|int
name|inlen
parameter_list|,
name|int
name|is_xrc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_destroy_srq
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_core_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_query_srq
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_core_srq
modifier|*
name|srq
parameter_list|,
name|struct
name|mlx5_query_srq_mbox_out
modifier|*
name|out
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_query_vendor_id
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|mdev
parameter_list|,
name|u32
modifier|*
name|vendor_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_arm_srq
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_core_srq
modifier|*
name|srq
parameter_list|,
name|u16
name|lwm
parameter_list|,
name|int
name|is_srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_init_mr_table
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cleanup_mr_table
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_create_mkey
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_core_mr
modifier|*
name|mr
parameter_list|,
name|struct
name|mlx5_create_mkey_mbox_in
modifier|*
name|in
parameter_list|,
name|int
name|inlen
parameter_list|,
name|mlx5_cmd_cbk_t
name|callback
parameter_list|,
name|void
modifier|*
name|context
parameter_list|,
name|struct
name|mlx5_create_mkey_mbox_out
modifier|*
name|out
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_destroy_mkey
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_core_mr
modifier|*
name|mr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_query_mkey
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_core_mr
modifier|*
name|mr
parameter_list|,
name|struct
name|mlx5_query_mkey_mbox_out
modifier|*
name|out
parameter_list|,
name|int
name|outlen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_dump_fill_mkey
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_core_mr
modifier|*
name|mr
parameter_list|,
name|u32
modifier|*
name|mkey
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_alloc_pd
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
modifier|*
name|pdn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_dealloc_pd
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|pdn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_mad_ifc
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
specifier|const
name|void
modifier|*
name|inb
parameter_list|,
name|void
modifier|*
name|outb
parameter_list|,
name|u16
name|opmod
parameter_list|,
name|u8
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_fwp_flush
parameter_list|(
name|struct
name|mlx5_fw_page
modifier|*
name|fwp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_fwp_invalidate
parameter_list|(
name|struct
name|mlx5_fw_page
modifier|*
name|fwp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|mlx5_fw_page
modifier|*
name|mlx5_fwp_alloc
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|gfp_t
name|flags
parameter_list|,
name|unsigned
name|num
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_fwp_free
parameter_list|(
name|struct
name|mlx5_fw_page
modifier|*
name|fwp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u64
name|mlx5_fwp_get_dma
parameter_list|(
name|struct
name|mlx5_fw_page
modifier|*
name|fwp
parameter_list|,
name|size_t
name|offset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|mlx5_fwp_get_virt
parameter_list|(
name|struct
name|mlx5_fw_page
modifier|*
name|fwp
parameter_list|,
name|size_t
name|offset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_pagealloc_init
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_pagealloc_cleanup
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_pagealloc_start
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_pagealloc_stop
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_core_req_pages_handler
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u16
name|func_id
parameter_list|,
name|s32
name|npages
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_satisfy_startup_pages
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|int
name|boot
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_reclaim_startup_pages
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|s64
name|mlx5_wait_for_reclaim_vfs_pages
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_register_debugfs
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_unregister_debugfs
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_eq_init
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_eq_cleanup
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_fill_page_array
parameter_list|(
name|struct
name|mlx5_buf
modifier|*
name|buf
parameter_list|,
name|__be64
modifier|*
name|pas
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cq_completion
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|cqn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_rsc_event
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|rsn
parameter_list|,
name|int
name|event_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_srq_event
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|srqn
parameter_list|,
name|int
name|event_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|mlx5_core_srq
modifier|*
name|mlx5_core_get_srq
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|srqn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cmd_comp_handler
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|vector
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_trigger_cmd_completions
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cq_event
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|cqn
parameter_list|,
name|int
name|event_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_create_map_eq
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_eq
modifier|*
name|eq
parameter_list|,
name|u8
name|vecidx
parameter_list|,
name|int
name|nent
parameter_list|,
name|u64
name|mask
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|struct
name|mlx5_uar
modifier|*
name|uar
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_destroy_unmap_eq
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_eq
modifier|*
name|eq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_start_eqs
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_stop_eqs
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_vector2eqn
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|int
name|vector
parameter_list|,
name|int
modifier|*
name|eqn
parameter_list|,
name|int
modifier|*
name|irqn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_attach_mcg
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|union
name|ib_gid
modifier|*
name|mgid
parameter_list|,
name|u32
name|qpn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_detach_mcg
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|union
name|ib_gid
modifier|*
name|mgid
parameter_list|,
name|u32
name|qpn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_set_dc_cnak_trace
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|int
name|enable
parameter_list|,
name|u64
name|addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_qp_debugfs_init
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_qp_debugfs_cleanup
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_access_reg
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data_in
parameter_list|,
name|int
name|size_in
parameter_list|,
name|void
modifier|*
name|data_out
parameter_list|,
name|int
name|size_out
parameter_list|,
name|u16
name|reg_num
parameter_list|,
name|int
name|arg
parameter_list|,
name|int
name|write
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_toggle_port_link
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_set_port_caps
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|port_num
parameter_list|,
name|u32
name|caps
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_ptys
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
modifier|*
name|ptys
parameter_list|,
name|int
name|ptys_size
parameter_list|,
name|int
name|proto_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_proto_cap
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
modifier|*
name|proto_cap
parameter_list|,
name|int
name|proto_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_autoneg
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|int
name|proto_mask
parameter_list|,
name|u8
modifier|*
name|an_disable_cap
parameter_list|,
name|u8
modifier|*
name|an_disable_status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_set_port_autoneg
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|bool
name|disable
parameter_list|,
name|u32
name|eth_proto_admin
parameter_list|,
name|int
name|proto_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_proto_admin
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
modifier|*
name|proto_admin
parameter_list|,
name|int
name|proto_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_set_port_proto
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|proto_admin
parameter_list|,
name|int
name|proto_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_set_port_status
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|enum
name|mlx5_port_status
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_status
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u8
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_admin_status
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|enum
name|mlx5_port_status
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_set_port_pause
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|port
parameter_list|,
name|u32
name|rx_pause
parameter_list|,
name|u32
name|tx_pause
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_pause
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|port
parameter_list|,
name|u32
modifier|*
name|rx_pause
parameter_list|,
name|u32
modifier|*
name|tx_pause
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_set_port_pfc
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|pfc_en_tx
parameter_list|,
name|u8
name|pfc_en_rx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_pfc
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u8
modifier|*
name|pfc_en_tx
parameter_list|,
name|u8
modifier|*
name|pfc_en_rx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_set_port_mtu
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|int
name|mtu
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_max_mtu
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|int
modifier|*
name|max_mtu
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_oper_mtu
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|int
modifier|*
name|oper_mtu
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|int
name|mlx5_query_module_status
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|int
name|module_num
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_module_num
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|int
modifier|*
name|module_num
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_eeprom
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|int
name|i2c_addr
parameter_list|,
name|int
name|page_num
parameter_list|,
name|int
name|device_addr
parameter_list|,
name|int
name|size
parameter_list|,
name|int
name|module_num
parameter_list|,
name|u32
modifier|*
name|data
parameter_list|,
name|int
modifier|*
name|size_read
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_debug_eq_add
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_eq
modifier|*
name|eq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_debug_eq_remove
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_eq
modifier|*
name|eq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_eq_query
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_eq
modifier|*
name|eq
parameter_list|,
name|struct
name|mlx5_query_eq_mbox_out
modifier|*
name|out
parameter_list|,
name|int
name|outlen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_eq_debugfs_init
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_eq_debugfs_cleanup
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_cq_debugfs_init
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cq_debugfs_cleanup
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_db_alloc
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_db
modifier|*
name|db
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_db_alloc_node
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_db
modifier|*
name|db
parameter_list|,
name|int
name|node
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_db_free
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_db
modifier|*
name|db
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|mlx5_command_str
parameter_list|(
name|int
name|command
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_cmdif_debugfs_init
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cmdif_debugfs_cleanup
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_create_psv
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u32
name|pdn
parameter_list|,
name|int
name|npsvs
parameter_list|,
name|u32
modifier|*
name|sig_index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_destroy_psv
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|int
name|psv_num
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_core_put_rsc
parameter_list|(
name|struct
name|mlx5_core_rsc_common
modifier|*
name|common
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
name|mlx5_is_wol_supported
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_set_wol
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|wol_mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_set_dropless_mode
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u16
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_dropless_mode
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u16
modifier|*
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_wol
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u8
modifier|*
name|wol_mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_access_pvlc
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_pvlc_reg
modifier|*
name|pvlc
parameter_list|,
name|int
name|write
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_access_ptys
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_ptys_reg
modifier|*
name|ptys
parameter_list|,
name|int
name|write
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_core_access_pmtu
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mlx5_pmtu_reg
modifier|*
name|pmtu
parameter_list|,
name|int
name|write
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_vxlan_udp_port_add
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u16
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_vxlan_udp_port_delete
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|u16
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_cong_status
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|mdev
parameter_list|,
name|int
name|protocol
parameter_list|,
name|int
name|priority
parameter_list|,
name|int
modifier|*
name|is_enable
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_modify_port_cong_status
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|mdev
parameter_list|,
name|int
name|protocol
parameter_list|,
name|int
name|priority
parameter_list|,
name|int
name|enable
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_cong_params
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|mdev
parameter_list|,
name|int
name|protocol
parameter_list|,
name|void
modifier|*
name|out
parameter_list|,
name|int
name|out_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_modify_port_cong_params
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|mdev
parameter_list|,
name|void
modifier|*
name|in
parameter_list|,
name|int
name|in_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port_cong_statistics
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|mdev
parameter_list|,
name|int
name|clear
parameter_list|,
name|void
modifier|*
name|out
parameter_list|,
name|int
name|out_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_set_diagnostic_params
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|mdev
parameter_list|,
name|void
modifier|*
name|in
parameter_list|,
name|int
name|in_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_diagnostic_counters
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|mdev
parameter_list|,
name|u8
name|num_of_samples
parameter_list|,
name|u16
name|sample_index
parameter_list|,
name|void
modifier|*
name|out
parameter_list|,
name|int
name|out_size
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|u32
name|mlx5_mkey_to_idx
parameter_list|(
name|u32
name|mkey
parameter_list|)
block|{
return|return
name|mkey
operator|>>
literal|8
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u32
name|mlx5_idx_to_mkey
parameter_list|(
name|u32
name|mkey_idx
parameter_list|)
block|{
return|return
name|mkey_idx
operator|<<
literal|8
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u8
name|mlx5_mkey_variant
parameter_list|(
name|u32
name|mkey
parameter_list|)
block|{
return|return
name|mkey
operator|&
literal|0xff
return|;
block|}
end_function

begin_enum
enum|enum
block|{
name|MLX5_PROF_MASK_QP_SIZE
init|=
operator|(
name|u64
operator|)
literal|1
operator|<<
literal|0
block|,
name|MLX5_PROF_MASK_MR_CACHE
init|=
operator|(
name|u64
operator|)
literal|1
operator|<<
literal|1
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MAX_MR_CACHE_ENTRIES
init|=
literal|15
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_interface
block|{
name|void
modifier|*
function_decl|(
modifier|*
name|add
function_decl|)
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|remove
function_decl|)
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|context
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|event
function_decl|)
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|context
parameter_list|,
name|enum
name|mlx5_dev_event
name|event
parameter_list|,
name|unsigned
name|long
name|param
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|get_dev
function_decl|)
parameter_list|(
name|void
modifier|*
name|context
parameter_list|)
function_decl|;
name|int
name|protocol
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|void
modifier|*
name|mlx5_get_protocol_dev
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|mdev
parameter_list|,
name|int
name|protocol
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_register_interface
parameter_list|(
name|struct
name|mlx5_interface
modifier|*
name|intf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_unregister_interface
parameter_list|(
name|struct
name|mlx5_interface
modifier|*
name|intf
parameter_list|)
function_decl|;
end_function_decl

begin_struct
struct|struct
name|mlx5_profile
block|{
name|u64
name|mask
decl_stmt|;
name|u8
name|log_max_qp
decl_stmt|;
struct|struct
block|{
name|int
name|size
decl_stmt|;
name|int
name|limit
decl_stmt|;
block|}
name|mr_cache
index|[
name|MAX_MR_CACHE_ENTRIES
index|]
struct|;
block|}
struct|;
end_struct

begin_enum
enum|enum
block|{
name|MLX5_PCI_DEV_IS_VF
init|=
literal|1
operator|<<
literal|0
block|, }
enum|;
end_enum

begin_function
specifier|static
specifier|inline
name|int
name|mlx5_core_is_pf
parameter_list|(
name|struct
name|mlx5_core_dev
modifier|*
name|dev
parameter_list|)
block|{
return|return
operator|!
operator|(
name|dev
operator|->
name|priv
operator|.
name|pci_dev_data
operator|&
name|MLX5_PCI_DEV_IS_VF
operator|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|MLX5_EEPROM_MAX_BYTES
value|32
end_define

begin_define
define|#
directive|define
name|MLX5_EEPROM_IDENTIFIER_BYTE_MASK
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|MLX5_EEPROM_REVISION_ID_BYTE_MASK
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|MLX5_EEPROM_PAGE_3_VALID_BIT_MASK
value|0x00040000
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* MLX5_DRIVER_H */
end_comment

end_unit

