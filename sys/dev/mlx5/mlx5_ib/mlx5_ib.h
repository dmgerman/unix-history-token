begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2013-2015, Mellanox Technologies, Ltd.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS `AS IS' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MLX5_IB_H
end_ifndef

begin_define
define|#
directive|define
name|MLX5_IB_H
end_define

begin_include
include|#
directive|include
file|<linux/kernel.h>
end_include

begin_include
include|#
directive|include
file|<linux/sched.h>
end_include

begin_include
include|#
directive|include
file|<linux/printk.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_verbs.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_smi.h>
end_include

begin_include
include|#
directive|include
file|<dev/mlx5/cq.h>
end_include

begin_include
include|#
directive|include
file|<dev/mlx5/qp.h>
end_include

begin_include
include|#
directive|include
file|<dev/mlx5/srq.h>
end_include

begin_include
include|#
directive|include
file|<linux/types.h>
end_include

begin_include
include|#
directive|include
file|<dev/mlx5/mlx5_core/transobj.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_user_verbs.h>
end_include

begin_include
include|#
directive|include
file|<rdma/mlx5-abi.h>
end_include

begin_define
define|#
directive|define
name|mlx5_ib_dbg
parameter_list|(
name|dev
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|pr_debug("%s:%s:%d:(pid %d): " format, (dev)->ib_dev.name, __func__,	\ 	 __LINE__, current->pid, ##arg)
end_define

begin_define
define|#
directive|define
name|mlx5_ib_err
parameter_list|(
name|dev
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|pr_err("%s:%s:%d:(pid %d): " format, (dev)->ib_dev.name, __func__,	\ 	__LINE__, current->pid, ##arg)
end_define

begin_define
define|#
directive|define
name|mlx5_ib_warn
parameter_list|(
name|dev
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|pr_warn("%s:%s:%d:(pid %d): " format, (dev)->ib_dev.name, __func__,	\ 	__LINE__, current->pid, ##arg)
end_define

begin_define
define|#
directive|define
name|field_avail
parameter_list|(
name|type
parameter_list|,
name|fld
parameter_list|,
name|sz
parameter_list|)
value|(offsetof(type, fld) +		\ 				    sizeof(((type *)0)->fld)<= (sz))
end_define

begin_define
define|#
directive|define
name|MLX5_IB_DEFAULT_UIDX
value|0xffffff
end_define

begin_define
define|#
directive|define
name|MLX5_USER_ASSIGNED_UIDX_MASK
value|__mlx5_mask(qpc, user_index)
end_define

begin_enum
enum|enum
block|{
name|MLX5_IB_MMAP_CMD_SHIFT
init|=
literal|8
block|,
name|MLX5_IB_MMAP_CMD_MASK
init|=
literal|0xff
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|mlx5_ib_mmap_cmd
block|{
name|MLX5_IB_MMAP_REGULAR_PAGE
init|=
literal|0
block|,
name|MLX5_IB_MMAP_GET_CONTIGUOUS_PAGES
init|=
literal|1
block|,
name|MLX5_IB_MMAP_WC_PAGE
init|=
literal|2
block|,
name|MLX5_IB_MMAP_NC_PAGE
init|=
literal|3
block|,
comment|/* 5 is chosen in order to be compatible with old versions of libmlx5 */
name|MLX5_IB_MMAP_CORE_CLOCK
init|=
literal|5
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_RES_SCAT_DATA32_CQE
init|=
literal|0x1
block|,
name|MLX5_RES_SCAT_DATA64_CQE
init|=
literal|0x2
block|,
name|MLX5_REQ_SCAT_DATA32_CQE
init|=
literal|0x11
block|,
name|MLX5_REQ_SCAT_DATA64_CQE
init|=
literal|0x22
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|mlx5_ib_latency_class
block|{
name|MLX5_IB_LATENCY_CLASS_LOW
block|,
name|MLX5_IB_LATENCY_CLASS_MEDIUM
block|,
name|MLX5_IB_LATENCY_CLASS_HIGH
block|,
name|MLX5_IB_LATENCY_CLASS_FAST_PATH
block|}
enum|;
end_enum

begin_enum
enum|enum
name|mlx5_ib_mad_ifc_flags
block|{
name|MLX5_MAD_IFC_IGNORE_MKEY
init|=
literal|1
block|,
name|MLX5_MAD_IFC_IGNORE_BKEY
init|=
literal|2
block|,
name|MLX5_MAD_IFC_NET_VIEW
init|=
literal|4
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_CROSS_CHANNEL_UUAR
init|=
literal|0
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_CQE_VERSION_V0
block|,
name|MLX5_CQE_VERSION_V1
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_ib_vma_private_data
block|{
name|struct
name|list_head
name|list
decl_stmt|;
name|struct
name|vm_area_struct
modifier|*
name|vma
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_ucontext
block|{
name|struct
name|ib_ucontext
name|ibucontext
decl_stmt|;
name|struct
name|list_head
name|db_page_list
decl_stmt|;
comment|/* protect doorbell record alloc/free 	 */
name|struct
name|mutex
name|db_page_mutex
decl_stmt|;
name|struct
name|mlx5_uuar_info
name|uuari
decl_stmt|;
name|u8
name|cqe_version
decl_stmt|;
comment|/* Transport Domain number */
name|u32
name|tdn
decl_stmt|;
name|struct
name|list_head
name|vma_private_list
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_ucontext
modifier|*
name|to_mucontext
parameter_list|(
name|struct
name|ib_ucontext
modifier|*
name|ibucontext
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibucontext
argument_list|,
expr|struct
name|mlx5_ib_ucontext
argument_list|,
name|ibucontext
argument_list|)
return|;
block|}
end_function

begin_struct
struct|struct
name|mlx5_ib_pd
block|{
name|struct
name|ib_pd
name|ibpd
decl_stmt|;
name|u32
name|pdn
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|MLX5_IB_FLOW_MCAST_PRIO
value|(MLX5_BY_PASS_NUM_PRIOS - 1)
end_define

begin_define
define|#
directive|define
name|MLX5_IB_FLOW_LAST_PRIO
value|(MLX5_BY_PASS_NUM_REGULAR_PRIOS - 1)
end_define

begin_if
if|#
directive|if
operator|(
name|MLX5_IB_FLOW_LAST_PRIO
operator|<=
literal|0
operator|)
end_if

begin_error
error|#
directive|error
literal|"Invalid number of bypass priorities"
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|MLX5_IB_FLOW_LEFTOVERS_PRIO
value|(MLX5_IB_FLOW_MCAST_PRIO + 1)
end_define

begin_define
define|#
directive|define
name|MLX5_IB_NUM_FLOW_FT
value|(MLX5_IB_FLOW_LEFTOVERS_PRIO + 1)
end_define

begin_define
define|#
directive|define
name|MLX5_IB_NUM_SNIFFER_FTS
value|2
end_define

begin_struct
struct|struct
name|mlx5_ib_flow_prio
block|{
name|struct
name|mlx5_flow_table
modifier|*
name|flow_table
decl_stmt|;
name|unsigned
name|int
name|refcount
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_flow_handler
block|{
name|struct
name|list_head
name|list
decl_stmt|;
name|struct
name|ib_flow
name|ibflow
decl_stmt|;
name|struct
name|mlx5_ib_flow_prio
modifier|*
name|prio
decl_stmt|;
name|struct
name|mlx5_flow_rule
modifier|*
name|rule
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_flow_db
block|{
name|struct
name|mlx5_ib_flow_prio
name|prios
index|[
name|MLX5_IB_NUM_FLOW_FT
index|]
decl_stmt|;
name|struct
name|mlx5_ib_flow_prio
name|sniffer
index|[
name|MLX5_IB_NUM_SNIFFER_FTS
index|]
decl_stmt|;
name|struct
name|mlx5_flow_table
modifier|*
name|lag_demux_ft
decl_stmt|;
comment|/* Protect flow steering bypass flow tables 	 * when add/del flow rules. 	 * only single add/removal of flow steering rule could be done 	 * simultaneously. 	 */
name|struct
name|mutex
name|lock
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Use macros here so that don't have to duplicate  * enum ib_send_flags and enum ib_qp_type for low-level driver  */
end_comment

begin_define
define|#
directive|define
name|MLX5_IB_SEND_UMR_UNREG
value|IB_SEND_RESERVED_START
end_define

begin_define
define|#
directive|define
name|MLX5_IB_SEND_UMR_FAIL_IF_FREE
value|(IB_SEND_RESERVED_START<< 1)
end_define

begin_define
define|#
directive|define
name|MLX5_IB_SEND_UMR_UPDATE_MTT
value|(IB_SEND_RESERVED_START<< 2)
end_define

begin_define
define|#
directive|define
name|MLX5_IB_SEND_UMR_UPDATE_TRANSLATION
value|(IB_SEND_RESERVED_START<< 3)
end_define

begin_define
define|#
directive|define
name|MLX5_IB_SEND_UMR_UPDATE_PD
value|(IB_SEND_RESERVED_START<< 4)
end_define

begin_define
define|#
directive|define
name|MLX5_IB_SEND_UMR_UPDATE_ACCESS
value|IB_SEND_RESERVED_END
end_define

begin_define
define|#
directive|define
name|MLX5_IB_QPT_REG_UMR
value|IB_QPT_RESERVED1
end_define

begin_comment
comment|/*  * IB_QPT_GSI creates the software wrapper around GSI, and MLX5_IB_QPT_HW_GSI  * creates the actual hardware QP.  */
end_comment

begin_define
define|#
directive|define
name|MLX5_IB_QPT_HW_GSI
value|IB_QPT_RESERVED2
end_define

begin_define
define|#
directive|define
name|MLX5_IB_WR_UMR
value|IB_WR_RESERVED1
end_define

begin_comment
comment|/* Private QP creation flags to be passed in ib_qp_init_attr.create_flags.  *  * These flags are intended for internal use by the mlx5_ib driver, and they  * rely on the range reserved for that use in the ib_qp_create_flags enum.  */
end_comment

begin_comment
comment|/* Create a UD QP whose source QP number is 1 */
end_comment

begin_function
specifier|static
specifier|inline
name|enum
name|ib_qp_create_flags
name|mlx5_ib_create_qp_sqpn_qp1
parameter_list|(
name|void
parameter_list|)
block|{
return|return
name|IB_QP_CREATE_RESERVED_START
return|;
block|}
end_function

begin_struct
struct|struct
name|wr_list
block|{
name|u16
name|opcode
decl_stmt|;
name|u16
name|next
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_wq
block|{
name|u64
modifier|*
name|wrid
decl_stmt|;
name|u32
modifier|*
name|wr_data
decl_stmt|;
name|struct
name|wr_list
modifier|*
name|w_list
decl_stmt|;
name|unsigned
modifier|*
name|wqe_head
decl_stmt|;
name|u16
name|unsig_count
decl_stmt|;
comment|/* serialize post to the work queue 	 */
name|spinlock_t
name|lock
decl_stmt|;
name|int
name|wqe_cnt
decl_stmt|;
name|int
name|max_post
decl_stmt|;
name|int
name|max_gs
decl_stmt|;
name|int
name|offset
decl_stmt|;
name|int
name|wqe_shift
decl_stmt|;
name|unsigned
name|head
decl_stmt|;
name|unsigned
name|tail
decl_stmt|;
name|u16
name|cur_post
decl_stmt|;
name|u16
name|last_poll
decl_stmt|;
name|void
modifier|*
name|qend
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_rwq
block|{
name|struct
name|ib_wq
name|ibwq
decl_stmt|;
name|struct
name|mlx5_core_qp
name|core_qp
decl_stmt|;
name|u32
name|rq_num_pas
decl_stmt|;
name|u32
name|log_rq_stride
decl_stmt|;
name|u32
name|log_rq_size
decl_stmt|;
name|u32
name|rq_page_offset
decl_stmt|;
name|u32
name|log_page_size
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|umem
decl_stmt|;
name|size_t
name|buf_size
decl_stmt|;
name|unsigned
name|int
name|page_shift
decl_stmt|;
name|int
name|create_type
decl_stmt|;
name|struct
name|mlx5_db
name|db
decl_stmt|;
name|u32
name|user_index
decl_stmt|;
name|u32
name|wqe_count
decl_stmt|;
name|u32
name|wqe_shift
decl_stmt|;
name|int
name|wq_sig
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
block|{
name|MLX5_QP_USER
block|,
name|MLX5_QP_KERNEL
block|,
name|MLX5_QP_EMPTY
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_WQ_USER
block|,
name|MLX5_WQ_KERNEL
block|}
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_ib_rwq_ind_table
block|{
name|struct
name|ib_rwq_ind_table
name|ib_rwq_ind_tbl
decl_stmt|;
name|u32
name|rqtn
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Connect-IB can trigger up to four concurrent pagefaults  * per-QP.  */
end_comment

begin_enum
enum|enum
name|mlx5_ib_pagefault_context
block|{
name|MLX5_IB_PAGEFAULT_RESPONDER_READ
block|,
name|MLX5_IB_PAGEFAULT_REQUESTOR_READ
block|,
name|MLX5_IB_PAGEFAULT_RESPONDER_WRITE
block|,
name|MLX5_IB_PAGEFAULT_REQUESTOR_WRITE
block|,
name|MLX5_IB_PAGEFAULT_CONTEXTS
block|}
enum|;
end_enum

begin_function
specifier|static
specifier|inline
name|enum
name|mlx5_ib_pagefault_context
name|mlx5_ib_get_pagefault_context
parameter_list|(
name|struct
name|mlx5_pagefault
modifier|*
name|pagefault
parameter_list|)
block|{
return|return
name|pagefault
operator|->
name|flags
operator|&
operator|(
name|MLX5_PFAULT_REQUESTOR
operator||
name|MLX5_PFAULT_WRITE
operator|)
return|;
block|}
end_function

begin_struct
struct|struct
name|mlx5_ib_pfault
block|{
name|struct
name|work_struct
name|work
decl_stmt|;
name|struct
name|mlx5_pagefault
name|mpfault
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_ubuffer
block|{
name|struct
name|ib_umem
modifier|*
name|umem
decl_stmt|;
name|int
name|buf_size
decl_stmt|;
name|u64
name|buf_addr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_qp_base
block|{
name|struct
name|mlx5_ib_qp
modifier|*
name|container_mibqp
decl_stmt|;
name|struct
name|mlx5_core_qp
name|mqp
decl_stmt|;
name|struct
name|mlx5_ib_ubuffer
name|ubuffer
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_qp_trans
block|{
name|struct
name|mlx5_ib_qp_base
name|base
decl_stmt|;
name|u16
name|xrcdn
decl_stmt|;
name|u8
name|alt_port
decl_stmt|;
name|u8
name|atomic_rd_en
decl_stmt|;
name|u8
name|resp_depth
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_rss_qp
block|{
name|u32
name|tirn
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_rq
block|{
name|struct
name|mlx5_ib_qp_base
name|base
decl_stmt|;
name|struct
name|mlx5_ib_wq
modifier|*
name|rq
decl_stmt|;
name|struct
name|mlx5_ib_ubuffer
name|ubuffer
decl_stmt|;
name|struct
name|mlx5_db
modifier|*
name|doorbell
decl_stmt|;
name|u32
name|tirn
decl_stmt|;
name|u8
name|state
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_sq
block|{
name|struct
name|mlx5_ib_qp_base
name|base
decl_stmt|;
name|struct
name|mlx5_ib_wq
modifier|*
name|sq
decl_stmt|;
name|struct
name|mlx5_ib_ubuffer
name|ubuffer
decl_stmt|;
name|struct
name|mlx5_db
modifier|*
name|doorbell
decl_stmt|;
name|u32
name|tisn
decl_stmt|;
name|u8
name|state
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_raw_packet_qp
block|{
name|struct
name|mlx5_ib_sq
name|sq
decl_stmt|;
name|struct
name|mlx5_ib_rq
name|rq
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_qp
block|{
name|struct
name|ib_qp
name|ibqp
decl_stmt|;
union|union
block|{
name|struct
name|mlx5_ib_qp_trans
name|trans_qp
decl_stmt|;
name|struct
name|mlx5_ib_raw_packet_qp
name|raw_packet_qp
decl_stmt|;
name|struct
name|mlx5_ib_rss_qp
name|rss_qp
decl_stmt|;
block|}
union|;
name|struct
name|mlx5_buf
name|buf
decl_stmt|;
name|struct
name|mlx5_db
name|db
decl_stmt|;
name|struct
name|mlx5_ib_wq
name|rq
decl_stmt|;
name|u8
name|sq_signal_bits
decl_stmt|;
name|u8
name|fm_cache
decl_stmt|;
name|struct
name|mlx5_ib_wq
name|sq
decl_stmt|;
comment|/* serialize qp state modifications 	 */
name|struct
name|mutex
name|mutex
decl_stmt|;
name|u32
name|flags
decl_stmt|;
name|u8
name|port
decl_stmt|;
name|u8
name|state
decl_stmt|;
name|int
name|wq_sig
decl_stmt|;
name|int
name|scat_cqe
decl_stmt|;
name|int
name|max_inline_data
decl_stmt|;
name|struct
name|mlx5_bf
modifier|*
name|bf
decl_stmt|;
name|int
name|has_rq
decl_stmt|;
comment|/* only for user space QPs. For kernel 	 * we have it from the bf object 	 */
name|int
name|uuarn
decl_stmt|;
name|int
name|create_type
decl_stmt|;
comment|/* Store signature errors */
name|bool
name|signature_en
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_INFINIBAND_ON_DEMAND_PAGING
comment|/* 	 * A flag that is true for QP's that are in a state that doesn't 	 * allow page faults, and shouldn't schedule any more faults. 	 */
name|int
name|disable_page_faults
decl_stmt|;
comment|/* 	 * The disable_page_faults_lock protects a QP's disable_page_faults 	 * field, allowing for a thread to atomically check whether the QP 	 * allows page faults, and if so schedule a page fault. 	 */
name|spinlock_t
name|disable_page_faults_lock
decl_stmt|;
name|struct
name|mlx5_ib_pfault
name|pagefaults
index|[
name|MLX5_IB_PAGEFAULT_CONTEXTS
index|]
decl_stmt|;
endif|#
directive|endif
name|struct
name|list_head
name|qps_list
decl_stmt|;
name|struct
name|list_head
name|cq_recv_list
decl_stmt|;
name|struct
name|list_head
name|cq_send_list
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_cq_buf
block|{
name|struct
name|mlx5_buf
name|buf
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|umem
decl_stmt|;
name|int
name|cqe_size
decl_stmt|;
name|int
name|nent
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|mlx5_ib_qp_flags
block|{
name|MLX5_IB_QP_LSO
init|=
name|IB_QP_CREATE_IPOIB_UD_LSO
block|,
name|MLX5_IB_QP_BLOCK_MULTICAST_LOOPBACK
init|=
name|IB_QP_CREATE_BLOCK_MULTICAST_LOOPBACK
block|,
name|MLX5_IB_QP_CROSS_CHANNEL
init|=
name|IB_QP_CREATE_CROSS_CHANNEL
block|,
name|MLX5_IB_QP_MANAGED_SEND
init|=
name|IB_QP_CREATE_MANAGED_SEND
block|,
name|MLX5_IB_QP_MANAGED_RECV
init|=
name|IB_QP_CREATE_MANAGED_RECV
block|,
name|MLX5_IB_QP_SIGNATURE_HANDLING
init|=
literal|1
operator|<<
literal|5
block|,
comment|/* QP uses 1 as its source QP number */
name|MLX5_IB_QP_SQPN_QP1
init|=
literal|1
operator|<<
literal|6
block|,
name|MLX5_IB_QP_CAP_SCATTER_FCS
init|=
literal|1
operator|<<
literal|7
block|,
name|MLX5_IB_QP_RSS
init|=
literal|1
operator|<<
literal|8
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_umr_wr
block|{
name|struct
name|ib_send_wr
name|wr
decl_stmt|;
union|union
block|{
name|u64
name|virt_addr
decl_stmt|;
name|u64
name|offset
decl_stmt|;
block|}
name|target
union|;
name|struct
name|ib_pd
modifier|*
name|pd
decl_stmt|;
name|unsigned
name|int
name|page_shift
decl_stmt|;
name|unsigned
name|int
name|npages
decl_stmt|;
name|u32
name|length
decl_stmt|;
name|int
name|access_flags
decl_stmt|;
name|u32
name|mkey
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_umr_wr
modifier|*
name|umr_wr
parameter_list|(
name|struct
name|ib_send_wr
modifier|*
name|wr
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|wr
argument_list|,
expr|struct
name|mlx5_umr_wr
argument_list|,
name|wr
argument_list|)
return|;
block|}
end_function

begin_struct
struct|struct
name|mlx5_shared_mr_info
block|{
name|int
name|mr_id
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|umem
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_cq
block|{
name|struct
name|ib_cq
name|ibcq
decl_stmt|;
name|struct
name|mlx5_core_cq
name|mcq
decl_stmt|;
name|struct
name|mlx5_ib_cq_buf
name|buf
decl_stmt|;
name|struct
name|mlx5_db
name|db
decl_stmt|;
comment|/* serialize access to the CQ 	 */
name|spinlock_t
name|lock
decl_stmt|;
comment|/* protect resize cq 	 */
name|struct
name|mutex
name|resize_mutex
decl_stmt|;
name|struct
name|mlx5_ib_cq_buf
modifier|*
name|resize_buf
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|resize_umem
decl_stmt|;
name|int
name|cqe_size
decl_stmt|;
name|struct
name|list_head
name|list_send_qp
decl_stmt|;
name|struct
name|list_head
name|list_recv_qp
decl_stmt|;
name|u32
name|create_flags
decl_stmt|;
name|struct
name|list_head
name|wc_list
decl_stmt|;
name|enum
name|ib_cq_notify_flags
name|notify_flags
decl_stmt|;
name|struct
name|work_struct
name|notify_work
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_wc
block|{
name|struct
name|ib_wc
name|wc
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_srq
block|{
name|struct
name|ib_srq
name|ibsrq
decl_stmt|;
name|struct
name|mlx5_core_srq
name|msrq
decl_stmt|;
name|struct
name|mlx5_buf
name|buf
decl_stmt|;
name|struct
name|mlx5_db
name|db
decl_stmt|;
name|u64
modifier|*
name|wrid
decl_stmt|;
comment|/* protect SRQ hanlding 	 */
name|spinlock_t
name|lock
decl_stmt|;
name|int
name|head
decl_stmt|;
name|int
name|tail
decl_stmt|;
name|u16
name|wqe_ctr
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|umem
decl_stmt|;
comment|/* serialize arming a SRQ 	 */
name|struct
name|mutex
name|mutex
decl_stmt|;
name|int
name|wq_sig
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_xrcd
block|{
name|struct
name|ib_xrcd
name|ibxrcd
decl_stmt|;
name|u32
name|xrcdn
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|mlx5_ib_mtt_access_flags
block|{
name|MLX5_IB_MTT_READ
init|=
operator|(
literal|1
operator|<<
literal|0
operator|)
block|,
name|MLX5_IB_MTT_WRITE
init|=
operator|(
literal|1
operator|<<
literal|1
operator|)
block|, }
enum|;
end_enum

begin_define
define|#
directive|define
name|MLX5_IB_MTT_PRESENT
value|(MLX5_IB_MTT_READ | MLX5_IB_MTT_WRITE)
end_define

begin_struct
struct|struct
name|mlx5_ib_mr
block|{
name|struct
name|ib_mr
name|ibmr
decl_stmt|;
name|void
modifier|*
name|descs
decl_stmt|;
name|dma_addr_t
name|desc_map
decl_stmt|;
name|int
name|ndescs
decl_stmt|;
name|int
name|max_descs
decl_stmt|;
name|int
name|desc_size
decl_stmt|;
name|int
name|access_mode
decl_stmt|;
name|struct
name|mlx5_core_mr
name|mmkey
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|umem
decl_stmt|;
name|struct
name|mlx5_shared_mr_info
modifier|*
name|smr_info
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
name|int
name|order
decl_stmt|;
name|int
name|umred
decl_stmt|;
name|int
name|npages
decl_stmt|;
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
decl_stmt|;
name|u32
name|out
index|[
name|MLX5_ST_SZ_DW
argument_list|(
name|create_mkey_out
argument_list|)
index|]
decl_stmt|;
name|struct
name|mlx5_core_sig_ctx
modifier|*
name|sig
decl_stmt|;
name|int
name|live
decl_stmt|;
name|void
modifier|*
name|descs_alloc
decl_stmt|;
name|int
name|access_flags
decl_stmt|;
comment|/* Needed for rereg MR */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_mw
block|{
name|struct
name|ib_mw
name|ibmw
decl_stmt|;
name|struct
name|mlx5_core_mr
name|mmkey
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_umr_context
block|{
name|struct
name|ib_cqe
name|cqe
decl_stmt|;
name|enum
name|ib_wc_status
name|status
decl_stmt|;
name|struct
name|completion
name|done
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|umr_common
block|{
name|struct
name|ib_pd
modifier|*
name|pd
decl_stmt|;
name|struct
name|ib_cq
modifier|*
name|cq
decl_stmt|;
name|struct
name|ib_qp
modifier|*
name|qp
decl_stmt|;
comment|/* control access to UMR QP 	 */
name|struct
name|semaphore
name|sem
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
block|{
name|MLX5_FMR_INVALID
block|,
name|MLX5_FMR_VALID
block|,
name|MLX5_FMR_BUSY
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_cache_ent
block|{
name|struct
name|list_head
name|head
decl_stmt|;
comment|/* sync access to the cahce entry 	 */
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|dentry
modifier|*
name|dir
decl_stmt|;
name|char
name|name
index|[
literal|4
index|]
decl_stmt|;
name|u32
name|order
decl_stmt|;
name|u32
name|size
decl_stmt|;
name|u32
name|cur
decl_stmt|;
name|u32
name|miss
decl_stmt|;
name|u32
name|limit
decl_stmt|;
name|struct
name|dentry
modifier|*
name|fsize
decl_stmt|;
name|struct
name|dentry
modifier|*
name|fcur
decl_stmt|;
name|struct
name|dentry
modifier|*
name|fmiss
decl_stmt|;
name|struct
name|dentry
modifier|*
name|flimit
decl_stmt|;
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
decl_stmt|;
name|struct
name|work_struct
name|work
decl_stmt|;
name|struct
name|delayed_work
name|dwork
decl_stmt|;
name|int
name|pending
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_mr_cache
block|{
name|struct
name|workqueue_struct
modifier|*
name|wq
decl_stmt|;
name|struct
name|mlx5_cache_ent
name|ent
index|[
name|MAX_MR_CACHE_ENTRIES
index|]
decl_stmt|;
name|int
name|stopped
decl_stmt|;
name|struct
name|dentry
modifier|*
name|root
decl_stmt|;
name|unsigned
name|long
name|last_add
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|mlx5_ib_gsi_qp
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|mlx5_ib_port_resources
block|{
name|struct
name|mlx5_ib_resources
modifier|*
name|devr
decl_stmt|;
name|struct
name|mlx5_ib_gsi_qp
modifier|*
name|gsi
decl_stmt|;
name|struct
name|work_struct
name|pkey_change_work
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_resources
block|{
name|struct
name|ib_cq
modifier|*
name|c0
decl_stmt|;
name|struct
name|ib_xrcd
modifier|*
name|x0
decl_stmt|;
name|struct
name|ib_xrcd
modifier|*
name|x1
decl_stmt|;
name|struct
name|ib_pd
modifier|*
name|p0
decl_stmt|;
name|struct
name|ib_srq
modifier|*
name|s0
decl_stmt|;
name|struct
name|ib_srq
modifier|*
name|s1
decl_stmt|;
name|struct
name|mlx5_ib_port_resources
name|ports
index|[
literal|2
index|]
decl_stmt|;
comment|/* Protects changes to the port resources */
name|struct
name|mutex
name|mutex
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_port
block|{
name|u16
name|q_cnt_id
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_roce
block|{
comment|/* Protect mlx5_ib_get_netdev from invoking dev_hold() with a NULL 	 * netdev pointer 	 */
name|rwlock_t
name|netdev_lock
decl_stmt|;
name|struct
name|net_device
modifier|*
name|netdev
decl_stmt|;
name|struct
name|notifier_block
name|nb
decl_stmt|;
name|atomic_t
name|next_port
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ib_dev
block|{
name|struct
name|ib_device
name|ib_dev
decl_stmt|;
name|struct
name|mlx5_core_dev
modifier|*
name|mdev
decl_stmt|;
name|struct
name|mlx5_roce
name|roce
decl_stmt|;
name|MLX5_DECLARE_DOORBELL_LOCK
argument_list|(
name|uar_lock
argument_list|)
expr_stmt|;
name|int
name|num_ports
decl_stmt|;
comment|/* serialize update of capability mask 	 */
name|struct
name|mutex
name|cap_mask_mutex
decl_stmt|;
name|bool
name|ib_active
decl_stmt|;
name|struct
name|umr_common
name|umrc
decl_stmt|;
comment|/* sync used page count stats 	 */
name|struct
name|mlx5_ib_resources
name|devr
decl_stmt|;
name|struct
name|mlx5_mr_cache
name|cache
decl_stmt|;
name|struct
name|timer_list
name|delay_timer
decl_stmt|;
comment|/* Prevents soft lock on massive reg MRs */
name|struct
name|mutex
name|slow_path_mutex
decl_stmt|;
name|int
name|fill_delay
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_INFINIBAND_ON_DEMAND_PAGING
name|struct
name|ib_odp_caps
name|odp_caps
decl_stmt|;
comment|/* 	 * Sleepable RCU that prevents destruction of MRs while they are still 	 * being used by a page fault handler. 	 */
name|struct
name|srcu_struct
name|mr_srcu
decl_stmt|;
endif|#
directive|endif
name|struct
name|mlx5_ib_flow_db
name|flow_db
decl_stmt|;
comment|/* protect resources needed as part of reset flow */
name|spinlock_t
name|reset_flow_resource_lock
decl_stmt|;
name|struct
name|list_head
name|qp_list
decl_stmt|;
comment|/* Array with num_ports elements */
name|struct
name|mlx5_ib_port
modifier|*
name|port
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_cq
modifier|*
name|to_mibcq
parameter_list|(
name|struct
name|mlx5_core_cq
modifier|*
name|mcq
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|mcq
argument_list|,
expr|struct
name|mlx5_ib_cq
argument_list|,
name|mcq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_xrcd
modifier|*
name|to_mxrcd
parameter_list|(
name|struct
name|ib_xrcd
modifier|*
name|ibxrcd
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibxrcd
argument_list|,
expr|struct
name|mlx5_ib_xrcd
argument_list|,
name|ibxrcd
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_dev
modifier|*
name|to_mdev
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibdev
argument_list|,
expr|struct
name|mlx5_ib_dev
argument_list|,
name|ib_dev
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_cq
modifier|*
name|to_mcq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibcq
argument_list|,
expr|struct
name|mlx5_ib_cq
argument_list|,
name|ibcq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_qp
modifier|*
name|to_mibqp
parameter_list|(
name|struct
name|mlx5_core_qp
modifier|*
name|mqp
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|mqp
argument_list|,
expr|struct
name|mlx5_ib_qp_base
argument_list|,
name|mqp
argument_list|)
operator|->
name|container_mibqp
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_rwq
modifier|*
name|to_mibrwq
parameter_list|(
name|struct
name|mlx5_core_qp
modifier|*
name|core_qp
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|core_qp
argument_list|,
expr|struct
name|mlx5_ib_rwq
argument_list|,
name|core_qp
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_mr
modifier|*
name|to_mibmr
parameter_list|(
name|struct
name|mlx5_core_mr
modifier|*
name|mmkey
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|mmkey
argument_list|,
expr|struct
name|mlx5_ib_mr
argument_list|,
name|mmkey
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_pd
modifier|*
name|to_mpd
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|ibpd
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibpd
argument_list|,
expr|struct
name|mlx5_ib_pd
argument_list|,
name|ibpd
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_srq
modifier|*
name|to_msrq
parameter_list|(
name|struct
name|ib_srq
modifier|*
name|ibsrq
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibsrq
argument_list|,
expr|struct
name|mlx5_ib_srq
argument_list|,
name|ibsrq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_qp
modifier|*
name|to_mqp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibqp
argument_list|,
expr|struct
name|mlx5_ib_qp
argument_list|,
name|ibqp
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_rwq
modifier|*
name|to_mrwq
parameter_list|(
name|struct
name|ib_wq
modifier|*
name|ibwq
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibwq
argument_list|,
expr|struct
name|mlx5_ib_rwq
argument_list|,
name|ibwq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_rwq_ind_table
modifier|*
name|to_mrwq_ind_table
parameter_list|(
name|struct
name|ib_rwq_ind_table
modifier|*
name|ib_rwq_ind_tbl
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ib_rwq_ind_tbl
argument_list|,
expr|struct
name|mlx5_ib_rwq_ind_table
argument_list|,
name|ib_rwq_ind_tbl
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_srq
modifier|*
name|to_mibsrq
parameter_list|(
name|struct
name|mlx5_core_srq
modifier|*
name|msrq
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|msrq
argument_list|,
expr|struct
name|mlx5_ib_srq
argument_list|,
name|msrq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_mr
modifier|*
name|to_mmr
parameter_list|(
name|struct
name|ib_mr
modifier|*
name|ibmr
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibmr
argument_list|,
expr|struct
name|mlx5_ib_mr
argument_list|,
name|ibmr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_mw
modifier|*
name|to_mmw
parameter_list|(
name|struct
name|ib_mw
modifier|*
name|ibmw
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibmw
argument_list|,
expr|struct
name|mlx5_ib_mw
argument_list|,
name|ibmw
argument_list|)
return|;
block|}
end_function

begin_struct
struct|struct
name|mlx5_ib_ah
block|{
name|struct
name|ib_ah
name|ibah
decl_stmt|;
name|struct
name|mlx5_av
name|av
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ib_ah
modifier|*
name|to_mah
parameter_list|(
name|struct
name|ib_ah
modifier|*
name|ibah
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibah
argument_list|,
expr|struct
name|mlx5_ib_ah
argument_list|,
name|ibah
argument_list|)
return|;
block|}
end_function

begin_function_decl
name|int
name|mlx5_ib_db_map_user
parameter_list|(
name|struct
name|mlx5_ib_ucontext
modifier|*
name|context
parameter_list|,
name|unsigned
name|long
name|virt
parameter_list|,
name|struct
name|mlx5_db
modifier|*
name|db
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_db_unmap_user
parameter_list|(
name|struct
name|mlx5_ib_ucontext
modifier|*
name|context
parameter_list|,
name|struct
name|mlx5_db
modifier|*
name|db
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__mlx5_ib_cq_clean
parameter_list|(
name|struct
name|mlx5_ib_cq
modifier|*
name|cq
parameter_list|,
name|u32
name|qpn
parameter_list|,
name|struct
name|mlx5_ib_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_cq_clean
parameter_list|(
name|struct
name|mlx5_ib_cq
modifier|*
name|cq
parameter_list|,
name|u32
name|qpn
parameter_list|,
name|struct
name|mlx5_ib_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_free_srq_wqe
parameter_list|(
name|struct
name|mlx5_ib_srq
modifier|*
name|srq
parameter_list|,
name|int
name|wqe_index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_MAD_IFC
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|,
name|int
name|ignore_mkey
parameter_list|,
name|int
name|ignore_bkey
parameter_list|,
name|u8
name|port
parameter_list|,
specifier|const
name|struct
name|ib_wc
modifier|*
name|in_wc
parameter_list|,
specifier|const
name|struct
name|ib_grh
modifier|*
name|in_grh
parameter_list|,
specifier|const
name|void
modifier|*
name|in_mad
parameter_list|,
name|void
modifier|*
name|response_mad
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_ah
modifier|*
name|mlx5_ib_create_ah
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ib_ah_attr
modifier|*
name|ah_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_query_ah
parameter_list|(
name|struct
name|ib_ah
modifier|*
name|ibah
parameter_list|,
name|struct
name|ib_ah_attr
modifier|*
name|ah_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_destroy_ah
parameter_list|(
name|struct
name|ib_ah
modifier|*
name|ah
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_srq
modifier|*
name|mlx5_ib_create_srq
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ib_srq_init_attr
modifier|*
name|init_attr
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_modify_srq
parameter_list|(
name|struct
name|ib_srq
modifier|*
name|ibsrq
parameter_list|,
name|struct
name|ib_srq_attr
modifier|*
name|attr
parameter_list|,
name|enum
name|ib_srq_attr_mask
name|attr_mask
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_query_srq
parameter_list|(
name|struct
name|ib_srq
modifier|*
name|ibsrq
parameter_list|,
name|struct
name|ib_srq_attr
modifier|*
name|srq_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_destroy_srq
parameter_list|(
name|struct
name|ib_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_post_srq_recv
parameter_list|(
name|struct
name|ib_srq
modifier|*
name|ibsrq
parameter_list|,
name|struct
name|ib_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ib_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_qp
modifier|*
name|mlx5_ib_create_qp
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ib_qp_init_attr
modifier|*
name|init_attr
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_modify_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ib_qp_attr
modifier|*
name|attr
parameter_list|,
name|int
name|attr_mask
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_query_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ib_qp_attr
modifier|*
name|qp_attr
parameter_list|,
name|int
name|qp_attr_mask
parameter_list|,
name|struct
name|ib_qp_init_attr
modifier|*
name|qp_init_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_destroy_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_post_send
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ib_send_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ib_send_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_post_recv
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ib_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ib_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|mlx5_get_send_wqe
parameter_list|(
name|struct
name|mlx5_ib_qp
modifier|*
name|qp
parameter_list|,
name|int
name|n
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_read_user_wqe
parameter_list|(
name|struct
name|mlx5_ib_qp
modifier|*
name|qp
parameter_list|,
name|int
name|send
parameter_list|,
name|int
name|wqe_index
parameter_list|,
name|void
modifier|*
name|buffer
parameter_list|,
name|u32
name|length
parameter_list|,
name|struct
name|mlx5_ib_qp_base
modifier|*
name|base
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_cq
modifier|*
name|mlx5_ib_create_cq
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
specifier|const
name|struct
name|ib_cq_init_attr
modifier|*
name|attr
parameter_list|,
name|struct
name|ib_ucontext
modifier|*
name|context
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_destroy_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|cq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_poll_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|,
name|int
name|num_entries
parameter_list|,
name|struct
name|ib_wc
modifier|*
name|wc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_arm_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|,
name|enum
name|ib_cq_notify_flags
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_modify_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|cq
parameter_list|,
name|u16
name|cq_count
parameter_list|,
name|u16
name|cq_period
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_resize_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|,
name|int
name|entries
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mr
modifier|*
name|mlx5_ib_get_dma_mr
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|int
name|acc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mr
modifier|*
name|mlx5_ib_reg_user_mr
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|u64
name|start
parameter_list|,
name|u64
name|length
parameter_list|,
name|u64
name|virt_addr
parameter_list|,
name|int
name|access_flags
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mw
modifier|*
name|mlx5_ib_alloc_mw
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|enum
name|ib_mw_type
name|type
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_dealloc_mw
parameter_list|(
name|struct
name|ib_mw
modifier|*
name|mw
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_update_mtt
parameter_list|(
name|struct
name|mlx5_ib_mr
modifier|*
name|mr
parameter_list|,
name|u64
name|start_page_index
parameter_list|,
name|int
name|npages
parameter_list|,
name|int
name|zap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_rereg_user_mr
parameter_list|(
name|struct
name|ib_mr
modifier|*
name|ib_mr
parameter_list|,
name|int
name|flags
parameter_list|,
name|u64
name|start
parameter_list|,
name|u64
name|length
parameter_list|,
name|u64
name|virt_addr
parameter_list|,
name|int
name|access_flags
parameter_list|,
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_dereg_mr
parameter_list|(
name|struct
name|ib_mr
modifier|*
name|ibmr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mr
modifier|*
name|mlx5_ib_alloc_mr
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|enum
name|ib_mr_type
name|mr_type
parameter_list|,
name|u32
name|max_num_sg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_map_mr_sg
parameter_list|(
name|struct
name|ib_mr
modifier|*
name|ibmr
parameter_list|,
name|struct
name|scatterlist
modifier|*
name|sg
parameter_list|,
name|int
name|sg_nents
parameter_list|,
name|unsigned
name|int
modifier|*
name|sg_offset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_process_mad
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|int
name|mad_flags
parameter_list|,
name|u8
name|port_num
parameter_list|,
specifier|const
name|struct
name|ib_wc
modifier|*
name|in_wc
parameter_list|,
specifier|const
name|struct
name|ib_grh
modifier|*
name|in_grh
parameter_list|,
specifier|const
name|struct
name|ib_mad_hdr
modifier|*
name|in
parameter_list|,
name|size_t
name|in_mad_size
parameter_list|,
name|struct
name|ib_mad_hdr
modifier|*
name|out
parameter_list|,
name|size_t
modifier|*
name|out_mad_size
parameter_list|,
name|u16
modifier|*
name|out_mad_pkey_index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_xrcd
modifier|*
name|mlx5_ib_alloc_xrcd
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|struct
name|ib_ucontext
modifier|*
name|context
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_dealloc_xrcd
parameter_list|(
name|struct
name|ib_xrcd
modifier|*
name|xrcd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_get_buf_offset
parameter_list|(
name|u64
name|addr
parameter_list|,
name|int
name|page_shift
parameter_list|,
name|u32
modifier|*
name|offset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_ext_port_caps
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_mad_ifc_smp_attr_node_info
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|struct
name|ib_smp
modifier|*
name|out_mad
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_mad_ifc_system_image_guid
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|__be64
modifier|*
name|sys_image_guid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_mad_ifc_max_pkeys
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|u16
modifier|*
name|max_pkeys
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_mad_ifc_vendor_id
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|u32
modifier|*
name|vendor_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_mad_ifc_node_desc
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|,
name|char
modifier|*
name|node_desc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_mad_ifc_node_guid
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|,
name|__be64
modifier|*
name|node_guid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_mad_ifc_pkey
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|u8
name|port
parameter_list|,
name|u16
name|index
parameter_list|,
name|u16
modifier|*
name|pkey
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_mad_ifc_gids
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|u8
name|port
parameter_list|,
name|int
name|index
parameter_list|,
name|union
name|ib_gid
modifier|*
name|gid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_mad_ifc_port
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|u8
name|port
parameter_list|,
name|struct
name|ib_port_attr
modifier|*
name|props
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_query_port
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
name|u8
name|port
parameter_list|,
name|struct
name|ib_port_attr
modifier|*
name|props
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_init_fmr
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_cleanup_fmr
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_cont_pages
parameter_list|(
name|struct
name|ib_umem
modifier|*
name|umem
parameter_list|,
name|u64
name|addr
parameter_list|,
name|int
modifier|*
name|count
parameter_list|,
name|int
modifier|*
name|shift
parameter_list|,
name|int
modifier|*
name|ncont
parameter_list|,
name|int
modifier|*
name|order
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__mlx5_ib_populate_pas
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|ib_umem
modifier|*
name|umem
parameter_list|,
name|int
name|page_shift
parameter_list|,
name|size_t
name|offset
parameter_list|,
name|size_t
name|num_pages
parameter_list|,
name|__be64
modifier|*
name|pas
parameter_list|,
name|int
name|access_flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_populate_pas
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|ib_umem
modifier|*
name|umem
parameter_list|,
name|int
name|page_shift
parameter_list|,
name|__be64
modifier|*
name|pas
parameter_list|,
name|int
name|access_flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_copy_pas
parameter_list|(
name|u64
modifier|*
name|old
parameter_list|,
name|u64
modifier|*
name|new
parameter_list|,
name|int
name|step
parameter_list|,
name|int
name|num
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_get_cqe_size
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_mr_cache_init
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_mr_cache_cleanup
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_mr_ib_cont_pages
parameter_list|(
name|struct
name|ib_umem
modifier|*
name|umem
parameter_list|,
name|u64
name|addr
parameter_list|,
name|int
modifier|*
name|count
parameter_list|,
name|int
modifier|*
name|shift
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_check_mr_status
parameter_list|(
name|struct
name|ib_mr
modifier|*
name|ibmr
parameter_list|,
name|u32
name|check_mask
parameter_list|,
name|struct
name|ib_mr_status
modifier|*
name|mr_status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_wq
modifier|*
name|mlx5_ib_create_wq
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ib_wq_init_attr
modifier|*
name|init_attr
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_destroy_wq
parameter_list|(
name|struct
name|ib_wq
modifier|*
name|wq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_modify_wq
parameter_list|(
name|struct
name|ib_wq
modifier|*
name|wq
parameter_list|,
name|struct
name|ib_wq_attr
modifier|*
name|wq_attr
parameter_list|,
name|u32
name|wq_attr_mask
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_rwq_ind_table
modifier|*
name|mlx5_ib_create_rwq_ind_table
parameter_list|(
name|struct
name|ib_device
modifier|*
name|device
parameter_list|,
name|struct
name|ib_rwq_ind_table_init_attr
modifier|*
name|init_attr
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_destroy_rwq_ind_table
parameter_list|(
name|struct
name|ib_rwq_ind_table
modifier|*
name|wq_ind_table
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_INFINIBAND_ON_DEMAND_PAGING
end_ifdef

begin_decl_stmt
specifier|extern
name|struct
name|workqueue_struct
modifier|*
name|mlx5_ib_page_fault_wq
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|mlx5_ib_internal_fill_odp_caps
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_mr_pfault_handler
parameter_list|(
name|struct
name|mlx5_ib_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|mlx5_ib_pfault
modifier|*
name|pfault
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_odp_create_qp
parameter_list|(
name|struct
name|mlx5_ib_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_odp_init_one
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|ibdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_odp_remove_one
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|ibdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__init
name|mlx5_ib_odp_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_odp_cleanup
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_qp_disable_pagefaults
parameter_list|(
name|struct
name|mlx5_ib_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_qp_enable_pagefaults
parameter_list|(
name|struct
name|mlx5_ib_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_invalidate_range
parameter_list|(
name|struct
name|ib_umem
modifier|*
name|umem
parameter_list|,
name|unsigned
name|long
name|start
parameter_list|,
name|unsigned
name|long
name|end
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* CONFIG_INFINIBAND_ON_DEMAND_PAGING */
end_comment

begin_function
specifier|static
specifier|inline
name|void
name|mlx5_ib_internal_fill_odp_caps
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|)
block|{
return|return;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|mlx5_ib_odp_create_qp
parameter_list|(
name|struct
name|mlx5_ib_qp
modifier|*
name|qp
parameter_list|)
block|{}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|mlx5_ib_odp_init_one
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|ibdev
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|mlx5_ib_odp_remove_one
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|ibdev
parameter_list|)
block|{}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|mlx5_ib_odp_init
parameter_list|(
name|void
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|mlx5_ib_odp_cleanup
parameter_list|(
name|void
parameter_list|)
block|{}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|mlx5_ib_qp_disable_pagefaults
parameter_list|(
name|struct
name|mlx5_ib_qp
modifier|*
name|qp
parameter_list|)
block|{}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|mlx5_ib_qp_enable_pagefaults
parameter_list|(
name|struct
name|mlx5_ib_qp
modifier|*
name|qp
parameter_list|)
block|{}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* CONFIG_INFINIBAND_ON_DEMAND_PAGING */
end_comment

begin_function_decl
name|int
name|mlx5_ib_get_vf_config
parameter_list|(
name|struct
name|ib_device
modifier|*
name|device
parameter_list|,
name|int
name|vf
parameter_list|,
name|u8
name|port
parameter_list|,
name|struct
name|ifla_vf_info
modifier|*
name|info
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_set_vf_link_state
parameter_list|(
name|struct
name|ib_device
modifier|*
name|device
parameter_list|,
name|int
name|vf
parameter_list|,
name|u8
name|port
parameter_list|,
name|int
name|state
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_get_vf_stats
parameter_list|(
name|struct
name|ib_device
modifier|*
name|device
parameter_list|,
name|int
name|vf
parameter_list|,
name|u8
name|port
parameter_list|,
name|struct
name|ifla_vf_stats
modifier|*
name|stats
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_set_vf_guid
parameter_list|(
name|struct
name|ib_device
modifier|*
name|device
parameter_list|,
name|int
name|vf
parameter_list|,
name|u8
name|port
parameter_list|,
name|u64
name|guid
parameter_list|,
name|int
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|__be16
name|mlx5_get_roce_udp_sport
parameter_list|(
name|struct
name|mlx5_ib_dev
modifier|*
name|dev
parameter_list|,
name|u8
name|port_num
parameter_list|,
name|int
name|index
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* GSI QP helper functions */
end_comment

begin_function_decl
name|struct
name|ib_qp
modifier|*
name|mlx5_ib_gsi_create_qp
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ib_qp_init_attr
modifier|*
name|init_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_gsi_destroy_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_gsi_modify_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ib_qp_attr
modifier|*
name|attr
parameter_list|,
name|int
name|attr_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_gsi_query_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ib_qp_attr
modifier|*
name|qp_attr
parameter_list|,
name|int
name|qp_attr_mask
parameter_list|,
name|struct
name|ib_qp_init_attr
modifier|*
name|qp_init_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_gsi_post_send
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ib_send_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ib_send_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_gsi_post_recv
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ib_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ib_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_ib_gsi_pkey_change
parameter_list|(
name|struct
name|mlx5_ib_gsi_qp
modifier|*
name|gsi
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_ib_generate_wc
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|,
name|struct
name|ib_wc
modifier|*
name|wc
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|void
name|init_query_mad
parameter_list|(
name|struct
name|ib_smp
modifier|*
name|mad
parameter_list|)
block|{
name|mad
operator|->
name|base_version
operator|=
literal|1
expr_stmt|;
name|mad
operator|->
name|mgmt_class
operator|=
name|IB_MGMT_CLASS_SUBN_LID_ROUTED
expr_stmt|;
name|mad
operator|->
name|class_version
operator|=
literal|1
expr_stmt|;
name|mad
operator|->
name|method
operator|=
name|IB_MGMT_METHOD_GET
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u8
name|convert_access
parameter_list|(
name|int
name|acc
parameter_list|)
block|{
return|return
operator|(
name|acc
operator|&
name|IB_ACCESS_REMOTE_ATOMIC
condition|?
name|MLX5_PERM_ATOMIC
else|:
literal|0
operator|)
operator||
operator|(
name|acc
operator|&
name|IB_ACCESS_REMOTE_WRITE
condition|?
name|MLX5_PERM_REMOTE_WRITE
else|:
literal|0
operator|)
operator||
operator|(
name|acc
operator|&
name|IB_ACCESS_REMOTE_READ
condition|?
name|MLX5_PERM_REMOTE_READ
else|:
literal|0
operator|)
operator||
operator|(
name|acc
operator|&
name|IB_ACCESS_LOCAL_WRITE
condition|?
name|MLX5_PERM_LOCAL_WRITE
else|:
literal|0
operator|)
operator||
name|MLX5_PERM_LOCAL_READ
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|is_qp1
parameter_list|(
name|enum
name|ib_qp_type
name|qp_type
parameter_list|)
block|{
return|return
name|qp_type
operator|==
name|MLX5_IB_QPT_HW_GSI
return|;
block|}
end_function

begin_define
define|#
directive|define
name|MLX5_MAX_UMR_SHIFT
value|16
end_define

begin_define
define|#
directive|define
name|MLX5_MAX_UMR_PAGES
value|(1<< MLX5_MAX_UMR_SHIFT)
end_define

begin_function
specifier|static
specifier|inline
name|u32
name|check_cq_create_flags
parameter_list|(
name|u32
name|flags
parameter_list|)
block|{
comment|/* 	 * It returns non-zero value for unsupported CQ 	 * create flags, otherwise it returns zero. 	 */
return|return
operator|(
name|flags
operator|&
operator|~
operator|(
name|IB_CQ_FLAGS_IGNORE_OVERRUN
operator||
name|IB_CQ_FLAGS_TIMESTAMP_COMPLETION
operator|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|verify_assign_uidx
parameter_list|(
name|u8
name|cqe_version
parameter_list|,
name|u32
name|cmd_uidx
parameter_list|,
name|u32
modifier|*
name|user_index
parameter_list|)
block|{
if|if
condition|(
name|cqe_version
condition|)
block|{
if|if
condition|(
operator|(
name|cmd_uidx
operator|==
name|MLX5_IB_DEFAULT_UIDX
operator|)
operator|||
operator|(
name|cmd_uidx
operator|&
operator|~
name|MLX5_USER_ASSIGNED_UIDX_MASK
operator|)
condition|)
return|return
operator|-
name|EINVAL
return|;
operator|*
name|user_index
operator|=
name|cmd_uidx
expr_stmt|;
block|}
else|else
block|{
operator|*
name|user_index
operator|=
name|MLX5_IB_DEFAULT_UIDX
expr_stmt|;
block|}
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|get_qp_user_index
parameter_list|(
name|struct
name|mlx5_ib_ucontext
modifier|*
name|ucontext
parameter_list|,
name|struct
name|mlx5_ib_create_qp
modifier|*
name|ucmd
parameter_list|,
name|int
name|inlen
parameter_list|,
name|u32
modifier|*
name|user_index
parameter_list|)
block|{
name|u8
name|cqe_version
init|=
name|ucontext
operator|->
name|cqe_version
decl_stmt|;
if|if
condition|(
name|field_avail
argument_list|(
expr|struct
name|mlx5_ib_create_qp
argument_list|,
name|uidx
argument_list|,
name|inlen
argument_list|)
operator|&&
operator|!
name|cqe_version
operator|&&
operator|(
name|ucmd
operator|->
name|uidx
operator|==
name|MLX5_IB_DEFAULT_UIDX
operator|)
condition|)
return|return
literal|0
return|;
if|if
condition|(
operator|!
operator|!
operator|(
name|field_avail
argument_list|(
expr|struct
name|mlx5_ib_create_qp
argument_list|,
name|uidx
argument_list|,
name|inlen
argument_list|)
operator|!=
operator|!
operator|!
name|cqe_version
operator|)
condition|)
return|return
operator|-
name|EINVAL
return|;
return|return
name|verify_assign_uidx
argument_list|(
name|cqe_version
argument_list|,
name|ucmd
operator|->
name|uidx
argument_list|,
name|user_index
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|get_srq_user_index
parameter_list|(
name|struct
name|mlx5_ib_ucontext
modifier|*
name|ucontext
parameter_list|,
name|struct
name|mlx5_ib_create_srq
modifier|*
name|ucmd
parameter_list|,
name|int
name|inlen
parameter_list|,
name|u32
modifier|*
name|user_index
parameter_list|)
block|{
name|u8
name|cqe_version
init|=
name|ucontext
operator|->
name|cqe_version
decl_stmt|;
if|if
condition|(
name|field_avail
argument_list|(
expr|struct
name|mlx5_ib_create_srq
argument_list|,
name|uidx
argument_list|,
name|inlen
argument_list|)
operator|&&
operator|!
name|cqe_version
operator|&&
operator|(
name|ucmd
operator|->
name|uidx
operator|==
name|MLX5_IB_DEFAULT_UIDX
operator|)
condition|)
return|return
literal|0
return|;
if|if
condition|(
operator|!
operator|!
operator|(
name|field_avail
argument_list|(
expr|struct
name|mlx5_ib_create_srq
argument_list|,
name|uidx
argument_list|,
name|inlen
argument_list|)
operator|!=
operator|!
operator|!
name|cqe_version
operator|)
condition|)
return|return
operator|-
name|EINVAL
return|;
return|return
name|verify_assign_uidx
argument_list|(
name|cqe_version
argument_list|,
name|ucmd
operator|->
name|uidx
argument_list|,
name|user_index
argument_list|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* MLX5_IB_H */
end_comment

end_unit

