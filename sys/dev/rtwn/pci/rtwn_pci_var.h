begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$OpenBSD: if_rtwnreg.h,v 1.3 2015/06/14 08:02:47 stsp Exp $	*/
end_comment

begin_comment
comment|/*-  * Copyright (c) 2010 Damien Bergamini<damien.bergamini@free.fr>  * Copyright (c) 2015 Stefan Sperling<stsp@openbsd.org>  * Copyright (c) 2016 Andriy Voskoboinyk<avos@FreeBSD.org>  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  *   * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|RTWN_PCI_VAR_H
end_ifndef

begin_define
define|#
directive|define
name|RTWN_PCI_VAR_H
end_define

begin_define
define|#
directive|define
name|RTWN_PCI_RX_LIST_COUNT
value|256
end_define

begin_define
define|#
directive|define
name|RTWN_PCI_TX_LIST_COUNT
value|256
end_define

begin_struct
struct|struct
name|rtwn_rx_data
block|{
name|bus_dmamap_t
name|map
decl_stmt|;
name|struct
name|mbuf
modifier|*
name|m
decl_stmt|;
name|bus_addr_t
name|paddr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rtwn_rx_ring
block|{
name|struct
name|rtwn_rx_stat_pci
modifier|*
name|desc
decl_stmt|;
name|bus_addr_t
name|paddr
decl_stmt|;
name|bus_dma_tag_t
name|desc_dmat
decl_stmt|;
name|bus_dmamap_t
name|desc_map
decl_stmt|;
name|bus_dma_tag_t
name|data_dmat
decl_stmt|;
name|bus_dma_segment_t
name|seg
decl_stmt|;
name|struct
name|rtwn_rx_data
name|rx_data
index|[
name|RTWN_PCI_RX_LIST_COUNT
index|]
decl_stmt|;
name|int
name|cur
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rtwn_tx_data
block|{
name|bus_dmamap_t
name|map
decl_stmt|;
name|struct
name|mbuf
modifier|*
name|m
decl_stmt|;
name|struct
name|ieee80211_node
modifier|*
name|ni
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rtwn_tx_ring
block|{
name|bus_addr_t
name|paddr
decl_stmt|;
name|bus_dma_tag_t
name|desc_dmat
decl_stmt|;
name|bus_dmamap_t
name|desc_map
decl_stmt|;
name|bus_dma_tag_t
name|data_dmat
decl_stmt|;
name|bus_dma_segment_t
name|seg
decl_stmt|;
name|void
modifier|*
name|desc
decl_stmt|;
name|struct
name|rtwn_tx_data
name|tx_data
index|[
name|RTWN_PCI_TX_LIST_COUNT
index|]
decl_stmt|;
name|int
name|queued
decl_stmt|;
name|int
name|cur
decl_stmt|;
name|int
name|last
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * TX queue indices.  */
end_comment

begin_enum
enum|enum
block|{
name|RTWN_PCI_BK_QUEUE
block|,
name|RTWN_PCI_BE_QUEUE
block|,
name|RTWN_PCI_VI_QUEUE
block|,
name|RTWN_PCI_VO_QUEUE
block|,
name|RTWN_PCI_BEACON_QUEUE
block|,
name|RTWN_PCI_TXCMD_QUEUE
block|,
name|RTWN_PCI_MGNT_QUEUE
block|,
name|RTWN_PCI_HIGH_QUEUE
block|,
name|RTWN_PCI_HCCA_QUEUE
block|,
name|RTWN_PCI_NTXQUEUES
block|}
enum|;
end_enum

begin_comment
comment|/*  * Interrupt events.  */
end_comment

begin_enum
enum|enum
block|{
name|RTWN_PCI_INTR_RX_ERROR
init|=
literal|0x00000001
block|,
name|RTWN_PCI_INTR_RX_OVERFLOW
init|=
literal|0x00000002
block|,
name|RTWN_PCI_INTR_RX_DESC_UNAVAIL
init|=
literal|0x00000004
block|,
name|RTWN_PCI_INTR_RX_DONE
init|=
literal|0x00000008
block|,
name|RTWN_PCI_INTR_TX_ERROR
init|=
literal|0x00000010
block|,
name|RTWN_PCI_INTR_TX_OVERFLOW
init|=
literal|0x00000020
block|,
name|RTWN_PCI_INTR_TX_REPORT
init|=
literal|0x00000040
block|,
name|RTWN_PCI_INTR_PS_TIMEOUT
init|=
literal|0x00000080
block|}
enum|;
end_enum

begin_comment
comment|/* Shortcuts */
end_comment

begin_comment
comment|/* Vendor driver treats RX errors like ROK... */
end_comment

begin_define
define|#
directive|define
name|RTWN_PCI_INTR_RX
define|\
value|(RTWN_PCI_INTR_RX_OVERFLOW | RTWN_PCI_INTR_RX_DESC_UNAVAIL | \ 	 RTWN_PCI_INTR_RX_DONE)
end_define

begin_struct
struct|struct
name|rtwn_pci_softc
block|{
name|struct
name|rtwn_softc
name|pc_sc
decl_stmt|;
comment|/* must be the first */
name|struct
name|resource
modifier|*
name|irq
decl_stmt|;
name|struct
name|resource
modifier|*
name|mem
decl_stmt|;
name|bus_space_tag_t
name|pc_st
decl_stmt|;
name|bus_space_handle_t
name|pc_sh
decl_stmt|;
name|void
modifier|*
name|pc_ih
decl_stmt|;
name|bus_size_t
name|pc_mapsize
decl_stmt|;
name|struct
name|rtwn_rx_ring
name|rx_ring
decl_stmt|;
name|struct
name|rtwn_tx_ring
name|tx_ring
index|[
name|RTWN_PCI_NTXQUEUES
index|]
decl_stmt|;
comment|/* must be set by the driver. */
name|uint16_t
name|pc_qmap
decl_stmt|;
name|uint32_t
name|tcr
decl_stmt|;
name|void
function_decl|(
modifier|*
name|pc_setup_tx_desc
function_decl|)
parameter_list|(
name|struct
name|rtwn_pci_softc
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|pc_tx_postsetup
function_decl|)
parameter_list|(
name|struct
name|rtwn_pci_softc
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|bus_dma_segment_t
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|pc_copy_tx_desc
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|pc_enable_intr
function_decl|)
parameter_list|(
name|struct
name|rtwn_pci_softc
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|RTWN_PCI_SOFTC
parameter_list|(
name|sc
parameter_list|)
value|((struct rtwn_pci_softc *)(sc))
end_define

begin_define
define|#
directive|define
name|rtwn_pci_setup_tx_desc
parameter_list|(
name|_pc
parameter_list|,
name|_desc
parameter_list|,
name|_addr
parameter_list|)
define|\
value|(((_pc)->pc_setup_tx_desc)((_pc), (_desc), (_addr)))
end_define

begin_define
define|#
directive|define
name|rtwn_pci_tx_postsetup
parameter_list|(
name|_pc
parameter_list|,
name|_txd
parameter_list|,
name|_segs
parameter_list|)
define|\
value|(((_pc)->pc_tx_postsetup)((_pc), (_txd), (_segs)))
end_define

begin_define
define|#
directive|define
name|rtwn_pci_copy_tx_desc
parameter_list|(
name|_pc
parameter_list|,
name|_dest
parameter_list|,
name|_src
parameter_list|)
define|\
value|(((_pc)->pc_copy_tx_desc)((_dest), (_src)))
end_define

begin_define
define|#
directive|define
name|rtwn_pci_enable_intr
parameter_list|(
name|_pc
parameter_list|)
define|\
value|(((_pc)->pc_enable_intr)((_pc)))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* RTWN_PCI_VAR_H */
end_comment

end_unit

