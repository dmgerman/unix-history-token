begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2010 Damien Bergamini<damien.bergamini@free.fr>  * Copyright (c) 2016 Andriy Voskoboinyk<avos@FreeBSD.org>  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  *  * $OpenBSD: if_urtwnreg.h,v 1.3 2010/11/16 18:02:59 damien Exp $  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|R92C_PRIV_H
end_ifndef

begin_define
define|#
directive|define
name|R92C_PRIV_H
end_define

begin_include
include|#
directive|include
file|<dev/rtwn/rtl8192c/r92c_rom_defs.h>
end_include

begin_comment
comment|/*  * Parsed Tx power (diff) values.  */
end_comment

begin_struct
struct|struct
name|rtwn_r92c_txpwr
block|{
name|uint8_t
name|cck_tx_pwr
index|[
name|R92C_MAX_CHAINS
index|]
index|[
name|R92C_GROUP_2G
index|]
decl_stmt|;
name|uint8_t
name|ht40_1s_tx_pwr
index|[
name|R92C_MAX_CHAINS
index|]
index|[
name|R92C_GROUP_2G
index|]
decl_stmt|;
name|int8_t
name|ht40_2s_tx_pwr_diff
index|[
name|R92C_MAX_CHAINS
index|]
index|[
name|R92C_GROUP_2G
index|]
decl_stmt|;
name|int8_t
name|ht20_tx_pwr_diff
index|[
name|R92C_MAX_CHAINS
index|]
index|[
name|R92C_GROUP_2G
index|]
decl_stmt|;
name|int8_t
name|ofdm_tx_pwr_diff
index|[
name|R92C_MAX_CHAINS
index|]
index|[
name|R92C_GROUP_2G
index|]
decl_stmt|;
name|int8_t
name|ht40_max_pwr
index|[
name|R92C_MAX_CHAINS
index|]
index|[
name|R92C_GROUP_2G
index|]
decl_stmt|;
name|int8_t
name|ht20_max_pwr
index|[
name|R92C_MAX_CHAINS
index|]
index|[
name|R92C_GROUP_2G
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Baseband initialization values (shared parts).  */
end_comment

begin_define
define|#
directive|define
name|R92C_COND_RTL8188CE
value|0x01
end_define

begin_define
define|#
directive|define
name|R92C_COND_RTL8188CU
value|0x02
end_define

begin_define
define|#
directive|define
name|R92C_COND_RTL8188RU
value|0x04
end_define

begin_define
define|#
directive|define
name|R92C_COND_RTL8192CE
value|0x08
end_define

begin_define
define|#
directive|define
name|R92C_COND_RTL8192CU
value|0x10
end_define

begin_comment
comment|/* Shortcut. */
end_comment

begin_define
define|#
directive|define
name|R92C_COND_RTL8192C
value|(R92C_COND_RTL8192CE | R92C_COND_RTL8192CU)
end_define

begin_decl_stmt
specifier|static
specifier|const
name|uint16_t
name|rtl8192c_bb_regs3
index|[]
init|=
block|{
literal|0xd04
block|}
decl_stmt|,
name|rtl8192c_bb_regs4
index|[]
init|=
block|{
literal|0xd08
block|,
literal|0xd0c
block|,
literal|0xd10
block|,
literal|0xd14
block|,
literal|0xd18
block|,
literal|0xd2c
block|,
literal|0xd30
block|,
literal|0xd34
block|,
literal|0xd38
block|,
literal|0xd3c
block|,
literal|0xd40
block|,
literal|0xd44
block|,
literal|0xd48
block|,
literal|0xd4c
block|,
literal|0xd50
block|,
literal|0xd54
block|,
literal|0xd58
block|,
literal|0xd5c
block|,
literal|0xd60
block|,
literal|0xd64
block|,
literal|0xd68
block|,
literal|0xd6c
block|,
literal|0xd70
block|,
literal|0xd74
block|,
literal|0xd78
block|,
literal|0xe00
block|,
literal|0xe04
block|,
literal|0xe08
block|,
literal|0xe10
block|,
literal|0xe14
block|,
literal|0xe18
block|,
literal|0xe1c
block|,
literal|0xe28
block|,
literal|0xe30
block|,
literal|0xe34
block|,
literal|0xe38
block|,
literal|0xe3c
block|,
literal|0xe40
block|,
literal|0xe44
block|,
literal|0xe48
block|,
literal|0xe4c
block|,
literal|0xe50
block|,
literal|0xe54
block|,
literal|0xe58
block|,
literal|0xe5c
block|}
decl_stmt|,
name|rtl8192c_bb_regs5
index|[]
init|=
block|{
literal|0xe60
block|,
literal|0xe68
block|,
literal|0xe6c
block|,
literal|0xe70
block|,
literal|0xe74
block|,
literal|0xe78
block|,
literal|0xe7c
block|,
literal|0xe80
block|,
literal|0xe84
block|,
literal|0xe88
block|,
literal|0xe8c
block|,
literal|0xed0
block|,
literal|0xed4
block|,
literal|0xed8
block|,
literal|0xedc
block|,
literal|0xee0
block|,
literal|0xeec
block|,
literal|0xf14
block|,
literal|0xf4c
block|,
literal|0xf00
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8192c_bb_vals3_88cu_88ru
index|[]
init|=
block|{
literal|0x00020401
block|}
decl_stmt|,
name|rtl8192c_bb_vals3_92ce_92cu
index|[]
init|=
block|{
literal|0x00020403
block|}
decl_stmt|,
name|rtl8192c_bb_vals4
index|[]
init|=
block|{
literal|0x0000907f
block|,
literal|0x20010201
block|,
literal|0xa0633333
block|,
literal|0x3333bc43
block|,
literal|0x7a8f5b6b
block|,
literal|0xcc979975
block|,
literal|0x00000000
block|,
literal|0x80608000
block|,
literal|0x00000000
block|,
literal|0x00027293
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x6437140a
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x30032064
block|,
literal|0x4653de68
block|,
literal|0x04518a3c
block|,
literal|0x00002101
block|,
literal|0x2a201c16
block|,
literal|0x1812362e
block|,
literal|0x322c2220
block|,
literal|0x000e3c24
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x03902a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x00000000
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x681604c2
block|,
literal|0x01007c00
block|,
literal|0x01004800
block|,
literal|0xfb000000
block|,
literal|0x000028d1
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x28160d05
block|}
decl_stmt|,
name|rtl8192c_bb_vals5_92ce_92cu
index|[]
init|=
block|{
literal|0x00000010
block|,
literal|0x001b25a4
block|,
literal|0x63db25a4
block|,
literal|0x63db25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x63db25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x63db25a4
block|,
literal|0x63db25a4
block|,
literal|0x63db25a4
block|,
literal|0x63db25a4
block|,
literal|0x001b25a4
block|,
literal|0x001b25a4
block|,
literal|0x6fdb25a4
block|,
literal|0x00000003
block|,
literal|0x00000000
block|,
literal|0x00000300
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RTL8192CU and RTL8192CE-VAU.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8192ce_agc_vals
index|[]
init|=
block|{
literal|0x7b000001
block|,
literal|0x7b010001
block|,
literal|0x7b020001
block|,
literal|0x7b030001
block|,
literal|0x7b040001
block|,
literal|0x7b050001
block|,
literal|0x7a060001
block|,
literal|0x79070001
block|,
literal|0x78080001
block|,
literal|0x77090001
block|,
literal|0x760a0001
block|,
literal|0x750b0001
block|,
literal|0x740c0001
block|,
literal|0x730d0001
block|,
literal|0x720e0001
block|,
literal|0x710f0001
block|,
literal|0x70100001
block|,
literal|0x6f110001
block|,
literal|0x6e120001
block|,
literal|0x6d130001
block|,
literal|0x6c140001
block|,
literal|0x6b150001
block|,
literal|0x6a160001
block|,
literal|0x69170001
block|,
literal|0x68180001
block|,
literal|0x67190001
block|,
literal|0x661a0001
block|,
literal|0x651b0001
block|,
literal|0x641c0001
block|,
literal|0x631d0001
block|,
literal|0x621e0001
block|,
literal|0x611f0001
block|,
literal|0x60200001
block|,
literal|0x49210001
block|,
literal|0x48220001
block|,
literal|0x47230001
block|,
literal|0x46240001
block|,
literal|0x45250001
block|,
literal|0x44260001
block|,
literal|0x43270001
block|,
literal|0x42280001
block|,
literal|0x41290001
block|,
literal|0x402a0001
block|,
literal|0x262b0001
block|,
literal|0x252c0001
block|,
literal|0x242d0001
block|,
literal|0x232e0001
block|,
literal|0x222f0001
block|,
literal|0x21300001
block|,
literal|0x20310001
block|,
literal|0x06320001
block|,
literal|0x05330001
block|,
literal|0x04340001
block|,
literal|0x03350001
block|,
literal|0x02360001
block|,
literal|0x01370001
block|,
literal|0x00380001
block|,
literal|0x00390001
block|,
literal|0x003a0001
block|,
literal|0x003b0001
block|,
literal|0x003c0001
block|,
literal|0x003d0001
block|,
literal|0x003e0001
block|,
literal|0x003f0001
block|,
literal|0x7b400001
block|,
literal|0x7b410001
block|,
literal|0x7b420001
block|,
literal|0x7b430001
block|,
literal|0x7b440001
block|,
literal|0x7b450001
block|,
literal|0x7a460001
block|,
literal|0x79470001
block|,
literal|0x78480001
block|,
literal|0x77490001
block|,
literal|0x764a0001
block|,
literal|0x754b0001
block|,
literal|0x744c0001
block|,
literal|0x734d0001
block|,
literal|0x724e0001
block|,
literal|0x714f0001
block|,
literal|0x70500001
block|,
literal|0x6f510001
block|,
literal|0x6e520001
block|,
literal|0x6d530001
block|,
literal|0x6c540001
block|,
literal|0x6b550001
block|,
literal|0x6a560001
block|,
literal|0x69570001
block|,
literal|0x68580001
block|,
literal|0x67590001
block|,
literal|0x665a0001
block|,
literal|0x655b0001
block|,
literal|0x645c0001
block|,
literal|0x635d0001
block|,
literal|0x625e0001
block|,
literal|0x615f0001
block|,
literal|0x60600001
block|,
literal|0x49610001
block|,
literal|0x48620001
block|,
literal|0x47630001
block|,
literal|0x46640001
block|,
literal|0x45650001
block|,
literal|0x44660001
block|,
literal|0x43670001
block|,
literal|0x42680001
block|,
literal|0x41690001
block|,
literal|0x406a0001
block|,
literal|0x266b0001
block|,
literal|0x256c0001
block|,
literal|0x246d0001
block|,
literal|0x236e0001
block|,
literal|0x226f0001
block|,
literal|0x21700001
block|,
literal|0x20710001
block|,
literal|0x06720001
block|,
literal|0x05730001
block|,
literal|0x04740001
block|,
literal|0x03750001
block|,
literal|0x02760001
block|,
literal|0x01770001
block|,
literal|0x00780001
block|,
literal|0x00790001
block|,
literal|0x007a0001
block|,
literal|0x007b0001
block|,
literal|0x007c0001
block|,
literal|0x007d0001
block|,
literal|0x007e0001
block|,
literal|0x007f0001
block|,
literal|0x3800001e
block|,
literal|0x3801001e
block|,
literal|0x3802001e
block|,
literal|0x3803001e
block|,
literal|0x3804001e
block|,
literal|0x3805001e
block|,
literal|0x3806001e
block|,
literal|0x3807001e
block|,
literal|0x3808001e
block|,
literal|0x3c09001e
block|,
literal|0x3e0a001e
block|,
literal|0x400b001e
block|,
literal|0x440c001e
block|,
literal|0x480d001e
block|,
literal|0x4c0e001e
block|,
literal|0x500f001e
block|,
literal|0x5210001e
block|,
literal|0x5611001e
block|,
literal|0x5a12001e
block|,
literal|0x5e13001e
block|,
literal|0x6014001e
block|,
literal|0x6015001e
block|,
literal|0x6016001e
block|,
literal|0x6217001e
block|,
literal|0x6218001e
block|,
literal|0x6219001e
block|,
literal|0x621a001e
block|,
literal|0x621b001e
block|,
literal|0x621c001e
block|,
literal|0x621d001e
block|,
literal|0x621e001e
block|,
literal|0x621f001e
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_agc_prog
name|rtl8192ce_agc
index|[]
init|=
block|{
block|{
name|nitems
argument_list|(
name|rtl8192ce_agc_vals
argument_list|)
block|,
name|rtl8192ce_agc_vals
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RF initialization values.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint8_t
name|rtl8192c_rf0_regs0
index|[]
init|=
block|{
literal|0x00
block|,
literal|0x01
block|,
literal|0x02
block|,
literal|0x03
block|,
literal|0x04
block|,
literal|0x09
block|,
literal|0x0a
block|,
literal|0x0b
block|,
literal|0x0c
block|,
literal|0x0d
block|,
literal|0x0e
block|,
literal|0x0f
block|,
literal|0x19
block|,
literal|0x1a
block|,
literal|0x1b
block|,
literal|0x1c
block|,
literal|0x1d
block|,
literal|0x1e
block|,
literal|0x1f
block|,
literal|0x20
block|,
literal|0x21
block|}
decl_stmt|,
name|rtl8192c_rf0_regs1
index|[]
init|=
block|{
literal|0x22
block|,
literal|0x23
block|,
literal|0x24
block|,
literal|0x25
block|,
literal|0x26
block|,
literal|0x27
block|,
literal|0x28
block|}
decl_stmt|,
name|rtl8192c_rf0_regs2
index|[]
init|=
block|{
literal|0x29
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x10
block|,
literal|0x11
block|}
decl_stmt|,
name|rtl8192c_rf0_regs3
index|[]
init|=
block|{
literal|0x12
block|,
literal|0x12
block|,
literal|0x12
block|,
literal|0x12
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|}
decl_stmt|,
name|rtl8192c_rf0_regs4
index|[]
init|=
block|{
literal|0x14
block|,
literal|0x14
block|,
literal|0x14
block|,
literal|0x14
block|,
literal|0x15
block|,
literal|0x15
block|,
literal|0x15
block|,
literal|0x15
block|}
decl_stmt|,
name|rtl8192c_rf0_regs5
index|[]
init|=
block|{
literal|0x16
block|,
literal|0x16
block|,
literal|0x16
block|,
literal|0x16
block|,
literal|0x00
block|,
literal|0x18
block|,
literal|0xfe
block|,
literal|0xfe
block|,
literal|0x1f
block|,
literal|0xfe
block|,
literal|0xfe
block|,
literal|0x1e
block|,
literal|0x1f
block|,
literal|0x00
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8192c_rf0_vals0_88ce_88cu_92ce
index|[]
init|=
block|{
literal|0x30159
block|,
literal|0x31284
block|,
literal|0x98000
block|,
literal|0x18c63
block|,
literal|0x210e7
block|,
literal|0x2044f
block|,
literal|0x1adb1
block|,
literal|0x54867
block|,
literal|0x8992e
block|,
literal|0x0e52c
block|,
literal|0x39ce7
block|,
literal|0x00451
block|,
literal|0x00000
block|,
literal|0x10255
block|,
literal|0x60a00
block|,
literal|0xfc378
block|,
literal|0xa1250
block|,
literal|0x4445f
block|,
literal|0x80001
block|,
literal|0x0b614
block|,
literal|0x6c000
block|}
decl_stmt|,
name|rtl8192c_rf0_vals0_88ru
index|[]
init|=
block|{
literal|0x30159
block|,
literal|0x31284
block|,
literal|0x98000
block|,
literal|0x18c63
block|,
literal|0x210e7
block|,
literal|0x2044f
block|,
literal|0x1adb0
block|,
literal|0x54867
block|,
literal|0x8992e
block|,
literal|0x0e529
block|,
literal|0x39ce7
block|,
literal|0x00451
block|,
literal|0x00000
block|,
literal|0x00255
block|,
literal|0x60a00
block|,
literal|0xfc378
block|,
literal|0xa1250
block|,
literal|0x4445f
block|,
literal|0x80001
block|,
literal|0x0b614
block|,
literal|0x6c000
block|}
decl_stmt|,
name|rtl8192c_rf0_vals1_88ru
index|[]
init|=
block|{
literal|0x0083c
block|,
literal|0x01558
block|,
literal|0x00060
block|,
literal|0x00483
block|,
literal|0x4f000
block|,
literal|0xec7d9
block|,
literal|0x977c0
block|}
decl_stmt|,
name|rtl8192c_rf0_vals1_88ce
index|[]
init|=
block|{
literal|0x00000
block|,
literal|0x01558
block|,
literal|0x00060
block|,
literal|0x00483
block|,
literal|0x4f200
block|,
literal|0xec7d9
block|,
literal|0x577c0
block|}
decl_stmt|,
name|rtl8192c_rf0_vals1_88cu_92ce
index|[]
init|=
block|{
literal|0x00000
block|,
literal|0x01558
block|,
literal|0x00060
block|,
literal|0x00483
block|,
literal|0x4f000
block|,
literal|0xec7d9
block|,
literal|0x577c0
block|}
decl_stmt|,
name|rtl8192c_rf0_vals2
index|[]
init|=
block|{
literal|0x04783
block|,
literal|0x00001
block|,
literal|0x21334
block|,
literal|0x00000
block|,
literal|0x00054
block|,
literal|0x00001
block|,
literal|0x00808
block|,
literal|0x53333
block|,
literal|0x0000c
block|,
literal|0x00002
block|,
literal|0x00808
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x00003
block|,
literal|0x00808
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x00004
block|,
literal|0x00808
block|,
literal|0x6b333
block|,
literal|0x0000d
block|,
literal|0x00005
block|,
literal|0x00808
block|,
literal|0x73333
block|,
literal|0x0000d
block|,
literal|0x00006
block|,
literal|0x00709
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x00007
block|,
literal|0x00709
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x00008
block|,
literal|0x0060a
block|,
literal|0x4b333
block|,
literal|0x0000d
block|,
literal|0x00009
block|,
literal|0x0060a
block|,
literal|0x53333
block|,
literal|0x0000d
block|,
literal|0x0000a
block|,
literal|0x0060a
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x0000b
block|,
literal|0x0060a
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x0000c
block|,
literal|0x0060a
block|,
literal|0x6b333
block|,
literal|0x0000d
block|,
literal|0x0000d
block|,
literal|0x0060a
block|,
literal|0x73333
block|,
literal|0x0000d
block|,
literal|0x0000e
block|,
literal|0x0050b
block|,
literal|0x66666
block|,
literal|0x0001a
block|,
literal|0xe0000
block|,
literal|0x4000f
block|,
literal|0xe31fc
block|,
literal|0x6000f
block|,
literal|0xff9f8
block|,
literal|0x2000f
block|,
literal|0x203f9
block|,
literal|0x3000f
block|,
literal|0xff500
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x8000f
block|,
literal|0x3f100
block|,
literal|0x9000f
block|,
literal|0x23100
block|}
decl_stmt|,
name|rtl8192c_rf0_vals3_88ru
index|[]
init|=
block|{
literal|0xd8000
block|,
literal|0x90000
block|,
literal|0x51000
block|,
literal|0x12000
block|,
literal|0x28fb4
block|,
literal|0x24fa8
block|,
literal|0x207a4
block|,
literal|0x1c798
block|,
literal|0x183a4
block|,
literal|0x14398
block|,
literal|0x101a4
block|,
literal|0x0c198
block|,
literal|0x080a4
block|,
literal|0x04098
block|,
literal|0x00014
block|}
decl_stmt|,
name|rtl8192c_rf0_vals3_92ce
index|[]
init|=
block|{
literal|0x32000
block|,
literal|0x71000
block|,
literal|0xb0000
block|,
literal|0xfc000
block|,
literal|0x287af
block|,
literal|0x244b7
block|,
literal|0x204ab
block|,
literal|0x1c49f
block|,
literal|0x18493
block|,
literal|0x14297
block|,
literal|0x10295
block|,
literal|0x0c298
block|,
literal|0x0819c
block|,
literal|0x040a8
block|,
literal|0x0001c
block|}
decl_stmt|,
name|rtl8192c_rf0_vals3_88cu_88ce
index|[]
init|=
block|{
literal|0x32000
block|,
literal|0x71000
block|,
literal|0xb0000
block|,
literal|0xfc000
block|,
literal|0x287b3
block|,
literal|0x244b7
block|,
literal|0x204ab
block|,
literal|0x1c49f
block|,
literal|0x18493
block|,
literal|0x1429b
block|,
literal|0x10299
block|,
literal|0x0c29c
block|,
literal|0x081a0
block|,
literal|0x040ac
block|,
literal|0x00020
block|}
decl_stmt|,
name|rtl8192c_rf0_vals4_92ce_88ce
index|[]
init|=
block|{
literal|0x1944c
block|,
literal|0x59444
block|,
literal|0x9944c
block|,
literal|0xd9444
block|,
literal|0x0f424
block|,
literal|0x4f424
block|,
literal|0x8f424
block|,
literal|0xcf424
block|}
decl_stmt|,
name|rtl8192c_rf0_vals4_88cu_88ru
index|[]
init|=
block|{
literal|0x1944c
block|,
literal|0x59444
block|,
literal|0x9944c
block|,
literal|0xd9444
block|,
literal|0x0f405
block|,
literal|0x4f405
block|,
literal|0x8f405
block|,
literal|0xcf405
block|}
decl_stmt|,
name|rtl8192c_rf0_vals5
index|[]
init|=
block|{
literal|0xe0330
block|,
literal|0xa0330
block|,
literal|0x60330
block|,
literal|0x20330
block|,
literal|0x10159
block|,
literal|0x0f401
block|,
literal|0x0c350
block|,
literal|0x0c350
block|,
literal|0x80003
block|,
literal|0x0c350
block|,
literal|0x0c350
block|,
literal|0x44457
block|,
literal|0x80000
block|,
literal|0x30159
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_rf_prog
name|rtl8192c_rf
index|[]
init|=
block|{
comment|/* RF chain 0 */
comment|/* RTL8188RU. */
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs0
argument_list|)
block|,
name|rtl8192c_rf0_regs0
block|,
name|rtl8192c_rf0_vals0_88ru
block|,
block|{
name|R92C_COND_RTL8188RU
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs0
argument_list|)
block|,
name|rtl8192c_rf0_regs0
block|,
name|rtl8192c_rf0_vals0_88ce_88cu_92ce
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
comment|/* RTL8188RU. */
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs1
argument_list|)
block|,
name|rtl8192c_rf0_regs1
block|,
name|rtl8192c_rf0_vals1_88ru
block|,
block|{
name|R92C_COND_RTL8188RU
block|}
block|,
comment|/* RTL8188CE. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs1
argument_list|)
block|,
name|rtl8192c_rf0_regs1
block|,
name|rtl8192c_rf0_vals1_88ce
block|,
block|{
name|R92C_COND_RTL8188CE
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs1
argument_list|)
block|,
name|rtl8192c_rf0_regs1
block|,
name|rtl8192c_rf0_vals1_88cu_92ce
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs2
argument_list|)
block|,
name|rtl8192c_rf0_regs2
block|,
name|rtl8192c_rf0_vals2
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* RTL8188RU. */
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs3
argument_list|)
block|,
name|rtl8192c_rf0_regs3
block|,
name|rtl8192c_rf0_vals3_88ru
block|,
block|{
name|R92C_COND_RTL8188RU
block|}
block|,
comment|/* RTL8192C. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs3
argument_list|)
block|,
name|rtl8192c_rf0_regs3
block|,
name|rtl8192c_rf0_vals3_92ce
block|,
block|{
name|R92C_COND_RTL8192C
block|}
block|,
comment|/* Others. */
operator|&
operator|(
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs3
argument_list|)
block|,
name|rtl8192c_rf0_regs3
block|,
name|rtl8192c_rf0_vals3_88cu_88ce
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|}
block|,
comment|/* RTL8188CE / RTL8192C. */
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs4
argument_list|)
block|,
name|rtl8192c_rf0_regs4
block|,
name|rtl8192c_rf0_vals4_92ce_88ce
block|,
block|{
name|R92C_COND_RTL8188CE
operator||
name|R92C_COND_RTL8192C
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs4
argument_list|)
block|,
name|rtl8192c_rf0_regs4
block|,
name|rtl8192c_rf0_vals4_88cu_88ru
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs5
argument_list|)
block|,
name|rtl8192c_rf0_regs5
block|,
name|rtl8192c_rf0_vals5
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
block|{
literal|0
block|,
name|NULL
block|,
name|NULL
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* RF chain 1 (RTL8192C). */
block|{
literal|12
block|,
comment|/* 0x00 - 0x0f */
name|rtl8192c_rf0_regs0
block|,
name|rtl8192c_rf0_vals0_88ce_88cu_92ce
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs3
argument_list|)
block|,
comment|/* 0x12 - 0x13 */
name|rtl8192c_rf0_regs3
block|,
name|rtl8192c_rf0_vals3_92ce
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8192c_rf0_regs4
argument_list|)
block|,
comment|/* 0x14 - 0x15 */
name|rtl8192c_rf0_regs4
block|,
name|rtl8192c_rf0_vals4_92ce_88ce
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
block|{
literal|4
block|,
comment|/* 0x16 */
name|rtl8192c_rf0_regs5
block|,
name|rtl8192c_rf0_vals5
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
block|{
literal|0
block|,
name|NULL
block|,
name|NULL
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_struct
struct|struct
name|rtwn_r92c_txagc
block|{
name|uint8_t
name|pwr
index|[
name|R92C_GROUP_2G
index|]
index|[
literal|28
index|]
decl_stmt|;
comment|/* RTWN_RIDX_MCS(15) + 1 */
block|}
struct|;
end_struct

begin_comment
comment|/*  * Per RF chain/group/rate Tx gain values.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_r92c_txagc
name|rtl8192cu_txagc
index|[]
init|=
block|{
block|{
block|{
comment|/* Chain 0. */
block|{
comment|/* Group 0. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x0c
block|,
literal|0x0c
block|,
literal|0x0c
block|,
literal|0x0a
block|,
literal|0x08
block|,
literal|0x06
block|,
literal|0x04
block|,
literal|0x02
block|,
comment|/* OFDM6~54. */
literal|0x0e
block|,
literal|0x0d
block|,
literal|0x0c
block|,
literal|0x0a
block|,
literal|0x08
block|,
literal|0x06
block|,
literal|0x04
block|,
literal|0x02
block|,
comment|/* MCS0~7. */
literal|0x0e
block|,
literal|0x0d
block|,
literal|0x0c
block|,
literal|0x0a
block|,
literal|0x08
block|,
literal|0x06
block|,
literal|0x04
block|,
literal|0x02
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 1. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 2. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x04
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x02
block|,
literal|0x02
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|}
block|}
block|,
block|{
block|{
comment|/* Chain 1. */
block|{
comment|/* Group 0. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 1. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 2. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x04
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x02
block|,
literal|0x02
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|}
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_r92c_txagc
name|rtl8188ru_txagc
index|[]
init|=
block|{
block|{
block|{
comment|/* Chain 0. */
block|{
comment|/* Group 0. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x08
block|,
literal|0x08
block|,
literal|0x08
block|,
literal|0x06
block|,
literal|0x06
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x08
block|,
literal|0x06
block|,
literal|0x06
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x02
block|,
literal|0x02
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x08
block|,
literal|0x06
block|,
literal|0x06
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x02
block|,
literal|0x02
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 1. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 2. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|}
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* R92C_PRIV_H */
end_comment

end_unit

