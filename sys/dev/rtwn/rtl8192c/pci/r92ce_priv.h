begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$OpenBSD: if_rtwnreg.h,v 1.3 2015/06/14 08:02:47 stsp Exp $	*/
end_comment

begin_comment
comment|/*-  * Copyright (c) 2010 Damien Bergamini<damien.bergamini@free.fr>  * Copyright (c) 2015 Stefan Sperling<stsp@openbsd.org>  * Copyright (c) 2016 Andriy Voskoboinyk<avos@FreeBSD.org>  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  *   * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|R92CE_PRIV_H
end_ifndef

begin_define
define|#
directive|define
name|R92CE_PRIV_H
end_define

begin_include
include|#
directive|include
file|<dev/rtwn/rtl8192c/r92c_priv.h>
end_include

begin_comment
comment|/*  * MAC initialization values.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_mac_prog
name|rtl8192ce_mac
index|[]
init|=
block|{
block|{
literal|0x420
block|,
literal|0x80
block|}
block|,
block|{
literal|0x423
block|,
literal|0x00
block|}
block|,
block|{
literal|0x430
block|,
literal|0x00
block|}
block|,
block|{
literal|0x431
block|,
literal|0x00
block|}
block|,
block|{
literal|0x432
block|,
literal|0x00
block|}
block|,
block|{
literal|0x433
block|,
literal|0x01
block|}
block|,
block|{
literal|0x434
block|,
literal|0x04
block|}
block|,
block|{
literal|0x435
block|,
literal|0x05
block|}
block|,
block|{
literal|0x436
block|,
literal|0x06
block|}
block|,
block|{
literal|0x437
block|,
literal|0x07
block|}
block|,
block|{
literal|0x438
block|,
literal|0x00
block|}
block|,
block|{
literal|0x439
block|,
literal|0x00
block|}
block|,
block|{
literal|0x43a
block|,
literal|0x00
block|}
block|,
block|{
literal|0x43b
block|,
literal|0x01
block|}
block|,
block|{
literal|0x43c
block|,
literal|0x04
block|}
block|,
block|{
literal|0x43d
block|,
literal|0x05
block|}
block|,
block|{
literal|0x43e
block|,
literal|0x06
block|}
block|,
block|{
literal|0x43f
block|,
literal|0x07
block|}
block|,
block|{
literal|0x440
block|,
literal|0x5d
block|}
block|,
block|{
literal|0x441
block|,
literal|0x01
block|}
block|,
block|{
literal|0x442
block|,
literal|0x00
block|}
block|,
block|{
literal|0x444
block|,
literal|0x15
block|}
block|,
block|{
literal|0x445
block|,
literal|0xf0
block|}
block|,
block|{
literal|0x446
block|,
literal|0x0f
block|}
block|,
block|{
literal|0x447
block|,
literal|0x00
block|}
block|,
block|{
literal|0x458
block|,
literal|0x41
block|}
block|,
block|{
literal|0x459
block|,
literal|0xa8
block|}
block|,
block|{
literal|0x45a
block|,
literal|0x72
block|}
block|,
block|{
literal|0x45b
block|,
literal|0xb9
block|}
block|,
block|{
literal|0x460
block|,
literal|0x88
block|}
block|,
block|{
literal|0x461
block|,
literal|0x88
block|}
block|,
block|{
literal|0x462
block|,
literal|0x06
block|}
block|,
block|{
literal|0x463
block|,
literal|0x03
block|}
block|,
block|{
literal|0x4c8
block|,
literal|0x04
block|}
block|,
block|{
literal|0x4c9
block|,
literal|0x08
block|}
block|,
block|{
literal|0x4cc
block|,
literal|0x02
block|}
block|,
block|{
literal|0x4cd
block|,
literal|0x28
block|}
block|,
block|{
literal|0x4ce
block|,
literal|0x01
block|}
block|,
block|{
literal|0x500
block|,
literal|0x26
block|}
block|,
block|{
literal|0x501
block|,
literal|0xa2
block|}
block|,
block|{
literal|0x502
block|,
literal|0x2f
block|}
block|,
block|{
literal|0x503
block|,
literal|0x00
block|}
block|,
block|{
literal|0x504
block|,
literal|0x28
block|}
block|,
block|{
literal|0x505
block|,
literal|0xa3
block|}
block|,
block|{
literal|0x506
block|,
literal|0x5e
block|}
block|,
block|{
literal|0x507
block|,
literal|0x00
block|}
block|,
block|{
literal|0x508
block|,
literal|0x2b
block|}
block|,
block|{
literal|0x509
block|,
literal|0xa4
block|}
block|,
block|{
literal|0x50a
block|,
literal|0x5e
block|}
block|,
block|{
literal|0x50b
block|,
literal|0x00
block|}
block|,
block|{
literal|0x50c
block|,
literal|0x4f
block|}
block|,
block|{
literal|0x50d
block|,
literal|0xa4
block|}
block|,
block|{
literal|0x50e
block|,
literal|0x00
block|}
block|,
block|{
literal|0x50f
block|,
literal|0x00
block|}
block|,
block|{
literal|0x512
block|,
literal|0x1c
block|}
block|,
block|{
literal|0x514
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x515
block|,
literal|0x10
block|}
block|,
block|{
literal|0x516
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x517
block|,
literal|0x10
block|}
block|,
block|{
literal|0x51a
block|,
literal|0x16
block|}
block|,
block|{
literal|0x524
block|,
literal|0x0f
block|}
block|,
block|{
literal|0x525
block|,
literal|0x4f
block|}
block|,
block|{
literal|0x546
block|,
literal|0x20
block|}
block|,
block|{
literal|0x547
block|,
literal|0x00
block|}
block|,
block|{
literal|0x559
block|,
literal|0x02
block|}
block|,
block|{
literal|0x55a
block|,
literal|0x02
block|}
block|,
block|{
literal|0x55d
block|,
literal|0xff
block|}
block|,
block|{
literal|0x605
block|,
literal|0x30
block|}
block|,
block|{
literal|0x608
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x609
block|,
literal|0x2a
block|}
block|,
block|{
literal|0x652
block|,
literal|0x20
block|}
block|,
block|{
literal|0x63c
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x63d
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x700
block|,
literal|0x21
block|}
block|,
block|{
literal|0x701
block|,
literal|0x43
block|}
block|,
block|{
literal|0x702
block|,
literal|0x65
block|}
block|,
block|{
literal|0x703
block|,
literal|0x87
block|}
block|,
block|{
literal|0x708
block|,
literal|0x21
block|}
block|,
block|{
literal|0x709
block|,
literal|0x43
block|}
block|,
block|{
literal|0x70a
block|,
literal|0x65
block|}
block|,
block|{
literal|0x70b
block|,
literal|0x87
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Baseband initialization values.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint16_t
name|rtl8192ce_bb_regs0
index|[]
init|=
block|{
literal|0x024
block|,
literal|0x028
block|,
literal|0x800
block|,
literal|0x804
block|,
literal|0x808
block|,
literal|0x80c
block|,
literal|0x810
block|,
literal|0x814
block|,
literal|0x818
block|,
literal|0x81c
block|,
literal|0x820
block|,
literal|0x824
block|,
literal|0x828
block|,
literal|0x82c
block|,
literal|0x830
block|,
literal|0x834
block|,
literal|0x838
block|,
literal|0x83c
block|,
literal|0x840
block|,
literal|0x844
block|,
literal|0x848
block|,
literal|0x84c
block|,
literal|0x850
block|,
literal|0x854
block|,
literal|0x858
block|,
literal|0x85c
block|,
literal|0x860
block|,
literal|0x864
block|,
literal|0x868
block|,
literal|0x86c
block|,
literal|0x870
block|,
literal|0x874
block|,
literal|0x878
block|,
literal|0x87c
block|,
literal|0x880
block|,
literal|0x884
block|,
literal|0x888
block|,
literal|0x88c
block|,
literal|0x890
block|,
literal|0x894
block|,
literal|0x898
block|,
literal|0x89c
block|,
literal|0x900
block|,
literal|0x904
block|,
literal|0x908
block|,
literal|0x90c
block|,
literal|0xa00
block|,
literal|0xa04
block|,
literal|0xa08
block|,
literal|0xa0c
block|,
literal|0xa10
block|,
literal|0xa14
block|,
literal|0xa18
block|,
literal|0xa1c
block|,
literal|0xa20
block|,
literal|0xa24
block|,
literal|0xa28
block|,
literal|0xa2c
block|,
literal|0xa70
block|,
literal|0xa74
block|,
literal|0xc00
block|,
literal|0xc04
block|}
decl_stmt|,
name|rtl8192ce_bb_regs1
index|[]
init|=
block|{
literal|0xc08
block|,
literal|0xc0c
block|,
literal|0xc10
block|,
literal|0xc14
block|,
literal|0xc18
block|,
literal|0xc1c
block|,
literal|0xc20
block|,
literal|0xc24
block|,
literal|0xc28
block|,
literal|0xc2c
block|,
literal|0xc30
block|,
literal|0xc34
block|,
literal|0xc38
block|,
literal|0xc3c
block|,
literal|0xc40
block|,
literal|0xc44
block|,
literal|0xc48
block|,
literal|0xc4c
block|,
literal|0xc50
block|,
literal|0xc54
block|,
literal|0xc58
block|,
literal|0xc5c
block|,
literal|0xc60
block|,
literal|0xc64
block|,
literal|0xc68
block|,
literal|0xc6c
block|,
literal|0xc70
block|,
literal|0xc74
block|,
literal|0xc78
block|,
literal|0xc7c
block|,
literal|0xc80
block|,
literal|0xc84
block|,
literal|0xc88
block|,
literal|0xc8c
block|,
literal|0xc90
block|,
literal|0xc94
block|,
literal|0xc98
block|,
literal|0xc9c
block|,
literal|0xca0
block|,
literal|0xca4
block|,
literal|0xca8
block|,
literal|0xcac
block|,
literal|0xcb0
block|,
literal|0xcb4
block|,
literal|0xcb8
block|,
literal|0xcbc
block|,
literal|0xcc0
block|,
literal|0xcc4
block|,
literal|0xcc8
block|,
literal|0xccc
block|,
literal|0xcd0
block|,
literal|0xcd4
block|,
literal|0xcd8
block|,
literal|0xcdc
block|,
literal|0xce0
block|,
literal|0xce4
block|,
literal|0xce8
block|,
literal|0xcec
block|,
literal|0xd00
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8192ce_bb_vals0_2t
index|[]
init|=
block|{
literal|0x0011800f
block|,
literal|0x00ffdb83
block|,
literal|0x80040002
block|,
literal|0x00000003
block|,
literal|0x0000fc00
block|,
literal|0x0000000a
block|,
literal|0x10005388
block|,
literal|0x020c3d10
block|,
literal|0x02200385
block|,
literal|0x00000000
block|,
literal|0x01000100
block|,
literal|0x00390004
block|,
literal|0x01000100
block|,
literal|0x00390004
block|,
literal|0x27272727
block|,
literal|0x27272727
block|,
literal|0x27272727
block|,
literal|0x27272727
block|,
literal|0x00010000
block|,
literal|0x00010000
block|,
literal|0x27272727
block|,
literal|0x27272727
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x569a569a
block|,
literal|0x0c1b25a4
block|,
literal|0x66e60230
block|,
literal|0x061f0130
block|,
literal|0x27272727
block|,
literal|0x2b2b2b27
block|,
literal|0x07000700
block|,
literal|0x22184000
block|,
literal|0x08080808
block|,
literal|0x00000000
block|,
literal|0xc0083070
block|,
literal|0x000004d5
block|,
literal|0x00000000
block|,
literal|0xcc0000c0
block|,
literal|0x00000800
block|,
literal|0xfffffffe
block|,
literal|0x40302010
block|,
literal|0x00706050
block|,
literal|0x00000000
block|,
literal|0x00000023
block|,
literal|0x00000000
block|,
literal|0x81121313
block|,
literal|0x00d047c8
block|,
literal|0x80ff000c
block|,
literal|0x8c838300
block|,
literal|0x2e68120f
block|,
literal|0x9500bb78
block|,
literal|0x11144028
block|,
literal|0x00881117
block|,
literal|0x89140f00
block|,
literal|0x1a1b0000
block|,
literal|0x090e1317
block|,
literal|0x00000204
block|,
literal|0x00d30000
block|,
literal|0x101fbf00
block|,
literal|0x00000007
block|,
literal|0x48071d40
block|,
literal|0x03a05633
block|}
decl_stmt|,
name|rtl8192ce_bb_vals0_1t
index|[]
init|=
block|{
literal|0x0011800f
block|,
literal|0x00ffdb83
block|,
literal|0x80040000
block|,
literal|0x00000001
block|,
literal|0x0000fc00
block|,
literal|0x0000000a
block|,
literal|0x10005388
block|,
literal|0x020c3d10
block|,
literal|0x02200385
block|,
literal|0x00000000
block|,
literal|0x01000100
block|,
literal|0x00390004
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00010000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x569a569a
block|,
literal|0x001b25a4
block|,
literal|0x66e60230
block|,
literal|0x061f0130
block|,
literal|0x00000000
block|,
literal|0x32323200
block|,
literal|0x07000700
block|,
literal|0x22004000
block|,
literal|0x00000808
block|,
literal|0x00000000
block|,
literal|0xc0083070
block|,
literal|0x000004d5
block|,
literal|0x00000000
block|,
literal|0xccc000c0
block|,
literal|0x00000800
block|,
literal|0xfffffffe
block|,
literal|0x40302010
block|,
literal|0x00706050
block|,
literal|0x00000000
block|,
literal|0x00000023
block|,
literal|0x00000000
block|,
literal|0x81121111
block|,
literal|0x00d047c8
block|,
literal|0x80ff000c
block|,
literal|0x8c838300
block|,
literal|0x2e68120f
block|,
literal|0x9500bb78
block|,
literal|0x11144028
block|,
literal|0x00881117
block|,
literal|0x89140f00
block|,
literal|0x1a1b0000
block|,
literal|0x090e1317
block|,
literal|0x00000204
block|,
literal|0x00d30000
block|,
literal|0x101fbf00
block|,
literal|0x00000007
block|,
literal|0x48071d40
block|,
literal|0x03a05611
block|}
decl_stmt|,
name|rtl8192ce_bb_vals1
index|[]
init|=
block|{
literal|0x000000e4
block|,
literal|0x6c6c6c6c
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x69e9ac44
block|,
literal|0x469652cf
block|,
literal|0x49795994
block|,
literal|0x0a97971c
block|,
literal|0x1f7c403f
block|,
literal|0x000100b7
block|,
literal|0xec020107
block|,
literal|0x007f037f
block|,
literal|0x69543420
block|,
literal|0x43bc0094
block|,
literal|0x69543420
block|,
literal|0x433c0094
block|,
literal|0x00000000
block|,
literal|0x5116848b
block|,
literal|0x47c00bff
block|,
literal|0x00000036
block|,
literal|0x2c7f000d
block|,
literal|0x018610db
block|,
literal|0x0000001f
block|,
literal|0x00b91612
block|,
literal|0x40000100
block|,
literal|0x20f60000
block|,
literal|0x40000100
block|,
literal|0x20200000
block|,
literal|0x00121820
block|,
literal|0x00000000
block|,
literal|0x00121820
block|,
literal|0x00007f7f
block|,
literal|0x00000000
block|,
literal|0x00000080
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x28000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x64b22427
block|,
literal|0x00766932
block|,
literal|0x00222222
block|,
literal|0x00000000
block|,
literal|0x37644302
block|,
literal|0x2f97d40c
block|,
literal|0x00080740
block|}
decl_stmt|,
name|rtl8192ce_bb_vals4_1t
index|[]
init|=
block|{
literal|0x00000010
block|,
literal|0x001b25a4
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x081b25a0
block|,
literal|0x081b25a0
block|,
literal|0x081b25a0
block|,
literal|0x081b25a0
block|,
literal|0x631b25a0
block|,
literal|0x081b25a0
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x001b25a0
block|,
literal|0x001b25a0
block|,
literal|0x6b1b25a0
block|,
literal|0x00000003
block|,
literal|0x00000000
block|,
literal|0x00000300
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_bb_prog
name|rtl8192ce_bb
index|[]
init|=
block|{
block|{
name|nitems
argument_list|(
name|rtl8192ce_bb_regs0
argument_list|)
block|,
name|rtl8192ce_bb_regs0
block|,
name|rtl8192ce_bb_vals0_2t
block|,
block|{
name|R92C_COND_RTL8192C
block|}
block|,
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_bb_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8192ce_bb_regs0
argument_list|)
block|,
name|rtl8192ce_bb_regs0
block|,
name|rtl8192ce_bb_vals0_1t
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8192ce_bb_regs1
argument_list|)
block|,
name|rtl8192ce_bb_regs1
block|,
name|rtl8192ce_bb_vals1
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8192c_bb_regs3
argument_list|)
block|,
name|rtl8192c_bb_regs3
block|,
name|rtl8192c_bb_vals3_92ce_92cu
block|,
block|{
name|R92C_COND_RTL8192C
block|}
block|,
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_bb_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8192c_bb_regs3
argument_list|)
block|,
name|rtl8192c_bb_regs3
block|,
name|rtl8192c_bb_vals3_88cu_88ru
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8192c_bb_regs4
argument_list|)
block|,
name|rtl8192c_bb_regs4
block|,
name|rtl8192c_bb_vals4
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8192c_bb_regs5
argument_list|)
block|,
name|rtl8192c_bb_regs5
block|,
name|rtl8192c_bb_vals5_92ce_92cu
block|,
block|{
name|R92C_COND_RTL8192C
block|}
block|,
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_bb_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8192c_bb_regs5
argument_list|)
block|,
name|rtl8192c_bb_regs5
block|,
name|rtl8192ce_bb_vals4_1t
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* R92CE_PRIV_H */
end_comment

end_unit

