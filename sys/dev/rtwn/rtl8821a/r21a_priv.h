begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2016 Andriy Voskoboinyk<avos@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|R21A_PRIV_H
end_ifndef

begin_define
define|#
directive|define
name|R21A_PRIV_H
end_define

begin_comment
comment|/*  * MAC initialization values.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_mac_prog
name|rtl8821au_mac
index|[]
init|=
block|{
block|{
literal|0x421
block|,
literal|0x0f
block|}
block|,
block|{
literal|0x428
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x429
block|,
literal|0x10
block|}
block|,
block|{
literal|0x430
block|,
literal|0x00
block|}
block|,
block|{
literal|0x431
block|,
literal|0x00
block|}
block|,
block|{
literal|0x432
block|,
literal|0x00
block|}
block|,
block|{
literal|0x433
block|,
literal|0x01
block|}
block|,
block|{
literal|0x434
block|,
literal|0x04
block|}
block|,
block|{
literal|0x435
block|,
literal|0x05
block|}
block|,
block|{
literal|0x436
block|,
literal|0x07
block|}
block|,
block|{
literal|0x437
block|,
literal|0x08
block|}
block|,
block|{
literal|0x43c
block|,
literal|0x04
block|}
block|,
block|{
literal|0x43d
block|,
literal|0x05
block|}
block|,
block|{
literal|0x43e
block|,
literal|0x07
block|}
block|,
block|{
literal|0x43f
block|,
literal|0x08
block|}
block|,
block|{
literal|0x440
block|,
literal|0x5d
block|}
block|,
block|{
literal|0x441
block|,
literal|0x01
block|}
block|,
block|{
literal|0x442
block|,
literal|0x00
block|}
block|,
block|{
literal|0x444
block|,
literal|0x10
block|}
block|,
block|{
literal|0x445
block|,
literal|0x00
block|}
block|,
block|{
literal|0x446
block|,
literal|0x00
block|}
block|,
block|{
literal|0x447
block|,
literal|0x00
block|}
block|,
block|{
literal|0x448
block|,
literal|0x00
block|}
block|,
block|{
literal|0x449
block|,
literal|0xf0
block|}
block|,
block|{
literal|0x44a
block|,
literal|0x0f
block|}
block|,
block|{
literal|0x44b
block|,
literal|0x3e
block|}
block|,
block|{
literal|0x44c
block|,
literal|0x10
block|}
block|,
block|{
literal|0x44d
block|,
literal|0x00
block|}
block|,
block|{
literal|0x44e
block|,
literal|0x00
block|}
block|,
block|{
literal|0x44f
block|,
literal|0x00
block|}
block|,
block|{
literal|0x450
block|,
literal|0x00
block|}
block|,
block|{
literal|0x451
block|,
literal|0xf0
block|}
block|,
block|{
literal|0x452
block|,
literal|0x0f
block|}
block|,
block|{
literal|0x453
block|,
literal|0x00
block|}
block|,
block|{
literal|0x456
block|,
literal|0x5e
block|}
block|,
block|{
literal|0x460
block|,
literal|0x66
block|}
block|,
block|{
literal|0x461
block|,
literal|0x66
block|}
block|,
block|{
literal|0x4c8
block|,
literal|0x3f
block|}
block|,
block|{
literal|0x4c9
block|,
literal|0xff
block|}
block|,
block|{
literal|0x4cc
block|,
literal|0xff
block|}
block|,
block|{
literal|0x4cd
block|,
literal|0xff
block|}
block|,
block|{
literal|0x4ce
block|,
literal|0x01
block|}
block|,
block|{
literal|0x500
block|,
literal|0x26
block|}
block|,
block|{
literal|0x501
block|,
literal|0xa2
block|}
block|,
block|{
literal|0x502
block|,
literal|0x2f
block|}
block|,
block|{
literal|0x503
block|,
literal|0x00
block|}
block|,
block|{
literal|0x504
block|,
literal|0x28
block|}
block|,
block|{
literal|0x505
block|,
literal|0xa3
block|}
block|,
block|{
literal|0x506
block|,
literal|0x5e
block|}
block|,
block|{
literal|0x507
block|,
literal|0x00
block|}
block|,
block|{
literal|0x508
block|,
literal|0x2b
block|}
block|,
block|{
literal|0x509
block|,
literal|0xa4
block|}
block|,
block|{
literal|0x50a
block|,
literal|0x5e
block|}
block|,
block|{
literal|0x50b
block|,
literal|0x00
block|}
block|,
block|{
literal|0x50c
block|,
literal|0x4f
block|}
block|,
block|{
literal|0x50d
block|,
literal|0xa4
block|}
block|,
block|{
literal|0x50e
block|,
literal|0x00
block|}
block|,
block|{
literal|0x50f
block|,
literal|0x00
block|}
block|,
block|{
literal|0x512
block|,
literal|0x1c
block|}
block|,
block|{
literal|0x514
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x516
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x525
block|,
literal|0x4f
block|}
block|,
block|{
literal|0x550
block|,
literal|0x10
block|}
block|,
block|{
literal|0x551
block|,
literal|0x10
block|}
block|,
block|{
literal|0x559
block|,
literal|0x02
block|}
block|,
block|{
literal|0x55c
block|,
literal|0x50
block|}
block|,
block|{
literal|0x55d
block|,
literal|0xff
block|}
block|,
block|{
literal|0x605
block|,
literal|0x30
block|}
block|,
block|{
literal|0x607
block|,
literal|0x07
block|}
block|,
block|{
literal|0x608
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x609
block|,
literal|0x2a
block|}
block|,
block|{
literal|0x620
block|,
literal|0xff
block|}
block|,
block|{
literal|0x621
block|,
literal|0xff
block|}
block|,
block|{
literal|0x622
block|,
literal|0xff
block|}
block|,
block|{
literal|0x623
block|,
literal|0xff
block|}
block|,
block|{
literal|0x624
block|,
literal|0xff
block|}
block|,
block|{
literal|0x625
block|,
literal|0xff
block|}
block|,
block|{
literal|0x626
block|,
literal|0xff
block|}
block|,
block|{
literal|0x627
block|,
literal|0xff
block|}
block|,
block|{
literal|0x638
block|,
literal|0x50
block|}
block|,
block|{
literal|0x63c
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x63d
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x63e
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x63f
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x640
block|,
literal|0x40
block|}
block|,
block|{
literal|0x642
block|,
literal|0x40
block|}
block|,
block|{
literal|0x643
block|,
literal|0x00
block|}
block|,
block|{
literal|0x652
block|,
literal|0xc8
block|}
block|,
block|{
literal|0x66e
block|,
literal|0x05
block|}
block|,
block|{
literal|0x700
block|,
literal|0x21
block|}
block|,
block|{
literal|0x701
block|,
literal|0x43
block|}
block|,
block|{
literal|0x702
block|,
literal|0x65
block|}
block|,
block|{
literal|0x703
block|,
literal|0x87
block|}
block|,
block|{
literal|0x708
block|,
literal|0x21
block|}
block|,
block|{
literal|0x709
block|,
literal|0x43
block|}
block|,
block|{
literal|0x70a
block|,
literal|0x65
block|}
block|,
block|{
literal|0x70b
block|,
literal|0x87
block|}
block|,
block|{
literal|0x718
block|,
literal|0x40
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Baseband initialization values.  */
end_comment

begin_define
define|#
directive|define
name|R21A_COND_EXT_PA_5G
value|0x01
end_define

begin_define
define|#
directive|define
name|R21A_COND_EXT_LNA_5G
value|0x02
end_define

begin_define
define|#
directive|define
name|R21A_COND_BOARD_DEF
value|0x04
end_define

begin_define
define|#
directive|define
name|R21A_COND_BT
value|0x08
end_define

begin_decl_stmt
specifier|static
specifier|const
name|uint16_t
name|rtl8821au_bb_regs
index|[]
init|=
block|{
literal|0x800
block|,
literal|0x804
block|,
literal|0x808
block|,
literal|0x80c
block|,
literal|0x810
block|,
literal|0x814
block|,
literal|0x818
block|,
literal|0x820
block|,
literal|0x824
block|,
literal|0x828
block|,
literal|0x82c
block|,
literal|0x830
block|,
literal|0x834
block|,
literal|0x838
block|,
literal|0x83c
block|,
literal|0x840
block|,
literal|0x844
block|,
literal|0x848
block|,
literal|0x84c
block|,
literal|0x850
block|,
literal|0x854
block|,
literal|0x858
block|,
literal|0x85c
block|,
literal|0x860
block|,
literal|0x864
block|,
literal|0x868
block|,
literal|0x86c
block|,
literal|0x870
block|,
literal|0x874
block|,
literal|0x878
block|,
literal|0x87c
block|,
literal|0x8a0
block|,
literal|0x8a4
block|,
literal|0x8a8
block|,
literal|0x8ac
block|,
literal|0x8b4
block|,
literal|0x8b8
block|,
literal|0x8bc
block|,
literal|0x8c0
block|,
literal|0x8c4
block|,
literal|0x8c8
block|,
literal|0x8cc
block|,
literal|0x8d4
block|,
literal|0x8d8
block|,
literal|0x8f8
block|,
literal|0x8fc
block|,
literal|0x900
block|,
literal|0x90c
block|,
literal|0x910
block|,
literal|0x914
block|,
literal|0x918
block|,
literal|0x91c
block|,
literal|0x920
block|,
literal|0x924
block|,
literal|0x928
block|,
literal|0x92c
block|,
literal|0x930
block|,
literal|0x934
block|,
literal|0x960
block|,
literal|0x964
block|,
literal|0x968
block|,
literal|0x96c
block|,
literal|0x970
block|,
literal|0x974
block|,
literal|0x978
block|,
literal|0x97c
block|,
literal|0x980
block|,
literal|0x984
block|,
literal|0x988
block|,
literal|0x990
block|,
literal|0x994
block|,
literal|0x998
block|,
literal|0x99c
block|,
literal|0x9a0
block|,
literal|0x9a4
block|,
literal|0x9a8
block|,
literal|0x9ac
block|,
literal|0x9b0
block|,
literal|0x9b4
block|,
literal|0x9b8
block|,
literal|0x9bc
block|,
literal|0x9d0
block|,
literal|0x9d4
block|,
literal|0x9d8
block|,
literal|0x9dc
block|,
literal|0x9e0
block|,
literal|0x9e4
block|,
literal|0x9e8
block|,
literal|0xa00
block|,
literal|0xa04
block|,
literal|0xa08
block|,
literal|0xa0c
block|,
literal|0xa10
block|,
literal|0xa14
block|,
literal|0xa18
block|,
literal|0xa1c
block|,
literal|0xa20
block|,
literal|0xa24
block|,
literal|0xa28
block|,
literal|0xa2c
block|,
literal|0xa70
block|,
literal|0xa74
block|,
literal|0xa78
block|,
literal|0xa7c
block|,
literal|0xa80
block|,
literal|0xa84
block|,
literal|0xb00
block|,
literal|0xb04
block|,
literal|0xb08
block|,
literal|0xb0c
block|,
literal|0xb10
block|,
literal|0xb14
block|,
literal|0xb18
block|,
literal|0xb1c
block|,
literal|0xb20
block|,
literal|0xb24
block|,
literal|0xb28
block|,
literal|0xb2c
block|,
literal|0xb30
block|,
literal|0xb34
block|,
literal|0xb38
block|,
literal|0xb3c
block|,
literal|0xb40
block|,
literal|0xb44
block|,
literal|0xb48
block|,
literal|0xb4c
block|,
literal|0xb50
block|,
literal|0xb54
block|,
literal|0xb58
block|,
literal|0xb5c
block|,
literal|0xc00
block|,
literal|0xc04
block|,
literal|0xc08
block|,
literal|0xc0c
block|,
literal|0xc10
block|,
literal|0xc14
block|,
literal|0xc1c
block|,
literal|0xc20
block|,
literal|0xc24
block|,
literal|0xc28
block|,
literal|0xc2c
block|,
literal|0xc30
block|,
literal|0xc34
block|,
literal|0xc38
block|,
literal|0xc3c
block|,
literal|0xc40
block|,
literal|0xc44
block|,
literal|0xc48
block|,
literal|0xc4c
block|,
literal|0xc50
block|,
literal|0xc54
block|,
literal|0xc58
block|,
literal|0xc5c
block|,
literal|0xc60
block|,
literal|0xc64
block|,
literal|0xc68
block|,
literal|0xc6c
block|,
literal|0xc70
block|,
literal|0xc74
block|,
literal|0xc78
block|,
literal|0xc7c
block|,
literal|0xc80
block|,
literal|0xc84
block|,
literal|0xc94
block|,
literal|0xc98
block|,
literal|0xc9c
block|,
literal|0xca0
block|,
literal|0xca4
block|,
literal|0xca8
block|,
literal|0xcb0
block|,
literal|0xcb4
block|,
literal|0xcb8
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8821au_bb_vals
index|[]
init|=
block|{
literal|0x0020d090
block|,
literal|0x080112e0
block|,
literal|0x0e028211
block|,
literal|0x92131111
block|,
literal|0x20101261
block|,
literal|0x020c3d10
block|,
literal|0x03a00385
block|,
literal|0x00000000
block|,
literal|0x00030fe0
block|,
literal|0x00000000
block|,
literal|0x002081dd
block|,
literal|0x2aaaeec8
block|,
literal|0x0037a706
block|,
literal|0x06489b44
block|,
literal|0x0000095b
block|,
literal|0xc0000001
block|,
literal|0x40003cde
block|,
literal|0x62103f8b
block|,
literal|0x6cfdffb8
block|,
literal|0x28874706
block|,
literal|0x0001520c
block|,
literal|0x8060e000
block|,
literal|0x74210168
block|,
literal|0x6929c321
block|,
literal|0x79727432
block|,
literal|0x8ca7a314
block|,
literal|0x888c2878
block|,
literal|0x08888888
block|,
literal|0x31612c2e
block|,
literal|0x00000152
block|,
literal|0x000fd000
block|,
literal|0x00000013
block|,
literal|0x7f7f7f7f
block|,
literal|0xa2000338
block|,
literal|0x0ff0fa0a
block|,
literal|0x000fc080
block|,
literal|0x6c10d7ff
block|,
literal|0x0ca52090
block|,
literal|0x1bf00020
block|,
literal|0x00000000
block|,
literal|0x00013169
block|,
literal|0x08248492
block|,
literal|0x940008a0
block|,
literal|0x290b5612
block|,
literal|0x400002c0
block|,
literal|0x00000000
block|,
literal|0x00000700
block|,
literal|0x00000000
block|,
literal|0x0000fc00
block|,
literal|0x00000404
block|,
literal|0x1c1028c0
block|,
literal|0x64b11a1c
block|,
literal|0xe0767233
block|,
literal|0x055aa500
block|,
literal|0x00000004
block|,
literal|0xfffe0000
block|,
literal|0xfffffffe
block|,
literal|0x001fffff
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x801fffff
block|,
literal|0x000003ff
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x27100000
block|,
literal|0xffff0100
block|,
literal|0xffffff5c
block|,
literal|0xffffffff
block|,
literal|0x000000ff
block|,
literal|0x00480080
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x81081008
block|,
literal|0x01081008
block|,
literal|0x01081008
block|,
literal|0x01081008
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00005d00
block|,
literal|0x00000003
block|,
literal|0x00000001
block|,
literal|0x00d047c8
block|,
literal|0x01ff800c
block|,
literal|0x8c8a8300
block|,
literal|0x2e68000f
block|,
literal|0x9500bb78
block|,
literal|0x11144028
block|,
literal|0x00881117
block|,
literal|0x89140f00
block|,
literal|0x1a1b0000
block|,
literal|0x090e1317
block|,
literal|0x00000204
block|,
literal|0x00900000
block|,
literal|0x101fff00
block|,
literal|0x00000008
block|,
literal|0x00000900
block|,
literal|0x225b0606
block|,
literal|0x21805490
block|,
literal|0x001f0000
block|,
literal|0x03100040
block|,
literal|0x0000b000
block|,
literal|0xae0201eb
block|,
literal|0x01003207
block|,
literal|0x00009807
block|,
literal|0x01000000
block|,
literal|0x00000002
block|,
literal|0x00000002
block|,
literal|0x0000001f
block|,
literal|0x03020100
block|,
literal|0x07060504
block|,
literal|0x0b0a0908
block|,
literal|0x0f0e0d0c
block|,
literal|0x13121110
block|,
literal|0x17161514
block|,
literal|0x0000003a
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x13000032
block|,
literal|0x48080000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000007
block|,
literal|0x00042020
block|,
literal|0x80410231
block|,
literal|0x00000000
block|,
literal|0x00000100
block|,
literal|0x01000000
block|,
literal|0x40000003
block|,
literal|0x2c2c2c2c
block|,
literal|0x30303030
block|,
literal|0x30303030
block|,
literal|0x2c2c2c2c
block|,
literal|0x2c2c2c2c
block|,
literal|0x2c2c2c2c
block|,
literal|0x2c2c2c2c
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x00000020
block|,
literal|0x001c1208
block|,
literal|0x30000c1c
block|,
literal|0x00000058
block|,
literal|0x34344443
block|,
literal|0x07003333
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x0100005c
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000029
block|,
literal|0x08040201
block|,
literal|0x80402010
block|,
literal|0x77775747
block|,
literal|0x10000077
block|,
literal|0x00508240
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_bb_prog
name|rtl8821au_bb
index|[]
init|=
block|{
block|{
name|nitems
argument_list|(
name|rtl8821au_bb_regs
argument_list|)
block|,
name|rtl8821au_bb_regs
block|,
name|rtl8821au_bb_vals
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8821au_agc_vals0
index|[]
init|=
block|{
literal|0xbf000001
block|,
literal|0xbf020001
block|,
literal|0xbf040001
block|,
literal|0xbf060001
block|,
literal|0xbe080001
block|,
literal|0xbd0a0001
block|,
literal|0xbc0c0001
block|,
literal|0xba0e0001
block|,
literal|0xb9100001
block|,
literal|0xb8120001
block|,
literal|0xb7140001
block|,
literal|0xb6160001
block|,
literal|0xb5180001
block|,
literal|0xb41a0001
block|,
literal|0xb31c0001
block|,
literal|0xb21e0001
block|,
literal|0xb1200001
block|,
literal|0xb0220001
block|,
literal|0xaf240001
block|,
literal|0xae260001
block|,
literal|0xad280001
block|,
literal|0xac2a0001
block|,
literal|0xab2c0001
block|,
literal|0xaa2e0001
block|,
literal|0xa9300001
block|,
literal|0xa8320001
block|,
literal|0xa7340001
block|,
literal|0xa6360001
block|,
literal|0xa5380001
block|,
literal|0xa43a0001
block|,
literal|0x683c0001
block|,
literal|0x673e0001
block|,
literal|0x66400001
block|,
literal|0x65420001
block|,
literal|0x64440001
block|,
literal|0x63460001
block|,
literal|0x62480001
block|,
literal|0x614a0001
block|,
literal|0x474c0001
block|,
literal|0x464e0001
block|,
literal|0x45500001
block|,
literal|0x44520001
block|,
literal|0x43540001
block|,
literal|0x42560001
block|,
literal|0x41580001
block|,
literal|0x285a0001
block|,
literal|0x275c0001
block|,
literal|0x265e0001
block|,
literal|0x25600001
block|,
literal|0x24620001
block|,
literal|0x0a640001
block|,
literal|0x09660001
block|,
literal|0x08680001
block|,
literal|0x076a0001
block|,
literal|0x066c0001
block|,
literal|0x056e0001
block|,
literal|0x04700001
block|,
literal|0x03720001
block|,
literal|0x02740001
block|,
literal|0x01760001
block|,
literal|0x01780001
block|,
literal|0x017a0001
block|,
literal|0x017c0001
block|,
literal|0x017e0001
block|}
decl_stmt|,
name|rtl8821au_agc_vals1_pa_lna_5g
index|[]
init|=
block|{
literal|0xfb000101
block|,
literal|0xfa020101
block|,
literal|0xf9040101
block|,
literal|0xf8060101
block|,
literal|0xf7080101
block|,
literal|0xf60a0101
block|,
literal|0xf50c0101
block|,
literal|0xf40e0101
block|,
literal|0xf3100101
block|,
literal|0xf2120101
block|,
literal|0xf1140101
block|,
literal|0xf0160101
block|,
literal|0xef180101
block|,
literal|0xee1a0101
block|,
literal|0xed1c0101
block|,
literal|0xec1e0101
block|,
literal|0xeb200101
block|,
literal|0xea220101
block|,
literal|0xe9240101
block|,
literal|0xe8260101
block|,
literal|0xe7280101
block|,
literal|0xe62a0101
block|,
literal|0xe52c0101
block|,
literal|0xe42e0101
block|,
literal|0xe3300101
block|,
literal|0xa5320101
block|,
literal|0xa4340101
block|,
literal|0xa3360101
block|,
literal|0x87380101
block|,
literal|0x863a0101
block|,
literal|0x853c0101
block|,
literal|0x843e0101
block|,
literal|0x69400101
block|,
literal|0x68420101
block|,
literal|0x67440101
block|,
literal|0x66460101
block|,
literal|0x49480101
block|,
literal|0x484a0101
block|,
literal|0x474c0101
block|,
literal|0x2a4e0101
block|,
literal|0x29500101
block|,
literal|0x28520101
block|,
literal|0x27540101
block|,
literal|0x26560101
block|,
literal|0x25580101
block|,
literal|0x245a0101
block|,
literal|0x235c0101
block|,
literal|0x055e0101
block|,
literal|0x04600101
block|,
literal|0x03620101
block|,
literal|0x02640101
block|,
literal|0x01660101
block|,
literal|0x01680101
block|,
literal|0x016a0101
block|,
literal|0x016c0101
block|,
literal|0x016e0101
block|,
literal|0x01700101
block|,
literal|0x01720101
block|}
decl_stmt|,
name|rtl8821au_agc_vals1
index|[]
init|=
block|{
literal|0xff000101
block|,
literal|0xff020101
block|,
literal|0xfe040101
block|,
literal|0xfd060101
block|,
literal|0xfc080101
block|,
literal|0xfd0a0101
block|,
literal|0xfc0c0101
block|,
literal|0xfb0e0101
block|,
literal|0xfa100101
block|,
literal|0xf9120101
block|,
literal|0xf8140101
block|,
literal|0xf7160101
block|,
literal|0xf6180101
block|,
literal|0xf51a0101
block|,
literal|0xf41c0101
block|,
literal|0xf31e0101
block|,
literal|0xf2200101
block|,
literal|0xf1220101
block|,
literal|0xf0240101
block|,
literal|0xef260101
block|,
literal|0xee280101
block|,
literal|0xed2a0101
block|,
literal|0xec2c0101
block|,
literal|0xeb2e0101
block|,
literal|0xea300101
block|,
literal|0xe9320101
block|,
literal|0xe8340101
block|,
literal|0xe7360101
block|,
literal|0xe6380101
block|,
literal|0xe53a0101
block|,
literal|0xe43c0101
block|,
literal|0xe33e0101
block|,
literal|0xa5400101
block|,
literal|0xa4420101
block|,
literal|0xa3440101
block|,
literal|0x87460101
block|,
literal|0x86480101
block|,
literal|0x854a0101
block|,
literal|0x844c0101
block|,
literal|0x694e0101
block|,
literal|0x68500101
block|,
literal|0x67520101
block|,
literal|0x66540101
block|,
literal|0x49560101
block|,
literal|0x48580101
block|,
literal|0x475a0101
block|,
literal|0x2a5c0101
block|,
literal|0x295e0101
block|,
literal|0x28600101
block|,
literal|0x27620101
block|,
literal|0x26640101
block|,
literal|0x25660101
block|,
literal|0x24680101
block|,
literal|0x236a0101
block|,
literal|0x056c0101
block|,
literal|0x046e0101
block|,
literal|0x03700101
block|,
literal|0x02720101
block|}
decl_stmt|,
name|rtl8821au_agc_vals2
index|[]
init|=
block|{
literal|0x01740101
block|,
literal|0x01760101
block|,
literal|0x01780101
block|,
literal|0x017a0101
block|,
literal|0x017c0101
block|,
literal|0x017e0101
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_agc_prog
name|rtl8821au_agc
index|[]
init|=
block|{
block|{
name|nitems
argument_list|(
name|rtl8821au_agc_vals0
argument_list|)
block|,
name|rtl8821au_agc_vals0
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* 	 * For devices with external 5GHz PA / LNA. 	 */
block|{
name|nitems
argument_list|(
name|rtl8821au_agc_vals1_pa_lna_5g
argument_list|)
block|,
name|rtl8821au_agc_vals1_pa_lna_5g
block|,
block|{
name|R21A_COND_EXT_PA_5G
operator||
name|R21A_COND_EXT_LNA_5G
block|,
literal|0
block|}
block|,
comment|/* 		 * Others. 		 */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_agc_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8821au_agc_vals1
argument_list|)
block|,
name|rtl8821au_agc_vals1
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8821au_agc_vals2
argument_list|)
block|,
name|rtl8821au_agc_vals2
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RF initialization values.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint8_t
name|rtl8821au_rf_regs0
index|[]
init|=
block|{
literal|0x18
block|,
literal|0x56
block|,
literal|0x66
block|,
literal|0x00
block|,
literal|0x1e
block|,
literal|0x82
block|,
literal|0x83
block|,
literal|0x84
block|,
literal|0x85
block|,
literal|0x86
block|,
literal|0x87
block|,
literal|0x88
block|,
literal|0x89
block|,
literal|0x8a
block|,
literal|0x8b
block|,
literal|0x8c
block|,
literal|0x8d
block|,
literal|0x8e
block|,
literal|0x8f
block|,
literal|0xef
block|,
literal|0x3e
block|,
literal|0x3f
block|,
literal|0x3e
block|,
literal|0x3f
block|,
literal|0x3e
block|,
literal|0x3f
block|,
literal|0x3e
block|,
literal|0x3f
block|,
literal|0xef
block|,
literal|0x18
block|,
literal|0x89
block|,
literal|0x8b
block|,
literal|0xef
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0xef
block|,
literal|0xef
block|}
decl_stmt|,
name|rtl8821au_rf_regs1
index|[]
init|=
block|{
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|}
decl_stmt|,
name|rtl8821au_rf_regs2
index|[]
init|=
block|{
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0xef
block|,
literal|0x18
block|,
literal|0xef
block|}
decl_stmt|,
name|rtl8821au_rf_regs3
index|[]
init|=
block|{
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0xef
block|,
literal|0x18
block|,
literal|0xef
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0xef
block|,
literal|0xef
block|,
literal|0x3c
block|,
literal|0x3c
block|}
decl_stmt|,
name|rtl8821au_rf_regs4
index|[]
init|=
block|{
literal|0x3c
block|,
literal|0xef
block|,
literal|0x18
block|,
literal|0xef
block|,
literal|0x08
block|,
literal|0xef
block|,
literal|0xdf
block|,
literal|0x1f
block|,
literal|0x58
block|,
literal|0x59
block|,
literal|0x61
block|,
literal|0x62
block|,
literal|0x63
block|,
literal|0x64
block|,
literal|0x65
block|}
decl_stmt|,
name|rtl8821au_rf_regs5
index|[]
init|=
block|{
literal|0x18
block|,
literal|0xef
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0xef
block|,
literal|0xef
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0xef
block|,
literal|0xed
block|,
literal|0x44
block|,
literal|0x44
block|,
literal|0x44
block|,
literal|0x44
block|,
literal|0x44
block|,
literal|0x44
block|,
literal|0x44
block|,
literal|0x44
block|,
literal|0x44
block|,
literal|0x44
block|,
literal|0x44
block|,
literal|0xed
block|,
literal|0xed
block|,
literal|0x40
block|,
literal|0x40
block|,
literal|0x40
block|,
literal|0x40
block|,
literal|0x40
block|,
literal|0x40
block|,
literal|0x40
block|,
literal|0x40
block|,
literal|0xed
block|,
literal|0xef
block|,
literal|0xdf
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0xef
block|,
literal|0x51
block|,
literal|0x52
block|,
literal|0x53
block|,
literal|0x54
block|,
literal|0x56
block|,
literal|0x51
block|,
literal|0x52
block|,
literal|0x53
block|,
literal|0x70
block|,
literal|0x71
block|,
literal|0x72
block|,
literal|0x74
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0xed
block|,
literal|0x45
block|,
literal|0x45
block|,
literal|0x45
block|,
literal|0x46
block|,
literal|0x46
block|,
literal|0x46
block|,
literal|0x46
block|,
literal|0xdf
block|,
literal|0xb3
block|,
literal|0xb4
block|,
literal|0xb7
block|,
literal|0x1c
block|,
literal|0xc4
block|,
literal|0x18
block|,
literal|0xfe
block|,
literal|0xfe
block|,
literal|0x18
block|, }
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8821au_rf_vals0
index|[]
init|=
block|{
literal|0x1712a
block|,
literal|0x51cf2
block|,
literal|0x40000
block|,
literal|0x10000
block|,
literal|0x80000
block|,
literal|0x00830
block|,
literal|0x21800
block|,
literal|0x28000
block|,
literal|0x48000
block|,
literal|0x94838
block|,
literal|0x44980
block|,
literal|0x48000
block|,
literal|0x0d480
block|,
literal|0x42240
block|,
literal|0xf0380
block|,
literal|0x90000
block|,
literal|0x22852
block|,
literal|0x65540
block|,
literal|0x88001
block|,
literal|0x20000
block|,
literal|0x00380
block|,
literal|0x90018
block|,
literal|0x20380
block|,
literal|0xa0018
block|,
literal|0x40308
block|,
literal|0xa0018
block|,
literal|0x60018
block|,
literal|0xa0018
block|,
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00080
block|,
literal|0x80180
block|,
literal|0x01000
block|,
literal|0x00244
block|,
literal|0x38027
block|,
literal|0x82000
block|,
literal|0x00244
block|,
literal|0x30113
block|,
literal|0x82000
block|,
literal|0x0014c
block|,
literal|0x28027
block|,
literal|0x82000
block|,
literal|0x000cc
block|,
literal|0x27027
block|,
literal|0x42000
block|,
literal|0x0014c
block|,
literal|0x1f913
block|,
literal|0x42000
block|,
literal|0x0010c
block|,
literal|0x17f10
block|,
literal|0x12000
block|,
literal|0x000d0
block|,
literal|0x08027
block|,
literal|0xca000
block|,
literal|0x00244
block|,
literal|0x78027
block|,
literal|0x82000
block|,
literal|0x00244
block|,
literal|0x70113
block|,
literal|0x82000
block|,
literal|0x0014c
block|,
literal|0x68027
block|,
literal|0x82000
block|,
literal|0x000cc
block|,
literal|0x67027
block|,
literal|0x42000
block|,
literal|0x0014c
block|,
literal|0x5f913
block|,
literal|0x42000
block|,
literal|0x0010c
block|,
literal|0x57f10
block|,
literal|0x12000
block|,
literal|0x000d0
block|,
literal|0x48027
block|,
literal|0xca000
block|,
literal|0x00244
block|,
literal|0xb8027
block|,
literal|0x82000
block|,
literal|0x00244
block|,
literal|0xb0113
block|,
literal|0x82000
block|,
literal|0x0014c
block|,
literal|0xa8027
block|,
literal|0x82000
block|,
literal|0x000cc
block|,
literal|0xa7027
block|,
literal|0x42000
block|,
literal|0x0014c
block|,
literal|0x9f913
block|,
literal|0x42000
block|,
literal|0x0010c
block|,
literal|0x97f10
block|,
literal|0x12000
block|,
literal|0x000d0
block|,
literal|0x88027
block|,
literal|0xca000
block|,
literal|0x00000
block|,
literal|0x01100
block|}
decl_stmt|,
name|rtl8821au_rf_vals1_def_or_bt
index|[]
init|=
block|{
literal|0x4adf5
block|,
literal|0x49df2
block|,
literal|0x48def
block|,
literal|0x47dec
block|,
literal|0x46de9
block|,
literal|0x45ccb
block|,
literal|0x4488d
block|,
literal|0x4348d
block|,
literal|0x4248a
block|,
literal|0x4108d
block|,
literal|0x4008a
block|,
literal|0x2adf4
block|,
literal|0x29df1
block|}
decl_stmt|,
name|rtl8821au_rf_vals1_ext_5g
index|[]
init|=
block|{
literal|0x4a0f3
block|,
literal|0x490b1
block|,
literal|0x480ae
block|,
literal|0x470ab
block|,
literal|0x4608b
block|,
literal|0x45069
block|,
literal|0x44048
block|,
literal|0x43045
block|,
literal|0x42026
block|,
literal|0x41023
block|,
literal|0x40002
block|,
literal|0x2a0f3
block|,
literal|0x290f0
block|}
decl_stmt|,
name|rtl8821au_rf_vals1
index|[]
init|=
block|{
literal|0x4adf7
block|,
literal|0x49df3
block|,
literal|0x48def
block|,
literal|0x47dec
block|,
literal|0x46de9
block|,
literal|0x45ccb
block|,
literal|0x4488d
block|,
literal|0x4348d
block|,
literal|0x4248a
block|,
literal|0x4108d
block|,
literal|0x4008a
block|,
literal|0x2adf7
block|,
literal|0x29df2
block|}
decl_stmt|,
name|rtl8821au_rf_vals2_ext_5g
index|[]
init|=
block|{
literal|0x280af
block|,
literal|0x270ac
block|,
literal|0x2608b
block|,
literal|0x25069
block|,
literal|0x24048
block|,
literal|0x23045
block|,
literal|0x22026
block|,
literal|0x21023
block|,
literal|0x20002
block|,
literal|0x0a0d7
block|,
literal|0x090d3
block|,
literal|0x080b1
block|,
literal|0x070ae
block|,
literal|0x0608d
block|,
literal|0x0506b
block|,
literal|0x0404a
block|,
literal|0x03047
block|,
literal|0x02044
block|,
literal|0x01025
block|,
literal|0x00004
block|,
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00040
block|}
decl_stmt|,
name|rtl8821au_rf_vals2
index|[]
init|=
block|{
literal|0x28dee
block|,
literal|0x27deb
block|,
literal|0x26ccd
block|,
literal|0x25cca
block|,
literal|0x2488c
block|,
literal|0x2384c
block|,
literal|0x22849
block|,
literal|0x21449
block|,
literal|0x2004d
block|,
literal|0x0adf7
block|,
literal|0x09df4
block|,
literal|0x08df1
block|,
literal|0x07dee
block|,
literal|0x06dcd
block|,
literal|0x05ccd
block|,
literal|0x04cca
block|,
literal|0x0388c
block|,
literal|0x02888
block|,
literal|0x01488
block|,
literal|0x00486
block|,
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00040
block|}
decl_stmt|,
name|rtl8821au_rf_vals3_def_or_bt
index|[]
init|=
block|{
literal|0x00128
block|,
literal|0x08128
block|,
literal|0x10128
block|,
literal|0x201c8
block|,
literal|0x281c8
block|,
literal|0x301c8
block|,
literal|0x401c8
block|,
literal|0x481c8
block|,
literal|0x501c8
block|,
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00010
block|,
literal|0x063b5
block|,
literal|0x0e3b5
block|,
literal|0x163b5
block|,
literal|0x1e3b5
block|,
literal|0x263b5
block|,
literal|0x2e3b5
block|,
literal|0x363b5
block|,
literal|0x3e3b5
block|,
literal|0x463b5
block|,
literal|0x4e3b5
block|,
literal|0x563b5
block|,
literal|0x5e3b5
block|,
literal|0x00000
block|,
literal|0x00008
block|,
literal|0x001b6
block|,
literal|0x00492
block|}
decl_stmt|,
name|rtl8821au_rf_vals3
index|[]
init|=
block|{
literal|0x00145
block|,
literal|0x08145
block|,
literal|0x10145
block|,
literal|0x20196
block|,
literal|0x28196
block|,
literal|0x30196
block|,
literal|0x401c7
block|,
literal|0x481c7
block|,
literal|0x501c7
block|,
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00010
block|,
literal|0x056b3
block|,
literal|0x0d6b3
block|,
literal|0x156b3
block|,
literal|0x1d6b3
block|,
literal|0x26634
block|,
literal|0x2e634
block|,
literal|0x36634
block|,
literal|0x3e634
block|,
literal|0x467b4
block|,
literal|0x4e7b4
block|,
literal|0x567b4
block|,
literal|0x5e7b4
block|,
literal|0x00000
block|,
literal|0x00008
block|,
literal|0x0022a
block|,
literal|0x00594
block|}
decl_stmt|,
name|rtl8821au_rf_vals4_def_or_bt
index|[]
init|=
block|{
literal|0x00800
block|,
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00002
block|,
literal|0x02000
block|,
literal|0x00000
block|,
literal|0x000c0
block|,
literal|0x00064
block|,
literal|0x81184
block|,
literal|0x6016c
block|,
literal|0xefd83
block|,
literal|0x93fcc
block|,
literal|0x110eb
block|,
literal|0x1c27c
block|,
literal|0x93016
block|}
decl_stmt|,
name|rtl8821au_rf_vals4_ext_5g
index|[]
init|=
block|{
literal|0x00820
block|,
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00002
block|,
literal|0x02000
block|,
literal|0x00000
block|,
literal|0x000c0
block|,
literal|0x00064
block|,
literal|0x81184
block|,
literal|0x6016c
block|,
literal|0xead53
block|,
literal|0x93bc4
block|,
literal|0x110e9
block|,
literal|0x1c67c
block|,
literal|0x93015
block|}
decl_stmt|,
name|rtl8821au_rf_vals4
index|[]
init|=
block|{
literal|0x00900
block|,
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00002
block|,
literal|0x02000
block|,
literal|0x00000
block|,
literal|0x000c0
block|,
literal|0x00064
block|,
literal|0x81184
block|,
literal|0x6016c
block|,
literal|0xead53
block|,
literal|0x93bc4
block|,
literal|0x714e9
block|,
literal|0x1c67c
block|,
literal|0x91016
block|}
decl_stmt|,
name|rtl8821au_rf_vals5
index|[]
init|=
block|{
literal|0x00006
block|,
literal|0x02000
block|,
literal|0x3824b
block|,
literal|0x3024b
block|,
literal|0x2844b
block|,
literal|0x20f4b
block|,
literal|0x18f4b
block|,
literal|0x104b2
block|,
literal|0x08049
block|,
literal|0x00148
block|,
literal|0x7824b
block|,
literal|0x7024b
block|,
literal|0x6824b
block|,
literal|0x60f4b
block|,
literal|0x58f4b
block|,
literal|0x504b2
block|,
literal|0x48049
block|,
literal|0x40148
block|,
literal|0x00000
block|,
literal|0x00100
block|,
literal|0x0adf3
block|,
literal|0x09df0
block|,
literal|0x08d70
block|,
literal|0x07d6d
block|,
literal|0x06cee
block|,
literal|0x05ccc
block|,
literal|0x044ec
block|,
literal|0x034ac
block|,
literal|0x0246d
block|,
literal|0x0106f
block|,
literal|0x0006c
block|,
literal|0x00000
block|,
literal|0x00010
block|,
literal|0x0adf2
block|,
literal|0x09def
block|,
literal|0x08dec
block|,
literal|0x07de9
block|,
literal|0x06cec
block|,
literal|0x05ce9
block|,
literal|0x044ec
block|,
literal|0x034e9
block|,
literal|0x0246c
block|,
literal|0x01469
block|,
literal|0x0006c
block|,
literal|0x00000
block|,
literal|0x00001
block|,
literal|0x38da7
block|,
literal|0x300c2
block|,
literal|0x288e2
block|,
literal|0x200b8
block|,
literal|0x188a5
block|,
literal|0x10fbc
block|,
literal|0x08f71
block|,
literal|0x00240
block|,
literal|0x00000
block|,
literal|0x020a2
block|,
literal|0x00080
block|,
literal|0x00120
block|,
literal|0x08120
block|,
literal|0x10120
block|,
literal|0x00085
block|,
literal|0x08085
block|,
literal|0x10085
block|,
literal|0x18085
block|,
literal|0x00000
block|,
literal|0x00c31
block|,
literal|0x00622
block|,
literal|0xfc70b
block|,
literal|0x0017e
block|,
literal|0x51df3
block|,
literal|0x00c01
block|,
literal|0x006d6
block|,
literal|0xfc649
block|,
literal|0x49661
block|,
literal|0x7843e
block|,
literal|0x00382
block|,
literal|0x51400
block|,
literal|0x00160
block|,
literal|0x08160
block|,
literal|0x10160
block|,
literal|0x00124
block|,
literal|0x08124
block|,
literal|0x10124
block|,
literal|0x18124
block|,
literal|0x0000c
block|,
literal|0x00140
block|,
literal|0x08140
block|,
literal|0x10140
block|,
literal|0x00124
block|,
literal|0x08124
block|,
literal|0x10124
block|,
literal|0x18124
block|,
literal|0x00088
block|,
literal|0xf0e18
block|,
literal|0x1214c
block|,
literal|0x3000c
block|,
literal|0x539d2
block|,
literal|0xafe00
block|,
literal|0x1f12a
block|,
literal|0x0c350
block|,
literal|0x0c350
block|,
literal|0x1712a
block|, }
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_rf_prog
name|rtl8821au_rf
index|[]
init|=
block|{
comment|/* RF chain 0. */
block|{
name|nitems
argument_list|(
name|rtl8821au_rf_regs0
argument_list|)
block|,
name|rtl8821au_rf_regs0
block|,
name|rtl8821au_rf_vals0
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* 	 * No external PA/LNA; with or without BT. 	 */
block|{
name|nitems
argument_list|(
name|rtl8821au_rf_regs1
argument_list|)
block|,
name|rtl8821au_rf_regs1
block|,
name|rtl8821au_rf_vals1_def_or_bt
block|,
block|{
name|R21A_COND_BOARD_DEF
block|,
name|R21A_COND_BT
block|,
literal|0
block|}
block|,
comment|/* 		 * With external 5GHz PA and LNA. 		 */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8821au_rf_regs1
argument_list|)
block|,
name|rtl8821au_rf_regs1
block|,
name|rtl8821au_rf_vals1_ext_5g
block|,
block|{
name|R21A_COND_EXT_PA_5G
operator||
name|R21A_COND_EXT_LNA_5G
block|,
literal|0
block|}
block|,
comment|/* 			 * Others. 			 */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8821au_rf_regs1
argument_list|)
block|,
name|rtl8821au_rf_regs1
block|,
name|rtl8821au_rf_vals1
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|}
block|,
comment|/* 	 * With external 5GHz PA and LNA. 	 */
block|{
name|nitems
argument_list|(
name|rtl8821au_rf_regs2
argument_list|)
block|,
name|rtl8821au_rf_regs2
block|,
name|rtl8821au_rf_vals2_ext_5g
block|,
block|{
name|R21A_COND_EXT_PA_5G
operator||
name|R21A_COND_EXT_LNA_5G
block|,
literal|0
block|}
block|,
comment|/* 		 * Others. 		 */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8821au_rf_regs2
argument_list|)
block|,
name|rtl8821au_rf_regs2
block|,
name|rtl8821au_rf_vals2
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
comment|/* 	 * No external PA/LNA; with or without BT. 	 */
block|{
name|nitems
argument_list|(
name|rtl8821au_rf_regs3
argument_list|)
block|,
name|rtl8821au_rf_regs3
block|,
name|rtl8821au_rf_vals3_def_or_bt
block|,
block|{
name|R21A_COND_BOARD_DEF
block|,
name|R21A_COND_BT
block|,
literal|0
block|}
block|,
comment|/* 		 * Others. 		 */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8821au_rf_regs3
argument_list|)
block|,
name|rtl8821au_rf_regs3
block|,
name|rtl8821au_rf_vals3
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
comment|/* 	 * No external PA/LNA; with or without BT. 	 */
block|{
name|nitems
argument_list|(
name|rtl8821au_rf_regs4
argument_list|)
block|,
name|rtl8821au_rf_regs4
block|,
name|rtl8821au_rf_vals4_def_or_bt
block|,
block|{
name|R21A_COND_BOARD_DEF
block|,
name|R21A_COND_BT
block|,
literal|0
block|}
block|,
comment|/* 		 * With external 5GHz PA and LNA. 		 */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8821au_rf_regs4
argument_list|)
block|,
name|rtl8821au_rf_regs4
block|,
name|rtl8821au_rf_vals4_ext_5g
block|,
block|{
name|R21A_COND_EXT_PA_5G
operator||
name|R21A_COND_EXT_LNA_5G
block|,
literal|0
block|}
block|,
comment|/* 			 * Others. 			 */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8821au_rf_regs4
argument_list|)
block|,
name|rtl8821au_rf_regs4
block|,
name|rtl8821au_rf_vals4
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8821au_rf_regs5
argument_list|)
block|,
name|rtl8821au_rf_regs5
block|,
name|rtl8821au_rf_vals5
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
block|{
literal|0
block|,
name|NULL
block|,
name|NULL
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Registers to save before IQ calibration.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint16_t
name|r21a_iq_bb_regs
index|[]
init|=
block|{
literal|0x520
block|,
literal|0x550
block|,
literal|0x808
block|,
literal|0xa04
block|,
literal|0x90c
block|,
literal|0xc00
block|,
literal|0x838
block|,
literal|0x82c
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint16_t
name|r21a_iq_afe_regs
index|[]
init|=
block|{
literal|0xc5c
block|,
literal|0xc60
block|,
literal|0xc64
block|,
literal|0xc68
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint8_t
name|r21a_iq_rf_regs
index|[]
init|=
block|{
literal|0x65
block|,
literal|0x8f
block|,
literal|0x0
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* R21A_PRIV_H */
end_comment

end_unit

