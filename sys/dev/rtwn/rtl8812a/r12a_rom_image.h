begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2016 Andriy Voskoboinyk<avos@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|R12A_ROM_IMAGE_H
end_ifndef

begin_define
define|#
directive|define
name|R12A_ROM_IMAGE_H
end_define

begin_include
include|#
directive|include
file|<dev/rtwn/rtl8812a/r12a_rom_defs.h>
end_include

begin_define
define|#
directive|define
name|R12A_DEF_TX_PWR_2G
value|0x2d
end_define

begin_define
define|#
directive|define
name|R12A_DEF_TX_PWR_5G
value|0xfe
end_define

begin_struct
struct|struct
name|r12a_tx_pwr_2g
block|{
name|uint8_t
name|cck
index|[
name|R12A_GROUP_2G
index|]
decl_stmt|;
name|uint8_t
name|ht40
index|[
name|R12A_GROUP_2G
operator|-
literal|1
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|r12a_tx_pwr_diff_2g
block|{
name|uint8_t
name|ht20_ofdm
decl_stmt|;
struct|struct
block|{
name|uint8_t
name|ht40_ht20
decl_stmt|;
name|uint8_t
name|ofdm_cck
decl_stmt|;
block|}
name|__packed
name|diff123
index|[
name|R12A_MAX_TX_COUNT
operator|-
literal|1
index|]
struct|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|r12a_tx_pwr_5g
block|{
name|uint8_t
name|ht40
index|[
name|R12A_GROUP_5G
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|r12a_tx_pwr_diff_5g
block|{
name|uint8_t
name|ht20_ofdm
decl_stmt|;
name|uint8_t
name|ht40_ht20
index|[
name|R12A_MAX_TX_COUNT
operator|-
literal|1
index|]
decl_stmt|;
name|uint8_t
name|ofdm_ofdm
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|ht80_ht160
index|[
name|R12A_MAX_TX_COUNT
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|r12a_tx_pwr
block|{
name|struct
name|r12a_tx_pwr_2g
name|pwr_2g
decl_stmt|;
name|struct
name|r12a_tx_pwr_diff_2g
name|pwr_diff_2g
decl_stmt|;
name|struct
name|r12a_tx_pwr_5g
name|pwr_5g
decl_stmt|;
name|struct
name|r12a_tx_pwr_diff_5g
name|pwr_diff_5g
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/*  * RTL8812AU/RTL8821AU ROM image.  */
end_comment

begin_struct
struct|struct
name|r12a_rom
block|{
name|uint8_t
name|reserved1
index|[
literal|16
index|]
decl_stmt|;
name|struct
name|r12a_tx_pwr
name|tx_pwr
index|[
name|R12A_MAX_RF_PATH
index|]
decl_stmt|;
name|uint8_t
name|channel_plan
decl_stmt|;
name|uint8_t
name|crystalcap
decl_stmt|;
define|#
directive|define
name|R12A_ROM_CRYSTALCAP_DEF
value|0x20
name|uint8_t
name|thermal_meter
decl_stmt|;
name|uint8_t
name|iqk_lck
decl_stmt|;
name|uint8_t
name|pa_type
decl_stmt|;
define|#
directive|define
name|R12A_ROM_IS_PA_EXT_2GHZ
parameter_list|(
name|pa_type
parameter_list|)
value|(((pa_type)& 0x30) == 0x30)
define|#
directive|define
name|R12A_ROM_IS_PA_EXT_5GHZ
parameter_list|(
name|pa_type
parameter_list|)
value|(((pa_type)& 0x03) == 0x03)
define|#
directive|define
name|R21A_ROM_IS_PA_EXT_2GHZ
parameter_list|(
name|pa_type
parameter_list|)
value|(((pa_type)& 0x10) == 0x10)
define|#
directive|define
name|R21A_ROM_IS_PA_EXT_5GHZ
parameter_list|(
name|pa_type
parameter_list|)
value|(((pa_type)& 0x01) == 0x01)
name|uint8_t
name|lna_type_2g
decl_stmt|;
define|#
directive|define
name|R12A_ROM_IS_LNA_EXT
parameter_list|(
name|lna_type
parameter_list|)
value|(((lna_type)& 0x88) == 0x88)
define|#
directive|define
name|R21A_ROM_IS_LNA_EXT
parameter_list|(
name|lna_type
parameter_list|)
value|(((lna_type)& 0x08) == 0x08)
define|#
directive|define
name|R12A_GET_ROM_PA_TYPE
parameter_list|(
name|lna_type
parameter_list|,
name|chain
parameter_list|)
define|\
value|(((lna_type)>> ((chain) * 4 + 2))& 0x01)
define|#
directive|define
name|R12A_GET_ROM_LNA_TYPE
parameter_list|(
name|lna_type
parameter_list|,
name|chain
parameter_list|)
define|\
value|(((lna_type)>> ((chain) * 4))& 0x03)
name|uint8_t
name|reserved2
decl_stmt|;
name|uint8_t
name|lna_type_5g
decl_stmt|;
name|uint8_t
name|reserved3
decl_stmt|;
name|uint8_t
name|rf_board_opt
decl_stmt|;
define|#
directive|define
name|R12A_BOARD_TYPE_COMBO_MF
value|5
name|uint8_t
name|rf_feature_opt
decl_stmt|;
name|uint8_t
name|rf_bt_opt
decl_stmt|;
define|#
directive|define
name|R12A_RF_BT_OPT_ANT_NUM
value|0x01
name|uint8_t
name|version
decl_stmt|;
name|uint8_t
name|customer_id
decl_stmt|;
name|uint8_t
name|tx_bbswing_2g
decl_stmt|;
name|uint8_t
name|tx_bbswing_5g
decl_stmt|;
name|uint8_t
name|tx_pwr_calib_rate
decl_stmt|;
name|uint8_t
name|rf_ant_opt
decl_stmt|;
name|uint8_t
name|rfe_option
decl_stmt|;
name|uint8_t
name|reserved4
index|[
literal|5
index|]
decl_stmt|;
name|uint16_t
name|vid_12a
decl_stmt|;
name|uint16_t
name|pid_12a
decl_stmt|;
name|uint8_t
name|reserved5
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|macaddr_12a
index|[
name|IEEE80211_ADDR_LEN
index|]
decl_stmt|;
name|uint8_t
name|reserved6
index|[
literal|35
index|]
decl_stmt|;
name|uint16_t
name|vid_21a
decl_stmt|;
name|uint16_t
name|pid_21a
decl_stmt|;
name|uint8_t
name|reserved7
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|macaddr_21a
index|[
name|IEEE80211_ADDR_LEN
index|]
decl_stmt|;
name|uint8_t
name|reserved8
index|[
literal|2
index|]
decl_stmt|;
comment|/* XXX check on RTL8812AU. */
name|uint8_t
name|string
index|[
literal|8
index|]
decl_stmt|;
comment|/* "Realtek " */
name|uint8_t
name|reserved9
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|string_ven
index|[
literal|23
index|]
decl_stmt|;
comment|/* XXX variable length? */
name|uint8_t
name|reserved10
index|[
literal|208
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_assert
assert|_Static_assert
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|r12a_rom
argument_list|)
operator|==
name|R12A_EFUSE_MAP_LEN
argument_list|,
literal|"R12A_EFUSE_MAP_LEN must be equal to sizeof(struct r12a_rom)!"
argument_list|)
assert|;
end_assert

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* R12A_ROM_IMAGE_H */
end_comment

end_unit

