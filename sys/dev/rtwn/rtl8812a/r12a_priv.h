begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2016 Andriy Voskoboinyk<avos@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|R12A_PRIV_H
end_ifndef

begin_define
define|#
directive|define
name|R12A_PRIV_H
end_define

begin_comment
comment|/*  * MAC initialization values.  */
end_comment

begin_define
define|#
directive|define
name|RTL8812AU_MAC_PROG_START
define|\
value|{ 0x010, 0x0c },
end_define

begin_define
define|#
directive|define
name|RTL8812AU_MAC_PROG_END
define|\
value|{ 0x025, 0x0f }, { 0x072, 0x00 }, { 0x420, 0x80 }, { 0x428, 0x0a }, \ 	{ 0x429, 0x10 }, { 0x430, 0x00 }, { 0x431, 0x00 }, { 0x432, 0x00 }, \ 	{ 0x433, 0x01 }, { 0x434, 0x04 }, { 0x435, 0x05 }, { 0x436, 0x07 }, \ 	{ 0x437, 0x08 }, { 0x43c, 0x04 }, { 0x43d, 0x05 }, { 0x43e, 0x07 }, \ 	{ 0x43f, 0x08 }, { 0x440, 0x5d }, { 0x441, 0x01 }, { 0x442, 0x00 }, \ 	{ 0x444, 0x10 }, { 0x445, 0x00 }, { 0x446, 0x00 }, { 0x447, 0x00 }, \ 	{ 0x448, 0x00 }, { 0x449, 0xf0 }, { 0x44a, 0x0f }, { 0x44b, 0x3e }, \ 	{ 0x44c, 0x10 }, { 0x44d, 0x00 }, { 0x44e, 0x00 }, { 0x44f, 0x00 }, \ 	{ 0x450, 0x00 }, { 0x451, 0xf0 }, { 0x452, 0x0f }, { 0x453, 0x00 }, \ 	{ 0x45b, 0x80 }, { 0x460, 0x66 }, { 0x461, 0x66 }, { 0x4c8, 0xff }, \ 	{ 0x4c9, 0x08 }, { 0x4cc, 0xff }, { 0x4cd, 0xff }, { 0x4ce, 0x01 }, \ 	{ 0x500, 0x26 }, { 0x501, 0xa2 }, { 0x502, 0x2f }, { 0x503, 0x00 }, \ 	{ 0x504, 0x28 }, { 0x505, 0xa3 }, { 0x506, 0x5e }, { 0x507, 0x00 }, \ 	{ 0x508, 0x2b }, { 0x509, 0xa4 }, { 0x50a, 0x5e }, { 0x50b, 0x00 }, \ 	{ 0x50c, 0x4f }, { 0x50d, 0xa4 }, { 0x50e, 0x00 }, { 0x50f, 0x00 }, \ 	{ 0x512, 0x1c }, { 0x514, 0x0a }, { 0x516, 0x0a }, { 0x525, 0x4f }, \ 	{ 0x550, 0x10 }, { 0x551, 0x10 }, { 0x559, 0x02 }, { 0x55c, 0x50 }, \ 	{ 0x55d, 0xff }, { 0x604, 0x09 }, { 0x605, 0x30 }, { 0x607, 0x03 }, \ 	{ 0x608, 0x0e }, { 0x609, 0x2a }, { 0x620, 0xff }, { 0x621, 0xff }, \ 	{ 0x622, 0xff }, { 0x623, 0xff }, { 0x624, 0xff }, { 0x625, 0xff }, \ 	{ 0x626, 0xff }, { 0x627, 0xff }, { 0x638, 0x50 }, { 0x63c, 0x0a }, \ 	{ 0x63d, 0x0a }, { 0x63e, 0x0e }, { 0x63f, 0x0e }, { 0x640, 0x80 }, \ 	{ 0x642, 0x40 }, { 0x643, 0x00 }, { 0x652, 0xc8 }, { 0x66e, 0x05 }, \ 	{ 0x700, 0x21 }, { 0x701, 0x43 }, { 0x702, 0x65 }, { 0x703, 0x87 }, \ 	{ 0x708, 0x21 }, { 0x709, 0x43 }, { 0x70a, 0x65 }, { 0x70b, 0x87 }, \ 	{ 0x718, 0x40 }
end_define

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_mac_prog
name|rtl8812au_mac_no_ext_pa_lna
index|[]
init|=
block|{
name|RTL8812AU_MAC_PROG_START
block|{
literal|0x11
block|,
literal|0x66
block|}
block|,
name|RTL8812AU_MAC_PROG_END
block|}
decl_stmt|,
name|rtl8812au_mac
index|[]
init|=
block|{
name|RTL8812AU_MAC_PROG_START
block|{
literal|0x11
block|,
literal|0x5a
block|}
block|,
name|RTL8812AU_MAC_PROG_END
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Baseband initialization values.  */
end_comment

begin_define
define|#
directive|define
name|R12A_COND_GPA
value|0x01
end_define

begin_define
define|#
directive|define
name|R12A_COND_APA
value|0x02
end_define

begin_define
define|#
directive|define
name|R12A_COND_GLNA
value|0x04
end_define

begin_define
define|#
directive|define
name|R12A_COND_ALNA
value|0x08
end_define

begin_define
define|#
directive|define
name|R12A_COND_TYPE
parameter_list|(
name|t
parameter_list|)
value|((t)<< 4)
end_define

begin_decl_stmt
specifier|static
specifier|const
name|uint16_t
name|rtl8812au_bb_regs0
index|[]
init|=
block|{
literal|0x800
block|,
literal|0x804
block|,
literal|0x808
block|,
literal|0x80c
block|,
literal|0x810
block|,
literal|0x814
block|,
literal|0x818
block|,
literal|0x820
block|,
literal|0x824
block|,
literal|0x828
block|,
literal|0x82c
block|,
literal|0x830
block|,
literal|0x834
block|,
literal|0x838
block|,
literal|0x83c
block|,
literal|0x840
block|,
literal|0x844
block|,
literal|0x848
block|,
literal|0x84c
block|,
literal|0x850
block|,
literal|0x854
block|,
literal|0x858
block|,
literal|0x85c
block|,
literal|0x860
block|,
literal|0x864
block|,
literal|0x868
block|,
literal|0x86c
block|,
literal|0x870
block|,
literal|0x874
block|,
literal|0x878
block|,
literal|0x87c
block|,
literal|0x8a0
block|,
literal|0x8a4
block|,
literal|0x8a8
block|,
literal|0x8ac
block|,
literal|0x8b0
block|,
literal|0x8b4
block|,
literal|0x8b8
block|,
literal|0x8bc
block|,
literal|0x8c0
block|,
literal|0x8c4
block|,
literal|0x8c8
block|,
literal|0x8cc
block|,
literal|0x8d0
block|,
literal|0x8dc
block|,
literal|0x8d4
block|,
literal|0x8d8
block|,
literal|0x8f8
block|,
literal|0x8fc
block|,
literal|0x900
block|,
literal|0x90c
block|,
literal|0x910
block|,
literal|0x914
block|,
literal|0x918
block|,
literal|0x91c
block|,
literal|0x920
block|,
literal|0x924
block|,
literal|0x928
block|,
literal|0x92c
block|,
literal|0x930
block|,
literal|0x934
block|,
literal|0x960
block|,
literal|0x964
block|,
literal|0x968
block|,
literal|0x96c
block|,
literal|0x970
block|,
literal|0x978
block|,
literal|0x97c
block|,
literal|0x980
block|,
literal|0x984
block|,
literal|0x988
block|,
literal|0x990
block|,
literal|0x994
block|,
literal|0x998
block|,
literal|0x99c
block|,
literal|0x9a0
block|,
literal|0x9a4
block|,
literal|0x9a8
block|,
literal|0x9ac
block|,
literal|0x9b0
block|,
literal|0x9b4
block|,
literal|0x9b8
block|,
literal|0x9bc
block|,
literal|0x9d0
block|,
literal|0x9d4
block|,
literal|0x9d8
block|,
literal|0x9dc
block|,
literal|0x9e4
block|,
literal|0x9e8
block|,
literal|0xa00
block|,
literal|0xa04
block|,
literal|0xa08
block|,
literal|0xa0c
block|,
literal|0xa10
block|,
literal|0xa14
block|,
literal|0xa18
block|,
literal|0xa1c
block|,
literal|0xa20
block|,
literal|0xa24
block|,
literal|0xa28
block|,
literal|0xa2c
block|,
literal|0xa70
block|,
literal|0xa74
block|,
literal|0xa78
block|,
literal|0xa7c
block|,
literal|0xa80
block|,
literal|0xa84
block|,
literal|0xb00
block|,
literal|0xb04
block|,
literal|0xb08
block|,
literal|0xb0c
block|,
literal|0xb10
block|,
literal|0xb14
block|,
literal|0xb18
block|,
literal|0xb1c
block|,
literal|0xb20
block|,
literal|0xb24
block|,
literal|0xb28
block|,
literal|0xb2c
block|,
literal|0xb30
block|,
literal|0xb34
block|,
literal|0xb38
block|,
literal|0xb3c
block|,
literal|0xb40
block|,
literal|0xb44
block|,
literal|0xb48
block|,
literal|0xb4c
block|,
literal|0xb50
block|,
literal|0xb54
block|,
literal|0xb58
block|,
literal|0xb5c
block|,
literal|0xc00
block|,
literal|0xc04
block|,
literal|0xc08
block|,
literal|0xc0c
block|,
literal|0xc10
block|,
literal|0xc14
block|,
literal|0xc1c
block|,
literal|0xc20
block|,
literal|0xc24
block|,
literal|0xc28
block|,
literal|0xc2c
block|,
literal|0xc30
block|,
literal|0xc34
block|,
literal|0xc38
block|,
literal|0xc3c
block|,
literal|0xc40
block|,
literal|0xc44
block|,
literal|0xc48
block|,
literal|0xc4c
block|,
literal|0xc50
block|,
literal|0xc54
block|,
literal|0xc58
block|,
literal|0xc5c
block|,
literal|0xc60
block|,
literal|0xc64
block|}
decl_stmt|,
name|rtl8812au_bb_regs1
index|[]
init|=
block|{
literal|0xc68
block|}
decl_stmt|,
name|rtl8812au_bb_regs2
index|[]
init|=
block|{
literal|0xc6c
block|,
literal|0xc70
block|,
literal|0xc74
block|,
literal|0xc78
block|,
literal|0xc7c
block|,
literal|0xc80
block|,
literal|0xc84
block|,
literal|0xc94
block|,
literal|0xc98
block|,
literal|0xc9c
block|,
literal|0xca0
block|,
literal|0xca4
block|,
literal|0xca8
block|,
literal|0xcb0
block|,
literal|0xcb4
block|,
literal|0xcb8
block|,
literal|0xe00
block|,
literal|0xe04
block|,
literal|0xe08
block|,
literal|0xe0c
block|,
literal|0xe10
block|,
literal|0xe14
block|,
literal|0xe1c
block|,
literal|0xe20
block|,
literal|0xe24
block|,
literal|0xe28
block|,
literal|0xe2c
block|,
literal|0xe30
block|,
literal|0xe34
block|,
literal|0xe38
block|,
literal|0xe3c
block|,
literal|0xe40
block|,
literal|0xe44
block|,
literal|0xe48
block|,
literal|0xe4c
block|,
literal|0xe50
block|,
literal|0xe54
block|,
literal|0xe58
block|,
literal|0xe5c
block|,
literal|0xe60
block|,
literal|0xe64
block|,
literal|0xe68
block|,
literal|0xe6c
block|,
literal|0xe70
block|,
literal|0xe74
block|,
literal|0xe78
block|,
literal|0xe7c
block|,
literal|0xe80
block|,
literal|0xe84
block|,
literal|0xe94
block|,
literal|0xe98
block|,
literal|0xe9c
block|,
literal|0xea0
block|,
literal|0xea4
block|,
literal|0xea8
block|,
literal|0xeb0
block|,
literal|0xeb4
block|,
literal|0xeb8
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8812au_bb_vals0
index|[]
init|=
block|{
literal|0x8020d010
block|,
literal|0x080112e0
block|,
literal|0x0e028233
block|,
literal|0x12131113
block|,
literal|0x20101263
block|,
literal|0x020c3d10
block|,
literal|0x03a00385
block|,
literal|0x00000000
block|,
literal|0x00030fe0
block|,
literal|0x00000000
block|,
literal|0x002083dd
block|,
literal|0x2eaaeeb8
block|,
literal|0x0037a706
block|,
literal|0x06c89b44
block|,
literal|0x0000095b
block|,
literal|0xc0000001
block|,
literal|0x40003cde
block|,
literal|0x6210ff8b
block|,
literal|0x6cfdffb8
block|,
literal|0x28874706
block|,
literal|0x0001520c
block|,
literal|0x8060e000
block|,
literal|0x74210168
block|,
literal|0x6929c321
block|,
literal|0x79727432
block|,
literal|0x8ca7a314
block|,
literal|0x338c2878
block|,
literal|0x03333333
block|,
literal|0x31602c2e
block|,
literal|0x00003152
block|,
literal|0x000fc000
block|,
literal|0x00000013
block|,
literal|0x7f7f7f7f
block|,
literal|0xa202033e
block|,
literal|0x0ff0fa0a
block|,
literal|0x00000600
block|,
literal|0x000fc080
block|,
literal|0x6c0057ff
block|,
literal|0x4ca520a3
block|,
literal|0x27f00020
block|,
literal|0x00000000
block|,
literal|0x00012d69
block|,
literal|0x08248492
block|,
literal|0x0000b800
block|,
literal|0x00000000
block|,
literal|0x940008a0
block|,
literal|0x290b5612
block|,
literal|0x400002c0
block|,
literal|0x00000000
block|,
literal|0x00000701
block|,
literal|0x00000000
block|,
literal|0x0000fc00
block|,
literal|0x00000404
block|,
literal|0x1c1028c0
block|,
literal|0x64b11a1c
block|,
literal|0xe0767233
block|,
literal|0x055aa500
block|,
literal|0x00000004
block|,
literal|0xfffe0000
block|,
literal|0xfffffffe
block|,
literal|0x001fffff
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x801fffff
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x27100000
block|,
literal|0xffff0100
block|,
literal|0xffffff5c
block|,
literal|0xffffffff
block|,
literal|0x000000ff
block|,
literal|0x00080080
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x81081008
block|,
literal|0x00000000
block|,
literal|0x01081008
block|,
literal|0x01081008
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000003
block|,
literal|0x000002d5
block|,
literal|0x00d047c8
block|,
literal|0x01ff000c
block|,
literal|0x8c838300
block|,
literal|0x2e7f000f
block|,
literal|0x9500bb78
block|,
literal|0x11144028
block|,
literal|0x00881117
block|,
literal|0x89140f00
block|,
literal|0x1a1b0000
block|,
literal|0x090e1217
block|,
literal|0x00000305
block|,
literal|0x00900000
block|,
literal|0x101fff00
block|,
literal|0x00000008
block|,
literal|0x00000900
block|,
literal|0x225b0606
block|,
literal|0x218075b2
block|,
literal|0x001f8c80
block|,
literal|0x03100000
block|,
literal|0x0000b000
block|,
literal|0xae0201eb
block|,
literal|0x01003207
block|,
literal|0x00009807
block|,
literal|0x01000000
block|,
literal|0x00000002
block|,
literal|0x00000002
block|,
literal|0x0000001f
block|,
literal|0x03020100
block|,
literal|0x07060504
block|,
literal|0x0b0a0908
block|,
literal|0x0f0e0d0c
block|,
literal|0x13121110
block|,
literal|0x17161514
block|,
literal|0x0000003a
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x13000032
block|,
literal|0x48080000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000007
block|,
literal|0x00042020
block|,
literal|0x80410231
block|,
literal|0x00000000
block|,
literal|0x00000100
block|,
literal|0x01000000
block|,
literal|0x40000003
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x00000020
block|,
literal|0x0008121c
block|,
literal|0x30000c1c
block|,
literal|0x00000058
block|,
literal|0x34344443
block|,
literal|0x07003333
block|}
decl_stmt|,
name|rtl8812au_bb_vals1_ext_pa_lna
index|[]
init|=
block|{
literal|0x59791979
block|}
decl_stmt|,
name|rtl8812au_bb_vals1
index|[]
init|=
block|{
literal|0x59799979
block|}
decl_stmt|,
name|rtl8812au_bb_vals2
index|[]
init|=
block|{
literal|0x59795979
block|,
literal|0x19795979
block|,
literal|0x19795979
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x0100005c
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000029
block|,
literal|0x08040201
block|,
literal|0x80402010
block|,
literal|0x77547777
block|,
literal|0x00000077
block|,
literal|0x00508242
block|,
literal|0x00000007
block|,
literal|0x00042020
block|,
literal|0x80410231
block|,
literal|0x00000000
block|,
literal|0x00000100
block|,
literal|0x01000000
block|,
literal|0x40000003
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x12121212
block|,
literal|0x00000020
block|,
literal|0x0008121c
block|,
literal|0x30000c1c
block|,
literal|0x00000058
block|,
literal|0x34344443
block|,
literal|0x07003333
block|,
literal|0x59791979
block|,
literal|0x59795979
block|,
literal|0x19795979
block|,
literal|0x19795979
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x19791979
block|,
literal|0x0100005c
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000029
block|,
literal|0x08040201
block|,
literal|0x80402010
block|,
literal|0x77547777
block|,
literal|0x00000077
block|,
literal|0x00508242
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_bb_prog
name|rtl8812au_bb
index|[]
init|=
block|{
block|{
name|nitems
argument_list|(
name|rtl8812au_bb_regs0
argument_list|)
block|,
name|rtl8812au_bb_regs0
block|,
name|rtl8812au_bb_vals0
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* 	 * Devices with: 	 * * External 2GHz PA, type 0; 	 * * External 5GHz PA, type 0 or 5; 	 * * External 2GHz LNA, type 0 or 5; 	 * * External 5GHz LNA, type 0; 	 */
block|{
name|nitems
argument_list|(
name|rtl8812au_bb_regs1
argument_list|)
block|,
name|rtl8812au_bb_regs1
block|,
name|rtl8812au_bb_vals1_ext_pa_lna
block|,
block|{
name|R12A_COND_GPA
operator||
name|R12A_COND_GLNA
operator||
name|R12A_COND_APA
operator||
name|R12A_COND_ALNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
name|R12A_COND_APA
operator||
name|R12A_COND_GLNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x5
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* 		 * Others. 		 */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_bb_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_bb_regs1
argument_list|)
block|,
name|rtl8812au_bb_regs1
block|,
name|rtl8812au_bb_vals1
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8812au_bb_regs2
argument_list|)
block|,
name|rtl8812au_bb_regs2
block|,
name|rtl8812au_bb_vals2
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8812au_agc_vals0_lna_g0
index|[]
init|=
block|{
literal|0xfc000001
block|,
literal|0xfb020001
block|,
literal|0xfa040001
block|,
literal|0xf9060001
block|,
literal|0xf8080001
block|,
literal|0xf70a0001
block|,
literal|0xf60c0001
block|,
literal|0xf50e0001
block|,
literal|0xf4100001
block|,
literal|0xf3120001
block|,
literal|0xf2140001
block|,
literal|0xf1160001
block|,
literal|0xf0180001
block|,
literal|0xef1a0001
block|,
literal|0xee1c0001
block|,
literal|0xed1e0001
block|,
literal|0xec200001
block|,
literal|0xeb220001
block|,
literal|0xea240001
block|,
literal|0xcd260001
block|,
literal|0xcc280001
block|,
literal|0xcb2a0001
block|,
literal|0xca2c0001
block|,
literal|0xc92e0001
block|,
literal|0xc8300001
block|,
literal|0xa6320001
block|,
literal|0xa5340001
block|,
literal|0xa4360001
block|,
literal|0xa3380001
block|,
literal|0xa23a0001
block|,
literal|0x883c0001
block|,
literal|0x873e0001
block|,
literal|0x86400001
block|,
literal|0x85420001
block|,
literal|0x84440001
block|,
literal|0x83460001
block|,
literal|0x82480001
block|,
literal|0x814a0001
block|,
literal|0x484c0001
block|,
literal|0x474e0001
block|,
literal|0x46500001
block|,
literal|0x45520001
block|,
literal|0x44540001
block|,
literal|0x43560001
block|,
literal|0x42580001
block|,
literal|0x415a0001
block|,
literal|0x255c0001
block|,
literal|0x245e0001
block|,
literal|0x23600001
block|,
literal|0x22620001
block|,
literal|0x21640001
block|,
literal|0x21660001
block|,
literal|0x21680001
block|,
literal|0x216a0001
block|,
literal|0x216c0001
block|,
literal|0x216e0001
block|,
literal|0x21700001
block|,
literal|0x21720001
block|,
literal|0x21740001
block|,
literal|0x21760001
block|,
literal|0x21780001
block|,
literal|0x217a0001
block|,
literal|0x217c0001
block|,
literal|0x217e0001
block|}
decl_stmt|,
name|rtl8812au_agc_vals0_lna_g5
index|[]
init|=
block|{
literal|0xf9000001
block|,
literal|0xf8020001
block|,
literal|0xf7040001
block|,
literal|0xf6060001
block|,
literal|0xf5080001
block|,
literal|0xf40a0001
block|,
literal|0xf30c0001
block|,
literal|0xf20e0001
block|,
literal|0xf1100001
block|,
literal|0xf0120001
block|,
literal|0xef140001
block|,
literal|0xee160001
block|,
literal|0xed180001
block|,
literal|0xec1a0001
block|,
literal|0xeb1c0001
block|,
literal|0xea1e0001
block|,
literal|0xcd200001
block|,
literal|0xcc220001
block|,
literal|0xcb240001
block|,
literal|0xca260001
block|,
literal|0xc9280001
block|,
literal|0xc82a0001
block|,
literal|0xc72c0001
block|,
literal|0xc62e0001
block|,
literal|0xa5300001
block|,
literal|0xa4320001
block|,
literal|0xa3340001
block|,
literal|0xa2360001
block|,
literal|0x88380001
block|,
literal|0x873a0001
block|,
literal|0x863c0001
block|,
literal|0x853e0001
block|,
literal|0x84400001
block|,
literal|0x83420001
block|,
literal|0x82440001
block|,
literal|0x81460001
block|,
literal|0x48480001
block|,
literal|0x474a0001
block|,
literal|0x464c0001
block|,
literal|0x454e0001
block|,
literal|0x44500001
block|,
literal|0x43520001
block|,
literal|0x42540001
block|,
literal|0x41560001
block|,
literal|0x25580001
block|,
literal|0x245a0001
block|,
literal|0x235c0001
block|,
literal|0x225e0001
block|,
literal|0x21600001
block|,
literal|0x21620001
block|,
literal|0x21640001
block|,
literal|0x21660001
block|,
literal|0x21680001
block|,
literal|0x216a0001
block|,
literal|0x236c0001
block|,
literal|0x226e0001
block|,
literal|0x21700001
block|,
literal|0x21720001
block|,
literal|0x21740001
block|,
literal|0x21760001
block|,
literal|0x21780001
block|,
literal|0x217a0001
block|,
literal|0x217c0001
block|,
literal|0x217e0001
block|}
decl_stmt|,
name|rtl8812au_agc_vals0
index|[]
init|=
block|{
literal|0xff000001
block|,
literal|0xff020001
block|,
literal|0xff040001
block|,
literal|0xff060001
block|,
literal|0xff080001
block|,
literal|0xfe0a0001
block|,
literal|0xfd0c0001
block|,
literal|0xfc0e0001
block|,
literal|0xfb100001
block|,
literal|0xfa120001
block|,
literal|0xf9140001
block|,
literal|0xf8160001
block|,
literal|0xf7180001
block|,
literal|0xf61a0001
block|,
literal|0xf51c0001
block|,
literal|0xf41e0001
block|,
literal|0xf3200001
block|,
literal|0xf2220001
block|,
literal|0xf1240001
block|,
literal|0xf0260001
block|,
literal|0xef280001
block|,
literal|0xee2a0001
block|,
literal|0xed2c0001
block|,
literal|0xec2e0001
block|,
literal|0xeb300001
block|,
literal|0xea320001
block|,
literal|0xe9340001
block|,
literal|0xe8360001
block|,
literal|0xe7380001
block|,
literal|0xe63a0001
block|,
literal|0xe53c0001
block|,
literal|0xc73e0001
block|,
literal|0xc6400001
block|,
literal|0xc5420001
block|,
literal|0xc4440001
block|,
literal|0xc3460001
block|,
literal|0xc2480001
block|,
literal|0xc14a0001
block|,
literal|0xa74c0001
block|,
literal|0xa64e0001
block|,
literal|0xa5500001
block|,
literal|0xa4520001
block|,
literal|0xa3540001
block|,
literal|0xa2560001
block|,
literal|0xa1580001
block|,
literal|0x675a0001
block|,
literal|0x665c0001
block|,
literal|0x655e0001
block|,
literal|0x64600001
block|,
literal|0x63620001
block|,
literal|0x48640001
block|,
literal|0x47660001
block|,
literal|0x46680001
block|,
literal|0x456a0001
block|,
literal|0x446c0001
block|,
literal|0x436e0001
block|,
literal|0x42700001
block|,
literal|0x41720001
block|,
literal|0x41740001
block|,
literal|0x41760001
block|,
literal|0x41780001
block|,
literal|0x417a0001
block|,
literal|0x417c0001
block|,
literal|0x417e0001
block|}
decl_stmt|,
name|rtl8812au_agc_vals1_lna_a0
index|[]
init|=
block|{
literal|0xfc800001
block|,
literal|0xfb820001
block|,
literal|0xfa840001
block|,
literal|0xf9860001
block|,
literal|0xf8880001
block|,
literal|0xf78a0001
block|,
literal|0xf68c0001
block|,
literal|0xf58e0001
block|,
literal|0xf4900001
block|,
literal|0xf3920001
block|,
literal|0xf2940001
block|,
literal|0xf1960001
block|,
literal|0xf0980001
block|,
literal|0xef9a0001
block|,
literal|0xee9c0001
block|,
literal|0xed9e0001
block|,
literal|0xeca00001
block|,
literal|0xeba20001
block|,
literal|0xeaa40001
block|,
literal|0xe9a60001
block|,
literal|0xe8a80001
block|,
literal|0xe7aa0001
block|,
literal|0xe6ac0001
block|,
literal|0xe5ae0001
block|,
literal|0xe4b00001
block|,
literal|0xe3b20001
block|,
literal|0xa8b40001
block|,
literal|0xa7b60001
block|,
literal|0xa6b80001
block|,
literal|0xa5ba0001
block|,
literal|0xa4bc0001
block|,
literal|0xa3be0001
block|,
literal|0xa2c00001
block|,
literal|0xa1c20001
block|,
literal|0x68c40001
block|,
literal|0x67c60001
block|,
literal|0x66c80001
block|,
literal|0x65ca0001
block|,
literal|0x64cc0001
block|,
literal|0x47ce0001
block|,
literal|0x46d00001
block|,
literal|0x45d20001
block|,
literal|0x44d40001
block|,
literal|0x43d60001
block|,
literal|0x42d80001
block|,
literal|0x08da0001
block|,
literal|0x07dc0001
block|,
literal|0x06de0001
block|,
literal|0x05e00001
block|,
literal|0x04e20001
block|,
literal|0x03e40001
block|,
literal|0x02e60001
block|,
literal|0x01e80001
block|,
literal|0x01ea0001
block|,
literal|0x01ec0001
block|,
literal|0x01ee0001
block|,
literal|0x01f00001
block|,
literal|0x01f20001
block|,
literal|0x01f40001
block|,
literal|0x01f60001
block|,
literal|0x01f80001
block|,
literal|0x01fa0001
block|,
literal|0x01fc0001
block|,
literal|0x01fe0001
block|}
decl_stmt|,
name|rtl8812au_agc_vals1
index|[]
init|=
block|{
literal|0xff800001
block|,
literal|0xff820001
block|,
literal|0xff840001
block|,
literal|0xfe860001
block|,
literal|0xfd880001
block|,
literal|0xfc8a0001
block|,
literal|0xfb8c0001
block|,
literal|0xfa8e0001
block|,
literal|0xf9900001
block|,
literal|0xf8920001
block|,
literal|0xf7940001
block|,
literal|0xf6960001
block|,
literal|0xf5980001
block|,
literal|0xf49a0001
block|,
literal|0xf39c0001
block|,
literal|0xf29e0001
block|,
literal|0xf1a00001
block|,
literal|0xf0a20001
block|,
literal|0xefa40001
block|,
literal|0xeea60001
block|,
literal|0xeda80001
block|,
literal|0xecaa0001
block|,
literal|0xebac0001
block|,
literal|0xeaae0001
block|,
literal|0xe9b00001
block|,
literal|0xe8b20001
block|,
literal|0xe7b40001
block|,
literal|0xe6b60001
block|,
literal|0xe5b80001
block|,
literal|0xe4ba0001
block|,
literal|0xe3bc0001
block|,
literal|0xa8be0001
block|,
literal|0xa7c00001
block|,
literal|0xa6c20001
block|,
literal|0xa5c40001
block|,
literal|0xa4c60001
block|,
literal|0xa3c80001
block|,
literal|0xa2ca0001
block|,
literal|0xa1cc0001
block|,
literal|0x68ce0001
block|,
literal|0x67d00001
block|,
literal|0x66d20001
block|,
literal|0x65d40001
block|,
literal|0x64d60001
block|,
literal|0x47d80001
block|,
literal|0x46da0001
block|,
literal|0x45dc0001
block|,
literal|0x44de0001
block|,
literal|0x43e00001
block|,
literal|0x42e20001
block|,
literal|0x08e40001
block|,
literal|0x07e60001
block|,
literal|0x06e80001
block|,
literal|0x05ea0001
block|,
literal|0x04ec0001
block|,
literal|0x03ee0001
block|,
literal|0x02f00001
block|,
literal|0x01f20001
block|,
literal|0x01f40001
block|,
literal|0x01f60001
block|,
literal|0x01f80001
block|,
literal|0x01fa0001
block|,
literal|0x01fc0001
block|,
literal|0x01fe0001
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_agc_prog
name|rtl8812au_agc
index|[]
init|=
block|{
comment|/* 	 * External 2GHz LNA (type 0). 	 */
block|{
name|nitems
argument_list|(
name|rtl8812au_agc_vals0_lna_g0
argument_list|)
block|,
name|rtl8812au_agc_vals0_lna_g0
block|,
block|{
name|R12A_COND_GLNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* 		 * External 2GHz LNA (type 5). 		 */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_agc_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_agc_vals0_lna_g5
argument_list|)
block|,
name|rtl8812au_agc_vals0_lna_g5
block|,
block|{
name|R12A_COND_GLNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x5
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* 			 * Others. 			 */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_agc_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_agc_vals0
argument_list|)
block|,
name|rtl8812au_agc_vals0
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|}
block|,
comment|/* 	 * External 5GHz LNA (type 0). 	 */
block|{
name|nitems
argument_list|(
name|rtl8812au_agc_vals1_lna_a0
argument_list|)
block|,
name|rtl8812au_agc_vals1_lna_a0
block|,
block|{
name|R12A_COND_ALNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* 		 * Others. 		 */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_agc_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_agc_vals1
argument_list|)
block|,
name|rtl8812au_agc_vals1
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RF initialization values.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint8_t
name|rtl8812au_rf0_regs0
index|[]
init|=
block|{
literal|0x00
block|,
literal|0x18
block|,
literal|0x56
block|,
literal|0x66
block|,
literal|0x1e
block|,
literal|0x89
block|}
decl_stmt|,
name|rtl8812au_rf0_regs1
index|[]
init|=
block|{
literal|0x86
block|}
decl_stmt|,
name|rtl8812au_rf0_regs2
index|[]
init|=
block|{
literal|0x8b
block|}
decl_stmt|,
name|rtl8812au_rf0_regs3
index|[]
init|=
block|{
literal|0xb1
block|,
literal|0xb3
block|,
literal|0xb4
block|,
literal|0xba
block|,
literal|0x18
block|,
literal|0xef
block|}
decl_stmt|,
name|rtl8812au_rf0_regs4
index|[]
init|=
block|{
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|}
decl_stmt|,
name|rtl8812au_rf0_regs5
index|[]
init|=
block|{
literal|0xef
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|}
decl_stmt|,
name|rtl8812au_rf0_regs6
index|[]
init|=
block|{
literal|0xef
block|,
literal|0xef
block|,
literal|0xdf
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0xef
block|,
literal|0x51
block|,
literal|0x52
block|,
literal|0x53
block|,
literal|0x54
block|,
literal|0xef
block|,
literal|0x08
block|,
literal|0x18
block|,
literal|0xef
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0x3a
block|,
literal|0x3b
block|,
literal|0x3c
block|,
literal|0xef
block|}
decl_stmt|,
name|rtl8812au_rf0_regs7
index|[]
init|=
block|{
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|}
decl_stmt|,
name|rtl8812au_rf0_regs8
index|[]
init|=
block|{
literal|0xef
block|,
literal|0x18
block|,
literal|0xef
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0xef
block|,
literal|0x18
block|,
literal|0xef
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0xef
block|,
literal|0xef
block|,
literal|0x3c
block|,
literal|0x3c
block|,
literal|0x3c
block|, }
decl_stmt|,
name|rtl8812au_rf0_regs9
index|[]
init|=
block|{
literal|0xef
block|,
literal|0x18
block|,
literal|0xef
block|,
literal|0xdf
block|,
literal|0x1f
block|}
decl_stmt|,
name|rtl8812au_rf0_regs10
index|[]
init|=
block|{
literal|0x61
block|,
literal|0x62
block|,
literal|0x63
block|,
literal|0x64
block|,
literal|0x65
block|}
decl_stmt|,
name|rtl8812au_rf0_regs11
index|[]
init|=
block|{
literal|0x08
block|,
literal|0x1c
block|,
literal|0xb4
block|,
literal|0x18
block|,
literal|0xfe
block|,
literal|0xfe
block|,
literal|0xfe
block|,
literal|0xfe
block|,
literal|0xb4
block|,
literal|0x18
block|}
decl_stmt|,
name|rtl8812au_rf1_regs0
index|[]
init|=
block|{
literal|0x56
block|,
literal|0x66
block|,
literal|0x89
block|}
decl_stmt|,
name|rtl8812au_rf1_regs3
index|[]
init|=
block|{
literal|0xb1
block|,
literal|0xb3
block|,
literal|0xb4
block|,
literal|0xba
block|,
literal|0x18
block|,
literal|0xef
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8812au_rf0_vals0
index|[]
init|=
block|{
literal|0x10000
block|,
literal|0x1712a
block|,
literal|0x51cf2
block|,
literal|0x40000
block|,
literal|0x80000
block|,
literal|0x00080
block|}
decl_stmt|,
name|rtl8812au_rf0_vals1_lna_g0_g5
index|[]
init|=
block|{
literal|0x14b3a
block|}
decl_stmt|,
name|rtl8812au_rf0_vals1
index|[]
init|=
block|{
literal|0x14b38
block|}
decl_stmt|,
name|rtl8812au_rf0_vals2_lna_a0
index|[]
init|=
block|{
literal|0x80180
block|}
decl_stmt|,
name|rtl8812au_rf0_vals2
index|[]
init|=
block|{
literal|0x87180
block|}
decl_stmt|,
name|rtl8812au_rf0_vals3
index|[]
init|=
block|{
literal|0x1fc1a
block|,
literal|0xf0810
block|,
literal|0x1a78d
block|,
literal|0x86180
block|,
literal|0x00006
block|,
literal|0x02000
block|}
decl_stmt|,
name|rtl8812au_rf0_vals4_lna_g0_g5
index|[]
init|=
block|{
literal|0x3f218
block|,
literal|0x30a58
block|,
literal|0x2fa58
block|,
literal|0x22590
block|,
literal|0x1fa50
block|,
literal|0x10248
block|,
literal|0x08240
block|}
decl_stmt|,
name|rtl8812au_rf0_vals4
index|[]
init|=
block|{
literal|0x38a58
block|,
literal|0x37a58
block|,
literal|0x2a590
block|,
literal|0x27a50
block|,
literal|0x18248
block|,
literal|0x10240
block|,
literal|0x08240
block|}
decl_stmt|,
name|rtl8812au_rf0_vals5_pa_g0
index|[]
init|=
block|{
literal|0x00100
block|,
literal|0x0a4ee
block|,
literal|0x09076
block|,
literal|0x08073
block|,
literal|0x07070
block|,
literal|0x0606d
block|,
literal|0x0506a
block|,
literal|0x04049
block|,
literal|0x03046
block|,
literal|0x02028
block|,
literal|0x01025
block|,
literal|0x00022
block|}
decl_stmt|,
name|rtl8812au_rf0_vals5
index|[]
init|=
block|{
literal|0x00100
block|,
literal|0x0adf4
block|,
literal|0x09df1
block|,
literal|0x08dee
block|,
literal|0x07deb
block|,
literal|0x06de8
block|,
literal|0x05de5
block|,
literal|0x04de2
block|,
literal|0x03ce6
block|,
literal|0x024e7
block|,
literal|0x014e4
block|,
literal|0x004e1
block|}
decl_stmt|,
name|rtl8812au_rf0_vals6
index|[]
init|=
block|{
literal|0x00000
block|,
literal|0x020a2
block|,
literal|0x00080
block|,
literal|0x00192
block|,
literal|0x08192
block|,
literal|0x10192
block|,
literal|0x00024
block|,
literal|0x08024
block|,
literal|0x10024
block|,
literal|0x18024
block|,
literal|0x00000
block|,
literal|0x00c21
block|,
literal|0x006d9
block|,
literal|0xfc649
block|,
literal|0x0017e
block|,
literal|0x00002
block|,
literal|0x08400
block|,
literal|0x1712a
block|,
literal|0x01000
block|,
literal|0x00080
block|,
literal|0x3a02c
block|,
literal|0x04000
block|,
literal|0x00400
block|,
literal|0x3202c
block|,
literal|0x10000
block|,
literal|0x000a0
block|,
literal|0x2b064
block|,
literal|0x04000
block|,
literal|0x000d8
block|,
literal|0x23070
block|,
literal|0x04000
block|,
literal|0x00468
block|,
literal|0x1b870
block|,
literal|0x10000
block|,
literal|0x00098
block|,
literal|0x12085
block|,
literal|0xe4000
block|,
literal|0x00418
block|,
literal|0x0a080
block|,
literal|0xf0000
block|,
literal|0x00418
block|,
literal|0x02080
block|,
literal|0x10000
block|,
literal|0x00080
block|,
literal|0x7a02c
block|,
literal|0x04000
block|,
literal|0x00400
block|,
literal|0x7202c
block|,
literal|0x10000
block|,
literal|0x000a0
block|,
literal|0x6b064
block|,
literal|0x04000
block|,
literal|0x000d8
block|,
literal|0x63070
block|,
literal|0x04000
block|,
literal|0x00468
block|,
literal|0x5b870
block|,
literal|0x10000
block|,
literal|0x00098
block|,
literal|0x52085
block|,
literal|0xe4000
block|,
literal|0x00418
block|,
literal|0x4a080
block|,
literal|0xf0000
block|,
literal|0x00418
block|,
literal|0x42080
block|,
literal|0x10000
block|,
literal|0x00080
block|,
literal|0xba02c
block|,
literal|0x04000
block|,
literal|0x00400
block|,
literal|0xb202c
block|,
literal|0x10000
block|,
literal|0x000a0
block|,
literal|0xab064
block|,
literal|0x04000
block|,
literal|0x000d8
block|,
literal|0xa3070
block|,
literal|0x04000
block|,
literal|0x00468
block|,
literal|0x9b870
block|,
literal|0x10000
block|,
literal|0x00098
block|,
literal|0x92085
block|,
literal|0xe4000
block|,
literal|0x00418
block|,
literal|0x8a080
block|,
literal|0xf0000
block|,
literal|0x00418
block|,
literal|0x82080
block|,
literal|0x10000
block|,
literal|0x01100
block|}
decl_stmt|,
name|rtl8812au_rf0_vals7_pa_a0
index|[]
init|=
block|{
literal|0x4a0b2
block|,
literal|0x490af
block|,
literal|0x48070
block|,
literal|0x4706d
block|,
literal|0x46050
block|,
literal|0x4504d
block|,
literal|0x4404a
block|,
literal|0x43047
block|,
literal|0x4200a
block|,
literal|0x41007
block|,
literal|0x40004
block|,
literal|0x2a0b2
block|,
literal|0x290af
block|,
literal|0x28070
block|,
literal|0x2706d
block|,
literal|0x26050
block|,
literal|0x2504d
block|,
literal|0x2404a
block|,
literal|0x23047
block|,
literal|0x2200a
block|,
literal|0x21007
block|,
literal|0x20004
block|,
literal|0x0a0b2
block|,
literal|0x090af
block|,
literal|0x08070
block|,
literal|0x0706d
block|,
literal|0x06050
block|,
literal|0x0504d
block|,
literal|0x0404a
block|,
literal|0x03047
block|,
literal|0x0200a
block|,
literal|0x01007
block|,
literal|0x00004
block|}
decl_stmt|,
name|rtl8812au_rf0_vals7_pa_a5
index|[]
init|=
block|{
literal|0x4a0b2
block|,
literal|0x490af
block|,
literal|0x48070
block|,
literal|0x4706d
block|,
literal|0x4604d
block|,
literal|0x4504a
block|,
literal|0x44047
block|,
literal|0x43044
block|,
literal|0x42007
block|,
literal|0x41004
block|,
literal|0x40001
block|,
literal|0x2a0b4
block|,
literal|0x290b1
block|,
literal|0x28072
block|,
literal|0x2706f
block|,
literal|0x2604f
block|,
literal|0x2504c
block|,
literal|0x24049
block|,
literal|0x23046
block|,
literal|0x22009
block|,
literal|0x21006
block|,
literal|0x20003
block|,
literal|0x0a0b2
block|,
literal|0x090af
block|,
literal|0x08070
block|,
literal|0x0706d
block|,
literal|0x0604d
block|,
literal|0x0504a
block|,
literal|0x04047
block|,
literal|0x03044
block|,
literal|0x02007
block|,
literal|0x01004
block|,
literal|0x00001
block|}
decl_stmt|,
name|rtl8812au_rf0_vals7
index|[]
init|=
block|{
literal|0x4adf5
block|,
literal|0x49df2
block|,
literal|0x48def
block|,
literal|0x47dec
block|,
literal|0x46de9
block|,
literal|0x45de6
block|,
literal|0x44de3
block|,
literal|0x438c8
block|,
literal|0x428c5
block|,
literal|0x418c2
block|,
literal|0x408c0
block|,
literal|0x2adf5
block|,
literal|0x29df2
block|,
literal|0x28def
block|,
literal|0x27dec
block|,
literal|0x26de9
block|,
literal|0x25de6
block|,
literal|0x24de3
block|,
literal|0x238c8
block|,
literal|0x228c5
block|,
literal|0x218c2
block|,
literal|0x208c0
block|,
literal|0x0aff7
block|,
literal|0x09df7
block|,
literal|0x08df4
block|,
literal|0x07df1
block|,
literal|0x06dee
block|,
literal|0x05deb
block|,
literal|0x04de8
block|,
literal|0x038cc
block|,
literal|0x028c9
block|,
literal|0x018c6
block|,
literal|0x008c3
block|}
decl_stmt|,
name|rtl8812au_rf0_vals8_pa_a0_a5
index|[]
init|=
block|{
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00040
block|,
literal|0x001d4
block|,
literal|0x081d4
block|,
literal|0x101d4
block|,
literal|0x201b4
block|,
literal|0x281b4
block|,
literal|0x301b4
block|,
literal|0x401b4
block|,
literal|0x481b4
block|,
literal|0x501b4
block|,
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00010
block|,
literal|0x04bfb
block|,
literal|0x0cbfb
block|,
literal|0x14bfb
block|,
literal|0x1cbfb
block|,
literal|0x24f4b
block|,
literal|0x2cf4b
block|,
literal|0x34f4b
block|,
literal|0x3cf4b
block|,
literal|0x44f4b
block|,
literal|0x4cf4b
block|,
literal|0x54f4b
block|,
literal|0x5cf4b
block|,
literal|0x00000
block|,
literal|0x00008
block|,
literal|0x002cc
block|,
literal|0x00522
block|,
literal|0x00902
block|}
decl_stmt|,
name|rtl8812au_rf0_vals8
index|[]
init|=
block|{
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00040
block|,
literal|0x00188
block|,
literal|0x08147
block|,
literal|0x10147
block|,
literal|0x201d7
block|,
literal|0x281d7
block|,
literal|0x301d7
block|,
literal|0x401d8
block|,
literal|0x481d8
block|,
literal|0x501d8
block|,
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00010
block|,
literal|0x84eb4
block|,
literal|0x8cc35
block|,
literal|0x94c35
block|,
literal|0x9cc35
block|,
literal|0xa4c35
block|,
literal|0xacc35
block|,
literal|0xb4c35
block|,
literal|0xbcc35
block|,
literal|0xc4c34
block|,
literal|0xccc35
block|,
literal|0xd4c35
block|,
literal|0xdcc35
block|,
literal|0x00000
block|,
literal|0x00008
block|,
literal|0x002a8
block|,
literal|0x005a2
block|,
literal|0x00880
block|}
decl_stmt|,
name|rtl8812au_rf0_vals9
index|[]
init|=
block|{
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00002
block|,
literal|0x00080
block|,
literal|0x00064
block|}
decl_stmt|,
name|rtl8812au_rf0_vals10_pa_a0
index|[]
init|=
block|{
literal|0xfdd43
block|,
literal|0x38f4b
block|,
literal|0x32117
block|,
literal|0x194ac
block|,
literal|0x931d1
block|}
decl_stmt|,
name|rtl8812au_rf0_vals10_pa_a5
index|[]
init|=
block|{
literal|0xfdd43
block|,
literal|0x38f4b
block|,
literal|0x32117
block|,
literal|0x194ac
block|,
literal|0x931d2
block|}
decl_stmt|,
name|rtl8812au_rf0_vals10
index|[]
init|=
block|{
literal|0xe5d53
block|,
literal|0x38fcd
block|,
literal|0x114eb
block|,
literal|0x196ac
block|,
literal|0x911d7
block|}
decl_stmt|,
name|rtl8812au_rf0_vals11
index|[]
init|=
block|{
literal|0x08400
block|,
literal|0x739d2
block|,
literal|0x1e78d
block|,
literal|0x1f12a
block|,
literal|0x0c350
block|,
literal|0x0c350
block|,
literal|0x0c350
block|,
literal|0x0c350
block|,
literal|0x1a78d
block|,
literal|0x1712a
block|}
decl_stmt|,
name|rtl8812au_rf1_vals0
index|[]
init|=
block|{
literal|0x51cf2
block|,
literal|0x40000
block|,
literal|0x00080
block|}
decl_stmt|,
name|rtl8812au_rf1_vals3
index|[]
init|=
block|{
literal|0x1fc1a
block|,
literal|0xf0810
block|,
literal|0x1a78d
block|,
literal|0x86180
block|,
literal|0x00006
block|,
literal|0x02000
block|}
decl_stmt|,
name|rtl8812au_rf1_vals6
index|[]
init|=
block|{
literal|0x00000
block|,
literal|0x020a2
block|,
literal|0x00080
block|,
literal|0x00192
block|,
literal|0x08192
block|,
literal|0x10192
block|,
literal|0x00024
block|,
literal|0x08024
block|,
literal|0x10024
block|,
literal|0x18024
block|,
literal|0x00000
block|,
literal|0x00c21
block|,
literal|0x006d9
block|,
literal|0xfc649
block|,
literal|0x0017e
block|,
literal|0x00002
block|,
literal|0x08400
block|,
literal|0x1712a
block|,
literal|0x01000
block|,
literal|0x00080
block|,
literal|0x3a02c
block|,
literal|0x04000
block|,
literal|0x00400
block|,
literal|0x3202c
block|,
literal|0x10000
block|,
literal|0x000a0
block|,
literal|0x2b064
block|,
literal|0x04000
block|,
literal|0x000d8
block|,
literal|0x23070
block|,
literal|0x04000
block|,
literal|0x00468
block|,
literal|0x1b870
block|,
literal|0x10000
block|,
literal|0x00098
block|,
literal|0x12085
block|,
literal|0xe4000
block|,
literal|0x00418
block|,
literal|0x0a080
block|,
literal|0xf0000
block|,
literal|0x00418
block|,
literal|0x02080
block|,
literal|0x10000
block|,
literal|0x00080
block|,
literal|0x7a02c
block|,
literal|0x04000
block|,
literal|0x00400
block|,
literal|0x7202c
block|,
literal|0x10000
block|,
literal|0x000a0
block|,
literal|0x6b064
block|,
literal|0x04000
block|,
literal|0x000d8
block|,
literal|0x63070
block|,
literal|0x04000
block|,
literal|0x00468
block|,
literal|0x5b870
block|,
literal|0x10000
block|,
literal|0x00098
block|,
literal|0x52085
block|,
literal|0xe4000
block|,
literal|0x00418
block|,
literal|0x4a080
block|,
literal|0xf0000
block|,
literal|0x00418
block|,
literal|0x42080
block|,
literal|0x10000
block|,
literal|0x00080
block|,
literal|0xba02c
block|,
literal|0x04000
block|,
literal|0x00400
block|,
literal|0xb202c
block|,
literal|0x10000
block|,
literal|0x000a0
block|,
literal|0xab064
block|,
literal|0x04000
block|,
literal|0x000d8
block|,
literal|0xa3070
block|,
literal|0x04000
block|,
literal|0x00468
block|,
literal|0x9b870
block|,
literal|0x10000
block|,
literal|0x00098
block|,
literal|0x92085
block|,
literal|0xe4000
block|,
literal|0x00418
block|,
literal|0x8a080
block|,
literal|0xf0000
block|,
literal|0x00418
block|,
literal|0x82080
block|,
literal|0x10000
block|,
literal|0x01100
block|}
decl_stmt|,
name|rtl8812au_rf1_vals7_pa_a5
index|[]
init|=
block|{
literal|0x4a0b1
block|,
literal|0x490ae
block|,
literal|0x4806f
block|,
literal|0x4706c
block|,
literal|0x4604c
block|,
literal|0x45049
block|,
literal|0x44046
block|,
literal|0x43043
block|,
literal|0x42006
block|,
literal|0x41003
block|,
literal|0x40000
block|,
literal|0x2a0b3
block|,
literal|0x290b0
block|,
literal|0x28071
block|,
literal|0x2706e
block|,
literal|0x2604e
block|,
literal|0x2504b
block|,
literal|0x24048
block|,
literal|0x23045
block|,
literal|0x22008
block|,
literal|0x21005
block|,
literal|0x20002
block|,
literal|0x0a0b3
block|,
literal|0x090b0
block|,
literal|0x08070
block|,
literal|0x0706d
block|,
literal|0x0604d
block|,
literal|0x0504a
block|,
literal|0x04047
block|,
literal|0x03044
block|,
literal|0x02007
block|,
literal|0x01004
block|,
literal|0x00001
block|}
decl_stmt|,
name|rtl8812au_rf1_vals8_pa_a0_a5
index|[]
init|=
block|{
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00040
block|,
literal|0x001c5
block|,
literal|0x081c5
block|,
literal|0x101c5
block|,
literal|0x20174
block|,
literal|0x28174
block|,
literal|0x30174
block|,
literal|0x40185
block|,
literal|0x48185
block|,
literal|0x50185
block|,
literal|0x00000
block|,
literal|0x1712a
block|,
literal|0x00010
block|,
literal|0x05b8b
block|,
literal|0x0db8b
block|,
literal|0x15b8b
block|,
literal|0x1db8b
block|,
literal|0x262db
block|,
literal|0x2e2db
block|,
literal|0x362db
block|,
literal|0x3e2db
block|,
literal|0x4553b
block|,
literal|0x4d53b
block|,
literal|0x5553b
block|,
literal|0x5d53b
block|,
literal|0x00000
block|,
literal|0x00008
block|,
literal|0x002dc
block|,
literal|0x00524
block|,
literal|0x00902
block|}
decl_stmt|,
name|rtl8812au_rf1_vals10_pa_g0_a0
index|[]
init|=
block|{
literal|0xeac43
block|,
literal|0x38f47
block|,
literal|0x31157
block|,
literal|0x1c4ac
block|,
literal|0x931d1
block|}
decl_stmt|,
name|rtl8812au_rf1_vals10_pa_a5
index|[]
init|=
block|{
literal|0xeac43
block|,
literal|0x38f47
block|,
literal|0x31157
block|,
literal|0x1c4ac
block|,
literal|0x931d2
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_rf_prog
name|rtl8812au_rf
index|[]
init|=
block|{
comment|/* RF chain 0. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs0
argument_list|)
block|,
name|rtl8812au_rf0_regs0
block|,
name|rtl8812au_rf0_vals0
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* External 2GHz LNA, type 0 or 5. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs1
argument_list|)
block|,
name|rtl8812au_rf0_regs1
block|,
name|rtl8812au_rf0_vals1_lna_g0_g5
block|,
block|{
name|R12A_COND_GLNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
name|R12A_COND_GLNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x5
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs1
argument_list|)
block|,
name|rtl8812au_rf0_regs1
block|,
name|rtl8812au_rf0_vals1
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
comment|/* External 5GHz LNA, type 0. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs2
argument_list|)
block|,
name|rtl8812au_rf0_regs2
block|,
name|rtl8812au_rf0_vals2_lna_a0
block|,
block|{
name|R12A_COND_ALNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs2
argument_list|)
block|,
name|rtl8812au_rf0_regs2
block|,
name|rtl8812au_rf0_vals2
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs3
argument_list|)
block|,
name|rtl8812au_rf0_regs3
block|,
name|rtl8812au_rf0_vals3
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* External 2GHz LNA, type 0 or 5. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs4
argument_list|)
block|,
name|rtl8812au_rf0_regs4
block|,
name|rtl8812au_rf0_vals4_lna_g0_g5
block|,
block|{
name|R12A_COND_GLNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
name|R12A_COND_GLNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x5
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs4
argument_list|)
block|,
name|rtl8812au_rf0_regs4
block|,
name|rtl8812au_rf0_vals4
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
comment|/* External 2GHz PA, type 0. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs5
argument_list|)
block|,
name|rtl8812au_rf0_regs5
block|,
name|rtl8812au_rf0_vals5_pa_g0
block|,
block|{
name|R12A_COND_GPA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs5
argument_list|)
block|,
name|rtl8812au_rf0_regs5
block|,
name|rtl8812au_rf0_vals5
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs6
argument_list|)
block|,
name|rtl8812au_rf0_regs6
block|,
name|rtl8812au_rf0_vals6
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* External 5GHz PA, type 0. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs7
argument_list|)
block|,
name|rtl8812au_rf0_regs7
block|,
name|rtl8812au_rf0_vals7_pa_a0
block|,
block|{
name|R12A_COND_APA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* External 5GHz PA, type 5. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs7
argument_list|)
block|,
name|rtl8812au_rf0_regs7
block|,
name|rtl8812au_rf0_vals7_pa_a5
block|,
block|{
name|R12A_COND_APA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x5
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs7
argument_list|)
block|,
name|rtl8812au_rf0_regs7
block|,
name|rtl8812au_rf0_vals7
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|}
block|,
comment|/* External 5GHz PA, type 0 or 5. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs8
argument_list|)
block|,
name|rtl8812au_rf0_regs8
block|,
name|rtl8812au_rf0_vals8_pa_a0_a5
block|,
block|{
name|R12A_COND_APA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
name|R12A_COND_APA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x5
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs8
argument_list|)
block|,
name|rtl8812au_rf0_regs8
block|,
name|rtl8812au_rf0_vals8
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs9
argument_list|)
block|,
name|rtl8812au_rf0_regs9
block|,
name|rtl8812au_rf0_vals9
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* External 5GHz PA, type 0. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs10
argument_list|)
block|,
name|rtl8812au_rf0_regs10
block|,
name|rtl8812au_rf0_vals10_pa_a0
block|,
block|{
name|R12A_COND_APA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* External 5GHz PA, type 5. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs10
argument_list|)
block|,
name|rtl8812au_rf0_regs10
block|,
name|rtl8812au_rf0_vals10_pa_a5
block|,
block|{
name|R12A_COND_APA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x5
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs10
argument_list|)
block|,
name|rtl8812au_rf0_regs10
block|,
name|rtl8812au_rf0_vals10
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs11
argument_list|)
block|,
name|rtl8812au_rf0_regs11
block|,
name|rtl8812au_rf0_vals11
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
block|{
literal|0
block|,
name|NULL
block|,
name|NULL
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* RF path 2. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf1_regs0
argument_list|)
block|,
name|rtl8812au_rf1_regs0
block|,
name|rtl8812au_rf1_vals0
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* rtl8812au_rf[1] */
comment|/* External 2GHz LNA, type 0 or 5. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs1
argument_list|)
block|,
name|rtl8812au_rf0_regs1
block|,
name|rtl8812au_rf0_vals1_lna_g0_g5
block|,
block|{
name|R12A_COND_GLNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
name|R12A_COND_GLNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x5
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs1
argument_list|)
block|,
name|rtl8812au_rf0_regs1
block|,
name|rtl8812au_rf0_vals1
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
comment|/* rtl8812au_rf[2] */
comment|/* External 5GHz LNA, type 0. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs2
argument_list|)
block|,
name|rtl8812au_rf0_regs2
block|,
name|rtl8812au_rf0_vals2_lna_a0
block|,
block|{
name|R12A_COND_ALNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs2
argument_list|)
block|,
name|rtl8812au_rf0_regs2
block|,
name|rtl8812au_rf0_vals2
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8812au_rf1_regs3
argument_list|)
block|,
name|rtl8812au_rf1_regs3
block|,
name|rtl8812au_rf1_vals3
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* rtl8812au_rf[4] */
comment|/* External 2GHz LNA, type 0 or 5. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs4
argument_list|)
block|,
name|rtl8812au_rf0_regs4
block|,
name|rtl8812au_rf0_vals4_lna_g0_g5
block|,
block|{
name|R12A_COND_GLNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
name|R12A_COND_GLNA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x5
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs4
argument_list|)
block|,
name|rtl8812au_rf0_regs4
block|,
name|rtl8812au_rf0_vals4
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
comment|/* rtl8812au_rf[5] */
comment|/* External 2GHz PA, type 0. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs5
argument_list|)
block|,
name|rtl8812au_rf0_regs5
block|,
name|rtl8812au_rf0_vals5_pa_g0
block|,
block|{
name|R12A_COND_GPA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs5
argument_list|)
block|,
name|rtl8812au_rf0_regs5
block|,
name|rtl8812au_rf0_vals5
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs6
argument_list|)
block|,
name|rtl8812au_rf0_regs6
block|,
name|rtl8812au_rf1_vals6
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* External 5GHz PA, type 0. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs7
argument_list|)
block|,
name|rtl8812au_rf0_regs7
block|,
name|rtl8812au_rf0_vals7_pa_a0
block|,
block|{
name|R12A_COND_APA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* External 5GHz PA, type 5. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs7
argument_list|)
block|,
name|rtl8812au_rf0_regs7
block|,
name|rtl8812au_rf1_vals7_pa_a5
block|,
block|{
name|R12A_COND_APA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x5
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs7
argument_list|)
block|,
name|rtl8812au_rf0_regs7
block|,
name|rtl8812au_rf0_vals7
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|}
block|,
comment|/* External 5GHz PA, type 0 or 5. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs8
argument_list|)
block|,
name|rtl8812au_rf0_regs8
block|,
name|rtl8812au_rf1_vals8_pa_a0_a5
block|,
block|{
name|R12A_COND_APA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
name|R12A_COND_APA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x5
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs8
argument_list|)
block|,
name|rtl8812au_rf0_regs8
block|,
name|rtl8812au_rf0_vals8
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs9
argument_list|)
operator|-
literal|1
block|,
name|rtl8812au_rf0_regs9
block|,
name|rtl8812au_rf0_vals9
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* External 2GHz or 5GHz PA, type 0. */
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs10
argument_list|)
block|,
name|rtl8812au_rf0_regs10
block|,
name|rtl8812au_rf1_vals10_pa_g0_a0
block|,
block|{
name|R12A_COND_GPA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
name|R12A_COND_APA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x0
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* External 5GHz PA, type 5. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs10
argument_list|)
block|,
name|rtl8812au_rf0_regs10
block|,
name|rtl8812au_rf1_vals10_pa_a5
block|,
block|{
name|R12A_COND_APA
operator||
name|R12A_COND_TYPE
argument_list|(
literal|0x5
argument_list|)
block|,
literal|0
block|}
block|,
comment|/* Others. */
operator|&
operator|(
specifier|const
expr|struct
name|rtwn_rf_prog
operator|)
block|{
name|nitems
argument_list|(
name|rtl8812au_rf0_regs10
argument_list|)
block|,
name|rtl8812au_rf0_regs10
block|,
name|rtl8812au_rf0_vals10
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
block|}
block|,
block|{
literal|1
block|,
name|rtl8812au_rf0_regs11
block|,
name|rtl8812au_rf0_vals11
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
block|{
literal|0
block|,
name|NULL
block|,
name|NULL
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Registers to save before IQ calibration.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint16_t
name|r12a_iq_bb_regs
index|[]
init|=
block|{
literal|0x520
block|,
literal|0x550
block|,
literal|0x808
block|,
literal|0xa04
block|,
literal|0x90c
block|,
literal|0xc00
block|,
literal|0xe00
block|,
literal|0x838
block|,
literal|0x82c
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint16_t
name|r12a_iq_afe_regs
index|[]
init|=
block|{
literal|0xc5c
block|,
literal|0xc60
block|,
literal|0xc64
block|,
literal|0xc68
block|,
literal|0xcb0
block|,
literal|0xcb4
block|,
literal|0xe5c
block|,
literal|0xe60
block|,
literal|0xe64
block|,
literal|0xe68
block|,
literal|0xeb0
block|,
literal|0xeb4
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint8_t
name|r12a_iq_rf_regs
index|[]
init|=
block|{
literal|0x65
block|,
literal|0x8f
block|,
literal|0x0
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* R12A_PRIV_H */
end_comment

end_unit

