begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2017 Kevin Lo<kevlo@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|R92E_PRIV_H
end_ifndef

begin_define
define|#
directive|define
name|R92E_PRIV_H
end_define

begin_comment
comment|/*  * MAC initialization values.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_mac_prog
name|rtl8192eu_mac
index|[]
init|=
block|{
block|{
literal|0x011
block|,
literal|0xeb
block|}
block|,
block|{
literal|0x012
block|,
literal|0x07
block|}
block|,
block|{
literal|0x014
block|,
literal|0x75
block|}
block|,
block|{
literal|0x303
block|,
literal|0xa7
block|}
block|,
block|{
literal|0x428
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x429
block|,
literal|0x10
block|}
block|,
block|{
literal|0x430
block|,
literal|0x00
block|}
block|,
block|{
literal|0x431
block|,
literal|0x00
block|}
block|,
block|{
literal|0x432
block|,
literal|0x00
block|}
block|,
block|{
literal|0x433
block|,
literal|0x01
block|}
block|,
block|{
literal|0x434
block|,
literal|0x04
block|}
block|,
block|{
literal|0x435
block|,
literal|0x05
block|}
block|,
block|{
literal|0x436
block|,
literal|0x07
block|}
block|,
block|{
literal|0x437
block|,
literal|0x08
block|}
block|,
block|{
literal|0x43c
block|,
literal|0x04
block|}
block|,
block|{
literal|0x43d
block|,
literal|0x05
block|}
block|,
block|{
literal|0x43e
block|,
literal|0x07
block|}
block|,
block|{
literal|0x43f
block|,
literal|0x08
block|}
block|,
block|{
literal|0x440
block|,
literal|0x5d
block|}
block|,
block|{
literal|0x441
block|,
literal|0x01
block|}
block|,
block|{
literal|0x442
block|,
literal|0x00
block|}
block|,
block|{
literal|0x444
block|,
literal|0x10
block|}
block|,
block|{
literal|0x445
block|,
literal|0x00
block|}
block|,
block|{
literal|0x446
block|,
literal|0x00
block|}
block|,
block|{
literal|0x447
block|,
literal|0x00
block|}
block|,
block|{
literal|0x448
block|,
literal|0x00
block|}
block|,
block|{
literal|0x449
block|,
literal|0xf0
block|}
block|,
block|{
literal|0x44a
block|,
literal|0x0f
block|}
block|,
block|{
literal|0x44b
block|,
literal|0x3e
block|}
block|,
block|{
literal|0x44c
block|,
literal|0x10
block|}
block|,
block|{
literal|0x44d
block|,
literal|0x00
block|}
block|,
block|{
literal|0x44e
block|,
literal|0x00
block|}
block|,
block|{
literal|0x44f
block|,
literal|0x00
block|}
block|,
block|{
literal|0x450
block|,
literal|0x00
block|}
block|,
block|{
literal|0x451
block|,
literal|0xf0
block|}
block|,
block|{
literal|0x452
block|,
literal|0x0f
block|}
block|,
block|{
literal|0x453
block|,
literal|0x00
block|}
block|,
block|{
literal|0x456
block|,
literal|0x5e
block|}
block|,
block|{
literal|0x460
block|,
literal|0x66
block|}
block|,
block|{
literal|0x461
block|,
literal|0x66
block|}
block|,
block|{
literal|0x4c8
block|,
literal|0xff
block|}
block|,
block|{
literal|0x4c9
block|,
literal|0x08
block|}
block|,
block|{
literal|0x4cc
block|,
literal|0xff
block|}
block|,
block|{
literal|0x4cd
block|,
literal|0xff
block|}
block|,
block|{
literal|0x4ce
block|,
literal|0x01
block|}
block|,
block|{
literal|0x500
block|,
literal|0x26
block|}
block|,
block|{
literal|0x501
block|,
literal|0xa2
block|}
block|,
block|{
literal|0x502
block|,
literal|0x2f
block|}
block|,
block|{
literal|0x503
block|,
literal|0x00
block|}
block|,
block|{
literal|0x504
block|,
literal|0x28
block|}
block|,
block|{
literal|0x505
block|,
literal|0xa3
block|}
block|,
block|{
literal|0x506
block|,
literal|0x5e
block|}
block|,
block|{
literal|0x507
block|,
literal|0x00
block|}
block|,
block|{
literal|0x508
block|,
literal|0x2b
block|}
block|,
block|{
literal|0x509
block|,
literal|0xa4
block|}
block|,
block|{
literal|0x50a
block|,
literal|0x5e
block|}
block|,
block|{
literal|0x50b
block|,
literal|0x00
block|}
block|,
block|{
literal|0x50c
block|,
literal|0x4f
block|}
block|,
block|{
literal|0x50d
block|,
literal|0xa4
block|}
block|,
block|{
literal|0x50e
block|,
literal|0x00
block|}
block|,
block|{
literal|0x50f
block|,
literal|0x00
block|}
block|,
block|{
literal|0x512
block|,
literal|0x1c
block|}
block|,
block|{
literal|0x514
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x516
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x525
block|,
literal|0x4f
block|}
block|,
block|{
literal|0x540
block|,
literal|0x12
block|}
block|,
block|{
literal|0x541
block|,
literal|0x64
block|}
block|,
block|{
literal|0x550
block|,
literal|0x10
block|}
block|,
block|{
literal|0x551
block|,
literal|0x10
block|}
block|,
block|{
literal|0x559
block|,
literal|0x02
block|}
block|,
block|{
literal|0x55c
block|,
literal|0x50
block|}
block|,
block|{
literal|0x55d
block|,
literal|0xff
block|}
block|,
block|{
literal|0x605
block|,
literal|0x30
block|}
block|,
block|{
literal|0x608
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x609
block|,
literal|0x2a
block|}
block|,
block|{
literal|0x620
block|,
literal|0xff
block|}
block|,
block|{
literal|0x621
block|,
literal|0xff
block|}
block|,
block|{
literal|0x622
block|,
literal|0xff
block|}
block|,
block|{
literal|0x623
block|,
literal|0xff
block|}
block|,
block|{
literal|0x624
block|,
literal|0xff
block|}
block|,
block|{
literal|0x625
block|,
literal|0xff
block|}
block|,
block|{
literal|0x626
block|,
literal|0xff
block|}
block|,
block|{
literal|0x627
block|,
literal|0xff
block|}
block|,
block|{
literal|0x638
block|,
literal|0x50
block|}
block|,
block|{
literal|0x63c
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x63d
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x63e
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x63f
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x640
block|,
literal|0x40
block|}
block|,
block|{
literal|0x642
block|,
literal|0x40
block|}
block|,
block|{
literal|0x643
block|,
literal|0x00
block|}
block|,
block|{
literal|0x652
block|,
literal|0xc8
block|}
block|,
block|{
literal|0x66e
block|,
literal|0x05
block|}
block|,
block|{
literal|0x700
block|,
literal|0x21
block|}
block|,
block|{
literal|0x701
block|,
literal|0x43
block|}
block|,
block|{
literal|0x702
block|,
literal|0x65
block|}
block|,
block|{
literal|0x703
block|,
literal|0x87
block|}
block|,
block|{
literal|0x708
block|,
literal|0x21
block|}
block|,
block|{
literal|0x709
block|,
literal|0x43
block|}
block|,
block|{
literal|0x70a
block|,
literal|0x65
block|}
block|,
block|{
literal|0x70b
block|,
literal|0x87
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Baseband initialization values.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint16_t
name|rtl8192eu_bb_regs
index|[]
init|=
block|{
literal|0x800
block|,
literal|0x804
block|,
literal|0x808
block|,
literal|0x80c
block|,
literal|0x810
block|,
literal|0x814
block|,
literal|0x818
block|,
literal|0x81c
block|,
literal|0x820
block|,
literal|0x824
block|,
literal|0x828
block|,
literal|0x82c
block|,
literal|0x830
block|,
literal|0x834
block|,
literal|0x838
block|,
literal|0x83c
block|,
literal|0x840
block|,
literal|0x844
block|,
literal|0x848
block|,
literal|0x84c
block|,
literal|0x850
block|,
literal|0x854
block|,
literal|0x858
block|,
literal|0x85c
block|,
literal|0x860
block|,
literal|0x864
block|,
literal|0x868
block|,
literal|0x86c
block|,
literal|0x870
block|,
literal|0x874
block|,
literal|0x878
block|,
literal|0x87c
block|,
literal|0x880
block|,
literal|0x884
block|,
literal|0x888
block|,
literal|0x88c
block|,
literal|0x890
block|,
literal|0x894
block|,
literal|0x898
block|,
literal|0x900
block|,
literal|0x904
block|,
literal|0x908
block|,
literal|0x90c
block|,
literal|0x910
block|,
literal|0x914
block|,
literal|0x918
block|,
literal|0x91c
block|,
literal|0x924
block|,
literal|0x928
block|,
literal|0x92c
block|,
literal|0x930
block|,
literal|0x934
block|,
literal|0x938
block|,
literal|0x93c
block|,
literal|0x940
block|,
literal|0x944
block|,
literal|0x94c
block|,
literal|0xa00
block|,
literal|0xa04
block|,
literal|0xa08
block|,
literal|0xa0c
block|,
literal|0xa10
block|,
literal|0xa14
block|,
literal|0xa18
block|,
literal|0xa1c
block|,
literal|0xa20
block|,
literal|0xa24
block|,
literal|0xa28
block|,
literal|0xa2c
block|,
literal|0xa70
block|,
literal|0xa74
block|,
literal|0xa78
block|,
literal|0xa7c
block|,
literal|0xa80
block|,
literal|0xb38
block|,
literal|0xc00
block|,
literal|0xc04
block|,
literal|0xc08
block|,
literal|0xc0c
block|,
literal|0xc10
block|,
literal|0xc14
block|,
literal|0xc18
block|,
literal|0xc1c
block|,
literal|0xc20
block|,
literal|0xc24
block|,
literal|0xc28
block|,
literal|0xc2c
block|,
literal|0xc30
block|,
literal|0xc34
block|,
literal|0xc38
block|,
literal|0xc3c
block|,
literal|0xc40
block|,
literal|0xc44
block|,
literal|0xc48
block|,
literal|0xc4c
block|,
literal|0xc50
block|,
literal|0xc54
block|,
literal|0xc58
block|,
literal|0xc5c
block|,
literal|0xc60
block|,
literal|0xc64
block|,
literal|0xc68
block|,
literal|0xc6c
block|,
literal|0xc70
block|,
literal|0xc74
block|,
literal|0xc78
block|,
literal|0xc7c
block|,
literal|0xc80
block|,
literal|0xc84
block|,
literal|0xc88
block|,
literal|0xc8c
block|,
literal|0xc90
block|,
literal|0xc94
block|,
literal|0xc98
block|,
literal|0xc9c
block|,
literal|0xca0
block|,
literal|0xca4
block|,
literal|0xca8
block|,
literal|0xcac
block|,
literal|0xcb0
block|,
literal|0xcb4
block|,
literal|0xcb8
block|,
literal|0xcbc
block|,
literal|0xcc0
block|,
literal|0xcc4
block|,
literal|0xcc8
block|,
literal|0xccc
block|,
literal|0xcd0
block|,
literal|0xcd4
block|,
literal|0xcd8
block|,
literal|0xcdc
block|,
literal|0xce0
block|,
literal|0xce4
block|,
literal|0xce8
block|,
literal|0xcec
block|,
literal|0xd00
block|,
literal|0xd04
block|,
literal|0xd08
block|,
literal|0xd0c
block|,
literal|0xd10
block|,
literal|0xd14
block|,
literal|0xd18
block|,
literal|0xd1c
block|,
literal|0xd2c
block|,
literal|0xd30
block|,
literal|0xd34
block|,
literal|0xd38
block|,
literal|0xd3c
block|,
literal|0xd40
block|,
literal|0xd44
block|,
literal|0xd48
block|,
literal|0xd4c
block|,
literal|0xd50
block|,
literal|0xd54
block|,
literal|0xd58
block|,
literal|0xd5c
block|,
literal|0xd60
block|,
literal|0xd64
block|,
literal|0xd68
block|,
literal|0xd6c
block|,
literal|0xd70
block|,
literal|0xd74
block|,
literal|0xd78
block|,
literal|0xd80
block|,
literal|0xd84
block|,
literal|0xd88
block|,
literal|0xe00
block|,
literal|0xe04
block|,
literal|0xe08
block|,
literal|0xe10
block|,
literal|0xe14
block|,
literal|0xe18
block|,
literal|0xe1c
block|,
literal|0xe28
block|,
literal|0xe30
block|,
literal|0xe34
block|,
literal|0xe38
block|,
literal|0xe3c
block|,
literal|0xe40
block|,
literal|0xe44
block|,
literal|0xe48
block|,
literal|0xe4c
block|,
literal|0xe50
block|,
literal|0xe54
block|,
literal|0xe58
block|,
literal|0xe5c
block|,
literal|0xe60
block|,
literal|0xe68
block|,
literal|0xe6c
block|,
literal|0xe70
block|,
literal|0xe74
block|,
literal|0xe78
block|,
literal|0xe7c
block|,
literal|0xe80
block|,
literal|0xe84
block|,
literal|0xe88
block|,
literal|0xe8c
block|,
literal|0xed0
block|,
literal|0xed4
block|,
literal|0xed8
block|,
literal|0xedc
block|,
literal|0xee0
block|,
literal|0xeec
block|,
literal|0xee4
block|,
literal|0xee8
block|,
literal|0xf14
block|,
literal|0xf4c
block|,
literal|0xf00
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8192eu_bb_vals
index|[]
init|=
block|{
literal|0x80040000
block|,
literal|0x00000003
block|,
literal|0x0000fc00
block|,
literal|0x0000000a
block|,
literal|0x10001331
block|,
literal|0x020c3d10
block|,
literal|0x02220385
block|,
literal|0x00000000
block|,
literal|0x01000100
block|,
literal|0x00390204
block|,
literal|0x01000100
block|,
literal|0x00390204
block|,
literal|0x32323232
block|,
literal|0x30303030
block|,
literal|0x30303030
block|,
literal|0x30303030
block|,
literal|0x00010000
block|,
literal|0x00010000
block|,
literal|0x28282828
block|,
literal|0x28282828
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x009a009a
block|,
literal|0x01000014
block|,
literal|0x66f60000
block|,
literal|0x061f0000
block|,
literal|0x30303030
block|,
literal|0x30303030
block|,
literal|0x00000000
block|,
literal|0x55004200
block|,
literal|0x08080808
block|,
literal|0x00000000
block|,
literal|0xb0000c1c
block|,
literal|0x00000001
block|,
literal|0x00000000
block|,
literal|0xcc0000c0
block|,
literal|0x00000800
block|,
literal|0xfffffffe
block|,
literal|0x40302010
block|,
literal|0x00000000
block|,
literal|0x00000023
block|,
literal|0x00000000
block|,
literal|0x81121313
block|,
literal|0x806c0001
block|,
literal|0x00000001
block|,
literal|0x00000000
block|,
literal|0x00010000
block|,
literal|0x00000001
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000008
block|,
literal|0x00d0c7c8
block|,
literal|0x81ff000c
block|,
literal|0x8c838300
block|,
literal|0x2e68120f
block|,
literal|0x95009b78
block|,
literal|0x1114d028
block|,
literal|0x00881117
block|,
literal|0x89140f00
block|,
literal|0x1a1b0000
block|,
literal|0x090e1317
block|,
literal|0x00000204
block|,
literal|0x00d30000
block|,
literal|0x101fff00
block|,
literal|0x00000007
block|,
literal|0x00000900
block|,
literal|0x225b0606
block|,
literal|0x218075b1
block|,
literal|0x00000000
block|,
literal|0x48071d40
block|,
literal|0x03a05633
block|,
literal|0x000000e4
block|,
literal|0x6c6c6c6c
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x69e9ac47
block|,
literal|0x469652af
block|,
literal|0x49795994
block|,
literal|0x0a97971c
block|,
literal|0x1f7c403f
block|,
literal|0x000100b7
block|,
literal|0xec020107
block|,
literal|0x007f037f
block|,
literal|0x00340020
block|,
literal|0x0080801f
block|,
literal|0x00000020
block|,
literal|0x00248492
block|,
literal|0x00000000
block|,
literal|0x7112848b
block|,
literal|0x47c00bff
block|,
literal|0x00000036
block|,
literal|0x00000600
block|,
literal|0x02013169
block|,
literal|0x0000001f
block|,
literal|0x00b91612
block|,
literal|0x40000100
block|,
literal|0x21f60000
block|,
literal|0x40000100
block|,
literal|0xa0e40000
block|,
literal|0x00121820
block|,
literal|0x00000000
block|,
literal|0x00121820
block|,
literal|0x00007f7f
block|,
literal|0x00000000
block|,
literal|0x000300a0
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x28000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x64b22427
block|,
literal|0x00766932
block|,
literal|0x00222222
block|,
literal|0x00040000
block|,
literal|0x77644302
block|,
literal|0x2f97d40c
block|,
literal|0x00080740
block|,
literal|0x00020403
block|,
literal|0x0000907f
block|,
literal|0x20010201
block|,
literal|0xa0633333
block|,
literal|0x3333bc43
block|,
literal|0x7a8f5b6b
block|,
literal|0x0000007f
block|,
literal|0xcc979975
block|,
literal|0x00000000
block|,
literal|0x80608000
block|,
literal|0x00000000
block|,
literal|0x00127353
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x6437140a
block|,
literal|0x00000000
block|,
literal|0x00000282
block|,
literal|0x30032064
block|,
literal|0x4653de68
block|,
literal|0x04518a3c
block|,
literal|0x00002101
block|,
literal|0x2a201c16
block|,
literal|0x1812362e
block|,
literal|0x322c2220
block|,
literal|0x000e3c24
block|,
literal|0x01081008
block|,
literal|0x00000800
block|,
literal|0xf0b50000
block|,
literal|0x30303030
block|,
literal|0x30303030
block|,
literal|0x03903030
block|,
literal|0x30303030
block|,
literal|0x30303030
block|,
literal|0x30303030
block|,
literal|0x30303030
block|,
literal|0x00000000
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x681604c2
block|,
literal|0x01007c00
block|,
literal|0x01004800
block|,
literal|0xfb000000
block|,
literal|0x000028d1
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x28160d05
block|,
literal|0x00000008
block|,
literal|0x0fc05656
block|,
literal|0x03c09696
block|,
literal|0x03c09696
block|,
literal|0x0c005656
block|,
literal|0x0c005656
block|,
literal|0x0c005656
block|,
literal|0x0c005656
block|,
literal|0x03c09696
block|,
literal|0x0c005656
block|,
literal|0x03c09696
block|,
literal|0x03c09696
block|,
literal|0x03c09696
block|,
literal|0x03c09696
block|,
literal|0x0000d6d6
block|,
literal|0x0000d6d6
block|,
literal|0x0fc01616
block|,
literal|0xb0000c1c
block|,
literal|0x00000001
block|,
literal|0x00000003
block|,
literal|0x00000000
block|,
literal|0x00000300
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_bb_prog
name|rtl8192eu_bb
index|[]
init|=
block|{
block|{
name|nitems
argument_list|(
name|rtl8192eu_bb_regs
argument_list|)
block|,
name|rtl8192eu_bb_regs
block|,
name|rtl8192eu_bb_vals
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8192eu_agc_vals
index|[]
init|=
block|{
literal|0xfb000001
block|,
literal|0xfb010001
block|,
literal|0xfb020001
block|,
literal|0xfb030001
block|,
literal|0xfb040001
block|,
literal|0xfb050001
block|,
literal|0xfa060001
block|,
literal|0xf9070001
block|,
literal|0xf8080001
block|,
literal|0xf7090001
block|,
literal|0xf60a0001
block|,
literal|0xf50b0001
block|,
literal|0xf40c0001
block|,
literal|0xf30d0001
block|,
literal|0xf20e0001
block|,
literal|0xf10f0001
block|,
literal|0xf0100001
block|,
literal|0xef110001
block|,
literal|0xee120001
block|,
literal|0xed130001
block|,
literal|0xec140001
block|,
literal|0xeb150001
block|,
literal|0xea160001
block|,
literal|0xe9170001
block|,
literal|0xe8180001
block|,
literal|0xe7190001
block|,
literal|0xc81a0001
block|,
literal|0xc71b0001
block|,
literal|0xc61c0001
block|,
literal|0x071d0001
block|,
literal|0x061e0001
block|,
literal|0x051f0001
block|,
literal|0x04200001
block|,
literal|0x03210001
block|,
literal|0xaa220001
block|,
literal|0xa9230001
block|,
literal|0xa8240001
block|,
literal|0xa7250001
block|,
literal|0xa6260001
block|,
literal|0x85270001
block|,
literal|0x84280001
block|,
literal|0x83290001
block|,
literal|0x252a0001
block|,
literal|0x242b0001
block|,
literal|0x232c0001
block|,
literal|0x222d0001
block|,
literal|0x672e0001
block|,
literal|0x662f0001
block|,
literal|0x65300001
block|,
literal|0x64310001
block|,
literal|0x63320001
block|,
literal|0x62330001
block|,
literal|0x61340001
block|,
literal|0x45350001
block|,
literal|0x44360001
block|,
literal|0x43370001
block|,
literal|0x42380001
block|,
literal|0x41390001
block|,
literal|0x403a0001
block|,
literal|0x403b0001
block|,
literal|0x403c0001
block|,
literal|0x403d0001
block|,
literal|0x403e0001
block|,
literal|0x403f0001
block|,
literal|0xfb400001
block|,
literal|0xfb410001
block|,
literal|0xfb420001
block|,
literal|0xfb430001
block|,
literal|0xfb440001
block|,
literal|0xfb450001
block|,
literal|0xfa460001
block|,
literal|0xf9470001
block|,
literal|0xf8480001
block|,
literal|0xf7490001
block|,
literal|0xf64a0001
block|,
literal|0xf54b0001
block|,
literal|0xf44c0001
block|,
literal|0xf34d0001
block|,
literal|0xf24e0001
block|,
literal|0xf14f0001
block|,
literal|0xf0500001
block|,
literal|0xef510001
block|,
literal|0xee520001
block|,
literal|0xed530001
block|,
literal|0xec540001
block|,
literal|0xeb550001
block|,
literal|0xea560001
block|,
literal|0xe9570001
block|,
literal|0xe8580001
block|,
literal|0xe7590001
block|,
literal|0xe65a0001
block|,
literal|0xe55b0001
block|,
literal|0xe45c0001
block|,
literal|0xe35d0001
block|,
literal|0xe25e0001
block|,
literal|0xe15f0001
block|,
literal|0x8a600001
block|,
literal|0x89610001
block|,
literal|0x88620001
block|,
literal|0x87630001
block|,
literal|0x86640001
block|,
literal|0x85650001
block|,
literal|0x84660001
block|,
literal|0x83670001
block|,
literal|0x82680001
block|,
literal|0x6b690001
block|,
literal|0x6a6a0001
block|,
literal|0x696b0001
block|,
literal|0x686c0001
block|,
literal|0x676d0001
block|,
literal|0x666e0001
block|,
literal|0x656f0001
block|,
literal|0x64700001
block|,
literal|0x63710001
block|,
literal|0x62720001
block|,
literal|0x61730001
block|,
literal|0x49740001
block|,
literal|0x48750001
block|,
literal|0x47760001
block|,
literal|0x46770001
block|,
literal|0x45780001
block|,
literal|0x44790001
block|,
literal|0x437a0001
block|,
literal|0x427b0001
block|,
literal|0x417c0001
block|,
literal|0x407d0001
block|,
literal|0x407e0001
block|,
literal|0x407f0001
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_agc_prog
name|rtl8192eu_agc
index|[]
init|=
block|{
block|{
name|nitems
argument_list|(
name|rtl8192eu_agc_vals
argument_list|)
block|,
name|rtl8192eu_agc_vals
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RF initialization values.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint8_t
name|rtl8192eu_rf0_regs
index|[]
init|=
block|{
literal|0x7f
block|,
literal|0x81
block|,
literal|0x00
block|,
literal|0x08
block|,
literal|0x18
block|,
literal|0x19
block|,
literal|0x1b
block|,
literal|0x1e
block|,
literal|0x1f
block|,
literal|0x2f
block|,
literal|0x3f
block|,
literal|0x42
block|,
literal|0x57
block|,
literal|0x58
block|,
literal|0x67
block|,
literal|0x83
block|,
literal|0xb0
block|,
literal|0xb1
block|,
literal|0xb2
block|,
literal|0xb4
block|,
literal|0xb5
block|,
literal|0xb6
block|,
literal|0xb7
block|,
literal|0xb8
block|,
literal|0xb9
block|,
literal|0xba
block|,
literal|0xbb
block|,
literal|0xbf
block|,
literal|0xc2
block|,
literal|0xc3
block|,
literal|0xc4
block|,
literal|0xc5
block|,
literal|0xc6
block|,
literal|0xc7
block|,
literal|0xc8
block|,
literal|0xc9
block|,
literal|0xca
block|,
literal|0xdf
block|,
literal|0xef
block|,
literal|0x51
block|,
literal|0x52
block|,
literal|0x53
block|,
literal|0x56
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x18
block|,
literal|0x5a
block|,
literal|0x19
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x00
block|,
literal|0x84
block|,
literal|0x86
block|,
literal|0x87
block|,
literal|0x8e
block|,
literal|0x8f
block|,
literal|0xef
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0xef
block|,
literal|0x18
block|,
literal|0x1e
block|,
literal|0x1f
block|,
literal|0x00
block|}
decl_stmt|,
name|rtl8192eu_rf1_regs
index|[]
init|=
block|{
literal|0x7f
block|,
literal|0x81
block|,
literal|0x00
block|,
literal|0x08
block|,
literal|0x18
block|,
literal|0x19
block|,
literal|0x1b
block|,
literal|0x1e
block|,
literal|0x1f
block|,
literal|0x2f
block|,
literal|0x3f
block|,
literal|0x42
block|,
literal|0x57
block|,
literal|0x58
block|,
literal|0x67
block|,
literal|0x7f
block|,
literal|0x81
block|,
literal|0x83
block|,
literal|0xdf
block|,
literal|0xef
block|,
literal|0x51
block|,
literal|0x52
block|,
literal|0x53
block|,
literal|0x56
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x18
block|,
literal|0x5a
block|,
literal|0x19
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x00
block|,
literal|0x84
block|,
literal|0x86
block|,
literal|0x87
block|,
literal|0x8e
block|,
literal|0x8f
block|,
literal|0xef
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0xef
block|,
literal|0x00
block|,
literal|0x1e
block|,
literal|0x1f
block|,
literal|0x00
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8192eu_rf0_vals
index|[]
init|=
block|{
literal|0x00082
block|,
literal|0x3fc00
block|,
literal|0x30000
block|,
literal|0x08400
block|,
literal|0x00407
block|,
literal|0x00012
block|,
literal|0x00064
block|,
literal|0x80009
block|,
literal|0x00880
block|,
literal|0x1a060
block|,
literal|0x00000
block|,
literal|0x060c0
block|,
literal|0xd0000
block|,
literal|0xbe180
block|,
literal|0x01552
block|,
literal|0x00000
block|,
literal|0xff9f1
block|,
literal|0x55418
block|,
literal|0x8cc00
block|,
literal|0x43083
block|,
literal|0x08166
block|,
literal|0x0803e
block|,
literal|0x1c69f
block|,
literal|0x0407f
block|,
literal|0x80001
block|,
literal|0x40001
block|,
literal|0x00400
block|,
literal|0xc0000
block|,
literal|0x02400
block|,
literal|0x00009
block|,
literal|0x40c91
block|,
literal|0x99999
block|,
literal|0x000a3
block|,
literal|0x88820
block|,
literal|0x76c06
block|,
literal|0x00000
block|,
literal|0x80000
block|,
literal|0x00180
block|,
literal|0x001a0
block|,
literal|0x69545
block|,
literal|0x7e45e
block|,
literal|0x00071
block|,
literal|0x51ff3
block|,
literal|0x000a8
block|,
literal|0x001e2
block|,
literal|0x002a8
block|,
literal|0x01c24
block|,
literal|0x09c24
block|,
literal|0x11c24
block|,
literal|0x19c24
block|,
literal|0x00c07
block|,
literal|0x48000
block|,
literal|0x739d0
block|,
literal|0x0add7
block|,
literal|0x09dd4
block|,
literal|0x08dd1
block|,
literal|0x07dce
block|,
literal|0x06dcb
block|,
literal|0x05dc8
block|,
literal|0x04dc5
block|,
literal|0x034cc
block|,
literal|0x0244f
block|,
literal|0x0144c
block|,
literal|0x00014
block|,
literal|0x30159
block|,
literal|0x68180
block|,
literal|0x0014e
block|,
literal|0x48e00
block|,
literal|0x65540
block|,
literal|0x88000
block|,
literal|0x020a0
block|,
literal|0xf02b0
block|,
literal|0xef7b0
block|,
literal|0xd4fb0
block|,
literal|0xcf060
block|,
literal|0xb0090
block|,
literal|0xa0080
block|,
literal|0x90080
block|,
literal|0x8f780
block|,
literal|0x78730
block|,
literal|0x60fb0
block|,
literal|0x5ffa0
block|,
literal|0x40620
block|,
literal|0x37090
block|,
literal|0x20080
block|,
literal|0x1f060
block|,
literal|0x0ffb0
block|,
literal|0x000a0
block|,
literal|0x0fc07
block|,
literal|0x00001
block|,
literal|0x80000
block|,
literal|0x33e70
block|}
decl_stmt|,
name|rtl8192eu_rf1_vals
index|[]
init|=
block|{
literal|0x00082
block|,
literal|0x3fc00
block|,
literal|0x30000
block|,
literal|0x08400
block|,
literal|0x00407
block|,
literal|0x00012
block|,
literal|0x00064
block|,
literal|0x80009
block|,
literal|0x00880
block|,
literal|0x1a060
block|,
literal|0x00000
block|,
literal|0x060c0
block|,
literal|0xd0000
block|,
literal|0xbe180
block|,
literal|0x01552
block|,
literal|0x00082
block|,
literal|0x3f000
block|,
literal|0x00000
block|,
literal|0x00180
block|,
literal|0x001a0
block|,
literal|0x69545
block|,
literal|0x7e42e
block|,
literal|0x00071
block|,
literal|0x51ff3
block|,
literal|0x000a8
block|,
literal|0x001e0
block|,
literal|0x002a8
block|,
literal|0x01ca8
block|,
literal|0x09c24
block|,
literal|0x11c24
block|,
literal|0x19c24
block|,
literal|0x00c07
block|,
literal|0x48000
block|,
literal|0x739d0
block|,
literal|0x0add7
block|,
literal|0x09dd4
block|,
literal|0x08dd1
block|,
literal|0x07dce
block|,
literal|0x06dcb
block|,
literal|0x05dc8
block|,
literal|0x04dc5
block|,
literal|0x034cc
block|,
literal|0x0244f
block|,
literal|0x0144c
block|,
literal|0x00014
block|,
literal|0x30159
block|,
literal|0x68180
block|,
literal|0x000ce
block|,
literal|0x48a00
block|,
literal|0x65540
block|,
literal|0x88000
block|,
literal|0x020a0
block|,
literal|0xf02b0
block|,
literal|0xef7b0
block|,
literal|0xd4fb0
block|,
literal|0xcf060
block|,
literal|0xb0090
block|,
literal|0xa0080
block|,
literal|0x90080
block|,
literal|0x8f780
block|,
literal|0x78730
block|,
literal|0x60fb0
block|,
literal|0x5ffa0
block|,
literal|0x40620
block|,
literal|0x37090
block|,
literal|0x20080
block|,
literal|0x1f060
block|,
literal|0x0ffb0
block|,
literal|0x000a0
block|,
literal|0x10159
block|,
literal|0x00001
block|,
literal|0x80000
block|,
literal|0x33e70
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|rtwn_rf_prog
name|rtl8192eu_rf
index|[]
init|=
block|{
comment|/* RF chain 0. */
block|{
name|nitems
argument_list|(
name|rtl8192eu_rf0_regs
argument_list|)
block|,
name|rtl8192eu_rf0_regs
block|,
name|rtl8192eu_rf0_vals
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
block|{
literal|0
block|,
name|NULL
block|,
name|NULL
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
comment|/* RF chain 1. */
block|{
name|nitems
argument_list|(
name|rtl8192eu_rf1_regs
argument_list|)
block|,
name|rtl8192eu_rf1_regs
block|,
name|rtl8192eu_rf1_vals
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|,
block|{
literal|0
block|,
name|NULL
block|,
name|NULL
block|,
block|{
literal|0
block|}
block|,
name|NULL
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* R92E_PRIV_H */
end_comment

end_unit

