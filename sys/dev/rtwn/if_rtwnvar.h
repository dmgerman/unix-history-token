begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2010 Damien Bergamini<damien.bergamini@free.fr>  * Copyright (c) 2015-2016 Andriy Voskoboinyk<avos@FreeBSD.org>  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  *  * $OpenBSD: if_urtwnreg.h,v 1.3 2010/11/16 18:02:59 damien Exp $  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|IF_RTWNVAR_H
end_ifndef

begin_define
define|#
directive|define
name|IF_RTWNVAR_H
end_define

begin_include
include|#
directive|include
file|"opt_rtwn.h"
end_include

begin_define
define|#
directive|define
name|RTWN_TX_DESC_SIZE
value|64
end_define

begin_define
define|#
directive|define
name|RTWN_RXBUFSZ
value|(8 * 1024)
end_define

begin_define
define|#
directive|define
name|RTWN_TXBUFSZ
value|(RTWN_TX_DESC_SIZE + IEEE80211_MAX_LEN)
end_define

begin_define
define|#
directive|define
name|RTWN_BCN_MAX_SIZE
value|512
end_define

begin_define
define|#
directive|define
name|RTWN_CAM_ENTRY_LIMIT
value|64
end_define

begin_define
define|#
directive|define
name|RTWN_MACID_BC
value|1
end_define

begin_comment
comment|/* Broadcast. */
end_comment

begin_define
define|#
directive|define
name|RTWN_MACID_UNDEFINED
value|0x7fff
end_define

begin_define
define|#
directive|define
name|RTWN_MACID_VALID
value|0x8000
end_define

begin_define
define|#
directive|define
name|RTWN_MACID_LIMIT
value|128
end_define

begin_define
define|#
directive|define
name|RTWN_TX_TIMEOUT
value|5000
end_define

begin_comment
comment|/* ms */
end_comment

begin_define
define|#
directive|define
name|RTWN_MAX_EPOUT
value|4
end_define

begin_define
define|#
directive|define
name|RTWN_PORT_COUNT
value|2
end_define

begin_define
define|#
directive|define
name|RTWN_LED_LINK
value|0
end_define

begin_define
define|#
directive|define
name|RTWN_LED_DATA
value|1
end_define

begin_struct
struct|struct
name|rtwn_rx_radiotap_header
block|{
name|struct
name|ieee80211_radiotap_header
name|wr_ihdr
decl_stmt|;
name|uint64_t
name|wr_tsft
decl_stmt|;
name|uint8_t
name|wr_flags
decl_stmt|;
name|uint8_t
name|wr_rate
decl_stmt|;
name|uint16_t
name|wr_chan_freq
decl_stmt|;
name|uint16_t
name|wr_chan_flags
decl_stmt|;
name|int8_t
name|wr_dbm_antsignal
decl_stmt|;
name|int8_t
name|wr_dbm_antnoise
decl_stmt|;
block|}
name|__packed
name|__aligned
argument_list|(
literal|8
argument_list|)
struct|;
end_struct

begin_define
define|#
directive|define
name|RTWN_RX_RADIOTAP_PRESENT
define|\
value|(1<< IEEE80211_RADIOTAP_TSFT |			\ 	 1<< IEEE80211_RADIOTAP_FLAGS |		\ 	 1<< IEEE80211_RADIOTAP_RATE |			\ 	 1<< IEEE80211_RADIOTAP_CHANNEL |		\ 	 1<< IEEE80211_RADIOTAP_DBM_ANTSIGNAL |	\ 	 1<< IEEE80211_RADIOTAP_DBM_ANTNOISE)
end_define

begin_struct
struct|struct
name|rtwn_tx_radiotap_header
block|{
name|struct
name|ieee80211_radiotap_header
name|wt_ihdr
decl_stmt|;
name|uint8_t
name|wt_flags
decl_stmt|;
name|uint16_t
name|wt_chan_freq
decl_stmt|;
name|uint16_t
name|wt_chan_flags
decl_stmt|;
block|}
name|__packed
name|__aligned
argument_list|(
literal|8
argument_list|)
struct|;
end_struct

begin_define
define|#
directive|define
name|RTWN_TX_RADIOTAP_PRESENT
define|\
value|(1<< IEEE80211_RADIOTAP_FLAGS |		\ 	 1<< IEEE80211_RADIOTAP_CHANNEL)
end_define

begin_struct
struct|struct
name|rtwn_tx_buf
block|{
name|uint8_t
name|txd
index|[
name|RTWN_TX_DESC_SIZE
index|]
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|aligned
argument_list|(
literal|4
argument_list|)
operator|)
argument_list|)
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|rtwn_softc
struct_decl|;
end_struct_decl

begin_union
union|union
name|sec_param
block|{
name|struct
name|ieee80211_key
name|key
decl_stmt|;
name|int
name|macid
decl_stmt|;
block|}
union|;
end_union

begin_define
define|#
directive|define
name|CMD_FUNC_PROTO
value|void (*func)(struct rtwn_softc *, \ 				    union sec_param *)
end_define

begin_struct
struct|struct
name|rtwn_cmdq
block|{
name|union
name|sec_param
name|data
decl_stmt|;
name|CMD_FUNC_PROTO
expr_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|RTWN_CMDQ_SIZE
value|16
end_define

begin_struct
struct|struct
name|rtwn_node
block|{
name|struct
name|ieee80211_node
name|ni
decl_stmt|;
comment|/* must be the first */
name|int
name|id
decl_stmt|;
name|int8_t
name|last_rssi
decl_stmt|;
name|int
name|avg_pwdb
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|RTWN_NODE
parameter_list|(
name|ni
parameter_list|)
value|((struct rtwn_node *)(ni))
end_define

begin_struct
struct|struct
name|rtwn_vap
block|{
name|struct
name|ieee80211vap
name|vap
decl_stmt|;
name|int
name|id
decl_stmt|;
define|#
directive|define
name|RTWN_VAP_ID_INVALID
value|-1
name|int
name|curr_mode
decl_stmt|;
name|struct
name|rtwn_tx_buf
name|bcn_desc
decl_stmt|;
name|struct
name|mbuf
modifier|*
name|bcn_mbuf
decl_stmt|;
name|struct
name|callout
name|tsf_sync_adhoc
decl_stmt|;
name|struct
name|task
name|tsf_sync_adhoc_task
decl_stmt|;
specifier|const
name|struct
name|ieee80211_key
modifier|*
name|keys
index|[
name|IEEE80211_WEP_NKID
index|]
decl_stmt|;
name|int
function_decl|(
modifier|*
name|newstate
function_decl|)
parameter_list|(
name|struct
name|ieee80211vap
modifier|*
parameter_list|,
name|enum
name|ieee80211_state
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|recv_mgmt
function_decl|)
parameter_list|(
name|struct
name|ieee80211_node
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|struct
name|ieee80211_rx_stats
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|RTWN_VAP
parameter_list|(
name|vap
parameter_list|)
value|((struct rtwn_vap *)(vap))
end_define

begin_comment
comment|/*  * Rx data types.  */
end_comment

begin_enum
enum|enum
block|{
name|RTWN_RX_DATA
block|,
name|RTWN_RX_TX_REPORT
block|,
name|RTWN_RX_OTHER
block|}
enum|;
end_enum

begin_comment
comment|/*  * Firmware reset reasons.  */
end_comment

begin_enum
enum|enum
block|{
name|RTWN_FW_RESET_DOWNLOAD
block|,
name|RTWN_FW_RESET_CHECKSUM
block|,
name|RTWN_FW_RESET_SHUTDOWN
block|}
enum|;
end_enum

begin_comment
comment|/*  * Rate control algorithm selection.  */
end_comment

begin_enum
enum|enum
block|{
name|RTWN_RATECTL_NONE
block|,
name|RTWN_RATECTL_NET80211
block|,
name|RTWN_RATECTL_FW
block|,
name|RTWN_RATECTL_MAX
block|}
enum|;
end_enum

begin_comment
comment|/*  * Control h/w crypto usage.  */
end_comment

begin_enum
enum|enum
block|{
name|RTWN_CRYPTO_SW
block|,
name|RTWN_CRYPTO_PAIR
block|,
name|RTWN_CRYPTO_FULL
block|,
name|RTWN_CRYPTO_MAX
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|rtwn_softc
block|{
name|struct
name|ieee80211com
name|sc_ic
decl_stmt|;
name|struct
name|mbufq
name|sc_snd
decl_stmt|;
name|device_t
name|sc_dev
decl_stmt|;
if|#
directive|if
literal|1
name|int
name|sc_ht40
decl_stmt|;
endif|#
directive|endif
name|uint32_t
name|sc_debug
decl_stmt|;
name|int
name|sc_hwcrypto
decl_stmt|;
name|int
name|sc_ratectl_sysctl
decl_stmt|;
name|int
name|sc_ratectl
decl_stmt|;
name|uint8_t
name|sc_detached
decl_stmt|;
name|uint8_t
name|sc_flags
decl_stmt|;
comment|/* Device flags */
define|#
directive|define
name|RTWN_FLAG_CCK_HIPWR
value|0x01
define|#
directive|define
name|RTWN_FLAG_EXT_HDR
value|0x02
define|#
directive|define
name|RTWN_FLAG_CAM_FIXED
value|0x04
comment|/* Driver state */
define|#
directive|define
name|RTWN_STARTED
value|0x08
define|#
directive|define
name|RTWN_RUNNING
value|0x10
define|#
directive|define
name|RTWN_FW_LOADED
value|0x20
define|#
directive|define
name|RTWN_TEMP_MEASURED
value|0x40
define|#
directive|define
name|RTWN_RCR_LOCKED
value|0x80
define|#
directive|define
name|RTWN_CHIP_HAS_BCNQ1
parameter_list|(
name|_sc
parameter_list|)
define|\
value|((_sc)->bcn_status_reg[0] != (_sc)->bcn_status_reg[1])
name|void
modifier|*
name|sc_priv
decl_stmt|;
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|int
name|sc_ant
decl_stmt|;
name|int8_t
name|last_rssi
decl_stmt|;
name|uint8_t
name|thcal_temp
decl_stmt|;
name|int
name|cur_bcnq_id
decl_stmt|;
name|int
name|nvaps
decl_stmt|;
name|int
name|ap_vaps
decl_stmt|;
name|int
name|bcn_vaps
decl_stmt|;
name|int
name|mon_vaps
decl_stmt|;
name|int
name|vaps_running
decl_stmt|;
name|int
name|monvaps_running
decl_stmt|;
name|uint16_t
name|next_rom_addr
decl_stmt|;
name|uint8_t
name|keys_bmap
index|[
name|roundup2
argument_list|(
name|RTWN_CAM_ENTRY_LIMIT
argument_list|,
name|NBBY
argument_list|)
index|]
decl_stmt|;
name|struct
name|rtwn_vap
modifier|*
name|vaps
index|[
name|RTWN_PORT_COUNT
index|]
decl_stmt|;
name|struct
name|ieee80211_node
modifier|*
name|node_list
index|[
name|RTWN_MACID_LIMIT
index|]
decl_stmt|;
name|struct
name|mtx
name|nt_mtx
decl_stmt|;
name|struct
name|callout
name|sc_calib_to
decl_stmt|;
name|struct
name|callout
name|sc_pwrmode_init
decl_stmt|;
ifndef|#
directive|ifndef
name|D4054
name|struct
name|callout
name|sc_watchdog_to
decl_stmt|;
name|int
name|sc_tx_timer
decl_stmt|;
endif|#
directive|endif
name|struct
name|mtx
name|sc_mtx
decl_stmt|;
name|struct
name|rtwn_cmdq
name|cmdq
index|[
name|RTWN_CMDQ_SIZE
index|]
decl_stmt|;
name|struct
name|mtx
name|cmdq_mtx
decl_stmt|;
name|struct
name|task
name|cmdq_task
decl_stmt|;
name|uint8_t
name|cmdq_first
decl_stmt|;
name|uint8_t
name|cmdq_last
decl_stmt|;
name|struct
name|wmeParams
name|cap_wmeParams
index|[
name|WME_NUM_AC
index|]
decl_stmt|;
name|struct
name|rtwn_rx_radiotap_header
name|sc_rxtap
decl_stmt|;
name|struct
name|rtwn_tx_radiotap_header
name|sc_txtap
decl_stmt|;
name|int
name|ntxchains
decl_stmt|;
name|int
name|nrxchains
decl_stmt|;
name|int
name|ledlink
decl_stmt|;
name|uint8_t
name|thermal_meter
decl_stmt|;
name|int
name|sc_tx_n_active
decl_stmt|;
name|uint8_t
name|qfullmsk
decl_stmt|;
comment|/* Firmware-specific */
specifier|const
name|char
modifier|*
name|fwname
decl_stmt|;
name|uint16_t
name|fwver
decl_stmt|;
name|uint16_t
name|fwsig
decl_stmt|;
name|int
name|fwcur
decl_stmt|;
name|void
function_decl|(
modifier|*
name|sc_node_free
function_decl|)
parameter_list|(
name|struct
name|ieee80211_node
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_scan_curchan
function_decl|)
parameter_list|(
name|struct
name|ieee80211_scan_state
modifier|*
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
comment|/* Interface-specific. */
name|int
function_decl|(
modifier|*
name|sc_write_1
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|uint16_t
parameter_list|,
name|uint8_t
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_write_2
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|uint16_t
parameter_list|,
name|uint16_t
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_write_4
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|uint16_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
name|uint8_t
function_decl|(
modifier|*
name|sc_read_1
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|uint16_t
parameter_list|)
function_decl|;
name|uint16_t
function_decl|(
modifier|*
name|sc_read_2
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|uint16_t
parameter_list|)
function_decl|;
name|uint32_t
function_decl|(
modifier|*
name|sc_read_4
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|uint16_t
parameter_list|)
function_decl|;
comment|/* XXX eliminate */
name|void
function_decl|(
modifier|*
name|sc_delay
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_tx_start
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|struct
name|ieee80211_node
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|,
name|uint8_t
modifier|*
parameter_list|,
name|uint8_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_start_xfers
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_reset_lists
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|struct
name|ieee80211vap
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_abort_xfers
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_fw_write_block
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
specifier|const
name|uint8_t
modifier|*
parameter_list|,
name|uint16_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|uint16_t
function_decl|(
modifier|*
name|sc_get_qmap
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_set_desc_addr
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_drop_incorrect_tx
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_beacon_update_begin
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|struct
name|ieee80211vap
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_beacon_update_end
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|struct
name|ieee80211vap
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_beacon_unload
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
comment|/* XXX drop checks for PCIe? */
name|int
name|bcn_check_interval
decl_stmt|;
comment|/* Device-specific. */
name|uint32_t
function_decl|(
modifier|*
name|sc_rf_read
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|int
parameter_list|,
name|uint8_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_rf_write
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|int
parameter_list|,
name|uint8_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_check_condition
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
specifier|const
name|uint8_t
index|[]
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_efuse_postread
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_parse_rom
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|uint8_t
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_set_led
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_power_on
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_power_off
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|RTWN_WITHOUT_UCODE
name|void
function_decl|(
modifier|*
name|sc_fw_reset
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_fw_download_enable
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
endif|#
directive|endif
name|int
function_decl|(
modifier|*
name|sc_set_page_size
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_lc_calib
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_iq_calib
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_read_chipid_vendor
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_adj_devcaps
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_vap_preattach
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|struct
name|ieee80211vap
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_postattach
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_detach_private
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_fill_tx_desc
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|struct
name|ieee80211_node
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|uint8_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_fill_tx_desc_raw
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|struct
name|ieee80211_node
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
specifier|const
name|struct
name|ieee80211_bpf_params
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_fill_tx_desc_null
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_dump_tx_desc
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|)
function_decl|;
name|uint8_t
function_decl|(
modifier|*
name|sc_tx_radiotap_flags
function_decl|)
parameter_list|(
specifier|const
name|void
modifier|*
parameter_list|)
function_decl|;
name|uint8_t
function_decl|(
modifier|*
name|sc_rx_radiotap_flags
function_decl|)
parameter_list|(
specifier|const
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_beacon_init
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_beacon_enable
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_beacon_set_rate
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_beacon_select
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_set_chan
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|struct
name|ieee80211_channel
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_set_media_status
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|RTWN_WITHOUT_UCODE
name|int
function_decl|(
modifier|*
name|sc_set_rsvd_page
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_set_pwrmode
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|struct
name|ieee80211vap
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_set_rssi
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
endif|#
directive|endif
name|int8_t
function_decl|(
modifier|*
name|sc_get_rssi_cck
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|int8_t
function_decl|(
modifier|*
name|sc_get_rssi_ofdm
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_classify_intr
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_handle_tx_report
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|uint8_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_handle_c2h_report
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|uint8_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_check_frame
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_temp_measure
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|uint8_t
function_decl|(
modifier|*
name|sc_temp_read
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_init_tx_agg
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_init_rx_agg
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_init_intr
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_init_ampdu
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_init_edca
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_init_bb
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_init_rf
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_init_antsel
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_post_init
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_init_bcnq1_boundary
function_decl|)
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
specifier|const
name|uint8_t
modifier|*
name|chan_list_5ghz
index|[
literal|3
index|]
decl_stmt|;
name|int
name|chan_num_5ghz
index|[
literal|3
index|]
decl_stmt|;
specifier|const
name|struct
name|rtwn_mac_prog
modifier|*
name|mac_prog
decl_stmt|;
name|int
name|mac_size
decl_stmt|;
specifier|const
name|struct
name|rtwn_bb_prog
modifier|*
name|bb_prog
decl_stmt|;
name|int
name|bb_size
decl_stmt|;
specifier|const
name|struct
name|rtwn_agc_prog
modifier|*
name|agc_prog
decl_stmt|;
name|int
name|agc_size
decl_stmt|;
specifier|const
name|struct
name|rtwn_rf_prog
modifier|*
name|rf_prog
decl_stmt|;
name|int
name|page_count
decl_stmt|;
name|int
name|pktbuf_count
decl_stmt|;
name|int
name|ackto
decl_stmt|;
name|int
name|npubqpages
decl_stmt|;
name|int
name|nhqpages
decl_stmt|;
name|int
name|nnqpages
decl_stmt|;
name|int
name|nlqpages
decl_stmt|;
name|int
name|page_size
decl_stmt|;
name|int
name|txdesc_len
decl_stmt|;
name|int
name|efuse_maxlen
decl_stmt|;
name|int
name|efuse_maplen
decl_stmt|;
name|uint16_t
name|rx_dma_size
decl_stmt|;
name|int
name|macid_limit
decl_stmt|;
name|int
name|cam_entry_limit
decl_stmt|;
name|int
name|fwsize_limit
decl_stmt|;
name|int
name|temp_delta
decl_stmt|;
name|uint16_t
name|bcn_status_reg
index|[
name|RTWN_PORT_COUNT
index|]
decl_stmt|;
name|uint32_t
name|rcr
decl_stmt|;
comment|/* Rx filter */
block|}
struct|;
end_struct

begin_expr_stmt
name|MALLOC_DECLARE
argument_list|(
name|M_RTWN_PRIV
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|RTWN_LOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_lock(&(sc)->sc_mtx)
end_define

begin_define
define|#
directive|define
name|RTWN_UNLOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_unlock(&(sc)->sc_mtx)
end_define

begin_define
define|#
directive|define
name|RTWN_ASSERT_LOCKED
parameter_list|(
name|sc
parameter_list|)
value|mtx_assert(&(sc)->sc_mtx, MA_OWNED)
end_define

begin_define
define|#
directive|define
name|RTWN_CMDQ_LOCK_INIT
parameter_list|(
name|sc
parameter_list|)
define|\
value|mtx_init(&(sc)->cmdq_mtx, "cmdq lock", NULL, MTX_DEF)
end_define

begin_define
define|#
directive|define
name|RTWN_CMDQ_LOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_lock(&(sc)->cmdq_mtx)
end_define

begin_define
define|#
directive|define
name|RTWN_CMDQ_UNLOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_unlock(&(sc)->cmdq_mtx)
end_define

begin_define
define|#
directive|define
name|RTWN_CMDQ_LOCK_INITIALIZED
parameter_list|(
name|sc
parameter_list|)
value|mtx_initialized(&(sc)->cmdq_mtx)
end_define

begin_define
define|#
directive|define
name|RTWN_CMDQ_LOCK_DESTROY
parameter_list|(
name|sc
parameter_list|)
value|mtx_destroy(&(sc)->cmdq_mtx)
end_define

begin_define
define|#
directive|define
name|RTWN_NT_LOCK_INIT
parameter_list|(
name|sc
parameter_list|)
define|\
value|mtx_init(&(sc)->nt_mtx, "node table lock", NULL, MTX_DEF)
end_define

begin_define
define|#
directive|define
name|RTWN_NT_LOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_lock(&(sc)->nt_mtx)
end_define

begin_define
define|#
directive|define
name|RTWN_NT_UNLOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_unlock(&(sc)->nt_mtx)
end_define

begin_define
define|#
directive|define
name|RTWN_NT_LOCK_INITIALIZED
parameter_list|(
name|sc
parameter_list|)
value|mtx_initialized(&(sc)->nt_mtx)
end_define

begin_define
define|#
directive|define
name|RTWN_NT_LOCK_DESTROY
parameter_list|(
name|sc
parameter_list|)
value|mtx_destroy(&(sc)->nt_mtx)
end_define

begin_function_decl
name|void
name|rtwn_sysctlattach
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|rtwn_attach
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rtwn_detach
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rtwn_resume
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rtwn_suspend
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Interface-specific. */
end_comment

begin_define
define|#
directive|define
name|rtwn_write_1
parameter_list|(
name|_sc
parameter_list|,
name|_addr
parameter_list|,
name|_val
parameter_list|)
define|\
value|(((_sc)->sc_write_1)((_sc), (_addr), (_val)))
end_define

begin_define
define|#
directive|define
name|rtwn_write_2
parameter_list|(
name|_sc
parameter_list|,
name|_addr
parameter_list|,
name|_val
parameter_list|)
define|\
value|(((_sc)->sc_write_2)((_sc), (_addr), (_val)))
end_define

begin_define
define|#
directive|define
name|rtwn_write_4
parameter_list|(
name|_sc
parameter_list|,
name|_addr
parameter_list|,
name|_val
parameter_list|)
define|\
value|(((_sc)->sc_write_4)((_sc), (_addr), (_val)))
end_define

begin_define
define|#
directive|define
name|rtwn_read_1
parameter_list|(
name|_sc
parameter_list|,
name|_addr
parameter_list|)
define|\
value|(((_sc)->sc_read_1)((_sc), (_addr)))
end_define

begin_define
define|#
directive|define
name|rtwn_read_2
parameter_list|(
name|_sc
parameter_list|,
name|_addr
parameter_list|)
define|\
value|(((_sc)->sc_read_2)((_sc), (_addr)))
end_define

begin_define
define|#
directive|define
name|rtwn_read_4
parameter_list|(
name|_sc
parameter_list|,
name|_addr
parameter_list|)
define|\
value|(((_sc)->sc_read_4)((_sc), (_addr)))
end_define

begin_define
define|#
directive|define
name|rtwn_delay
parameter_list|(
name|_sc
parameter_list|,
name|_usec
parameter_list|)
define|\
value|(((_sc)->sc_delay)((_sc), (_usec)))
end_define

begin_define
define|#
directive|define
name|rtwn_tx_start
parameter_list|(
name|_sc
parameter_list|,
name|_ni
parameter_list|,
name|_m
parameter_list|,
name|_desc
parameter_list|,
name|_type
parameter_list|,
name|_id
parameter_list|)
define|\
value|(((_sc)->sc_tx_start)((_sc), (_ni), (_m), (_desc), (_type), (_id)))
end_define

begin_define
define|#
directive|define
name|rtwn_start_xfers
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_start_xfers)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_reset_lists
parameter_list|(
name|_sc
parameter_list|,
name|_vap
parameter_list|)
define|\
value|(((_sc)->sc_reset_lists)((_sc), (_vap)))
end_define

begin_define
define|#
directive|define
name|rtwn_abort_xfers
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_abort_xfers)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_fw_write_block
parameter_list|(
name|_sc
parameter_list|,
name|_buf
parameter_list|,
name|_reg
parameter_list|,
name|_len
parameter_list|)
define|\
value|(((_sc)->sc_fw_write_block)((_sc), (_buf), (_reg), (_len)))
end_define

begin_define
define|#
directive|define
name|rtwn_get_qmap
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_get_qmap)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_set_desc_addr
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_set_desc_addr)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_drop_incorrect_tx
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_drop_incorrect_tx)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_beacon_update_begin
parameter_list|(
name|_sc
parameter_list|,
name|_vap
parameter_list|)
define|\
value|(((_sc)->sc_beacon_update_begin)((_sc), (_vap)))
end_define

begin_define
define|#
directive|define
name|rtwn_beacon_update_end
parameter_list|(
name|_sc
parameter_list|,
name|_vap
parameter_list|)
define|\
value|(((_sc)->sc_beacon_update_end)((_sc), (_vap)))
end_define

begin_define
define|#
directive|define
name|rtwn_beacon_unload
parameter_list|(
name|_sc
parameter_list|,
name|_id
parameter_list|)
define|\
value|(((_sc)->sc_beacon_unload)((_sc), (_id)))
end_define

begin_comment
comment|/* Aliases. */
end_comment

begin_define
define|#
directive|define
name|rtwn_bb_write
value|rtwn_write_4
end_define

begin_define
define|#
directive|define
name|rtwn_bb_read
value|rtwn_read_4
end_define

begin_define
define|#
directive|define
name|rtwn_bb_setbits
value|rtwn_setbits_4
end_define

begin_comment
comment|/* Device-specific. */
end_comment

begin_define
define|#
directive|define
name|rtwn_rf_read
parameter_list|(
name|_sc
parameter_list|,
name|_chain
parameter_list|,
name|_addr
parameter_list|)
define|\
value|(((_sc)->sc_rf_read)((_sc), (_chain), (_addr)))
end_define

begin_define
define|#
directive|define
name|rtwn_rf_write
parameter_list|(
name|_sc
parameter_list|,
name|_chain
parameter_list|,
name|_addr
parameter_list|,
name|_val
parameter_list|)
define|\
value|(((_sc)->sc_rf_write)((_sc), (_chain), (_addr), (_val)))
end_define

begin_define
define|#
directive|define
name|rtwn_check_condition
parameter_list|(
name|_sc
parameter_list|,
name|_cond
parameter_list|)
define|\
value|(((_sc)->sc_check_condition)((_sc), (_cond)))
end_define

begin_define
define|#
directive|define
name|rtwn_efuse_postread
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_efuse_postread)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_parse_rom
parameter_list|(
name|_sc
parameter_list|,
name|_rom
parameter_list|)
define|\
value|(((_sc)->sc_parse_rom)((_sc), (_rom)))
end_define

begin_define
define|#
directive|define
name|rtwn_set_led
parameter_list|(
name|_sc
parameter_list|,
name|_led
parameter_list|,
name|_on
parameter_list|)
define|\
value|(((_sc)->sc_set_led)((_sc), (_led), (_on)))
end_define

begin_define
define|#
directive|define
name|rtwn_get_rssi_cck
parameter_list|(
name|_sc
parameter_list|,
name|_physt
parameter_list|)
define|\
value|(((_sc)->sc_get_rssi_cck)((_sc), (_physt)))
end_define

begin_define
define|#
directive|define
name|rtwn_get_rssi_ofdm
parameter_list|(
name|_sc
parameter_list|,
name|_physt
parameter_list|)
define|\
value|(((_sc)->sc_get_rssi_ofdm)((_sc), (_physt)))
end_define

begin_define
define|#
directive|define
name|rtwn_power_on
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_power_on)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_power_off
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_power_off)((_sc)))
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|RTWN_WITHOUT_UCODE
end_ifndef

begin_define
define|#
directive|define
name|rtwn_fw_reset
parameter_list|(
name|_sc
parameter_list|,
name|_reason
parameter_list|)
define|\
value|(((_sc)->sc_fw_reset)((_sc), (_reason)))
end_define

begin_define
define|#
directive|define
name|rtwn_fw_download_enable
parameter_list|(
name|_sc
parameter_list|,
name|_enable
parameter_list|)
define|\
value|(((_sc)->sc_fw_download_enable)((_sc), (_enable)))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|rtwn_set_page_size
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_set_page_size)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_lc_calib
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_lc_calib)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_iq_calib
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_iq_calib)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_read_chipid_vendor
parameter_list|(
name|_sc
parameter_list|,
name|_reg
parameter_list|)
define|\
value|(((_sc)->sc_read_chipid_vendor)((_sc), (_reg)))
end_define

begin_define
define|#
directive|define
name|rtwn_adj_devcaps
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_adj_devcaps)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_vap_preattach
parameter_list|(
name|_sc
parameter_list|,
name|_vap
parameter_list|)
define|\
value|(((_sc)->sc_vap_preattach)((_sc), (_vap)))
end_define

begin_define
define|#
directive|define
name|rtwn_postattach
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_postattach)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_detach_private
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_detach_private)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_fill_tx_desc
parameter_list|(
name|_sc
parameter_list|,
name|_ni
parameter_list|,
name|_m
parameter_list|, \
name|_buf
parameter_list|,
name|_ridx
parameter_list|,
name|_maxretry
parameter_list|)
define|\
value|(((_sc)->sc_fill_tx_desc)((_sc), (_ni), \ 	    (_m), (_buf), (_ridx), (_maxretry)))
end_define

begin_define
define|#
directive|define
name|rtwn_fill_tx_desc_raw
parameter_list|(
name|_sc
parameter_list|,
name|_ni
parameter_list|,
name|_m
parameter_list|, \
name|_buf
parameter_list|,
name|_params
parameter_list|)
define|\
value|(((_sc)->sc_fill_tx_desc_raw)((_sc), (_ni), \ 	    (_m), (_buf), (_params)))
end_define

begin_define
define|#
directive|define
name|rtwn_fill_tx_desc_null
parameter_list|(
name|_sc
parameter_list|,
name|_buf
parameter_list|,
name|_11b
parameter_list|,
name|_qos
parameter_list|,
name|_id
parameter_list|)
define|\
value|(((_sc)->sc_fill_tx_desc_null)((_sc), \ 	    (_buf), (_11b), (_qos), (_id)))
end_define

begin_define
define|#
directive|define
name|rtwn_dump_tx_desc
parameter_list|(
name|_sc
parameter_list|,
name|_desc
parameter_list|)
define|\
value|(((_sc)->sc_dump_tx_desc)((_sc), (_desc)))
end_define

begin_define
define|#
directive|define
name|rtwn_tx_radiotap_flags
parameter_list|(
name|_sc
parameter_list|,
name|_buf
parameter_list|)
define|\
value|(((_sc)->sc_tx_radiotap_flags)((_buf)))
end_define

begin_define
define|#
directive|define
name|rtwn_rx_radiotap_flags
parameter_list|(
name|_sc
parameter_list|,
name|_buf
parameter_list|)
define|\
value|(((_sc)->sc_rx_radiotap_flags)((_buf)))
end_define

begin_define
define|#
directive|define
name|rtwn_set_chan
parameter_list|(
name|_sc
parameter_list|,
name|_c
parameter_list|)
define|\
value|(((_sc)->sc_set_chan)((_sc), (_c)))
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|RTWN_WITHOUT_UCODE
end_ifndef

begin_define
define|#
directive|define
name|rtwn_set_rsvd_page
parameter_list|(
name|_sc
parameter_list|,
name|_resp
parameter_list|,
name|_null
parameter_list|,
name|_qos_null
parameter_list|)
define|\
value|(((_sc)->sc_set_rsvd_page)((_sc), \ 	    (_resp), (_null), (_qos_null)))
end_define

begin_define
define|#
directive|define
name|rtwn_set_pwrmode
parameter_list|(
name|_sc
parameter_list|,
name|_vap
parameter_list|,
name|_off
parameter_list|)
define|\
value|(((_sc)->sc_set_pwrmode)((_sc), (_vap), (_off)))
end_define

begin_define
define|#
directive|define
name|rtwn_set_rssi
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_set_rssi)((_sc)))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|rtwn_classify_intr
parameter_list|(
name|_sc
parameter_list|,
name|_buf
parameter_list|,
name|_len
parameter_list|)
define|\
value|(((_sc)->sc_classify_intr)((_sc), (_buf), (_len)))
end_define

begin_define
define|#
directive|define
name|rtwn_handle_tx_report
parameter_list|(
name|_sc
parameter_list|,
name|_buf
parameter_list|,
name|_len
parameter_list|)
define|\
value|(((_sc)->sc_handle_tx_report)((_sc), (_buf), (_len)))
end_define

begin_define
define|#
directive|define
name|rtwn_handle_c2h_report
parameter_list|(
name|_sc
parameter_list|,
name|_buf
parameter_list|,
name|_len
parameter_list|)
define|\
value|(((_sc)->sc_handle_c2h_report)((_sc), (_buf), (_len)))
end_define

begin_define
define|#
directive|define
name|rtwn_check_frame
parameter_list|(
name|_sc
parameter_list|,
name|_m
parameter_list|)
define|\
value|(((_sc)->sc_check_frame)((_sc), (_m)))
end_define

begin_define
define|#
directive|define
name|rtwn_beacon_init
parameter_list|(
name|_sc
parameter_list|,
name|_buf
parameter_list|,
name|_id
parameter_list|)
define|\
value|(((_sc)->sc_beacon_init)((_sc), (_buf), (_id)))
end_define

begin_define
define|#
directive|define
name|rtwn_beacon_enable
parameter_list|(
name|_sc
parameter_list|,
name|_id
parameter_list|,
name|_enable
parameter_list|)
define|\
value|(((_sc)->sc_beacon_enable)((_sc), (_id), (_enable)))
end_define

begin_define
define|#
directive|define
name|rtwn_beacon_set_rate
parameter_list|(
name|_sc
parameter_list|,
name|_buf
parameter_list|,
name|_is5ghz
parameter_list|)
define|\
value|(((_sc)->sc_beacon_set_rate)((_buf), (_is5ghz)))
end_define

begin_define
define|#
directive|define
name|rtwn_beacon_select
parameter_list|(
name|_sc
parameter_list|,
name|_id
parameter_list|)
define|\
value|(((_sc)->sc_beacon_select)((_sc), (_id)))
end_define

begin_define
define|#
directive|define
name|rtwn_temp_measure
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_temp_measure)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_temp_read
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_temp_read)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_init_tx_agg
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_init_tx_agg)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_init_rx_agg
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_init_rx_agg)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_init_intr
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_init_intr)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_init_ampdu
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_init_ampdu)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_init_edca
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_init_edca)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_init_bb
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_init_bb)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_init_rf
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_init_rf)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_init_antsel
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_init_antsel)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_post_init
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_post_init)((_sc)))
end_define

begin_define
define|#
directive|define
name|rtwn_init_bcnq1_boundary
parameter_list|(
name|_sc
parameter_list|)
define|\
value|(((_sc)->sc_init_bcnq1_boundary)((_sc)))
end_define

begin_comment
comment|/*  * Methods to access subfields in registers.  */
end_comment

begin_function
specifier|static
name|__inline
name|int
name|rtwn_setbits_1
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
name|sc
parameter_list|,
name|uint16_t
name|addr
parameter_list|,
name|uint8_t
name|clr
parameter_list|,
name|uint8_t
name|set
parameter_list|)
block|{
return|return
operator|(
name|rtwn_write_1
argument_list|(
name|sc
argument_list|,
name|addr
argument_list|,
operator|(
name|rtwn_read_1
argument_list|(
name|sc
argument_list|,
name|addr
argument_list|)
operator|&
operator|~
name|clr
operator|)
operator||
name|set
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|int
name|rtwn_setbits_1_shift
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
name|sc
parameter_list|,
name|uint16_t
name|addr
parameter_list|,
name|uint32_t
name|clr
parameter_list|,
name|uint32_t
name|set
parameter_list|,
name|int
name|shift
parameter_list|)
block|{
return|return
operator|(
name|rtwn_setbits_1
argument_list|(
name|sc
argument_list|,
name|addr
operator|+
name|shift
argument_list|,
name|clr
operator|>>
name|shift
operator|*
name|NBBY
argument_list|,
name|set
operator|>>
name|shift
operator|*
name|NBBY
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|int
name|rtwn_setbits_2
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
name|sc
parameter_list|,
name|uint16_t
name|addr
parameter_list|,
name|uint16_t
name|clr
parameter_list|,
name|uint16_t
name|set
parameter_list|)
block|{
return|return
operator|(
name|rtwn_write_2
argument_list|(
name|sc
argument_list|,
name|addr
argument_list|,
operator|(
name|rtwn_read_2
argument_list|(
name|sc
argument_list|,
name|addr
argument_list|)
operator|&
operator|~
name|clr
operator|)
operator||
name|set
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|int
name|rtwn_setbits_4
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
name|sc
parameter_list|,
name|uint16_t
name|addr
parameter_list|,
name|uint32_t
name|clr
parameter_list|,
name|uint32_t
name|set
parameter_list|)
block|{
return|return
operator|(
name|rtwn_write_4
argument_list|(
name|sc
argument_list|,
name|addr
argument_list|,
operator|(
name|rtwn_read_4
argument_list|(
name|sc
argument_list|,
name|addr
argument_list|)
operator|&
operator|~
name|clr
operator|)
operator||
name|set
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|rtwn_rf_setbits
parameter_list|(
name|struct
name|rtwn_softc
modifier|*
name|sc
parameter_list|,
name|int
name|chain
parameter_list|,
name|uint8_t
name|addr
parameter_list|,
name|uint32_t
name|clr
parameter_list|,
name|uint32_t
name|set
parameter_list|)
block|{
name|rtwn_rf_write
argument_list|(
name|sc
argument_list|,
name|chain
argument_list|,
name|addr
argument_list|,
operator|(
name|rtwn_rf_read
argument_list|(
name|sc
argument_list|,
name|chain
argument_list|,
name|addr
argument_list|)
operator|&
operator|~
name|clr
operator|)
operator||
name|set
argument_list|)
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* IF_RTWNVAR_H */
end_comment

end_unit

