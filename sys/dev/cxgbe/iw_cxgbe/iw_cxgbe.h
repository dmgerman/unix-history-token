begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2009-2013, 2016 Chelsio, Inc. All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *	  copyright notice, this list of conditions and the following  *	  disclaimer.  *      - Redistributions in binary form must reproduce the above  *	  copyright notice, this list of conditions and the following  *	  disclaimer in the documentation and/or other materials  *	  provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__IW_CXGB4_H__
end_ifndef

begin_define
define|#
directive|define
name|__IW_CXGB4_H__
end_define

begin_include
include|#
directive|include
file|<linux/list.h>
end_include

begin_include
include|#
directive|include
file|<linux/spinlock.h>
end_include

begin_include
include|#
directive|include
file|<linux/idr.h>
end_include

begin_include
include|#
directive|include
file|<linux/completion.h>
end_include

begin_include
include|#
directive|include
file|<linux/netdevice.h>
end_include

begin_include
include|#
directive|include
file|<linux/sched.h>
end_include

begin_include
include|#
directive|include
file|<linux/pci.h>
end_include

begin_include
include|#
directive|include
file|<linux/dma-mapping.h>
end_include

begin_include
include|#
directive|include
file|<linux/wait.h>
end_include

begin_include
include|#
directive|include
file|<linux/kref.h>
end_include

begin_include
include|#
directive|include
file|<linux/timer.h>
end_include

begin_include
include|#
directive|include
file|<linux/io.h>
end_include

begin_include
include|#
directive|include
file|<sys/vmem.h>
end_include

begin_include
include|#
directive|include
file|<asm/byteorder.h>
end_include

begin_include
include|#
directive|include
file|<netinet/in.h>
end_include

begin_include
include|#
directive|include
file|<netinet/toecore.h>
end_include

begin_include
include|#
directive|include
file|<rdma/ib_verbs.h>
end_include

begin_include
include|#
directive|include
file|<rdma/iw_cm.h>
end_include

begin_undef
undef|#
directive|undef
name|prefetch
end_undef

begin_include
include|#
directive|include
file|"common/common.h"
end_include

begin_include
include|#
directive|include
file|"common/t4_msg.h"
end_include

begin_include
include|#
directive|include
file|"common/t4_regs.h"
end_include

begin_include
include|#
directive|include
file|"common/t4_tcb.h"
end_include

begin_include
include|#
directive|include
file|"t4_l2t.h"
end_include

begin_define
define|#
directive|define
name|DRV_NAME
value|"iw_cxgbe"
end_define

begin_define
define|#
directive|define
name|MOD
value|DRV_NAME ":"
end_define

begin_define
define|#
directive|define
name|KTR_IW_CXGBE
value|KTR_SPARE3
end_define

begin_decl_stmt
specifier|extern
name|int
name|c4iw_debug
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|PDBG
parameter_list|(
name|fmt
parameter_list|,
name|args
modifier|...
parameter_list|)
define|\
value|do { \ 	if (c4iw_debug) \ 		printf(MOD fmt, ## args); \ } while (0)
end_define

begin_include
include|#
directive|include
file|"t4.h"
end_include

begin_function
specifier|static
specifier|inline
name|void
modifier|*
name|cplhdr
parameter_list|(
name|struct
name|mbuf
modifier|*
name|m
parameter_list|)
block|{
return|return
name|mtod
argument_list|(
name|m
argument_list|,
name|void
operator|*
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|PBL_OFF
parameter_list|(
name|rdev_p
parameter_list|,
name|a
parameter_list|)
value|((a) - (rdev_p)->adap->vres.pbl.start)
end_define

begin_define
define|#
directive|define
name|RQT_OFF
parameter_list|(
name|rdev_p
parameter_list|,
name|a
parameter_list|)
value|((a) - (rdev_p)->adap->vres.rq.start)
end_define

begin_define
define|#
directive|define
name|C4IW_ID_TABLE_F_RANDOM
value|1
end_define

begin_comment
comment|/* Pseudo-randomize the id's returned */
end_comment

begin_define
define|#
directive|define
name|C4IW_ID_TABLE_F_EMPTY
value|2
end_define

begin_comment
comment|/* Table is initially empty */
end_comment

begin_struct
struct|struct
name|c4iw_id_table
block|{
name|u32
name|flags
decl_stmt|;
name|u32
name|start
decl_stmt|;
comment|/* logical minimal id */
name|u32
name|last
decl_stmt|;
comment|/* hint for find */
name|u32
name|max
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
name|unsigned
name|long
modifier|*
name|table
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_resource
block|{
name|struct
name|c4iw_id_table
name|tpt_table
decl_stmt|;
name|struct
name|c4iw_id_table
name|qid_table
decl_stmt|;
name|struct
name|c4iw_id_table
name|pdid_table
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_qid_list
block|{
name|struct
name|list_head
name|entry
decl_stmt|;
name|u32
name|qid
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_dev_ucontext
block|{
name|struct
name|list_head
name|qpids
decl_stmt|;
name|struct
name|list_head
name|cqids
decl_stmt|;
name|struct
name|mutex
name|lock
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|c4iw_rdev_flags
block|{
name|T4_FATAL_ERROR
init|=
operator|(
literal|1
operator|<<
literal|0
operator|)
block|,
name|T4_STATUS_PAGE_DISABLED
init|=
operator|(
literal|1
operator|<<
literal|1
operator|)
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|c4iw_stat
block|{
name|u64
name|total
decl_stmt|;
name|u64
name|cur
decl_stmt|;
name|u64
name|max
decl_stmt|;
name|u64
name|fail
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_stats
block|{
name|struct
name|mutex
name|lock
decl_stmt|;
name|struct
name|c4iw_stat
name|qid
decl_stmt|;
name|struct
name|c4iw_stat
name|pd
decl_stmt|;
name|struct
name|c4iw_stat
name|stag
decl_stmt|;
name|struct
name|c4iw_stat
name|pbl
decl_stmt|;
name|struct
name|c4iw_stat
name|rqt
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_hw_queue
block|{
name|int
name|t4_eq_status_entries
decl_stmt|;
name|int
name|t4_max_eq_size
decl_stmt|;
name|int
name|t4_max_iq_size
decl_stmt|;
name|int
name|t4_max_rq_size
decl_stmt|;
name|int
name|t4_max_sq_size
decl_stmt|;
name|int
name|t4_max_qp_depth
decl_stmt|;
name|int
name|t4_max_cq_depth
decl_stmt|;
name|int
name|t4_stat_len
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_rdev
block|{
name|struct
name|adapter
modifier|*
name|adap
decl_stmt|;
name|struct
name|c4iw_resource
name|resource
decl_stmt|;
name|unsigned
name|long
name|qpshift
decl_stmt|;
name|u32
name|qpmask
decl_stmt|;
name|unsigned
name|long
name|cqshift
decl_stmt|;
name|u32
name|cqmask
decl_stmt|;
name|struct
name|c4iw_dev_ucontext
name|uctx
decl_stmt|;
name|vmem_t
modifier|*
name|rqt_arena
decl_stmt|;
name|vmem_t
modifier|*
name|pbl_arena
decl_stmt|;
name|u32
name|flags
decl_stmt|;
name|struct
name|c4iw_stats
name|stats
decl_stmt|;
name|struct
name|c4iw_hw_queue
name|hw_queue
decl_stmt|;
name|struct
name|t4_dev_status_page
modifier|*
name|status_page
decl_stmt|;
name|unsigned
name|long
name|bar2_pa
decl_stmt|;
name|void
name|__iomem
modifier|*
name|bar2_kva
decl_stmt|;
name|unsigned
name|int
name|bar2_len
decl_stmt|;
name|struct
name|workqueue_struct
modifier|*
name|free_workq
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|int
name|c4iw_fatal_error
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|)
block|{
return|return
name|rdev
operator|->
name|flags
operator|&
name|T4_FATAL_ERROR
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|c4iw_num_stags
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|)
block|{
return|return
call|(
name|int
call|)
argument_list|(
name|rdev
operator|->
name|adap
operator|->
name|vres
operator|.
name|stag
operator|.
name|size
operator|>>
literal|5
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|C4IW_WR_TO
value|(60*HZ)
end_define

begin_struct
struct|struct
name|c4iw_wr_wait
block|{
name|int
name|ret
decl_stmt|;
name|struct
name|completion
name|completion
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|void
name|c4iw_init_wr_wait
parameter_list|(
name|struct
name|c4iw_wr_wait
modifier|*
name|wr_waitp
parameter_list|)
block|{
name|wr_waitp
operator|->
name|ret
operator|=
literal|0
expr_stmt|;
name|init_completion
argument_list|(
operator|&
name|wr_waitp
operator|->
name|completion
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|c4iw_wake_up
parameter_list|(
name|struct
name|c4iw_wr_wait
modifier|*
name|wr_waitp
parameter_list|,
name|int
name|ret
parameter_list|)
block|{
name|wr_waitp
operator|->
name|ret
operator|=
name|ret
expr_stmt|;
name|complete
argument_list|(
operator|&
name|wr_waitp
operator|->
name|completion
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|c4iw_wait_for_reply
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|struct
name|c4iw_wr_wait
modifier|*
name|wr_waitp
parameter_list|,
name|u32
name|hwtid
parameter_list|,
name|u32
name|qpid
parameter_list|,
name|struct
name|socket
modifier|*
name|so
parameter_list|,
specifier|const
name|char
modifier|*
name|func
parameter_list|)
block|{
name|struct
name|adapter
modifier|*
name|sc
init|=
name|rdev
operator|->
name|adap
decl_stmt|;
name|unsigned
name|to
init|=
name|C4IW_WR_TO
decl_stmt|;
name|int
name|ret
decl_stmt|;
name|int
name|timedout
init|=
literal|0
decl_stmt|;
name|struct
name|timeval
name|t1
decl_stmt|,
name|t2
decl_stmt|;
if|if
condition|(
name|c4iw_fatal_error
argument_list|(
name|rdev
argument_list|)
condition|)
block|{
name|wr_waitp
operator|->
name|ret
operator|=
operator|-
name|EIO
expr_stmt|;
goto|goto
name|out
goto|;
block|}
name|getmicrotime
argument_list|(
operator|&
name|t1
argument_list|)
expr_stmt|;
do|do
block|{
comment|/* If waiting for reply in rdma_init()/rdma_fini() threads, then 		 * check if there are any connection errors. 		 */
if|if
condition|(
name|so
operator|&&
name|so
operator|->
name|so_error
condition|)
block|{
name|wr_waitp
operator|->
name|ret
operator|=
operator|-
name|ECONNRESET
expr_stmt|;
name|CTR5
argument_list|(
name|KTR_IW_CXGBE
argument_list|,
literal|"%s - Connection ERROR %u for sock %p"
literal|"tid %u qpid %u"
argument_list|,
name|func
argument_list|,
name|so
operator|->
name|so_error
argument_list|,
name|so
argument_list|,
name|hwtid
argument_list|,
name|qpid
argument_list|)
expr_stmt|;
break|break;
block|}
name|ret
operator|=
name|wait_for_completion_timeout
argument_list|(
operator|&
name|wr_waitp
operator|->
name|completion
argument_list|,
name|to
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|ret
condition|)
block|{
name|getmicrotime
argument_list|(
operator|&
name|t2
argument_list|)
expr_stmt|;
name|timevalsub
argument_list|(
operator|&
name|t2
argument_list|,
operator|&
name|t1
argument_list|)
expr_stmt|;
name|printf
argument_list|(
literal|"%s - Device %s not responding after %ld.%06ld "
literal|"seconds - tid %u qpid %u\n"
argument_list|,
name|func
argument_list|,
name|device_get_nameunit
argument_list|(
name|sc
operator|->
name|dev
argument_list|)
argument_list|,
name|t2
operator|.
name|tv_sec
argument_list|,
name|t2
operator|.
name|tv_usec
argument_list|,
name|hwtid
argument_list|,
name|qpid
argument_list|)
expr_stmt|;
if|if
condition|(
name|c4iw_fatal_error
argument_list|(
name|rdev
argument_list|)
condition|)
block|{
name|wr_waitp
operator|->
name|ret
operator|=
operator|-
name|EIO
expr_stmt|;
break|break;
block|}
name|to
operator|=
name|to
operator|<<
literal|2
expr_stmt|;
name|timedout
operator|=
literal|1
expr_stmt|;
block|}
block|}
do|while
condition|(
operator|!
name|ret
condition|)
do|;
name|out
label|:
if|if
condition|(
name|timedout
condition|)
block|{
name|getmicrotime
argument_list|(
operator|&
name|t2
argument_list|)
expr_stmt|;
name|timevalsub
argument_list|(
operator|&
name|t2
argument_list|,
operator|&
name|t1
argument_list|)
expr_stmt|;
name|printf
argument_list|(
literal|"%s - Device %s reply after %ld.%06ld seconds - "
literal|"tid %u qpid %u\n"
argument_list|,
name|func
argument_list|,
name|device_get_nameunit
argument_list|(
name|sc
operator|->
name|dev
argument_list|)
argument_list|,
name|t2
operator|.
name|tv_sec
argument_list|,
name|t2
operator|.
name|tv_usec
argument_list|,
name|hwtid
argument_list|,
name|qpid
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|wr_waitp
operator|->
name|ret
condition|)
name|CTR4
argument_list|(
name|KTR_IW_CXGBE
argument_list|,
literal|"%p: FW reply %d tid %u qpid %u"
argument_list|,
name|sc
argument_list|,
name|wr_waitp
operator|->
name|ret
argument_list|,
name|hwtid
argument_list|,
name|qpid
argument_list|)
expr_stmt|;
return|return
operator|(
name|wr_waitp
operator|->
name|ret
operator|)
return|;
block|}
end_function

begin_struct
struct|struct
name|c4iw_dev
block|{
name|struct
name|ib_device
name|ibdev
decl_stmt|;
name|struct
name|c4iw_rdev
name|rdev
decl_stmt|;
name|u32
name|device_cap_flags
decl_stmt|;
name|struct
name|idr
name|cqidr
decl_stmt|;
name|struct
name|idr
name|qpidr
decl_stmt|;
name|struct
name|idr
name|mmidr
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|dentry
modifier|*
name|debugfs_root
decl_stmt|;
name|u32
name|avail_ird
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_dev
modifier|*
name|to_c4iw_dev
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibdev
argument_list|,
expr|struct
name|c4iw_dev
argument_list|,
name|ibdev
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_dev
modifier|*
name|rdev_to_c4iw_dev
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|rdev
argument_list|,
expr|struct
name|c4iw_dev
argument_list|,
name|rdev
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_cq
modifier|*
name|get_chp
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|u32
name|cqid
parameter_list|)
block|{
return|return
name|idr_find
argument_list|(
operator|&
name|rhp
operator|->
name|cqidr
argument_list|,
name|cqid
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_qp
modifier|*
name|get_qhp
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|u32
name|qpid
parameter_list|)
block|{
return|return
name|idr_find
argument_list|(
operator|&
name|rhp
operator|->
name|qpidr
argument_list|,
name|qpid
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_mr
modifier|*
name|get_mhp
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|u32
name|mmid
parameter_list|)
block|{
return|return
name|idr_find
argument_list|(
operator|&
name|rhp
operator|->
name|mmidr
argument_list|,
name|mmid
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|_insert_handle
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|struct
name|idr
modifier|*
name|idr
parameter_list|,
name|void
modifier|*
name|handle
parameter_list|,
name|u32
name|id
parameter_list|,
name|int
name|lock
parameter_list|)
block|{
name|int
name|ret
decl_stmt|;
name|int
name|newid
decl_stmt|;
do|do
block|{
if|if
condition|(
operator|!
name|idr_pre_get
argument_list|(
name|idr
argument_list|,
name|lock
condition|?
name|GFP_KERNEL
else|:
name|GFP_ATOMIC
argument_list|)
condition|)
return|return
operator|-
name|ENOMEM
return|;
if|if
condition|(
name|lock
condition|)
name|spin_lock_irq
argument_list|(
operator|&
name|rhp
operator|->
name|lock
argument_list|)
expr_stmt|;
name|ret
operator|=
name|idr_get_new_above
argument_list|(
name|idr
argument_list|,
name|handle
argument_list|,
name|id
argument_list|,
operator|&
name|newid
argument_list|)
expr_stmt|;
name|BUG_ON
argument_list|(
operator|!
name|ret
operator|&&
name|newid
operator|!=
name|id
argument_list|)
expr_stmt|;
if|if
condition|(
name|lock
condition|)
name|spin_unlock_irq
argument_list|(
operator|&
name|rhp
operator|->
name|lock
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|ret
operator|==
operator|-
name|EAGAIN
condition|)
do|;
return|return
name|ret
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|insert_handle
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|struct
name|idr
modifier|*
name|idr
parameter_list|,
name|void
modifier|*
name|handle
parameter_list|,
name|u32
name|id
parameter_list|)
block|{
return|return
name|_insert_handle
argument_list|(
name|rhp
argument_list|,
name|idr
argument_list|,
name|handle
argument_list|,
name|id
argument_list|,
literal|1
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|insert_handle_nolock
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|struct
name|idr
modifier|*
name|idr
parameter_list|,
name|void
modifier|*
name|handle
parameter_list|,
name|u32
name|id
parameter_list|)
block|{
return|return
name|_insert_handle
argument_list|(
name|rhp
argument_list|,
name|idr
argument_list|,
name|handle
argument_list|,
name|id
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|_remove_handle
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|struct
name|idr
modifier|*
name|idr
parameter_list|,
name|u32
name|id
parameter_list|,
name|int
name|lock
parameter_list|)
block|{
if|if
condition|(
name|lock
condition|)
name|spin_lock_irq
argument_list|(
operator|&
name|rhp
operator|->
name|lock
argument_list|)
expr_stmt|;
name|idr_remove
argument_list|(
name|idr
argument_list|,
name|id
argument_list|)
expr_stmt|;
if|if
condition|(
name|lock
condition|)
name|spin_unlock_irq
argument_list|(
operator|&
name|rhp
operator|->
name|lock
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|remove_handle
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|struct
name|idr
modifier|*
name|idr
parameter_list|,
name|u32
name|id
parameter_list|)
block|{
name|_remove_handle
argument_list|(
name|rhp
argument_list|,
name|idr
argument_list|,
name|id
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|remove_handle_nolock
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|struct
name|idr
modifier|*
name|idr
parameter_list|,
name|u32
name|id
parameter_list|)
block|{
name|_remove_handle
argument_list|(
name|rhp
argument_list|,
name|idr
argument_list|,
name|id
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function

begin_decl_stmt
specifier|extern
name|int
name|c4iw_max_read_depth
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
specifier|inline
name|int
name|cur_max_read_depth
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|dev
parameter_list|)
block|{
return|return
name|min
argument_list|(
name|dev
operator|->
name|rdev
operator|.
name|adap
operator|->
name|params
operator|.
name|max_ordird_qp
argument_list|,
name|c4iw_max_read_depth
argument_list|)
return|;
block|}
end_function

begin_struct
struct|struct
name|c4iw_pd
block|{
name|struct
name|ib_pd
name|ibpd
decl_stmt|;
name|u32
name|pdid
decl_stmt|;
name|struct
name|c4iw_dev
modifier|*
name|rhp
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_pd
modifier|*
name|to_c4iw_pd
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|ibpd
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibpd
argument_list|,
expr|struct
name|c4iw_pd
argument_list|,
name|ibpd
argument_list|)
return|;
block|}
end_function

begin_struct
struct|struct
name|tpt_attributes
block|{
name|u64
name|len
decl_stmt|;
name|u64
name|va_fbo
decl_stmt|;
name|enum
name|fw_ri_mem_perms
name|perms
decl_stmt|;
name|u32
name|stag
decl_stmt|;
name|u32
name|pdid
decl_stmt|;
name|u32
name|qpid
decl_stmt|;
name|u32
name|pbl_addr
decl_stmt|;
name|u32
name|pbl_size
decl_stmt|;
name|u32
name|state
range|:
literal|1
decl_stmt|;
name|u32
name|type
range|:
literal|2
decl_stmt|;
name|u32
name|rsvd
range|:
literal|1
decl_stmt|;
name|u32
name|remote_invaliate_disable
range|:
literal|1
decl_stmt|;
name|u32
name|zbva
range|:
literal|1
decl_stmt|;
name|u32
name|mw_bind_enable
range|:
literal|1
decl_stmt|;
name|u32
name|page_size
range|:
literal|5
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_mr
block|{
name|struct
name|ib_mr
name|ibmr
decl_stmt|;
name|struct
name|ib_umem
modifier|*
name|umem
decl_stmt|;
name|struct
name|c4iw_dev
modifier|*
name|rhp
decl_stmt|;
name|u64
name|kva
decl_stmt|;
name|struct
name|tpt_attributes
name|attr
decl_stmt|;
name|u64
modifier|*
name|mpl
decl_stmt|;
name|dma_addr_t
name|mpl_addr
decl_stmt|;
name|u32
name|max_mpl_len
decl_stmt|;
name|u32
name|mpl_len
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_mr
modifier|*
name|to_c4iw_mr
parameter_list|(
name|struct
name|ib_mr
modifier|*
name|ibmr
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibmr
argument_list|,
expr|struct
name|c4iw_mr
argument_list|,
name|ibmr
argument_list|)
return|;
block|}
end_function

begin_struct
struct|struct
name|c4iw_mw
block|{
name|struct
name|ib_mw
name|ibmw
decl_stmt|;
name|struct
name|c4iw_dev
modifier|*
name|rhp
decl_stmt|;
name|u64
name|kva
decl_stmt|;
name|struct
name|tpt_attributes
name|attr
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_mw
modifier|*
name|to_c4iw_mw
parameter_list|(
name|struct
name|ib_mw
modifier|*
name|ibmw
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibmw
argument_list|,
expr|struct
name|c4iw_mw
argument_list|,
name|ibmw
argument_list|)
return|;
block|}
end_function

begin_struct
struct|struct
name|c4iw_cq
block|{
name|struct
name|ib_cq
name|ibcq
decl_stmt|;
name|struct
name|c4iw_dev
modifier|*
name|rhp
decl_stmt|;
name|struct
name|t4_cq
name|cq
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
name|spinlock_t
name|comp_handler_lock
decl_stmt|;
name|atomic_t
name|refcnt
decl_stmt|;
name|wait_queue_head_t
name|wait
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_cq
modifier|*
name|to_c4iw_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibcq
argument_list|,
expr|struct
name|c4iw_cq
argument_list|,
name|ibcq
argument_list|)
return|;
block|}
end_function

begin_struct
struct|struct
name|c4iw_mpa_attributes
block|{
name|u8
name|initiator
decl_stmt|;
name|u8
name|recv_marker_enabled
decl_stmt|;
name|u8
name|xmit_marker_enabled
decl_stmt|;
name|u8
name|crc_enabled
decl_stmt|;
name|u8
name|enhanced_rdma_conn
decl_stmt|;
name|u8
name|version
decl_stmt|;
name|u8
name|p2p_type
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_qp_attributes
block|{
name|u32
name|scq
decl_stmt|;
name|u32
name|rcq
decl_stmt|;
name|u32
name|sq_num_entries
decl_stmt|;
name|u32
name|rq_num_entries
decl_stmt|;
name|u32
name|sq_max_sges
decl_stmt|;
name|u32
name|sq_max_sges_rdma_write
decl_stmt|;
name|u32
name|rq_max_sges
decl_stmt|;
name|u32
name|state
decl_stmt|;
name|u8
name|enable_rdma_read
decl_stmt|;
name|u8
name|enable_rdma_write
decl_stmt|;
name|u8
name|enable_bind
decl_stmt|;
name|u8
name|enable_mmid0_fastreg
decl_stmt|;
name|u32
name|max_ord
decl_stmt|;
name|u32
name|max_ird
decl_stmt|;
name|u32
name|pd
decl_stmt|;
name|u32
name|next_state
decl_stmt|;
name|char
name|terminate_buffer
index|[
literal|52
index|]
decl_stmt|;
name|u32
name|terminate_msg_len
decl_stmt|;
name|u8
name|is_terminate_local
decl_stmt|;
name|struct
name|c4iw_mpa_attributes
name|mpa_attr
decl_stmt|;
name|struct
name|c4iw_ep
modifier|*
name|llp_stream_handle
decl_stmt|;
name|u8
name|layer_etype
decl_stmt|;
name|u8
name|ecode
decl_stmt|;
name|u16
name|sq_db_inc
decl_stmt|;
name|u16
name|rq_db_inc
decl_stmt|;
name|u8
name|send_term
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_qp
block|{
name|struct
name|ib_qp
name|ibqp
decl_stmt|;
name|struct
name|c4iw_dev
modifier|*
name|rhp
decl_stmt|;
name|struct
name|c4iw_ep
modifier|*
name|ep
decl_stmt|;
name|struct
name|c4iw_qp_attributes
name|attr
decl_stmt|;
name|struct
name|t4_wq
name|wq
decl_stmt|;
name|spinlock_t
name|lock
decl_stmt|;
name|struct
name|mutex
name|mutex
decl_stmt|;
name|struct
name|kref
name|kref
decl_stmt|;
name|wait_queue_head_t
name|wait
decl_stmt|;
name|struct
name|timer_list
name|timer
decl_stmt|;
name|int
name|sq_sig_all
decl_stmt|;
name|struct
name|work_struct
name|free_work
decl_stmt|;
name|struct
name|c4iw_ucontext
modifier|*
name|ucontext
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_qp
modifier|*
name|to_c4iw_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibqp
argument_list|,
expr|struct
name|c4iw_qp
argument_list|,
name|ibqp
argument_list|)
return|;
block|}
end_function

begin_struct
struct|struct
name|c4iw_ucontext
block|{
name|struct
name|ib_ucontext
name|ibucontext
decl_stmt|;
name|struct
name|c4iw_dev_ucontext
name|uctx
decl_stmt|;
name|u32
name|key
decl_stmt|;
name|spinlock_t
name|mmap_lock
decl_stmt|;
name|struct
name|list_head
name|mmaps
decl_stmt|;
name|struct
name|kref
name|kref
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_ucontext
modifier|*
name|to_c4iw_ucontext
parameter_list|(
name|struct
name|ib_ucontext
modifier|*
name|c
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|c
argument_list|,
expr|struct
name|c4iw_ucontext
argument_list|,
name|ibucontext
argument_list|)
return|;
block|}
end_function

begin_function_decl
name|void
name|_c4iw_free_ucontext
parameter_list|(
name|struct
name|kref
modifier|*
name|kref
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|void
name|c4iw_put_ucontext
parameter_list|(
name|struct
name|c4iw_ucontext
modifier|*
name|ucontext
parameter_list|)
block|{
name|kref_put
argument_list|(
operator|&
name|ucontext
operator|->
name|kref
argument_list|,
name|_c4iw_free_ucontext
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|c4iw_get_ucontext
parameter_list|(
name|struct
name|c4iw_ucontext
modifier|*
name|ucontext
parameter_list|)
block|{
name|kref_get
argument_list|(
operator|&
name|ucontext
operator|->
name|kref
argument_list|)
expr_stmt|;
block|}
end_function

begin_struct
struct|struct
name|c4iw_mm_entry
block|{
name|struct
name|list_head
name|entry
decl_stmt|;
name|u64
name|addr
decl_stmt|;
name|u32
name|key
decl_stmt|;
name|unsigned
name|len
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_mm_entry
modifier|*
name|remove_mmap
parameter_list|(
name|struct
name|c4iw_ucontext
modifier|*
name|ucontext
parameter_list|,
name|u32
name|key
parameter_list|,
name|unsigned
name|len
parameter_list|)
block|{
name|struct
name|list_head
modifier|*
name|pos
decl_stmt|,
modifier|*
name|nxt
decl_stmt|;
name|struct
name|c4iw_mm_entry
modifier|*
name|mm
decl_stmt|;
name|spin_lock
argument_list|(
operator|&
name|ucontext
operator|->
name|mmap_lock
argument_list|)
expr_stmt|;
name|list_for_each_safe
argument_list|(
argument|pos
argument_list|,
argument|nxt
argument_list|,
argument|&ucontext->mmaps
argument_list|)
block|{
name|mm
operator|=
name|list_entry
argument_list|(
name|pos
argument_list|,
expr|struct
name|c4iw_mm_entry
argument_list|,
name|entry
argument_list|)
expr_stmt|;
if|if
condition|(
name|mm
operator|->
name|key
operator|==
name|key
operator|&&
name|mm
operator|->
name|len
operator|==
name|len
condition|)
block|{
name|list_del_init
argument_list|(
operator|&
name|mm
operator|->
name|entry
argument_list|)
expr_stmt|;
name|spin_unlock
argument_list|(
operator|&
name|ucontext
operator|->
name|mmap_lock
argument_list|)
expr_stmt|;
name|CTR4
argument_list|(
name|KTR_IW_CXGBE
argument_list|,
literal|"%s key 0x%x addr 0x%llx len %d"
argument_list|,
name|__func__
argument_list|,
name|key
argument_list|,
operator|(
name|unsigned
name|long
name|long
operator|)
name|mm
operator|->
name|addr
argument_list|,
name|mm
operator|->
name|len
argument_list|)
expr_stmt|;
return|return
name|mm
return|;
block|}
block|}
name|spin_unlock
argument_list|(
operator|&
name|ucontext
operator|->
name|mmap_lock
argument_list|)
expr_stmt|;
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|insert_mmap
parameter_list|(
name|struct
name|c4iw_ucontext
modifier|*
name|ucontext
parameter_list|,
name|struct
name|c4iw_mm_entry
modifier|*
name|mm
parameter_list|)
block|{
name|spin_lock
argument_list|(
operator|&
name|ucontext
operator|->
name|mmap_lock
argument_list|)
expr_stmt|;
name|CTR4
argument_list|(
name|KTR_IW_CXGBE
argument_list|,
literal|"%s key 0x%x addr 0x%llx len %d"
argument_list|,
name|__func__
argument_list|,
name|mm
operator|->
name|key
argument_list|,
operator|(
name|unsigned
name|long
name|long
operator|)
name|mm
operator|->
name|addr
argument_list|,
name|mm
operator|->
name|len
argument_list|)
expr_stmt|;
name|list_add_tail
argument_list|(
operator|&
name|mm
operator|->
name|entry
argument_list|,
operator|&
name|ucontext
operator|->
name|mmaps
argument_list|)
expr_stmt|;
name|spin_unlock
argument_list|(
operator|&
name|ucontext
operator|->
name|mmap_lock
argument_list|)
expr_stmt|;
block|}
end_function

begin_enum
enum|enum
name|c4iw_qp_attr_mask
block|{
name|C4IW_QP_ATTR_NEXT_STATE
init|=
literal|1
operator|<<
literal|0
block|,
name|C4IW_QP_ATTR_SQ_DB
init|=
literal|1
operator|<<
literal|1
block|,
name|C4IW_QP_ATTR_RQ_DB
init|=
literal|1
operator|<<
literal|2
block|,
name|C4IW_QP_ATTR_ENABLE_RDMA_READ
init|=
literal|1
operator|<<
literal|7
block|,
name|C4IW_QP_ATTR_ENABLE_RDMA_WRITE
init|=
literal|1
operator|<<
literal|8
block|,
name|C4IW_QP_ATTR_ENABLE_RDMA_BIND
init|=
literal|1
operator|<<
literal|9
block|,
name|C4IW_QP_ATTR_MAX_ORD
init|=
literal|1
operator|<<
literal|11
block|,
name|C4IW_QP_ATTR_MAX_IRD
init|=
literal|1
operator|<<
literal|12
block|,
name|C4IW_QP_ATTR_LLP_STREAM_HANDLE
init|=
literal|1
operator|<<
literal|22
block|,
name|C4IW_QP_ATTR_STREAM_MSG_BUFFER
init|=
literal|1
operator|<<
literal|23
block|,
name|C4IW_QP_ATTR_MPA_ATTR
init|=
literal|1
operator|<<
literal|24
block|,
name|C4IW_QP_ATTR_QP_CONTEXT_ACTIVATE
init|=
literal|1
operator|<<
literal|25
block|,
name|C4IW_QP_ATTR_VALID_MODIFY
init|=
operator|(
name|C4IW_QP_ATTR_ENABLE_RDMA_READ
operator||
name|C4IW_QP_ATTR_ENABLE_RDMA_WRITE
operator||
name|C4IW_QP_ATTR_MAX_ORD
operator||
name|C4IW_QP_ATTR_MAX_IRD
operator||
name|C4IW_QP_ATTR_LLP_STREAM_HANDLE
operator||
name|C4IW_QP_ATTR_STREAM_MSG_BUFFER
operator||
name|C4IW_QP_ATTR_MPA_ATTR
operator||
name|C4IW_QP_ATTR_QP_CONTEXT_ACTIVATE
operator|)
block|}
enum|;
end_enum

begin_function_decl
name|int
name|c4iw_modify_qp
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|struct
name|c4iw_qp
modifier|*
name|qhp
parameter_list|,
name|enum
name|c4iw_qp_attr_mask
name|mask
parameter_list|,
name|struct
name|c4iw_qp_attributes
modifier|*
name|attrs
parameter_list|,
name|int
name|internal
parameter_list|)
function_decl|;
end_function_decl

begin_enum
enum|enum
name|c4iw_qp_state
block|{
name|C4IW_QP_STATE_IDLE
block|,
name|C4IW_QP_STATE_RTS
block|,
name|C4IW_QP_STATE_ERROR
block|,
name|C4IW_QP_STATE_TERMINATE
block|,
name|C4IW_QP_STATE_CLOSING
block|,
name|C4IW_QP_STATE_TOT
block|}
enum|;
end_enum

begin_comment
comment|/*  * IW_CXGBE event bits.  * These bits are used for handling all events for a particular 'ep' serially.  */
end_comment

begin_define
define|#
directive|define
name|C4IW_EVENT_SOCKET
value|0x0001
end_define

begin_define
define|#
directive|define
name|C4IW_EVENT_TIMEOUT
value|0x0002
end_define

begin_define
define|#
directive|define
name|C4IW_EVENT_TERM
value|0x0004
end_define

begin_function
specifier|static
specifier|inline
name|int
name|c4iw_convert_state
parameter_list|(
name|enum
name|ib_qp_state
name|ib_state
parameter_list|)
block|{
switch|switch
condition|(
name|ib_state
condition|)
block|{
case|case
name|IB_QPS_RESET
case|:
case|case
name|IB_QPS_INIT
case|:
return|return
name|C4IW_QP_STATE_IDLE
return|;
case|case
name|IB_QPS_RTS
case|:
return|return
name|C4IW_QP_STATE_RTS
return|;
case|case
name|IB_QPS_SQD
case|:
return|return
name|C4IW_QP_STATE_CLOSING
return|;
case|case
name|IB_QPS_SQE
case|:
return|return
name|C4IW_QP_STATE_TERMINATE
return|;
case|case
name|IB_QPS_ERR
case|:
return|return
name|C4IW_QP_STATE_ERROR
return|;
default|default:
return|return
operator|-
literal|1
return|;
block|}
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|to_ib_qp_state
parameter_list|(
name|int
name|c4iw_qp_state
parameter_list|)
block|{
switch|switch
condition|(
name|c4iw_qp_state
condition|)
block|{
case|case
name|C4IW_QP_STATE_IDLE
case|:
return|return
name|IB_QPS_INIT
return|;
case|case
name|C4IW_QP_STATE_RTS
case|:
return|return
name|IB_QPS_RTS
return|;
case|case
name|C4IW_QP_STATE_CLOSING
case|:
return|return
name|IB_QPS_SQD
return|;
case|case
name|C4IW_QP_STATE_TERMINATE
case|:
return|return
name|IB_QPS_SQE
return|;
case|case
name|C4IW_QP_STATE_ERROR
case|:
return|return
name|IB_QPS_ERR
return|;
block|}
return|return
name|IB_QPS_ERR
return|;
block|}
end_function

begin_define
define|#
directive|define
name|C4IW_DRAIN_OPCODE
value|FW_RI_SGE_EC_CR_RETURN
end_define

begin_function
specifier|static
specifier|inline
name|u32
name|c4iw_ib_to_tpt_access
parameter_list|(
name|int
name|a
parameter_list|)
block|{
return|return
operator|(
name|a
operator|&
name|IB_ACCESS_REMOTE_WRITE
condition|?
name|FW_RI_MEM_ACCESS_REM_WRITE
else|:
literal|0
operator|)
operator||
operator|(
name|a
operator|&
name|IB_ACCESS_REMOTE_READ
condition|?
name|FW_RI_MEM_ACCESS_REM_READ
else|:
literal|0
operator|)
operator||
operator|(
name|a
operator|&
name|IB_ACCESS_LOCAL_WRITE
condition|?
name|FW_RI_MEM_ACCESS_LOCAL_WRITE
else|:
literal|0
operator|)
operator||
name|FW_RI_MEM_ACCESS_LOCAL_READ
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|u32
name|c4iw_ib_to_tpt_bind_access
parameter_list|(
name|int
name|acc
parameter_list|)
block|{
return|return
operator|(
name|acc
operator|&
name|IB_ACCESS_REMOTE_WRITE
condition|?
name|FW_RI_MEM_ACCESS_REM_WRITE
else|:
literal|0
operator|)
operator||
operator|(
name|acc
operator|&
name|IB_ACCESS_REMOTE_READ
condition|?
name|FW_RI_MEM_ACCESS_REM_READ
else|:
literal|0
operator|)
return|;
block|}
end_function

begin_enum
enum|enum
name|c4iw_mmid_state
block|{
name|C4IW_STAG_STATE_VALID
block|,
name|C4IW_STAG_STATE_INVALID
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|C4IW_NODE_DESC
value|"iw_cxgbe Chelsio Communications"
end_define

begin_define
define|#
directive|define
name|MPA_KEY_REQ
value|"MPA ID Req Frame"
end_define

begin_define
define|#
directive|define
name|MPA_KEY_REP
value|"MPA ID Rep Frame"
end_define

begin_define
define|#
directive|define
name|MPA_MAX_PRIVATE_DATA
value|256
end_define

begin_define
define|#
directive|define
name|MPA_ENHANCED_RDMA_CONN
value|0x10
end_define

begin_define
define|#
directive|define
name|MPA_REJECT
value|0x20
end_define

begin_define
define|#
directive|define
name|MPA_CRC
value|0x40
end_define

begin_define
define|#
directive|define
name|MPA_MARKERS
value|0x80
end_define

begin_define
define|#
directive|define
name|MPA_FLAGS_MASK
value|0xE0
end_define

begin_define
define|#
directive|define
name|MPA_V2_PEER2PEER_MODEL
value|0x8000
end_define

begin_define
define|#
directive|define
name|MPA_V2_ZERO_LEN_FPDU_RTR
value|0x4000
end_define

begin_define
define|#
directive|define
name|MPA_V2_RDMA_WRITE_RTR
value|0x8000
end_define

begin_define
define|#
directive|define
name|MPA_V2_RDMA_READ_RTR
value|0x4000
end_define

begin_define
define|#
directive|define
name|MPA_V2_IRD_ORD_MASK
value|0x3FFF
end_define

begin_define
define|#
directive|define
name|c4iw_put_ep
parameter_list|(
name|ep
parameter_list|)
value|{ \ 	CTR4(KTR_IW_CXGBE, "put_ep (%s:%u) ep %p, refcnt %d", \ 	     __func__, __LINE__, ep, atomic_read(&(ep)->kref.refcount)); \ 	WARN_ON(atomic_read(&(ep)->kref.refcount)< 1); \         kref_put(&((ep)->kref), _c4iw_free_ep); \ }
end_define

begin_define
define|#
directive|define
name|c4iw_get_ep
parameter_list|(
name|ep
parameter_list|)
value|{ \ 	CTR4(KTR_IW_CXGBE, "get_ep (%s:%u) ep %p, refcnt %d", \ 	      __func__, __LINE__, ep, atomic_read(&(ep)->kref.refcount)); \         kref_get(&((ep)->kref));  \ }
end_define

begin_function_decl
name|void
name|_c4iw_free_ep
parameter_list|(
name|struct
name|kref
modifier|*
name|kref
parameter_list|)
function_decl|;
end_function_decl

begin_struct
struct|struct
name|mpa_message
block|{
name|u8
name|key
index|[
literal|16
index|]
decl_stmt|;
name|u8
name|flags
decl_stmt|;
name|u8
name|revision
decl_stmt|;
name|__be16
name|private_data_size
decl_stmt|;
name|u8
name|private_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mpa_v2_conn_params
block|{
name|__be16
name|ird
decl_stmt|;
name|__be16
name|ord
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|terminate_message
block|{
name|u8
name|layer_etype
decl_stmt|;
name|u8
name|ecode
decl_stmt|;
name|__be16
name|hdrct_rsvd
decl_stmt|;
name|u8
name|len_hdrs
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|TERM_MAX_LENGTH
value|(sizeof(struct terminate_message) + 2 + 18 + 28)
end_define

begin_enum
enum|enum
name|c4iw_layers_types
block|{
name|LAYER_RDMAP
init|=
literal|0x00
block|,
name|LAYER_DDP
init|=
literal|0x10
block|,
name|LAYER_MPA
init|=
literal|0x20
block|,
name|RDMAP_LOCAL_CATA
init|=
literal|0x00
block|,
name|RDMAP_REMOTE_PROT
init|=
literal|0x01
block|,
name|RDMAP_REMOTE_OP
init|=
literal|0x02
block|,
name|DDP_LOCAL_CATA
init|=
literal|0x00
block|,
name|DDP_TAGGED_ERR
init|=
literal|0x01
block|,
name|DDP_UNTAGGED_ERR
init|=
literal|0x02
block|,
name|DDP_LLP
init|=
literal|0x03
block|}
enum|;
end_enum

begin_enum
enum|enum
name|c4iw_rdma_ecodes
block|{
name|RDMAP_INV_STAG
init|=
literal|0x00
block|,
name|RDMAP_BASE_BOUNDS
init|=
literal|0x01
block|,
name|RDMAP_ACC_VIOL
init|=
literal|0x02
block|,
name|RDMAP_STAG_NOT_ASSOC
init|=
literal|0x03
block|,
name|RDMAP_TO_WRAP
init|=
literal|0x04
block|,
name|RDMAP_INV_VERS
init|=
literal|0x05
block|,
name|RDMAP_INV_OPCODE
init|=
literal|0x06
block|,
name|RDMAP_STREAM_CATA
init|=
literal|0x07
block|,
name|RDMAP_GLOBAL_CATA
init|=
literal|0x08
block|,
name|RDMAP_CANT_INV_STAG
init|=
literal|0x09
block|,
name|RDMAP_UNSPECIFIED
init|=
literal|0xff
block|}
enum|;
end_enum

begin_enum
enum|enum
name|c4iw_ddp_ecodes
block|{
name|DDPT_INV_STAG
init|=
literal|0x00
block|,
name|DDPT_BASE_BOUNDS
init|=
literal|0x01
block|,
name|DDPT_STAG_NOT_ASSOC
init|=
literal|0x02
block|,
name|DDPT_TO_WRAP
init|=
literal|0x03
block|,
name|DDPT_INV_VERS
init|=
literal|0x04
block|,
name|DDPU_INV_QN
init|=
literal|0x01
block|,
name|DDPU_INV_MSN_NOBUF
init|=
literal|0x02
block|,
name|DDPU_INV_MSN_RANGE
init|=
literal|0x03
block|,
name|DDPU_INV_MO
init|=
literal|0x04
block|,
name|DDPU_MSG_TOOBIG
init|=
literal|0x05
block|,
name|DDPU_INV_VERS
init|=
literal|0x06
block|}
enum|;
end_enum

begin_enum
enum|enum
name|c4iw_mpa_ecodes
block|{
name|MPA_CRC_ERR
init|=
literal|0x02
block|,
name|MPA_MARKER_ERR
init|=
literal|0x03
block|,
name|MPA_LOCAL_CATA
init|=
literal|0x05
block|,
name|MPA_INSUFF_IRD
init|=
literal|0x06
block|,
name|MPA_NOMATCH_RTR
init|=
literal|0x07
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|c4iw_ep_state
block|{
name|IDLE
init|=
literal|0
block|,
name|LISTEN
block|,
name|CONNECTING
block|,
name|MPA_REQ_WAIT
block|,
name|MPA_REQ_SENT
block|,
name|MPA_REQ_RCVD
block|,
name|MPA_REP_SENT
block|,
name|FPDU_MODE
block|,
name|ABORTING
block|,
name|CLOSING
block|,
name|MORIBUND
block|,
name|DEAD
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|c4iw_ep_flags
block|{
name|PEER_ABORT_IN_PROGRESS
init|=
literal|0
block|,
name|ABORT_REQ_IN_PROGRESS
init|=
literal|1
block|,
name|RELEASE_RESOURCES
init|=
literal|2
block|,
name|CLOSE_SENT
init|=
literal|3
block|,
name|TIMEOUT
init|=
literal|4
block|,
name|QP_REFERENCED
init|=
literal|5
block|,
name|STOP_MPA_TIMER
init|=
literal|7
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|c4iw_ep_history
block|{
name|ACT_OPEN_REQ
init|=
literal|0
block|,
name|ACT_OFLD_CONN
init|=
literal|1
block|,
name|ACT_OPEN_RPL
init|=
literal|2
block|,
name|ACT_ESTAB
init|=
literal|3
block|,
name|PASS_ACCEPT_REQ
init|=
literal|4
block|,
name|PASS_ESTAB
init|=
literal|5
block|,
name|ABORT_UPCALL
init|=
literal|6
block|,
name|ESTAB_UPCALL
init|=
literal|7
block|,
name|CLOSE_UPCALL
init|=
literal|8
block|,
name|ULP_ACCEPT
init|=
literal|9
block|,
name|ULP_REJECT
init|=
literal|10
block|,
name|TIMEDOUT
init|=
literal|11
block|,
name|PEER_ABORT
init|=
literal|12
block|,
name|PEER_CLOSE
init|=
literal|13
block|,
name|CONNREQ_UPCALL
init|=
literal|14
block|,
name|ABORT_CONN
init|=
literal|15
block|,
name|DISCONN_UPCALL
init|=
literal|16
block|,
name|EP_DISC_CLOSE
init|=
literal|17
block|,
name|EP_DISC_ABORT
init|=
literal|18
block|,
name|CONN_RPL_UPCALL
init|=
literal|19
block|,
name|ACT_RETRY_NOMEM
init|=
literal|20
block|,
name|ACT_RETRY_INUSE
init|=
literal|21
block|,
name|CLOSE_CON_RPL
init|=
literal|22
block|,
name|EP_DISC_FAIL
init|=
literal|24
block|,
name|QP_REFED
init|=
literal|25
block|,
name|QP_DEREFED
init|=
literal|26
block|,
name|CM_ID_REFED
init|=
literal|27
block|,
name|CM_ID_DEREFED
init|=
literal|28
block|}
enum|;
end_enum

begin_struct
struct|struct
name|c4iw_ep_common
block|{
name|TAILQ_ENTRY
argument_list|(
argument|c4iw_ep_common
argument_list|)
name|entry
expr_stmt|;
comment|/* Work queue attachment */
name|struct
name|iw_cm_id
modifier|*
name|cm_id
decl_stmt|;
name|struct
name|c4iw_qp
modifier|*
name|qp
decl_stmt|;
name|struct
name|c4iw_dev
modifier|*
name|dev
decl_stmt|;
name|enum
name|c4iw_ep_state
name|state
decl_stmt|;
name|struct
name|kref
name|kref
decl_stmt|;
name|struct
name|mutex
name|mutex
decl_stmt|;
name|struct
name|sockaddr_storage
name|local_addr
decl_stmt|;
name|struct
name|sockaddr_storage
name|remote_addr
decl_stmt|;
name|struct
name|c4iw_wr_wait
name|wr_wait
decl_stmt|;
name|unsigned
name|long
name|flags
decl_stmt|;
name|unsigned
name|long
name|history
decl_stmt|;
name|int
name|rpl_err
decl_stmt|;
name|int
name|rpl_done
decl_stmt|;
name|struct
name|thread
modifier|*
name|thread
decl_stmt|;
name|struct
name|socket
modifier|*
name|so
decl_stmt|;
name|int
name|ep_events
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_listen_ep
block|{
name|struct
name|c4iw_ep_common
name|com
decl_stmt|;
name|unsigned
name|int
name|stid
decl_stmt|;
name|int
name|backlog
decl_stmt|;
name|struct
name|list_head
name|listen_ep_list
decl_stmt|;
comment|/* list of all listener ep's bound 					     to one port address */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_ep
block|{
name|struct
name|c4iw_ep_common
name|com
decl_stmt|;
name|struct
name|c4iw_listen_ep
modifier|*
name|parent_ep
decl_stmt|;
name|struct
name|timer_list
name|timer
decl_stmt|;
name|unsigned
name|int
name|atid
decl_stmt|;
name|u32
name|hwtid
decl_stmt|;
name|u32
name|snd_seq
decl_stmt|;
name|u32
name|rcv_seq
decl_stmt|;
name|struct
name|l2t_entry
modifier|*
name|l2t
decl_stmt|;
name|struct
name|dst_entry
modifier|*
name|dst
decl_stmt|;
name|struct
name|c4iw_mpa_attributes
name|mpa_attr
decl_stmt|;
name|u8
name|mpa_pkt
index|[
sizeof|sizeof
argument_list|(
expr|struct
name|mpa_message
argument_list|)
operator|+
name|MPA_MAX_PRIVATE_DATA
index|]
decl_stmt|;
name|unsigned
name|int
name|mpa_pkt_len
decl_stmt|;
name|u32
name|ird
decl_stmt|;
name|u32
name|ord
decl_stmt|;
name|u32
name|smac_idx
decl_stmt|;
name|u32
name|tx_chan
decl_stmt|;
name|u32
name|mtu
decl_stmt|;
name|u16
name|mss
decl_stmt|;
name|u16
name|emss
decl_stmt|;
name|u16
name|plen
decl_stmt|;
name|u16
name|rss_qid
decl_stmt|;
name|u16
name|txq_idx
decl_stmt|;
name|u16
name|ctrlq_idx
decl_stmt|;
name|u8
name|tos
decl_stmt|;
name|u8
name|retry_with_mpa_v1
decl_stmt|;
name|u8
name|tried_with_mpa_v1
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_ep
modifier|*
name|to_ep
parameter_list|(
name|struct
name|iw_cm_id
modifier|*
name|cm_id
parameter_list|)
block|{
return|return
name|cm_id
operator|->
name|provider_data
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_listen_ep
modifier|*
name|to_listen_ep
parameter_list|(
name|struct
name|iw_cm_id
modifier|*
name|cm_id
parameter_list|)
block|{
return|return
name|cm_id
operator|->
name|provider_data
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|compute_wscale
parameter_list|(
name|int
name|win
parameter_list|)
block|{
name|int
name|wscale
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|wscale
operator|<
literal|14
operator|&&
operator|(
literal|65535
operator|<<
name|wscale
operator|)
operator|<
name|win
condition|)
name|wscale
operator|++
expr_stmt|;
return|return
name|wscale
return|;
block|}
end_function

begin_function_decl
name|u32
name|c4iw_id_alloc
parameter_list|(
name|struct
name|c4iw_id_table
modifier|*
name|alloc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_id_free
parameter_list|(
name|struct
name|c4iw_id_table
modifier|*
name|alloc
parameter_list|,
name|u32
name|obj
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_id_table_alloc
parameter_list|(
name|struct
name|c4iw_id_table
modifier|*
name|alloc
parameter_list|,
name|u32
name|start
parameter_list|,
name|u32
name|num
parameter_list|,
name|u32
name|reserved
parameter_list|,
name|u32
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_id_table_free
parameter_list|(
name|struct
name|c4iw_id_table
modifier|*
name|alloc
parameter_list|)
function_decl|;
end_function_decl

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|c4iw_handler_func
function_decl|)
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m
parameter_list|)
function_decl|;
end_typedef

begin_function_decl
name|int
name|c4iw_ep_redirect
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|struct
name|dst_entry
modifier|*
name|old
parameter_list|,
name|struct
name|dst_entry
modifier|*
name|new
parameter_list|,
name|struct
name|l2t_entry
modifier|*
name|l2t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_put_qpid
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|u32
name|qpid
parameter_list|,
name|struct
name|c4iw_dev_ucontext
modifier|*
name|uctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|c4iw_get_resource
parameter_list|(
name|struct
name|c4iw_id_table
modifier|*
name|id_table
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_put_resource
parameter_list|(
name|struct
name|c4iw_id_table
modifier|*
name|id_table
parameter_list|,
name|u32
name|entry
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_init_resource
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|u32
name|nr_tpt
parameter_list|,
name|u32
name|nr_pdid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_init_ctrl_qp
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_pblpool_create
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_rqtpool_create
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_pblpool_destroy
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_rqtpool_destroy
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_destroy_resource
parameter_list|(
name|struct
name|c4iw_resource
modifier|*
name|rscp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_destroy_ctrl_qp
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_register_device
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_unregister_device
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__init
name|c4iw_cm_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__exit
name|c4iw_cm_term
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_release_dev_ucontext
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|struct
name|c4iw_dev_ucontext
modifier|*
name|uctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_init_dev_ucontext
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|struct
name|c4iw_dev_ucontext
modifier|*
name|uctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_poll_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|,
name|int
name|num_entries
parameter_list|,
name|struct
name|ib_wc
modifier|*
name|wc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_post_send
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ib_send_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ib_send_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_post_receive
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ib_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ib_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_connect
parameter_list|(
name|struct
name|iw_cm_id
modifier|*
name|cm_id
parameter_list|,
name|struct
name|iw_cm_conn_param
modifier|*
name|conn_param
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_create_listen
parameter_list|(
name|struct
name|iw_cm_id
modifier|*
name|cm_id
parameter_list|,
name|int
name|backlog
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_destroy_listen
parameter_list|(
name|struct
name|iw_cm_id
modifier|*
name|cm_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_accept_cr
parameter_list|(
name|struct
name|iw_cm_id
modifier|*
name|cm_id
parameter_list|,
name|struct
name|iw_cm_conn_param
modifier|*
name|conn_param
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_reject_cr
parameter_list|(
name|struct
name|iw_cm_id
modifier|*
name|cm_id
parameter_list|,
specifier|const
name|void
modifier|*
name|pdata
parameter_list|,
name|u8
name|pdata_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_qp_add_ref
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_qp_rem_ref
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mr
modifier|*
name|c4iw_alloc_mr
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|enum
name|ib_mr_type
name|mr_type
parameter_list|,
name|u32
name|max_num_sg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_map_mr_sg
parameter_list|(
name|struct
name|ib_mr
modifier|*
name|ibmr
parameter_list|,
name|struct
name|scatterlist
modifier|*
name|sg
parameter_list|,
name|int
name|sg_nents
parameter_list|,
name|unsigned
name|int
modifier|*
name|sg_offset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_dealloc_mw
parameter_list|(
name|struct
name|ib_mw
modifier|*
name|mw
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mw
modifier|*
name|c4iw_alloc_mw
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|enum
name|ib_mw_type
name|type
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mr
modifier|*
name|c4iw_reg_user_mr
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|u64
name|start
parameter_list|,
name|u64
name|length
parameter_list|,
name|u64
name|virt
parameter_list|,
name|int
name|acc
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_mr
modifier|*
name|c4iw_get_dma_mr
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|int
name|acc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_dereg_mr
parameter_list|(
name|struct
name|ib_mr
modifier|*
name|ib_mr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_invalidate_mr
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|u32
name|rkey
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_destroy_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ib_cq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_cq
modifier|*
name|c4iw_create_cq
parameter_list|(
name|struct
name|ib_device
modifier|*
name|ibdev
parameter_list|,
specifier|const
name|struct
name|ib_cq_init_attr
modifier|*
name|attr
parameter_list|,
name|struct
name|ib_ucontext
modifier|*
name|ib_context
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_resize_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|cq
parameter_list|,
name|int
name|cqe
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_arm_cq
parameter_list|(
name|struct
name|ib_cq
modifier|*
name|ibcq
parameter_list|,
name|enum
name|ib_cq_notify_flags
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_destroy_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ib_qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_qp
modifier|*
name|c4iw_create_qp
parameter_list|(
name|struct
name|ib_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ib_qp_init_attr
modifier|*
name|attrs
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_ib_modify_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ib_qp_attr
modifier|*
name|attr
parameter_list|,
name|int
name|attr_mask
parameter_list|,
name|struct
name|ib_udata
modifier|*
name|udata
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_ib_query_qp
parameter_list|(
name|struct
name|ib_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ib_qp_attr
modifier|*
name|attr
parameter_list|,
name|int
name|attr_mask
parameter_list|,
name|struct
name|ib_qp_init_attr
modifier|*
name|init_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ib_qp
modifier|*
name|c4iw_get_qp
parameter_list|(
name|struct
name|ib_device
modifier|*
name|dev
parameter_list|,
name|int
name|qpn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|c4iw_rqtpool_alloc
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_rqtpool_free
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|u32
name|addr
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|c4iw_pblpool_alloc
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_pblpool_free
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|u32
name|addr
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_ofld_send
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_flush_hw_cq
parameter_list|(
name|struct
name|c4iw_cq
modifier|*
name|cq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_count_rcqes
parameter_list|(
name|struct
name|t4_cq
modifier|*
name|cq
parameter_list|,
name|struct
name|t4_wq
modifier|*
name|wq
parameter_list|,
name|int
modifier|*
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_count_scqes
parameter_list|(
name|struct
name|t4_cq
modifier|*
name|cq
parameter_list|,
name|struct
name|t4_wq
modifier|*
name|wq
parameter_list|,
name|int
modifier|*
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_ep_disconnect
parameter_list|(
name|struct
name|c4iw_ep
modifier|*
name|ep
parameter_list|,
name|int
name|abrupt
parameter_list|,
name|gfp_t
name|gfp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|__c4iw_ep_disconnect
parameter_list|(
name|struct
name|c4iw_ep
modifier|*
name|ep
parameter_list|,
name|int
name|abrupt
parameter_list|,
name|gfp_t
name|gfp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_flush_rq
parameter_list|(
name|struct
name|t4_wq
modifier|*
name|wq
parameter_list|,
name|struct
name|t4_cq
modifier|*
name|cq
parameter_list|,
name|int
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_flush_sq
parameter_list|(
name|struct
name|c4iw_qp
modifier|*
name|qhp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_ev_handler
parameter_list|(
name|struct
name|sge_iq
modifier|*
parameter_list|,
specifier|const
name|struct
name|rsp_ctrl
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u16
name|c4iw_rqes_posted
parameter_list|(
name|struct
name|c4iw_qp
modifier|*
name|qhp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_post_terminate
parameter_list|(
name|struct
name|c4iw_qp
modifier|*
name|qhp
parameter_list|,
name|struct
name|t4_cqe
modifier|*
name|err_cqe
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|c4iw_get_cqid
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|struct
name|c4iw_dev_ucontext
modifier|*
name|uctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_put_cqid
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|u32
name|qid
parameter_list|,
name|struct
name|c4iw_dev_ucontext
modifier|*
name|uctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|c4iw_get_qpid
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|struct
name|c4iw_dev_ucontext
modifier|*
name|uctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_put_qpid
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|u32
name|qid
parameter_list|,
name|struct
name|c4iw_dev_ucontext
modifier|*
name|uctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_ev_dispatch
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|dev
parameter_list|,
name|struct
name|t4_cqe
modifier|*
name|err_cqe
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__iomem
modifier|*
name|c4iw_bar2_addrs
parameter_list|(
name|struct
name|c4iw_rdev
modifier|*
name|rdev
parameter_list|,
name|unsigned
name|int
name|qid
parameter_list|,
name|enum
name|t4_bar2_qtype
name|qtype
parameter_list|,
name|unsigned
name|int
modifier|*
name|pbar2_qid
parameter_list|,
name|u64
modifier|*
name|pbar2_pa
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|struct
name|cxgb4_client
name|t4c_client
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|c4iw_handler_func
name|c4iw_handlers
index|[
name|NUM_CPL_CMDS
index|]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|c4iw_max_read_depth
decl_stmt|;
end_decl_stmt

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__i386__
argument_list|)
operator|||
name|defined
argument_list|(
name|__amd64__
argument_list|)
end_if

begin_define
define|#
directive|define
name|L1_CACHE_BYTES
value|128
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|L1_CACHE_BYTES
value|32
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|your_reg_device
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|SGE_CTRLQ_NUM
value|0
end_define

begin_endif
endif|#
directive|endif
end_endif

end_unit

