begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2012, 2015 Chelsio Communications, Inc.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__CXGBEI_OFLD_H__
end_ifndef

begin_define
define|#
directive|define
name|__CXGBEI_OFLD_H__
end_define

begin_include
include|#
directive|include
file|<dev/iscsi/icl.h>
end_include

begin_enum
enum|enum
block|{
name|CWT_SLEEPING
init|=
literal|1
block|,
name|CWT_RUNNING
init|=
literal|2
block|,
name|CWT_STOP
init|=
literal|3
block|,
name|CWT_STOPPED
init|=
literal|4
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|cxgbei_worker_thread_softc
block|{
name|struct
name|mtx
name|cwt_lock
decl_stmt|;
name|struct
name|cv
name|cwt_cv
decl_stmt|;
specifier|volatile
name|int
name|cwt_state
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|icl_cxgbei_conn
argument_list|)
name|rx_head
expr_stmt|;
block|}
name|__aligned
argument_list|(
name|CACHE_LINE_SIZE
argument_list|)
struct|;
end_struct

begin_define
define|#
directive|define
name|CXGBEI_CONN_SIGNATURE
value|0x56788765
end_define

begin_enum
enum|enum
block|{
name|RXF_ACTIVE
init|=
literal|1
operator|<<
literal|0
block|,
comment|/* In the worker thread's queue */
block|}
enum|;
end_enum

begin_struct
struct|struct
name|icl_cxgbei_conn
block|{
name|struct
name|icl_conn
name|ic
decl_stmt|;
comment|/* cxgbei specific stuff goes here. */
name|uint32_t
name|icc_signature
decl_stmt|;
name|int
name|ulp_submode
decl_stmt|;
name|struct
name|adapter
modifier|*
name|sc
decl_stmt|;
name|struct
name|toepcb
modifier|*
name|toep
decl_stmt|;
comment|/* Receive related. */
name|u_int
name|rx_flags
decl_stmt|;
comment|/* protected by so_rcv lock */
name|u_int
name|cwt
decl_stmt|;
name|STAILQ_HEAD
argument_list|(
argument_list|,
argument|icl_pdu
argument_list|)
name|rcvd_pdus
expr_stmt|;
comment|/* protected by so_rcv lock */
name|TAILQ_ENTRY
argument_list|(
argument|icl_cxgbei_conn
argument_list|)
name|rx_link
expr_stmt|;
comment|/* protected by cwt lock */
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|icl_cxgbei_conn
modifier|*
name|ic_to_icc
parameter_list|(
name|struct
name|icl_conn
modifier|*
name|ic
parameter_list|)
block|{
return|return
operator|(
name|__containerof
argument_list|(
name|ic
argument_list|,
expr|struct
name|icl_cxgbei_conn
argument_list|,
name|ic
argument_list|)
operator|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|CXGBEI_PDU_SIGNATURE
value|0x12344321
end_define

begin_struct
struct|struct
name|icl_cxgbei_pdu
block|{
name|struct
name|icl_pdu
name|ip
decl_stmt|;
comment|/* cxgbei specific stuff goes here. */
name|uint32_t
name|icp_signature
decl_stmt|;
name|uint32_t
name|pdu_seq
decl_stmt|;
comment|/* For debug only */
name|u_int
name|pdu_flags
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|icl_cxgbei_pdu
modifier|*
name|ip_to_icp
parameter_list|(
name|struct
name|icl_pdu
modifier|*
name|ip
parameter_list|)
block|{
return|return
operator|(
name|__containerof
argument_list|(
name|ip
argument_list|,
expr|struct
name|icl_cxgbei_pdu
argument_list|,
name|ip
argument_list|)
operator|)
return|;
block|}
end_function

begin_struct
struct|struct
name|cxgbei_sgl
block|{
name|int
name|sg_flag
decl_stmt|;
name|void
modifier|*
name|sg_addr
decl_stmt|;
name|void
modifier|*
name|sg_dma_addr
decl_stmt|;
name|size_t
name|sg_offset
decl_stmt|;
name|size_t
name|sg_length
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|cxgbei_scsi_for_each_sg
parameter_list|(
name|_sgl
parameter_list|,
name|_sgel
parameter_list|,
name|_n
parameter_list|,
name|_i
parameter_list|)
define|\
value|for (_i = 0, _sgel = (cxgbei_sgl*) (_sgl); _i< _n; _i++, \                         _sgel++)
end_define

begin_define
define|#
directive|define
name|sg_dma_addr
parameter_list|(
name|_sgel
parameter_list|)
value|_sgel->sg_dma_addr
end_define

begin_define
define|#
directive|define
name|sg_virt
parameter_list|(
name|_sgel
parameter_list|)
value|_sgel->sg_addr
end_define

begin_define
define|#
directive|define
name|sg_len
parameter_list|(
name|_sgel
parameter_list|)
value|_sgel->sg_length
end_define

begin_define
define|#
directive|define
name|sg_off
parameter_list|(
name|_sgel
parameter_list|)
value|_sgel->sg_offset
end_define

begin_define
define|#
directive|define
name|sg_next
parameter_list|(
name|_sgel
parameter_list|)
value|_sgel + 1
end_define

begin_define
define|#
directive|define
name|SBUF_ULP_FLAG_HDR_RCVD
value|0x1
end_define

begin_define
define|#
directive|define
name|SBUF_ULP_FLAG_DATA_RCVD
value|0x2
end_define

begin_define
define|#
directive|define
name|SBUF_ULP_FLAG_STATUS_RCVD
value|0x4
end_define

begin_define
define|#
directive|define
name|SBUF_ULP_FLAG_HCRC_ERROR
value|0x10
end_define

begin_define
define|#
directive|define
name|SBUF_ULP_FLAG_DCRC_ERROR
value|0x20
end_define

begin_define
define|#
directive|define
name|SBUF_ULP_FLAG_PAD_ERROR
value|0x40
end_define

begin_define
define|#
directive|define
name|SBUF_ULP_FLAG_DATA_DDPED
value|0x80
end_define

begin_comment
comment|/* private data for each scsi task */
end_comment

begin_struct
struct|struct
name|cxgbei_task_data
block|{
name|struct
name|cxgbei_sgl
name|sgl
index|[
literal|256
index|]
decl_stmt|;
name|u_int
name|nsge
decl_stmt|;
name|u_int
name|sc_ddp_tag
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cxgbei_ulp2_tag_format
block|{
name|u_char
name|sw_bits
decl_stmt|;
name|u_char
name|rsvd_bits
decl_stmt|;
name|u_char
name|rsvd_shift
decl_stmt|;
name|u_char
name|filler
index|[
literal|1
index|]
decl_stmt|;
name|uint32_t
name|rsvd_mask
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cxgbei_data
block|{
name|u_int
name|max_txsz
decl_stmt|;
name|u_int
name|max_rxsz
decl_stmt|;
name|u_int
name|llimit
decl_stmt|;
name|u_int
name|ulimit
decl_stmt|;
name|u_int
name|nppods
decl_stmt|;
name|u_int
name|idx_last
decl_stmt|;
name|u_char
name|idx_bits
decl_stmt|;
name|uint32_t
name|idx_mask
decl_stmt|;
name|uint32_t
name|rsvd_tag_mask
decl_stmt|;
name|struct
name|mtx
name|map_lock
decl_stmt|;
name|bus_dma_tag_t
name|ulp_ddp_tag
decl_stmt|;
name|unsigned
name|char
modifier|*
name|colors
decl_stmt|;
name|struct
name|cxgbei_ulp2_gather_list
modifier|*
modifier|*
name|gl_map
decl_stmt|;
name|struct
name|cxgbei_ulp2_tag_format
name|tag_format
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|void
name|cxgbei_conn_task_reserve_itt
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|unsigned
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cxgbei_conn_transfer_reserve_ttt
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|unsigned
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cxgbei_cleanup_task
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u_int
name|cxgbei_select_worker_thread
parameter_list|(
name|struct
name|icl_cxgbei_conn
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_struct_decl
struct_decl|struct
name|cxgbei_ulp2_pagepod_hdr
struct_decl|;
end_struct_decl

begin_function_decl
name|int
name|t4_ddp_set_map
parameter_list|(
name|struct
name|cxgbei_data
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|cxgbei_ulp2_pagepod_hdr
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|u_int
parameter_list|,
name|struct
name|cxgbei_ulp2_gather_list
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_ddp_clear_map
parameter_list|(
name|struct
name|cxgbei_data
modifier|*
parameter_list|,
name|struct
name|cxgbei_ulp2_gather_list
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|u_int
parameter_list|,
name|u_int
parameter_list|,
name|struct
name|icl_cxgbei_conn
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

