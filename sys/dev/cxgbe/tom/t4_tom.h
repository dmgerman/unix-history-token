begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2012 Chelsio Communications, Inc.  * All rights reserved.  * Written by: Navdeep Parhar<np@FreeBSD.org>  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__T4_TOM_H__
end_ifndef

begin_define
define|#
directive|define
name|__T4_TOM_H__
end_define

begin_define
define|#
directive|define
name|KTR_CXGBE
value|KTR_SPARE3
end_define

begin_define
define|#
directive|define
name|LISTEN_HASH_SIZE
value|32
end_define

begin_comment
comment|/*  * Min receive window.  We want it to be large enough to accommodate receive  * coalescing, handle jumbo frames, and not trigger sender SWS avoidance.  */
end_comment

begin_define
define|#
directive|define
name|MIN_RCV_WND
value|(24 * 1024U)
end_define

begin_comment
comment|/*  * Max receive window supported by HW in bytes.  Only a small part of it can  * be set through option0, the rest needs to be set through RX_DATA_ACK.  */
end_comment

begin_define
define|#
directive|define
name|MAX_RCV_WND
value|((1U<< 27) - 1)
end_define

begin_comment
comment|/* TOE PCB flags */
end_comment

begin_enum
enum|enum
block|{
name|TPF_ATTACHED
block|,
comment|/* a tcpcb refers to this toepcb */
name|TPF_FLOWC_WR_SENT
block|,
comment|/* firmware flow context WR sent */
name|TPF_TX_DATA_SENT
block|,
comment|/* some data sent */
name|TPF_TX_SUSPENDED
block|,
comment|/* tx suspended for lack of resources */
name|TPF_SEND_FIN
block|,
comment|/* send FIN after sending all pending data */
name|TPF_FIN_SENT
block|,
comment|/* FIN has been sent */
name|TPF_ABORT_SHUTDOWN
block|,
comment|/* connection abort is in progress */
name|TPF_CPL_PENDING
block|,
comment|/* haven't received the last CPL */
name|TPF_SYNQE
block|,
comment|/* synq_entry, not really a toepcb */
name|TPF_SYNQE_NEEDFREE
block|,
comment|/* synq_entry was allocated externally */
block|}
enum|;
end_enum

begin_struct
struct|struct
name|ofld_tx_sdesc
block|{
name|uint32_t
name|plen
decl_stmt|;
comment|/* payload length */
name|uint8_t
name|tx_credits
decl_stmt|;
comment|/* firmware tx credits (unit is 16B) */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|toepcb
block|{
name|TAILQ_ENTRY
argument_list|(
argument|toepcb
argument_list|)
name|link
expr_stmt|;
comment|/* toep_list */
name|unsigned
name|int
name|flags
decl_stmt|;
comment|/* miscellaneous flags */
name|struct
name|tom_data
modifier|*
name|td
decl_stmt|;
name|struct
name|inpcb
modifier|*
name|inp
decl_stmt|;
comment|/* backpointer to host stack's PCB */
name|struct
name|port_info
modifier|*
name|port
decl_stmt|;
comment|/* physical port */
name|struct
name|sge_wrq
modifier|*
name|ofld_txq
decl_stmt|;
name|struct
name|sge_ofld_rxq
modifier|*
name|ofld_rxq
decl_stmt|;
name|struct
name|sge_wrq
modifier|*
name|ctrlq
decl_stmt|;
name|struct
name|l2t_entry
modifier|*
name|l2te
decl_stmt|;
comment|/* L2 table entry used by this connection */
name|int
name|tid
decl_stmt|;
comment|/* Connection identifier */
name|unsigned
name|int
name|tx_credits
decl_stmt|;
comment|/* tx WR credits (in 16 byte units) remaining */
name|unsigned
name|int
name|enqueued
decl_stmt|;
comment|/* # of bytes added to so_rcv (not yet read) */
name|int
name|rx_credits
decl_stmt|;
comment|/* rx credits (in bytes) to be returned to hw */
name|unsigned
name|int
name|ulp_mode
decl_stmt|;
comment|/* ULP mode */
comment|/* Tx software descriptor */
name|uint8_t
name|txsd_total
decl_stmt|;
name|uint8_t
name|txsd_pidx
decl_stmt|;
name|uint8_t
name|txsd_cidx
decl_stmt|;
name|uint8_t
name|txsd_avail
decl_stmt|;
name|struct
name|ofld_tx_sdesc
name|txsd
index|[]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|flowc_tx_params
block|{
name|uint32_t
name|snd_nxt
decl_stmt|;
name|uint32_t
name|rcv_nxt
decl_stmt|;
name|unsigned
name|int
name|snd_space
decl_stmt|;
name|unsigned
name|int
name|mss
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|int
name|toepcb_flag
parameter_list|(
name|struct
name|toepcb
modifier|*
name|toep
parameter_list|,
name|int
name|flag
parameter_list|)
block|{
return|return
name|isset
argument_list|(
operator|&
name|toep
operator|->
name|flags
argument_list|,
name|flag
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|toepcb_set_flag
parameter_list|(
name|struct
name|toepcb
modifier|*
name|toep
parameter_list|,
name|int
name|flag
parameter_list|)
block|{
name|setbit
argument_list|(
operator|&
name|toep
operator|->
name|flags
argument_list|,
name|flag
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|toepcb_clr_flag
parameter_list|(
name|struct
name|toepcb
modifier|*
name|toep
parameter_list|,
name|int
name|flag
parameter_list|)
block|{
name|clrbit
argument_list|(
operator|&
name|toep
operator|->
name|flags
argument_list|,
name|flag
argument_list|)
expr_stmt|;
block|}
end_function

begin_comment
comment|/*  * Compressed state for embryonic connections for a listener.  Barely fits in  * 64B, try not to grow it further.  */
end_comment

begin_struct
struct|struct
name|synq_entry
block|{
name|TAILQ_ENTRY
argument_list|(
argument|synq_entry
argument_list|)
name|link
expr_stmt|;
comment|/* listen_ctx's synq link */
name|int
name|flags
decl_stmt|;
comment|/* same as toepcb's tp_flags */
name|int
name|tid
decl_stmt|;
name|struct
name|listen_ctx
modifier|*
name|lctx
decl_stmt|;
comment|/* backpointer to listen ctx */
name|struct
name|mbuf
modifier|*
name|syn
decl_stmt|;
name|uint32_t
name|iss
decl_stmt|;
name|uint32_t
name|ts
decl_stmt|;
specifier|volatile
name|uintptr_t
name|wr
decl_stmt|;
specifier|volatile
name|u_int
name|refcnt
decl_stmt|;
name|uint16_t
name|l2e_idx
decl_stmt|;
name|uint16_t
name|rcv_bufsize
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|int
name|synqe_flag
parameter_list|(
name|struct
name|synq_entry
modifier|*
name|synqe
parameter_list|,
name|int
name|flag
parameter_list|)
block|{
return|return
name|isset
argument_list|(
operator|&
name|synqe
operator|->
name|flags
argument_list|,
name|flag
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|synqe_set_flag
parameter_list|(
name|struct
name|synq_entry
modifier|*
name|synqe
parameter_list|,
name|int
name|flag
parameter_list|)
block|{
name|setbit
argument_list|(
operator|&
name|synqe
operator|->
name|flags
argument_list|,
name|flag
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|synqe_clr_flag
parameter_list|(
name|struct
name|synq_entry
modifier|*
name|synqe
parameter_list|,
name|int
name|flag
parameter_list|)
block|{
name|clrbit
argument_list|(
operator|&
name|synqe
operator|->
name|flags
argument_list|,
name|flag
argument_list|)
expr_stmt|;
block|}
end_function

begin_comment
comment|/* listen_ctx flags */
end_comment

begin_define
define|#
directive|define
name|LCTX_RPL_PENDING
value|1
end_define

begin_comment
comment|/* waiting for a CPL_PASS_OPEN_RPL */
end_comment

begin_struct
struct|struct
name|listen_ctx
block|{
name|LIST_ENTRY
argument_list|(
argument|listen_ctx
argument_list|)
name|link
expr_stmt|;
comment|/* listen hash linkage */
specifier|volatile
name|int
name|refcount
decl_stmt|;
name|int
name|stid
decl_stmt|;
name|int
name|flags
decl_stmt|;
name|struct
name|inpcb
modifier|*
name|inp
decl_stmt|;
comment|/* listening socket's inp */
name|struct
name|sge_wrq
modifier|*
name|ctrlq
decl_stmt|;
name|struct
name|sge_ofld_rxq
modifier|*
name|ofld_rxq
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|synq_entry
argument_list|)
name|synq
expr_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|tom_data
block|{
name|struct
name|toedev
name|tod
decl_stmt|;
comment|/* toepcb's associated with this TOE device */
name|struct
name|mtx
name|toep_list_lock
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|toepcb
argument_list|)
name|toep_list
expr_stmt|;
name|LIST_HEAD
argument_list|(,
name|listen_ctx
argument_list|)
operator|*
name|listen_hash
expr_stmt|;
name|u_long
name|listen_mask
decl_stmt|;
name|int
name|lctx_count
decl_stmt|;
comment|/* # of lctx in the hash table */
name|struct
name|mtx
name|lctx_hash_lock
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|tom_data
modifier|*
name|tod_td
parameter_list|(
name|struct
name|toedev
modifier|*
name|tod
parameter_list|)
block|{
return|return
operator|(
name|member2struct
argument_list|(
name|tom_data
argument_list|,
name|tod
argument_list|,
name|tod
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|adapter
modifier|*
name|td_adapter
parameter_list|(
name|struct
name|tom_data
modifier|*
name|td
parameter_list|)
block|{
return|return
operator|(
name|td
operator|->
name|tod
operator|.
name|tod_softc
operator|)
return|;
block|}
end_function

begin_comment
comment|/* t4_tom.c */
end_comment

begin_function_decl
name|struct
name|toepcb
modifier|*
name|alloc_toepcb
parameter_list|(
name|struct
name|port_info
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|free_toepcb
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|offload_socket
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|,
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|undo_offload_socket
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|final_cpl_received
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|insert_tid
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|lookup_tid
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|update_tid
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|remove_tid
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|release_tid
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|sge_wrq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|find_best_mtu_idx
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|struct
name|in_conninfo
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u_long
name|select_rcv_wnd
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|select_rcv_wscale
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint64_t
name|calc_opt0
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|,
name|struct
name|port_info
modifier|*
parameter_list|,
name|struct
name|l2t_entry
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|select_ntuple
parameter_list|(
name|struct
name|port_info
modifier|*
parameter_list|,
name|struct
name|l2t_entry
modifier|*
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* t4_connect.c */
end_comment

begin_function_decl
name|void
name|t4_init_connect_cpl_handlers
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_connect
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|socket
modifier|*
parameter_list|,
name|struct
name|rtentry
modifier|*
parameter_list|,
name|struct
name|sockaddr
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* t4_listen.c */
end_comment

begin_function_decl
name|void
name|t4_init_listen_cpl_handlers
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_listen_start
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_listen_stop
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_syncache_added
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_syncache_removed
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_syncache_respond
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|do_abort_req_synqe
parameter_list|(
name|struct
name|sge_iq
modifier|*
parameter_list|,
specifier|const
name|struct
name|rss_header
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|do_abort_rpl_synqe
parameter_list|(
name|struct
name|sge_iq
modifier|*
parameter_list|,
specifier|const
name|struct
name|rss_header
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_offload_socket
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|socket
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* t4_cpl_io.c */
end_comment

begin_function_decl
name|void
name|t4_init_cpl_io_handlers
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_uninit_cpl_io_handlers
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|send_abort_rpl
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|struct
name|sge_wrq
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|send_flowc_wr
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|,
name|struct
name|flowc_tx_params
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|send_reset
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|struct
name|toepcb
modifier|*
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|make_established
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|,
name|uint32_t
parameter_list|,
name|uint32_t
parameter_list|,
name|uint16_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_rcvd
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_tod_output
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_send_fin
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_send_rst
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_set_tcb_field
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|struct
name|toepcb
modifier|*
parameter_list|,
name|uint16_t
parameter_list|,
name|uint64_t
parameter_list|,
name|uint64_t
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

