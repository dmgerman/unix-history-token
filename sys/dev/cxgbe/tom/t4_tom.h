begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2012, 2015 Chelsio Communications, Inc.  * All rights reserved.  * Written by: Navdeep Parhar<np@FreeBSD.org>  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__T4_TOM_H__
end_ifndef

begin_define
define|#
directive|define
name|__T4_TOM_H__
end_define

begin_include
include|#
directive|include
file|<sys/vmem.h>
end_include

begin_define
define|#
directive|define
name|LISTEN_HASH_SIZE
value|32
end_define

begin_comment
comment|/*  * Min receive window.  We want it to be large enough to accommodate receive  * coalescing, handle jumbo frames, and not trigger sender SWS avoidance.  */
end_comment

begin_define
define|#
directive|define
name|MIN_RCV_WND
value|(24 * 1024U)
end_define

begin_comment
comment|/*  * Max receive window supported by HW in bytes.  Only a small part of it can  * be set through option0, the rest needs to be set through RX_DATA_ACK.  */
end_comment

begin_define
define|#
directive|define
name|MAX_RCV_WND
value|((1U<< 27) - 1)
end_define

begin_define
define|#
directive|define
name|DDP_RSVD_WIN
value|(16 * 1024U)
end_define

begin_define
define|#
directive|define
name|SB_DDP_INDICATE
value|SB_IN_TOE
end_define

begin_comment
comment|/* soreceive must respond to indicate */
end_comment

begin_define
define|#
directive|define
name|USE_DDP_RX_FLOW_CONTROL
end_define

begin_define
define|#
directive|define
name|PPOD_SZ
parameter_list|(
name|n
parameter_list|)
value|((n) * sizeof(struct pagepod))
end_define

begin_define
define|#
directive|define
name|PPOD_SIZE
value|(PPOD_SZ(1))
end_define

begin_comment
comment|/* TOE PCB flags */
end_comment

begin_enum
enum|enum
block|{
name|TPF_ATTACHED
init|=
operator|(
literal|1
operator|<<
literal|0
operator|)
block|,
comment|/* a tcpcb refers to this toepcb */
name|TPF_FLOWC_WR_SENT
init|=
operator|(
literal|1
operator|<<
literal|1
operator|)
block|,
comment|/* firmware flow context WR sent */
name|TPF_TX_DATA_SENT
init|=
operator|(
literal|1
operator|<<
literal|2
operator|)
block|,
comment|/* some data sent */
name|TPF_TX_SUSPENDED
init|=
operator|(
literal|1
operator|<<
literal|3
operator|)
block|,
comment|/* tx suspended for lack of resources */
name|TPF_SEND_FIN
init|=
operator|(
literal|1
operator|<<
literal|4
operator|)
block|,
comment|/* send FIN after all pending data */
name|TPF_FIN_SENT
init|=
operator|(
literal|1
operator|<<
literal|5
operator|)
block|,
comment|/* FIN has been sent */
name|TPF_ABORT_SHUTDOWN
init|=
operator|(
literal|1
operator|<<
literal|6
operator|)
block|,
comment|/* connection abort is in progress */
name|TPF_CPL_PENDING
init|=
operator|(
literal|1
operator|<<
literal|7
operator|)
block|,
comment|/* haven't received the last CPL */
name|TPF_SYNQE
init|=
operator|(
literal|1
operator|<<
literal|8
operator|)
block|,
comment|/* synq_entry, not really a toepcb */
name|TPF_SYNQE_NEEDFREE
init|=
operator|(
literal|1
operator|<<
literal|9
operator|)
block|,
comment|/* synq_entry was malloc'd separately */
name|TPF_SYNQE_TCPDDP
init|=
operator|(
literal|1
operator|<<
literal|10
operator|)
block|,
comment|/* ulp_mode TCPDDP in toepcb */
name|TPF_SYNQE_EXPANDED
init|=
operator|(
literal|1
operator|<<
literal|11
operator|)
block|,
comment|/* toepcb ready, tid context updated */
name|TPF_SYNQE_HAS_L2TE
init|=
operator|(
literal|1
operator|<<
literal|12
operator|)
block|,
comment|/* we've replied to PASS_ACCEPT_REQ */
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|DDP_OK
init|=
operator|(
literal|1
operator|<<
literal|0
operator|)
block|,
comment|/* OK to turn on DDP */
name|DDP_SC_REQ
init|=
operator|(
literal|1
operator|<<
literal|1
operator|)
block|,
comment|/* state change (on/off) requested */
name|DDP_ON
init|=
operator|(
literal|1
operator|<<
literal|2
operator|)
block|,
comment|/* DDP is turned on */
name|DDP_BUF0_ACTIVE
init|=
operator|(
literal|1
operator|<<
literal|3
operator|)
block|,
comment|/* buffer 0 in use (not invalidated) */
name|DDP_BUF1_ACTIVE
init|=
operator|(
literal|1
operator|<<
literal|4
operator|)
block|,
comment|/* buffer 1 in use (not invalidated) */
name|DDP_TASK_ACTIVE
init|=
operator|(
literal|1
operator|<<
literal|5
operator|)
block|,
comment|/* requeue task is queued / running */
name|DDP_DEAD
init|=
operator|(
literal|1
operator|<<
literal|6
operator|)
block|,
comment|/* toepcb is shutting down */
block|}
enum|;
end_enum

begin_struct
struct|struct
name|ofld_tx_sdesc
block|{
name|uint32_t
name|plen
decl_stmt|;
comment|/* payload length */
name|uint8_t
name|tx_credits
decl_stmt|;
comment|/* firmware tx credits (unit is 16B) */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ppod_region
block|{
name|u_int
name|pr_start
decl_stmt|;
name|u_int
name|pr_len
decl_stmt|;
name|u_int
name|pr_page_shift
index|[
literal|4
index|]
decl_stmt|;
name|uint32_t
name|pr_tag_mask
decl_stmt|;
comment|/* hardware tagmask for this region. */
name|uint32_t
name|pr_invalid_bit
decl_stmt|;
comment|/* OR with this to invalidate tag. */
name|uint32_t
name|pr_alias_mask
decl_stmt|;
comment|/* AND with tag to get alias bits. */
name|u_int
name|pr_alias_shift
decl_stmt|;
comment|/* shift this much for first alias bit. */
name|vmem_t
modifier|*
name|pr_arena
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ppod_reservation
block|{
name|struct
name|ppod_region
modifier|*
name|prsv_pr
decl_stmt|;
name|uint32_t
name|prsv_tag
decl_stmt|;
comment|/* Full tag: pgsz, alias, tag, color */
name|u_int
name|prsv_nppods
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pageset
block|{
name|TAILQ_ENTRY
argument_list|(
argument|pageset
argument_list|)
name|link
expr_stmt|;
name|vm_page_t
modifier|*
name|pages
decl_stmt|;
name|int
name|npages
decl_stmt|;
name|int
name|flags
decl_stmt|;
name|int
name|offset
decl_stmt|;
comment|/* offset in first page */
name|int
name|len
decl_stmt|;
name|struct
name|ppod_reservation
name|prsv
decl_stmt|;
name|struct
name|vmspace
modifier|*
name|vm
decl_stmt|;
name|vm_offset_t
name|start
decl_stmt|;
name|u_int
name|vm_timestamp
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|TAILQ_HEAD
argument_list|(
name|pagesetq
argument_list|,
name|pageset
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|PS_WIRED
value|0x0001
end_define

begin_comment
comment|/* Pages wired rather than held. */
end_comment

begin_define
define|#
directive|define
name|PS_PPODS_WRITTEN
value|0x0002
end_define

begin_comment
comment|/* Page pods written to the card. */
end_comment

begin_define
define|#
directive|define
name|EXT_FLAG_AIOTX
value|EXT_FLAG_VENDOR1
end_define

begin_struct
struct|struct
name|ddp_buffer
block|{
name|struct
name|pageset
modifier|*
name|ps
decl_stmt|;
name|struct
name|kaiocb
modifier|*
name|job
decl_stmt|;
name|int
name|cancel_pending
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|aiotx_buffer
block|{
name|struct
name|pageset
name|ps
decl_stmt|;
name|struct
name|kaiocb
modifier|*
name|job
decl_stmt|;
name|int
name|refcount
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|toepcb
block|{
name|TAILQ_ENTRY
argument_list|(
argument|toepcb
argument_list|)
name|link
expr_stmt|;
comment|/* toep_list */
name|u_int
name|flags
decl_stmt|;
comment|/* miscellaneous flags */
name|int
name|refcount
decl_stmt|;
name|struct
name|tom_data
modifier|*
name|td
decl_stmt|;
name|struct
name|inpcb
modifier|*
name|inp
decl_stmt|;
comment|/* backpointer to host stack's PCB */
name|struct
name|vnet
modifier|*
name|vnet
decl_stmt|;
name|struct
name|vi_info
modifier|*
name|vi
decl_stmt|;
comment|/* virtual interface */
name|struct
name|sge_wrq
modifier|*
name|ofld_txq
decl_stmt|;
name|struct
name|sge_ofld_rxq
modifier|*
name|ofld_rxq
decl_stmt|;
name|struct
name|sge_wrq
modifier|*
name|ctrlq
decl_stmt|;
name|struct
name|l2t_entry
modifier|*
name|l2te
decl_stmt|;
comment|/* L2 table entry used by this connection */
name|struct
name|clip_entry
modifier|*
name|ce
decl_stmt|;
comment|/* CLIP table entry used by this tid */
name|int
name|tid
decl_stmt|;
comment|/* Connection identifier */
comment|/* tx credit handling */
name|u_int
name|tx_total
decl_stmt|;
comment|/* total tx WR credits (in 16B units) */
name|u_int
name|tx_credits
decl_stmt|;
comment|/* tx WR credits (in 16B units) available */
name|u_int
name|tx_nocompl
decl_stmt|;
comment|/* tx WR credits since last compl request */
name|u_int
name|plen_nocompl
decl_stmt|;
comment|/* payload since last compl request */
comment|/* rx credit handling */
name|u_int
name|sb_cc
decl_stmt|;
comment|/* last noted value of so_rcv->sb_cc */
name|int
name|rx_credits
decl_stmt|;
comment|/* rx credits (in bytes) to be returned to hw */
name|u_int
name|ulp_mode
decl_stmt|;
comment|/* ULP mode */
name|void
modifier|*
name|ulpcb
decl_stmt|;
name|void
modifier|*
name|ulpcb2
decl_stmt|;
name|struct
name|mbufq
name|ulp_pduq
decl_stmt|;
comment|/* PDUs waiting to be sent out. */
name|struct
name|mbufq
name|ulp_pdu_reclaimq
decl_stmt|;
name|u_int
name|ddp_flags
decl_stmt|;
name|struct
name|ddp_buffer
name|db
index|[
literal|2
index|]
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|pageset
argument_list|)
name|ddp_cached_pagesets
expr_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|kaiocb
argument_list|)
name|ddp_aiojobq
expr_stmt|;
name|u_int
name|ddp_waiting_count
decl_stmt|;
name|u_int
name|ddp_active_count
decl_stmt|;
name|u_int
name|ddp_cached_count
decl_stmt|;
name|int
name|ddp_active_id
decl_stmt|;
comment|/* the currently active DDP buffer */
name|struct
name|task
name|ddp_requeue_task
decl_stmt|;
name|struct
name|kaiocb
modifier|*
name|ddp_queueing
decl_stmt|;
name|struct
name|mtx
name|ddp_lock
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|kaiocb
argument_list|)
name|aiotx_jobq
expr_stmt|;
name|struct
name|task
name|aiotx_task
decl_stmt|;
name|bool
name|aiotx_task_active
decl_stmt|;
comment|/* Tx software descriptor */
name|uint8_t
name|txsd_total
decl_stmt|;
name|uint8_t
name|txsd_pidx
decl_stmt|;
name|uint8_t
name|txsd_cidx
decl_stmt|;
name|uint8_t
name|txsd_avail
decl_stmt|;
name|struct
name|ofld_tx_sdesc
name|txsd
index|[]
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|DDP_LOCK
parameter_list|(
name|toep
parameter_list|)
value|mtx_lock(&(toep)->ddp_lock)
end_define

begin_define
define|#
directive|define
name|DDP_UNLOCK
parameter_list|(
name|toep
parameter_list|)
value|mtx_unlock(&(toep)->ddp_lock)
end_define

begin_define
define|#
directive|define
name|DDP_ASSERT_LOCKED
parameter_list|(
name|toep
parameter_list|)
value|mtx_assert(&(toep)->ddp_lock, MA_OWNED)
end_define

begin_struct
struct|struct
name|flowc_tx_params
block|{
name|uint32_t
name|snd_nxt
decl_stmt|;
name|uint32_t
name|rcv_nxt
decl_stmt|;
name|unsigned
name|int
name|snd_space
decl_stmt|;
name|unsigned
name|int
name|mss
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|DDP_RETRY_WAIT
value|5
end_define

begin_comment
comment|/* seconds to wait before re-enabling DDP */
end_comment

begin_define
define|#
directive|define
name|DDP_LOW_SCORE
value|1
end_define

begin_define
define|#
directive|define
name|DDP_HIGH_SCORE
value|3
end_define

begin_comment
comment|/*  * Compressed state for embryonic connections for a listener.  Barely fits in  * 64B, try not to grow it further.  */
end_comment

begin_struct
struct|struct
name|synq_entry
block|{
name|TAILQ_ENTRY
argument_list|(
argument|synq_entry
argument_list|)
name|link
expr_stmt|;
comment|/* listen_ctx's synq link */
name|int
name|flags
decl_stmt|;
comment|/* same as toepcb's tp_flags */
name|int
name|tid
decl_stmt|;
name|struct
name|listen_ctx
modifier|*
name|lctx
decl_stmt|;
comment|/* backpointer to listen ctx */
name|struct
name|mbuf
modifier|*
name|syn
decl_stmt|;
name|uint32_t
name|iss
decl_stmt|;
name|uint32_t
name|ts
decl_stmt|;
specifier|volatile
name|uintptr_t
name|wr
decl_stmt|;
specifier|volatile
name|u_int
name|refcnt
decl_stmt|;
name|uint16_t
name|l2e_idx
decl_stmt|;
name|uint16_t
name|rcv_bufsize
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* listen_ctx flags */
end_comment

begin_define
define|#
directive|define
name|LCTX_RPL_PENDING
value|1
end_define

begin_comment
comment|/* waiting for a CPL_PASS_OPEN_RPL */
end_comment

begin_struct
struct|struct
name|listen_ctx
block|{
name|LIST_ENTRY
argument_list|(
argument|listen_ctx
argument_list|)
name|link
expr_stmt|;
comment|/* listen hash linkage */
specifier|volatile
name|int
name|refcount
decl_stmt|;
name|int
name|stid
decl_stmt|;
name|struct
name|stid_region
name|stid_region
decl_stmt|;
name|int
name|flags
decl_stmt|;
name|struct
name|inpcb
modifier|*
name|inp
decl_stmt|;
comment|/* listening socket's inp */
name|struct
name|vnet
modifier|*
name|vnet
decl_stmt|;
name|struct
name|sge_wrq
modifier|*
name|ctrlq
decl_stmt|;
name|struct
name|sge_ofld_rxq
modifier|*
name|ofld_rxq
decl_stmt|;
name|struct
name|clip_entry
modifier|*
name|ce
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|synq_entry
argument_list|)
name|synq
expr_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|clip_entry
block|{
name|TAILQ_ENTRY
argument_list|(
argument|clip_entry
argument_list|)
name|link
expr_stmt|;
name|struct
name|in6_addr
name|lip
decl_stmt|;
comment|/* local IPv6 address */
name|u_int
name|refcount
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|TAILQ_HEAD
argument_list|(
name|clip_head
argument_list|,
name|clip_entry
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|tom_data
block|{
name|struct
name|toedev
name|tod
decl_stmt|;
comment|/* toepcb's associated with this TOE device */
name|struct
name|mtx
name|toep_list_lock
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|toepcb
argument_list|)
name|toep_list
expr_stmt|;
name|struct
name|mtx
name|lctx_hash_lock
decl_stmt|;
name|LIST_HEAD
argument_list|(,
name|listen_ctx
argument_list|)
operator|*
name|listen_hash
expr_stmt|;
name|u_long
name|listen_mask
decl_stmt|;
name|int
name|lctx_count
decl_stmt|;
comment|/* # of lctx in the hash table */
name|struct
name|ppod_region
name|pr
decl_stmt|;
name|struct
name|mtx
name|clip_table_lock
decl_stmt|;
name|struct
name|clip_head
name|clip_table
decl_stmt|;
name|int
name|clip_gen
decl_stmt|;
comment|/* WRs that will not be sent to the chip because L2 resolution failed */
name|struct
name|mtx
name|unsent_wr_lock
decl_stmt|;
name|STAILQ_HEAD
argument_list|(
argument_list|,
argument|wrqe
argument_list|)
name|unsent_wr_list
expr_stmt|;
name|struct
name|task
name|reclaim_wr_resources
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|tom_data
modifier|*
name|tod_td
parameter_list|(
name|struct
name|toedev
modifier|*
name|tod
parameter_list|)
block|{
return|return
operator|(
name|__containerof
argument_list|(
name|tod
argument_list|,
expr|struct
name|tom_data
argument_list|,
name|tod
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|adapter
modifier|*
name|td_adapter
parameter_list|(
name|struct
name|tom_data
modifier|*
name|td
parameter_list|)
block|{
return|return
operator|(
name|td
operator|->
name|tod
operator|.
name|tod_softc
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|set_mbuf_ulp_submode
parameter_list|(
name|struct
name|mbuf
modifier|*
name|m
parameter_list|,
name|uint8_t
name|ulp_submode
parameter_list|)
block|{
name|M_ASSERTPKTHDR
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|m
operator|->
name|m_pkthdr
operator|.
name|PH_per
operator|.
name|eight
index|[
literal|0
index|]
operator|=
name|ulp_submode
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|uint8_t
name|mbuf_ulp_submode
parameter_list|(
name|struct
name|mbuf
modifier|*
name|m
parameter_list|)
block|{
name|M_ASSERTPKTHDR
argument_list|(
name|m
argument_list|)
expr_stmt|;
return|return
operator|(
name|m
operator|->
name|m_pkthdr
operator|.
name|PH_per
operator|.
name|eight
index|[
literal|0
index|]
operator|)
return|;
block|}
end_function

begin_comment
comment|/* t4_tom.c */
end_comment

begin_function_decl
name|struct
name|toepcb
modifier|*
name|alloc_toepcb
parameter_list|(
name|struct
name|vi_info
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|toepcb
modifier|*
name|hold_toepcb
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|free_toepcb
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|offload_socket
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|,
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|undo_offload_socket
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|final_cpl_received
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|insert_tid
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|lookup_tid
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|update_tid
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|remove_tid
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|release_tid
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|sge_wrq
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|find_best_mtu_idx
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|struct
name|in_conninfo
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u_long
name|select_rcv_wnd
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|select_rcv_wscale
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint64_t
name|calc_opt0
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|,
name|struct
name|vi_info
modifier|*
parameter_list|,
name|struct
name|l2t_entry
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint64_t
name|select_ntuple
parameter_list|(
name|struct
name|vi_info
modifier|*
parameter_list|,
name|struct
name|l2t_entry
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_tcpddp_ulp_mode
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|negative_advice
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|clip_entry
modifier|*
name|hold_lip
parameter_list|(
name|struct
name|tom_data
modifier|*
parameter_list|,
name|struct
name|in6_addr
modifier|*
parameter_list|,
name|struct
name|clip_entry
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|release_lip
parameter_list|(
name|struct
name|tom_data
modifier|*
parameter_list|,
name|struct
name|clip_entry
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* t4_connect.c */
end_comment

begin_function_decl
name|void
name|t4_init_connect_cpl_handlers
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_uninit_connect_cpl_handlers
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_connect
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|socket
modifier|*
parameter_list|,
name|struct
name|rtentry
modifier|*
parameter_list|,
name|struct
name|sockaddr
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|act_open_failure_cleanup
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|u_int
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* t4_listen.c */
end_comment

begin_function_decl
name|void
name|t4_init_listen_cpl_handlers
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_uninit_listen_cpl_handlers
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_listen_start
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_listen_stop
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_syncache_added
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_syncache_removed
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_syncache_respond
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|do_abort_req_synqe
parameter_list|(
name|struct
name|sge_iq
modifier|*
parameter_list|,
specifier|const
name|struct
name|rss_header
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|do_abort_rpl_synqe
parameter_list|(
name|struct
name|sge_iq
modifier|*
parameter_list|,
specifier|const
name|struct
name|rss_header
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_offload_socket
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|struct
name|socket
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* t4_cpl_io.c */
end_comment

begin_function_decl
name|void
name|aiotx_init_toep
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_aio_queue_aiotx
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|,
name|struct
name|kaiocb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_init_cpl_io_handlers
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_uninit_cpl_io_handlers
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|send_abort_rpl
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|struct
name|sge_wrq
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|send_flowc_wr
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|,
name|struct
name|flowc_tx_params
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|send_reset
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|struct
name|toepcb
modifier|*
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|make_established
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|,
name|uint32_t
parameter_list|,
name|uint32_t
parameter_list|,
name|uint16_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_rcvd
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_rcvd_locked
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_tod_output
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_send_fin
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_send_rst
parameter_list|(
name|struct
name|toedev
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_set_tcb_field
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|struct
name|sge_wrq
modifier|*
parameter_list|,
name|int
parameter_list|,
name|uint16_t
parameter_list|,
name|uint64_t
parameter_list|,
name|uint64_t
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_push_frames
parameter_list|(
name|struct
name|adapter
modifier|*
name|sc
parameter_list|,
name|struct
name|toepcb
modifier|*
name|toep
parameter_list|,
name|int
name|drop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_push_pdus
parameter_list|(
name|struct
name|adapter
modifier|*
name|sc
parameter_list|,
name|struct
name|toepcb
modifier|*
name|toep
parameter_list|,
name|int
name|drop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|do_set_tcb_rpl
parameter_list|(
name|struct
name|sge_iq
modifier|*
parameter_list|,
specifier|const
name|struct
name|rss_header
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* t4_ddp.c */
end_comment

begin_function_decl
name|int
name|t4_init_ppod_region
parameter_list|(
name|struct
name|ppod_region
modifier|*
parameter_list|,
name|struct
name|t4_range
modifier|*
parameter_list|,
name|u_int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_free_ppod_region
parameter_list|(
name|struct
name|ppod_region
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_alloc_page_pods_for_ps
parameter_list|(
name|struct
name|ppod_region
modifier|*
parameter_list|,
name|struct
name|pageset
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_alloc_page_pods_for_buf
parameter_list|(
name|struct
name|ppod_region
modifier|*
parameter_list|,
name|vm_offset_t
parameter_list|,
name|int
parameter_list|,
name|struct
name|ppod_reservation
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_write_page_pods_for_ps
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|struct
name|sge_wrq
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|pageset
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_write_page_pods_for_buf
parameter_list|(
name|struct
name|adapter
modifier|*
parameter_list|,
name|struct
name|sge_wrq
modifier|*
parameter_list|,
name|int
name|tid
parameter_list|,
name|struct
name|ppod_reservation
modifier|*
parameter_list|,
name|vm_offset_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_free_page_pods
parameter_list|(
name|struct
name|ppod_reservation
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_soreceive_ddp
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|,
name|struct
name|sockaddr
modifier|*
modifier|*
parameter_list|,
name|struct
name|uio
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_aio_queue_ddp
parameter_list|(
name|struct
name|socket
modifier|*
parameter_list|,
name|struct
name|kaiocb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_ddp_mod_load
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_ddp_mod_unload
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ddp_assert_empty
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ddp_init_toep
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ddp_uninit_toep
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ddp_queue_toep
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|release_ddp_resources
parameter_list|(
name|struct
name|toepcb
modifier|*
name|toep
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|handle_ddp_close
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|,
name|struct
name|tcpcb
modifier|*
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|handle_ddp_indicate
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|handle_ddp_tcb_rpl
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|,
specifier|const
name|struct
name|cpl_set_tcb_rpl
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|insert_ddp_data
parameter_list|(
name|struct
name|toepcb
modifier|*
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

