begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2011 Chelsio Communications, Inc.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__CHELSIO_COMMON_H
end_ifndef

begin_define
define|#
directive|define
name|__CHELSIO_COMMON_H
end_define

begin_include
include|#
directive|include
file|"t4_hw.h"
end_include

begin_define
define|#
directive|define
name|GLBL_INTR_MASK
value|(F_CIM | F_MPS | F_PL | F_PCIE | F_MC0 | F_EDC0 | \ 		F_EDC1 | F_LE | F_TP | F_MA | F_PM_TX | F_PM_RX | F_ULP_RX | \ 		F_CPL_SWITCH | F_SGE | F_ULP_TX)
end_define

begin_enum
enum|enum
block|{
name|MAX_NPORTS
init|=
literal|4
block|,
comment|/* max # of ports */
name|SERNUM_LEN
init|=
literal|24
block|,
comment|/* Serial # length */
name|EC_LEN
init|=
literal|16
block|,
comment|/* E/C length */
name|ID_LEN
init|=
literal|16
block|,
comment|/* ID length */
name|PN_LEN
init|=
literal|16
block|,
comment|/* Part Number length */
name|MACADDR_LEN
init|=
literal|12
block|,
comment|/* MAC Address length */
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|T4_REGMAP_SIZE
init|=
operator|(
literal|160
operator|*
literal|1024
operator|)
block|,
name|T5_REGMAP_SIZE
init|=
operator|(
literal|332
operator|*
literal|1024
operator|)
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MEM_EDC0
block|,
name|MEM_EDC1
block|,
name|MEM_MC
block|,
name|MEM_MC0
init|=
name|MEM_MC
block|,
name|MEM_MC1
block|}
enum|;
end_enum

begin_enum
enum|enum
name|dev_master
block|{
name|MASTER_CANT
block|,
name|MASTER_MAY
block|,
name|MASTER_MUST
block|}
enum|;
end_enum

begin_enum
enum|enum
name|dev_state
block|{
name|DEV_STATE_UNINIT
block|,
name|DEV_STATE_INIT
block|,
name|DEV_STATE_ERR
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|PAUSE_RX
init|=
literal|1
operator|<<
literal|0
block|,
name|PAUSE_TX
init|=
literal|1
operator|<<
literal|1
block|,
name|PAUSE_AUTONEG
init|=
literal|1
operator|<<
literal|2
block|}
enum|;
end_enum

begin_struct
struct|struct
name|port_stats
block|{
name|u64
name|tx_octets
decl_stmt|;
comment|/* total # of octets in good frames */
name|u64
name|tx_frames
decl_stmt|;
comment|/* all good frames */
name|u64
name|tx_bcast_frames
decl_stmt|;
comment|/* all broadcast frames */
name|u64
name|tx_mcast_frames
decl_stmt|;
comment|/* all multicast frames */
name|u64
name|tx_ucast_frames
decl_stmt|;
comment|/* all unicast frames */
name|u64
name|tx_error_frames
decl_stmt|;
comment|/* all error frames */
name|u64
name|tx_frames_64
decl_stmt|;
comment|/* # of Tx frames in a particular range */
name|u64
name|tx_frames_65_127
decl_stmt|;
name|u64
name|tx_frames_128_255
decl_stmt|;
name|u64
name|tx_frames_256_511
decl_stmt|;
name|u64
name|tx_frames_512_1023
decl_stmt|;
name|u64
name|tx_frames_1024_1518
decl_stmt|;
name|u64
name|tx_frames_1519_max
decl_stmt|;
name|u64
name|tx_drop
decl_stmt|;
comment|/* # of dropped Tx frames */
name|u64
name|tx_pause
decl_stmt|;
comment|/* # of transmitted pause frames */
name|u64
name|tx_ppp0
decl_stmt|;
comment|/* # of transmitted PPP prio 0 frames */
name|u64
name|tx_ppp1
decl_stmt|;
comment|/* # of transmitted PPP prio 1 frames */
name|u64
name|tx_ppp2
decl_stmt|;
comment|/* # of transmitted PPP prio 2 frames */
name|u64
name|tx_ppp3
decl_stmt|;
comment|/* # of transmitted PPP prio 3 frames */
name|u64
name|tx_ppp4
decl_stmt|;
comment|/* # of transmitted PPP prio 4 frames */
name|u64
name|tx_ppp5
decl_stmt|;
comment|/* # of transmitted PPP prio 5 frames */
name|u64
name|tx_ppp6
decl_stmt|;
comment|/* # of transmitted PPP prio 6 frames */
name|u64
name|tx_ppp7
decl_stmt|;
comment|/* # of transmitted PPP prio 7 frames */
name|u64
name|rx_octets
decl_stmt|;
comment|/* total # of octets in good frames */
name|u64
name|rx_frames
decl_stmt|;
comment|/* all good frames */
name|u64
name|rx_bcast_frames
decl_stmt|;
comment|/* all broadcast frames */
name|u64
name|rx_mcast_frames
decl_stmt|;
comment|/* all multicast frames */
name|u64
name|rx_ucast_frames
decl_stmt|;
comment|/* all unicast frames */
name|u64
name|rx_too_long
decl_stmt|;
comment|/* # of frames exceeding MTU */
name|u64
name|rx_jabber
decl_stmt|;
comment|/* # of jabber frames */
name|u64
name|rx_fcs_err
decl_stmt|;
comment|/* # of received frames with bad FCS */
name|u64
name|rx_len_err
decl_stmt|;
comment|/* # of received frames with length error */
name|u64
name|rx_symbol_err
decl_stmt|;
comment|/* symbol errors */
name|u64
name|rx_runt
decl_stmt|;
comment|/* # of short frames */
name|u64
name|rx_frames_64
decl_stmt|;
comment|/* # of Rx frames in a particular range */
name|u64
name|rx_frames_65_127
decl_stmt|;
name|u64
name|rx_frames_128_255
decl_stmt|;
name|u64
name|rx_frames_256_511
decl_stmt|;
name|u64
name|rx_frames_512_1023
decl_stmt|;
name|u64
name|rx_frames_1024_1518
decl_stmt|;
name|u64
name|rx_frames_1519_max
decl_stmt|;
name|u64
name|rx_pause
decl_stmt|;
comment|/* # of received pause frames */
name|u64
name|rx_ppp0
decl_stmt|;
comment|/* # of received PPP prio 0 frames */
name|u64
name|rx_ppp1
decl_stmt|;
comment|/* # of received PPP prio 1 frames */
name|u64
name|rx_ppp2
decl_stmt|;
comment|/* # of received PPP prio 2 frames */
name|u64
name|rx_ppp3
decl_stmt|;
comment|/* # of received PPP prio 3 frames */
name|u64
name|rx_ppp4
decl_stmt|;
comment|/* # of received PPP prio 4 frames */
name|u64
name|rx_ppp5
decl_stmt|;
comment|/* # of received PPP prio 5 frames */
name|u64
name|rx_ppp6
decl_stmt|;
comment|/* # of received PPP prio 6 frames */
name|u64
name|rx_ppp7
decl_stmt|;
comment|/* # of received PPP prio 7 frames */
name|u64
name|rx_ovflow0
decl_stmt|;
comment|/* drops due to buffer-group 0 overflows */
name|u64
name|rx_ovflow1
decl_stmt|;
comment|/* drops due to buffer-group 1 overflows */
name|u64
name|rx_ovflow2
decl_stmt|;
comment|/* drops due to buffer-group 2 overflows */
name|u64
name|rx_ovflow3
decl_stmt|;
comment|/* drops due to buffer-group 3 overflows */
name|u64
name|rx_trunc0
decl_stmt|;
comment|/* buffer-group 0 truncated packets */
name|u64
name|rx_trunc1
decl_stmt|;
comment|/* buffer-group 1 truncated packets */
name|u64
name|rx_trunc2
decl_stmt|;
comment|/* buffer-group 2 truncated packets */
name|u64
name|rx_trunc3
decl_stmt|;
comment|/* buffer-group 3 truncated packets */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|lb_port_stats
block|{
name|u64
name|octets
decl_stmt|;
name|u64
name|frames
decl_stmt|;
name|u64
name|bcast_frames
decl_stmt|;
name|u64
name|mcast_frames
decl_stmt|;
name|u64
name|ucast_frames
decl_stmt|;
name|u64
name|error_frames
decl_stmt|;
name|u64
name|frames_64
decl_stmt|;
name|u64
name|frames_65_127
decl_stmt|;
name|u64
name|frames_128_255
decl_stmt|;
name|u64
name|frames_256_511
decl_stmt|;
name|u64
name|frames_512_1023
decl_stmt|;
name|u64
name|frames_1024_1518
decl_stmt|;
name|u64
name|frames_1519_max
decl_stmt|;
name|u64
name|drop
decl_stmt|;
name|u64
name|ovflow0
decl_stmt|;
name|u64
name|ovflow1
decl_stmt|;
name|u64
name|ovflow2
decl_stmt|;
name|u64
name|ovflow3
decl_stmt|;
name|u64
name|trunc0
decl_stmt|;
name|u64
name|trunc1
decl_stmt|;
name|u64
name|trunc2
decl_stmt|;
name|u64
name|trunc3
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|tp_tcp_stats
block|{
name|u32
name|tcp_out_rsts
decl_stmt|;
name|u64
name|tcp_in_segs
decl_stmt|;
name|u64
name|tcp_out_segs
decl_stmt|;
name|u64
name|tcp_retrans_segs
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|tp_usm_stats
block|{
name|u32
name|frames
decl_stmt|;
name|u32
name|drops
decl_stmt|;
name|u64
name|octets
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|tp_fcoe_stats
block|{
name|u32
name|frames_ddp
decl_stmt|;
name|u32
name|frames_drop
decl_stmt|;
name|u64
name|octets_ddp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|tp_err_stats
block|{
name|u32
name|mac_in_errs
index|[
name|MAX_NCHAN
index|]
decl_stmt|;
name|u32
name|hdr_in_errs
index|[
name|MAX_NCHAN
index|]
decl_stmt|;
name|u32
name|tcp_in_errs
index|[
name|MAX_NCHAN
index|]
decl_stmt|;
name|u32
name|tnl_cong_drops
index|[
name|MAX_NCHAN
index|]
decl_stmt|;
name|u32
name|ofld_chan_drops
index|[
name|MAX_NCHAN
index|]
decl_stmt|;
name|u32
name|tnl_tx_drops
index|[
name|MAX_NCHAN
index|]
decl_stmt|;
name|u32
name|ofld_vlan_drops
index|[
name|MAX_NCHAN
index|]
decl_stmt|;
name|u32
name|tcp6_in_errs
index|[
name|MAX_NCHAN
index|]
decl_stmt|;
name|u32
name|ofld_no_neigh
decl_stmt|;
name|u32
name|ofld_cong_defer
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|tp_proxy_stats
block|{
name|u32
name|proxy
index|[
name|MAX_NCHAN
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|tp_cpl_stats
block|{
name|u32
name|req
index|[
name|MAX_NCHAN
index|]
decl_stmt|;
name|u32
name|rsp
index|[
name|MAX_NCHAN
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|tp_rdma_stats
block|{
name|u32
name|rqe_dfr_pkt
decl_stmt|;
name|u32
name|rqe_dfr_mod
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|sge_params
block|{
name|int
name|timer_val
index|[
name|SGE_NTIMERS
index|]
decl_stmt|;
name|int
name|counter_val
index|[
name|SGE_NCOUNTERS
index|]
decl_stmt|;
name|int
name|fl_starve_threshold
decl_stmt|;
name|int
name|fl_starve_threshold2
decl_stmt|;
name|int
name|page_shift
decl_stmt|;
name|int
name|eq_s_qpp
decl_stmt|;
name|int
name|iq_s_qpp
decl_stmt|;
name|int
name|spg_len
decl_stmt|;
name|int
name|pad_boundary
decl_stmt|;
name|int
name|pack_boundary
decl_stmt|;
name|int
name|fl_pktshift
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|tp_params
block|{
name|unsigned
name|int
name|tre
decl_stmt|;
comment|/* log2 of core clocks per TP tick */
name|unsigned
name|int
name|dack_re
decl_stmt|;
comment|/* DACK timer resolution */
name|unsigned
name|int
name|la_mask
decl_stmt|;
comment|/* what events are recorded by TP LA */
name|unsigned
name|short
name|tx_modq
index|[
name|MAX_NCHAN
index|]
decl_stmt|;
comment|/* channel to modulation queue map */
name|uint32_t
name|vlan_pri_map
decl_stmt|;
name|uint32_t
name|ingress_config
decl_stmt|;
name|uint32_t
name|rx_pkt_encap
decl_stmt|;
name|int8_t
name|fcoe_shift
decl_stmt|;
name|int8_t
name|port_shift
decl_stmt|;
name|int8_t
name|vnic_shift
decl_stmt|;
name|int8_t
name|vlan_shift
decl_stmt|;
name|int8_t
name|tos_shift
decl_stmt|;
name|int8_t
name|protocol_shift
decl_stmt|;
name|int8_t
name|ethertype_shift
decl_stmt|;
name|int8_t
name|macmatch_shift
decl_stmt|;
name|int8_t
name|matchtype_shift
decl_stmt|;
name|int8_t
name|frag_shift
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|vpd_params
block|{
name|unsigned
name|int
name|cclk
decl_stmt|;
name|u8
name|ec
index|[
name|EC_LEN
operator|+
literal|1
index|]
decl_stmt|;
name|u8
name|sn
index|[
name|SERNUM_LEN
operator|+
literal|1
index|]
decl_stmt|;
name|u8
name|id
index|[
name|ID_LEN
operator|+
literal|1
index|]
decl_stmt|;
name|u8
name|pn
index|[
name|PN_LEN
operator|+
literal|1
index|]
decl_stmt|;
name|u8
name|na
index|[
name|MACADDR_LEN
operator|+
literal|1
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pci_params
block|{
name|unsigned
name|int
name|vpd_cap_addr
decl_stmt|;
name|unsigned
name|int
name|mps
decl_stmt|;
name|unsigned
name|short
name|speed
decl_stmt|;
name|unsigned
name|short
name|width
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Firmware device log.  */
end_comment

begin_struct
struct|struct
name|devlog_params
block|{
name|u32
name|memtype
decl_stmt|;
comment|/* which memory (FW_MEMTYPE_* ) */
name|u32
name|start
decl_stmt|;
comment|/* start of log in firmware memory */
name|u32
name|size
decl_stmt|;
comment|/* size of log */
name|u32
name|addr
decl_stmt|;
comment|/* start address in flat addr space */
block|}
struct|;
end_struct

begin_comment
comment|/* Stores chip specific parameters */
end_comment

begin_struct
struct|struct
name|chip_params
block|{
name|u8
name|nchan
decl_stmt|;
name|u8
name|pm_stats_cnt
decl_stmt|;
name|u8
name|cng_ch_bits_log
decl_stmt|;
comment|/* congestion channel map bits width */
name|u8
name|nsched_cls
decl_stmt|;
name|u8
name|cim_num_obq
decl_stmt|;
name|u16
name|mps_rplc_size
decl_stmt|;
name|u16
name|vfcount
decl_stmt|;
name|u32
name|sge_fl_db
decl_stmt|;
name|u16
name|mps_tcam_size
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|adapter_params
block|{
name|struct
name|sge_params
name|sge
decl_stmt|;
name|struct
name|tp_params
name|tp
decl_stmt|;
name|struct
name|vpd_params
name|vpd
decl_stmt|;
name|struct
name|pci_params
name|pci
decl_stmt|;
name|struct
name|devlog_params
name|devlog
decl_stmt|;
name|unsigned
name|int
name|sf_size
decl_stmt|;
comment|/* serial flash size in bytes */
name|unsigned
name|int
name|sf_nsec
decl_stmt|;
comment|/* # of flash sectors */
name|unsigned
name|int
name|fw_vers
decl_stmt|;
name|unsigned
name|int
name|tp_vers
decl_stmt|;
name|unsigned
name|int
name|exprom_vers
decl_stmt|;
name|unsigned
name|short
name|mtus
index|[
name|NMTUS
index|]
decl_stmt|;
name|unsigned
name|short
name|a_wnd
index|[
name|NCCTRL_WIN
index|]
decl_stmt|;
name|unsigned
name|short
name|b_wnd
index|[
name|NCCTRL_WIN
index|]
decl_stmt|;
name|u_int
name|ftid_min
decl_stmt|;
name|u_int
name|ftid_max
decl_stmt|;
name|u_int
name|etid_min
decl_stmt|;
name|u_int
name|netids
decl_stmt|;
name|unsigned
name|int
name|cim_la_size
decl_stmt|;
name|uint8_t
name|nports
decl_stmt|;
comment|/* # of ethernet ports */
name|uint8_t
name|portvec
decl_stmt|;
name|unsigned
name|int
name|chipid
range|:
literal|4
decl_stmt|;
comment|/* chip ID.  T4 = 4, T5 = 5, ... */
name|unsigned
name|int
name|rev
range|:
literal|4
decl_stmt|;
comment|/* chip revision */
name|unsigned
name|int
name|fpga
range|:
literal|1
decl_stmt|;
comment|/* this is an FPGA */
name|unsigned
name|int
name|offload
range|:
literal|1
decl_stmt|;
comment|/* hw is TOE capable, fw has divvied up card 				   resources for TOE operation. */
name|unsigned
name|int
name|bypass
range|:
literal|1
decl_stmt|;
comment|/* this is a bypass card */
name|unsigned
name|int
name|ethoffload
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|ofldq_wr_cred
decl_stmt|;
name|unsigned
name|int
name|eo_wr_cred
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|CHELSIO_T4
value|0x4
end_define

begin_define
define|#
directive|define
name|CHELSIO_T5
value|0x5
end_define

begin_define
define|#
directive|define
name|CHELSIO_T6
value|0x6
end_define

begin_comment
comment|/*  * State needed to monitor the forward progress of SGE Ingress DMA activities  * and possible hangs.  */
end_comment

begin_struct
struct|struct
name|sge_idma_monitor_state
block|{
name|unsigned
name|int
name|idma_1s_thresh
decl_stmt|;
comment|/* 1s threshold in Core Clock ticks */
name|unsigned
name|int
name|idma_stalled
index|[
literal|2
index|]
decl_stmt|;
comment|/* synthesized stalled timers in HZ */
name|unsigned
name|int
name|idma_state
index|[
literal|2
index|]
decl_stmt|;
comment|/* IDMA Hang detect state */
name|unsigned
name|int
name|idma_qid
index|[
literal|2
index|]
decl_stmt|;
comment|/* IDMA Hung Ingress Queue ID */
name|unsigned
name|int
name|idma_warn
index|[
literal|2
index|]
decl_stmt|;
comment|/* time to warning in HZ */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|trace_params
block|{
name|u32
name|data
index|[
name|TRACE_LEN
operator|/
literal|4
index|]
decl_stmt|;
name|u32
name|mask
index|[
name|TRACE_LEN
operator|/
literal|4
index|]
decl_stmt|;
name|unsigned
name|short
name|snap_len
decl_stmt|;
name|unsigned
name|short
name|min_len
decl_stmt|;
name|unsigned
name|char
name|skip_ofst
decl_stmt|;
name|unsigned
name|char
name|skip_len
decl_stmt|;
name|unsigned
name|char
name|invert
decl_stmt|;
name|unsigned
name|char
name|port
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|link_config
block|{
name|unsigned
name|short
name|supported
decl_stmt|;
comment|/* link capabilities */
name|unsigned
name|short
name|advertising
decl_stmt|;
comment|/* advertised capabilities */
name|unsigned
name|short
name|requested_speed
decl_stmt|;
comment|/* speed user has requested */
name|unsigned
name|short
name|speed
decl_stmt|;
comment|/* actual link speed */
name|unsigned
name|char
name|requested_fc
decl_stmt|;
comment|/* flow control user has requested */
name|unsigned
name|char
name|fc
decl_stmt|;
comment|/* actual link flow control */
name|unsigned
name|char
name|autoneg
decl_stmt|;
comment|/* autonegotiating? */
name|unsigned
name|char
name|link_ok
decl_stmt|;
comment|/* link up? */
block|}
struct|;
end_struct

begin_include
include|#
directive|include
file|"adapter.h"
end_include

begin_ifndef
ifndef|#
directive|ifndef
name|PCI_VENDOR_ID_CHELSIO
end_ifndef

begin_define
define|#
directive|define
name|PCI_VENDOR_ID_CHELSIO
value|0x1425
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|for_each_port
parameter_list|(
name|adapter
parameter_list|,
name|iter
parameter_list|)
define|\
value|for (iter = 0; iter< (adapter)->params.nports; ++iter)
end_define

begin_function
specifier|static
specifier|inline
name|int
name|is_ftid
parameter_list|(
specifier|const
name|struct
name|adapter
modifier|*
name|sc
parameter_list|,
name|u_int
name|tid
parameter_list|)
block|{
return|return
operator|(
name|tid
operator|>=
name|sc
operator|->
name|params
operator|.
name|ftid_min
operator|&&
name|tid
operator|<=
name|sc
operator|->
name|params
operator|.
name|ftid_max
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|is_etid
parameter_list|(
specifier|const
name|struct
name|adapter
modifier|*
name|sc
parameter_list|,
name|u_int
name|tid
parameter_list|)
block|{
return|return
operator|(
name|tid
operator|>=
name|sc
operator|->
name|params
operator|.
name|etid_min
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|is_offload
parameter_list|(
specifier|const
name|struct
name|adapter
modifier|*
name|adap
parameter_list|)
block|{
return|return
name|adap
operator|->
name|params
operator|.
name|offload
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|is_ethoffload
parameter_list|(
specifier|const
name|struct
name|adapter
modifier|*
name|adap
parameter_list|)
block|{
return|return
name|adap
operator|->
name|params
operator|.
name|ethoffload
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|chip_id
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|)
block|{
return|return
name|adap
operator|->
name|params
operator|.
name|chipid
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|chip_rev
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|)
block|{
return|return
name|adap
operator|->
name|params
operator|.
name|rev
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|is_t4
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|)
block|{
return|return
name|adap
operator|->
name|params
operator|.
name|chipid
operator|==
name|CHELSIO_T4
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|is_t5
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|)
block|{
return|return
name|adap
operator|->
name|params
operator|.
name|chipid
operator|==
name|CHELSIO_T5
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|is_t6
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|)
block|{
return|return
name|adap
operator|->
name|params
operator|.
name|chipid
operator|==
name|CHELSIO_T6
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|is_fpga
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|)
block|{
return|return
name|adap
operator|->
name|params
operator|.
name|fpga
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|int
name|core_ticks_per_usec
parameter_list|(
specifier|const
name|struct
name|adapter
modifier|*
name|adap
parameter_list|)
block|{
return|return
name|adap
operator|->
name|params
operator|.
name|vpd
operator|.
name|cclk
operator|/
literal|1000
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|int
name|us_to_core_ticks
parameter_list|(
specifier|const
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|us
parameter_list|)
block|{
return|return
operator|(
name|us
operator|*
name|adap
operator|->
name|params
operator|.
name|vpd
operator|.
name|cclk
operator|)
operator|/
literal|1000
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|int
name|core_ticks_to_us
parameter_list|(
specifier|const
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|unsigned
name|int
name|ticks
parameter_list|)
block|{
comment|/* add Core Clock / 2 to round ticks to nearest uS */
return|return
operator|(
operator|(
name|ticks
operator|*
literal|1000
operator|+
name|adapter
operator|->
name|params
operator|.
name|vpd
operator|.
name|cclk
operator|/
literal|2
operator|)
operator|/
name|adapter
operator|->
name|params
operator|.
name|vpd
operator|.
name|cclk
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|int
name|dack_ticks_to_usec
parameter_list|(
specifier|const
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|ticks
parameter_list|)
block|{
return|return
operator|(
name|ticks
operator|<<
name|adap
operator|->
name|params
operator|.
name|tp
operator|.
name|dack_re
operator|)
operator|/
name|core_ticks_per_usec
argument_list|(
name|adap
argument_list|)
return|;
block|}
end_function

begin_function_decl
name|void
name|t4_set_reg_field
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|u32
name|mask
parameter_list|,
name|u32
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_wr_mbox_meat_timeout
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|mbox
parameter_list|,
specifier|const
name|void
modifier|*
name|cmd
parameter_list|,
name|int
name|size
parameter_list|,
name|void
modifier|*
name|rpl
parameter_list|,
name|bool
name|sleep_ok
parameter_list|,
name|int
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_wr_mbox_meat
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|mbox
parameter_list|,
specifier|const
name|void
modifier|*
name|cmd
parameter_list|,
name|int
name|size
parameter_list|,
name|void
modifier|*
name|rpl
parameter_list|,
name|bool
name|sleep_ok
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|int
name|t4_wr_mbox_timeout
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|mbox
parameter_list|,
specifier|const
name|void
modifier|*
name|cmd
parameter_list|,
name|int
name|size
parameter_list|,
name|void
modifier|*
name|rpl
parameter_list|,
name|int
name|timeout
parameter_list|)
block|{
return|return
name|t4_wr_mbox_meat_timeout
argument_list|(
name|adap
argument_list|,
name|mbox
argument_list|,
name|cmd
argument_list|,
name|size
argument_list|,
name|rpl
argument_list|,
name|true
argument_list|,
name|timeout
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|t4_wr_mbox
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|mbox
parameter_list|,
specifier|const
name|void
modifier|*
name|cmd
parameter_list|,
name|int
name|size
parameter_list|,
name|void
modifier|*
name|rpl
parameter_list|)
block|{
return|return
name|t4_wr_mbox_meat
argument_list|(
name|adap
argument_list|,
name|mbox
argument_list|,
name|cmd
argument_list|,
name|size
argument_list|,
name|rpl
argument_list|,
name|true
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|t4_wr_mbox_ns
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|mbox
parameter_list|,
specifier|const
name|void
modifier|*
name|cmd
parameter_list|,
name|int
name|size
parameter_list|,
name|void
modifier|*
name|rpl
parameter_list|)
block|{
return|return
name|t4_wr_mbox_meat
argument_list|(
name|adap
argument_list|,
name|mbox
argument_list|,
name|cmd
argument_list|,
name|size
argument_list|,
name|rpl
argument_list|,
name|false
argument_list|)
return|;
block|}
end_function

begin_function_decl
name|void
name|t4_read_indirect
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|addr_reg
parameter_list|,
name|unsigned
name|int
name|data_reg
parameter_list|,
name|u32
modifier|*
name|vals
parameter_list|,
name|unsigned
name|int
name|nregs
parameter_list|,
name|unsigned
name|int
name|start_idx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_write_indirect
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|addr_reg
parameter_list|,
name|unsigned
name|int
name|data_reg
parameter_list|,
specifier|const
name|u32
modifier|*
name|vals
parameter_list|,
name|unsigned
name|int
name|nregs
parameter_list|,
name|unsigned
name|int
name|start_idx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|t4_hw_pci_read_cfg4
parameter_list|(
name|adapter_t
modifier|*
name|adapter
parameter_list|,
name|int
name|reg
parameter_list|)
function_decl|;
end_function_decl

begin_struct_decl
struct_decl|struct
name|fw_filter_wr
struct_decl|;
end_struct_decl

begin_function_decl
name|void
name|t4_intr_enable
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_intr_disable
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_intr_clear
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_slow_intr_handler
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_hash_mac_addr
parameter_list|(
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_link_l1cfg
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|port
parameter_list|,
name|struct
name|link_config
modifier|*
name|lc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_restart_aneg
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_seeprom_read
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|u32
name|addr
parameter_list|,
name|u32
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_seeprom_write
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|u32
name|addr
parameter_list|,
name|u32
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_eeprom_ptov
parameter_list|(
name|unsigned
name|int
name|phys_addr
parameter_list|,
name|unsigned
name|int
name|fn
parameter_list|,
name|unsigned
name|int
name|sz
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_seeprom_wp
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|int
name|enable
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_read_flash
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|unsigned
name|int
name|nwords
parameter_list|,
name|u32
modifier|*
name|data
parameter_list|,
name|int
name|byte_oriented
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_write_flash
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|unsigned
name|int
name|n
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|int
name|byte_oriented
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_load_fw
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
specifier|const
name|u8
modifier|*
name|fw_data
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_fwcache
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|enum
name|fw_params_param_dev_fwcache
name|op
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t5_fw_init_extern_mem
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_load_bootcfg
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
specifier|const
name|u8
modifier|*
name|cfg_data
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_load_boot
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u8
modifier|*
name|boot_data
parameter_list|,
name|unsigned
name|int
name|boot_addr
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_flash_erase_sectors
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_flash_cfg_addr
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_load_cfg
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
specifier|const
name|u8
modifier|*
name|cfg_data
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_get_fw_version
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|u32
modifier|*
name|vers
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_get_tp_version
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|u32
modifier|*
name|vers
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_get_exprom_version
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|u32
modifier|*
name|vers
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_init_hw
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|u32
name|fw_params
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_prep_adapter
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_shutdown_adapter
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_init_devlog_params
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|int
name|fw_attach
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_init_sge_params
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_init_tp_params
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_filter_field_shift
parameter_list|(
specifier|const
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|filter_sel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_port_init
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|mbox
parameter_list|,
name|int
name|pf
parameter_list|,
name|int
name|vf
parameter_list|,
name|int
name|port_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_fatal_err
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_db_full
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_db_dropped
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_set_trace_filter
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
specifier|const
name|struct
name|trace_params
modifier|*
name|tp
parameter_list|,
name|int
name|filter_index
parameter_list|,
name|int
name|enable
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_get_trace_filter
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|struct
name|trace_params
modifier|*
name|tp
parameter_list|,
name|int
name|filter_index
parameter_list|,
name|int
modifier|*
name|enabled
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_config_rss_range
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|viid
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|n
parameter_list|,
specifier|const
name|u16
modifier|*
name|rspq
parameter_list|,
name|unsigned
name|int
name|nrspq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_config_glbl_rss
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|mode
parameter_list|,
name|unsigned
name|int
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_config_vi_rss
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|viid
parameter_list|,
name|unsigned
name|int
name|flags
parameter_list|,
name|unsigned
name|int
name|defq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_read_rss
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|u16
modifier|*
name|entries
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_fw_tp_pio_rw
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u32
modifier|*
name|vals
parameter_list|,
name|unsigned
name|int
name|nregs
parameter_list|,
name|unsigned
name|int
name|start_index
parameter_list|,
name|unsigned
name|int
name|rw
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_read_rss_key
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|u32
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_write_rss_key
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u32
modifier|*
name|key
parameter_list|,
name|int
name|idx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_read_rss_pf_config
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|unsigned
name|int
name|index
parameter_list|,
name|u32
modifier|*
name|valp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_write_rss_pf_config
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|unsigned
name|int
name|index
parameter_list|,
name|u32
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_read_rss_vf_config
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|unsigned
name|int
name|index
parameter_list|,
name|u32
modifier|*
name|vfl
parameter_list|,
name|u32
modifier|*
name|vfh
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_write_rss_vf_config
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|unsigned
name|int
name|index
parameter_list|,
name|u32
name|vfl
parameter_list|,
name|u32
name|vfh
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|t4_read_rss_pf_map
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_write_rss_pf_map
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|u32
name|pfmap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|t4_read_rss_pf_mask
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_write_rss_pf_mask
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|u32
name|pfmask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_mps_set_active_ports
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|port_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_pmtx_get_stats
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u32
name|cnt
index|[]
parameter_list|,
name|u64
name|cycles
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_pmrx_get_stats
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u32
name|cnt
index|[]
parameter_list|,
name|u64
name|cycles
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_read_cimq_cfg
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u16
modifier|*
name|base
parameter_list|,
name|u16
modifier|*
name|size
parameter_list|,
name|u16
modifier|*
name|thres
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_read_cim_ibq
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|qid
parameter_list|,
name|u32
modifier|*
name|data
parameter_list|,
name|size_t
name|n
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_read_cim_obq
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|qid
parameter_list|,
name|u32
modifier|*
name|data
parameter_list|,
name|size_t
name|n
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_cim_read
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|unsigned
name|int
name|n
parameter_list|,
name|unsigned
name|int
modifier|*
name|valp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_cim_write
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|unsigned
name|int
name|n
parameter_list|,
specifier|const
name|unsigned
name|int
modifier|*
name|valp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_cim_ctl_read
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|unsigned
name|int
name|n
parameter_list|,
name|unsigned
name|int
modifier|*
name|valp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_cim_read_la
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u32
modifier|*
name|la_buf
parameter_list|,
name|unsigned
name|int
modifier|*
name|wrptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_cim_read_pif_la
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u32
modifier|*
name|pif_req
parameter_list|,
name|u32
modifier|*
name|pif_rsp
parameter_list|,
name|unsigned
name|int
modifier|*
name|pif_req_wrptr
parameter_list|,
name|unsigned
name|int
modifier|*
name|pif_rsp_wrptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_cim_read_ma_la
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u32
modifier|*
name|ma_req
parameter_list|,
name|u32
modifier|*
name|ma_rsp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_get_flash_params
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|t4_read_pcie_cfg4
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|reg
parameter_list|,
name|int
name|drv_fw_attach
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_mc_read
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|idx
parameter_list|,
name|u32
name|addr
parameter_list|,
name|__be32
modifier|*
name|data
parameter_list|,
name|u64
modifier|*
name|parity
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_edc_read
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|idx
parameter_list|,
name|u32
name|addr
parameter_list|,
name|__be32
modifier|*
name|data
parameter_list|,
name|u64
modifier|*
name|parity
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_mem_read
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|mtype
parameter_list|,
name|u32
name|addr
parameter_list|,
name|u32
name|size
parameter_list|,
name|__be32
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_idma_monitor_init
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|struct
name|sge_idma_monitor_state
modifier|*
name|idma
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_idma_monitor
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|struct
name|sge_idma_monitor_state
modifier|*
name|idma
parameter_list|,
name|int
name|hz
parameter_list|,
name|int
name|ticks
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|int
name|t4_get_regs_len
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_get_regs
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|buf_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|t4_get_port_type_description
parameter_list|(
name|enum
name|fw_port_type
name|port_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_get_port_stats
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|idx
parameter_list|,
name|struct
name|port_stats
modifier|*
name|p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_get_port_stats_offset
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|idx
parameter_list|,
name|struct
name|port_stats
modifier|*
name|stats
parameter_list|,
name|struct
name|port_stats
modifier|*
name|offset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_get_lb_stats
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|idx
parameter_list|,
name|struct
name|lb_port_stats
modifier|*
name|p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_clr_port_stats
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|idx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_read_mtu_tbl
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u16
modifier|*
name|mtus
parameter_list|,
name|u8
modifier|*
name|mtu_log
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_read_cong_tbl
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u16
name|incr
index|[
name|NMTUS
index|]
index|[
name|NCCTRL_WIN
index|]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_read_pace_tbl
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|pace_vals
index|[
name|NTX_SCHED
index|]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_get_tx_sched
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|sched
parameter_list|,
name|unsigned
name|int
modifier|*
name|kbps
parameter_list|,
name|unsigned
name|int
modifier|*
name|ipg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_tp_wr_bits_indirect
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|addr
parameter_list|,
name|unsigned
name|int
name|mask
parameter_list|,
name|unsigned
name|int
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_tp_read_la
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u64
modifier|*
name|la_buf
parameter_list|,
name|unsigned
name|int
modifier|*
name|wrptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_tp_get_err_stats
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|struct
name|tp_err_stats
modifier|*
name|st
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_tp_get_proxy_stats
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|struct
name|tp_proxy_stats
modifier|*
name|st
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_tp_get_cpl_stats
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|struct
name|tp_cpl_stats
modifier|*
name|st
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_tp_get_rdma_stats
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|struct
name|tp_rdma_stats
modifier|*
name|st
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_get_usm_stats
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|struct
name|tp_usm_stats
modifier|*
name|st
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_tp_get_tcp_stats
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|struct
name|tp_tcp_stats
modifier|*
name|v4
parameter_list|,
name|struct
name|tp_tcp_stats
modifier|*
name|v6
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_get_fcoe_stats
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|idx
parameter_list|,
name|struct
name|tp_fcoe_stats
modifier|*
name|st
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_load_mtus
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
specifier|const
name|unsigned
name|short
modifier|*
name|mtus
parameter_list|,
specifier|const
name|unsigned
name|short
modifier|*
name|alpha
parameter_list|,
specifier|const
name|unsigned
name|short
modifier|*
name|beta
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_ulprx_read_la
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u32
modifier|*
name|la_buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_set_sched_bps
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|sched
parameter_list|,
name|unsigned
name|int
name|kbps
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_set_sched_ipg
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|int
name|sched
parameter_list|,
name|unsigned
name|int
name|ipg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_set_pace_tbl
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
specifier|const
name|unsigned
name|int
modifier|*
name|pace_vals
parameter_list|,
name|unsigned
name|int
name|start
parameter_list|,
name|unsigned
name|int
name|n
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_get_chan_txrate
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|u64
modifier|*
name|nic_rate
parameter_list|,
name|u64
modifier|*
name|ofld_rate
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_set_filter_mode
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mode_map
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_mk_filtdelwr
parameter_list|(
name|unsigned
name|int
name|ftid
parameter_list|,
name|struct
name|fw_filter_wr
modifier|*
name|wr
parameter_list|,
name|int
name|qid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_wol_magic_enable
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|port
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_wol_pat_enable
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|port
parameter_list|,
name|unsigned
name|int
name|map
parameter_list|,
name|u64
name|mask0
parameter_list|,
name|u64
name|mask1
parameter_list|,
name|unsigned
name|int
name|crc
parameter_list|,
name|bool
name|enable
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_fw_hello
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|evt_mbox
parameter_list|,
name|enum
name|dev_master
name|master
parameter_list|,
name|enum
name|dev_state
modifier|*
name|state
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_fw_bye
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_fw_reset
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|int
name|reset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_fw_halt
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|int
name|force
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_fw_restart
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|int
name|reset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_fw_upgrade
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
specifier|const
name|u8
modifier|*
name|fw_data
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|,
name|int
name|force
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_fw_initialize
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_query_params
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|nparams
parameter_list|,
specifier|const
name|u32
modifier|*
name|params
parameter_list|,
name|u32
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_query_params_rw
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|nparams
parameter_list|,
specifier|const
name|u32
modifier|*
name|params
parameter_list|,
name|u32
modifier|*
name|val
parameter_list|,
name|int
name|rw
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_set_params_timeout
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|nparams
parameter_list|,
specifier|const
name|u32
modifier|*
name|params
parameter_list|,
specifier|const
name|u32
modifier|*
name|val
parameter_list|,
name|int
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_set_params
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|nparams
parameter_list|,
specifier|const
name|u32
modifier|*
name|params
parameter_list|,
specifier|const
name|u32
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_cfg_pfvf
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|txq
parameter_list|,
name|unsigned
name|int
name|txq_eth_ctrl
parameter_list|,
name|unsigned
name|int
name|rxqi
parameter_list|,
name|unsigned
name|int
name|rxq
parameter_list|,
name|unsigned
name|int
name|tc
parameter_list|,
name|unsigned
name|int
name|vi
parameter_list|,
name|unsigned
name|int
name|cmask
parameter_list|,
name|unsigned
name|int
name|pmask
parameter_list|,
name|unsigned
name|int
name|exactf
parameter_list|,
name|unsigned
name|int
name|rcaps
parameter_list|,
name|unsigned
name|int
name|wxcaps
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_alloc_vi_func
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|port
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|nmac
parameter_list|,
name|u8
modifier|*
name|mac
parameter_list|,
name|u16
modifier|*
name|rss_size
parameter_list|,
name|unsigned
name|int
name|portfunc
parameter_list|,
name|unsigned
name|int
name|idstype
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_alloc_vi
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|port
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|nmac
parameter_list|,
name|u8
modifier|*
name|mac
parameter_list|,
name|u16
modifier|*
name|rss_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_free_vi
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|viid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_set_rxmode
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|viid
parameter_list|,
name|int
name|mtu
parameter_list|,
name|int
name|promisc
parameter_list|,
name|int
name|all_multi
parameter_list|,
name|int
name|bcast
parameter_list|,
name|int
name|vlanex
parameter_list|,
name|bool
name|sleep_ok
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_alloc_mac_filt
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|viid
parameter_list|,
name|bool
name|free
parameter_list|,
name|unsigned
name|int
name|naddr
parameter_list|,
specifier|const
name|u8
modifier|*
modifier|*
name|addr
parameter_list|,
name|u16
modifier|*
name|idx
parameter_list|,
name|u64
modifier|*
name|hash
parameter_list|,
name|bool
name|sleep_ok
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_change_mac
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|viid
parameter_list|,
name|int
name|idx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|bool
name|persist
parameter_list|,
name|bool
name|add_smt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_set_addr_hash
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|viid
parameter_list|,
name|bool
name|ucast
parameter_list|,
name|u64
name|vec
parameter_list|,
name|bool
name|sleep_ok
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_enable_vi_params
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|viid
parameter_list|,
name|bool
name|rx_en
parameter_list|,
name|bool
name|tx_en
parameter_list|,
name|bool
name|dcb_en
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_enable_vi
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|viid
parameter_list|,
name|bool
name|rx_en
parameter_list|,
name|bool
name|tx_en
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_identify_port
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|viid
parameter_list|,
name|unsigned
name|int
name|nblinks
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_mdio_rd
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|phy_addr
parameter_list|,
name|unsigned
name|int
name|mmd
parameter_list|,
name|unsigned
name|int
name|reg
parameter_list|,
name|unsigned
name|int
modifier|*
name|valp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_mdio_wr
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|phy_addr
parameter_list|,
name|unsigned
name|int
name|mmd
parameter_list|,
name|unsigned
name|int
name|reg
parameter_list|,
name|unsigned
name|int
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_i2c_rd
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|int
name|port
parameter_list|,
name|unsigned
name|int
name|devid
parameter_list|,
name|unsigned
name|int
name|offset
parameter_list|,
name|unsigned
name|int
name|len
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_i2c_wr
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|int
name|port
parameter_list|,
name|unsigned
name|int
name|devid
parameter_list|,
name|unsigned
name|int
name|offset
parameter_list|,
name|unsigned
name|int
name|len
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_iq_stop
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|iqtype
parameter_list|,
name|unsigned
name|int
name|iqid
parameter_list|,
name|unsigned
name|int
name|fl0id
parameter_list|,
name|unsigned
name|int
name|fl1id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_iq_free
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|iqtype
parameter_list|,
name|unsigned
name|int
name|iqid
parameter_list|,
name|unsigned
name|int
name|fl0id
parameter_list|,
name|unsigned
name|int
name|fl1id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_eth_eq_free
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|eqid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_ctrl_eq_free
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|eqid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_ofld_eq_free
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|eqid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_sge_ctxt_rd
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|cid
parameter_list|,
name|enum
name|ctxt_type
name|ctype
parameter_list|,
name|u32
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_sge_ctxt_rd_bd
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|cid
parameter_list|,
name|enum
name|ctxt_type
name|ctype
parameter_list|,
name|u32
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_sge_ctxt_flush
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|t4_link_down_rc_str
parameter_list|(
name|unsigned
name|char
name|link_down_rc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_handle_fw_rpl
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
specifier|const
name|__be64
modifier|*
name|rpl
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_fwaddrspace_write
parameter_list|(
name|struct
name|adapter
modifier|*
name|adap
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|u32
name|addr
parameter_list|,
name|u32
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_sched_config
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|int
name|type
parameter_list|,
name|int
name|minmaxen
parameter_list|,
name|int
name|sleep_ok
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_sched_params
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|int
name|type
parameter_list|,
name|int
name|level
parameter_list|,
name|int
name|mode
parameter_list|,
name|int
name|rateunit
parameter_list|,
name|int
name|ratemode
parameter_list|,
name|int
name|channel
parameter_list|,
name|int
name|cl
parameter_list|,
name|int
name|minrate
parameter_list|,
name|int
name|maxrate
parameter_list|,
name|int
name|weight
parameter_list|,
name|int
name|pktsize
parameter_list|,
name|int
name|sleep_ok
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_config_watchdog
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|unsigned
name|int
name|mbox
parameter_list|,
name|unsigned
name|int
name|pf
parameter_list|,
name|unsigned
name|int
name|vf
parameter_list|,
name|unsigned
name|int
name|timeout
parameter_list|,
name|unsigned
name|int
name|action
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_get_devlog_level
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|unsigned
name|int
modifier|*
name|level
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|t4_set_devlog_level
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|unsigned
name|int
name|level
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|t4_sge_decode_idma_state
parameter_list|(
name|struct
name|adapter
modifier|*
name|adapter
parameter_list|,
name|int
name|state
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __CHELSIO_COMMON_H */
end_comment

end_unit

