begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2015 Cavium Inc.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|Q_STRUCT_H
end_ifndef

begin_define
define|#
directive|define
name|Q_STRUCT_H
end_define

begin_define
define|#
directive|define
name|__LITTLE_ENDIAN_BITFIELD
end_define

begin_comment
comment|/* Load transaction types for reading segment bytes specified by  * NIC_SEND_GATHER_S[LD_TYPE].  */
end_comment

begin_enum
enum|enum
name|nic_send_ld_type_e
block|{
name|NIC_SEND_LD_TYPE_E_LDD
init|=
literal|0x0
block|,
name|NIC_SEND_LD_TYPE_E_LDT
init|=
literal|0x1
block|,
name|NIC_SEND_LD_TYPE_E_LDWB
init|=
literal|0x2
block|,
name|NIC_SEND_LD_TYPE_E_ENUM_LAST
init|=
literal|0x3
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|ether_type_algorithm
block|{
name|ETYPE_ALG_NONE
init|=
literal|0x0
block|,
name|ETYPE_ALG_SKIP
init|=
literal|0x1
block|,
name|ETYPE_ALG_ENDPARSE
init|=
literal|0x2
block|,
name|ETYPE_ALG_VLAN
init|=
literal|0x3
block|,
name|ETYPE_ALG_VLAN_STRIP
init|=
literal|0x4
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|layer3_type
block|{
name|L3TYPE_NONE
init|=
literal|0x00
block|,
name|L3TYPE_GRH
init|=
literal|0x01
block|,
name|L3TYPE_IPV4
init|=
literal|0x04
block|,
name|L3TYPE_IPV4_OPTIONS
init|=
literal|0x05
block|,
name|L3TYPE_IPV6
init|=
literal|0x06
block|,
name|L3TYPE_IPV6_OPTIONS
init|=
literal|0x07
block|,
name|L3TYPE_ET_STOP
init|=
literal|0x0D
block|,
name|L3TYPE_OTHER
init|=
literal|0x0E
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|layer4_type
block|{
name|L4TYPE_NONE
init|=
literal|0x00
block|,
name|L4TYPE_IPSEC_ESP
init|=
literal|0x01
block|,
name|L4TYPE_IPFRAG
init|=
literal|0x02
block|,
name|L4TYPE_IPCOMP
init|=
literal|0x03
block|,
name|L4TYPE_TCP
init|=
literal|0x04
block|,
name|L4TYPE_UDP
init|=
literal|0x05
block|,
name|L4TYPE_SCTP
init|=
literal|0x06
block|,
name|L4TYPE_GRE
init|=
literal|0x07
block|,
name|L4TYPE_ROCE_BTH
init|=
literal|0x08
block|,
name|L4TYPE_OTHER
init|=
literal|0x0E
block|, }
enum|;
end_enum

begin_comment
comment|/* CPI and RSSI configuration */
end_comment

begin_enum
enum|enum
name|cpi_algorithm_type
block|{
name|CPI_ALG_NONE
init|=
literal|0x0
block|,
name|CPI_ALG_VLAN
init|=
literal|0x1
block|,
name|CPI_ALG_VLAN16
init|=
literal|0x2
block|,
name|CPI_ALG_DIFF
init|=
literal|0x3
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|rss_algorithm_type
block|{
name|RSS_ALG_NONE
init|=
literal|0x00
block|,
name|RSS_ALG_PORT
init|=
literal|0x01
block|,
name|RSS_ALG_IP
init|=
literal|0x02
block|,
name|RSS_ALG_TCP_IP
init|=
literal|0x03
block|,
name|RSS_ALG_UDP_IP
init|=
literal|0x04
block|,
name|RSS_ALG_SCTP_IP
init|=
literal|0x05
block|,
name|RSS_ALG_GRE_IP
init|=
literal|0x06
block|,
name|RSS_ALG_ROCE
init|=
literal|0x07
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|rss_hash_cfg
block|{
name|RSS_HASH_L2ETC
init|=
literal|0x00
block|,
name|RSS_HASH_IP
init|=
literal|0x01
block|,
name|RSS_HASH_TCP
init|=
literal|0x02
block|,
name|RSS_HASH_TCP_SYN_DIS
init|=
literal|0x03
block|,
name|RSS_HASH_UDP
init|=
literal|0x04
block|,
name|RSS_HASH_L4ETC
init|=
literal|0x05
block|,
name|RSS_HASH_ROCE
init|=
literal|0x06
block|,
name|RSS_L3_BIDI
init|=
literal|0x07
block|,
name|RSS_L4_BIDI
init|=
literal|0x08
block|, }
enum|;
end_enum

begin_comment
comment|/* Completion queue entry types */
end_comment

begin_enum
enum|enum
name|cqe_type
block|{
name|CQE_TYPE_INVALID
init|=
literal|0x0
block|,
name|CQE_TYPE_RX
init|=
literal|0x2
block|,
name|CQE_TYPE_RX_SPLIT
init|=
literal|0x3
block|,
name|CQE_TYPE_RX_TCP
init|=
literal|0x4
block|,
name|CQE_TYPE_SEND
init|=
literal|0x8
block|,
name|CQE_TYPE_SEND_PTP
init|=
literal|0x9
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|cqe_rx_tcp_status
block|{
name|CQE_RX_STATUS_VALID_TCP_CNXT
init|=
literal|0x00
block|,
name|CQE_RX_STATUS_INVALID_TCP_CNXT
init|=
literal|0x0F
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|cqe_send_status
block|{
name|CQE_SEND_STATUS_GOOD
init|=
literal|0x00
block|,
name|CQE_SEND_STATUS_DESC_FAULT
init|=
literal|0x01
block|,
name|CQE_SEND_STATUS_HDR_CONS_ERR
init|=
literal|0x11
block|,
name|CQE_SEND_STATUS_SUBDESC_ERR
init|=
literal|0x12
block|,
name|CQE_SEND_STATUS_IMM_SIZE_OFLOW
init|=
literal|0x80
block|,
name|CQE_SEND_STATUS_CRC_SEQ_ERR
init|=
literal|0x81
block|,
name|CQE_SEND_STATUS_DATA_SEQ_ERR
init|=
literal|0x82
block|,
name|CQE_SEND_STATUS_MEM_SEQ_ERR
init|=
literal|0x83
block|,
name|CQE_SEND_STATUS_LOCK_VIOL
init|=
literal|0x84
block|,
name|CQE_SEND_STATUS_LOCK_UFLOW
init|=
literal|0x85
block|,
name|CQE_SEND_STATUS_DATA_FAULT
init|=
literal|0x86
block|,
name|CQE_SEND_STATUS_TSTMP_CONFLICT
init|=
literal|0x87
block|,
name|CQE_SEND_STATUS_TSTMP_TIMEOUT
init|=
literal|0x88
block|,
name|CQE_SEND_STATUS_MEM_FAULT
init|=
literal|0x89
block|,
name|CQE_SEND_STATUS_CSUM_OVERLAP
init|=
literal|0x8A
block|,
name|CQE_SEND_STATUS_CSUM_OVERFLOW
init|=
literal|0x8B
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|cqe_rx_tcp_end_reason
block|{
name|CQE_RX_TCP_END_FIN_FLAG_DET
init|=
literal|0
block|,
name|CQE_RX_TCP_END_INVALID_FLAG
init|=
literal|1
block|,
name|CQE_RX_TCP_END_TIMEOUT
init|=
literal|2
block|,
name|CQE_RX_TCP_END_OUT_OF_SEQ
init|=
literal|3
block|,
name|CQE_RX_TCP_END_PKT_ERR
init|=
literal|4
block|,
name|CQE_RX_TCP_END_QS_DISABLED
init|=
literal|0x0F
block|, }
enum|;
end_enum

begin_comment
comment|/* Packet protocol level error enumeration */
end_comment

begin_enum
enum|enum
name|cqe_rx_err_level
block|{
name|CQE_RX_ERRLVL_RE
init|=
literal|0x0
block|,
name|CQE_RX_ERRLVL_L2
init|=
literal|0x1
block|,
name|CQE_RX_ERRLVL_L3
init|=
literal|0x2
block|,
name|CQE_RX_ERRLVL_L4
init|=
literal|0x3
block|, }
enum|;
end_enum

begin_comment
comment|/* Packet protocol level error type enumeration */
end_comment

begin_enum
enum|enum
name|cqe_rx_err_opcode
block|{
name|CQE_RX_ERR_RE_NONE
init|=
literal|0x0
block|,
name|CQE_RX_ERR_RE_PARTIAL
init|=
literal|0x1
block|,
name|CQE_RX_ERR_RE_JABBER
init|=
literal|0x2
block|,
name|CQE_RX_ERR_RE_FCS
init|=
literal|0x7
block|,
name|CQE_RX_ERR_RE_TERMINATE
init|=
literal|0x9
block|,
name|CQE_RX_ERR_RE_RX_CTL
init|=
literal|0xb
block|,
name|CQE_RX_ERR_PREL2_ERR
init|=
literal|0x1f
block|,
name|CQE_RX_ERR_L2_FRAGMENT
init|=
literal|0x20
block|,
name|CQE_RX_ERR_L2_OVERRUN
init|=
literal|0x21
block|,
name|CQE_RX_ERR_L2_PFCS
init|=
literal|0x22
block|,
name|CQE_RX_ERR_L2_PUNY
init|=
literal|0x23
block|,
name|CQE_RX_ERR_L2_MAL
init|=
literal|0x24
block|,
name|CQE_RX_ERR_L2_OVERSIZE
init|=
literal|0x25
block|,
name|CQE_RX_ERR_L2_UNDERSIZE
init|=
literal|0x26
block|,
name|CQE_RX_ERR_L2_LENMISM
init|=
literal|0x27
block|,
name|CQE_RX_ERR_L2_PCLP
init|=
literal|0x28
block|,
name|CQE_RX_ERR_IP_NOT
init|=
literal|0x41
block|,
name|CQE_RX_ERR_IP_CHK
init|=
literal|0x42
block|,
name|CQE_RX_ERR_IP_MAL
init|=
literal|0x43
block|,
name|CQE_RX_ERR_IP_MALD
init|=
literal|0x44
block|,
name|CQE_RX_ERR_IP_HOP
init|=
literal|0x45
block|,
name|CQE_RX_ERR_L3_ICRC
init|=
literal|0x46
block|,
name|CQE_RX_ERR_L3_PCLP
init|=
literal|0x47
block|,
name|CQE_RX_ERR_L4_MAL
init|=
literal|0x61
block|,
name|CQE_RX_ERR_L4_CHK
init|=
literal|0x62
block|,
name|CQE_RX_ERR_UDP_LEN
init|=
literal|0x63
block|,
name|CQE_RX_ERR_L4_PORT
init|=
literal|0x64
block|,
name|CQE_RX_ERR_TCP_FLAG
init|=
literal|0x65
block|,
name|CQE_RX_ERR_TCP_OFFSET
init|=
literal|0x66
block|,
name|CQE_RX_ERR_L4_PCLP
init|=
literal|0x67
block|,
name|CQE_RX_ERR_RBDR_TRUNC
init|=
literal|0x70
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|cqe_rx_t
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|cqe_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|stdn_fault
range|:
literal|1
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|1
decl_stmt|;
name|uint64_t
name|rq_qs
range|:
literal|7
decl_stmt|;
name|uint64_t
name|rq_idx
range|:
literal|3
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|12
decl_stmt|;
name|uint64_t
name|rss_alg
range|:
literal|4
decl_stmt|;
name|uint64_t
name|rsvd2
range|:
literal|4
decl_stmt|;
name|uint64_t
name|rb_cnt
range|:
literal|4
decl_stmt|;
name|uint64_t
name|vlan_found
range|:
literal|1
decl_stmt|;
name|uint64_t
name|vlan_stripped
range|:
literal|1
decl_stmt|;
name|uint64_t
name|vlan2_found
range|:
literal|1
decl_stmt|;
name|uint64_t
name|vlan2_stripped
range|:
literal|1
decl_stmt|;
name|uint64_t
name|l4_type
range|:
literal|4
decl_stmt|;
name|uint64_t
name|l3_type
range|:
literal|4
decl_stmt|;
name|uint64_t
name|l2_present
range|:
literal|1
decl_stmt|;
name|uint64_t
name|err_level
range|:
literal|3
decl_stmt|;
name|uint64_t
name|err_opcode
range|:
literal|8
decl_stmt|;
name|uint64_t
name|pkt_len
range|:
literal|16
decl_stmt|;
comment|/* W1 */
name|uint64_t
name|l2_ptr
range|:
literal|8
decl_stmt|;
name|uint64_t
name|l3_ptr
range|:
literal|8
decl_stmt|;
name|uint64_t
name|l4_ptr
range|:
literal|8
decl_stmt|;
name|uint64_t
name|cq_pkt_len
range|:
literal|8
decl_stmt|;
name|uint64_t
name|align_pad
range|:
literal|3
decl_stmt|;
name|uint64_t
name|rsvd3
range|:
literal|1
decl_stmt|;
name|uint64_t
name|chan
range|:
literal|12
decl_stmt|;
name|uint64_t
name|rss_tag
range|:
literal|32
decl_stmt|;
comment|/* W2 */
name|uint64_t
name|vlan_tci
range|:
literal|16
decl_stmt|;
name|uint64_t
name|vlan_ptr
range|:
literal|8
decl_stmt|;
name|uint64_t
name|vlan2_ptr
range|:
literal|8
decl_stmt|;
name|uint64_t
name|rb3_sz
range|:
literal|16
decl_stmt|;
comment|/* W3 */
name|uint64_t
name|rb2_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb1_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb0_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb7_sz
range|:
literal|16
decl_stmt|;
comment|/* W4 */
name|uint64_t
name|rb6_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb5_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb4_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb11_sz
range|:
literal|16
decl_stmt|;
comment|/* W5 */
name|uint64_t
name|rb10_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb9_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb8_sz
range|:
literal|16
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|err_opcode
range|:
literal|8
decl_stmt|;
name|uint64_t
name|err_level
range|:
literal|3
decl_stmt|;
name|uint64_t
name|l2_present
range|:
literal|1
decl_stmt|;
name|uint64_t
name|l3_type
range|:
literal|4
decl_stmt|;
name|uint64_t
name|l4_type
range|:
literal|4
decl_stmt|;
name|uint64_t
name|vlan2_stripped
range|:
literal|1
decl_stmt|;
name|uint64_t
name|vlan2_found
range|:
literal|1
decl_stmt|;
name|uint64_t
name|vlan_stripped
range|:
literal|1
decl_stmt|;
name|uint64_t
name|vlan_found
range|:
literal|1
decl_stmt|;
name|uint64_t
name|rb_cnt
range|:
literal|4
decl_stmt|;
name|uint64_t
name|rsvd2
range|:
literal|4
decl_stmt|;
name|uint64_t
name|rss_alg
range|:
literal|4
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|12
decl_stmt|;
name|uint64_t
name|rq_idx
range|:
literal|3
decl_stmt|;
name|uint64_t
name|rq_qs
range|:
literal|7
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|1
decl_stmt|;
name|uint64_t
name|stdn_fault
range|:
literal|1
decl_stmt|;
name|uint64_t
name|cqe_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|chan
range|:
literal|12
decl_stmt|;
name|uint64_t
name|rsvd3
range|:
literal|1
decl_stmt|;
name|uint64_t
name|align_pad
range|:
literal|3
decl_stmt|;
name|uint64_t
name|cq_pkt_len
range|:
literal|8
decl_stmt|;
name|uint64_t
name|l4_ptr
range|:
literal|8
decl_stmt|;
name|uint64_t
name|l3_ptr
range|:
literal|8
decl_stmt|;
name|uint64_t
name|l2_ptr
range|:
literal|8
decl_stmt|;
name|uint64_t
name|pkt_len
range|:
literal|16
decl_stmt|;
comment|/* W1 */
name|uint64_t
name|vlan2_ptr
range|:
literal|8
decl_stmt|;
name|uint64_t
name|vlan_ptr
range|:
literal|8
decl_stmt|;
name|uint64_t
name|vlan_tci
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rss_tag
range|:
literal|32
decl_stmt|;
comment|/* W2 */
name|uint64_t
name|rb0_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb1_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb2_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb3_sz
range|:
literal|16
decl_stmt|;
comment|/* W3 */
name|uint64_t
name|rb4_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb5_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb6_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb7_sz
range|:
literal|16
decl_stmt|;
comment|/* W4 */
name|uint64_t
name|rb8_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb9_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb10_sz
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rb11_sz
range|:
literal|16
decl_stmt|;
comment|/* W5 */
endif|#
directive|endif
name|uint64_t
name|rb0_ptr
range|:
literal|64
decl_stmt|;
name|uint64_t
name|rb1_ptr
range|:
literal|64
decl_stmt|;
name|uint64_t
name|rb2_ptr
range|:
literal|64
decl_stmt|;
name|uint64_t
name|rb3_ptr
range|:
literal|64
decl_stmt|;
name|uint64_t
name|rb4_ptr
range|:
literal|64
decl_stmt|;
name|uint64_t
name|rb5_ptr
range|:
literal|64
decl_stmt|;
name|uint64_t
name|rb6_ptr
range|:
literal|64
decl_stmt|;
name|uint64_t
name|rb7_ptr
range|:
literal|64
decl_stmt|;
name|uint64_t
name|rb8_ptr
range|:
literal|64
decl_stmt|;
name|uint64_t
name|rb9_ptr
range|:
literal|64
decl_stmt|;
name|uint64_t
name|rb10_ptr
range|:
literal|64
decl_stmt|;
name|uint64_t
name|rb11_ptr
range|:
literal|64
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cqe_rx_tcp_err_t
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|cqe_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|rsvd0
range|:
literal|60
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|4
decl_stmt|;
comment|/* W1 */
name|uint64_t
name|partial_first
range|:
literal|1
decl_stmt|;
name|uint64_t
name|rsvd2
range|:
literal|27
decl_stmt|;
name|uint64_t
name|rbdr_bytes
range|:
literal|8
decl_stmt|;
name|uint64_t
name|rsvd3
range|:
literal|24
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|rsvd0
range|:
literal|60
decl_stmt|;
name|uint64_t
name|cqe_type
range|:
literal|4
decl_stmt|;
name|uint64_t
name|rsvd3
range|:
literal|24
decl_stmt|;
name|uint64_t
name|rbdr_bytes
range|:
literal|8
decl_stmt|;
name|uint64_t
name|rsvd2
range|:
literal|27
decl_stmt|;
name|uint64_t
name|partial_first
range|:
literal|1
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|4
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cqe_rx_tcp_t
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|cqe_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|rsvd0
range|:
literal|52
decl_stmt|;
name|uint64_t
name|cq_tcp_status
range|:
literal|8
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|32
decl_stmt|;
comment|/* W1 */
name|uint64_t
name|tcp_cntx_bytes
range|:
literal|8
decl_stmt|;
name|uint64_t
name|rsvd2
range|:
literal|8
decl_stmt|;
name|uint64_t
name|tcp_err_bytes
range|:
literal|16
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|cq_tcp_status
range|:
literal|8
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|52
decl_stmt|;
name|uint64_t
name|cqe_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|tcp_err_bytes
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rsvd2
range|:
literal|8
decl_stmt|;
name|uint64_t
name|tcp_cntx_bytes
range|:
literal|8
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|32
decl_stmt|;
comment|/* W1 */
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cqe_send_t
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|cqe_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|rsvd0
range|:
literal|4
decl_stmt|;
name|uint64_t
name|sqe_ptr
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|4
decl_stmt|;
name|uint64_t
name|rsvd2
range|:
literal|10
decl_stmt|;
name|uint64_t
name|sq_qs
range|:
literal|7
decl_stmt|;
name|uint64_t
name|sq_idx
range|:
literal|3
decl_stmt|;
name|uint64_t
name|rsvd3
range|:
literal|8
decl_stmt|;
name|uint64_t
name|send_status
range|:
literal|8
decl_stmt|;
name|uint64_t
name|ptp_timestamp
range|:
literal|64
decl_stmt|;
comment|/* W1 */
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|send_status
range|:
literal|8
decl_stmt|;
name|uint64_t
name|rsvd3
range|:
literal|8
decl_stmt|;
name|uint64_t
name|sq_idx
range|:
literal|3
decl_stmt|;
name|uint64_t
name|sq_qs
range|:
literal|7
decl_stmt|;
name|uint64_t
name|rsvd2
range|:
literal|10
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|4
decl_stmt|;
name|uint64_t
name|sqe_ptr
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|4
decl_stmt|;
name|uint64_t
name|cqe_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|ptp_timestamp
range|:
literal|64
decl_stmt|;
comment|/* W1 */
endif|#
directive|endif
block|}
struct|;
end_struct

begin_union
union|union
name|cq_desc_t
block|{
name|uint64_t
name|u
index|[
literal|64
index|]
decl_stmt|;
name|struct
name|cqe_send_t
name|snd_hdr
decl_stmt|;
name|struct
name|cqe_rx_t
name|rx_hdr
decl_stmt|;
name|struct
name|cqe_rx_tcp_t
name|rx_tcp_hdr
decl_stmt|;
name|struct
name|cqe_rx_tcp_err_t
name|rx_tcp_err_hdr
decl_stmt|;
block|}
union|;
end_union

begin_struct
struct|struct
name|rbdr_entry_t
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|rsvd0
range|:
literal|15
decl_stmt|;
name|uint64_t
name|buf_addr
range|:
literal|42
decl_stmt|;
name|uint64_t
name|cache_align
range|:
literal|7
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|cache_align
range|:
literal|7
decl_stmt|;
name|uint64_t
name|buf_addr
range|:
literal|42
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|15
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_comment
comment|/* TCP reassembly context */
end_comment

begin_struct
struct|struct
name|rbe_tcp_cnxt_t
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|tcp_pkt_cnt
range|:
literal|12
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|4
decl_stmt|;
name|uint64_t
name|align_hdr_bytes
range|:
literal|4
decl_stmt|;
name|uint64_t
name|align_ptr_bytes
range|:
literal|4
decl_stmt|;
name|uint64_t
name|ptr_bytes
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rsvd2
range|:
literal|24
decl_stmt|;
name|uint64_t
name|cqe_type
range|:
literal|4
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|54
decl_stmt|;
name|uint64_t
name|tcp_end_reason
range|:
literal|2
decl_stmt|;
name|uint64_t
name|tcp_status
range|:
literal|4
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|tcp_status
range|:
literal|4
decl_stmt|;
name|uint64_t
name|tcp_end_reason
range|:
literal|2
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|54
decl_stmt|;
name|uint64_t
name|cqe_type
range|:
literal|4
decl_stmt|;
name|uint64_t
name|rsvd2
range|:
literal|24
decl_stmt|;
name|uint64_t
name|ptr_bytes
range|:
literal|16
decl_stmt|;
name|uint64_t
name|align_ptr_bytes
range|:
literal|4
decl_stmt|;
name|uint64_t
name|align_hdr_bytes
range|:
literal|4
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|4
decl_stmt|;
name|uint64_t
name|tcp_pkt_cnt
range|:
literal|12
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_comment
comment|/* Always Big endian */
end_comment

begin_struct
struct|struct
name|rx_hdr_t
block|{
name|uint64_t
name|opaque
range|:
literal|32
decl_stmt|;
name|uint64_t
name|rss_flow
range|:
literal|8
decl_stmt|;
name|uint64_t
name|skip_length
range|:
literal|6
decl_stmt|;
name|uint64_t
name|disable_rss
range|:
literal|1
decl_stmt|;
name|uint64_t
name|disable_tcp_reassembly
range|:
literal|1
decl_stmt|;
name|uint64_t
name|nodrop
range|:
literal|1
decl_stmt|;
name|uint64_t
name|dest_alg
range|:
literal|2
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|2
decl_stmt|;
name|uint64_t
name|dest_rq
range|:
literal|11
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|send_l4_csum_type
block|{
name|SEND_L4_CSUM_DISABLE
init|=
literal|0x00
block|,
name|SEND_L4_CSUM_UDP
init|=
literal|0x01
block|,
name|SEND_L4_CSUM_TCP
init|=
literal|0x02
block|,
name|SEND_L4_CSUM_SCTP
init|=
literal|0x03
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|send_crc_alg
block|{
name|SEND_CRCALG_CRC32
init|=
literal|0x00
block|,
name|SEND_CRCALG_CRC32C
init|=
literal|0x01
block|,
name|SEND_CRCALG_ICRC
init|=
literal|0x02
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|send_load_type
block|{
name|SEND_LD_TYPE_LDD
init|=
literal|0x00
block|,
name|SEND_LD_TYPE_LDT
init|=
literal|0x01
block|,
name|SEND_LD_TYPE_LDWB
init|=
literal|0x02
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|send_mem_alg_type
block|{
name|SEND_MEMALG_SET
init|=
literal|0x00
block|,
name|SEND_MEMALG_ADD
init|=
literal|0x08
block|,
name|SEND_MEMALG_SUB
init|=
literal|0x09
block|,
name|SEND_MEMALG_ADDLEN
init|=
literal|0x0A
block|,
name|SEND_MEMALG_SUBLEN
init|=
literal|0x0B
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|send_mem_dsz_type
block|{
name|SEND_MEMDSZ_B64
init|=
literal|0x00
block|,
name|SEND_MEMDSZ_B32
init|=
literal|0x01
block|,
name|SEND_MEMDSZ_B8
init|=
literal|0x03
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|sq_subdesc_type
block|{
name|SQ_DESC_TYPE_INVALID
init|=
literal|0x00
block|,
name|SQ_DESC_TYPE_HEADER
init|=
literal|0x01
block|,
name|SQ_DESC_TYPE_CRC
init|=
literal|0x02
block|,
name|SQ_DESC_TYPE_IMMEDIATE
init|=
literal|0x03
block|,
name|SQ_DESC_TYPE_GATHER
init|=
literal|0x04
block|,
name|SQ_DESC_TYPE_MEMORY
init|=
literal|0x05
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|sq_crc_subdesc
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|rsvd1
range|:
literal|32
decl_stmt|;
name|uint64_t
name|crc_ival
range|:
literal|32
decl_stmt|;
name|uint64_t
name|subdesc_type
range|:
literal|4
decl_stmt|;
name|uint64_t
name|crc_alg
range|:
literal|2
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|10
decl_stmt|;
name|uint64_t
name|crc_insert_pos
range|:
literal|16
decl_stmt|;
name|uint64_t
name|hdr_start
range|:
literal|16
decl_stmt|;
name|uint64_t
name|crc_len
range|:
literal|16
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|crc_len
range|:
literal|16
decl_stmt|;
name|uint64_t
name|hdr_start
range|:
literal|16
decl_stmt|;
name|uint64_t
name|crc_insert_pos
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|10
decl_stmt|;
name|uint64_t
name|crc_alg
range|:
literal|2
decl_stmt|;
name|uint64_t
name|subdesc_type
range|:
literal|4
decl_stmt|;
name|uint64_t
name|crc_ival
range|:
literal|32
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|32
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|sq_gather_subdesc
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|subdesc_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|ld_type
range|:
literal|2
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|42
decl_stmt|;
name|uint64_t
name|size
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|15
decl_stmt|;
comment|/* W1 */
name|uint64_t
name|addr
range|:
literal|49
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|size
range|:
literal|16
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|42
decl_stmt|;
name|uint64_t
name|ld_type
range|:
literal|2
decl_stmt|;
name|uint64_t
name|subdesc_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|addr
range|:
literal|49
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|15
decl_stmt|;
comment|/* W1 */
endif|#
directive|endif
block|}
struct|;
end_struct

begin_comment
comment|/* SQ immediate subdescriptor */
end_comment

begin_struct
struct|struct
name|sq_imm_subdesc
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|subdesc_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|rsvd0
range|:
literal|46
decl_stmt|;
name|uint64_t
name|len
range|:
literal|14
decl_stmt|;
name|uint64_t
name|data
range|:
literal|64
decl_stmt|;
comment|/* W1 */
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|len
range|:
literal|14
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|46
decl_stmt|;
name|uint64_t
name|subdesc_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|data
range|:
literal|64
decl_stmt|;
comment|/* W1 */
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|sq_mem_subdesc
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|subdesc_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|mem_alg
range|:
literal|4
decl_stmt|;
name|uint64_t
name|mem_dsz
range|:
literal|2
decl_stmt|;
name|uint64_t
name|wmem
range|:
literal|1
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|21
decl_stmt|;
name|uint64_t
name|offset
range|:
literal|32
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|15
decl_stmt|;
comment|/* W1 */
name|uint64_t
name|addr
range|:
literal|49
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|offset
range|:
literal|32
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|21
decl_stmt|;
name|uint64_t
name|wmem
range|:
literal|1
decl_stmt|;
name|uint64_t
name|mem_dsz
range|:
literal|2
decl_stmt|;
name|uint64_t
name|mem_alg
range|:
literal|4
decl_stmt|;
name|uint64_t
name|subdesc_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|addr
range|:
literal|49
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|15
decl_stmt|;
comment|/* W1 */
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|sq_hdr_subdesc
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|subdesc_type
range|:
literal|4
decl_stmt|;
name|uint64_t
name|tso
range|:
literal|1
decl_stmt|;
name|uint64_t
name|post_cqe
range|:
literal|1
decl_stmt|;
comment|/* Post CQE on no error also */
name|uint64_t
name|dont_send
range|:
literal|1
decl_stmt|;
name|uint64_t
name|tstmp
range|:
literal|1
decl_stmt|;
name|uint64_t
name|subdesc_cnt
range|:
literal|8
decl_stmt|;
name|uint64_t
name|csum_l4
range|:
literal|2
decl_stmt|;
name|uint64_t
name|csum_l3
range|:
literal|1
decl_stmt|;
name|uint64_t
name|csum_inner_l4
range|:
literal|2
decl_stmt|;
name|uint64_t
name|csum_inner_l3
range|:
literal|1
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|2
decl_stmt|;
name|uint64_t
name|l4_offset
range|:
literal|8
decl_stmt|;
name|uint64_t
name|l3_offset
range|:
literal|8
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|4
decl_stmt|;
name|uint64_t
name|tot_len
range|:
literal|20
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|rsvd2
range|:
literal|24
decl_stmt|;
name|uint64_t
name|inner_l4_offset
range|:
literal|8
decl_stmt|;
name|uint64_t
name|inner_l3_offset
range|:
literal|8
decl_stmt|;
name|uint64_t
name|tso_start
range|:
literal|8
decl_stmt|;
name|uint64_t
name|rsvd3
range|:
literal|2
decl_stmt|;
name|uint64_t
name|tso_max_paysize
range|:
literal|14
decl_stmt|;
comment|/* W1 */
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|tot_len
range|:
literal|20
decl_stmt|;
name|uint64_t
name|rsvd1
range|:
literal|4
decl_stmt|;
name|uint64_t
name|l3_offset
range|:
literal|8
decl_stmt|;
name|uint64_t
name|l4_offset
range|:
literal|8
decl_stmt|;
name|uint64_t
name|rsvd0
range|:
literal|2
decl_stmt|;
name|uint64_t
name|csum_inner_l3
range|:
literal|1
decl_stmt|;
name|uint64_t
name|csum_inner_l4
range|:
literal|2
decl_stmt|;
name|uint64_t
name|csum_l3
range|:
literal|1
decl_stmt|;
name|uint64_t
name|csum_l4
range|:
literal|2
decl_stmt|;
name|uint64_t
name|subdesc_cnt
range|:
literal|8
decl_stmt|;
name|uint64_t
name|tstmp
range|:
literal|1
decl_stmt|;
name|uint64_t
name|dont_send
range|:
literal|1
decl_stmt|;
name|uint64_t
name|post_cqe
range|:
literal|1
decl_stmt|;
comment|/* Post CQE on no error also */
name|uint64_t
name|tso
range|:
literal|1
decl_stmt|;
name|uint64_t
name|subdesc_type
range|:
literal|4
decl_stmt|;
comment|/* W0 */
name|uint64_t
name|tso_max_paysize
range|:
literal|14
decl_stmt|;
name|uint64_t
name|rsvd3
range|:
literal|2
decl_stmt|;
name|uint64_t
name|tso_start
range|:
literal|8
decl_stmt|;
name|uint64_t
name|inner_l3_offset
range|:
literal|8
decl_stmt|;
name|uint64_t
name|inner_l4_offset
range|:
literal|8
decl_stmt|;
name|uint64_t
name|rsvd2
range|:
literal|24
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_comment
comment|/* Queue config register formats */
end_comment

begin_struct
struct|struct
name|rq_cfg
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|reserved_2_63
range|:
literal|62
decl_stmt|;
name|uint64_t
name|ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|tcp_ena
range|:
literal|1
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|tcp_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_2_63
range|:
literal|62
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cq_cfg
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|reserved_43_63
range|:
literal|21
decl_stmt|;
name|uint64_t
name|ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reset
range|:
literal|1
decl_stmt|;
name|uint64_t
name|caching
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_35_39
range|:
literal|5
decl_stmt|;
name|uint64_t
name|qsize
range|:
literal|3
decl_stmt|;
name|uint64_t
name|reserved_25_31
range|:
literal|7
decl_stmt|;
name|uint64_t
name|avg_con
range|:
literal|9
decl_stmt|;
name|uint64_t
name|reserved_0_15
range|:
literal|16
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|reserved_0_15
range|:
literal|16
decl_stmt|;
name|uint64_t
name|avg_con
range|:
literal|9
decl_stmt|;
name|uint64_t
name|reserved_25_31
range|:
literal|7
decl_stmt|;
name|uint64_t
name|qsize
range|:
literal|3
decl_stmt|;
name|uint64_t
name|reserved_35_39
range|:
literal|5
decl_stmt|;
name|uint64_t
name|caching
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reset
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_43_63
range|:
literal|21
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|sq_cfg
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|reserved_20_63
range|:
literal|44
decl_stmt|;
name|uint64_t
name|ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_18_18
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reset
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ldwb
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_11_15
range|:
literal|5
decl_stmt|;
name|uint64_t
name|qsize
range|:
literal|3
decl_stmt|;
name|uint64_t
name|reserved_3_7
range|:
literal|5
decl_stmt|;
name|uint64_t
name|tstmp_bgx_intf
range|:
literal|3
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|tstmp_bgx_intf
range|:
literal|3
decl_stmt|;
name|uint64_t
name|reserved_3_7
range|:
literal|5
decl_stmt|;
name|uint64_t
name|qsize
range|:
literal|3
decl_stmt|;
name|uint64_t
name|reserved_11_15
range|:
literal|5
decl_stmt|;
name|uint64_t
name|ldwb
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reset
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_18_18
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_20_63
range|:
literal|44
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rbdr_cfg
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|reserved_45_63
range|:
literal|19
decl_stmt|;
name|uint64_t
name|ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reset
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ldwb
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_36_41
range|:
literal|6
decl_stmt|;
name|uint64_t
name|qsize
range|:
literal|4
decl_stmt|;
name|uint64_t
name|reserved_25_31
range|:
literal|7
decl_stmt|;
name|uint64_t
name|avg_con
range|:
literal|9
decl_stmt|;
name|uint64_t
name|reserved_12_15
range|:
literal|4
decl_stmt|;
name|uint64_t
name|lines
range|:
literal|12
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|lines
range|:
literal|12
decl_stmt|;
name|uint64_t
name|reserved_12_15
range|:
literal|4
decl_stmt|;
name|uint64_t
name|avg_con
range|:
literal|9
decl_stmt|;
name|uint64_t
name|reserved_25_31
range|:
literal|7
decl_stmt|;
name|uint64_t
name|qsize
range|:
literal|4
decl_stmt|;
name|uint64_t
name|reserved_36_41
range|:
literal|6
decl_stmt|;
name|uint64_t
name|ldwb
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reset
range|:
literal|1
decl_stmt|;
name|uint64_t
name|ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_45_63
range|:
literal|19
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|qs_cfg
block|{
if|#
directive|if
name|defined
argument_list|(
name|__BIG_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|reserved_32_63
range|:
literal|32
decl_stmt|;
name|uint64_t
name|ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_27_30
range|:
literal|4
decl_stmt|;
name|uint64_t
name|sq_ins_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sq_ins_pos
range|:
literal|6
decl_stmt|;
name|uint64_t
name|lock_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lock_viol_cqe_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|send_tstmp_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|be
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_7_15
range|:
literal|9
decl_stmt|;
name|uint64_t
name|vnic
range|:
literal|7
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|__LITTLE_ENDIAN_BITFIELD
argument_list|)
name|uint64_t
name|vnic
range|:
literal|7
decl_stmt|;
name|uint64_t
name|reserved_7_15
range|:
literal|9
decl_stmt|;
name|uint64_t
name|be
range|:
literal|1
decl_stmt|;
name|uint64_t
name|send_tstmp_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lock_viol_cqe_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|lock_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|sq_ins_pos
range|:
literal|6
decl_stmt|;
name|uint64_t
name|sq_ins_ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_27_30
range|:
literal|4
decl_stmt|;
name|uint64_t
name|ena
range|:
literal|1
decl_stmt|;
name|uint64_t
name|reserved_32_63
range|:
literal|32
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Q_STRUCT_H */
end_comment

end_unit

