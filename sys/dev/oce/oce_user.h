begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (C) 2013 Emulex  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *  * 1. Redistributions of source code must retain the above copyright notice,  *    this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * 3. Neither the name of the Emulex Corporation nor the names of its  *    contributors may be used to endorse or promote products derived from  *    this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  *  * Contact Information:  * freebsd-drivers@emulex.com  *  * Emulex  * 3333 Susan Street  * Costa Mesa, CA 92626  */
end_comment

begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_struct_decl
struct_decl|struct
name|oce_mbx
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|oce_softc
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|mbx_hdr
struct_decl|;
end_struct_decl

begin_enum
enum|enum
name|oce_interrupt_mode
block|{
name|OCE_INTERRUPT_MODE_MSIX
init|=
literal|0
block|,
name|OCE_INTERRUPT_MODE_INTX
init|=
literal|1
block|,
name|OCE_INTERRUPT_MODE_MSI
init|=
literal|2
block|, }
enum|;
end_enum

begin_define
define|#
directive|define
name|MAX_ROCE_MSIX_VECTORS
value|16
end_define

begin_define
define|#
directive|define
name|MIN_ROCE_MSIX_VECTORS
value|1
end_define

begin_define
define|#
directive|define
name|ROCE_MSIX_VECTORS
value|2
end_define

begin_struct
struct|struct
name|oce_dev_info
block|{
name|device_t
name|dev
decl_stmt|;
name|struct
name|ifnet
modifier|*
name|ifp
decl_stmt|;
name|struct
name|oce_softc
modifier|*
name|softc
decl_stmt|;
name|bus_space_handle_t
name|db_bhandle
decl_stmt|;
name|bus_space_tag_t
name|db_btag
decl_stmt|;
name|uint64_t
name|unmapped_db
decl_stmt|;
name|uint32_t
name|unmapped_db_len
decl_stmt|;
name|uint32_t
name|db_page_size
decl_stmt|;
name|uint64_t
name|dpp_unmapped_addr
decl_stmt|;
name|uint32_t
name|dpp_unmapped_len
decl_stmt|;
name|uint8_t
name|mac_addr
index|[
literal|6
index|]
decl_stmt|;
name|uint32_t
name|dev_family
decl_stmt|;
name|uint16_t
name|vendor_id
decl_stmt|;
name|uint16_t
name|dev_id
decl_stmt|;
name|enum
name|oce_interrupt_mode
name|intr_mode
decl_stmt|;
struct|struct
block|{
name|int
name|num_vectors
decl_stmt|;
name|int
name|start_vector
decl_stmt|;
name|uint32_t
name|vector_list
index|[
name|MAX_ROCE_MSIX_VECTORS
index|]
decl_stmt|;
block|}
name|msix
struct|;
name|uint32_t
name|flags
decl_stmt|;
define|#
directive|define
name|OCE_RDMA_INFO_RDMA_SUPPORTED
value|0x00000001
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|OCE_GEN2_FAMILY
value|2
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|notdef
end_ifdef

begin_struct
struct|struct
name|oce_mbx_ctx
block|{
name|struct
name|oce_mbx
modifier|*
name|mbx
decl_stmt|;
name|void
function_decl|(
modifier|*
name|cb
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|)
function_decl|;
name|void
modifier|*
name|cb_ctx
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_struct_decl
struct_decl|struct
name|oce_mbx_ctx
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
struct|struct
name|oce_rdma_info
block|{
name|int
name|size
decl_stmt|;
name|void
function_decl|(
modifier|*
name|close
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|mbox_post
function_decl|)
parameter_list|(
name|struct
name|oce_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|oce_mbx
modifier|*
name|mbx
parameter_list|,
name|struct
name|oce_mbx_ctx
modifier|*
name|mbxctx
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|common_req_hdr_init
function_decl|)
parameter_list|(
name|struct
name|mbx_hdr
modifier|*
name|hdr
parameter_list|,
name|uint8_t
name|dom
parameter_list|,
name|uint8_t
name|port
parameter_list|,
name|uint8_t
name|subsys
parameter_list|,
name|uint8_t
name|opcode
parameter_list|,
name|uint32_t
name|timeout
parameter_list|,
name|uint32_t
name|pyld_len
parameter_list|,
name|uint8_t
name|version
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|get_mac_addr
function_decl|)
parameter_list|(
name|struct
name|oce_softc
modifier|*
name|sc
parameter_list|,
name|uint8_t
modifier|*
name|macaddr
parameter_list|)
function_decl|;
block|}
name|OCE_RDMA_INFO
operator|,
typedef|*
name|POCE_RDMA_INFO
typedef|;
end_typedef

begin_define
define|#
directive|define
name|OCE_RDMA_INFO_SIZE
value|(sizeof(OCE_RDMA_INFO))
end_define

begin_typedef
typedef|typedef
struct|struct
name|oce_rdma_if
block|{
name|int
name|size
decl_stmt|;
name|int
function_decl|(
modifier|*
name|announce
function_decl|)
parameter_list|(
name|struct
name|oce_dev_info
modifier|*
name|devinfo
parameter_list|)
function_decl|;
block|}
name|OCE_RDMA_IF
operator|,
typedef|*
name|POCE_RDMA_IF
typedef|;
end_typedef

begin_define
define|#
directive|define
name|OCE_RDMA_IF_SIZE
value|(sizeof(OCE_RDMA_IF))
end_define

begin_function_decl
name|int
name|oce_register_rdma
parameter_list|(
name|POCE_RDMA_INFO
name|rdma_info
parameter_list|,
name|POCE_RDMA_IF
name|rdma_if
parameter_list|)
function_decl|;
end_function_decl

end_unit

