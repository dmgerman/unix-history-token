begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $NetBSD: awivar.h,v 1.20 2004/01/15 09:39:15 onoe Exp $ */
end_comment

begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/*-  * Copyright (c) 1999,2000,2001 The NetBSD Foundation, Inc.  * All rights reserved.  *  * This code is derived from software contributed to The NetBSD Foundation  * by Bill Sommerfeld  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *        This product includes software developed by the NetBSD  *        Foundation, Inc. and its contributors.  * 4. Neither the name of The NetBSD Foundation nor the names of its  *    contributors may be used to endorse or promote products derived  *    from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS  * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED  * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_DEV_IC_AWIVAR_H
end_ifndef

begin_define
define|#
directive|define
name|_DEV_IC_AWIVAR_H
end_define

begin_comment
comment|/* timer values in msec */
end_comment

begin_define
define|#
directive|define
name|AWI_SELFTEST_TIMEOUT
value|5000
end_define

begin_define
define|#
directive|define
name|AWI_CMD_TIMEOUT
value|2000
end_define

begin_define
define|#
directive|define
name|AWI_LOCKOUT_TIMEOUT
value|50
end_define

begin_define
define|#
directive|define
name|AWI_ASCAN_DURATION
value|100
end_define

begin_define
define|#
directive|define
name|AWI_ASCAN_WAIT
value|3000
end_define

begin_define
define|#
directive|define
name|AWI_PSCAN_DURATION
value|200
end_define

begin_define
define|#
directive|define
name|AWI_PSCAN_WAIT
value|5000
end_define

begin_define
define|#
directive|define
name|AWI_TRANS_TIMEOUT
value|5000
end_define

begin_define
define|#
directive|define
name|AWI_NTXBUFS
value|4
end_define

begin_enum
enum|enum
name|awi_sub_state
block|{
name|AWI_ST_NONE
block|,
name|AWI_ST_SCAN_INIT
block|,
name|AWI_ST_SCAN_SETMIB
block|,
name|AWI_ST_SCAN_SCCMD
block|,
name|AWI_ST_SUB_INIT
block|,
name|AWI_ST_SUB_SETSS
block|,
name|AWI_ST_SUB_SYNC
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|AWI_WAIT
value|0
end_define

begin_comment
comment|/* must wait for completion */
end_comment

begin_define
define|#
directive|define
name|AWI_NOWAIT
value|1
end_define

begin_comment
comment|/* do not wait */
end_comment

begin_struct
struct|struct
name|awi_chanset
block|{
name|u_int8_t
name|cs_type
decl_stmt|;
name|u_int8_t
name|cs_region
decl_stmt|;
name|u_int8_t
name|cs_min
decl_stmt|;
name|u_int8_t
name|cs_max
decl_stmt|;
name|u_int8_t
name|cs_def
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|awi_softc
block|{
ifdef|#
directive|ifdef
name|__NetBSD__
name|struct
name|device
name|sc_dev
decl_stmt|;
name|void
function_decl|(
modifier|*
name|sc_power
function_decl|)
parameter_list|(
name|struct
name|awi_softc
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__FreeBSD__
name|struct
name|arpcom
name|sc_arp
decl_stmt|;
name|device_t
name|sc_dev
decl_stmt|;
endif|#
directive|endif
name|struct
name|am79c930_softc
name|sc_chip
decl_stmt|;
name|struct
name|ieee80211com
name|sc_ic
decl_stmt|;
name|u_char
name|sc_banner
index|[
name|AWI_BANNER_LEN
index|]
decl_stmt|;
name|int
function_decl|(
modifier|*
name|sc_enable
function_decl|)
parameter_list|(
name|struct
name|awi_softc
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_disable
function_decl|)
parameter_list|(
name|struct
name|awi_softc
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_newstate
function_decl|)
parameter_list|(
name|struct
name|ieee80211com
modifier|*
parameter_list|,
name|enum
name|ieee80211_state
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_recv_mgmt
function_decl|)
parameter_list|(
name|struct
name|ieee80211com
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|,
name|struct
name|ieee80211_node
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|u_int32_t
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_send_mgmt
function_decl|)
parameter_list|(
name|struct
name|ieee80211com
modifier|*
parameter_list|,
name|struct
name|ieee80211_node
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
modifier|*
name|sc_sdhook
decl_stmt|;
comment|/* shutdown hook */
name|void
modifier|*
name|sc_powerhook
decl_stmt|;
comment|/* power management hook */
name|unsigned
name|int
name|sc_attached
range|:
literal|1
decl_stmt|,
name|sc_enabled
range|:
literal|1
decl_stmt|,
name|sc_busy
range|:
literal|1
decl_stmt|,
name|sc_cansleep
range|:
literal|1
decl_stmt|,
name|sc_enab_intr
range|:
literal|1
decl_stmt|,
name|sc_adhoc_ap
range|:
literal|1
decl_stmt|,
name|sc_invalid
range|:
literal|1
decl_stmt|;
name|enum
name|ieee80211_state
name|sc_nstate
decl_stmt|;
name|enum
name|awi_sub_state
name|sc_substate
decl_stmt|;
name|int
name|sc_sleep_cnt
decl_stmt|;
name|u_int8_t
name|sc_cmd_inprog
decl_stmt|;
name|u_int8_t
name|sc_cur_chan
decl_stmt|;
name|int
name|sc_rx_timer
decl_stmt|;
name|u_int32_t
name|sc_rxdoff
decl_stmt|;
name|u_int32_t
name|sc_rxmoff
decl_stmt|;
name|struct
name|mbuf
modifier|*
name|sc_rxpend
decl_stmt|;
name|int
name|sc_tx_timer
decl_stmt|;
name|u_int32_t
name|sc_txbase
decl_stmt|;
name|u_int32_t
name|sc_txend
decl_stmt|;
name|u_int32_t
name|sc_txnext
decl_stmt|;
name|u_int32_t
name|sc_txdone
decl_stmt|;
name|struct
name|awi_mib_local
name|sc_mib_local
decl_stmt|;
name|struct
name|awi_mib_addr
name|sc_mib_addr
decl_stmt|;
name|struct
name|awi_mib_mac
name|sc_mib_mac
decl_stmt|;
name|struct
name|awi_mib_stat
name|sc_mib_stat
decl_stmt|;
name|struct
name|awi_mib_mgt
name|sc_mib_mgt
decl_stmt|;
name|struct
name|awi_mib_phy
name|sc_mib_phy
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|awi_read_1
parameter_list|(
name|sc
parameter_list|,
name|off
parameter_list|)
value|((sc)->sc_chip.sc_ops->read_1)(&sc->sc_chip, off)
end_define

begin_define
define|#
directive|define
name|awi_read_2
parameter_list|(
name|sc
parameter_list|,
name|off
parameter_list|)
value|((sc)->sc_chip.sc_ops->read_2)(&sc->sc_chip, off)
end_define

begin_define
define|#
directive|define
name|awi_read_4
parameter_list|(
name|sc
parameter_list|,
name|off
parameter_list|)
value|((sc)->sc_chip.sc_ops->read_4)(&sc->sc_chip, off)
end_define

begin_define
define|#
directive|define
name|awi_read_bytes
parameter_list|(
name|sc
parameter_list|,
name|off
parameter_list|,
name|ptr
parameter_list|,
name|len
parameter_list|)
define|\
value|((sc)->sc_chip.sc_ops->read_bytes)(&sc->sc_chip, off, ptr, len)
end_define

begin_define
define|#
directive|define
name|awi_write_1
parameter_list|(
name|sc
parameter_list|,
name|off
parameter_list|,
name|val
parameter_list|)
define|\
value|((sc)->sc_chip.sc_ops->write_1)(&sc->sc_chip, off, val)
end_define

begin_define
define|#
directive|define
name|awi_write_2
parameter_list|(
name|sc
parameter_list|,
name|off
parameter_list|,
name|val
parameter_list|)
define|\
value|((sc)->sc_chip.sc_ops->write_2)(&sc->sc_chip, off, val)
end_define

begin_define
define|#
directive|define
name|awi_write_4
parameter_list|(
name|sc
parameter_list|,
name|off
parameter_list|,
name|val
parameter_list|)
define|\
value|((sc)->sc_chip.sc_ops->write_4)(&sc->sc_chip, off, val)
end_define

begin_define
define|#
directive|define
name|awi_write_bytes
parameter_list|(
name|sc
parameter_list|,
name|off
parameter_list|,
name|ptr
parameter_list|,
name|len
parameter_list|)
define|\
value|((sc)->sc_chip.sc_ops->write_bytes)(&sc->sc_chip, off, ptr, len)
end_define

begin_define
define|#
directive|define
name|awi_drvstate
parameter_list|(
name|sc
parameter_list|,
name|state
parameter_list|)
define|\
value|awi_write_1(sc, AWI_DRIVERSTATE, \ 	    ((state) | AWI_DRV_AUTORXLED|AWI_DRV_AUTOTXLED))
end_define

begin_function_decl
name|int
name|awi_attach
parameter_list|(
name|struct
name|awi_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|awi_detach
parameter_list|(
name|struct
name|awi_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|__NetBSD__
end_ifdef

begin_function_decl
name|int
name|awi_activate
parameter_list|(
name|struct
name|device
modifier|*
parameter_list|,
name|enum
name|devact
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|awi_power
parameter_list|(
name|int
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|awi_shutdown
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|awi_intr
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _DEV_IC_AWIVAR_H */
end_comment

end_unit

