begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2015-2016 Landon Fuller<landon@landonf.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer,  *    without modification.  * 2. Redistributions in binary form must reproduce at minimum a disclaimer  *    similar to the "NO WARRANTY" disclaimer below ("Disclaimer") and any  *    redistribution must be conditioned upon including a substantially  *    similar Disclaimer requirement for further binary redistribution.  *  * NO WARRANTY  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF NONINFRINGEMENT, MERCHANTIBILITY  * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL  * THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY,  * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER  * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF  * THE POSSIBILITY OF SUCH DAMAGES.  *   * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_BHND_NVRAM_BHND_NVRAM_PLIST_H_
end_ifndef

begin_define
define|#
directive|define
name|_BHND_NVRAM_BHND_NVRAM_PLIST_H_
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|_KERNEL
end_ifdef

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* !_KERNEL */
end_comment

begin_include
include|#
directive|include
file|<stdbool.h>
end_include

begin_include
include|#
directive|include
file|<stdint.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _KERNEL */
end_comment

begin_include
include|#
directive|include
file|"bhnd_nvram.h"
end_include

begin_include
include|#
directive|include
file|"bhnd_nvram_value.h"
end_include

begin_typedef
typedef|typedef
name|struct
name|bhnd_nvram_prop
name|bhnd_nvram_prop
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|bhnd_nvram_plist
name|bhnd_nvram_plist
typedef|;
end_typedef

begin_function_decl
name|bhnd_nvram_plist
modifier|*
name|bhnd_nvram_plist_new
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bhnd_nvram_plist
modifier|*
name|bhnd_nvram_plist_retain
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|bhnd_nvram_plist_release
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bhnd_nvram_plist
modifier|*
name|bhnd_nvram_plist_copy
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|bhnd_nvram_plist_count
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_append_list
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
name|bhnd_nvram_plist
modifier|*
name|tail
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_append
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
name|bhnd_nvram_prop
modifier|*
name|prop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_append_val
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|bhnd_nvram_val
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_append_bytes
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|void
modifier|*
name|inp
parameter_list|,
name|size_t
name|ilen
parameter_list|,
name|bhnd_nvram_type
name|itype
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_append_string
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_replace
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
name|bhnd_nvram_prop
modifier|*
name|prop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_replace_val
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|bhnd_nvram_val
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_replace_bytes
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|void
modifier|*
name|inp
parameter_list|,
name|size_t
name|ilen
parameter_list|,
name|bhnd_nvram_type
name|itype
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_replace_string
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|bhnd_nvram_plist_remove
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|bhnd_nvram_plist_contains
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bhnd_nvram_prop
modifier|*
name|bhnd_nvram_plist_next
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
name|bhnd_nvram_prop
modifier|*
name|prop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bhnd_nvram_prop
modifier|*
name|bhnd_nvram_plist_get_prop
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bhnd_nvram_val
modifier|*
name|bhnd_nvram_plist_get_val
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_get_encoded
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|void
modifier|*
name|outp
parameter_list|,
name|size_t
name|olen
parameter_list|,
name|bhnd_nvram_type
name|otype
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_get_char
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|u_char
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_get_uint8
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|uint8_t
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_get_uint16
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|uint16_t
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_get_uint32
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|uint32_t
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_get_uint64
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|uint64_t
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_get_string
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_plist_get_bool
parameter_list|(
name|bhnd_nvram_plist
modifier|*
name|plist
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|bool
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bhnd_nvram_prop
modifier|*
name|bhnd_nvram_prop_new
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|bhnd_nvram_val
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bhnd_nvram_prop
modifier|*
name|bhnd_nvram_prop_bytes_new
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|void
modifier|*
name|inp
parameter_list|,
name|size_t
name|ilen
parameter_list|,
name|bhnd_nvram_type
name|itype
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bhnd_nvram_prop
modifier|*
name|bhnd_nvram_prop_retain
parameter_list|(
name|bhnd_nvram_prop
modifier|*
name|prop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|bhnd_nvram_prop_release
parameter_list|(
name|bhnd_nvram_prop
modifier|*
name|prop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|bhnd_nvram_prop_name
parameter_list|(
name|bhnd_nvram_prop
modifier|*
name|prop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bhnd_nvram_val
modifier|*
name|bhnd_nvram_prop_val
parameter_list|(
name|bhnd_nvram_prop
modifier|*
name|prop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bhnd_nvram_type
name|bhnd_nvram_prop_type
parameter_list|(
name|bhnd_nvram_prop
modifier|*
name|prop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|bhnd_nvram_prop_is_null
parameter_list|(
name|bhnd_nvram_prop
modifier|*
name|prop
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|void
modifier|*
name|bhnd_nvram_prop_bytes
parameter_list|(
name|bhnd_nvram_prop
modifier|*
name|prop
parameter_list|,
name|size_t
modifier|*
name|olen
parameter_list|,
name|bhnd_nvram_type
modifier|*
name|otype
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bhnd_nvram_prop_encode
parameter_list|(
name|bhnd_nvram_prop
modifier|*
name|prop
parameter_list|,
name|void
modifier|*
name|outp
parameter_list|,
name|size_t
modifier|*
name|olen
parameter_list|,
name|bhnd_nvram_type
name|otype
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _BHND_NVRAM_BHND_NVRAM_PLIST_H_ */
end_comment

end_unit

