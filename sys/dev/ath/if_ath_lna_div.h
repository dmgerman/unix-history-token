begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2013 Adrian Chadd<adrian@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer,  *    without modification.  * 2. Redistributions in binary form must reproduce at minimum a disclaimer  *    similar to the "NO WARRANTY" disclaimer below ("Disclaimer") and any  *    redistribution must be conditioned upon including a substantially  *    similar Disclaimer requirement for further binary redistribution.  *  * NO WARRANTY  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF NONINFRINGEMENT, MERCHANTIBILITY  * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL  * THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY,  * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER  * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF  * THE POSSIBILITY OF SUCH DAMAGES.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__IF_ATH_LNA_DIV_H__
end_ifndef

begin_define
define|#
directive|define
name|__IF_ATH_LNA_DIV_H__
end_define

begin_define
define|#
directive|define
name|ATH_ANT_RX_CURRENT_SHIFT
value|4
end_define

begin_define
define|#
directive|define
name|ATH_ANT_RX_MAIN_SHIFT
value|2
end_define

begin_define
define|#
directive|define
name|ATH_ANT_RX_MASK
value|0x3
end_define

begin_define
define|#
directive|define
name|ATH_ANT_DIV_COMB_SHORT_SCAN_INTR
value|50
end_define

begin_define
define|#
directive|define
name|ATH_ANT_DIV_COMB_SHORT_SCAN_PKTCOUNT
value|0x100
end_define

begin_define
define|#
directive|define
name|ATH_ANT_DIV_COMB_MAX_PKTCOUNT
value|0x200
end_define

begin_define
define|#
directive|define
name|ATH_ANT_DIV_COMB_INIT_COUNT
value|95
end_define

begin_define
define|#
directive|define
name|ATH_ANT_DIV_COMB_MAX_COUNT
value|100
end_define

begin_define
define|#
directive|define
name|ATH_ANT_DIV_COMB_ALT_ANT_RATIO
value|30
end_define

begin_define
define|#
directive|define
name|ATH_ANT_DIV_COMB_ALT_ANT_RATIO2
value|20
end_define

begin_define
define|#
directive|define
name|ATH_ANT_DIV_COMB_LNA1_LNA2_SWITCH_DELTA
value|-1
end_define

begin_define
define|#
directive|define
name|ATH_ANT_DIV_COMB_LNA1_DELTA_HI
value|-4
end_define

begin_define
define|#
directive|define
name|ATH_ANT_DIV_COMB_LNA1_DELTA_MID
value|-2
end_define

begin_define
define|#
directive|define
name|ATH_ANT_DIV_COMB_LNA1_DELTA_LOW
value|2
end_define

begin_struct
struct|struct
name|if_ath_ant_comb_state
block|{
name|uint16_t
name|count
decl_stmt|;
name|uint16_t
name|total_pkt_count
decl_stmt|;
name|HAL_BOOL
name|scan
decl_stmt|;
name|HAL_BOOL
name|scan_not_start
decl_stmt|;
name|int
name|main_total_rssi
decl_stmt|;
name|int
name|alt_total_rssi
decl_stmt|;
name|int
name|alt_recv_cnt
decl_stmt|;
name|int
name|main_recv_cnt
decl_stmt|;
name|int
name|rssi_lna1
decl_stmt|;
name|int
name|rssi_lna2
decl_stmt|;
name|int
name|rssi_add
decl_stmt|;
name|int
name|rssi_sub
decl_stmt|;
name|int
name|rssi_first
decl_stmt|;
name|int
name|rssi_second
decl_stmt|;
name|int
name|rssi_third
decl_stmt|;
name|HAL_BOOL
name|alt_good
decl_stmt|;
name|int
name|quick_scan_cnt
decl_stmt|;
name|int
name|main_conf
decl_stmt|;
name|HAL_ANT_DIV_COMB_LNA_CONF
name|first_quick_scan_conf
decl_stmt|;
name|HAL_ANT_DIV_COMB_LNA_CONF
name|second_quick_scan_conf
decl_stmt|;
name|int
name|first_bias
decl_stmt|;
name|int
name|second_bias
decl_stmt|;
name|HAL_BOOL
name|first_ratio
decl_stmt|;
name|HAL_BOOL
name|second_ratio
decl_stmt|;
name|unsigned
name|long
name|scan_start_time
decl_stmt|;
name|int
name|lna1_lna2_delta
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
specifier|extern
name|int
name|ath_lna_div_attach
parameter_list|(
name|struct
name|ath_softc
modifier|*
name|sc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ath_lna_div_detach
parameter_list|(
name|struct
name|ath_softc
modifier|*
name|sc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ath_lna_div_ioctl
parameter_list|(
name|struct
name|ath_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|ath_diag
modifier|*
name|ad
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ath_lna_div_enable
parameter_list|(
name|struct
name|ath_softc
modifier|*
name|sc
parameter_list|,
specifier|const
name|struct
name|ieee80211_channel
modifier|*
name|ch
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ath_lna_rx_comb_scan
parameter_list|(
name|struct
name|ath_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|ath_rx_status
modifier|*
name|rs
parameter_list|,
name|unsigned
name|long
name|ticks
parameter_list|,
name|int
name|hz
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __IF_ATH_LNA_DIV_H__ */
end_comment

end_unit

