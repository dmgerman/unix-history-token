begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2017-2018 Cavium, Inc.   * All rights reserved.  *  *  Redistribution and use in source and binary forms, with or without  *  modification, are permitted provided that the following conditions  *  are met:  *  *  1. Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  2. Redistributions in binary form must reproduce the above copyright  *     notice, this list of conditions and the following disclaimer in the  *     documentation and/or other materials provided with the distribution.  *  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  *  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE  *  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  *  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  *  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  *  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  *  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  *  POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__ECORE_DCBX_API_H__
end_ifndef

begin_define
define|#
directive|define
name|__ECORE_DCBX_API_H__
end_define

begin_include
include|#
directive|include
file|"ecore_status.h"
end_include

begin_define
define|#
directive|define
name|DCBX_CONFIG_MAX_APP_PROTOCOL
value|4
end_define

begin_enum
enum|enum
name|ecore_mib_read_type
block|{
name|ECORE_DCBX_OPERATIONAL_MIB
block|,
name|ECORE_DCBX_REMOTE_MIB
block|,
name|ECORE_DCBX_LOCAL_MIB
block|,
name|ECORE_DCBX_REMOTE_LLDP_MIB
block|,
name|ECORE_DCBX_LOCAL_LLDP_MIB
block|}
enum|;
end_enum

begin_struct
struct|struct
name|ecore_dcbx_app_data
block|{
name|bool
name|enable
decl_stmt|;
comment|/* DCB enabled */
name|u8
name|update
decl_stmt|;
comment|/* Update indication */
name|u8
name|priority
decl_stmt|;
comment|/* Priority */
name|u8
name|tc
decl_stmt|;
comment|/* Traffic Class */
name|bool
name|dscp_enable
decl_stmt|;
comment|/* DSCP enabled */
name|u8
name|dscp_val
decl_stmt|;
comment|/* DSCP value */
block|}
struct|;
end_struct

begin_enum
enum|enum
name|dcbx_protocol_type
block|{
name|DCBX_PROTOCOL_ISCSI
block|,
name|DCBX_PROTOCOL_FCOE
block|,
name|DCBX_PROTOCOL_ROCE
block|,
name|DCBX_PROTOCOL_ROCE_V2
block|,
name|DCBX_PROTOCOL_ETH
block|,
name|DCBX_PROTOCOL_IWARP
block|,
name|DCBX_MAX_PROTOCOL_TYPE
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|ECORE_LLDP_CHASSIS_ID_STAT_LEN
value|4
end_define

begin_define
define|#
directive|define
name|ECORE_LLDP_PORT_ID_STAT_LEN
value|4
end_define

begin_define
define|#
directive|define
name|ECORE_DCBX_MAX_APP_PROTOCOL
value|32
end_define

begin_define
define|#
directive|define
name|ECORE_MAX_PFC_PRIORITIES
value|8
end_define

begin_define
define|#
directive|define
name|ECORE_DCBX_DSCP_SIZE
value|64
end_define

begin_struct
struct|struct
name|ecore_dcbx_lldp_remote
block|{
name|u32
name|peer_chassis_id
index|[
name|ECORE_LLDP_CHASSIS_ID_STAT_LEN
index|]
decl_stmt|;
name|u32
name|peer_port_id
index|[
name|ECORE_LLDP_PORT_ID_STAT_LEN
index|]
decl_stmt|;
name|bool
name|enable_rx
decl_stmt|;
name|bool
name|enable_tx
decl_stmt|;
name|u32
name|tx_interval
decl_stmt|;
name|u32
name|max_credit
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_dcbx_lldp_local
block|{
name|u32
name|local_chassis_id
index|[
name|ECORE_LLDP_CHASSIS_ID_STAT_LEN
index|]
decl_stmt|;
name|u32
name|local_port_id
index|[
name|ECORE_LLDP_PORT_ID_STAT_LEN
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_dcbx_app_prio
block|{
name|u8
name|roce
decl_stmt|;
name|u8
name|roce_v2
decl_stmt|;
name|u8
name|fcoe
decl_stmt|;
name|u8
name|iscsi
decl_stmt|;
name|u8
name|eth
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_dbcx_pfc_params
block|{
name|bool
name|willing
decl_stmt|;
name|bool
name|enabled
decl_stmt|;
name|u8
name|prio
index|[
name|ECORE_MAX_PFC_PRIORITIES
index|]
decl_stmt|;
name|u8
name|max_tc
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|ecore_dcbx_sf_ieee_type
block|{
name|ECORE_DCBX_SF_IEEE_ETHTYPE
block|,
name|ECORE_DCBX_SF_IEEE_TCP_PORT
block|,
name|ECORE_DCBX_SF_IEEE_UDP_PORT
block|,
name|ECORE_DCBX_SF_IEEE_TCP_UDP_PORT
block|}
enum|;
end_enum

begin_struct
struct|struct
name|ecore_app_entry
block|{
name|bool
name|ethtype
decl_stmt|;
name|enum
name|ecore_dcbx_sf_ieee_type
name|sf_ieee
decl_stmt|;
name|bool
name|enabled
decl_stmt|;
name|u8
name|prio
decl_stmt|;
name|u16
name|proto_id
decl_stmt|;
name|enum
name|dcbx_protocol_type
name|proto_type
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_dcbx_params
block|{
name|struct
name|ecore_app_entry
name|app_entry
index|[
name|ECORE_DCBX_MAX_APP_PROTOCOL
index|]
decl_stmt|;
name|u16
name|num_app_entries
decl_stmt|;
name|bool
name|app_willing
decl_stmt|;
name|bool
name|app_valid
decl_stmt|;
name|bool
name|app_error
decl_stmt|;
name|bool
name|ets_willing
decl_stmt|;
name|bool
name|ets_enabled
decl_stmt|;
name|bool
name|ets_cbs
decl_stmt|;
name|bool
name|valid
decl_stmt|;
comment|/* Indicate validity of params */
name|u8
name|ets_pri_tc_tbl
index|[
name|ECORE_MAX_PFC_PRIORITIES
index|]
decl_stmt|;
name|u8
name|ets_tc_bw_tbl
index|[
name|ECORE_MAX_PFC_PRIORITIES
index|]
decl_stmt|;
name|u8
name|ets_tc_tsa_tbl
index|[
name|ECORE_MAX_PFC_PRIORITIES
index|]
decl_stmt|;
name|struct
name|ecore_dbcx_pfc_params
name|pfc
decl_stmt|;
name|u8
name|max_ets_tc
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_dcbx_admin_params
block|{
name|struct
name|ecore_dcbx_params
name|params
decl_stmt|;
name|bool
name|valid
decl_stmt|;
comment|/* Indicate validity of params */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_dcbx_remote_params
block|{
name|struct
name|ecore_dcbx_params
name|params
decl_stmt|;
name|bool
name|valid
decl_stmt|;
comment|/* Indicate validity of params */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_dcbx_operational_params
block|{
name|struct
name|ecore_dcbx_app_prio
name|app_prio
decl_stmt|;
name|struct
name|ecore_dcbx_params
name|params
decl_stmt|;
name|bool
name|valid
decl_stmt|;
comment|/* Indicate validity of params */
name|bool
name|enabled
decl_stmt|;
name|bool
name|ieee
decl_stmt|;
name|bool
name|cee
decl_stmt|;
name|bool
name|local
decl_stmt|;
name|u32
name|err
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_dcbx_dscp_params
block|{
name|bool
name|enabled
decl_stmt|;
name|u8
name|dscp_pri_map
index|[
name|ECORE_DCBX_DSCP_SIZE
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_dcbx_get
block|{
name|struct
name|ecore_dcbx_operational_params
name|operational
decl_stmt|;
name|struct
name|ecore_dcbx_lldp_remote
name|lldp_remote
decl_stmt|;
name|struct
name|ecore_dcbx_lldp_local
name|lldp_local
decl_stmt|;
name|struct
name|ecore_dcbx_remote_params
name|remote
decl_stmt|;
name|struct
name|ecore_dcbx_admin_params
name|local
decl_stmt|;
name|struct
name|ecore_dcbx_dscp_params
name|dscp
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|ECORE_DCBX_VERSION_DISABLED
value|0
end_define

begin_define
define|#
directive|define
name|ECORE_DCBX_VERSION_IEEE
value|1
end_define

begin_define
define|#
directive|define
name|ECORE_DCBX_VERSION_CEE
value|2
end_define

begin_define
define|#
directive|define
name|ECORE_DCBX_VERSION_DYNAMIC
value|3
end_define

begin_struct
struct|struct
name|ecore_dcbx_set
block|{
define|#
directive|define
name|ECORE_DCBX_OVERRIDE_STATE
value|(1<< 0)
define|#
directive|define
name|ECORE_DCBX_OVERRIDE_PFC_CFG
value|(1<< 1)
define|#
directive|define
name|ECORE_DCBX_OVERRIDE_ETS_CFG
value|(1<< 2)
define|#
directive|define
name|ECORE_DCBX_OVERRIDE_APP_CFG
value|(1<< 3)
define|#
directive|define
name|ECORE_DCBX_OVERRIDE_DSCP_CFG
value|(1<< 4)
name|u32
name|override_flags
decl_stmt|;
name|bool
name|enabled
decl_stmt|;
name|struct
name|ecore_dcbx_admin_params
name|config
decl_stmt|;
name|u32
name|ver_num
decl_stmt|;
name|struct
name|ecore_dcbx_dscp_params
name|dscp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_dcbx_results
block|{
name|bool
name|dcbx_enabled
decl_stmt|;
name|u8
name|pf_id
decl_stmt|;
name|struct
name|ecore_dcbx_app_data
name|arr
index|[
name|DCBX_MAX_PROTOCOL_TYPE
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_dcbx_app_metadata
block|{
name|enum
name|dcbx_protocol_type
name|id
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
name|enum
name|ecore_pci_personality
name|personality
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_dcbx_query_params
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
parameter_list|,
name|struct
name|ecore_dcbx_get
modifier|*
parameter_list|,
name|enum
name|ecore_mib_read_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_dcbx_get_config_params
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
parameter_list|,
name|struct
name|ecore_dcbx_set
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_dcbx_config_params
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
parameter_list|,
name|struct
name|ecore_ptt
modifier|*
parameter_list|,
name|struct
name|ecore_dcbx_set
modifier|*
parameter_list|,
name|bool
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|ecore_dcbx_app_metadata
name|ecore_dcbx_app_update
index|[]
init|=
block|{
block|{
name|DCBX_PROTOCOL_ISCSI
block|,
literal|"ISCSI"
block|,
name|ECORE_PCI_ISCSI
block|}
block|,
block|{
name|DCBX_PROTOCOL_FCOE
block|,
literal|"FCOE"
block|,
name|ECORE_PCI_FCOE
block|}
block|,
block|{
name|DCBX_PROTOCOL_ROCE
block|,
literal|"ROCE"
block|,
name|ECORE_PCI_ETH_ROCE
block|}
block|,
block|{
name|DCBX_PROTOCOL_ROCE_V2
block|,
literal|"ROCE_V2"
block|,
name|ECORE_PCI_ETH_ROCE
block|}
block|,
block|{
name|DCBX_PROTOCOL_ETH
block|,
literal|"ETH"
block|,
name|ECORE_PCI_ETH
block|}
block|,
block|{
name|DCBX_PROTOCOL_IWARP
block|,
literal|"IWARP"
block|,
name|ECORE_PCI_ETH_IWARP
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __ECORE_DCBX_API_H__ */
end_comment

end_unit

