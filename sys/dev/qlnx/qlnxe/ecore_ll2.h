begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2017-2018 Cavium, Inc.   * All rights reserved.  *  *  Redistribution and use in source and binary forms, with or without  *  modification, are permitted provided that the following conditions  *  are met:  *  *  1. Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  2. Redistributions in binary form must reproduce the above copyright  *     notice, this list of conditions and the following disclaimer in the  *     documentation and/or other materials provided with the distribution.  *  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  *  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE  *  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  *  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  *  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  *  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  *  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  *  POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__ECORE_LL2_H__
end_ifndef

begin_define
define|#
directive|define
name|__ECORE_LL2_H__
end_define

begin_include
include|#
directive|include
file|"ecore.h"
end_include

begin_include
include|#
directive|include
file|"ecore_hsi_eth.h"
end_include

begin_include
include|#
directive|include
file|"ecore_chain.h"
end_include

begin_include
include|#
directive|include
file|"ecore_hsi_common.h"
end_include

begin_include
include|#
directive|include
file|"ecore_ll2_api.h"
end_include

begin_include
include|#
directive|include
file|"ecore_sp_api.h"
end_include

begin_comment
comment|/* ECORE LL2: internal structures and functions*/
end_comment

begin_define
define|#
directive|define
name|ECORE_MAX_NUM_OF_LL2_CONNECTIONS
value|(4)
end_define

begin_function
specifier|static
name|OSAL_INLINE
name|u8
name|ecore_ll2_handle_to_queue_id
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|u8
name|handle
parameter_list|)
block|{
return|return
name|p_hwfn
operator|->
name|hw_info
operator|.
name|resc_start
index|[
name|ECORE_LL2_QUEUE
index|]
operator|+
name|handle
return|;
block|}
end_function

begin_struct
struct|struct
name|ecore_ll2_rx_packet
block|{
name|osal_list_entry_t
name|list_entry
decl_stmt|;
name|struct
name|core_rx_bd_with_buff_len
modifier|*
name|rxq_bd
decl_stmt|;
name|dma_addr_t
name|rx_buf_addr
decl_stmt|;
name|u16
name|buf_length
decl_stmt|;
name|void
modifier|*
name|cookie
decl_stmt|;
name|u8
name|placement_offset
decl_stmt|;
name|u16
name|parse_flags
decl_stmt|;
name|u16
name|packet_length
decl_stmt|;
name|u16
name|vlan
decl_stmt|;
name|u32
name|opaque_data
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_ll2_tx_packet
block|{
name|osal_list_entry_t
name|list_entry
decl_stmt|;
name|u16
name|bd_used
decl_stmt|;
name|bool
name|notify_fw
decl_stmt|;
name|void
modifier|*
name|cookie
decl_stmt|;
struct|struct
block|{
name|struct
name|core_tx_bd
modifier|*
name|txq_bd
decl_stmt|;
name|dma_addr_t
name|tx_frag
decl_stmt|;
name|u16
name|frag_len
decl_stmt|;
block|}
name|bds_set
index|[
literal|1
index|]
struct|;
comment|/* Flexible Array of bds_set determined by max_bds_per_packet */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_ll2_rx_queue
block|{
name|osal_spinlock_t
name|lock
decl_stmt|;
name|struct
name|ecore_chain
name|rxq_chain
decl_stmt|;
name|struct
name|ecore_chain
name|rcq_chain
decl_stmt|;
name|u8
name|rx_sb_index
decl_stmt|;
name|bool
name|b_cb_registred
decl_stmt|;
name|__le16
modifier|*
name|p_fw_cons
decl_stmt|;
name|osal_list_t
name|active_descq
decl_stmt|;
name|osal_list_t
name|free_descq
decl_stmt|;
name|osal_list_t
name|posting_descq
decl_stmt|;
name|struct
name|ecore_ll2_rx_packet
modifier|*
name|descq_array
decl_stmt|;
name|void
name|OSAL_IOMEM
modifier|*
name|set_prod_addr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_ll2_tx_queue
block|{
name|osal_spinlock_t
name|lock
decl_stmt|;
name|struct
name|ecore_chain
name|txq_chain
decl_stmt|;
name|u8
name|tx_sb_index
decl_stmt|;
name|bool
name|b_cb_registred
decl_stmt|;
name|__le16
modifier|*
name|p_fw_cons
decl_stmt|;
name|osal_list_t
name|active_descq
decl_stmt|;
name|osal_list_t
name|free_descq
decl_stmt|;
name|osal_list_t
name|sending_descq
decl_stmt|;
name|struct
name|ecore_ll2_tx_packet
modifier|*
name|descq_array
decl_stmt|;
name|struct
name|ecore_ll2_tx_packet
modifier|*
name|cur_send_packet
decl_stmt|;
name|struct
name|ecore_ll2_tx_packet
name|cur_completing_packet
decl_stmt|;
name|u16
name|cur_completing_bd_idx
decl_stmt|;
name|void
name|OSAL_IOMEM
modifier|*
name|doorbell_addr
decl_stmt|;
name|u16
name|bds_idx
decl_stmt|;
name|u16
name|cur_send_frag_num
decl_stmt|;
name|u16
name|cur_completing_frag_num
decl_stmt|;
name|bool
name|b_completing_packet
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_ll2_info
block|{
name|osal_mutex_t
name|mutex
decl_stmt|;
name|struct
name|ecore_ll2_acquire_data_inputs
name|input
decl_stmt|;
name|u32
name|cid
decl_stmt|;
name|u8
name|my_id
decl_stmt|;
name|u8
name|queue_id
decl_stmt|;
name|u8
name|tx_stats_id
decl_stmt|;
name|bool
name|b_active
decl_stmt|;
name|enum
name|core_tx_dest
name|tx_dest
decl_stmt|;
name|u8
name|tx_stats_en
decl_stmt|;
name|u8
name|main_func_queue
decl_stmt|;
name|struct
name|ecore_ll2_rx_queue
name|rx_queue
decl_stmt|;
name|struct
name|ecore_ll2_tx_queue
name|tx_queue
decl_stmt|;
name|struct
name|ecore_ll2_cbs
name|cbs
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/** * @brief ecore_ll2_alloc - Allocates LL2 connections set * * @param p_hwfn * * @return enum _ecore_status_t */
end_comment

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_ll2_alloc
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/** * @brief ecore_ll2_setup - Inits LL2 connections set * * @param p_hwfn * */
end_comment

begin_function_decl
name|void
name|ecore_ll2_setup
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/** * @brief ecore_ll2_free - Releases LL2 connections set * * @param p_hwfn * */
end_comment

begin_function_decl
name|void
name|ecore_ll2_free
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**  * @brief ecore_ll2_get_fragment_of_tx_packet  *  * @param p_hwfn  * @param connection_handle    LL2 connection's handle  *                              obtained from  *                              ecore_ll2_require_connection  * @param addr  * @param last_fragment)  *  * @return enum _ecore_status_t  */
end_comment

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_ll2_get_fragment_of_tx_packet
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|u8
name|connection_handle
parameter_list|,
name|dma_addr_t
modifier|*
name|addr
parameter_list|,
name|bool
modifier|*
name|last_fragment
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*__ECORE_LL2_H__*/
end_comment

end_unit

