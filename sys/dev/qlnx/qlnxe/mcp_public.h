begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2017-2018 Cavium, Inc.   * All rights reserved.  *  *  Redistribution and use in source and binary forms, with or without  *  modification, are permitted provided that the following conditions  *  are met:  *  *  1. Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  2. Redistributions in binary form must reproduce the above copyright  *     notice, this list of conditions and the following disclaimer in the  *     documentation and/or other materials provided with the distribution.  *  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  *  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE  *  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  *  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  *  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  *  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  *  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  *  POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_comment
comment|/****************************************************************************  *  * Name:        mcp_public.h  *  * Description: MCP public data  *  * Created:     13/01/2013 yanivr  *  ****************************************************************************/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MCP_PUBLIC_H
end_ifndef

begin_define
define|#
directive|define
name|MCP_PUBLIC_H
end_define

begin_define
define|#
directive|define
name|VF_MAX_STATIC
value|192
end_define

begin_comment
comment|/* In case of AH */
end_comment

begin_define
define|#
directive|define
name|MCP_GLOB_PATH_MAX
value|2
end_define

begin_define
define|#
directive|define
name|MCP_PORT_MAX
value|2
end_define

begin_comment
comment|/* Global */
end_comment

begin_define
define|#
directive|define
name|MCP_GLOB_PORT_MAX
value|4
end_define

begin_comment
comment|/* Global */
end_comment

begin_define
define|#
directive|define
name|MCP_GLOB_FUNC_MAX
value|16
end_define

begin_comment
comment|/* Global */
end_comment

begin_typedef
typedef|typedef
name|u32
name|offsize_t
typedef|;
end_typedef

begin_comment
comment|/* In DWORDS !!! */
end_comment

begin_comment
comment|/* Offset from the beginning of the MCP scratchpad */
end_comment

begin_define
define|#
directive|define
name|OFFSIZE_OFFSET_SHIFT
value|0
end_define

begin_define
define|#
directive|define
name|OFFSIZE_OFFSET_MASK
value|0x0000ffff
end_define

begin_comment
comment|/* Size of specific element (not the whole array if any) */
end_comment

begin_define
define|#
directive|define
name|OFFSIZE_SIZE_SHIFT
value|16
end_define

begin_define
define|#
directive|define
name|OFFSIZE_SIZE_MASK
value|0xffff0000
end_define

begin_comment
comment|/* SECTION_OFFSET is calculating the offset in bytes out of offsize */
end_comment

begin_define
define|#
directive|define
name|SECTION_OFFSET
parameter_list|(
name|_offsize
parameter_list|)
value|((((_offsize& OFFSIZE_OFFSET_MASK)>> OFFSIZE_OFFSET_SHIFT)<< 2))
end_define

begin_comment
comment|/* SECTION_SIZE is calculating the size in bytes out of offsize */
end_comment

begin_define
define|#
directive|define
name|SECTION_SIZE
parameter_list|(
name|_offsize
parameter_list|)
value|(((_offsize& OFFSIZE_SIZE_MASK)>> OFFSIZE_SIZE_SHIFT)<< 2)
end_define

begin_comment
comment|/* SECTION_ADDR returns the GRC addr of a section, given offsize and index within section */
end_comment

begin_define
define|#
directive|define
name|SECTION_ADDR
parameter_list|(
name|_offsize
parameter_list|,
name|idx
parameter_list|)
value|(MCP_REG_SCRATCH + SECTION_OFFSET(_offsize) + (SECTION_SIZE(_offsize) * idx))
end_define

begin_comment
comment|/* SECTION_OFFSIZE_ADDR returns the GRC addr to the offsize address. Use offsetof, since the OFFSETUP collide with the firmware definition */
end_comment

begin_define
define|#
directive|define
name|SECTION_OFFSIZE_ADDR
parameter_list|(
name|_pub_base
parameter_list|,
name|_section
parameter_list|)
value|(_pub_base + offsetof(struct mcp_public_data, sections[_section]))
end_define

begin_comment
comment|/* PHY configuration */
end_comment

begin_struct
struct|struct
name|eth_phy_cfg
block|{
name|u32
name|speed
decl_stmt|;
comment|/* 0 = autoneg, 1000/10000/20000/25000/40000/50000/100000 */
define|#
directive|define
name|ETH_SPEED_AUTONEG
value|0
define|#
directive|define
name|ETH_SPEED_SMARTLINQ
value|0x8
comment|/* deprecated - use link_modes field instead */
name|u32
name|pause
decl_stmt|;
comment|/* bitmask */
define|#
directive|define
name|ETH_PAUSE_NONE
value|0x0
define|#
directive|define
name|ETH_PAUSE_AUTONEG
value|0x1
define|#
directive|define
name|ETH_PAUSE_RX
value|0x2
define|#
directive|define
name|ETH_PAUSE_TX
value|0x4
name|u32
name|adv_speed
decl_stmt|;
comment|/* Default should be the speed_cap_mask */
name|u32
name|loopback_mode
decl_stmt|;
define|#
directive|define
name|ETH_LOOPBACK_NONE
value|(0)
define|#
directive|define
name|ETH_LOOPBACK_INT_PHY
value|(1)
comment|/* Serdes loopback. In AH, it refers to Near End */
define|#
directive|define
name|ETH_LOOPBACK_EXT_PHY
value|(2)
comment|/* External PHY Loopback */
define|#
directive|define
name|ETH_LOOPBACK_EXT
value|(3)
comment|/* External Loopback (Require loopback plug) */
define|#
directive|define
name|ETH_LOOPBACK_MAC
value|(4)
comment|/* MAC Loopback - not supported */
define|#
directive|define
name|ETH_LOOPBACK_CNIG_AH_ONLY_0123
value|(5)
comment|/* Port to itself */
define|#
directive|define
name|ETH_LOOPBACK_CNIG_AH_ONLY_2301
value|(6)
comment|/* Port to Port */
define|#
directive|define
name|ETH_LOOPBACK_PCS_AH_ONLY
value|(7)
comment|/* PCS loopback (TX to RX) */
define|#
directive|define
name|ETH_LOOPBACK_REVERSE_MAC_AH_ONLY
value|(8)
comment|/* Loop RX packet from PCS to TX */
define|#
directive|define
name|ETH_LOOPBACK_INT_PHY_FEA_AH_ONLY
value|(9)
comment|/* Remote Serdes Loopback (RX to TX) */
name|u32
name|eee_cfg
decl_stmt|;
define|#
directive|define
name|EEE_CFG_EEE_ENABLED
value|(1<<0)
comment|/* EEE is enabled (configuration). Refer to eee_status->active for negotiated status */
define|#
directive|define
name|EEE_CFG_TX_LPI
value|(1<<1)
define|#
directive|define
name|EEE_CFG_ADV_SPEED_1G
value|(1<<2)
define|#
directive|define
name|EEE_CFG_ADV_SPEED_10G
value|(1<<3)
define|#
directive|define
name|EEE_TX_TIMER_USEC_MASK
value|(0xfffffff0)
define|#
directive|define
name|EEE_TX_TIMER_USEC_SHIFT
value|4
define|#
directive|define
name|EEE_TX_TIMER_USEC_BALANCED_TIME
value|(0xa00)
define|#
directive|define
name|EEE_TX_TIMER_USEC_AGGRESSIVE_TIME
value|(0x100)
define|#
directive|define
name|EEE_TX_TIMER_USEC_LATENCY_TIME
value|(0x6000)
name|u32
name|link_modes
decl_stmt|;
comment|/* Additional link modes */
define|#
directive|define
name|LINK_MODE_SMARTLINQ_ENABLE
value|0x1
comment|/* XXX deprecated */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|port_mf_cfg
block|{
name|u32
name|dynamic_cfg
decl_stmt|;
comment|/* device control channel */
define|#
directive|define
name|PORT_MF_CFG_OV_TAG_MASK
value|0x0000ffff
define|#
directive|define
name|PORT_MF_CFG_OV_TAG_SHIFT
value|0
define|#
directive|define
name|PORT_MF_CFG_OV_TAG_DEFAULT
value|PORT_MF_CFG_OV_TAG_MASK
name|u32
name|reserved
index|[
literal|1
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* DO NOT add new fields in the middle  * MUST be synced with struct pmm_stats_map  */
end_comment

begin_struct
struct|struct
name|eth_stats
block|{
name|u64
name|r64
decl_stmt|;
comment|/* 0x00 (Offset 0x00 ) RX 64-byte frame counter*/
name|u64
name|r127
decl_stmt|;
comment|/* 0x01 (Offset 0x08 ) RX 65 to 127 byte frame counter*/
name|u64
name|r255
decl_stmt|;
comment|/* 0x02 (Offset 0x10 ) RX 128 to 255 byte frame counter*/
name|u64
name|r511
decl_stmt|;
comment|/* 0x03 (Offset 0x18 ) RX 256 to 511 byte frame counter*/
name|u64
name|r1023
decl_stmt|;
comment|/* 0x04 (Offset 0x20 ) RX 512 to 1023 byte frame counter*/
name|u64
name|r1518
decl_stmt|;
comment|/* 0x05 (Offset 0x28 ) RX 1024 to 1518 byte frame counter */
union|union
block|{
struct|struct
block|{
comment|/* bb */
name|u64
name|r1522
decl_stmt|;
comment|/* 0x06 (Offset 0x30 ) RX 1519 to 1522 byte VLAN-tagged frame counter */
name|u64
name|r2047
decl_stmt|;
comment|/* 0x07 (Offset 0x38 ) RX 1519 to 2047 byte frame counter*/
name|u64
name|r4095
decl_stmt|;
comment|/* 0x08 (Offset 0x40 ) RX 2048 to 4095 byte frame counter*/
name|u64
name|r9216
decl_stmt|;
comment|/* 0x09 (Offset 0x48 ) RX 4096 to 9216 byte frame counter*/
name|u64
name|r16383
decl_stmt|;
comment|/* 0x0A (Offset 0x50 ) RX 9217 to 16383 byte frame counter */
block|}
name|bb0
struct|;
struct|struct
block|{
comment|/* ah */
name|u64
name|unused1
decl_stmt|;
name|u64
name|r1519_to_max
decl_stmt|;
comment|/* 0x07 (Offset 0x38 ) RX 1519 to max byte frame counter*/
name|u64
name|unused2
decl_stmt|;
name|u64
name|unused3
decl_stmt|;
name|u64
name|unused4
decl_stmt|;
block|}
name|ah0
struct|;
block|}
name|u0
union|;
name|u64
name|rfcs
decl_stmt|;
comment|/* 0x0F (Offset 0x58 ) RX FCS error frame counter*/
name|u64
name|rxcf
decl_stmt|;
comment|/* 0x10 (Offset 0x60 ) RX control frame counter*/
name|u64
name|rxpf
decl_stmt|;
comment|/* 0x11 (Offset 0x68 ) RX pause frame counter*/
name|u64
name|rxpp
decl_stmt|;
comment|/* 0x12 (Offset 0x70 ) RX PFC frame counter*/
name|u64
name|raln
decl_stmt|;
comment|/* 0x16 (Offset 0x78 ) RX alignment error counter*/
name|u64
name|rfcr
decl_stmt|;
comment|/* 0x19 (Offset 0x80 ) RX false carrier counter */
name|u64
name|rovr
decl_stmt|;
comment|/* 0x1A (Offset 0x88 ) RX oversized frame counter*/
name|u64
name|rjbr
decl_stmt|;
comment|/* 0x1B (Offset 0x90 ) RX jabber frame counter */
name|u64
name|rund
decl_stmt|;
comment|/* 0x34 (Offset 0x98 ) RX undersized frame counter */
name|u64
name|rfrg
decl_stmt|;
comment|/* 0x35 (Offset 0xa0 ) RX fragment counter */
name|u64
name|t64
decl_stmt|;
comment|/* 0x40 (Offset 0xa8 ) TX 64-byte frame counter */
name|u64
name|t127
decl_stmt|;
comment|/* 0x41 (Offset 0xb0 ) TX 65 to 127 byte frame counter */
name|u64
name|t255
decl_stmt|;
comment|/* 0x42 (Offset 0xb8 ) TX 128 to 255 byte frame counter*/
name|u64
name|t511
decl_stmt|;
comment|/* 0x43 (Offset 0xc0 ) TX 256 to 511 byte frame counter*/
name|u64
name|t1023
decl_stmt|;
comment|/* 0x44 (Offset 0xc8 ) TX 512 to 1023 byte frame counter*/
name|u64
name|t1518
decl_stmt|;
comment|/* 0x45 (Offset 0xd0 ) TX 1024 to 1518 byte frame counter */
union|union
block|{
struct|struct
block|{
comment|/* bb */
name|u64
name|t2047
decl_stmt|;
comment|/* 0x47 (Offset 0xd8 ) TX 1519 to 2047 byte frame counter */
name|u64
name|t4095
decl_stmt|;
comment|/* 0x48 (Offset 0xe0 ) TX 2048 to 4095 byte frame counter */
name|u64
name|t9216
decl_stmt|;
comment|/* 0x49 (Offset 0xe8 ) TX 4096 to 9216 byte frame counter */
name|u64
name|t16383
decl_stmt|;
comment|/* 0x4A (Offset 0xf0 ) TX 9217 to 16383 byte frame counter */
block|}
name|bb1
struct|;
struct|struct
block|{
comment|/* ah */
name|u64
name|t1519_to_max
decl_stmt|;
comment|/* 0x47 (Offset 0xd8 ) TX 1519 to max byte frame counter */
name|u64
name|unused6
decl_stmt|;
name|u64
name|unused7
decl_stmt|;
name|u64
name|unused8
decl_stmt|;
block|}
name|ah1
struct|;
block|}
name|u1
union|;
name|u64
name|txpf
decl_stmt|;
comment|/* 0x50 (Offset 0xf8 ) TX pause frame counter */
name|u64
name|txpp
decl_stmt|;
comment|/* 0x51 (Offset 0x100) TX PFC frame counter */
union|union
block|{
struct|struct
block|{
comment|/* bb */
name|u64
name|tlpiec
decl_stmt|;
comment|/* 0x6C (Offset 0x108) Transmit Logical Type LLFC message counter */
name|u64
name|tncl
decl_stmt|;
comment|/* 0x6E (Offset 0x110) Transmit Total Collision Counter */
block|}
name|bb2
struct|;
struct|struct
block|{
comment|/* ah */
name|u64
name|unused9
decl_stmt|;
name|u64
name|unused10
decl_stmt|;
block|}
name|ah2
struct|;
block|}
name|u2
union|;
name|u64
name|rbyte
decl_stmt|;
comment|/* 0x3d (Offset 0x118) RX byte counter */
name|u64
name|rxuca
decl_stmt|;
comment|/* 0x0c (Offset 0x120) RX UC frame counter */
name|u64
name|rxmca
decl_stmt|;
comment|/* 0x0d (Offset 0x128) RX MC frame counter */
name|u64
name|rxbca
decl_stmt|;
comment|/* 0x0e (Offset 0x130) RX BC frame counter */
name|u64
name|rxpok
decl_stmt|;
comment|/* 0x22 (Offset 0x138) RX good frame (good CRC, not oversized, no ERROR) */
name|u64
name|tbyte
decl_stmt|;
comment|/* 0x6f (Offset 0x140) TX byte counter */
name|u64
name|txuca
decl_stmt|;
comment|/* 0x4d (Offset 0x148) TX UC frame counter */
name|u64
name|txmca
decl_stmt|;
comment|/* 0x4e (Offset 0x150) TX MC frame counter */
name|u64
name|txbca
decl_stmt|;
comment|/* 0x4f (Offset 0x158) TX BC frame counter */
name|u64
name|txcf
decl_stmt|;
comment|/* 0x54 (Offset 0x160) TX control frame counter */
comment|/* HSI - Cannot add more stats to this struct. If needed, then need to open new struct */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|brb_stats
block|{
name|u64
name|brb_truncate
index|[
literal|8
index|]
decl_stmt|;
name|u64
name|brb_discard
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|port_stats
block|{
name|struct
name|brb_stats
name|brb
decl_stmt|;
name|struct
name|eth_stats
name|eth
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*-----+-----------------------------------------------------------------------------  * Chip | Number and       | Ports in| Ports in|2 PHY-s |# of ports|# of engines  *      | rate of physical | team #1 | team #2 |are used|per path  | (paths) enabled  *      | ports            |         |         |        |          |  *======+==================+=========+=========+========+==========+=================  * BB   | 1x100G           | This is special mode, where there are actually 2 HW func  * BB   | 2x10/20Gbps      | 0,1     | NA      |  No    | 1        | 1  * BB   | 2x40 Gbps        | 0,1     | NA      |  Yes   | 1        | 1  * BB   | 2x50Gbps         | 0,1     | NA      |  No    | 1        | 1  * BB   | 4x10Gbps         | 0,2     | 1,3     |  No    | 1/2      | 1,2 (2 is optional)  * BB   | 4x10Gbps         | 0,1     | 2,3     |  No    | 1/2      | 1,2 (2 is optional)  * BB   | 4x10Gbps         | 0,3     | 1,2     |  No    | 1/2      | 1,2 (2 is optional)  * BB   | 4x10Gbps         | 0,1,2,3 | NA      |  No    | 1        | 1  * AH   | 2x10/20Gbps      | 0,1     | NA      |  NA    | 1        | NA  * AH   | 4x10Gbps         | 0,1     | 2,3     |  NA    | 2        | NA  * AH   | 4x10Gbps         | 0,2     | 1,3     |  NA    | 2        | NA  * AH   | 4x10Gbps         | 0,3     | 1,2     |  NA    | 2        | NA  * AH   | 4x10Gbps         | 0,1,2,3 | NA      |  NA    | 1        | NA  *======+==================+=========+=========+========+==========+===================  */
end_comment

begin_define
define|#
directive|define
name|CMT_TEAM0
value|0
end_define

begin_define
define|#
directive|define
name|CMT_TEAM1
value|1
end_define

begin_define
define|#
directive|define
name|CMT_TEAM_MAX
value|2
end_define

begin_struct
struct|struct
name|couple_mode_teaming
block|{
name|u8
name|port_cmt
index|[
name|MCP_GLOB_PORT_MAX
index|]
decl_stmt|;
define|#
directive|define
name|PORT_CMT_IN_TEAM
value|(1<<0)
define|#
directive|define
name|PORT_CMT_PORT_ROLE
value|(1<<1)
define|#
directive|define
name|PORT_CMT_PORT_INACTIVE
value|(0<<1)
define|#
directive|define
name|PORT_CMT_PORT_ACTIVE
value|(1<<1)
define|#
directive|define
name|PORT_CMT_TEAM_MASK
value|(1<<2)
define|#
directive|define
name|PORT_CMT_TEAM0
value|(0<<2)
define|#
directive|define
name|PORT_CMT_TEAM1
value|(1<<2)
block|}
struct|;
end_struct

begin_comment
comment|/**************************************  *     LLDP and DCBX HSI structures  **************************************/
end_comment

begin_define
define|#
directive|define
name|LLDP_CHASSIS_ID_STAT_LEN
value|4
end_define

begin_define
define|#
directive|define
name|LLDP_PORT_ID_STAT_LEN
value|4
end_define

begin_define
define|#
directive|define
name|DCBX_MAX_APP_PROTOCOL
value|32
end_define

begin_define
define|#
directive|define
name|MAX_SYSTEM_LLDP_TLV_DATA
value|32
end_define

begin_typedef
typedef|typedef
enum|enum
name|_lldp_agent_e
block|{
name|LLDP_NEAREST_BRIDGE
init|=
literal|0
block|,
name|LLDP_NEAREST_NON_TPMR_BRIDGE
block|,
name|LLDP_NEAREST_CUSTOMER_BRIDGE
block|,
name|LLDP_MAX_LLDP_AGENTS
block|}
name|lldp_agent_e
typedef|;
end_typedef

begin_struct
struct|struct
name|lldp_config_params_s
block|{
name|u32
name|config
decl_stmt|;
define|#
directive|define
name|LLDP_CONFIG_TX_INTERVAL_MASK
value|0x000000ff
define|#
directive|define
name|LLDP_CONFIG_TX_INTERVAL_SHIFT
value|0
define|#
directive|define
name|LLDP_CONFIG_HOLD_MASK
value|0x00000f00
define|#
directive|define
name|LLDP_CONFIG_HOLD_SHIFT
value|8
define|#
directive|define
name|LLDP_CONFIG_MAX_CREDIT_MASK
value|0x0000f000
define|#
directive|define
name|LLDP_CONFIG_MAX_CREDIT_SHIFT
value|12
define|#
directive|define
name|LLDP_CONFIG_ENABLE_RX_MASK
value|0x40000000
define|#
directive|define
name|LLDP_CONFIG_ENABLE_RX_SHIFT
value|30
define|#
directive|define
name|LLDP_CONFIG_ENABLE_TX_MASK
value|0x80000000
define|#
directive|define
name|LLDP_CONFIG_ENABLE_TX_SHIFT
value|31
comment|/* Holds local Chassis ID TLV header, subtype and 9B of payload. 	   If firtst byte is 0, then we will use default chassis ID */
name|u32
name|local_chassis_id
index|[
name|LLDP_CHASSIS_ID_STAT_LEN
index|]
decl_stmt|;
comment|/* Holds local Port ID TLV header, subtype and 9B of payload. 	   If firtst byte is 0, then we will use default port ID */
name|u32
name|local_port_id
index|[
name|LLDP_PORT_ID_STAT_LEN
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|lldp_status_params_s
block|{
name|u32
name|prefix_seq_num
decl_stmt|;
name|u32
name|status
decl_stmt|;
comment|/* TBD */
comment|/* Holds remote Chassis ID TLV header, subtype and 9B of payload. */
name|u32
name|peer_chassis_id
index|[
name|LLDP_CHASSIS_ID_STAT_LEN
index|]
decl_stmt|;
comment|/* Holds remote Port ID TLV header, subtype and 9B of payload. */
name|u32
name|peer_port_id
index|[
name|LLDP_PORT_ID_STAT_LEN
index|]
decl_stmt|;
name|u32
name|suffix_seq_num
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|dcbx_ets_feature
block|{
name|u32
name|flags
decl_stmt|;
define|#
directive|define
name|DCBX_ETS_ENABLED_MASK
value|0x00000001
define|#
directive|define
name|DCBX_ETS_ENABLED_SHIFT
value|0
define|#
directive|define
name|DCBX_ETS_WILLING_MASK
value|0x00000002
define|#
directive|define
name|DCBX_ETS_WILLING_SHIFT
value|1
define|#
directive|define
name|DCBX_ETS_ERROR_MASK
value|0x00000004
define|#
directive|define
name|DCBX_ETS_ERROR_SHIFT
value|2
define|#
directive|define
name|DCBX_ETS_CBS_MASK
value|0x00000008
define|#
directive|define
name|DCBX_ETS_CBS_SHIFT
value|3
define|#
directive|define
name|DCBX_ETS_MAX_TCS_MASK
value|0x000000f0
define|#
directive|define
name|DCBX_ETS_MAX_TCS_SHIFT
value|4
define|#
directive|define
name|DCBX_OOO_TC_MASK
value|0x00000f00
define|#
directive|define
name|DCBX_OOO_TC_SHIFT
value|8
comment|/* Entries in tc table are orginized that the left most is pri 0, right most is prio 7 */
name|u32
name|pri_tc_tbl
index|[
literal|1
index|]
decl_stmt|;
comment|/* Fixed TCP OOO TC usage is deprecated and used only for driver backward compatibility */
define|#
directive|define
name|DCBX_TCP_OOO_TC
value|(4)
define|#
directive|define
name|DCBX_TCP_OOO_K2_4PORT_TC
value|(3)
define|#
directive|define
name|NIG_ETS_ISCSI_OOO_CLIENT_OFFSET
value|(DCBX_TCP_OOO_TC + 1)
define|#
directive|define
name|DCBX_CEE_STRICT_PRIORITY
value|0xf
comment|/* Entries in tc table are orginized that the left most is pri 0, right most is prio 7 */
name|u32
name|tc_bw_tbl
index|[
literal|2
index|]
decl_stmt|;
comment|/* Entries in tc table are orginized that the left most is pri 0, right most is prio 7 */
name|u32
name|tc_tsa_tbl
index|[
literal|2
index|]
decl_stmt|;
define|#
directive|define
name|DCBX_ETS_TSA_STRICT
value|0
define|#
directive|define
name|DCBX_ETS_TSA_CBS
value|1
define|#
directive|define
name|DCBX_ETS_TSA_ETS
value|2
block|}
struct|;
end_struct

begin_struct
struct|struct
name|dcbx_app_priority_entry
block|{
name|u32
name|entry
decl_stmt|;
define|#
directive|define
name|DCBX_APP_PRI_MAP_MASK
value|0x000000ff
define|#
directive|define
name|DCBX_APP_PRI_MAP_SHIFT
value|0
define|#
directive|define
name|DCBX_APP_PRI_0
value|0x01
define|#
directive|define
name|DCBX_APP_PRI_1
value|0x02
define|#
directive|define
name|DCBX_APP_PRI_2
value|0x04
define|#
directive|define
name|DCBX_APP_PRI_3
value|0x08
define|#
directive|define
name|DCBX_APP_PRI_4
value|0x10
define|#
directive|define
name|DCBX_APP_PRI_5
value|0x20
define|#
directive|define
name|DCBX_APP_PRI_6
value|0x40
define|#
directive|define
name|DCBX_APP_PRI_7
value|0x80
define|#
directive|define
name|DCBX_APP_SF_MASK
value|0x00000300
define|#
directive|define
name|DCBX_APP_SF_SHIFT
value|8
define|#
directive|define
name|DCBX_APP_SF_ETHTYPE
value|0
define|#
directive|define
name|DCBX_APP_SF_PORT
value|1
define|#
directive|define
name|DCBX_APP_SF_IEEE_MASK
value|0x0000f000
define|#
directive|define
name|DCBX_APP_SF_IEEE_SHIFT
value|12
define|#
directive|define
name|DCBX_APP_SF_IEEE_RESERVED
value|0
define|#
directive|define
name|DCBX_APP_SF_IEEE_ETHTYPE
value|1
define|#
directive|define
name|DCBX_APP_SF_IEEE_TCP_PORT
value|2
define|#
directive|define
name|DCBX_APP_SF_IEEE_UDP_PORT
value|3
define|#
directive|define
name|DCBX_APP_SF_IEEE_TCP_UDP_PORT
value|4
define|#
directive|define
name|DCBX_APP_PROTOCOL_ID_MASK
value|0xffff0000
define|#
directive|define
name|DCBX_APP_PROTOCOL_ID_SHIFT
value|16
block|}
struct|;
end_struct

begin_comment
comment|/* FW structure in BE */
end_comment

begin_struct
struct|struct
name|dcbx_app_priority_feature
block|{
name|u32
name|flags
decl_stmt|;
define|#
directive|define
name|DCBX_APP_ENABLED_MASK
value|0x00000001
define|#
directive|define
name|DCBX_APP_ENABLED_SHIFT
value|0
define|#
directive|define
name|DCBX_APP_WILLING_MASK
value|0x00000002
define|#
directive|define
name|DCBX_APP_WILLING_SHIFT
value|1
define|#
directive|define
name|DCBX_APP_ERROR_MASK
value|0x00000004
define|#
directive|define
name|DCBX_APP_ERROR_SHIFT
value|2
comment|/* Not in use 	#define DCBX_APP_DEFAULT_PRI_MASK       0x00000f00 	#define DCBX_APP_DEFAULT_PRI_SHIFT      8 	*/
define|#
directive|define
name|DCBX_APP_MAX_TCS_MASK
value|0x0000f000
define|#
directive|define
name|DCBX_APP_MAX_TCS_SHIFT
value|12
define|#
directive|define
name|DCBX_APP_NUM_ENTRIES_MASK
value|0x00ff0000
define|#
directive|define
name|DCBX_APP_NUM_ENTRIES_SHIFT
value|16
name|struct
name|dcbx_app_priority_entry
name|app_pri_tbl
index|[
name|DCBX_MAX_APP_PROTOCOL
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* FW structure in BE */
end_comment

begin_struct
struct|struct
name|dcbx_features
block|{
comment|/* PG feature */
name|struct
name|dcbx_ets_feature
name|ets
decl_stmt|;
comment|/* PFC feature */
name|u32
name|pfc
decl_stmt|;
define|#
directive|define
name|DCBX_PFC_PRI_EN_BITMAP_MASK
value|0x000000ff
define|#
directive|define
name|DCBX_PFC_PRI_EN_BITMAP_SHIFT
value|0
define|#
directive|define
name|DCBX_PFC_PRI_EN_BITMAP_PRI_0
value|0x01
define|#
directive|define
name|DCBX_PFC_PRI_EN_BITMAP_PRI_1
value|0x02
define|#
directive|define
name|DCBX_PFC_PRI_EN_BITMAP_PRI_2
value|0x04
define|#
directive|define
name|DCBX_PFC_PRI_EN_BITMAP_PRI_3
value|0x08
define|#
directive|define
name|DCBX_PFC_PRI_EN_BITMAP_PRI_4
value|0x10
define|#
directive|define
name|DCBX_PFC_PRI_EN_BITMAP_PRI_5
value|0x20
define|#
directive|define
name|DCBX_PFC_PRI_EN_BITMAP_PRI_6
value|0x40
define|#
directive|define
name|DCBX_PFC_PRI_EN_BITMAP_PRI_7
value|0x80
define|#
directive|define
name|DCBX_PFC_FLAGS_MASK
value|0x0000ff00
define|#
directive|define
name|DCBX_PFC_FLAGS_SHIFT
value|8
define|#
directive|define
name|DCBX_PFC_CAPS_MASK
value|0x00000f00
define|#
directive|define
name|DCBX_PFC_CAPS_SHIFT
value|8
define|#
directive|define
name|DCBX_PFC_MBC_MASK
value|0x00004000
define|#
directive|define
name|DCBX_PFC_MBC_SHIFT
value|14
define|#
directive|define
name|DCBX_PFC_WILLING_MASK
value|0x00008000
define|#
directive|define
name|DCBX_PFC_WILLING_SHIFT
value|15
define|#
directive|define
name|DCBX_PFC_ENABLED_MASK
value|0x00010000
define|#
directive|define
name|DCBX_PFC_ENABLED_SHIFT
value|16
define|#
directive|define
name|DCBX_PFC_ERROR_MASK
value|0x00020000
define|#
directive|define
name|DCBX_PFC_ERROR_SHIFT
value|17
comment|/* APP feature */
name|struct
name|dcbx_app_priority_feature
name|app
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|dcbx_local_params
block|{
name|u32
name|config
decl_stmt|;
define|#
directive|define
name|DCBX_CONFIG_VERSION_MASK
value|0x00000007
define|#
directive|define
name|DCBX_CONFIG_VERSION_SHIFT
value|0
define|#
directive|define
name|DCBX_CONFIG_VERSION_DISABLED
value|0
define|#
directive|define
name|DCBX_CONFIG_VERSION_IEEE
value|1
define|#
directive|define
name|DCBX_CONFIG_VERSION_CEE
value|2
define|#
directive|define
name|DCBX_CONFIG_VERSION_STATIC
value|4
name|u32
name|flags
decl_stmt|;
name|struct
name|dcbx_features
name|features
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|dcbx_mib
block|{
name|u32
name|prefix_seq_num
decl_stmt|;
name|u32
name|flags
decl_stmt|;
comment|/* 	#define DCBX_CONFIG_VERSION_MASK            0x00000007 	#define DCBX_CONFIG_VERSION_SHIFT           0 	#define DCBX_CONFIG_VERSION_DISABLED        0 	#define DCBX_CONFIG_VERSION_IEEE            1 	#define DCBX_CONFIG_VERSION_CEE             2 	#define DCBX_CONFIG_VERSION_STATIC          4 	*/
name|struct
name|dcbx_features
name|features
decl_stmt|;
name|u32
name|suffix_seq_num
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|lldp_system_tlvs_buffer_s
block|{
name|u16
name|valid
decl_stmt|;
name|u16
name|length
decl_stmt|;
name|u32
name|data
index|[
name|MAX_SYSTEM_LLDP_TLV_DATA
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|dcb_dscp_map
block|{
name|u32
name|flags
decl_stmt|;
define|#
directive|define
name|DCB_DSCP_ENABLE_MASK
value|0x1
define|#
directive|define
name|DCB_DSCP_ENABLE_SHIFT
value|0
define|#
directive|define
name|DCB_DSCP_ENABLE
value|1
name|u32
name|dscp_pri_map
index|[
literal|8
index|]
decl_stmt|;
comment|/* the map structure is the following: 	   each u32 is split into 4 bits chunks, each chunk holds priority for respective dscp 	   Lowest dscp is at lsb 			    31          28          24          20          16          12          8           4           0 	   dscp_pri_map[0]: | dscp7 pri | dscp6 pri | dscp5 pri | dscp4 pri | dscp3 pri | dscp2 pri | dscp1 pri | dscp0 pri | 	   dscp_pri_map[1]: | dscp15 pri| dscp14 pri| dscp13 pri| dscp12 pri| dscp11 pri| dscp10 pri| dscp9 pri | dscp8 pri | 	   etc.*/
block|}
struct|;
end_struct

begin_comment
comment|/**************************************/
end_comment

begin_comment
comment|/*                                    */
end_comment

begin_comment
comment|/*     P U B L I C      G L O B A L   */
end_comment

begin_comment
comment|/*                                    */
end_comment

begin_comment
comment|/**************************************/
end_comment

begin_struct
struct|struct
name|public_global
block|{
name|u32
name|max_path
decl_stmt|;
comment|/* 32bit is wasty, but this will be used often */
name|u32
name|max_ports
decl_stmt|;
comment|/* (Global) 32bit is wasty, but this will be used often */
define|#
directive|define
name|MODE_1P
value|1
comment|/* TBD - NEED TO THINK OF A BETTER NAME */
define|#
directive|define
name|MODE_2P
value|2
define|#
directive|define
name|MODE_3P
value|3
define|#
directive|define
name|MODE_4P
value|4
name|u32
name|debug_mb_offset
decl_stmt|;
name|u32
name|phymod_dbg_mb_offset
decl_stmt|;
name|struct
name|couple_mode_teaming
name|cmt
decl_stmt|;
name|s32
name|internal_temperature
decl_stmt|;
comment|/* Temperature in Celcius (-255C / +255C), measured every second. */
name|u32
name|mfw_ver
decl_stmt|;
name|u32
name|running_bundle_id
decl_stmt|;
name|s32
name|external_temperature
decl_stmt|;
name|u32
name|mdump_reason
decl_stmt|;
define|#
directive|define
name|MDUMP_REASON_INTERNAL_ERROR
value|(1<< 0)
define|#
directive|define
name|MDUMP_REASON_EXTERNAL_TRIGGER
value|(1<< 1)
define|#
directive|define
name|MDUMP_REASON_DUMP_AGED
value|(1<< 2)
name|u32
name|ext_phy_upgrade_fw
decl_stmt|;
define|#
directive|define
name|EXT_PHY_FW_UPGRADE_STATUS_MASK
value|(0x0000ffff)
define|#
directive|define
name|EXT_PHY_FW_UPGRADE_STATUS_SHIFT
value|(0)
define|#
directive|define
name|EXT_PHY_FW_UPGRADE_STATUS_IN_PROGRESS
value|(1)
define|#
directive|define
name|EXT_PHY_FW_UPGRADE_STATUS_FAILED
value|(2)
define|#
directive|define
name|EXT_PHY_FW_UPGRADE_STATUS_SUCCESS
value|(3)
define|#
directive|define
name|EXT_PHY_FW_UPGRADE_TYPE_MASK
value|(0xffff0000)
define|#
directive|define
name|EXT_PHY_FW_UPGRADE_TYPE_SHIFT
value|(16)
name|u8
name|runtime_port_swap_map
index|[
name|MODE_4P
index|]
decl_stmt|;
name|u32
name|data_ptr
decl_stmt|;
name|u32
name|data_size
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/**************************************/
end_comment

begin_comment
comment|/*                                    */
end_comment

begin_comment
comment|/*     P U B L I C      P A T H       */
end_comment

begin_comment
comment|/*                                    */
end_comment

begin_comment
comment|/**************************************/
end_comment

begin_comment
comment|/****************************************************************************  * Shared Memory 2 Region                                                   *  ****************************************************************************/
end_comment

begin_comment
comment|/* The fw_flr_ack is actually built in the following way:                   */
end_comment

begin_comment
comment|/* 8 bit:  PF ack                                                           */
end_comment

begin_comment
comment|/* 128 bit: VF ack                                                           */
end_comment

begin_comment
comment|/* 8 bit:  ios_dis_ack                                                      */
end_comment

begin_comment
comment|/* In order to maintain endianity in the mailbox hsi, we want to keep using */
end_comment

begin_comment
comment|/* u32. The fw must have the VF right after the PF since this is how it     */
end_comment

begin_comment
comment|/* access arrays(it expects always the VF to reside after the PF, and that  */
end_comment

begin_comment
comment|/* makes the calculation much easier for it. )                              */
end_comment

begin_comment
comment|/* In order to answer both limitations, and keep the struct small, the code */
end_comment

begin_comment
comment|/* will abuse the structure defined here to achieve the actual partition    */
end_comment

begin_comment
comment|/* above                                                                    */
end_comment

begin_comment
comment|/****************************************************************************/
end_comment

begin_struct
struct|struct
name|fw_flr_mb
block|{
name|u32
name|aggint
decl_stmt|;
name|u32
name|opgen_addr
decl_stmt|;
name|u32
name|accum_ack
decl_stmt|;
comment|/* 0..15:PF, 16..207:VF, 256..271:IOV_DIS */
define|#
directive|define
name|ACCUM_ACK_PF_BASE
value|0
define|#
directive|define
name|ACCUM_ACK_PF_SHIFT
value|0
define|#
directive|define
name|ACCUM_ACK_VF_BASE
value|8
define|#
directive|define
name|ACCUM_ACK_VF_SHIFT
value|3
define|#
directive|define
name|ACCUM_ACK_IOV_DIS_BASE
value|256
define|#
directive|define
name|ACCUM_ACK_IOV_DIS_SHIFT
value|8
block|}
struct|;
end_struct

begin_struct
struct|struct
name|public_path
block|{
name|struct
name|fw_flr_mb
name|flr_mb
decl_stmt|;
comment|/* 	 * mcp_vf_disabled is set by the MCP to indicate the driver about VFs 	 * which were disabled/flred 	 */
name|u32
name|mcp_vf_disabled
index|[
name|VF_MAX_STATIC
operator|/
literal|32
index|]
decl_stmt|;
comment|/* 0x003c */
name|u32
name|process_kill
decl_stmt|;
comment|/* Reset on mcp reset, and incremented for eveny process kill event. */
define|#
directive|define
name|PROCESS_KILL_COUNTER_MASK
value|0x0000ffff
define|#
directive|define
name|PROCESS_KILL_COUNTER_SHIFT
value|0
define|#
directive|define
name|PROCESS_KILL_GLOB_AEU_BIT_MASK
value|0xffff0000
define|#
directive|define
name|PROCESS_KILL_GLOB_AEU_BIT_SHIFT
value|16
define|#
directive|define
name|GLOBAL_AEU_BIT
parameter_list|(
name|aeu_reg_id
parameter_list|,
name|aeu_bit
parameter_list|)
value|(aeu_reg_id*32 + aeu_bit)
block|}
struct|;
end_struct

begin_comment
comment|/**************************************/
end_comment

begin_comment
comment|/*                                    */
end_comment

begin_comment
comment|/*     P U B L I C      P O R T       */
end_comment

begin_comment
comment|/*                                    */
end_comment

begin_comment
comment|/**************************************/
end_comment

begin_define
define|#
directive|define
name|FC_NPIV_WWPN_SIZE
value|8
end_define

begin_define
define|#
directive|define
name|FC_NPIV_WWNN_SIZE
value|8
end_define

begin_struct
struct|struct
name|dci_npiv_settings
block|{
name|u8
name|npiv_wwpn
index|[
name|FC_NPIV_WWPN_SIZE
index|]
decl_stmt|;
name|u8
name|npiv_wwnn
index|[
name|FC_NPIV_WWNN_SIZE
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|dci_fc_npiv_cfg
block|{
comment|/* hdr used internally by the MFW */
name|u32
name|hdr
decl_stmt|;
name|u32
name|num_of_npiv
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|MAX_NUMBER_NPIV
value|64
end_define

begin_struct
struct|struct
name|dci_fc_npiv_tbl
block|{
name|struct
name|dci_fc_npiv_cfg
name|fc_npiv_cfg
decl_stmt|;
name|struct
name|dci_npiv_settings
name|settings
index|[
name|MAX_NUMBER_NPIV
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/****************************************************************************  * Driver<-> FW Mailbox                                                    *  ****************************************************************************/
end_comment

begin_struct
struct|struct
name|public_port
block|{
name|u32
name|validity_map
decl_stmt|;
comment|/* 0x0 (4*2 = 0x8) */
comment|/* validity bits */
define|#
directive|define
name|MCP_VALIDITY_PCI_CFG
value|0x00100000
define|#
directive|define
name|MCP_VALIDITY_MB
value|0x00200000
define|#
directive|define
name|MCP_VALIDITY_DEV_INFO
value|0x00400000
define|#
directive|define
name|MCP_VALIDITY_RESERVED
value|0x00000007
comment|/* One licensing bit should be set */
define|#
directive|define
name|MCP_VALIDITY_LIC_KEY_IN_EFFECT_MASK
value|0x00000038
comment|/* yaniv - tbd ? license */
define|#
directive|define
name|MCP_VALIDITY_LIC_MANUF_KEY_IN_EFFECT
value|0x00000008
define|#
directive|define
name|MCP_VALIDITY_LIC_UPGRADE_KEY_IN_EFFECT
value|0x00000010
define|#
directive|define
name|MCP_VALIDITY_LIC_NO_KEY_IN_EFFECT
value|0x00000020
comment|/* Active MFW */
define|#
directive|define
name|MCP_VALIDITY_ACTIVE_MFW_UNKNOWN
value|0x00000000
define|#
directive|define
name|MCP_VALIDITY_ACTIVE_MFW_MASK
value|0x000001c0
define|#
directive|define
name|MCP_VALIDITY_ACTIVE_MFW_NCSI
value|0x00000040
define|#
directive|define
name|MCP_VALIDITY_ACTIVE_MFW_NONE
value|0x000001c0
name|u32
name|link_status
decl_stmt|;
define|#
directive|define
name|LINK_STATUS_LINK_UP
value|0x00000001
define|#
directive|define
name|LINK_STATUS_SPEED_AND_DUPLEX_MASK
value|0x0000001e
define|#
directive|define
name|LINK_STATUS_SPEED_AND_DUPLEX_1000THD
value|(1<<1)
define|#
directive|define
name|LINK_STATUS_SPEED_AND_DUPLEX_1000TFD
value|(2<<1)
define|#
directive|define
name|LINK_STATUS_SPEED_AND_DUPLEX_10G
value|(3<<1)
define|#
directive|define
name|LINK_STATUS_SPEED_AND_DUPLEX_20G
value|(4<<1)
define|#
directive|define
name|LINK_STATUS_SPEED_AND_DUPLEX_40G
value|(5<<1)
define|#
directive|define
name|LINK_STATUS_SPEED_AND_DUPLEX_50G
value|(6<<1)
define|#
directive|define
name|LINK_STATUS_SPEED_AND_DUPLEX_100G
value|(7<<1)
define|#
directive|define
name|LINK_STATUS_SPEED_AND_DUPLEX_25G
value|(8<<1)
define|#
directive|define
name|LINK_STATUS_AUTO_NEGOTIATE_ENABLED
value|0x00000020
define|#
directive|define
name|LINK_STATUS_AUTO_NEGOTIATE_COMPLETE
value|0x00000040
define|#
directive|define
name|LINK_STATUS_PARALLEL_DETECTION_USED
value|0x00000080
define|#
directive|define
name|LINK_STATUS_PFC_ENABLED
value|0x00000100
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_1000TFD_CAPABLE
value|0x00000200
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_1000THD_CAPABLE
value|0x00000400
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_10G_CAPABLE
value|0x00000800
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_20G_CAPABLE
value|0x00001000
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_40G_CAPABLE
value|0x00002000
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_50G_CAPABLE
value|0x00004000
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_100G_CAPABLE
value|0x00008000
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_25G_CAPABLE
value|0x00010000
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_FLOW_CONTROL_MASK
value|0x000C0000
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_NOT_PAUSE_CAPABLE
value|(0<<18)
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_SYMMETRIC_PAUSE
value|(1<<18)
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_ASYMMETRIC_PAUSE
value|(2<<18)
define|#
directive|define
name|LINK_STATUS_LINK_PARTNER_BOTH_PAUSE
value|(3<<18)
define|#
directive|define
name|LINK_STATUS_SFP_TX_FAULT
value|0x00100000
define|#
directive|define
name|LINK_STATUS_TX_FLOW_CONTROL_ENABLED
value|0x00200000
define|#
directive|define
name|LINK_STATUS_RX_FLOW_CONTROL_ENABLED
value|0x00400000
define|#
directive|define
name|LINK_STATUS_RX_SIGNAL_PRESENT
value|0x00800000
define|#
directive|define
name|LINK_STATUS_MAC_LOCAL_FAULT
value|0x01000000
define|#
directive|define
name|LINK_STATUS_MAC_REMOTE_FAULT
value|0x02000000
define|#
directive|define
name|LINK_STATUS_UNSUPPORTED_SPD_REQ
value|0x04000000
define|#
directive|define
name|LINK_STATUS_FEC_MODE_MASK
value|0x38000000
define|#
directive|define
name|LINK_STATUS_FEC_MODE_NONE
value|(0<<27)
define|#
directive|define
name|LINK_STATUS_FEC_MODE_FIRECODE_CL74
value|(1<<27)
define|#
directive|define
name|LINK_STATUS_FEC_MODE_RS_CL91
value|(2<<27)
define|#
directive|define
name|LINK_STATUS_EXT_PHY_LINK_UP
value|0x40000000
name|u32
name|link_status1
decl_stmt|;
name|u32
name|ext_phy_fw_version
decl_stmt|;
name|u32
name|drv_phy_cfg_addr
decl_stmt|;
comment|/* Points to struct eth_phy_cfg (For READ-ONLY) */
name|u32
name|port_stx
decl_stmt|;
name|u32
name|stat_nig_timer
decl_stmt|;
name|struct
name|port_mf_cfg
name|port_mf_config
decl_stmt|;
name|struct
name|port_stats
name|stats
decl_stmt|;
name|u32
name|media_type
decl_stmt|;
define|#
directive|define
name|MEDIA_UNSPECIFIED
value|0x0
define|#
directive|define
name|MEDIA_SFPP_10G_FIBER
value|0x1
comment|/* Use MEDIA_MODULE_FIBER instead */
define|#
directive|define
name|MEDIA_XFP_FIBER
value|0x2
comment|/* Use MEDIA_MODULE_FIBER instead */
define|#
directive|define
name|MEDIA_DA_TWINAX
value|0x3
define|#
directive|define
name|MEDIA_BASE_T
value|0x4
define|#
directive|define
name|MEDIA_SFP_1G_FIBER
value|0x5
comment|/* Use MEDIA_MODULE_FIBER instead */
define|#
directive|define
name|MEDIA_MODULE_FIBER
value|0x6
define|#
directive|define
name|MEDIA_KR
value|0xf0
define|#
directive|define
name|MEDIA_NOT_PRESENT
value|0xff
name|u32
name|lfa_status
decl_stmt|;
define|#
directive|define
name|LFA_LINK_FLAP_REASON_OFFSET
value|0
define|#
directive|define
name|LFA_LINK_FLAP_REASON_MASK
value|0x000000ff
define|#
directive|define
name|LFA_NO_REASON
value|(0<<0)
define|#
directive|define
name|LFA_LINK_DOWN
value|(1<<0)
define|#
directive|define
name|LFA_FORCE_INIT
value|(1<<1)
define|#
directive|define
name|LFA_LOOPBACK_MISMATCH
value|(1<<2)
define|#
directive|define
name|LFA_SPEED_MISMATCH
value|(1<<3)
define|#
directive|define
name|LFA_FLOW_CTRL_MISMATCH
value|(1<<4)
define|#
directive|define
name|LFA_ADV_SPEED_MISMATCH
value|(1<<5)
define|#
directive|define
name|LFA_EEE_MISMATCH
value|(1<<6)
define|#
directive|define
name|LFA_LINK_MODES_MISMATCH
value|(1<<7)
define|#
directive|define
name|LINK_FLAP_AVOIDANCE_COUNT_OFFSET
value|8
define|#
directive|define
name|LINK_FLAP_AVOIDANCE_COUNT_MASK
value|0x0000ff00
define|#
directive|define
name|LINK_FLAP_COUNT_OFFSET
value|16
define|#
directive|define
name|LINK_FLAP_COUNT_MASK
value|0x00ff0000
name|u32
name|link_change_count
decl_stmt|;
comment|/* LLDP params */
name|struct
name|lldp_config_params_s
name|lldp_config_params
index|[
name|LLDP_MAX_LLDP_AGENTS
index|]
decl_stmt|;
comment|// offset: 536 bytes?
name|struct
name|lldp_status_params_s
name|lldp_status_params
index|[
name|LLDP_MAX_LLDP_AGENTS
index|]
decl_stmt|;
name|struct
name|lldp_system_tlvs_buffer_s
name|system_lldp_tlvs_buf
decl_stmt|;
comment|/* DCBX related MIB */
name|struct
name|dcbx_local_params
name|local_admin_dcbx_mib
decl_stmt|;
name|struct
name|dcbx_mib
name|remote_dcbx_mib
decl_stmt|;
name|struct
name|dcbx_mib
name|operational_dcbx_mib
decl_stmt|;
comment|/* FC_NPIV table offset& size in NVRAM value of 0 means not present */
name|u32
name|fc_npiv_nvram_tbl_addr
decl_stmt|;
define|#
directive|define
name|NPIV_TBL_INVALID_ADDR
value|0xFFFFFFFF
name|u32
name|fc_npiv_nvram_tbl_size
decl_stmt|;
name|u32
name|transceiver_data
decl_stmt|;
define|#
directive|define
name|ETH_TRANSCEIVER_STATE_MASK
value|0x000000FF
define|#
directive|define
name|ETH_TRANSCEIVER_STATE_SHIFT
value|0x0
define|#
directive|define
name|ETH_TRANSCEIVER_STATE_UNPLUGGED
value|0x00
define|#
directive|define
name|ETH_TRANSCEIVER_STATE_PRESENT
value|0x01
define|#
directive|define
name|ETH_TRANSCEIVER_STATE_VALID
value|0x03
define|#
directive|define
name|ETH_TRANSCEIVER_STATE_UPDATING
value|0x08
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_MASK
value|0x0000FF00
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_SHIFT
value|0x8
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_NONE
value|0x00
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_UNKNOWN
value|0xFF
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_1G_PCC
value|0x01
comment|/* 1G Passive copper cable */
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_1G_ACC
value|0x02
comment|/* 1G Active copper cable  */
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_1G_LX
value|0x03
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_1G_SX
value|0x04
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_10G_SR
value|0x05
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_10G_LR
value|0x06
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_10G_LRM
value|0x07
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_10G_ER
value|0x08
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_10G_PCC
value|0x09
comment|/* 10G Passive copper cable */
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_10G_ACC
value|0x0a
comment|/* 10G Active copper cable  */
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_XLPPI
value|0x0b
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_40G_LR4
value|0x0c
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_40G_SR4
value|0x0d
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_40G_CR4
value|0x0e
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_100G_AOC
value|0x0f
comment|/* Active optical cable */
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_100G_SR4
value|0x10
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_100G_LR4
value|0x11
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_100G_ER4
value|0x12
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_100G_ACC
value|0x13
comment|/* Active copper cable */
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_100G_CR4
value|0x14
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_4x10G_SR
value|0x15
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_25G_CA_N
value|0x16
comment|/* 25G Passive copper cable - short */
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_25G_ACC_S
value|0x17
comment|/* 25G Active copper cable  - short */
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_25G_CA_S
value|0x18
comment|/* 25G Passive copper cable - medium */
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_25G_ACC_M
value|0x19
comment|/* 25G Active copper cable  - medium */
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_25G_CA_L
value|0x1a
comment|/* 25G Passive copper cable - long */
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_25G_ACC_L
value|0x1b
comment|/* 25G Active copper cable  - long */
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_25G_SR
value|0x1c
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_25G_LR
value|0x1d
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_25G_AOC
value|0x1e
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_4x10G
value|0x1f
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_4x25G_CR
value|0x20
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_MULTI_RATE_10G_40G_SR
value|0x30
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_MULTI_RATE_10G_40G_CR
value|0x31
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_MULTI_RATE_10G_40G_LR
value|0x32
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_MULTI_RATE_40G_100G_SR
value|0x33
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_MULTI_RATE_40G_100G_CR
value|0x34
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_MULTI_RATE_40G_100G_LR
value|0x35
define|#
directive|define
name|ETH_TRANSCEIVER_TYPE_MULTI_RATE_40G_100G_AOC
value|0x36
name|u32
name|wol_info
decl_stmt|;
name|u32
name|wol_pkt_len
decl_stmt|;
name|u32
name|wol_pkt_details
decl_stmt|;
name|struct
name|dcb_dscp_map
name|dcb_dscp_map
decl_stmt|;
name|u32
name|eee_status
decl_stmt|;
define|#
directive|define
name|EEE_ACTIVE_BIT
value|(1<<0)
comment|/* Set when EEE negotiation is complete. */
define|#
directive|define
name|EEE_LD_ADV_STATUS_MASK
value|0x000000f0
comment|/* Shows the Local Device EEE capabilities */
define|#
directive|define
name|EEE_LD_ADV_STATUS_SHIFT
value|4
define|#
directive|define
name|EEE_1G_ADV
value|(1<<1)
define|#
directive|define
name|EEE_10G_ADV
value|(1<<2)
define|#
directive|define
name|EEE_LP_ADV_STATUS_MASK
value|0x00000f00
comment|/* Same values as in EEE_LD_ADV, but for Link Parter */
define|#
directive|define
name|EEE_LP_ADV_STATUS_SHIFT
value|8
name|u32
name|eee_remote
decl_stmt|;
comment|/* Used for EEE in LLDP */
define|#
directive|define
name|EEE_REMOTE_TW_TX_MASK
value|0x0000ffff
define|#
directive|define
name|EEE_REMOTE_TW_TX_SHIFT
value|0
define|#
directive|define
name|EEE_REMOTE_TW_RX_MASK
value|0xffff0000
define|#
directive|define
name|EEE_REMOTE_TW_RX_SHIFT
value|16
name|u32
name|module_info
decl_stmt|;
define|#
directive|define
name|ETH_TRANSCEIVER_MONITORING_TYPE_MASK
value|0x000000FF
define|#
directive|define
name|ETH_TRANSCEIVER_MONITORING_TYPE_OFFSET
value|0
define|#
directive|define
name|ETH_TRANSCEIVER_ADDR_CHNG_REQUIRED
value|(1<< 2)
define|#
directive|define
name|ETH_TRANSCEIVER_RCV_PWR_MEASURE_TYPE
value|(1<< 3)
define|#
directive|define
name|ETH_TRANSCEIVER_EXTERNALLY_CALIBRATED
value|(1<< 4)
define|#
directive|define
name|ETH_TRANSCEIVER_INTERNALLY_CALIBRATED
value|(1<< 5)
define|#
directive|define
name|ETH_TRANSCEIVER_HAS_DIAGNOSTIC
value|(1<< 6)
define|#
directive|define
name|ETH_TRANSCEIVER_IDENT_MASK
value|0x0000ff00
define|#
directive|define
name|ETH_TRANSCEIVER_IDENT_OFFSET
value|8
block|}
struct|;
end_struct

begin_comment
comment|/**************************************/
end_comment

begin_comment
comment|/*                                    */
end_comment

begin_comment
comment|/*     P U B L I C      F U N C       */
end_comment

begin_comment
comment|/*                                    */
end_comment

begin_comment
comment|/**************************************/
end_comment

begin_struct
struct|struct
name|public_func
block|{
name|u32
name|iscsi_boot_signature
decl_stmt|;
name|u32
name|iscsi_boot_block_offset
decl_stmt|;
comment|/* MTU size per funciton is needed for the OV feature */
name|u32
name|mtu_size
decl_stmt|;
comment|/* 9 entires for the C2S PCP map for each inner VLAN PCP + 1 default */
comment|/* For PCP values 0-3 use the map lower */
comment|/* 0xFF000000 - PCP 0, 0x00FF0000 - PCP 1, 	 * 0x0000FF00 - PCP 2, 0x000000FF PCP 3 	 */
name|u32
name|c2s_pcp_map_lower
decl_stmt|;
comment|/* For PCP values 4-7 use the map upper */
comment|/* 0xFF000000 - PCP 4, 0x00FF0000 - PCP 5, 	 * 0x0000FF00 - PCP 6, 0x000000FF PCP 7 	*/
name|u32
name|c2s_pcp_map_upper
decl_stmt|;
comment|/* For PCP default value get the MSB byte of the map default */
name|u32
name|c2s_pcp_map_default
decl_stmt|;
name|u32
name|reserved
index|[
literal|4
index|]
decl_stmt|;
comment|// replace old mf_cfg
name|u32
name|config
decl_stmt|;
comment|/* E/R/I/D */
comment|/* function 0 of each port cannot be hidden */
define|#
directive|define
name|FUNC_MF_CFG_FUNC_HIDE
value|0x00000001
define|#
directive|define
name|FUNC_MF_CFG_PAUSE_ON_HOST_RING
value|0x00000002
define|#
directive|define
name|FUNC_MF_CFG_PAUSE_ON_HOST_RING_SHIFT
value|0x00000001
define|#
directive|define
name|FUNC_MF_CFG_PROTOCOL_MASK
value|0x000000f0
define|#
directive|define
name|FUNC_MF_CFG_PROTOCOL_SHIFT
value|4
define|#
directive|define
name|FUNC_MF_CFG_PROTOCOL_ETHERNET
value|0x00000000
define|#
directive|define
name|FUNC_MF_CFG_PROTOCOL_ISCSI
value|0x00000010
define|#
directive|define
name|FUNC_MF_CFG_PROTOCOL_FCOE
value|0x00000020
define|#
directive|define
name|FUNC_MF_CFG_PROTOCOL_ROCE
value|0x00000030
define|#
directive|define
name|FUNC_MF_CFG_PROTOCOL_MAX
value|0x00000030
comment|/* MINBW, MAXBW */
comment|/* value range - 0..100, increments in 1 %  */
define|#
directive|define
name|FUNC_MF_CFG_MIN_BW_MASK
value|0x0000ff00
define|#
directive|define
name|FUNC_MF_CFG_MIN_BW_SHIFT
value|8
define|#
directive|define
name|FUNC_MF_CFG_MIN_BW_DEFAULT
value|0x00000000
define|#
directive|define
name|FUNC_MF_CFG_MAX_BW_MASK
value|0x00ff0000
define|#
directive|define
name|FUNC_MF_CFG_MAX_BW_SHIFT
value|16
define|#
directive|define
name|FUNC_MF_CFG_MAX_BW_DEFAULT
value|0x00640000
comment|/*RDMA PROTOCL*/
define|#
directive|define
name|FUNC_MF_CFG_RDMA_PROTOCOL_MASK
value|0x03000000
define|#
directive|define
name|FUNC_MF_CFG_RDMA_PROTOCOL_SHIFT
value|24
define|#
directive|define
name|FUNC_MF_CFG_RDMA_PROTOCOL_NONE
value|0x00000000
define|#
directive|define
name|FUNC_MF_CFG_RDMA_PROTOCOL_ROCE
value|0x01000000
define|#
directive|define
name|FUNC_MF_CFG_RDMA_PROTOCOL_IWARP
value|0x02000000
comment|/*for future support*/
define|#
directive|define
name|FUNC_MF_CFG_RDMA_PROTOCOL_BOTH
value|0x03000000
define|#
directive|define
name|FUNC_MF_CFG_BOOT_MODE_MASK
value|0x0C000000
define|#
directive|define
name|FUNC_MF_CFG_BOOT_MODE_SHIFT
value|26
define|#
directive|define
name|FUNC_MF_CFG_BOOT_MODE_BIOS_CTRL
value|0x00000000
define|#
directive|define
name|FUNC_MF_CFG_BOOT_MODE_DISABLED
value|0x04000000
define|#
directive|define
name|FUNC_MF_CFG_BOOT_MODE_ENABLED
value|0x08000000
name|u32
name|status
decl_stmt|;
define|#
directive|define
name|FUNC_STATUS_VLINK_DOWN
value|0x00000001
name|u32
name|mac_upper
decl_stmt|;
comment|/* MAC */
define|#
directive|define
name|FUNC_MF_CFG_UPPERMAC_MASK
value|0x0000ffff
define|#
directive|define
name|FUNC_MF_CFG_UPPERMAC_SHIFT
value|0
define|#
directive|define
name|FUNC_MF_CFG_UPPERMAC_DEFAULT
value|FUNC_MF_CFG_UPPERMAC_MASK
name|u32
name|mac_lower
decl_stmt|;
define|#
directive|define
name|FUNC_MF_CFG_LOWERMAC_DEFAULT
value|0xffffffff
name|u32
name|fcoe_wwn_port_name_upper
decl_stmt|;
name|u32
name|fcoe_wwn_port_name_lower
decl_stmt|;
name|u32
name|fcoe_wwn_node_name_upper
decl_stmt|;
name|u32
name|fcoe_wwn_node_name_lower
decl_stmt|;
name|u32
name|ovlan_stag
decl_stmt|;
comment|/* tags */
define|#
directive|define
name|FUNC_MF_CFG_OV_STAG_MASK
value|0x0000ffff
define|#
directive|define
name|FUNC_MF_CFG_OV_STAG_SHIFT
value|0
define|#
directive|define
name|FUNC_MF_CFG_OV_STAG_DEFAULT
value|FUNC_MF_CFG_OV_STAG_MASK
name|u32
name|pf_allocation
decl_stmt|;
comment|/* vf per pf */
name|u32
name|preserve_data
decl_stmt|;
comment|/* Will be used bt CCM */
name|u32
name|driver_last_activity_ts
decl_stmt|;
comment|/* 	 * drv_ack_vf_disabled is set by the PF driver to ack handled disabled 	 * VFs 	 */
name|u32
name|drv_ack_vf_disabled
index|[
name|VF_MAX_STATIC
operator|/
literal|32
index|]
decl_stmt|;
comment|/* 0x0044 */
name|u32
name|drv_id
decl_stmt|;
define|#
directive|define
name|DRV_ID_PDA_COMP_VER_MASK
value|0x0000ffff
define|#
directive|define
name|DRV_ID_PDA_COMP_VER_SHIFT
value|0
define|#
directive|define
name|LOAD_REQ_HSI_VERSION
value|2
define|#
directive|define
name|DRV_ID_MCP_HSI_VER_MASK
value|0x00ff0000
define|#
directive|define
name|DRV_ID_MCP_HSI_VER_SHIFT
value|16
define|#
directive|define
name|DRV_ID_MCP_HSI_VER_CURRENT
value|(LOAD_REQ_HSI_VERSION<< DRV_ID_MCP_HSI_VER_SHIFT)
define|#
directive|define
name|DRV_ID_DRV_TYPE_MASK
value|0x7f000000
define|#
directive|define
name|DRV_ID_DRV_TYPE_SHIFT
value|24
define|#
directive|define
name|DRV_ID_DRV_TYPE_UNKNOWN
value|(0<< DRV_ID_DRV_TYPE_SHIFT)
define|#
directive|define
name|DRV_ID_DRV_TYPE_LINUX
value|(1<< DRV_ID_DRV_TYPE_SHIFT)
define|#
directive|define
name|DRV_ID_DRV_TYPE_WINDOWS
value|(2<< DRV_ID_DRV_TYPE_SHIFT)
define|#
directive|define
name|DRV_ID_DRV_TYPE_DIAG
value|(3<< DRV_ID_DRV_TYPE_SHIFT)
define|#
directive|define
name|DRV_ID_DRV_TYPE_PREBOOT
value|(4<< DRV_ID_DRV_TYPE_SHIFT)
define|#
directive|define
name|DRV_ID_DRV_TYPE_SOLARIS
value|(5<< DRV_ID_DRV_TYPE_SHIFT)
define|#
directive|define
name|DRV_ID_DRV_TYPE_VMWARE
value|(6<< DRV_ID_DRV_TYPE_SHIFT)
define|#
directive|define
name|DRV_ID_DRV_TYPE_FREEBSD
value|(7<< DRV_ID_DRV_TYPE_SHIFT)
define|#
directive|define
name|DRV_ID_DRV_TYPE_AIX
value|(8<< DRV_ID_DRV_TYPE_SHIFT)
define|#
directive|define
name|DRV_ID_DRV_TYPE_OS
value|(DRV_ID_DRV_TYPE_LINUX | DRV_ID_DRV_TYPE_WINDOWS | \ 									 DRV_ID_DRV_TYPE_SOLARIS | DRV_ID_DRV_TYPE_VMWARE | \ 									 DRV_ID_DRV_TYPE_FREEBSD | DRV_ID_DRV_TYPE_AIX)
define|#
directive|define
name|DRV_ID_DRV_INIT_HW_MASK
value|0x80000000
define|#
directive|define
name|DRV_ID_DRV_INIT_HW_SHIFT
value|31
define|#
directive|define
name|DRV_ID_DRV_INIT_HW_FLAG
value|(1<< DRV_ID_DRV_INIT_HW_SHIFT)
block|}
struct|;
end_struct

begin_comment
comment|/**************************************/
end_comment

begin_comment
comment|/*                                    */
end_comment

begin_comment
comment|/*     P U B L I C       M B          */
end_comment

begin_comment
comment|/*                                    */
end_comment

begin_comment
comment|/**************************************/
end_comment

begin_comment
comment|/* This is the only section that the driver can write to, and each */
end_comment

begin_comment
comment|/* Basically each driver request to set feature parameters,  * will be done using a different command, which will be linked  * to a specific data structure from the union below.  * For huge strucuture, the common blank structure should be used.  */
end_comment

begin_struct
struct|struct
name|mcp_mac
block|{
name|u32
name|mac_upper
decl_stmt|;
comment|/* Upper 16 bits are always zeroes */
name|u32
name|mac_lower
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mcp_val64
block|{
name|u32
name|lo
decl_stmt|;
name|u32
name|hi
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mcp_file_att
block|{
name|u32
name|nvm_start_addr
decl_stmt|;
name|u32
name|len
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bist_nvm_image_att
block|{
name|u32
name|return_code
decl_stmt|;
name|u32
name|image_type
decl_stmt|;
comment|/* Image type */
name|u32
name|nvm_start_addr
decl_stmt|;
comment|/* NVM address of the image */
name|u32
name|len
decl_stmt|;
comment|/* Include CRC */
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|MCP_DRV_VER_STR_SIZE
value|16
end_define

begin_define
define|#
directive|define
name|MCP_DRV_VER_STR_SIZE_DWORD
value|(MCP_DRV_VER_STR_SIZE / sizeof(u32))
end_define

begin_define
define|#
directive|define
name|MCP_DRV_NVM_BUF_LEN
value|32
end_define

begin_struct
struct|struct
name|drv_version_stc
block|{
name|u32
name|version
decl_stmt|;
name|u8
name|name
index|[
name|MCP_DRV_VER_STR_SIZE
operator|-
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* statistics for ncsi */
end_comment

begin_struct
struct|struct
name|lan_stats_stc
block|{
name|u64
name|ucast_rx_pkts
decl_stmt|;
name|u64
name|ucast_tx_pkts
decl_stmt|;
name|u32
name|fcs_err
decl_stmt|;
name|u32
name|rserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|fcoe_stats_stc
block|{
name|u64
name|rx_pkts
decl_stmt|;
name|u64
name|tx_pkts
decl_stmt|;
name|u32
name|fcs_err
decl_stmt|;
name|u32
name|login_failure
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|iscsi_stats_stc
block|{
name|u64
name|rx_pdus
decl_stmt|;
name|u64
name|tx_pdus
decl_stmt|;
name|u64
name|rx_bytes
decl_stmt|;
name|u64
name|tx_bytes
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rdma_stats_stc
block|{
name|u64
name|rx_pkts
decl_stmt|;
name|u64
name|tx_pkts
decl_stmt|;
name|u64
name|rx_bytes
decl_stmt|;
name|u64
name|tx_bytes
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ocbb_data_stc
block|{
name|u32
name|ocbb_host_addr
decl_stmt|;
name|u32
name|ocsd_host_addr
decl_stmt|;
name|u32
name|ocsd_req_update_interval
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|MAX_NUM_OF_SENSORS
value|7
end_define

begin_define
define|#
directive|define
name|MFW_SENSOR_LOCATION_INTERNAL
value|1
end_define

begin_define
define|#
directive|define
name|MFW_SENSOR_LOCATION_EXTERNAL
value|2
end_define

begin_define
define|#
directive|define
name|MFW_SENSOR_LOCATION_SFP
value|3
end_define

begin_define
define|#
directive|define
name|SENSOR_LOCATION_SHIFT
value|0
end_define

begin_define
define|#
directive|define
name|SENSOR_LOCATION_MASK
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|THRESHOLD_HIGH_SHIFT
value|8
end_define

begin_define
define|#
directive|define
name|THRESHOLD_HIGH_MASK
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|CRITICAL_TEMPERATURE_SHIFT
value|16
end_define

begin_define
define|#
directive|define
name|CRITICAL_TEMPERATURE_MASK
value|0x00ff0000
end_define

begin_define
define|#
directive|define
name|CURRENT_TEMP_SHIFT
value|24
end_define

begin_define
define|#
directive|define
name|CURRENT_TEMP_MASK
value|0xff000000
end_define

begin_struct
struct|struct
name|temperature_status_stc
block|{
name|u32
name|num_of_sensors
decl_stmt|;
name|u32
name|sensor
index|[
name|MAX_NUM_OF_SENSORS
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* crash dump configuration header */
end_comment

begin_struct
struct|struct
name|mdump_config_stc
block|{
name|u32
name|version
decl_stmt|;
name|u32
name|config
decl_stmt|;
name|u32
name|epoc
decl_stmt|;
name|u32
name|num_of_logs
decl_stmt|;
name|u32
name|valid_logs
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|resource_id_enum
block|{
name|RESOURCE_NUM_SB_E
init|=
literal|0
block|,
name|RESOURCE_NUM_L2_QUEUE_E
init|=
literal|1
block|,
name|RESOURCE_NUM_VPORT_E
init|=
literal|2
block|,
name|RESOURCE_NUM_VMQ_E
init|=
literal|3
block|,
name|RESOURCE_FACTOR_NUM_RSS_PF_E
init|=
literal|4
block|,
comment|/* Not a real resource!! it's a factor used to calculate others */
name|RESOURCE_FACTOR_RSS_PER_VF_E
init|=
literal|5
block|,
comment|/* Not a real resource!! it's a factor used to calculate others */
name|RESOURCE_NUM_RL_E
init|=
literal|6
block|,
name|RESOURCE_NUM_PQ_E
init|=
literal|7
block|,
name|RESOURCE_NUM_VF_E
init|=
literal|8
block|,
name|RESOURCE_VFC_FILTER_E
init|=
literal|9
block|,
name|RESOURCE_ILT_E
init|=
literal|10
block|,
name|RESOURCE_CQS_E
init|=
literal|11
block|,
name|RESOURCE_GFT_PROFILES_E
init|=
literal|12
block|,
name|RESOURCE_NUM_TC_E
init|=
literal|13
block|,
name|RESOURCE_NUM_RSS_ENGINES_E
init|=
literal|14
block|,
name|RESOURCE_LL2_QUEUE_E
init|=
literal|15
block|,
name|RESOURCE_RDMA_STATS_QUEUE_E
init|=
literal|16
block|,
name|RESOURCE_BDQ_E
init|=
literal|17
block|,
name|RESOURCE_MAX_NUM
block|,
name|RESOURCE_NUM_INVALID
init|=
literal|0xFFFFFFFF
block|}
enum|;
end_enum

begin_comment
comment|/* Resource ID is to be filled by the driver in the MB request  * Size, offset& flags to be filled by the MFW in the MB response  */
end_comment

begin_struct
struct|struct
name|resource_info
block|{
name|enum
name|resource_id_enum
name|res_id
decl_stmt|;
name|u32
name|size
decl_stmt|;
comment|/* number of allocated resources */
name|u32
name|offset
decl_stmt|;
comment|/* Offset of the 1st resource */
name|u32
name|vf_size
decl_stmt|;
name|u32
name|vf_offset
decl_stmt|;
name|u32
name|flags
decl_stmt|;
define|#
directive|define
name|RESOURCE_ELEMENT_STRICT
value|(1<< 0)
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mcp_wwn
block|{
name|u32
name|wwn_upper
decl_stmt|;
name|u32
name|wwn_lower
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|DRV_ROLE_NONE
value|0
end_define

begin_define
define|#
directive|define
name|DRV_ROLE_PREBOOT
value|1
end_define

begin_define
define|#
directive|define
name|DRV_ROLE_OS
value|2
end_define

begin_define
define|#
directive|define
name|DRV_ROLE_KDUMP
value|3
end_define

begin_struct
struct|struct
name|load_req_stc
block|{
name|u32
name|drv_ver_0
decl_stmt|;
name|u32
name|drv_ver_1
decl_stmt|;
name|u32
name|fw_ver
decl_stmt|;
name|u32
name|misc0
decl_stmt|;
define|#
directive|define
name|LOAD_REQ_ROLE_MASK
value|0x000000FF
define|#
directive|define
name|LOAD_REQ_ROLE_SHIFT
value|0
define|#
directive|define
name|LOAD_REQ_LOCK_TO_MASK
value|0x0000FF00
define|#
directive|define
name|LOAD_REQ_LOCK_TO_SHIFT
value|8
define|#
directive|define
name|LOAD_REQ_LOCK_TO_DEFAULT
value|0
define|#
directive|define
name|LOAD_REQ_LOCK_TO_NONE
value|255
define|#
directive|define
name|LOAD_REQ_FORCE_MASK
value|0x000F0000
define|#
directive|define
name|LOAD_REQ_FORCE_SHIFT
value|16
define|#
directive|define
name|LOAD_REQ_FORCE_NONE
value|0
define|#
directive|define
name|LOAD_REQ_FORCE_PF
value|1
define|#
directive|define
name|LOAD_REQ_FORCE_ALL
value|2
define|#
directive|define
name|LOAD_REQ_FLAGS0_MASK
value|0x00F00000
define|#
directive|define
name|LOAD_REQ_FLAGS0_SHIFT
value|20
define|#
directive|define
name|LOAD_REQ_FLAGS0_AVOID_RESET
value|(0x1<< 0)
block|}
struct|;
end_struct

begin_struct
struct|struct
name|load_rsp_stc
block|{
name|u32
name|drv_ver_0
decl_stmt|;
name|u32
name|drv_ver_1
decl_stmt|;
name|u32
name|fw_ver
decl_stmt|;
name|u32
name|misc0
decl_stmt|;
define|#
directive|define
name|LOAD_RSP_ROLE_MASK
value|0x000000FF
define|#
directive|define
name|LOAD_RSP_ROLE_SHIFT
value|0
define|#
directive|define
name|LOAD_RSP_HSI_MASK
value|0x0000FF00
define|#
directive|define
name|LOAD_RSP_HSI_SHIFT
value|8
define|#
directive|define
name|LOAD_RSP_FLAGS0_MASK
value|0x000F0000
define|#
directive|define
name|LOAD_RSP_FLAGS0_SHIFT
value|16
define|#
directive|define
name|LOAD_RSP_FLAGS0_DRV_EXISTS
value|(0x1<< 0)
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mdump_retain_data_stc
block|{
name|u32
name|valid
decl_stmt|;
name|u32
name|epoch
decl_stmt|;
name|u32
name|pf
decl_stmt|;
name|u32
name|status
decl_stmt|;
block|}
struct|;
end_struct

begin_union
union|union
name|drv_union_data
block|{
name|struct
name|mcp_mac
name|wol_mac
decl_stmt|;
comment|/* UNLOAD_DONE */
comment|/* This configuration should be set by the driver for the LINK_SET command. */
name|struct
name|eth_phy_cfg
name|drv_phy_cfg
decl_stmt|;
name|struct
name|mcp_val64
name|val64
decl_stmt|;
comment|/* For PHY / AVS commands */
name|u8
name|raw_data
index|[
name|MCP_DRV_NVM_BUF_LEN
index|]
decl_stmt|;
name|struct
name|mcp_file_att
name|file_att
decl_stmt|;
name|u32
name|ack_vf_disabled
index|[
name|VF_MAX_STATIC
operator|/
literal|32
index|]
decl_stmt|;
name|struct
name|drv_version_stc
name|drv_version
decl_stmt|;
name|struct
name|lan_stats_stc
name|lan_stats
decl_stmt|;
name|struct
name|fcoe_stats_stc
name|fcoe_stats
decl_stmt|;
name|struct
name|iscsi_stats_stc
name|iscsi_stats
decl_stmt|;
name|struct
name|rdma_stats_stc
name|rdma_stats
decl_stmt|;
name|struct
name|ocbb_data_stc
name|ocbb_info
decl_stmt|;
name|struct
name|temperature_status_stc
name|temp_info
decl_stmt|;
name|struct
name|resource_info
name|resource
decl_stmt|;
name|struct
name|bist_nvm_image_att
name|nvm_image_att
decl_stmt|;
name|struct
name|mdump_config_stc
name|mdump_config
decl_stmt|;
name|struct
name|mcp_mac
name|lldp_mac
decl_stmt|;
name|struct
name|mcp_wwn
name|fcoe_fabric_name
decl_stmt|;
name|u32
name|dword
decl_stmt|;
name|struct
name|load_req_stc
name|load_req
decl_stmt|;
name|struct
name|load_rsp_stc
name|load_rsp
decl_stmt|;
name|struct
name|mdump_retain_data_stc
name|mdump_retain
decl_stmt|;
comment|/* ... */
block|}
union|;
end_union

begin_struct
struct|struct
name|public_drv_mb
block|{
name|u32
name|drv_mb_header
decl_stmt|;
define|#
directive|define
name|DRV_MSG_CODE_MASK
value|0xffff0000
define|#
directive|define
name|DRV_MSG_CODE_LOAD_REQ
value|0x10000000
define|#
directive|define
name|DRV_MSG_CODE_LOAD_DONE
value|0x11000000
define|#
directive|define
name|DRV_MSG_CODE_INIT_HW
value|0x12000000
define|#
directive|define
name|DRV_MSG_CODE_CANCEL_LOAD_REQ
value|0x13000000
define|#
directive|define
name|DRV_MSG_CODE_UNLOAD_REQ
value|0x20000000
define|#
directive|define
name|DRV_MSG_CODE_UNLOAD_DONE
value|0x21000000
define|#
directive|define
name|DRV_MSG_CODE_INIT_PHY
value|0x22000000
comment|/* Params - FORCE - Reinitialize the link regardless of LFA */
comment|/*        - DONT_CARE - Don't flap the link if up */
define|#
directive|define
name|DRV_MSG_CODE_LINK_RESET
value|0x23000000
comment|// Vitaly: LLDP commands
define|#
directive|define
name|DRV_MSG_CODE_SET_LLDP
value|0x24000000
define|#
directive|define
name|DRV_MSG_CODE_SET_DCBX
value|0x25000000
comment|/* OneView feature driver HSI*/
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_CURR_CFG
value|0x26000000
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_BUS_NUM
value|0x27000000
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_BOOT_PROGRESS
value|0x28000000
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_STORM_FW_VER
value|0x29000000
define|#
directive|define
name|DRV_MSG_CODE_NIG_DRAIN
value|0x30000000
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_DRIVER_STATE
value|0x31000000
define|#
directive|define
name|DRV_MSG_CODE_BW_UPDATE_ACK
value|0x32000000
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_MTU
value|0x33000000
define|#
directive|define
name|DRV_MSG_GET_RESOURCE_ALLOC_MSG
value|0x34000000
comment|/* DRV_MB Param: driver version supp, FW_MB param: MFW version supp, data: struct resource_info */
define|#
directive|define
name|DRV_MSG_SET_RESOURCE_VALUE_MSG
value|0x35000000
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_WOL
value|0x38000000
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_ESWITCH_MODE
value|0x39000000
define|#
directive|define
name|DRV_MSG_CODE_S_TAG_UPDATE_ACK
value|0x3b000000
define|#
directive|define
name|DRV_MSG_CODE_OEM_UPDATE_FCOE_CVID
value|0x3c000000
define|#
directive|define
name|DRV_MSG_CODE_OEM_UPDATE_FCOE_FABRIC_NAME
value|0x3d000000
define|#
directive|define
name|DRV_MSG_CODE_OEM_UPDATE_BOOT_CFG
value|0x3e000000
define|#
directive|define
name|DRV_MSG_CODE_OEM_RESET_TO_DEFAULT
value|0x3f000000
define|#
directive|define
name|DRV_MSG_CODE_OV_GET_CURR_CFG
value|0x40000000
define|#
directive|define
name|DRV_MSG_CODE_INITIATE_FLR_DEPRECATED
value|0x02000000
comment|/*deprecated don't use*/
define|#
directive|define
name|DRV_MSG_CODE_INITIATE_PF_FLR
value|0x02010000
define|#
directive|define
name|DRV_MSG_CODE_VF_DISABLED_DONE
value|0xc0000000
define|#
directive|define
name|DRV_MSG_CODE_CFG_VF_MSIX
value|0xc0010000
define|#
directive|define
name|DRV_MSG_CODE_NVM_PUT_FILE_BEGIN
value|0x00010000
comment|/* Param is either DRV_MB_PARAM_NVM_PUT_FILE_BEGIN_MFW/IMAGE */
define|#
directive|define
name|DRV_MSG_CODE_NVM_PUT_FILE_DATA
value|0x00020000
comment|/* Param should be set to the transaction size (up to 64 bytes) */
define|#
directive|define
name|DRV_MSG_CODE_NVM_GET_FILE_ATT
value|0x00030000
comment|/* MFW will place the file offset and len in file_att struct */
define|#
directive|define
name|DRV_MSG_CODE_NVM_READ_NVRAM
value|0x00050000
comment|/* Read 32bytes of nvram data. Param is [0:23] ??? Offset [24:31] ??? Len in Bytes*/
define|#
directive|define
name|DRV_MSG_CODE_NVM_WRITE_NVRAM
value|0x00060000
comment|/* Writes up to 32Bytes to nvram. Param is [0:23] ??? Offset [24:31] ??? Len in Bytes. In case this address is in the range of secured file in secured mode, the operation will fail */
define|#
directive|define
name|DRV_MSG_CODE_NVM_DEL_FILE
value|0x00080000
comment|/* Delete a file from nvram. Param is image_type. */
define|#
directive|define
name|DRV_MSG_CODE_MCP_RESET
value|0x00090000
comment|/* Reset MCP when no NVM operation is going on, and no drivers are loaded. In case operation succeed, MCP will not ack back. */
define|#
directive|define
name|DRV_MSG_CODE_SET_SECURE_MODE
value|0x000a0000
comment|/* Temporary command to set secure mode, where the param is 0 (None secure) / 1 (Secure) / 2 (Full-Secure) */
define|#
directive|define
name|DRV_MSG_CODE_PHY_RAW_READ
value|0x000b0000
comment|/* Param: [0:15] - Address, [16:18] - lane# (0/1/2/3 - for single lane, 4/5 - for dual lanes, 6 - for all lanes, [28] - PMD reg, [29] - select port, [30:31] - port*/
define|#
directive|define
name|DRV_MSG_CODE_PHY_RAW_WRITE
value|0x000c0000
comment|/* Param: [0:15] - Address, [16:18] - lane# (0/1/2/3 - for single lane, 4/5 - for dual lanes, 6 - for all lanes, [28] - PMD reg, [29] - select port, [30:31] - port */
define|#
directive|define
name|DRV_MSG_CODE_PHY_CORE_READ
value|0x000d0000
comment|/* Param: [0:15] - Address, [30:31] - port */
define|#
directive|define
name|DRV_MSG_CODE_PHY_CORE_WRITE
value|0x000e0000
comment|/* Param: [0:15] - Address, [30:31] - port */
define|#
directive|define
name|DRV_MSG_CODE_SET_VERSION
value|0x000f0000
comment|/* Param: [0:3] - version, [4:15] - name (null terminated) */
define|#
directive|define
name|DRV_MSG_CODE_MCP_HALT
value|0x00100000
comment|/* Halts the MCP. To resume MCP, user will need to use MCP_REG_CPU_STATE/MCP_REG_CPU_MODE registers. */
define|#
directive|define
name|DRV_MSG_CODE_SET_VMAC
value|0x00110000
comment|/* Set virtual mac address, params [31:6] - reserved, [5:4] - type, [3:0] - func, drv_data[7:0] - MAC/WWNN/WWPN */
define|#
directive|define
name|DRV_MSG_CODE_GET_VMAC
value|0x00120000
comment|/* Set virtual mac address, params [31:6] - reserved, [5:4] - type, [3:0] - func, drv_data[7:0] - MAC/WWNN/WWPN */
define|#
directive|define
name|DRV_MSG_CODE_VMAC_TYPE_SHIFT
value|4
define|#
directive|define
name|DRV_MSG_CODE_VMAC_TYPE_MASK
value|0x30
define|#
directive|define
name|DRV_MSG_CODE_VMAC_TYPE_MAC
value|1
define|#
directive|define
name|DRV_MSG_CODE_VMAC_TYPE_WWNN
value|2
define|#
directive|define
name|DRV_MSG_CODE_VMAC_TYPE_WWPN
value|3
define|#
directive|define
name|DRV_MSG_CODE_GET_STATS
value|0x00130000
comment|/* Get statistics from pf, params [31:4] - reserved, [3:0] - stats type */
define|#
directive|define
name|DRV_MSG_CODE_STATS_TYPE_LAN
value|1
define|#
directive|define
name|DRV_MSG_CODE_STATS_TYPE_FCOE
value|2
define|#
directive|define
name|DRV_MSG_CODE_STATS_TYPE_ISCSI
value|3
define|#
directive|define
name|DRV_MSG_CODE_STATS_TYPE_RDMA
value|4
define|#
directive|define
name|DRV_MSG_CODE_PMD_DIAG_DUMP
value|0x00140000
comment|/* Host shall provide buffer and size for MFW  */
define|#
directive|define
name|DRV_MSG_CODE_PMD_DIAG_EYE
value|0x00150000
comment|/* Host shall provide buffer and size for MFW  */
define|#
directive|define
name|DRV_MSG_CODE_TRANSCEIVER_READ
value|0x00160000
comment|/* Param: [0:1] - Port, [2:7] - read size, [8:15] - I2C address, [16:31] - offset */
define|#
directive|define
name|DRV_MSG_CODE_TRANSCEIVER_WRITE
value|0x00170000
comment|/* Param: [0:1] - Port, [2:7] - write size, [8:15] - I2C address, [16:31] - offset */
define|#
directive|define
name|DRV_MSG_CODE_OCBB_DATA
value|0x00180000
comment|/* indicate OCBB related information */
define|#
directive|define
name|DRV_MSG_CODE_SET_BW
value|0x00190000
comment|/* Set function BW, params[15:8] - min, params[7:0] - max */
define|#
directive|define
name|BW_MAX_MASK
value|0x000000ff
define|#
directive|define
name|BW_MAX_SHIFT
value|0
define|#
directive|define
name|BW_MIN_MASK
value|0x0000ff00
define|#
directive|define
name|BW_MIN_SHIFT
value|8
define|#
directive|define
name|DRV_MSG_CODE_MASK_PARITIES
value|0x001a0000
comment|/* When param is set to 1, all parities will be masked(disabled). When params are set to 0, parities will be unmasked again. */
define|#
directive|define
name|DRV_MSG_CODE_INDUCE_FAILURE
value|0x001b0000
comment|/* param[0] - Simulate fan failure,  param[1] - simulate over temp. */
define|#
directive|define
name|DRV_MSG_FAN_FAILURE_TYPE
value|(1<< 0)
define|#
directive|define
name|DRV_MSG_TEMPERATURE_FAILURE_TYPE
value|(1<< 1)
define|#
directive|define
name|DRV_MSG_CODE_GPIO_READ
value|0x001c0000
comment|/* Param: [0:15] - gpio number */
define|#
directive|define
name|DRV_MSG_CODE_GPIO_WRITE
value|0x001d0000
comment|/* Param: [0:15] - gpio number, [16:31] - gpio value */
define|#
directive|define
name|DRV_MSG_CODE_BIST_TEST
value|0x001e0000
comment|/* Param: [0:7] - test enum, [8:15] - image index, [16:31] - reserved */
define|#
directive|define
name|DRV_MSG_CODE_GET_TEMPERATURE
value|0x001f0000
define|#
directive|define
name|DRV_MSG_CODE_SET_LED_MODE
value|0x00200000
comment|/* Set LED mode  params :0 operational, 1 LED turn ON, 2 LED turn OFF */
define|#
directive|define
name|DRV_MSG_CODE_TIMESTAMP
value|0x00210000
comment|/* drv_data[7:0] - EPOC in seconds, drv_data[15:8] - driver version (MAJ MIN BUILD SUB) */
define|#
directive|define
name|DRV_MSG_CODE_EMPTY_MB
value|0x00220000
comment|/* This is an empty mailbox just return OK*/
define|#
directive|define
name|DRV_MSG_CODE_RESOURCE_CMD
value|0x00230000
comment|/* Param[0:4] - resource number (0-31), Param[5:7] - opcode, param[15:8] - age */
define|#
directive|define
name|RESOURCE_CMD_REQ_RESC_MASK
value|0x0000001F
define|#
directive|define
name|RESOURCE_CMD_REQ_RESC_SHIFT
value|0
define|#
directive|define
name|RESOURCE_CMD_REQ_OPCODE_MASK
value|0x000000E0
define|#
directive|define
name|RESOURCE_CMD_REQ_OPCODE_SHIFT
value|5
define|#
directive|define
name|RESOURCE_OPCODE_REQ
value|1
comment|/* request resource ownership with default aging */
define|#
directive|define
name|RESOURCE_OPCODE_REQ_WO_AGING
value|2
comment|/* request resource ownership without aging */
define|#
directive|define
name|RESOURCE_OPCODE_REQ_W_AGING
value|3
comment|/* request resource ownership with specific aging timer (in seconds) */
define|#
directive|define
name|RESOURCE_OPCODE_RELEASE
value|4
comment|/* release resource */
define|#
directive|define
name|RESOURCE_OPCODE_FORCE_RELEASE
value|5
comment|/* force resource release */
define|#
directive|define
name|RESOURCE_CMD_REQ_AGE_MASK
value|0x0000FF00
define|#
directive|define
name|RESOURCE_CMD_REQ_AGE_SHIFT
value|8
define|#
directive|define
name|RESOURCE_CMD_RSP_OWNER_MASK
value|0x000000FF
define|#
directive|define
name|RESOURCE_CMD_RSP_OWNER_SHIFT
value|0
define|#
directive|define
name|RESOURCE_CMD_RSP_OPCODE_MASK
value|0x00000700
define|#
directive|define
name|RESOURCE_CMD_RSP_OPCODE_SHIFT
value|8
define|#
directive|define
name|RESOURCE_OPCODE_GNT
value|1
comment|/* resource is free and granted to requester */
define|#
directive|define
name|RESOURCE_OPCODE_BUSY
value|2
comment|/* resource is busy, param[7:0] indicates owner as follow 0-15 = PF0-15, 16 = MFW, 17 = diag over serial */
define|#
directive|define
name|RESOURCE_OPCODE_RELEASED
value|3
comment|/* indicate release request was acknowledged */
define|#
directive|define
name|RESOURCE_OPCODE_RELEASED_PREVIOUS
value|4
comment|/* indicate release request was previously received by other owner */
define|#
directive|define
name|RESOURCE_OPCODE_WRONG_OWNER
value|5
comment|/* indicate wrong owner during release */
define|#
directive|define
name|RESOURCE_OPCODE_UNKNOWN_CMD
value|255
define|#
directive|define
name|RESOURCE_DUMP
value|0
comment|/* dedicate resource 0 for dump */
define|#
directive|define
name|DRV_MSG_CODE_GET_MBA_VERSION
value|0x00240000
comment|/* Get MBA version */
define|#
directive|define
name|DRV_MSG_CODE_MDUMP_CMD
value|0x00250000
comment|/* Send crash dump commands with param[3:0] - opcode */
define|#
directive|define
name|MDUMP_DRV_PARAM_OPCODE_MASK
value|0x0000000f
define|#
directive|define
name|DRV_MSG_CODE_MDUMP_ACK
value|0x01
comment|/* acknowledge reception of error indication */
define|#
directive|define
name|DRV_MSG_CODE_MDUMP_SET_VALUES
value|0x02
comment|/* set epoc and personality as follow: drv_data[3:0] - epoch, drv_data[7:4] - personality */
define|#
directive|define
name|DRV_MSG_CODE_MDUMP_TRIGGER
value|0x03
comment|/* trigger crash dump procedure */
define|#
directive|define
name|DRV_MSG_CODE_MDUMP_GET_CONFIG
value|0x04
comment|/* Request valid logs and config words */
define|#
directive|define
name|DRV_MSG_CODE_MDUMP_SET_ENABLE
value|0x05
comment|/* Set triggers mask. drv_mb_param should indicate (bitwise) which trigger enabled */
define|#
directive|define
name|DRV_MSG_CODE_MDUMP_CLEAR_LOGS
value|0x06
comment|/* Clear all logs */
define|#
directive|define
name|DRV_MSG_CODE_MDUMP_GET_RETAIN
value|0x07
comment|/* Get retained data */
define|#
directive|define
name|DRV_MSG_CODE_MDUMP_CLR_RETAIN
value|0x08
comment|/* Clear retain data */
define|#
directive|define
name|DRV_MSG_CODE_MEM_ECC_EVENTS
value|0x00260000
comment|/* Param: None */
define|#
directive|define
name|DRV_MSG_CODE_GPIO_INFO
value|0x00270000
comment|/* Param: [0:15] - gpio number */
define|#
directive|define
name|DRV_MSG_CODE_EXT_PHY_READ
value|0x00280000
comment|/* Value will be placed in union */
define|#
directive|define
name|DRV_MSG_CODE_EXT_PHY_WRITE
value|0x00290000
comment|/* Value shoud be placed in union */
define|#
directive|define
name|DRV_MB_PARAM_ADDR_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_ADDR_MASK
value|0x0000FFFF
define|#
directive|define
name|DRV_MB_PARAM_DEVAD_SHIFT
value|16
define|#
directive|define
name|DRV_MB_PARAM_DEVAD_MASK
value|0x001F0000
define|#
directive|define
name|DRV_MB_PARAM_PORT_SHIFT
value|21
define|#
directive|define
name|DRV_MB_PARAM_PORT_MASK
value|0x00600000
define|#
directive|define
name|DRV_MSG_CODE_EXT_PHY_FW_UPGRADE
value|0x002a0000
define|#
directive|define
name|DRV_MSG_CODE_GET_PF_RDMA_PROTOCOL
value|0x002b0000
define|#
directive|define
name|DRV_MSG_CODE_SET_LLDP_MAC
value|0x002c0000
define|#
directive|define
name|DRV_MSG_CODE_GET_LLDP_MAC
value|0x002d0000
define|#
directive|define
name|DRV_MSG_CODE_OS_WOL
value|0x002e0000
define|#
directive|define
name|DRV_MSG_CODE_GET_TLV_DONE
value|0x002f0000
comment|/* Param: None */
define|#
directive|define
name|DRV_MSG_CODE_FEATURE_SUPPORT
value|0x00300000
comment|/* Param: Set DRV_MB_PARAM_FEATURE_SUPPORT_* */
define|#
directive|define
name|DRV_MSG_CODE_GET_MFW_FEATURE_SUPPORT
value|0x00310000
comment|/* return FW_MB_PARAM_FEATURE_SUPPORT_*  */
define|#
directive|define
name|DRV_MSG_CODE_READ_WOL_REG
value|0X00320000
define|#
directive|define
name|DRV_MSG_CODE_WRITE_WOL_REG
value|0X00330000
define|#
directive|define
name|DRV_MSG_CODE_GET_WOL_BUFFER
value|0X00340000
define|#
directive|define
name|DRV_MSG_SEQ_NUMBER_MASK
value|0x0000ffff
name|u32
name|drv_mb_param
decl_stmt|;
comment|/* UNLOAD_REQ params */
define|#
directive|define
name|DRV_MB_PARAM_UNLOAD_WOL_UNKNOWN
value|0x00000000
define|#
directive|define
name|DRV_MB_PARAM_UNLOAD_WOL_MCP
value|0x00000001
define|#
directive|define
name|DRV_MB_PARAM_UNLOAD_WOL_DISABLED
value|0x00000002
define|#
directive|define
name|DRV_MB_PARAM_UNLOAD_WOL_ENABLED
value|0x00000003
comment|/* UNLOAD_DONE_params */
define|#
directive|define
name|DRV_MB_PARAM_UNLOAD_NON_D3_POWER
value|0x00000001
comment|/* INIT_PHY params */
define|#
directive|define
name|DRV_MB_PARAM_INIT_PHY_FORCE
value|0x00000001
define|#
directive|define
name|DRV_MB_PARAM_INIT_PHY_DONT_CARE
value|0x00000002
comment|/* LLDP / DCBX params*/
define|#
directive|define
name|DRV_MB_PARAM_LLDP_SEND_MASK
value|0x00000001
define|#
directive|define
name|DRV_MB_PARAM_LLDP_SEND_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_LLDP_AGENT_MASK
value|0x00000006
define|#
directive|define
name|DRV_MB_PARAM_LLDP_AGENT_SHIFT
value|1
define|#
directive|define
name|DRV_MB_PARAM_DCBX_NOTIFY_MASK
value|0x00000008
define|#
directive|define
name|DRV_MB_PARAM_DCBX_NOTIFY_SHIFT
value|3
define|#
directive|define
name|DRV_MB_PARAM_NIG_DRAIN_PERIOD_MS_MASK
value|0x000000FF
define|#
directive|define
name|DRV_MB_PARAM_NIG_DRAIN_PERIOD_MS_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_NVM_PUT_FILE_BEGIN_MFW
value|0x1
define|#
directive|define
name|DRV_MB_PARAM_NVM_PUT_FILE_BEGIN_IMAGE
value|0x2
define|#
directive|define
name|DRV_MB_PARAM_NVM_OFFSET_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_NVM_OFFSET_MASK
value|0x00FFFFFF
define|#
directive|define
name|DRV_MB_PARAM_NVM_LEN_SHIFT
value|24
define|#
directive|define
name|DRV_MB_PARAM_NVM_LEN_MASK
value|0xFF000000
define|#
directive|define
name|DRV_MB_PARAM_PHY_ADDR_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_PHY_ADDR_MASK
value|0x1FF0FFFF
define|#
directive|define
name|DRV_MB_PARAM_PHY_LANE_SHIFT
value|16
define|#
directive|define
name|DRV_MB_PARAM_PHY_LANE_MASK
value|0x000F0000
define|#
directive|define
name|DRV_MB_PARAM_PHY_SELECT_PORT_SHIFT
value|29
define|#
directive|define
name|DRV_MB_PARAM_PHY_SELECT_PORT_MASK
value|0x20000000
define|#
directive|define
name|DRV_MB_PARAM_PHY_PORT_SHIFT
value|30
define|#
directive|define
name|DRV_MB_PARAM_PHY_PORT_MASK
value|0xc0000000
define|#
directive|define
name|DRV_MB_PARAM_PHYMOD_LANE_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_PHYMOD_LANE_MASK
value|0x000000FF
define|#
directive|define
name|DRV_MB_PARAM_PHYMOD_SIZE_SHIFT
value|8
define|#
directive|define
name|DRV_MB_PARAM_PHYMOD_SIZE_MASK
value|0x000FFF00
comment|/* configure vf MSIX params*/
define|#
directive|define
name|DRV_MB_PARAM_CFG_VF_MSIX_VF_ID_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_CFG_VF_MSIX_VF_ID_MASK
value|0x000000FF
define|#
directive|define
name|DRV_MB_PARAM_CFG_VF_MSIX_SB_NUM_SHIFT
value|8
define|#
directive|define
name|DRV_MB_PARAM_CFG_VF_MSIX_SB_NUM_MASK
value|0x0000FF00
comment|/* OneView configuration parametres */
define|#
directive|define
name|DRV_MB_PARAM_OV_CURR_CFG_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_OV_CURR_CFG_MASK
value|0x0000000F
define|#
directive|define
name|DRV_MB_PARAM_OV_CURR_CFG_NONE
value|0
define|#
directive|define
name|DRV_MB_PARAM_OV_CURR_CFG_OS
value|1
define|#
directive|define
name|DRV_MB_PARAM_OV_CURR_CFG_VENDOR_SPEC
value|2
define|#
directive|define
name|DRV_MB_PARAM_OV_CURR_CFG_OTHER
value|3
define|#
directive|define
name|DRV_MB_PARAM_OV_CURR_CFG_VC_CLP
value|4
define|#
directive|define
name|DRV_MB_PARAM_OV_CURR_CFG_CNU
value|5
define|#
directive|define
name|DRV_MB_PARAM_OV_CURR_CFG_DCI
value|6
define|#
directive|define
name|DRV_MB_PARAM_OV_CURR_CFG_HII
value|7
define|#
directive|define
name|DRV_MB_PARAM_OV_UPDATE_BOOT_PROG_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_OV_UPDATE_BOOT_PROG_MASK
value|0x000000FF
define|#
directive|define
name|DRV_MB_PARAM_OV_UPDATE_BOOT_PROG_NONE
value|(1<< 0)
define|#
directive|define
name|DRV_MB_PARAM_OV_UPDATE_BOOT_PROG_ISCSI_IP_ACQUIRED
value|(1<< 1)
define|#
directive|define
name|DRV_MB_PARAM_OV_UPDATE_BOOT_PROG_FCOE_FABRIC_LOGIN_SUCCESS
value|(1<< 1)
define|#
directive|define
name|DRV_MB_PARAM_OV_UPDATE_BOOT_PROG_TRARGET_FOUND
value|(1<< 2)
define|#
directive|define
name|DRV_MB_PARAM_OV_UPDATE_BOOT_PROG_ISCSI_CHAP_SUCCESS
value|(1<< 3)
define|#
directive|define
name|DRV_MB_PARAM_OV_UPDATE_BOOT_PROG_FCOE_LUN_FOUND
value|(1<< 3)
define|#
directive|define
name|DRV_MB_PARAM_OV_UPDATE_BOOT_PROG_LOGGED_INTO_TGT
value|(1<< 4)
define|#
directive|define
name|DRV_MB_PARAM_OV_UPDATE_BOOT_PROG_IMG_DOWNLOADED
value|(1<< 5)
define|#
directive|define
name|DRV_MB_PARAM_OV_UPDATE_BOOT_PROG_OS_HANDOFF
value|(1<< 6)
define|#
directive|define
name|DRV_MB_PARAM_OV_UPDATE_BOOT_COMPLETED
value|0
define|#
directive|define
name|DRV_MB_PARAM_OV_PCI_BUS_NUM_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_OV_PCI_BUS_NUM_MASK
value|0x000000FF
define|#
directive|define
name|DRV_MB_PARAM_OV_STORM_FW_VER_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_OV_STORM_FW_VER_MASK
value|0xFFFFFFFF
define|#
directive|define
name|DRV_MB_PARAM_OV_STORM_FW_VER_MAJOR_MASK
value|0xFF000000
define|#
directive|define
name|DRV_MB_PARAM_OV_STORM_FW_VER_MINOR_MASK
value|0x00FF0000
define|#
directive|define
name|DRV_MB_PARAM_OV_STORM_FW_VER_BUILD_MASK
value|0x0000FF00
define|#
directive|define
name|DRV_MB_PARAM_OV_STORM_FW_VER_DROP_MASK
value|0x000000FF
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_DRIVER_STATE_SHIFT
value|0
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_DRIVER_STATE_MASK
value|0xF
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_DRIVER_STATE_UNKNOWN
value|0x1
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_DRIVER_STATE_NOT_LOADED
value|0x2
comment|/* Not Installed*/
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_DRIVER_STATE_LOADING
value|0x3
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_DRIVER_STATE_DISABLED
value|0x4
comment|/* installed but disabled by user/admin/OS */
define|#
directive|define
name|DRV_MSG_CODE_OV_UPDATE_DRIVER_STATE_ACTIVE
value|0x5
comment|/* installed and active */
define|#
directive|define
name|DRV_MB_PARAM_OV_MTU_SIZE_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_OV_MTU_SIZE_MASK
value|0xFFFFFFFF
define|#
directive|define
name|DRV_MB_PARAM_WOL_MASK
value|(DRV_MB_PARAM_WOL_DEFAULT | 	\ 					 DRV_MB_PARAM_WOL_DISABLED |	\ 					 DRV_MB_PARAM_WOL_ENABLED)
define|#
directive|define
name|DRV_MB_PARAM_WOL_DEFAULT
value|DRV_MB_PARAM_UNLOAD_WOL_MCP
define|#
directive|define
name|DRV_MB_PARAM_WOL_DISABLED
value|DRV_MB_PARAM_UNLOAD_WOL_DISABLED
define|#
directive|define
name|DRV_MB_PARAM_WOL_ENABLED
value|DRV_MB_PARAM_UNLOAD_WOL_ENABLED
define|#
directive|define
name|DRV_MB_PARAM_ESWITCH_MODE_MASK
value|(DRV_MB_PARAM_ESWITCH_MODE_NONE | \ 					 DRV_MB_PARAM_ESWITCH_MODE_VEB |   \ 					 DRV_MB_PARAM_ESWITCH_MODE_VEPA)
define|#
directive|define
name|DRV_MB_PARAM_ESWITCH_MODE_NONE
value|0x0
define|#
directive|define
name|DRV_MB_PARAM_ESWITCH_MODE_VEB
value|0x1
define|#
directive|define
name|DRV_MB_PARAM_ESWITCH_MODE_VEPA
value|0x2
define|#
directive|define
name|DRV_MB_PARAM_FCOE_CVID_MASK
value|0xFFF
define|#
directive|define
name|DRV_MB_PARAM_FCOE_CVID_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_SET_LED_MODE_OPER
value|0x0
define|#
directive|define
name|DRV_MB_PARAM_SET_LED_MODE_ON
value|0x1
define|#
directive|define
name|DRV_MB_PARAM_SET_LED_MODE_OFF
value|0x2
define|#
directive|define
name|DRV_MB_PARAM_TRANSCEIVER_PORT_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_TRANSCEIVER_PORT_MASK
value|0x00000003
define|#
directive|define
name|DRV_MB_PARAM_TRANSCEIVER_SIZE_SHIFT
value|2
define|#
directive|define
name|DRV_MB_PARAM_TRANSCEIVER_SIZE_MASK
value|0x000000FC
define|#
directive|define
name|DRV_MB_PARAM_TRANSCEIVER_I2C_ADDRESS_SHIFT
value|8
define|#
directive|define
name|DRV_MB_PARAM_TRANSCEIVER_I2C_ADDRESS_MASK
value|0x0000FF00
define|#
directive|define
name|DRV_MB_PARAM_TRANSCEIVER_OFFSET_SHIFT
value|16
define|#
directive|define
name|DRV_MB_PARAM_TRANSCEIVER_OFFSET_MASK
value|0xFFFF0000
define|#
directive|define
name|DRV_MB_PARAM_GPIO_NUMBER_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_GPIO_NUMBER_MASK
value|0x0000FFFF
define|#
directive|define
name|DRV_MB_PARAM_GPIO_VALUE_SHIFT
value|16
define|#
directive|define
name|DRV_MB_PARAM_GPIO_VALUE_MASK
value|0xFFFF0000
define|#
directive|define
name|DRV_MB_PARAM_GPIO_DIRECTION_SHIFT
value|16
define|#
directive|define
name|DRV_MB_PARAM_GPIO_DIRECTION_MASK
value|0x00FF0000
define|#
directive|define
name|DRV_MB_PARAM_GPIO_CTRL_SHIFT
value|24
define|#
directive|define
name|DRV_MB_PARAM_GPIO_CTRL_MASK
value|0xFF000000
comment|/* Resource Allocation params - Driver version support*/
define|#
directive|define
name|DRV_MB_PARAM_RESOURCE_ALLOC_VERSION_MAJOR_MASK
value|0xFFFF0000
define|#
directive|define
name|DRV_MB_PARAM_RESOURCE_ALLOC_VERSION_MAJOR_SHIFT
value|16
define|#
directive|define
name|DRV_MB_PARAM_RESOURCE_ALLOC_VERSION_MINOR_MASK
value|0x0000FFFF
define|#
directive|define
name|DRV_MB_PARAM_RESOURCE_ALLOC_VERSION_MINOR_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_BIST_UNKNOWN_TEST
value|0
define|#
directive|define
name|DRV_MB_PARAM_BIST_REGISTER_TEST
value|1
define|#
directive|define
name|DRV_MB_PARAM_BIST_CLOCK_TEST
value|2
define|#
directive|define
name|DRV_MB_PARAM_BIST_NVM_TEST_NUM_IMAGES
value|3
define|#
directive|define
name|DRV_MB_PARAM_BIST_NVM_TEST_IMAGE_BY_INDEX
value|4
define|#
directive|define
name|DRV_MB_PARAM_BIST_RC_UNKNOWN
value|0
define|#
directive|define
name|DRV_MB_PARAM_BIST_RC_PASSED
value|1
define|#
directive|define
name|DRV_MB_PARAM_BIST_RC_FAILED
value|2
define|#
directive|define
name|DRV_MB_PARAM_BIST_RC_INVALID_PARAMETER
value|3
define|#
directive|define
name|DRV_MB_PARAM_BIST_TEST_INDEX_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_BIST_TEST_INDEX_MASK
value|0x000000FF
define|#
directive|define
name|DRV_MB_PARAM_BIST_TEST_IMAGE_INDEX_SHIFT
value|8
define|#
directive|define
name|DRV_MB_PARAM_BIST_TEST_IMAGE_INDEX_MASK
value|0x0000FF00
define|#
directive|define
name|DRV_MB_PARAM_FEATURE_SUPPORT_PORT_MASK
value|0x0000FFFF
define|#
directive|define
name|DRV_MB_PARAM_FEATURE_SUPPORT_PORT_SHIFT
value|0
define|#
directive|define
name|DRV_MB_PARAM_FEATURE_SUPPORT_PORT_SMARTLINQ
value|0x00000001
comment|/* driver supports SmartLinQ parameter */
define|#
directive|define
name|DRV_MB_PARAM_FEATURE_SUPPORT_PORT_EEE
value|0x00000002
comment|/* driver supports EEE parameter */
define|#
directive|define
name|DRV_MB_PARAM_FEATURE_SUPPORT_FUNC_MASK
value|0xFFFF0000
define|#
directive|define
name|DRV_MB_PARAM_FEATURE_SUPPORT_FUNC_SHIFT
value|16
name|u32
name|fw_mb_header
decl_stmt|;
define|#
directive|define
name|FW_MSG_CODE_MASK
value|0xffff0000
define|#
directive|define
name|FW_MSG_CODE_UNSUPPORTED
value|0x00000000
define|#
directive|define
name|FW_MSG_CODE_DRV_LOAD_ENGINE
value|0x10100000
define|#
directive|define
name|FW_MSG_CODE_DRV_LOAD_PORT
value|0x10110000
define|#
directive|define
name|FW_MSG_CODE_DRV_LOAD_FUNCTION
value|0x10120000
define|#
directive|define
name|FW_MSG_CODE_DRV_LOAD_REFUSED_PDA
value|0x10200000
define|#
directive|define
name|FW_MSG_CODE_DRV_LOAD_REFUSED_HSI_1
value|0x10210000
define|#
directive|define
name|FW_MSG_CODE_DRV_LOAD_REFUSED_DIAG
value|0x10220000
define|#
directive|define
name|FW_MSG_CODE_DRV_LOAD_REFUSED_HSI
value|0x10230000
define|#
directive|define
name|FW_MSG_CODE_DRV_LOAD_REFUSED_REQUIRES_FORCE
value|0x10300000
define|#
directive|define
name|FW_MSG_CODE_DRV_LOAD_REFUSED_REJECT
value|0x10310000
define|#
directive|define
name|FW_MSG_CODE_DRV_LOAD_DONE
value|0x11100000
define|#
directive|define
name|FW_MSG_CODE_DRV_UNLOAD_ENGINE
value|0x20110000
define|#
directive|define
name|FW_MSG_CODE_DRV_UNLOAD_PORT
value|0x20120000
define|#
directive|define
name|FW_MSG_CODE_DRV_UNLOAD_FUNCTION
value|0x20130000
define|#
directive|define
name|FW_MSG_CODE_DRV_UNLOAD_DONE
value|0x21100000
define|#
directive|define
name|FW_MSG_CODE_INIT_PHY_DONE
value|0x21200000
define|#
directive|define
name|FW_MSG_CODE_INIT_PHY_ERR_INVALID_ARGS
value|0x21300000
define|#
directive|define
name|FW_MSG_CODE_LINK_RESET_DONE
value|0x23000000
define|#
directive|define
name|FW_MSG_CODE_SET_LLDP_DONE
value|0x24000000
define|#
directive|define
name|FW_MSG_CODE_SET_LLDP_UNSUPPORTED_AGENT
value|0x24010000
define|#
directive|define
name|FW_MSG_CODE_SET_DCBX_DONE
value|0x25000000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_CURR_CFG_DONE
value|0x26000000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_BUS_NUM_DONE
value|0x27000000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_BOOT_PROGRESS_DONE
value|0x28000000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_STORM_FW_VER_DONE
value|0x29000000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_DRIVER_STATE_DONE
value|0x31000000
define|#
directive|define
name|FW_MSG_CODE_DRV_MSG_CODE_BW_UPDATE_DONE
value|0x32000000
define|#
directive|define
name|FW_MSG_CODE_DRV_MSG_CODE_MTU_SIZE_DONE
value|0x33000000
define|#
directive|define
name|FW_MSG_CODE_RESOURCE_ALLOC_OK
value|0x34000000
define|#
directive|define
name|FW_MSG_CODE_RESOURCE_ALLOC_UNKNOWN
value|0x35000000
define|#
directive|define
name|FW_MSG_CODE_RESOURCE_ALLOC_DEPRECATED
value|0x36000000
define|#
directive|define
name|FW_MSG_CODE_RESOURCE_ALLOC_GEN_ERR
value|0x37000000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_WOL_DONE
value|0x38000000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_ESWITCH_MODE_DONE
value|0x39000000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_ERR
value|0x3a010000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_PARAM_ERR
value|0x3a020000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_NOT_ALLOWED
value|0x3a030000
define|#
directive|define
name|FW_MSG_CODE_S_TAG_UPDATE_ACK_DONE
value|0x3b000000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_FCOE_CVID_DONE
value|0x3c000000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_FCOE_FABRIC_NAME_DONE
value|0x3d000000
define|#
directive|define
name|FW_MSG_CODE_UPDATE_BOOT_CFG_DONE
value|0x3e000000
define|#
directive|define
name|FW_MSG_CODE_RESET_TO_DEFAULT_ACK
value|0x3f000000
define|#
directive|define
name|FW_MSG_CODE_OV_GET_CURR_CFG_DONE
value|0x40000000
define|#
directive|define
name|FW_MSG_CODE_NIG_DRAIN_DONE
value|0x30000000
define|#
directive|define
name|FW_MSG_CODE_VF_DISABLED_DONE
value|0xb0000000
define|#
directive|define
name|FW_MSG_CODE_DRV_CFG_VF_MSIX_DONE
value|0xb0010000
define|#
directive|define
name|FW_MSG_CODE_FLR_ACK
value|0x02000000
define|#
directive|define
name|FW_MSG_CODE_FLR_NACK
value|0x02100000
define|#
directive|define
name|FW_MSG_CODE_SET_DRIVER_DONE
value|0x02200000
define|#
directive|define
name|FW_MSG_CODE_SET_VMAC_SUCCESS
value|0x02300000
define|#
directive|define
name|FW_MSG_CODE_SET_VMAC_FAIL
value|0x02400000
define|#
directive|define
name|FW_MSG_CODE_NVM_OK
value|0x00010000
define|#
directive|define
name|FW_MSG_CODE_NVM_INVALID_MODE
value|0x00020000
define|#
directive|define
name|FW_MSG_CODE_NVM_PREV_CMD_WAS_NOT_FINISHED
value|0x00030000
define|#
directive|define
name|FW_MSG_CODE_NVM_FAILED_TO_ALLOCATE_PAGE
value|0x00040000
define|#
directive|define
name|FW_MSG_CODE_NVM_INVALID_DIR_FOUND
value|0x00050000
define|#
directive|define
name|FW_MSG_CODE_NVM_PAGE_NOT_FOUND
value|0x00060000
define|#
directive|define
name|FW_MSG_CODE_NVM_FAILED_PARSING_BNDLE_HEADER
value|0x00070000
define|#
directive|define
name|FW_MSG_CODE_NVM_FAILED_PARSING_IMAGE_HEADER
value|0x00080000
define|#
directive|define
name|FW_MSG_CODE_NVM_PARSING_OUT_OF_SYNC
value|0x00090000
define|#
directive|define
name|FW_MSG_CODE_NVM_FAILED_UPDATING_DIR
value|0x000a0000
define|#
directive|define
name|FW_MSG_CODE_NVM_FAILED_TO_FREE_PAGE
value|0x000b0000
define|#
directive|define
name|FW_MSG_CODE_NVM_FILE_NOT_FOUND
value|0x000c0000
define|#
directive|define
name|FW_MSG_CODE_NVM_OPERATION_FAILED
value|0x000d0000
define|#
directive|define
name|FW_MSG_CODE_NVM_FAILED_UNALIGNED
value|0x000e0000
define|#
directive|define
name|FW_MSG_CODE_NVM_BAD_OFFSET
value|0x000f0000
define|#
directive|define
name|FW_MSG_CODE_NVM_BAD_SIGNATURE
value|0x00100000
define|#
directive|define
name|FW_MSG_CODE_NVM_FILE_READ_ONLY
value|0x00200000
define|#
directive|define
name|FW_MSG_CODE_NVM_UNKNOWN_FILE
value|0x00300000
define|#
directive|define
name|FW_MSG_CODE_NVM_PUT_FILE_FINISH_OK
value|0x00400000
define|#
directive|define
name|FW_MSG_CODE_MCP_RESET_REJECT
value|0x00600000
comment|/* MFW reject "mcp reset" command if one of the drivers is up */
define|#
directive|define
name|FW_MSG_CODE_NVM_FAILED_CALC_HASH
value|0x00310000
define|#
directive|define
name|FW_MSG_CODE_NVM_PUBLIC_KEY_MISSING
value|0x00320000
define|#
directive|define
name|FW_MSG_CODE_NVM_INVALID_PUBLIC_KEY
value|0x00330000
define|#
directive|define
name|FW_MSG_CODE_PHY_OK
value|0x00110000
define|#
directive|define
name|FW_MSG_CODE_PHY_ERROR
value|0x00120000
define|#
directive|define
name|FW_MSG_CODE_SET_SECURE_MODE_ERROR
value|0x00130000
define|#
directive|define
name|FW_MSG_CODE_SET_SECURE_MODE_OK
value|0x00140000
define|#
directive|define
name|FW_MSG_MODE_PHY_PRIVILEGE_ERROR
value|0x00150000
define|#
directive|define
name|FW_MSG_CODE_OK
value|0x00160000
define|#
directive|define
name|FW_MSG_CODE_LED_MODE_INVALID
value|0x00170000
define|#
directive|define
name|FW_MSG_CODE_PHY_DIAG_OK
value|0x00160000
define|#
directive|define
name|FW_MSG_CODE_PHY_DIAG_ERROR
value|0x00170000
define|#
directive|define
name|FW_MSG_CODE_INIT_HW_FAILED_TO_ALLOCATE_PAGE
value|0x00040000
define|#
directive|define
name|FW_MSG_CODE_INIT_HW_FAILED_BAD_STATE
value|0x00170000
define|#
directive|define
name|FW_MSG_CODE_INIT_HW_FAILED_TO_SET_WINDOW
value|0x000d0000
define|#
directive|define
name|FW_MSG_CODE_INIT_HW_FAILED_NO_IMAGE
value|0x000c0000
define|#
directive|define
name|FW_MSG_CODE_INIT_HW_FAILED_VERSION_MISMATCH
value|0x00100000
define|#
directive|define
name|FW_MSG_CODE_TRANSCEIVER_DIAG_OK
value|0x00160000
define|#
directive|define
name|FW_MSG_CODE_TRANSCEIVER_DIAG_ERROR
value|0x00170000
define|#
directive|define
name|FW_MSG_CODE_TRANSCEIVER_NOT_PRESENT
value|0x00020000
define|#
directive|define
name|FW_MSG_CODE_TRANSCEIVER_BAD_BUFFER_SIZE
value|0x000f0000
define|#
directive|define
name|FW_MSG_CODE_GPIO_OK
value|0x00160000
define|#
directive|define
name|FW_MSG_CODE_GPIO_DIRECTION_ERR
value|0x00170000
define|#
directive|define
name|FW_MSG_CODE_GPIO_CTRL_ERR
value|0x00020000
define|#
directive|define
name|FW_MSG_CODE_GPIO_INVALID
value|0x000f0000
define|#
directive|define
name|FW_MSG_CODE_GPIO_INVALID_VALUE
value|0x00050000
define|#
directive|define
name|FW_MSG_CODE_BIST_TEST_INVALID
value|0x000f0000
define|#
directive|define
name|FW_MSG_CODE_EXTPHY_INVALID_IMAGE_HEADER
value|0x00700000
define|#
directive|define
name|FW_MSG_CODE_EXTPHY_INVALID_PHY_TYPE
value|0x00710000
define|#
directive|define
name|FW_MSG_CODE_EXTPHY_OPERATION_FAILED
value|0x00720000
define|#
directive|define
name|FW_MSG_CODE_EXTPHY_NO_PHY_DETECTED
value|0x00730000
define|#
directive|define
name|FW_MSG_CODE_RECOVERY_MODE
value|0x00740000
comment|/* mdump related response codes */
define|#
directive|define
name|FW_MSG_CODE_MDUMP_NO_IMAGE_FOUND
value|0x00010000
define|#
directive|define
name|FW_MSG_CODE_MDUMP_ALLOC_FAILED
value|0x00020000
define|#
directive|define
name|FW_MSG_CODE_MDUMP_INVALID_CMD
value|0x00030000
define|#
directive|define
name|FW_MSG_CODE_MDUMP_IN_PROGRESS
value|0x00040000
define|#
directive|define
name|FW_MSG_CODE_MDUMP_WRITE_FAILED
value|0x00050000
define|#
directive|define
name|FW_MSG_CODE_OS_WOL_SUPPORTED
value|0x00800000
define|#
directive|define
name|FW_MSG_CODE_OS_WOL_NOT_SUPPORTED
value|0x00810000
define|#
directive|define
name|FW_MSG_CODE_WOL_READ_WRITE_OK
value|0x00820000
define|#
directive|define
name|FW_MSG_CODE_WOL_READ_WRITE_INVALID_VAL
value|0x00830000
define|#
directive|define
name|FW_MSG_CODE_WOL_READ_WRITE_INVALID_ADDR
value|0x00840000
define|#
directive|define
name|FW_MSG_CODE_WOL_READ_BUFFER_OK
value|0x00850000
define|#
directive|define
name|FW_MSG_CODE_WOL_READ_BUFFER_INVALID_VAL
value|0x00860000
define|#
directive|define
name|FW_MSG_SEQ_NUMBER_MASK
value|0x0000ffff
name|u32
name|fw_mb_param
decl_stmt|;
comment|/* Resource Allocation params - MFW version support */
define|#
directive|define
name|FW_MB_PARAM_RESOURCE_ALLOC_VERSION_MAJOR_MASK
value|0xFFFF0000
define|#
directive|define
name|FW_MB_PARAM_RESOURCE_ALLOC_VERSION_MAJOR_SHIFT
value|16
define|#
directive|define
name|FW_MB_PARAM_RESOURCE_ALLOC_VERSION_MINOR_MASK
value|0x0000FFFF
define|#
directive|define
name|FW_MB_PARAM_RESOURCE_ALLOC_VERSION_MINOR_SHIFT
value|0
comment|/* get pf rdma protocol command response */
define|#
directive|define
name|FW_MB_PARAM_GET_PF_RDMA_NONE
value|0x0
define|#
directive|define
name|FW_MB_PARAM_GET_PF_RDMA_ROCE
value|0x1
define|#
directive|define
name|FW_MB_PARAM_GET_PF_RDMA_IWARP
value|0x2
define|#
directive|define
name|FW_MB_PARAM_GET_PF_RDMA_BOTH
value|0x3
comment|/* get MFW feature support response */
define|#
directive|define
name|FW_MB_PARAM_FEATURE_SUPPORT_SMARTLINQ
value|0x00000001
comment|/* MFW supports SmartLinQ */
define|#
directive|define
name|FW_MB_PARAM_FEATURE_SUPPORT_EEE
value|0x00000002
comment|/* MFW supports EEE */
define|#
directive|define
name|FW_MB_PARAM_LOAD_DONE_DID_EFUSE_ERROR
value|(1<<0)
name|u32
name|drv_pulse_mb
decl_stmt|;
define|#
directive|define
name|DRV_PULSE_SEQ_MASK
value|0x00007fff
define|#
directive|define
name|DRV_PULSE_SYSTEM_TIME_MASK
value|0xffff0000
comment|/* 	 * The system time is in the format of 	 * (year-2001)*12*32 + month*32 + day. 	 */
define|#
directive|define
name|DRV_PULSE_ALWAYS_ALIVE
value|0x00008000
comment|/* 	 * Indicate to the firmware not to go into the 	 * OS-absent when it is not getting driver pulse. 	 * This is used for debugging as well for PXE(MBA). 	 */
name|u32
name|mcp_pulse_mb
decl_stmt|;
define|#
directive|define
name|MCP_PULSE_SEQ_MASK
value|0x00007fff
define|#
directive|define
name|MCP_PULSE_ALWAYS_ALIVE
value|0x00008000
comment|/* Indicates to the driver not to assert due to lack 	 * of MCP response */
define|#
directive|define
name|MCP_EVENT_MASK
value|0xffff0000
define|#
directive|define
name|MCP_EVENT_OTHER_DRIVER_RESET_REQ
value|0x00010000
comment|/* The union data is used by the driver to pass parameters to the scratchpad. */
name|union
name|drv_union_data
name|union_data
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* MFW - DRV MB */
end_comment

begin_comment
comment|/**********************************************************************  * Description  *   Incremental Aggregative  *   8-bit MFW counter per message  *   8-bit ack-counter per message  * Capabilities  *   Provides up to 256 aggregative message per type  *   Provides 4 message types in dword  *   Message type pointers to byte offset  *   Backward Compatibility by using sizeof for the counters.  *   No lock requires for 32bit messages  * Limitations:  * In case of messages greater than 32bit, a dedicated mechanism(e.g lock)  * is required to prevent data corruption.  **********************************************************************/
end_comment

begin_enum
enum|enum
name|MFW_DRV_MSG_TYPE
block|{
name|MFW_DRV_MSG_LINK_CHANGE
block|,
name|MFW_DRV_MSG_FLR_FW_ACK_FAILED
block|,
name|MFW_DRV_MSG_VF_DISABLED
block|,
name|MFW_DRV_MSG_LLDP_DATA_UPDATED
block|,
name|MFW_DRV_MSG_DCBX_REMOTE_MIB_UPDATED
block|,
name|MFW_DRV_MSG_DCBX_OPERATIONAL_MIB_UPDATED
block|,
name|MFW_DRV_MSG_ERROR_RECOVERY
block|,
name|MFW_DRV_MSG_BW_UPDATE
block|,
name|MFW_DRV_MSG_S_TAG_UPDATE
block|,
name|MFW_DRV_MSG_GET_LAN_STATS
block|,
name|MFW_DRV_MSG_GET_FCOE_STATS
block|,
name|MFW_DRV_MSG_GET_ISCSI_STATS
block|,
name|MFW_DRV_MSG_GET_RDMA_STATS
block|,
name|MFW_DRV_MSG_FAILURE_DETECTED
block|,
name|MFW_DRV_MSG_TRANSCEIVER_STATE_CHANGE
block|,
name|MFW_DRV_MSG_CRITICAL_ERROR_OCCURRED
block|,
name|MFW_DRV_MSG_EEE_NEGOTIATION_COMPLETE
block|,
name|MFW_DRV_MSG_GET_TLV_REQ
block|,
name|MFW_DRV_MSG_MAX
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|MFW_DRV_MSG_MAX_DWORDS
parameter_list|(
name|msgs
parameter_list|)
value|(((msgs - 1)>> 2) + 1)
end_define

begin_define
define|#
directive|define
name|MFW_DRV_MSG_DWORD
parameter_list|(
name|msg_id
parameter_list|)
value|(msg_id>> 2)
end_define

begin_define
define|#
directive|define
name|MFW_DRV_MSG_OFFSET
parameter_list|(
name|msg_id
parameter_list|)
value|((msg_id& 0x3)<< 3)
end_define

begin_define
define|#
directive|define
name|MFW_DRV_MSG_MASK
parameter_list|(
name|msg_id
parameter_list|)
value|(0xff<< MFW_DRV_MSG_OFFSET(msg_id))
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|BIG_ENDIAN
end_ifdef

begin_comment
comment|/* Like MFW */
end_comment

begin_define
define|#
directive|define
name|DRV_ACK_MSG
parameter_list|(
name|msg_p
parameter_list|,
name|msg_id
parameter_list|)
value|(u8)((u8*)msg_p)[msg_id]++;
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|DRV_ACK_MSG
parameter_list|(
name|msg_p
parameter_list|,
name|msg_id
parameter_list|)
value|(u8)((u8*)msg_p)[((msg_id& ~3) | ((~msg_id)& 3))]++;
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|MFW_DRV_UPDATE
parameter_list|(
name|shmem_func
parameter_list|,
name|msg_id
parameter_list|)
value|(u8)((u8*)(MFW_MB_P(shmem_func)->msg))[msg_id]++;
end_define

begin_struct
struct|struct
name|public_mfw_mb
block|{
name|u32
name|sup_msgs
decl_stmt|;
comment|/* Assigend with MFW_DRV_MSG_MAX */
name|u32
name|msg
index|[
name|MFW_DRV_MSG_MAX_DWORDS
argument_list|(
name|MFW_DRV_MSG_MAX
argument_list|)
index|]
decl_stmt|;
comment|/* Incremented by the MFW */
name|u32
name|ack
index|[
name|MFW_DRV_MSG_MAX_DWORDS
argument_list|(
name|MFW_DRV_MSG_MAX
argument_list|)
index|]
decl_stmt|;
comment|/* Incremented by the driver */
block|}
struct|;
end_struct

begin_comment
comment|/**************************************/
end_comment

begin_comment
comment|/*                                    */
end_comment

begin_comment
comment|/*     P U B L I C       D A T A      */
end_comment

begin_comment
comment|/*                                    */
end_comment

begin_comment
comment|/**************************************/
end_comment

begin_enum
enum|enum
name|public_sections
block|{
name|PUBLIC_DRV_MB
block|,
comment|/* Points to the first drv_mb of path0 */
name|PUBLIC_MFW_MB
block|,
comment|/* Points to the first mfw_mb of path0 */
name|PUBLIC_GLOBAL
block|,
name|PUBLIC_PATH
block|,
name|PUBLIC_PORT
block|,
name|PUBLIC_FUNC
block|,
name|PUBLIC_MAX_SECTIONS
block|}
enum|;
end_enum

begin_struct
struct|struct
name|drv_ver_info_stc
block|{
name|u32
name|ver
decl_stmt|;
name|u8
name|name
index|[
literal|32
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Runtime data needs about 1/2K. We use 2K to be on the safe side.  * Please make sure data does not exceed this size.  */
end_comment

begin_define
define|#
directive|define
name|NUM_RUNTIME_DWORDS
value|16
end_define

begin_struct
struct|struct
name|drv_init_hw_stc
block|{
name|u32
name|init_hw_bitmask
index|[
name|NUM_RUNTIME_DWORDS
index|]
decl_stmt|;
name|u32
name|init_hw_data
index|[
name|NUM_RUNTIME_DWORDS
operator|*
literal|32
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mcp_public_data
block|{
comment|/* The sections fields is an array */
name|u32
name|num_sections
decl_stmt|;
name|offsize_t
name|sections
index|[
name|PUBLIC_MAX_SECTIONS
index|]
decl_stmt|;
name|struct
name|public_drv_mb
name|drv_mb
index|[
name|MCP_GLOB_FUNC_MAX
index|]
decl_stmt|;
name|struct
name|public_mfw_mb
name|mfw_mb
index|[
name|MCP_GLOB_FUNC_MAX
index|]
decl_stmt|;
name|struct
name|public_global
name|global
decl_stmt|;
name|struct
name|public_path
name|path
index|[
name|MCP_GLOB_PATH_MAX
index|]
decl_stmt|;
name|struct
name|public_port
name|port
index|[
name|MCP_GLOB_PORT_MAX
index|]
decl_stmt|;
name|struct
name|public_func
name|func
index|[
name|MCP_GLOB_FUNC_MAX
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|I2C_TRANSCEIVER_ADDR
value|0xa0
end_define

begin_define
define|#
directive|define
name|MAX_I2C_TRANSACTION_SIZE
value|16
end_define

begin_define
define|#
directive|define
name|MAX_I2C_TRANSCEIVER_PAGE_SIZE
value|256
end_define

begin_comment
comment|/* OCBB definitions */
end_comment

begin_enum
enum|enum
name|tlvs
block|{
comment|/* Category 1: Device Properties */
name|DRV_TLV_CLP_STR
block|,
name|DRV_TLV_CLP_STR_CTD
block|,
comment|/* Category 6: Device Configuration */
name|DRV_TLV_SCSI_TO
block|,
name|DRV_TLV_R_T_TOV
block|,
name|DRV_TLV_R_A_TOV
block|,
name|DRV_TLV_E_D_TOV
block|,
name|DRV_TLV_CR_TOV
block|,
name|DRV_TLV_BOOT_TYPE
block|,
comment|/* Category 8: Port Configuration */
name|DRV_TLV_NPIV_ENABLED
block|,
comment|/* Category 10: Function Configuration */
name|DRV_TLV_FEATURE_FLAGS
block|,
name|DRV_TLV_LOCAL_ADMIN_ADDR
block|,
name|DRV_TLV_ADDITIONAL_MAC_ADDR_1
block|,
name|DRV_TLV_ADDITIONAL_MAC_ADDR_2
block|,
name|DRV_TLV_LSO_MAX_OFFLOAD_SIZE
block|,
name|DRV_TLV_LSO_MIN_SEGMENT_COUNT
block|,
name|DRV_TLV_PROMISCUOUS_MODE
block|,
name|DRV_TLV_TX_DESCRIPTORS_QUEUE_SIZE
block|,
name|DRV_TLV_RX_DESCRIPTORS_QUEUE_SIZE
block|,
name|DRV_TLV_NUM_OF_NET_QUEUE_VMQ_CFG
block|,
name|DRV_TLV_FLEX_NIC_OUTER_VLAN_ID
block|,
name|DRV_TLV_OS_DRIVER_STATES
block|,
name|DRV_TLV_PXE_BOOT_PROGRESS
block|,
comment|/* Category 12: FC/FCoE Configuration */
name|DRV_TLV_NPIV_STATE
block|,
name|DRV_TLV_NUM_OF_NPIV_IDS
block|,
name|DRV_TLV_SWITCH_NAME
block|,
name|DRV_TLV_SWITCH_PORT_NUM
block|,
name|DRV_TLV_SWITCH_PORT_ID
block|,
name|DRV_TLV_VENDOR_NAME
block|,
name|DRV_TLV_SWITCH_MODEL
block|,
name|DRV_TLV_SWITCH_FW_VER
block|,
name|DRV_TLV_QOS_PRIORITY_PER_802_1P
block|,
name|DRV_TLV_PORT_ALIAS
block|,
name|DRV_TLV_PORT_STATE
block|,
name|DRV_TLV_FIP_TX_DESCRIPTORS_QUEUE_SIZE
block|,
name|DRV_TLV_FCOE_RX_DESCRIPTORS_QUEUE_SIZE
block|,
name|DRV_TLV_LINK_FAILURE_COUNT
block|,
name|DRV_TLV_FCOE_BOOT_PROGRESS
block|,
comment|/* Category 13: iSCSI Configuration */
name|DRV_TLV_TARGET_LLMNR_ENABLED
block|,
name|DRV_TLV_HEADER_DIGEST_FLAG_ENABLED
block|,
name|DRV_TLV_DATA_DIGEST_FLAG_ENABLED
block|,
name|DRV_TLV_AUTHENTICATION_METHOD
block|,
name|DRV_TLV_ISCSI_BOOT_TARGET_PORTAL
block|,
name|DRV_TLV_MAX_FRAME_SIZE
block|,
name|DRV_TLV_PDU_TX_DESCRIPTORS_QUEUE_SIZE
block|,
name|DRV_TLV_PDU_RX_DESCRIPTORS_QUEUE_SIZE
block|,
name|DRV_TLV_ISCSI_BOOT_PROGRESS
block|,
comment|/* Category 20: Device Data */
name|DRV_TLV_PCIE_BUS_RX_UTILIZATION
block|,
name|DRV_TLV_PCIE_BUS_TX_UTILIZATION
block|,
name|DRV_TLV_DEVICE_CPU_CORES_UTILIZATION
block|,
name|DRV_TLV_LAST_VALID_DCC_TLV_RECEIVED
block|,
name|DRV_TLV_NCSI_RX_BYTES_RECEIVED
block|,
name|DRV_TLV_NCSI_TX_BYTES_SENT
block|,
comment|/* Category 22: Base Port Data */
name|DRV_TLV_RX_DISCARDS
block|,
name|DRV_TLV_RX_ERRORS
block|,
name|DRV_TLV_TX_ERRORS
block|,
name|DRV_TLV_TX_DISCARDS
block|,
name|DRV_TLV_RX_FRAMES_RECEIVED
block|,
name|DRV_TLV_TX_FRAMES_SENT
block|,
comment|/* Category 23: FC/FCoE Port Data */
name|DRV_TLV_RX_BROADCAST_PACKETS
block|,
name|DRV_TLV_TX_BROADCAST_PACKETS
block|,
comment|/* Category 28: Base Function Data */
name|DRV_TLV_NUM_OFFLOADED_CONNECTIONS_TCP_IPV4
block|,
name|DRV_TLV_NUM_OFFLOADED_CONNECTIONS_TCP_IPV6
block|,
name|DRV_TLV_TX_DESCRIPTOR_QUEUE_AVG_DEPTH
block|,
name|DRV_TLV_RX_DESCRIPTORS_QUEUE_AVG_DEPTH
block|,
name|DRV_TLV_PF_RX_FRAMES_RECEIVED
block|,
name|DRV_TLV_RX_BYTES_RECEIVED
block|,
name|DRV_TLV_PF_TX_FRAMES_SENT
block|,
name|DRV_TLV_TX_BYTES_SENT
block|,
name|DRV_TLV_IOV_OFFLOAD
block|,
name|DRV_TLV_PCI_ERRORS_CAP_ID
block|,
name|DRV_TLV_UNCORRECTABLE_ERROR_STATUS
block|,
name|DRV_TLV_UNCORRECTABLE_ERROR_MASK
block|,
name|DRV_TLV_CORRECTABLE_ERROR_STATUS
block|,
name|DRV_TLV_CORRECTABLE_ERROR_MASK
block|,
name|DRV_TLV_PCI_ERRORS_AECC_REGISTER
block|,
name|DRV_TLV_TX_QUEUES_EMPTY
block|,
name|DRV_TLV_RX_QUEUES_EMPTY
block|,
name|DRV_TLV_TX_QUEUES_FULL
block|,
name|DRV_TLV_RX_QUEUES_FULL
block|,
comment|/* Category 29: FC/FCoE Function Data */
name|DRV_TLV_FCOE_TX_DESCRIPTOR_QUEUE_AVG_DEPTH
block|,
name|DRV_TLV_FCOE_RX_DESCRIPTORS_QUEUE_AVG_DEPTH
block|,
name|DRV_TLV_FCOE_RX_FRAMES_RECEIVED
block|,
name|DRV_TLV_FCOE_RX_BYTES_RECEIVED
block|,
name|DRV_TLV_FCOE_TX_FRAMES_SENT
block|,
name|DRV_TLV_FCOE_TX_BYTES_SENT
block|,
name|DRV_TLV_CRC_ERROR_COUNT
block|,
name|DRV_TLV_CRC_ERROR_1_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_CRC_ERROR_1_TIMESTAMP
block|,
name|DRV_TLV_CRC_ERROR_2_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_CRC_ERROR_2_TIMESTAMP
block|,
name|DRV_TLV_CRC_ERROR_3_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_CRC_ERROR_3_TIMESTAMP
block|,
name|DRV_TLV_CRC_ERROR_4_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_CRC_ERROR_4_TIMESTAMP
block|,
name|DRV_TLV_CRC_ERROR_5_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_CRC_ERROR_5_TIMESTAMP
block|,
name|DRV_TLV_LOSS_OF_SYNC_ERROR_COUNT
block|,
name|DRV_TLV_LOSS_OF_SIGNAL_ERRORS
block|,
name|DRV_TLV_PRIMITIVE_SEQUENCE_PROTOCOL_ERROR_COUNT
block|,
name|DRV_TLV_DISPARITY_ERROR_COUNT
block|,
name|DRV_TLV_CODE_VIOLATION_ERROR_COUNT
block|,
name|DRV_TLV_LAST_FLOGI_ISSUED_COMMON_PARAMETERS_WORD_1
block|,
name|DRV_TLV_LAST_FLOGI_ISSUED_COMMON_PARAMETERS_WORD_2
block|,
name|DRV_TLV_LAST_FLOGI_ISSUED_COMMON_PARAMETERS_WORD_3
block|,
name|DRV_TLV_LAST_FLOGI_ISSUED_COMMON_PARAMETERS_WORD_4
block|,
name|DRV_TLV_LAST_FLOGI_TIMESTAMP
block|,
name|DRV_TLV_LAST_FLOGI_ACC_COMMON_PARAMETERS_WORD_1
block|,
name|DRV_TLV_LAST_FLOGI_ACC_COMMON_PARAMETERS_WORD_2
block|,
name|DRV_TLV_LAST_FLOGI_ACC_COMMON_PARAMETERS_WORD_3
block|,
name|DRV_TLV_LAST_FLOGI_ACC_COMMON_PARAMETERS_WORD_4
block|,
name|DRV_TLV_LAST_FLOGI_ACC_TIMESTAMP
block|,
name|DRV_TLV_LAST_FLOGI_RJT
block|,
name|DRV_TLV_LAST_FLOGI_RJT_TIMESTAMP
block|,
name|DRV_TLV_FDISCS_SENT_COUNT
block|,
name|DRV_TLV_FDISC_ACCS_RECEIVED
block|,
name|DRV_TLV_FDISC_RJTS_RECEIVED
block|,
name|DRV_TLV_PLOGI_SENT_COUNT
block|,
name|DRV_TLV_PLOGI_ACCS_RECEIVED
block|,
name|DRV_TLV_PLOGI_RJTS_RECEIVED
block|,
name|DRV_TLV_PLOGI_1_SENT_DESTINATION_FC_ID
block|,
name|DRV_TLV_PLOGI_1_TIMESTAMP
block|,
name|DRV_TLV_PLOGI_2_SENT_DESTINATION_FC_ID
block|,
name|DRV_TLV_PLOGI_2_TIMESTAMP
block|,
name|DRV_TLV_PLOGI_3_SENT_DESTINATION_FC_ID
block|,
name|DRV_TLV_PLOGI_3_TIMESTAMP
block|,
name|DRV_TLV_PLOGI_4_SENT_DESTINATION_FC_ID
block|,
name|DRV_TLV_PLOGI_4_TIMESTAMP
block|,
name|DRV_TLV_PLOGI_5_SENT_DESTINATION_FC_ID
block|,
name|DRV_TLV_PLOGI_5_TIMESTAMP
block|,
name|DRV_TLV_PLOGI_1_ACC_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_PLOGI_1_ACC_TIMESTAMP
block|,
name|DRV_TLV_PLOGI_2_ACC_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_PLOGI_2_ACC_TIMESTAMP
block|,
name|DRV_TLV_PLOGI_3_ACC_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_PLOGI_3_ACC_TIMESTAMP
block|,
name|DRV_TLV_PLOGI_4_ACC_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_PLOGI_4_ACC_TIMESTAMP
block|,
name|DRV_TLV_PLOGI_5_ACC_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_PLOGI_5_ACC_TIMESTAMP
block|,
name|DRV_TLV_LOGOS_ISSUED
block|,
name|DRV_TLV_LOGO_ACCS_RECEIVED
block|,
name|DRV_TLV_LOGO_RJTS_RECEIVED
block|,
name|DRV_TLV_LOGO_1_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_LOGO_1_TIMESTAMP
block|,
name|DRV_TLV_LOGO_2_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_LOGO_2_TIMESTAMP
block|,
name|DRV_TLV_LOGO_3_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_LOGO_3_TIMESTAMP
block|,
name|DRV_TLV_LOGO_4_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_LOGO_4_TIMESTAMP
block|,
name|DRV_TLV_LOGO_5_RECEIVED_SOURCE_FC_ID
block|,
name|DRV_TLV_LOGO_5_TIMESTAMP
block|,
name|DRV_TLV_LOGOS_RECEIVED
block|,
name|DRV_TLV_ACCS_ISSUED
block|,
name|DRV_TLV_PRLIS_ISSUED
block|,
name|DRV_TLV_ACCS_RECEIVED
block|,
name|DRV_TLV_ABTS_SENT_COUNT
block|,
name|DRV_TLV_ABTS_ACCS_RECEIVED
block|,
name|DRV_TLV_ABTS_RJTS_RECEIVED
block|,
name|DRV_TLV_ABTS_1_SENT_DESTINATION_FC_ID
block|,
name|DRV_TLV_ABTS_1_TIMESTAMP
block|,
name|DRV_TLV_ABTS_2_SENT_DESTINATION_FC_ID
block|,
name|DRV_TLV_ABTS_2_TIMESTAMP
block|,
name|DRV_TLV_ABTS_3_SENT_DESTINATION_FC_ID
block|,
name|DRV_TLV_ABTS_3_TIMESTAMP
block|,
name|DRV_TLV_ABTS_4_SENT_DESTINATION_FC_ID
block|,
name|DRV_TLV_ABTS_4_TIMESTAMP
block|,
name|DRV_TLV_ABTS_5_SENT_DESTINATION_FC_ID
block|,
name|DRV_TLV_ABTS_5_TIMESTAMP
block|,
name|DRV_TLV_RSCNS_RECEIVED
block|,
name|DRV_TLV_LAST_RSCN_RECEIVED_N_PORT_1
block|,
name|DRV_TLV_LAST_RSCN_RECEIVED_N_PORT_2
block|,
name|DRV_TLV_LAST_RSCN_RECEIVED_N_PORT_3
block|,
name|DRV_TLV_LAST_RSCN_RECEIVED_N_PORT_4
block|,
name|DRV_TLV_LUN_RESETS_ISSUED
block|,
name|DRV_TLV_ABORT_TASK_SETS_ISSUED
block|,
name|DRV_TLV_TPRLOS_SENT
block|,
name|DRV_TLV_NOS_SENT_COUNT
block|,
name|DRV_TLV_NOS_RECEIVED_COUNT
block|,
name|DRV_TLV_OLS_COUNT
block|,
name|DRV_TLV_LR_COUNT
block|,
name|DRV_TLV_LRR_COUNT
block|,
name|DRV_TLV_LIP_SENT_COUNT
block|,
name|DRV_TLV_LIP_RECEIVED_COUNT
block|,
name|DRV_TLV_EOFA_COUNT
block|,
name|DRV_TLV_EOFNI_COUNT
block|,
name|DRV_TLV_SCSI_STATUS_CHECK_CONDITION_COUNT
block|,
name|DRV_TLV_SCSI_STATUS_CONDITION_MET_COUNT
block|,
name|DRV_TLV_SCSI_STATUS_BUSY_COUNT
block|,
name|DRV_TLV_SCSI_STATUS_INTERMEDIATE_COUNT
block|,
name|DRV_TLV_SCSI_STATUS_INTERMEDIATE_CONDITION_MET_COUNT
block|,
name|DRV_TLV_SCSI_STATUS_RESERVATION_CONFLICT_COUNT
block|,
name|DRV_TLV_SCSI_STATUS_TASK_SET_FULL_COUNT
block|,
name|DRV_TLV_SCSI_STATUS_ACA_ACTIVE_COUNT
block|,
name|DRV_TLV_SCSI_STATUS_TASK_ABORTED_COUNT
block|,
name|DRV_TLV_SCSI_CHECK_CONDITION_1_RECEIVED_SK_ASC_ASCQ
block|,
name|DRV_TLV_SCSI_CHECK_1_TIMESTAMP
block|,
name|DRV_TLV_SCSI_CHECK_CONDITION_2_RECEIVED_SK_ASC_ASCQ
block|,
name|DRV_TLV_SCSI_CHECK_2_TIMESTAMP
block|,
name|DRV_TLV_SCSI_CHECK_CONDITION_3_RECEIVED_SK_ASC_ASCQ
block|,
name|DRV_TLV_SCSI_CHECK_3_TIMESTAMP
block|,
name|DRV_TLV_SCSI_CHECK_CONDITION_4_RECEIVED_SK_ASC_ASCQ
block|,
name|DRV_TLV_SCSI_CHECK_4_TIMESTAMP
block|,
name|DRV_TLV_SCSI_CHECK_CONDITION_5_RECEIVED_SK_ASC_ASCQ
block|,
name|DRV_TLV_SCSI_CHECK_5_TIMESTAMP
block|,
comment|/* Category 30: iSCSI Function Data */
name|DRV_TLV_PDU_TX_DESCRIPTOR_QUEUE_AVG_DEPTH
block|,
name|DRV_TLV_PDU_RX_DESCRIPTORS_QUEUE_AVG_DEPTH
block|,
name|DRV_TLV_ISCSI_PDU_RX_FRAMES_RECEIVED
block|,
name|DRV_TLV_ISCSI_PDU_RX_BYTES_RECEIVED
block|,
name|DRV_TLV_ISCSI_PDU_TX_FRAMES_SENT
block|,
name|DRV_TLV_ISCSI_PDU_TX_BYTES_SENT
block|}
enum|;
end_enum

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* MCP_PUBLIC_H */
end_comment

end_unit

