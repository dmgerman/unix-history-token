begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2017-2018 Cavium, Inc.   * All rights reserved.  *  *  Redistribution and use in source and binary forms, with or without  *  modification, are permitted provided that the following conditions  *  are met:  *  *  1. Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  2. Redistributions in binary form must reproduce the above copyright  *     notice, this list of conditions and the following disclaimer in the  *     documentation and/or other materials provided with the distribution.  *  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  *  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE  *  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  *  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  *  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  *  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  *  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  *  POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__ECORE_ISCSI_API_H__
end_ifndef

begin_define
define|#
directive|define
name|__ECORE_ISCSI_API_H__
end_define

begin_typedef
typedef|typedef
name|enum
name|_ecore_status_t
function_decl|(
modifier|*
name|iscsi_event_cb_t
function_decl|)
parameter_list|(
name|void
modifier|*
name|context
parameter_list|,
name|u8
name|fw_event_code
parameter_list|,
name|void
modifier|*
name|fw_handle
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|ecore_iscsi_conn
block|{
name|osal_list_entry_t
name|list_entry
decl_stmt|;
name|bool
name|free_on_delete
decl_stmt|;
name|u16
name|conn_id
decl_stmt|;
name|u32
name|icid
decl_stmt|;
name|u32
name|fw_cid
decl_stmt|;
name|u8
name|layer_code
decl_stmt|;
name|u8
name|offl_flags
decl_stmt|;
name|u8
name|connect_mode
decl_stmt|;
name|u32
name|initial_ack
decl_stmt|;
name|dma_addr_t
name|sq_pbl_addr
decl_stmt|;
name|struct
name|ecore_chain
name|r2tq
decl_stmt|;
name|struct
name|ecore_chain
name|xhq
decl_stmt|;
name|struct
name|ecore_chain
name|uhq
decl_stmt|;
name|struct
name|tcp_upload_params
modifier|*
name|tcp_upload_params_virt_addr
decl_stmt|;
name|dma_addr_t
name|tcp_upload_params_phys_addr
decl_stmt|;
name|struct
name|scsi_terminate_extra_params
modifier|*
name|queue_cnts_virt_addr
decl_stmt|;
name|dma_addr_t
name|queue_cnts_phys_addr
decl_stmt|;
name|dma_addr_t
name|syn_phy_addr
decl_stmt|;
name|u16
name|syn_ip_payload_length
decl_stmt|;
name|u8
name|local_mac
index|[
literal|6
index|]
decl_stmt|;
name|u8
name|remote_mac
index|[
literal|6
index|]
decl_stmt|;
name|u16
name|vlan_id
decl_stmt|;
name|u8
name|tcp_flags
decl_stmt|;
name|u8
name|ip_version
decl_stmt|;
name|u32
name|remote_ip
index|[
literal|4
index|]
decl_stmt|;
name|u32
name|local_ip
index|[
literal|4
index|]
decl_stmt|;
name|u8
name|ka_max_probe_cnt
decl_stmt|;
name|u8
name|dup_ack_theshold
decl_stmt|;
name|u32
name|rcv_next
decl_stmt|;
name|u32
name|snd_una
decl_stmt|;
name|u32
name|snd_next
decl_stmt|;
name|u32
name|snd_max
decl_stmt|;
name|u32
name|snd_wnd
decl_stmt|;
name|u32
name|rcv_wnd
decl_stmt|;
name|u32
name|snd_wl1
decl_stmt|;
name|u32
name|cwnd
decl_stmt|;
name|u32
name|ss_thresh
decl_stmt|;
name|u16
name|srtt
decl_stmt|;
name|u16
name|rtt_var
decl_stmt|;
name|u32
name|ts_recent
decl_stmt|;
name|u32
name|ts_recent_age
decl_stmt|;
name|u32
name|total_rt
decl_stmt|;
name|u32
name|ka_timeout_delta
decl_stmt|;
name|u32
name|rt_timeout_delta
decl_stmt|;
name|u8
name|dup_ack_cnt
decl_stmt|;
name|u8
name|snd_wnd_probe_cnt
decl_stmt|;
name|u8
name|ka_probe_cnt
decl_stmt|;
name|u8
name|rt_cnt
decl_stmt|;
name|u32
name|flow_label
decl_stmt|;
name|u32
name|ka_timeout
decl_stmt|;
name|u32
name|ka_interval
decl_stmt|;
name|u32
name|max_rt_time
decl_stmt|;
name|u32
name|initial_rcv_wnd
decl_stmt|;
name|u8
name|ttl
decl_stmt|;
name|u8
name|tos_or_tc
decl_stmt|;
name|u16
name|remote_port
decl_stmt|;
name|u16
name|local_port
decl_stmt|;
name|u16
name|mss
decl_stmt|;
name|u8
name|snd_wnd_scale
decl_stmt|;
name|u8
name|rcv_wnd_scale
decl_stmt|;
name|u16
name|da_timeout_value
decl_stmt|;
name|u8
name|ack_frequency
decl_stmt|;
name|u8
name|update_flag
decl_stmt|;
define|#
directive|define
name|ECORE_ISCSI_CONN_HD_EN
value|0x01
define|#
directive|define
name|ECORE_ISCSI_CONN_DD_EN
value|0x02
define|#
directive|define
name|ECORE_ISCSI_CONN_INITIAL_R2T
value|0x04
define|#
directive|define
name|ECORE_ISCSI_CONN_IMMEDIATE_DATA
value|0x08
name|u8
name|default_cq
decl_stmt|;
name|u32
name|max_seq_size
decl_stmt|;
name|u32
name|max_recv_pdu_length
decl_stmt|;
name|u32
name|max_send_pdu_length
decl_stmt|;
name|u32
name|first_seq_length
decl_stmt|;
name|u32
name|exp_stat_sn
decl_stmt|;
name|u32
name|stat_sn
decl_stmt|;
name|u16
name|physical_q0
decl_stmt|;
name|u16
name|physical_q1
decl_stmt|;
name|u8
name|abortive_dsconnect
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecore_iscsi_stats
block|{
name|u64
name|iscsi_rx_bytes_cnt
decl_stmt|;
name|u64
name|iscsi_rx_packet_cnt
decl_stmt|;
name|u64
name|iscsi_rx_new_ooo_isle_events_cnt
decl_stmt|;
name|u32
name|iscsi_cmdq_threshold_cnt
decl_stmt|;
name|u32
name|iscsi_rq_threshold_cnt
decl_stmt|;
name|u32
name|iscsi_immq_threshold_cnt
decl_stmt|;
name|u64
name|iscsi_rx_dropped_pdus_task_not_valid
decl_stmt|;
name|u64
name|iscsi_rx_data_pdu_cnt
decl_stmt|;
name|u64
name|iscsi_rx_r2t_pdu_cnt
decl_stmt|;
name|u64
name|iscsi_rx_total_pdu_cnt
decl_stmt|;
name|u64
name|iscsi_tx_go_to_slow_start_event_cnt
decl_stmt|;
name|u64
name|iscsi_tx_fast_retransmit_event_cnt
decl_stmt|;
name|u64
name|iscsi_tx_data_pdu_cnt
decl_stmt|;
name|u64
name|iscsi_tx_r2t_pdu_cnt
decl_stmt|;
name|u64
name|iscsi_tx_total_pdu_cnt
decl_stmt|;
name|u64
name|iscsi_tx_bytes_cnt
decl_stmt|;
name|u64
name|iscsi_tx_packet_cnt
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/**  * @brief ecore_iscsi_acquire_connection - allocate resources,   *        provides connecion handle (CID)as out parameter.  *  * @param p_path  * @param p_conn  partially initialized incoming container of   *                iSCSI connection data  * @return enum _ecore_status_t  */
end_comment

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_iscsi_acquire_connection
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|struct
name|ecore_iscsi_conn
modifier|*
name|p_in_conn
parameter_list|,
name|struct
name|ecore_iscsi_conn
modifier|*
modifier|*
name|p_out_conn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|OSAL_IOMEM
modifier|*
name|ecore_iscsi_get_db_addr
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|u32
name|cid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|OSAL_IOMEM
modifier|*
name|ecore_iscsi_get_global_cmdq_cons
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|u8
name|relative_q_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|OSAL_IOMEM
modifier|*
name|ecore_iscsi_get_primary_bdq_prod
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|u8
name|bdq_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|OSAL_IOMEM
modifier|*
name|ecore_iscsi_get_secondary_bdq_prod
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|u8
name|bdq_id
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**  * @brief ecore_iscsi_offload_connection - offload previously   *        allocated iSCSI connection  *  * @param p_path   * @param p_conn  container of iSCSI connection data  *    * @return enum _ecore_status_t  */
end_comment

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_iscsi_offload_connection
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|struct
name|ecore_iscsi_conn
modifier|*
name|p_conn
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**  * @brief ecore_iscsi_release_connection - deletes connecton   *        resources (incliding container of iSCSI connection  *        data)  *  * @param p_path   * @param p_conn  container of iSCSI connection data  */
end_comment

begin_function_decl
name|void
name|ecore_iscsi_release_connection
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|struct
name|ecore_iscsi_conn
modifier|*
name|p_conn
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**  * @brief ecore_iscsi_terminate_connection - destroys previously  *        offloaded iSCSI connection  *  * @param p_path   * @param p_conn  container of iSCSI connection data  *    * @return enum _ecore_status_t  */
end_comment

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_iscsi_terminate_connection
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|struct
name|ecore_iscsi_conn
modifier|*
name|p_conn
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**  * @brief ecore_iscsi_update_connection - updates previously   *        offloaded iSCSI connection  *  *  * @param p_path   * @param p_conn  container of iSCSI connection data  *    * @return enum _ecore_status_t  */
end_comment

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_iscsi_update_connection
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|struct
name|ecore_iscsi_conn
modifier|*
name|p_conn
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**  * @brief ecore_iscsi_mac_update_connection - updates remote MAC for previously  *        offloaded iSCSI connection  *  *  * @param p_path  * @param p_conn  container of iSCSI connection data  *  * @return enum _ecore_status_t  */
end_comment

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_iscsi_update_remote_mac
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|struct
name|ecore_iscsi_conn
modifier|*
name|p_conn
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**  * @brief ecore_iscsi_clear_connection_sq - clear SQ  *        offloaded iSCSI connection  *  *  * @param p_path  * @param p_conn  container of iSCSI connection data  *  * @return enum _ecore_status_t  */
end_comment

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_iscsi_clear_connection_sq
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|struct
name|ecore_iscsi_conn
modifier|*
name|p_conn
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**  * @brief ecore_sp_iscsi_func_start  *  * This ramrod inits iSCSI functionality in FW  *  * @param p_path  * @param comp_mode  * @param comp_addr  *  * @return enum _ecore_status_t  */
end_comment

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_sp_iscsi_func_start
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|enum
name|spq_mode
name|comp_mode
parameter_list|,
name|struct
name|ecore_spq_comp_cb
modifier|*
name|p_comp_addr
parameter_list|,
name|void
modifier|*
name|async_event_context
parameter_list|,
name|iscsi_event_cb_t
name|async_event_cb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_sp_iscsi_func_stop
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|enum
name|spq_mode
name|comp_mode
parameter_list|,
name|struct
name|ecore_spq_comp_cb
modifier|*
name|p_comp_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|enum
name|_ecore_status_t
name|ecore_iscsi_get_stats
parameter_list|(
name|struct
name|ecore_hwfn
modifier|*
name|p_hwfn
parameter_list|,
name|struct
name|ecore_iscsi_stats
modifier|*
name|stats
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

