begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright 2009 Solarflare Communications Inc.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_EFX_MCDI_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_EFX_MCDI_H
end_define

begin_include
include|#
directive|include
file|"efx.h"
end_include

begin_include
include|#
directive|include
file|"efx_regs.h"
end_include

begin_include
include|#
directive|include
file|"efx_regs_mcdi.h"
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* Number of retries attempted for init code */
define|#
directive|define
name|EFX_MCDI_REQ_RETRY_INIT
value|2
struct|struct
name|efx_mcdi_req_s
block|{
comment|/* Inputs: Command #, input buffer and length */
name|unsigned
name|int
name|emr_cmd
decl_stmt|;
name|uint8_t
modifier|*
name|emr_in_buf
decl_stmt|;
name|size_t
name|emr_in_length
decl_stmt|;
comment|/* Outputs: retcode, buffer, length, and length used*/
name|int
name|emr_rc
decl_stmt|;
name|uint8_t
modifier|*
name|emr_out_buf
decl_stmt|;
name|size_t
name|emr_out_length
decl_stmt|;
name|size_t
name|emr_out_length_used
decl_stmt|;
block|}
struct|;
typedef|typedef
struct|struct
name|efx_mcdi_iface_s
block|{
specifier|const
name|efx_mcdi_transport_t
modifier|*
name|emi_mtp
decl_stmt|;
name|unsigned
name|int
name|emi_port
decl_stmt|;
name|unsigned
name|int
name|emi_seq
decl_stmt|;
name|efx_mcdi_req_t
modifier|*
name|emi_pending_req
decl_stmt|;
name|boolean_t
name|emi_ev_cpl
decl_stmt|;
name|int
name|emi_aborted
decl_stmt|;
name|uint32_t
name|emi_poll_cnt
decl_stmt|;
block|}
name|efx_mcdi_iface_t
typedef|;
specifier|extern
name|void
name|efx_mcdi_execute
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_mcdi_req_t
modifier|*
name|emrp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|efx_mcdi_ev_cpl
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|unsigned
name|int
name|seq
parameter_list|,
name|__in
name|unsigned
name|int
name|outlen
parameter_list|,
name|__in
name|int
name|errcode
parameter_list|)
function_decl|;
specifier|extern
name|void
name|efx_mcdi_ev_death
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|int
name|rc
parameter_list|)
function_decl|;
typedef|typedef
enum|enum
name|efx_mcdi_boot_e
block|{
name|EFX_MCDI_BOOT_PRIMARY
block|,
name|EFX_MCDI_BOOT_SECONDARY
block|,
name|EFX_MCDI_BOOT_ROM
block|, }
name|efx_mcdi_boot_t
typedef|;
specifier|extern
name|__checkReturn
name|int
name|efx_mcdi_version
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__out_ecount_opt
argument_list|(
literal|4
argument_list|)
name|uint16_t
name|versionp
index|[
literal|4
index|]
argument_list|,
name|__out_opt
name|uint32_t
operator|*
name|buildp
argument_list|,
name|__out_opt
name|efx_mcdi_boot_t
operator|*
name|statusp
argument_list|)
decl_stmt|;
define|#
directive|define
name|MCDI_IN
parameter_list|(
name|_emr
parameter_list|,
name|_type
parameter_list|,
name|_ofst
parameter_list|)
define|\
value|((_type *)((_emr).emr_in_buf + (_ofst)))
define|#
directive|define
name|MCDI_IN2
parameter_list|(
name|_emr
parameter_list|,
name|_type
parameter_list|,
name|_ofst
parameter_list|)
define|\
value|MCDI_IN(_emr, _type, MC_CMD_ ## _ofst ## _OFST)
define|#
directive|define
name|MCDI_IN_SET_BYTE
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_value
parameter_list|)
define|\
value|EFX_POPULATE_BYTE_1(*MCDI_IN2(_emr, efx_byte_t, _ofst),		\ 		EFX_BYTE_0, _value)
define|#
directive|define
name|MCDI_IN_SET_DWORD
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_value
parameter_list|)
define|\
value|EFX_POPULATE_DWORD_1(*MCDI_IN2(_emr, efx_dword_t, _ofst),	\ 		EFX_DWORD_0, _value)
define|#
directive|define
name|MCDI_IN_POPULATE_DWORD_1
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_field1
parameter_list|,
name|_value1
parameter_list|)
define|\
value|EFX_POPULATE_DWORD_1(*MCDI_IN2(_emr, efx_dword_t, _ofst),	\ 		MC_CMD_ ## _field1, _value1)
define|#
directive|define
name|MCDI_IN_POPULATE_DWORD_2
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_field1
parameter_list|,
name|_value1
parameter_list|,		\
name|_field2
parameter_list|,
name|_value2
parameter_list|)
define|\
value|EFX_POPULATE_DWORD_2(*MCDI_IN2(_emr, efx_dword_t, _ofst),	\ 		MC_CMD_ ## _field1, _value1,				\ 		MC_CMD_ ## _field2, _value2)
define|#
directive|define
name|MCDI_IN_POPULATE_DWORD_3
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_field1
parameter_list|,
name|_value1
parameter_list|,		\
name|_field2
parameter_list|,
name|_value2
parameter_list|,
name|_field3
parameter_list|,
name|_value3
parameter_list|)
define|\
value|EFX_POPULATE_DWORD_3(*MCDI_IN2(_emr, efx_dword_t, _ofst),	\ 		MC_CMD_ ## _field1, _value1,				\ 		MC_CMD_ ## _field2, _value2,				\ 		MC_CMD_ ## _field3, _value3)
define|#
directive|define
name|MCDI_IN_POPULATE_DWORD_4
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_field1
parameter_list|,
name|_value1
parameter_list|,		\
name|_field2
parameter_list|,
name|_value2
parameter_list|,
name|_field3
parameter_list|,
name|_value3
parameter_list|,
name|_field4
parameter_list|,
name|_value4
parameter_list|)
define|\
value|EFX_POPULATE_DWORD_4(*MCDI_IN2(_emr, efx_dword_t, _ofst),	\ 		MC_CMD_ ## _field1, _value1,				\ 		MC_CMD_ ## _field2, _value2,				\ 		MC_CMD_ ## _field3, _value3,				\ 		MC_CMD_ ## _field4, _value4)
define|#
directive|define
name|MCDI_IN_POPULATE_DWORD_5
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_field1
parameter_list|,
name|_value1
parameter_list|,		\
name|_field2
parameter_list|,
name|_value2
parameter_list|,
name|_field3
parameter_list|,
name|_value3
parameter_list|,
name|_field4
parameter_list|,
name|_value4
parameter_list|,	\
name|_field5
parameter_list|,
name|_value5
parameter_list|)
define|\
value|EFX_POPULATE_DWORD_5(*MCDI_IN2(_emr, efx_dword_t, _ofst),	\ 		MC_CMD_ ## _field1, _value1,				\ 		MC_CMD_ ## _field2, _value2,				\ 		MC_CMD_ ## _field3, _value3,				\ 		MC_CMD_ ## _field4, _value4,				\ 		MC_CMD_ ## _field5, _value5)
define|#
directive|define
name|MCDI_IN_POPULATE_DWORD_6
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_field1
parameter_list|,
name|_value1
parameter_list|,		\
name|_field2
parameter_list|,
name|_value2
parameter_list|,
name|_field3
parameter_list|,
name|_value3
parameter_list|,
name|_field4
parameter_list|,
name|_value4
parameter_list|,	\
name|_field5
parameter_list|,
name|_value5
parameter_list|,
name|_field6
parameter_list|,
name|_value6
parameter_list|)
define|\
value|EFX_POPULATE_DWORD_6(*MCDI_IN2(_emr, efx_dword_t, _ofst),	\ 		MC_CMD_ ## _field1, _value1,				\ 		MC_CMD_ ## _field2, _value2,				\ 		MC_CMD_ ## _field3, _value3,				\ 		MC_CMD_ ## _field4, _value4,				\ 		MC_CMD_ ## _field5, _value5,				\ 		MC_CMD_ ## _field6, _value6)
define|#
directive|define
name|MCDI_IN_POPULATE_DWORD_7
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_field1
parameter_list|,
name|_value1
parameter_list|,		\
name|_field2
parameter_list|,
name|_value2
parameter_list|,
name|_field3
parameter_list|,
name|_value3
parameter_list|,
name|_field4
parameter_list|,
name|_value4
parameter_list|,	\
name|_field5
parameter_list|,
name|_value5
parameter_list|,
name|_field6
parameter_list|,
name|_value6
parameter_list|,
name|_field7
parameter_list|,
name|_value7
parameter_list|)
define|\
value|EFX_POPULATE_DWORD_7(MCDI_IN2(_emr, efx_dword_t, _ofst),	\ 		MC_CMD_ ## _field1, _value1,				\ 		MC_CMD_ ## _field2, _value2,				\ 		MC_CMD_ ## _field3, _value3,				\ 		MC_CMD_ ## _field4, _value4,				\ 		MC_CMD_ ## _field5, _value5,				\ 		MC_CMD_ ## _field6, _value6,				\ 		MC_CMD_ ## _field7, _value7)
define|#
directive|define
name|MCDI_IN_POPULATE_DWORD_8
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_field1
parameter_list|,
name|_value1
parameter_list|,		\
name|_field2
parameter_list|,
name|_value2
parameter_list|,
name|_field3
parameter_list|,
name|_value3
parameter_list|,
name|_field4
parameter_list|,
name|_value4
parameter_list|,	\
name|_field5
parameter_list|,
name|_value5
parameter_list|,
name|_field6
parameter_list|,
name|_value6
parameter_list|,
name|_field7
parameter_list|,
name|_value7
parameter_list|,	\
name|_field8
parameter_list|,
name|_value8
parameter_list|)
define|\
value|EFX_POPULATE_DWORD_8(*MCDI_IN2(_emr, efx_dword_t, _ofst),	\ 		MC_CMD_ ## _field1, _value1,				\ 		MC_CMD_ ## _field2, _value2,				\ 		MC_CMD_ ## _field3, _value3,				\ 		MC_CMD_ ## _field4, _value4,				\ 		MC_CMD_ ## _field5, _value5,				\ 		MC_CMD_ ## _field6, _value6,				\ 		MC_CMD_ ## _field7, _value7,				\ 		MC_CMD_ ## _field8, _value8)
define|#
directive|define
name|MCDI_IN_POPULATE_DWORD_9
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_field1
parameter_list|,
name|_value1
parameter_list|,		\
name|_field2
parameter_list|,
name|_value2
parameter_list|,
name|_field3
parameter_list|,
name|_value3
parameter_list|,
name|_field4
parameter_list|,
name|_value4
parameter_list|,	\
name|_field5
parameter_list|,
name|_value5
parameter_list|,
name|_field6
parameter_list|,
name|_value6
parameter_list|,
name|_field7
parameter_list|,
name|_value7
parameter_list|,	\
name|_field8
parameter_list|,
name|_value8
parameter_list|,
name|_field9
parameter_list|,
name|_value9
parameter_list|)
define|\
value|EFX_POPULATE_DWORD_9(*MCDI_IN2(_emr, efx_dword_t, _ofst),	\ 		MC_CMD_ ## _field1, _value1,				\ 		MC_CMD_ ## _field2, _value2,				\ 		MC_CMD_ ## _field3, _value3,				\ 		MC_CMD_ ## _field4, _value4,				\ 		MC_CMD_ ## _field5, _value5,				\ 		MC_CMD_ ## _field6, _value6,				\ 		MC_CMD_ ## _field7, _value7,				\ 		MC_CMD_ ## _field8, _value8,				\ 		MC_CMD_ ## _field9, _value9)
define|#
directive|define
name|MCDI_IN_POPULATE_DWORD_10
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_field1
parameter_list|,
name|_value1
parameter_list|,	\
name|_field2
parameter_list|,
name|_value2
parameter_list|,
name|_field3
parameter_list|,
name|_value3
parameter_list|,
name|_field4
parameter_list|,
name|_value4
parameter_list|,	\
name|_field5
parameter_list|,
name|_value5
parameter_list|,
name|_field6
parameter_list|,
name|_value6
parameter_list|,
name|_field7
parameter_list|,
name|_value7
parameter_list|,	\
name|_field8
parameter_list|,
name|_value8
parameter_list|,
name|_field9
parameter_list|,
name|_value9
parameter_list|,
name|_field10
parameter_list|,
name|_value10
parameter_list|)
define|\
value|EFX_POPULATE_DWORD_10(*MCDI_IN2(_emr, efx_dword_t, _ofst),	\ 		MC_CMD_ ## _field1, _value1,				\ 		MC_CMD_ ## _field2, _value2,				\ 		MC_CMD_ ## _field3, _value3,				\ 		MC_CMD_ ## _field4, _value4,				\ 		MC_CMD_ ## _field5, _value5,				\ 		MC_CMD_ ## _field6, _value6,				\ 		MC_CMD_ ## _field7, _value7,				\ 		MC_CMD_ ## _field8, _value8,				\ 		MC_CMD_ ## _field9, _value9,				\ 		MC_CMD_ ## _field10, _value10)
define|#
directive|define
name|MCDI_OUT
parameter_list|(
name|_emr
parameter_list|,
name|_type
parameter_list|,
name|_ofst
parameter_list|)
define|\
value|((_type *)((_emr).emr_out_buf + (_ofst)))
define|#
directive|define
name|MCDI_OUT2
parameter_list|(
name|_emr
parameter_list|,
name|_type
parameter_list|,
name|_ofst
parameter_list|)
define|\
value|MCDI_OUT(_emr, _type, MC_CMD_ ## _ofst ## _OFST)
define|#
directive|define
name|MCDI_OUT_BYTE
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|)
define|\
value|EFX_BYTE_FIELD(*MCDI_OUT2(_emr, efx_byte_t, _ofst),		\ 		    EFX_BYTE_0)
define|#
directive|define
name|MCDI_OUT_WORD
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|)
define|\
value|EFX_WORD_FIELD(*MCDI_OUT2(_emr, efx_word_t, _ofst),		\ 		    EFX_WORD_0)
define|#
directive|define
name|MCDI_OUT_DWORD
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|)
define|\
value|EFX_DWORD_FIELD(*MCDI_OUT2(_emr, efx_dword_t, _ofst),		\ 			EFX_DWORD_0)
define|#
directive|define
name|MCDI_OUT_DWORD_FIELD
parameter_list|(
name|_emr
parameter_list|,
name|_ofst
parameter_list|,
name|_field
parameter_list|)
define|\
value|EFX_DWORD_FIELD(*MCDI_OUT2(_emr, efx_dword_t, _ofst),		\ 			MC_CMD_ ## _field)
define|#
directive|define
name|MCDI_EV_FIELD
parameter_list|(
name|_eqp
parameter_list|,
name|_field
parameter_list|)
define|\
value|EFX_QWORD_FIELD(*_eqp, MCDI_EVENT_ ## _field)
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_EFX_MCDI_H */
end_comment

end_unit

