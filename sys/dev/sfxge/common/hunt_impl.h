begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2012-2015 Solarflare Communications Inc.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *  * 1. Redistributions of source code must retain the above copyright notice,  *    this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright notice,  *    this list of conditions and the following disclaimer in the documentation  *    and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR  * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;  * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR  * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * The views and conclusions contained in the software and documentation are  * those of the authors and should not be interpreted as representing official  * policies, either expressed or implied, of the FreeBSD Project.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_HUNT_IMPL_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_HUNT_IMPL_H
end_define

begin_include
include|#
directive|include
file|"efx.h"
end_include

begin_include
include|#
directive|include
file|"efx_regs.h"
end_include

begin_include
include|#
directive|include
file|"efx_regs_ef10.h"
end_include

begin_include
include|#
directive|include
file|"efx_mcdi.h"
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/*  * FIXME: This is just a power of 2 which fits in an MCDI v1 message, and could  * possibly be increased, or the write size reported by newer firmware used  * instead.  */
define|#
directive|define
name|EF10_NVRAM_CHUNK
value|0x80
comment|/* Alignment requirement for value written to RX WPTR:  *  the WPTR must be aligned to an 8 descriptor boundary  */
define|#
directive|define
name|EF10_RX_WPTR_ALIGN
value|8
comment|/*  * Max byte offset into the packet the TCP header must start for the hardware  * to be able to parse the packet correctly.  * FIXME: Move to ef10_impl.h when it is included in all driver builds.  */
define|#
directive|define
name|EF10_TCP_HEADER_OFFSET_LIMIT
value|208
comment|/* Invalid RSS context handle */
define|#
directive|define
name|EF10_RSS_CONTEXT_INVALID
value|(0xffffffff)
comment|/* EV */
name|__checkReturn
name|efx_rc_t
name|ef10_ev_init
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
name|void
name|ef10_ev_fini
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
name|__checkReturn
name|efx_rc_t
name|ef10_ev_qcreate
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|unsigned
name|int
name|index
parameter_list|,
name|__in
name|efsys_mem_t
modifier|*
name|esmp
parameter_list|,
name|__in
name|size_t
name|n
parameter_list|,
name|__in
name|uint32_t
name|id
parameter_list|,
name|__in
name|efx_evq_t
modifier|*
name|eep
parameter_list|)
function_decl|;
name|void
name|ef10_ev_qdestroy
parameter_list|(
name|__in
name|efx_evq_t
modifier|*
name|eep
parameter_list|)
function_decl|;
name|__checkReturn
name|efx_rc_t
name|ef10_ev_qprime
parameter_list|(
name|__in
name|efx_evq_t
modifier|*
name|eep
parameter_list|,
name|__in
name|unsigned
name|int
name|count
parameter_list|)
function_decl|;
name|void
name|ef10_ev_qpost
parameter_list|(
name|__in
name|efx_evq_t
modifier|*
name|eep
parameter_list|,
name|__in
name|uint16_t
name|data
parameter_list|)
function_decl|;
name|__checkReturn
name|efx_rc_t
name|ef10_ev_qmoderate
parameter_list|(
name|__in
name|efx_evq_t
modifier|*
name|eep
parameter_list|,
name|__in
name|unsigned
name|int
name|us
parameter_list|)
function_decl|;
if|#
directive|if
name|EFSYS_OPT_QSTATS
name|void
name|ef10_ev_qstats_update
argument_list|(
name|__in
name|efx_evq_t
operator|*
name|eep
argument_list|,
name|__inout_ecount
argument_list|(
argument|EV_NQSTATS
argument_list|)
name|efsys_stat_t
operator|*
name|stat
argument_list|)
decl_stmt|;
endif|#
directive|endif
comment|/* EFSYS_OPT_QSTATS */
name|void
name|ef10_ev_rxlabel_init
parameter_list|(
name|__in
name|efx_evq_t
modifier|*
name|eep
parameter_list|,
name|__in
name|efx_rxq_t
modifier|*
name|erp
parameter_list|,
name|__in
name|unsigned
name|int
name|label
parameter_list|)
function_decl|;
name|void
name|ef10_ev_rxlabel_fini
parameter_list|(
name|__in
name|efx_evq_t
modifier|*
name|eep
parameter_list|,
name|__in
name|unsigned
name|int
name|label
parameter_list|)
function_decl|;
comment|/* INTR */
name|__checkReturn
name|efx_rc_t
name|ef10_intr_init
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_intr_type_t
name|type
parameter_list|,
name|__in
name|efsys_mem_t
modifier|*
name|esmp
parameter_list|)
function_decl|;
name|void
name|ef10_intr_enable
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
name|void
name|ef10_intr_disable
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
name|void
name|ef10_intr_disable_unlocked
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
name|__checkReturn
name|efx_rc_t
name|ef10_intr_trigger
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|unsigned
name|int
name|level
parameter_list|)
function_decl|;
name|void
name|ef10_intr_status_line
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__out
name|boolean_t
modifier|*
name|fatalp
parameter_list|,
name|__out
name|uint32_t
modifier|*
name|qmaskp
parameter_list|)
function_decl|;
name|void
name|ef10_intr_status_message
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|unsigned
name|int
name|message
parameter_list|,
name|__out
name|boolean_t
modifier|*
name|fatalp
parameter_list|)
function_decl|;
name|void
name|ef10_intr_fatal
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
name|void
name|ef10_intr_fini
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
comment|/* NIC */
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nic_probe
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|hunt_board_cfg
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nic_set_drv_limits
parameter_list|(
name|__inout
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_drv_limits_t
modifier|*
name|edlp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nic_get_vi_pool
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__out
name|uint32_t
modifier|*
name|vi_countp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nic_get_bar_region
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_nic_region_t
name|region
parameter_list|,
name|__out
name|uint32_t
modifier|*
name|offsetp
parameter_list|,
name|__out
name|size_t
modifier|*
name|sizep
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nic_reset
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nic_init
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
if|#
directive|if
name|EFSYS_OPT_DIAG
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nic_register_test
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_DIAG */
specifier|extern
name|void
name|ef10_nic_fini
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_nic_unprobe
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
comment|/* MAC */
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_mac_poll
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__out
name|efx_link_mode_t
modifier|*
name|link_modep
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_mac_up
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__out
name|boolean_t
modifier|*
name|mac_upp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_mac_addr_set
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_mac_reconfigure
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_mac_multicast_list_set
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_mac_filter_default_rxq_set
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_rxq_t
modifier|*
name|erp
parameter_list|,
name|__in
name|boolean_t
name|using_rss
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_mac_filter_default_rxq_clear
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
if|#
directive|if
name|EFSYS_OPT_LOOPBACK
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_mac_loopback_set
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_link_mode_t
name|link_mode
parameter_list|,
name|__in
name|efx_loopback_type_t
name|loopback_type
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_LOOPBACK */
if|#
directive|if
name|EFSYS_OPT_MAC_STATS
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_mac_stats_update
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in
name|efsys_mem_t
operator|*
name|esmp
argument_list|,
name|__inout_ecount
argument_list|(
argument|EFX_MAC_NSTATS
argument_list|)
name|efsys_stat_t
operator|*
name|stat
argument_list|,
name|__inout_opt
name|uint32_t
operator|*
name|generationp
argument_list|)
decl_stmt|;
endif|#
directive|endif
comment|/* EFSYS_OPT_MAC_STATS */
comment|/* MCDI */
if|#
directive|if
name|EFSYS_OPT_MCDI
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_mcdi_init
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
specifier|const
name|efx_mcdi_transport_t
modifier|*
name|mtp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_mcdi_fini
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_mcdi_send_request
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|void
modifier|*
name|hdrp
parameter_list|,
name|__in
name|size_t
name|hdr_len
parameter_list|,
name|__in
name|void
modifier|*
name|sdup
parameter_list|,
name|__in
name|size_t
name|sdu_len
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|boolean_t
name|ef10_mcdi_poll_response
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_mcdi_read_response
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__out_bcount
argument_list|(
argument|length
argument_list|)
name|void
operator|*
name|bufferp
argument_list|,
name|__in
name|size_t
name|offset
argument_list|,
name|__in
name|size_t
name|length
argument_list|)
decl_stmt|;
specifier|extern
name|efx_rc_t
name|ef10_mcdi_poll_reboot
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_mcdi_feature_supported
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_mcdi_feature_id_t
name|id
parameter_list|,
name|__out
name|boolean_t
modifier|*
name|supportedp
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_MCDI */
comment|/* NVRAM */
if|#
directive|if
name|EFSYS_OPT_NVRAM
operator|||
name|EFSYS_OPT_VPD
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_buf_read_tlv
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in_bcount
argument_list|(
argument|max_seg_size
argument_list|)
name|caddr_t
name|seg_data
argument_list|,
name|__in
name|size_t
name|max_seg_size
argument_list|,
name|__in
name|uint32_t
name|tag
argument_list|,
name|__deref_out_bcount_opt
argument_list|(
argument|*sizep
argument_list|)
name|caddr_t
operator|*
name|datap
argument_list|,
name|__out
name|size_t
operator|*
name|sizep
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_buf_write_tlv
argument_list|(
name|__inout_bcount
argument_list|(
argument|partn_size
argument_list|)
name|caddr_t
name|partn_data
argument_list|,
name|__in
name|size_t
name|partn_size
argument_list|,
name|__in
name|uint32_t
name|tag
argument_list|,
name|__in_bcount
argument_list|(
argument|tag_size
argument_list|)
name|caddr_t
name|tag_data
argument_list|,
name|__in
name|size_t
name|tag_size
argument_list|,
name|__out
name|size_t
operator|*
name|total_lengthp
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_partn_read_tlv
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in
name|uint32_t
name|partn
argument_list|,
name|__in
name|uint32_t
name|tag
argument_list|,
name|__deref_out_bcount_opt
argument_list|(
argument|*sizep
argument_list|)
name|caddr_t
operator|*
name|datap
argument_list|,
name|__out
name|size_t
operator|*
name|sizep
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_partn_write_tlv
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in
name|uint32_t
name|partn
argument_list|,
name|__in
name|uint32_t
name|tag
argument_list|,
name|__in_bcount
argument_list|(
argument|size
argument_list|)
name|caddr_t
name|data
argument_list|,
name|__in
name|size_t
name|size
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_partn_write_segment_tlv
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in
name|uint32_t
name|partn
argument_list|,
name|__in
name|uint32_t
name|tag
argument_list|,
name|__in_bcount
argument_list|(
argument|size
argument_list|)
name|caddr_t
name|data
argument_list|,
name|__in
name|size_t
name|size
argument_list|,
name|__in
name|boolean_t
name|all_segments
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_partn_lock
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|uint32_t
name|partn
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_nvram_partn_unlock
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|uint32_t
name|partn
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_NVRAM || EFSYS_OPT_VPD */
if|#
directive|if
name|EFSYS_OPT_NVRAM
if|#
directive|if
name|EFSYS_OPT_DIAG
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_test
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_DIAG */
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_type_to_partn
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_nvram_type_t
name|type
parameter_list|,
name|__out
name|uint32_t
modifier|*
name|partnp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_partn_size
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|uint32_t
name|partn
parameter_list|,
name|__out
name|size_t
modifier|*
name|sizep
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_partn_rw_start
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|uint32_t
name|partn
parameter_list|,
name|__out
name|size_t
modifier|*
name|chunk_sizep
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_partn_read
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in
name|uint32_t
name|partn
argument_list|,
name|__in
name|unsigned
name|int
name|offset
argument_list|,
name|__out_bcount
argument_list|(
argument|size
argument_list|)
name|caddr_t
name|data
argument_list|,
name|__in
name|size_t
name|size
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_partn_erase
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|uint32_t
name|partn
parameter_list|,
name|__in
name|unsigned
name|int
name|offset
parameter_list|,
name|__in
name|size_t
name|size
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_partn_write
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in
name|uint32_t
name|partn
argument_list|,
name|__in
name|unsigned
name|int
name|offset
argument_list|,
name|__out_bcount
argument_list|(
argument|size
argument_list|)
name|caddr_t
name|data
argument_list|,
name|__in
name|size_t
name|size
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|ef10_nvram_partn_rw_finish
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|uint32_t
name|partn
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_partn_get_version
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in
name|uint32_t
name|partn
argument_list|,
name|__out
name|uint32_t
operator|*
name|subtypep
argument_list|,
name|__out_ecount
argument_list|(
literal|4
argument_list|)
name|uint16_t
name|version
index|[
literal|4
index|]
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nvram_partn_set_version
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in
name|uint32_t
name|partn
argument_list|,
name|__in_ecount
argument_list|(
literal|4
argument_list|)
name|uint16_t
name|version
index|[
literal|4
index|]
argument_list|)
decl_stmt|;
endif|#
directive|endif
comment|/* EFSYS_OPT_NVRAM */
comment|/* PHY */
typedef|typedef
struct|struct
name|ef10_link_state_s
block|{
name|uint32_t
name|els_adv_cap_mask
decl_stmt|;
name|uint32_t
name|els_lp_cap_mask
decl_stmt|;
name|unsigned
name|int
name|els_fcntl
decl_stmt|;
name|efx_link_mode_t
name|els_link_mode
decl_stmt|;
if|#
directive|if
name|EFSYS_OPT_LOOPBACK
name|efx_loopback_type_t
name|els_loopback
decl_stmt|;
endif|#
directive|endif
name|boolean_t
name|els_mac_up
decl_stmt|;
block|}
name|ef10_link_state_t
typedef|;
specifier|extern
name|void
name|ef10_phy_link_ev
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_qword_t
modifier|*
name|eqp
parameter_list|,
name|__out
name|efx_link_mode_t
modifier|*
name|link_modep
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_phy_get_link
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__out
name|ef10_link_state_t
modifier|*
name|elsp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_phy_power
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|boolean_t
name|on
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_phy_reconfigure
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_phy_verify
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_phy_oui_get
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__out
name|uint32_t
modifier|*
name|ouip
parameter_list|)
function_decl|;
if|#
directive|if
name|EFSYS_OPT_PHY_STATS
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_phy_stats_update
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in
name|efsys_mem_t
operator|*
name|esmp
argument_list|,
name|__inout_ecount
argument_list|(
argument|EFX_PHY_NSTATS
argument_list|)
name|uint32_t
operator|*
name|stat
argument_list|)
decl_stmt|;
endif|#
directive|endif
comment|/* EFSYS_OPT_PHY_STATS */
if|#
directive|if
name|EFSYS_OPT_PHY_PROPS
if|#
directive|if
name|EFSYS_OPT_NAMES
specifier|extern
specifier|const
name|char
modifier|*
name|ef10_phy_prop_name
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|unsigned
name|int
name|id
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_NAMES */
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_phy_prop_get
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|unsigned
name|int
name|id
parameter_list|,
name|__in
name|uint32_t
name|flags
parameter_list|,
name|__out
name|uint32_t
modifier|*
name|valp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_phy_prop_set
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|unsigned
name|int
name|id
parameter_list|,
name|__in
name|uint32_t
name|val
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_PHY_PROPS */
if|#
directive|if
name|EFSYS_OPT_BIST
specifier|extern
name|__checkReturn
name|efx_rc_t
name|hunt_bist_enable_offline
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|hunt_bist_start
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_bist_type_t
name|type
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|hunt_bist_poll
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in
name|efx_bist_type_t
name|type
argument_list|,
name|__out
name|efx_bist_result_t
operator|*
name|resultp
argument_list|,
name|__out_opt
name|__drv_when
argument_list|(
argument|count>
literal|0
argument_list|,
argument|__notnull
argument_list|)
name|uint32_t
operator|*
name|value_maskp
argument_list|,
name|__out_ecount_opt
argument_list|(
argument|count
argument_list|)
name|__drv_when
argument_list|(
argument|count>
literal|0
argument_list|,
argument|__notnull
argument_list|)
name|unsigned
name|long
operator|*
name|valuesp
argument_list|,
name|__in
name|size_t
name|count
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|hunt_bist_stop
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_bist_type_t
name|type
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_BIST */
comment|/* SRAM */
if|#
directive|if
name|EFSYS_OPT_DIAG
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_sram_test
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_sram_pattern_fn_t
name|func
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_DIAG */
comment|/* TX */
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_tx_init
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_tx_fini
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_tx_qcreate
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|unsigned
name|int
name|index
parameter_list|,
name|__in
name|unsigned
name|int
name|label
parameter_list|,
name|__in
name|efsys_mem_t
modifier|*
name|esmp
parameter_list|,
name|__in
name|size_t
name|n
parameter_list|,
name|__in
name|uint32_t
name|id
parameter_list|,
name|__in
name|uint16_t
name|flags
parameter_list|,
name|__in
name|efx_evq_t
modifier|*
name|eep
parameter_list|,
name|__in
name|efx_txq_t
modifier|*
name|etp
parameter_list|,
name|__out
name|unsigned
name|int
modifier|*
name|addedp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_tx_qdestroy
parameter_list|(
name|__in
name|efx_txq_t
modifier|*
name|etp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_tx_qpost
argument_list|(
name|__in
name|efx_txq_t
operator|*
name|etp
argument_list|,
name|__in_ecount
argument_list|(
argument|n
argument_list|)
name|efx_buffer_t
operator|*
name|eb
argument_list|,
name|__in
name|unsigned
name|int
name|n
argument_list|,
name|__in
name|unsigned
name|int
name|completed
argument_list|,
name|__inout
name|unsigned
name|int
operator|*
name|addedp
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|ef10_tx_qpush
parameter_list|(
name|__in
name|efx_txq_t
modifier|*
name|etp
parameter_list|,
name|__in
name|unsigned
name|int
name|added
parameter_list|,
name|__in
name|unsigned
name|int
name|pushed
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_tx_qpace
parameter_list|(
name|__in
name|efx_txq_t
modifier|*
name|etp
parameter_list|,
name|__in
name|unsigned
name|int
name|ns
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_tx_qflush
parameter_list|(
name|__in
name|efx_txq_t
modifier|*
name|etp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_tx_qenable
parameter_list|(
name|__in
name|efx_txq_t
modifier|*
name|etp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_tx_qpio_enable
parameter_list|(
name|__in
name|efx_txq_t
modifier|*
name|etp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_tx_qpio_disable
parameter_list|(
name|__in
name|efx_txq_t
modifier|*
name|etp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_tx_qpio_write
argument_list|(
name|__in
name|efx_txq_t
operator|*
name|etp
argument_list|,
name|__in_ecount
argument_list|(
argument|buf_length
argument_list|)
name|uint8_t
operator|*
name|buffer
argument_list|,
name|__in
name|size_t
name|buf_length
argument_list|,
name|__in
name|size_t
name|pio_buf_offset
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_tx_qpio_post
parameter_list|(
name|__in
name|efx_txq_t
modifier|*
name|etp
parameter_list|,
name|__in
name|size_t
name|pkt_length
parameter_list|,
name|__in
name|unsigned
name|int
name|completed
parameter_list|,
name|__inout
name|unsigned
name|int
modifier|*
name|addedp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_tx_qdesc_post
argument_list|(
name|__in
name|efx_txq_t
operator|*
name|etp
argument_list|,
name|__in_ecount
argument_list|(
argument|n
argument_list|)
name|efx_desc_t
operator|*
name|ed
argument_list|,
name|__in
name|unsigned
name|int
name|n
argument_list|,
name|__in
name|unsigned
name|int
name|completed
argument_list|,
name|__inout
name|unsigned
name|int
operator|*
name|addedp
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|ef10_tx_qdesc_dma_create
parameter_list|(
name|__in
name|efx_txq_t
modifier|*
name|etp
parameter_list|,
name|__in
name|efsys_dma_addr_t
name|addr
parameter_list|,
name|__in
name|size_t
name|size
parameter_list|,
name|__in
name|boolean_t
name|eop
parameter_list|,
name|__out
name|efx_desc_t
modifier|*
name|edp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|hunt_tx_qdesc_tso_create
parameter_list|(
name|__in
name|efx_txq_t
modifier|*
name|etp
parameter_list|,
name|__in
name|uint16_t
name|ipv4_id
parameter_list|,
name|__in
name|uint32_t
name|tcp_seq
parameter_list|,
name|__in
name|uint8_t
name|tcp_flags
parameter_list|,
name|__out
name|efx_desc_t
modifier|*
name|edp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_tx_qdesc_tso2_create
argument_list|(
name|__in
name|efx_txq_t
operator|*
name|etp
argument_list|,
name|__in
name|uint16_t
name|ipv4_id
argument_list|,
name|__in
name|uint32_t
name|tcp_seq
argument_list|,
name|__in
name|uint16_t
name|tcp_mss
argument_list|,
name|__out_ecount
argument_list|(
argument|count
argument_list|)
name|efx_desc_t
operator|*
name|edp
argument_list|,
name|__in
name|int
name|count
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|ef10_tx_qdesc_vlantci_create
parameter_list|(
name|__in
name|efx_txq_t
modifier|*
name|etp
parameter_list|,
name|__in
name|uint16_t
name|vlan_tci
parameter_list|,
name|__out
name|efx_desc_t
modifier|*
name|edp
parameter_list|)
function_decl|;
if|#
directive|if
name|EFSYS_OPT_QSTATS
specifier|extern
name|void
name|ef10_tx_qstats_update
argument_list|(
name|__in
name|efx_txq_t
operator|*
name|etp
argument_list|,
name|__inout_ecount
argument_list|(
argument|TX_NQSTATS
argument_list|)
name|efsys_stat_t
operator|*
name|stat
argument_list|)
decl_stmt|;
endif|#
directive|endif
comment|/* EFSYS_OPT_QSTATS */
comment|/* PIO */
comment|/* Missing register definitions */
ifndef|#
directive|ifndef
name|ER_DZ_TX_PIOBUF_OFST
define|#
directive|define
name|ER_DZ_TX_PIOBUF_OFST
value|0x00001000
endif|#
directive|endif
ifndef|#
directive|ifndef
name|ER_DZ_TX_PIOBUF_STEP
define|#
directive|define
name|ER_DZ_TX_PIOBUF_STEP
value|8192
endif|#
directive|endif
ifndef|#
directive|ifndef
name|ER_DZ_TX_PIOBUF_ROWS
define|#
directive|define
name|ER_DZ_TX_PIOBUF_ROWS
value|2048
endif|#
directive|endif
ifndef|#
directive|ifndef
name|ER_DZ_TX_PIOBUF_SIZE
define|#
directive|define
name|ER_DZ_TX_PIOBUF_SIZE
value|2048
endif|#
directive|endif
define|#
directive|define
name|HUNT_PIOBUF_NBUFS
value|(16)
define|#
directive|define
name|HUNT_PIOBUF_SIZE
value|(ER_DZ_TX_PIOBUF_SIZE)
define|#
directive|define
name|HUNT_MIN_PIO_ALLOC_SIZE
value|(HUNT_PIOBUF_SIZE / 32)
define|#
directive|define
name|EF10_LEGACY_PF_PRIVILEGE_MASK
define|\
value|(MC_CMD_PRIVILEGE_MASK_IN_GRP_ADMIN			|	\ 	MC_CMD_PRIVILEGE_MASK_IN_GRP_LINK			|	\ 	MC_CMD_PRIVILEGE_MASK_IN_GRP_ONLOAD			|	\ 	MC_CMD_PRIVILEGE_MASK_IN_GRP_PTP			|	\ 	MC_CMD_PRIVILEGE_MASK_IN_GRP_INSECURE_FILTERS		|	\ 	MC_CMD_PRIVILEGE_MASK_IN_GRP_MAC_SPOOFING		|	\ 	MC_CMD_PRIVILEGE_MASK_IN_GRP_UNICAST			|	\ 	MC_CMD_PRIVILEGE_MASK_IN_GRP_MULTICAST			|	\ 	MC_CMD_PRIVILEGE_MASK_IN_GRP_BROADCAST			|	\ 	MC_CMD_PRIVILEGE_MASK_IN_GRP_ALL_MULTICAST		|	\ 	MC_CMD_PRIVILEGE_MASK_IN_GRP_PROMISCUOUS)
define|#
directive|define
name|EF10_LEGACY_VF_PRIVILEGE_MASK
value|0
typedef|typedef
name|uint32_t
name|efx_piobuf_handle_t
typedef|;
define|#
directive|define
name|EFX_PIOBUF_HANDLE_INVALID
value|((efx_piobuf_handle_t) -1)
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nic_pio_alloc
parameter_list|(
name|__inout
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__out
name|uint32_t
modifier|*
name|bufnump
parameter_list|,
name|__out
name|efx_piobuf_handle_t
modifier|*
name|handlep
parameter_list|,
name|__out
name|uint32_t
modifier|*
name|blknump
parameter_list|,
name|__out
name|uint32_t
modifier|*
name|offsetp
parameter_list|,
name|__out
name|size_t
modifier|*
name|sizep
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nic_pio_free
parameter_list|(
name|__inout
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|uint32_t
name|bufnum
parameter_list|,
name|__in
name|uint32_t
name|blknum
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nic_pio_link
parameter_list|(
name|__inout
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|uint32_t
name|vi_index
parameter_list|,
name|__in
name|efx_piobuf_handle_t
name|handle
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_nic_pio_unlink
parameter_list|(
name|__inout
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|uint32_t
name|vi_index
parameter_list|)
function_decl|;
comment|/* VPD */
if|#
directive|if
name|EFSYS_OPT_VPD
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_vpd_init
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_vpd_size
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__out
name|size_t
modifier|*
name|sizep
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_vpd_read
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__out_bcount
argument_list|(
argument|size
argument_list|)
name|caddr_t
name|data
argument_list|,
name|__in
name|size_t
name|size
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_vpd_verify
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in_bcount
argument_list|(
argument|size
argument_list|)
name|caddr_t
name|data
argument_list|,
name|__in
name|size_t
name|size
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_vpd_reinit
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in_bcount
argument_list|(
argument|size
argument_list|)
name|caddr_t
name|data
argument_list|,
name|__in
name|size_t
name|size
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_vpd_get
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in_bcount
argument_list|(
argument|size
argument_list|)
name|caddr_t
name|data
argument_list|,
name|__in
name|size_t
name|size
argument_list|,
name|__inout
name|efx_vpd_value_t
operator|*
name|evvp
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_vpd_set
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in_bcount
argument_list|(
argument|size
argument_list|)
name|caddr_t
name|data
argument_list|,
name|__in
name|size_t
name|size
argument_list|,
name|__in
name|efx_vpd_value_t
operator|*
name|evvp
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_vpd_next
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in_bcount
argument_list|(
argument|size
argument_list|)
name|caddr_t
name|data
argument_list|,
name|__in
name|size_t
name|size
argument_list|,
name|__out
name|efx_vpd_value_t
operator|*
name|evvp
argument_list|,
name|__inout
name|unsigned
name|int
operator|*
name|contp
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_vpd_write
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in_bcount
argument_list|(
argument|size
argument_list|)
name|caddr_t
name|data
argument_list|,
name|__in
name|size_t
name|size
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|ef10_vpd_fini
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_VPD */
comment|/* RX */
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_rx_init
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
if|#
directive|if
name|EFSYS_OPT_RX_SCATTER
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_rx_scatter_enable
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|unsigned
name|int
name|buf_size
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_RX_SCATTER */
if|#
directive|if
name|EFSYS_OPT_RX_SCALE
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_rx_scale_mode_set
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_rx_hash_alg_t
name|alg
parameter_list|,
name|__in
name|efx_rx_hash_type_t
name|type
parameter_list|,
name|__in
name|boolean_t
name|insert
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_rx_scale_key_set
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in_ecount
argument_list|(
argument|n
argument_list|)
name|uint8_t
operator|*
name|key
argument_list|,
name|__in
name|size_t
name|n
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_rx_scale_tbl_set
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in_ecount
argument_list|(
argument|n
argument_list|)
name|unsigned
name|int
operator|*
name|table
argument_list|,
name|__in
name|size_t
name|n
argument_list|)
decl_stmt|;
specifier|extern
name|__checkReturn
name|uint32_t
name|ef10_rx_prefix_hash
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_rx_hash_alg_t
name|func
parameter_list|,
name|__in
name|uint8_t
modifier|*
name|buffer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_RX_SCALE */
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_rx_prefix_pktlen
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|uint8_t
modifier|*
name|buffer
parameter_list|,
name|__out
name|uint16_t
modifier|*
name|lengthp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_rx_qpost
argument_list|(
name|__in
name|efx_rxq_t
operator|*
name|erp
argument_list|,
name|__in_ecount
argument_list|(
argument|n
argument_list|)
name|efsys_dma_addr_t
operator|*
name|addrp
argument_list|,
name|__in
name|size_t
name|size
argument_list|,
name|__in
name|unsigned
name|int
name|n
argument_list|,
name|__in
name|unsigned
name|int
name|completed
argument_list|,
name|__in
name|unsigned
name|int
name|added
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|ef10_rx_qpush
parameter_list|(
name|__in
name|efx_rxq_t
modifier|*
name|erp
parameter_list|,
name|__in
name|unsigned
name|int
name|added
parameter_list|,
name|__inout
name|unsigned
name|int
modifier|*
name|pushedp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_rx_qflush
parameter_list|(
name|__in
name|efx_rxq_t
modifier|*
name|erp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_rx_qenable
parameter_list|(
name|__in
name|efx_rxq_t
modifier|*
name|erp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_rx_qcreate
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|unsigned
name|int
name|index
parameter_list|,
name|__in
name|unsigned
name|int
name|label
parameter_list|,
name|__in
name|efx_rxq_type_t
name|type
parameter_list|,
name|__in
name|efsys_mem_t
modifier|*
name|esmp
parameter_list|,
name|__in
name|size_t
name|n
parameter_list|,
name|__in
name|uint32_t
name|id
parameter_list|,
name|__in
name|efx_evq_t
modifier|*
name|eep
parameter_list|,
name|__in
name|efx_rxq_t
modifier|*
name|erp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_rx_qdestroy
parameter_list|(
name|__in
name|efx_rxq_t
modifier|*
name|erp
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_rx_fini
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
if|#
directive|if
name|EFSYS_OPT_FILTER
typedef|typedef
struct|struct
name|ef10_filter_handle_s
block|{
name|uint32_t
name|efh_lo
decl_stmt|;
name|uint32_t
name|efh_hi
decl_stmt|;
block|}
name|ef10_filter_handle_t
typedef|;
typedef|typedef
struct|struct
name|ef10_filter_entry_s
block|{
name|uintptr_t
name|efe_spec
decl_stmt|;
comment|/* pointer to filter spec plus busy bit */
name|ef10_filter_handle_t
name|efe_handle
decl_stmt|;
block|}
name|ef10_filter_entry_t
typedef|;
comment|/*  * BUSY flag indicates that an update is in progress.  * AUTO_OLD flag is used to mark and sweep MAC packet filters.  */
define|#
directive|define
name|EFX_EF10_FILTER_FLAG_BUSY
value|1U
define|#
directive|define
name|EFX_EF10_FILTER_FLAG_AUTO_OLD
value|2U
define|#
directive|define
name|EFX_EF10_FILTER_FLAGS
value|3U
comment|/*  * Size of the hash table used by the driver. Doesn't need to be the  * same size as the hardware's table.  */
define|#
directive|define
name|EFX_EF10_FILTER_TBL_ROWS
value|8192
comment|/* Allow for the broadcast address to be added to the multicast list */
define|#
directive|define
name|EFX_EF10_FILTER_MULTICAST_FILTERS_MAX
value|(EFX_MAC_MULTICAST_LIST_MAX + 1)
typedef|typedef
struct|struct
name|ef10_filter_table_s
block|{
name|ef10_filter_entry_t
name|eft_entry
index|[
name|EFX_EF10_FILTER_TBL_ROWS
index|]
decl_stmt|;
name|efx_rxq_t
modifier|*
name|eft_default_rxq
decl_stmt|;
name|boolean_t
name|eft_using_rss
decl_stmt|;
name|uint32_t
name|eft_unicst_filter_index
decl_stmt|;
name|boolean_t
name|eft_unicst_filter_set
decl_stmt|;
name|uint32_t
name|eft_mulcst_filter_indexes
index|[
name|EFX_EF10_FILTER_MULTICAST_FILTERS_MAX
index|]
decl_stmt|;
name|uint32_t
name|eft_mulcst_filter_count
decl_stmt|;
block|}
name|ef10_filter_table_t
typedef|;
name|__checkReturn
name|efx_rc_t
name|ef10_filter_init
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
name|void
name|ef10_filter_fini
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
name|__checkReturn
name|efx_rc_t
name|ef10_filter_restore
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
name|__checkReturn
name|efx_rc_t
name|ef10_filter_add
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__inout
name|efx_filter_spec_t
modifier|*
name|spec
parameter_list|,
name|__in
name|boolean_t
name|may_replace
parameter_list|)
function_decl|;
name|__checkReturn
name|efx_rc_t
name|ef10_filter_delete
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__inout
name|efx_filter_spec_t
modifier|*
name|spec
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_filter_supported_filters
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__out
name|uint32_t
modifier|*
name|list
parameter_list|,
name|__out
name|size_t
modifier|*
name|length
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|ef10_filter_reconfigure
argument_list|(
name|__in
name|efx_nic_t
operator|*
name|enp
argument_list|,
name|__in_ecount
argument_list|(
literal|6
argument_list|)
name|uint8_t
specifier|const
operator|*
name|mac_addr
argument_list|,
name|__in
name|boolean_t
name|all_unicst
argument_list|,
name|__in
name|boolean_t
name|mulcst
argument_list|,
name|__in
name|boolean_t
name|all_mulcst
argument_list|,
name|__in
name|boolean_t
name|brdcst
argument_list|,
name|__in_ecount
argument_list|(
literal|6
argument|*count
argument_list|)
name|uint8_t
specifier|const
operator|*
name|addrs
argument_list|,
name|__in
name|int
name|count
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|ef10_filter_get_default_rxq
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__out
name|efx_rxq_t
modifier|*
modifier|*
name|erpp
parameter_list|,
name|__out
name|boolean_t
modifier|*
name|using_rss
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_filter_default_rxq_set
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|efx_rxq_t
modifier|*
name|erp
parameter_list|,
name|__in
name|boolean_t
name|using_rss
parameter_list|)
function_decl|;
specifier|extern
name|void
name|ef10_filter_default_rxq_clear
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* EFSYS_OPT_FILTER */
specifier|extern
name|__checkReturn
name|efx_rc_t
name|efx_mcdi_get_function_info
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__out
name|uint32_t
modifier|*
name|pfp
parameter_list|,
name|__out_opt
name|uint32_t
modifier|*
name|vfp
parameter_list|)
function_decl|;
specifier|extern
name|__checkReturn
name|efx_rc_t
name|efx_mcdi_privilege_mask
parameter_list|(
name|__in
name|efx_nic_t
modifier|*
name|enp
parameter_list|,
name|__in
name|uint32_t
name|pf
parameter_list|,
name|__in
name|uint32_t
name|vf
parameter_list|,
name|__out
name|uint32_t
modifier|*
name|maskp
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_HUNT_IMPL_H */
end_comment

end_unit

