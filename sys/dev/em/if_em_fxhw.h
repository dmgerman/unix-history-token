begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/************************************************************************* ************************************************************************** Copyright (c) 2001 Intel Corporation  All rights reserved.   Redistribution and use in source and binary forms of the Software, with or  without modification, are permitted provided that the following conditions  are met:    1. Redistributions of source code of the Software may retain the above      copyright notice, this list of conditions and the following disclaimer.    2. Redistributions in binary form of the Software may reproduce the above      copyright notice, this list of conditions and the following disclaimer      in the documentation and/or other materials provided with the      distribution.    3. Neither the name of the Intel Corporation nor the names of its      contributors shall be used to endorse or promote products derived from      this Software without specific prior written permission.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  ARE DISCLAIMED. IN NO EVENT SHALL THE INTEL OR ITS CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  SUCH DAMAGE.  $FreeBSD$ *************************************************************************** **************************************************************************/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_EM_FXHW_H_
end_ifndef

begin_define
define|#
directive|define
name|_EM_FXHW_H_
end_define

begin_comment
comment|/* * Workfile: fxhw.h  * Date: 9/25/01 2:40p  * Revision: 43  */
end_comment

begin_define
define|#
directive|define
name|_FXHW_
end_define

begin_struct_decl
struct_decl|struct
name|adapter
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|_E1000_TRANSMIT_DESCRIPTOR
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|_E1000_RECEIVE_DESCRIPTOR
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|E1000_REGISTERS
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
enum|enum
name|_MAC_TYPE
block|{
name|MAC_WISEMAN_2_0
init|=
literal|0
block|,
name|MAC_WISEMAN_2_1
block|,
name|MAC_LIVENGOOD
block|,
name|MAC_WAINWRIGHT
block|,
name|MAC_CORDOVA
block|,
name|NUM_MACS
block|}
name|MAC_TYPE
operator|,
typedef|*
name|PMAC_TYPE
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|_GIGABIT_MEDIA_TYPE
block|{
name|MEDIA_TYPE_COPPER
init|=
literal|0
block|,
name|MEDIA_TYPE_FIBER
init|=
literal|1
block|,
name|NUM_MEDIA_TYPES
block|}
name|GIGABIT_MEDIA_TYPE
operator|,
typedef|*
name|PGIGABIT_MEDIA_TYPE
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|_SPEED_DUPLEX_TYPE
block|{
name|HALF_10
init|=
literal|0
block|,
name|FULL_10
init|=
literal|1
block|,
name|HALF_100
init|=
literal|2
block|,
name|FULL_100
init|=
literal|3
block|}
name|SPEED_DUPLEX_TYPE
operator|,
typedef|*
name|PSPEED_DUPLEX_TYPE
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|_FLOW_CONTROL_TYPE
block|{
name|FLOW_CONTROL_NONE
init|=
literal|0
block|,
name|FLOW_CONTROL_RECEIVE_PAUSE
init|=
literal|1
block|,
name|FLOW_CONTROL_TRANSMIT_PAUSE
init|=
literal|2
block|,
name|FLOW_CONTROL_FULL
init|=
literal|3
block|,
name|FLOW_CONTROL_HW_DEFAULT
init|=
literal|0xFF
block|}
name|FLOW_CONTROL_TYPE
operator|,
typedef|*
name|PFLOW_CONTROL_TYPE
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|E1000_BUS_TYPE_UNKNOWN
init|=
literal|0
block|,
name|E1000_BUS_TYPE_PCI
block|,
name|E1000_BUS_TYPE_PCIX
block|}
name|E1000_BUS_TYPE_ENUM
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|E1000_BUS_SPEED_UNKNOWN
init|=
literal|0
block|,
name|E1000_BUS_SPEED_PCI_33MHZ
block|,
name|E1000_BUS_SPEED_PCI_66MHZ
block|,
name|E1000_BUS_SPEED_PCIX_50_66MHZ
block|,
name|E1000_BUS_SPEED_PCIX_66_100MHZ
block|,
name|E1000_BUS_SPEED_PCIX_100_133MHZ
block|,
name|E1000_BUS_SPEED_PCIX_RESERVED
block|}
name|E1000_BUS_SPEED_ENUM
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|E1000_BUS_WIDTH_UNKNOWN
init|=
literal|0
block|,
name|E1000_BUS_WIDTH_32_BIT
block|,
name|E1000_BUS_WIDTH_64_BIT
block|}
name|E1000_BUS_WIDTH_ENUM
typedef|;
end_typedef

begin_include
include|#
directive|include
file|<dev/em/if_em_osdep.h>
end_include

begin_function_decl
name|void
name|em_adapter_stop
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
name|em_initialize_hardware
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_init_rx_addresses
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_multicast_address_list_update
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|,
name|u8
modifier|*
name|MulticastAddressList
parameter_list|,
name|u32
name|MulticastAddressCount
parameter_list|,
name|u32
name|Padding
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|em_hash_multicast_address
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|,
name|u8
modifier|*
name|MulticastAddress
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_mta_set
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|,
name|u32
name|HashValue
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_rar_set
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|,
name|u8
modifier|*
name|MulticastAddress
parameter_list|,
name|u32
name|RarIndex
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_write_vfta
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|,
name|u32
name|Offset
parameter_list|,
name|u32
name|Value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_clear_vfta
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
name|em_setup_flow_control_and_link
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
name|em_setup_pcs_link
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|,
name|u32
name|DeviceControlReg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_config_flow_control_after_link_up
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_force_mac_flow_control_setting
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_check_for_link
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_get_speed_and_duplex
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|,
name|u16
modifier|*
name|Speed
parameter_list|,
name|u16
modifier|*
name|Duplex
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_cleanup_eeprom
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_clock_eeprom
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_setup_eeprom
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_standby_eeprom
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u16
name|em_read_eeprom_word
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|,
name|u16
name|Reg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
name|em_validate_eeprom_checksum
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_update_eeprom_checksum
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
name|em_write_eeprom_word
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|,
name|u16
name|reg
parameter_list|,
name|u16
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_clear_hw_stats_counters
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
name|em_read_part_number
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|,
name|u32
modifier|*
name|PartNumber
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_id_led_on
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_id_led_off
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_set_id_led_for_pc_ix
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
name|em_is_low_profile
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|em_get_bus_type_speed_width
parameter_list|(
name|struct
name|adapter
modifier|*
name|Adapter
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|MAC_DECODE_SIZE
value|(128 * 1024)
end_define

begin_define
define|#
directive|define
name|WISEMAN_2_0_REV_ID
value|2
end_define

begin_define
define|#
directive|define
name|WISEMAN_2_1_REV_ID
value|3
end_define

begin_define
define|#
directive|define
name|SPEED_10
value|10
end_define

begin_define
define|#
directive|define
name|SPEED_100
value|100
end_define

begin_define
define|#
directive|define
name|SPEED_1000
value|1000
end_define

begin_define
define|#
directive|define
name|HALF_DUPLEX
value|1
end_define

begin_define
define|#
directive|define
name|FULL_DUPLEX
value|2
end_define

begin_define
define|#
directive|define
name|ENET_HEADER_SIZE
value|14
end_define

begin_define
define|#
directive|define
name|MAXIMUM_ETHERNET_PACKET_SIZE
value|1514
end_define

begin_define
define|#
directive|define
name|MINIMUM_ETHERNET_PACKET_SIZE
value|60
end_define

begin_define
define|#
directive|define
name|CRC_LENGTH
value|4
end_define

begin_define
define|#
directive|define
name|MAX_JUMBO_FRAME_SIZE
value|(0x3F00)
end_define

begin_define
define|#
directive|define
name|ISL_CRC_LENGTH
value|4
end_define

begin_define
define|#
directive|define
name|MAXIMUM_VLAN_ETHERNET_PACKET_SIZE
value|1514
end_define

begin_define
define|#
directive|define
name|MINIMUM_VLAN_ETHERNET_PACKET_SIZE
value|60
end_define

begin_define
define|#
directive|define
name|VLAN_TAG_SIZE
value|4
end_define

begin_define
define|#
directive|define
name|ETHERNET_IEEE_VLAN_TYPE
value|0x8100
end_define

begin_define
define|#
directive|define
name|ETHERNET_IP_TYPE
value|0x0800
end_define

begin_define
define|#
directive|define
name|ETHERNET_IPX_TYPE
value|0x8037
end_define

begin_define
define|#
directive|define
name|ETHERNET_IPX_OLD_TYPE
value|0x8137
end_define

begin_define
define|#
directive|define
name|MAX_802_3_LEN_FIELD
value|0x05DC
end_define

begin_define
define|#
directive|define
name|ETHERNET_ARP_TYPE
value|0x0806
end_define

begin_define
define|#
directive|define
name|ETHERNET_XNS_TYPE
value|0x0600
end_define

begin_define
define|#
directive|define
name|ETHERNET_X25_TYPE
value|0x0805
end_define

begin_define
define|#
directive|define
name|ETHERNET_BANYAN_TYPE
value|0x0BAD
end_define

begin_define
define|#
directive|define
name|ETHERNET_DECNET_TYPE
value|0x6003
end_define

begin_define
define|#
directive|define
name|ETHERNET_APPLETALK_TYPE
value|0x809B
end_define

begin_define
define|#
directive|define
name|ETHERNET_SNA_TYPE
value|0x80D5
end_define

begin_define
define|#
directive|define
name|ETHERNET_SNMP_TYPE
value|0x814C
end_define

begin_define
define|#
directive|define
name|IP_OFF_MF_BIT
value|0x0002
end_define

begin_define
define|#
directive|define
name|IP_OFF_OFFSET_MASK
value|0xFFF8
end_define

begin_define
define|#
directive|define
name|IP_PROTOCOL_ICMP
value|1
end_define

begin_define
define|#
directive|define
name|IP_PROTOCOL_IGMP
value|2
end_define

begin_define
define|#
directive|define
name|IP_PROTOCOL_TCP
value|6
end_define

begin_define
define|#
directive|define
name|IP_PROTOCOL_UDP
value|0x11
end_define

begin_define
define|#
directive|define
name|IP_PROTOCOL_IPRAW
value|0xFF
end_define

begin_define
define|#
directive|define
name|POLL_IMS_ENABLE_MASK
value|(E1000_IMS_RXDMT0 | E1000_IMS_RXSEQ)
end_define

begin_define
define|#
directive|define
name|IMS_ENABLE_MASK
value|(E1000_IMS_RXT0 | E1000_IMS_TXDW | E1000_IMS_RXDMT0 | E1000_IMS_RXSEQ | E1000_IMS_LSC)
end_define

begin_define
define|#
directive|define
name|E1000_RAR_ENTRIES
value|16
end_define

begin_typedef
typedef|typedef
struct|struct
name|_E1000_RECEIVE_DESCRIPTOR
block|{
name|E1000_64_BIT_PHYSICAL_ADDRESS
name|BufferAddress
decl_stmt|;
name|u16
name|Length
decl_stmt|;
name|u16
name|Csum
decl_stmt|;
name|u8
name|ReceiveStatus
decl_stmt|;
name|u8
name|Errors
decl_stmt|;
name|u16
name|Special
decl_stmt|;
block|}
name|E1000_RECEIVE_DESCRIPTOR
operator|,
typedef|*
name|PE1000_RECEIVE_DESCRIPTOR
typedef|;
end_typedef

begin_define
define|#
directive|define
name|MIN_NUMBER_OF_DESCRIPTORS
value|(8)
end_define

begin_define
define|#
directive|define
name|MAX_NUMBER_OF_DESCRIPTORS
value|(0xFFF8)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_STAT_DD
value|(0x01)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_STAT_EOP
value|(0x02)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_STAT_ISL
value|(0x04)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_STAT_IXSM
value|(0x04)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_STAT_VP
value|(0x08)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_STAT_BPDU
value|(0x10)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_STAT_TCPCS
value|(0x20)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_STAT_IPCS
value|(0x40)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_STAT_PIF
value|(0x80)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_ERR_CE
value|(0x01)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_ERR_SE
value|(0x02)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_ERR_SEQ
value|(0x04)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_ERR_ICE
value|(0x08)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_ERR_CXE
value|(0x10)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_ERR_TCPE
value|(0x20)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_ERR_IPE
value|(0x40)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_ERR_RXE
value|(0x80)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_ERR_FRAME_ERR_MASK
value|(E1000_RXD_ERR_CE | E1000_RXD_ERR_SE | E1000_RXD_ERR_SEQ | E1000_RXD_ERR_CXE | E1000_RXD_ERR_RXE)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_SPC_VLAN_MASK
value|(0x0FFF)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_SPC_PRI_MASK
value|(0xE000)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_SPC_PRI_SHIFT
value|(0x000D)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_SPC_CFI_MASK
value|(0x1000)
end_define

begin_define
define|#
directive|define
name|E1000_RXD_SPC_CFI_SHIFT
value|(0x000C)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_DTYP_D
value|(0x00100000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_DTYP_C
value|(0x00000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_POPTS_IXSM
value|(0x01)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_POPTS_TXSM
value|(0x02)
end_define

begin_typedef
typedef|typedef
struct|struct
name|_E1000_TRANSMIT_DESCRIPTOR
block|{
name|E1000_64_BIT_PHYSICAL_ADDRESS
name|BufferAddress
decl_stmt|;
union|union
block|{
name|u32
name|DwordData
decl_stmt|;
struct|struct
name|_TXD_FLAGS
block|{
name|u16
name|Length
decl_stmt|;
name|u8
name|Cso
decl_stmt|;
name|u8
name|Cmd
decl_stmt|;
block|}
name|Flags
struct|;
block|}
name|Lower
union|;
union|union
block|{
name|u32
name|DwordData
decl_stmt|;
struct|struct
name|_TXD_FIELDS
block|{
name|u8
name|TransmitStatus
decl_stmt|;
name|u8
name|Css
decl_stmt|;
name|u16
name|Special
decl_stmt|;
block|}
name|Fields
struct|;
block|}
name|Upper
union|;
block|}
name|E1000_TRANSMIT_DESCRIPTOR
operator|,
typedef|*
name|PE1000_TRANSMIT_DESCRIPTOR
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_E1000_TCPIP_CONTEXT_TRANSMIT_DESCRIPTOR
block|{
union|union
block|{
name|u32
name|IpXsumConfig
decl_stmt|;
struct|struct
name|_IP_XSUM_FIELDS
block|{
name|u8
name|Ipcss
decl_stmt|;
name|u8
name|Ipcso
decl_stmt|;
name|u16
name|Ipcse
decl_stmt|;
block|}
name|IpFields
struct|;
block|}
name|LowerXsumSetup
union|;
union|union
block|{
name|u32
name|TcpXsumConfig
decl_stmt|;
struct|struct
name|_TCP_XSUM_FIELDS
block|{
name|u8
name|Tucss
decl_stmt|;
name|u8
name|Tucso
decl_stmt|;
name|u16
name|Tucse
decl_stmt|;
block|}
name|TcpFields
struct|;
block|}
name|UpperXsumSetup
union|;
name|u32
name|CmdAndLength
decl_stmt|;
union|union
block|{
name|u32
name|DwordData
decl_stmt|;
struct|struct
name|_TCP_SEG_FIELDS
block|{
name|u8
name|Status
decl_stmt|;
name|u8
name|HdrLen
decl_stmt|;
name|u16
name|Mss
decl_stmt|;
block|}
name|Fields
struct|;
block|}
name|TcpSegSetup
union|;
block|}
name|E1000_TCPIP_CONTEXT_TRANSMIT_DESCRIPTOR
operator|,
typedef|*
name|PE1000_TCPIP_CONTEXT_TRANSMIT_DESCRIPTOR
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_E1000_TCPIP_DATA_TRANSMIT_DESCRIPTOR
block|{
name|E1000_64_BIT_PHYSICAL_ADDRESS
name|BufferAddress
decl_stmt|;
union|union
block|{
name|u32
name|DwordData
decl_stmt|;
struct|struct
name|_TXD_OD_FLAGS
block|{
name|u16
name|Length
decl_stmt|;
name|u8
name|TypLenExt
decl_stmt|;
name|u8
name|Cmd
decl_stmt|;
block|}
name|Flags
struct|;
block|}
name|Lower
union|;
union|union
block|{
name|u32
name|DwordData
decl_stmt|;
struct|struct
name|_TXD_OD_FIELDS
block|{
name|u8
name|TransmitStatus
decl_stmt|;
name|u8
name|Popts
decl_stmt|;
name|u16
name|Special
decl_stmt|;
block|}
name|Fields
struct|;
block|}
name|Upper
union|;
block|}
name|E1000_TCPIP_DATA_TRANSMIT_DESCRIPTOR
operator|,
typedef|*
name|PE1000_TCPIP_DATA_TRANSMIT_DESCRIPTOR
typedef|;
end_typedef

begin_define
define|#
directive|define
name|E1000_TXD_CMD_EOP
value|(0x01000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_CMD_IFCS
value|(0x02000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_CMD_IC
value|(0x04000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_CMD_RS
value|(0x08000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_CMD_RPS
value|(0x10000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_CMD_DEXT
value|(0x20000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_CMD_ISLVE
value|(0x40000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_CMD_IDE
value|(0x80000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_STAT_DD
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_STAT_EC
value|(0x00000002)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_STAT_LC
value|(0x00000004)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_STAT_TU
value|(0x00000008)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_CMD_TCP
value|(0x01000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_CMD_IP
value|(0x02000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_CMD_TSE
value|(0x04000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXD_STAT_TC
value|(0x00000004)
end_define

begin_define
define|#
directive|define
name|E1000_NUM_UNICAST
value|(16)
end_define

begin_define
define|#
directive|define
name|E1000_MC_TBL_SIZE
value|(128)
end_define

begin_define
define|#
directive|define
name|E1000_VLAN_FILTER_TBL_SIZE
value|(128)
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
specifier|volatile
name|u32
name|Low
decl_stmt|;
specifier|volatile
name|u32
name|High
decl_stmt|;
block|}
name|RECEIVE_ADDRESS_REGISTER_PAIR
typedef|;
end_typedef

begin_define
define|#
directive|define
name|E1000_NUM_MTA_REGISTERS
value|128
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
specifier|volatile
name|u32
name|IpAddress
decl_stmt|;
specifier|volatile
name|u32
name|Reserved
decl_stmt|;
block|}
name|IPAT_ENTRY
typedef|;
end_typedef

begin_define
define|#
directive|define
name|E1000_WAKEUP_IP_ADDRESS_COUNT_MAX
value|(4)
end_define

begin_define
define|#
directive|define
name|E1000_IPAT_SIZE
value|E1000_WAKEUP_IP_ADDRESS_COUNT_MAX
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
specifier|volatile
name|u32
name|Length
decl_stmt|;
specifier|volatile
name|u32
name|Reserved
decl_stmt|;
block|}
name|FFLT_ENTRY
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
specifier|volatile
name|u32
name|Mask
decl_stmt|;
specifier|volatile
name|u32
name|Reserved
decl_stmt|;
block|}
name|FFMT_ENTRY
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
specifier|volatile
name|u32
name|Value
decl_stmt|;
specifier|volatile
name|u32
name|Reserved
decl_stmt|;
block|}
name|FFVT_ENTRY
typedef|;
end_typedef

begin_define
define|#
directive|define
name|E1000_FLEXIBLE_FILTER_COUNT_MAX
value|(4)
end_define

begin_define
define|#
directive|define
name|E1000_FLEXIBLE_FILTER_SIZE_MAX
value|(128)
end_define

begin_define
define|#
directive|define
name|E1000_FFLT_SIZE
value|E1000_FLEXIBLE_FILTER_COUNT_MAX
end_define

begin_define
define|#
directive|define
name|E1000_FFMT_SIZE
value|E1000_FLEXIBLE_FILTER_SIZE_MAX
end_define

begin_define
define|#
directive|define
name|E1000_FFVT_SIZE
value|E1000_FLEXIBLE_FILTER_SIZE_MAX
end_define

begin_typedef
typedef|typedef
struct|struct
name|_E1000_REGISTERS
block|{
specifier|volatile
name|u32
name|Ctrl
decl_stmt|;
specifier|volatile
name|u32
name|Pad1
decl_stmt|;
specifier|volatile
name|u32
name|Status
decl_stmt|;
specifier|volatile
name|u32
name|Pad2
decl_stmt|;
specifier|volatile
name|u32
name|Eecd
decl_stmt|;
specifier|volatile
name|u32
name|Pad3
decl_stmt|;
specifier|volatile
name|u32
name|Exct
decl_stmt|;
specifier|volatile
name|u32
name|Pad4
decl_stmt|;
specifier|volatile
name|u32
name|Mdic
decl_stmt|;
specifier|volatile
name|u32
name|Pad5
decl_stmt|;
specifier|volatile
name|u32
name|Fcal
decl_stmt|;
specifier|volatile
name|u32
name|Fcah
decl_stmt|;
specifier|volatile
name|u32
name|Fct
decl_stmt|;
specifier|volatile
name|u32
name|Pad6
decl_stmt|;
specifier|volatile
name|u32
name|Vet
decl_stmt|;
specifier|volatile
name|u32
name|Pad7
decl_stmt|;
name|RECEIVE_ADDRESS_REGISTER_PAIR
name|Rar
index|[
literal|16
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Icr
decl_stmt|;
specifier|volatile
name|u32
name|Pad8
decl_stmt|;
specifier|volatile
name|u32
name|Ics
decl_stmt|;
specifier|volatile
name|u32
name|Pad9
decl_stmt|;
specifier|volatile
name|u32
name|Ims
decl_stmt|;
specifier|volatile
name|u32
name|Pad10
decl_stmt|;
specifier|volatile
name|u32
name|Imc
decl_stmt|;
specifier|volatile
name|u8
name|Pad11
index|[
literal|0x24
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Rctl
decl_stmt|;
specifier|volatile
name|u32
name|Pad12
decl_stmt|;
specifier|volatile
name|u32
name|PadRdtr0
decl_stmt|;
specifier|volatile
name|u32
name|Pad13
decl_stmt|;
specifier|volatile
name|u32
name|PadRdbal0
decl_stmt|;
specifier|volatile
name|u32
name|PadRdbah0
decl_stmt|;
specifier|volatile
name|u32
name|PadRdlen0
decl_stmt|;
specifier|volatile
name|u32
name|Pad14
decl_stmt|;
specifier|volatile
name|u32
name|PadRdh0
decl_stmt|;
specifier|volatile
name|u32
name|Pad15
decl_stmt|;
specifier|volatile
name|u32
name|PadRdt0
decl_stmt|;
specifier|volatile
name|u32
name|Pad16
decl_stmt|;
specifier|volatile
name|u32
name|Rdtr1
decl_stmt|;
specifier|volatile
name|u32
name|Pad17
decl_stmt|;
specifier|volatile
name|u32
name|Rdbal1
decl_stmt|;
specifier|volatile
name|u32
name|Rdbah1
decl_stmt|;
specifier|volatile
name|u32
name|Rdlen1
decl_stmt|;
specifier|volatile
name|u32
name|Pad18
decl_stmt|;
specifier|volatile
name|u32
name|Rdh1
decl_stmt|;
specifier|volatile
name|u32
name|Pad19
decl_stmt|;
specifier|volatile
name|u32
name|Rdt1
decl_stmt|;
specifier|volatile
name|u8
name|Pad20
index|[
literal|0x0C
index|]
decl_stmt|;
specifier|volatile
name|u32
name|PadFcrth
decl_stmt|;
specifier|volatile
name|u32
name|Pad21
decl_stmt|;
specifier|volatile
name|u32
name|PadFcrtl
decl_stmt|;
specifier|volatile
name|u32
name|Pad22
decl_stmt|;
specifier|volatile
name|u32
name|Fcttv
decl_stmt|;
specifier|volatile
name|u32
name|Pad23
decl_stmt|;
specifier|volatile
name|u32
name|Txcw
decl_stmt|;
specifier|volatile
name|u32
name|Pad24
decl_stmt|;
specifier|volatile
name|u32
name|Rxcw
decl_stmt|;
specifier|volatile
name|u8
name|Pad25
index|[
literal|0x7C
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Mta
index|[
operator|(
literal|128
operator|)
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Tctl
decl_stmt|;
specifier|volatile
name|u32
name|Pad26
decl_stmt|;
specifier|volatile
name|u32
name|Tqsal
decl_stmt|;
specifier|volatile
name|u32
name|Tqsah
decl_stmt|;
specifier|volatile
name|u32
name|Tipg
decl_stmt|;
specifier|volatile
name|u32
name|Pad27
decl_stmt|;
specifier|volatile
name|u32
name|Tqc
decl_stmt|;
specifier|volatile
name|u32
name|Pad28
decl_stmt|;
specifier|volatile
name|u32
name|PadTdbal
decl_stmt|;
specifier|volatile
name|u32
name|PadTdbah
decl_stmt|;
specifier|volatile
name|u32
name|PadTdl
decl_stmt|;
specifier|volatile
name|u32
name|Pad29
decl_stmt|;
specifier|volatile
name|u32
name|PadTdh
decl_stmt|;
specifier|volatile
name|u32
name|Pad30
decl_stmt|;
specifier|volatile
name|u32
name|PadTdt
decl_stmt|;
specifier|volatile
name|u32
name|Pad31
decl_stmt|;
specifier|volatile
name|u32
name|PadTidv
decl_stmt|;
specifier|volatile
name|u32
name|Pad32
decl_stmt|;
specifier|volatile
name|u32
name|Tbt
decl_stmt|;
specifier|volatile
name|u8
name|Pad33
index|[
literal|0x0C
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Ait
decl_stmt|;
specifier|volatile
name|u8
name|Pad34
index|[
literal|0xA4
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Ftr
index|[
literal|8
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Fcr
decl_stmt|;
specifier|volatile
name|u32
name|Pad35
decl_stmt|;
specifier|volatile
name|u32
name|Trcr
decl_stmt|;
specifier|volatile
name|u8
name|Pad36
index|[
literal|0xD4
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Vfta
index|[
operator|(
literal|128
operator|)
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad37
index|[
literal|0x700
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Circ
decl_stmt|;
specifier|volatile
name|u8
name|Pad37a
index|[
literal|0xFC
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Pba
decl_stmt|;
specifier|volatile
name|u8
name|Pad38
index|[
literal|0xFFC
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad39
index|[
literal|0x8
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Ert
decl_stmt|;
specifier|volatile
name|u8
name|Pad40
index|[
literal|0xf4
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad41
index|[
literal|0x60
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Fcrtl
decl_stmt|;
specifier|volatile
name|u32
name|Pad42
decl_stmt|;
specifier|volatile
name|u32
name|Fcrth
decl_stmt|;
specifier|volatile
name|u8
name|Pad43
index|[
literal|0x294
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad44
index|[
literal|0x10
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Rdfh
decl_stmt|;
specifier|volatile
name|u32
name|Pad45
decl_stmt|;
specifier|volatile
name|u32
name|Rdft
decl_stmt|;
specifier|volatile
name|u32
name|Pad45a
decl_stmt|;
specifier|volatile
name|u32
name|Rdfhs
decl_stmt|;
specifier|volatile
name|u32
name|Pad45b
decl_stmt|;
specifier|volatile
name|u32
name|Rdfts
decl_stmt|;
specifier|volatile
name|u32
name|Pad45c
decl_stmt|;
specifier|volatile
name|u32
name|Rdfpc
decl_stmt|;
specifier|volatile
name|u8
name|Pad46
index|[
literal|0x3cc
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Rdbal0
decl_stmt|;
specifier|volatile
name|u32
name|Rdbah0
decl_stmt|;
specifier|volatile
name|u32
name|Rdlen0
decl_stmt|;
specifier|volatile
name|u32
name|Pad47
decl_stmt|;
specifier|volatile
name|u32
name|Rdh0
decl_stmt|;
specifier|volatile
name|u32
name|Pad48
decl_stmt|;
specifier|volatile
name|u32
name|Rdt0
decl_stmt|;
specifier|volatile
name|u32
name|Pad49
decl_stmt|;
specifier|volatile
name|u32
name|Rdtr0
decl_stmt|;
specifier|volatile
name|u32
name|Pad50
decl_stmt|;
specifier|volatile
name|u32
name|Rxdctl
decl_stmt|;
specifier|volatile
name|u32
name|Pad51
decl_stmt|;
specifier|volatile
name|u32
name|Rddh0
decl_stmt|;
specifier|volatile
name|u32
name|Pad52
decl_stmt|;
specifier|volatile
name|u32
name|Rddt0
decl_stmt|;
specifier|volatile
name|u8
name|Pad53
index|[
literal|0x7C4
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Txdmac
decl_stmt|;
specifier|volatile
name|u32
name|Pad54
decl_stmt|;
specifier|volatile
name|u32
name|Ett
decl_stmt|;
specifier|volatile
name|u8
name|Pad55
index|[
literal|0x3f4
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad56
index|[
literal|0x10
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Tdfh
decl_stmt|;
specifier|volatile
name|u32
name|Pad57
decl_stmt|;
specifier|volatile
name|u32
name|Tdft
decl_stmt|;
specifier|volatile
name|u32
name|Pad57a
decl_stmt|;
specifier|volatile
name|u32
name|Tdfhs
decl_stmt|;
specifier|volatile
name|u32
name|Pad57b
decl_stmt|;
specifier|volatile
name|u32
name|Tdfts
decl_stmt|;
specifier|volatile
name|u32
name|Pad57c
decl_stmt|;
specifier|volatile
name|u32
name|Tdfpc
decl_stmt|;
specifier|volatile
name|u8
name|Pad58
index|[
literal|0x3cc
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Tdbal
decl_stmt|;
specifier|volatile
name|u32
name|Tdbah
decl_stmt|;
specifier|volatile
name|u32
name|Tdl
decl_stmt|;
specifier|volatile
name|u32
name|Pad59
decl_stmt|;
specifier|volatile
name|u32
name|Tdh
decl_stmt|;
specifier|volatile
name|u32
name|Pad60
decl_stmt|;
specifier|volatile
name|u32
name|Tdt
decl_stmt|;
specifier|volatile
name|u32
name|Pad61
decl_stmt|;
specifier|volatile
name|u32
name|Tidv
decl_stmt|;
specifier|volatile
name|u32
name|Pad62
decl_stmt|;
specifier|volatile
name|u32
name|Txdctl
decl_stmt|;
specifier|volatile
name|u32
name|Pad63
decl_stmt|;
specifier|volatile
name|u32
name|Tddh
decl_stmt|;
specifier|volatile
name|u32
name|Pad64
decl_stmt|;
specifier|volatile
name|u32
name|Tddt
decl_stmt|;
specifier|volatile
name|u8
name|Pad65
index|[
literal|0x7C4
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Crcerrs
decl_stmt|;
specifier|volatile
name|u32
name|Algnerrc
decl_stmt|;
specifier|volatile
name|u32
name|Symerrs
decl_stmt|;
specifier|volatile
name|u32
name|Rxerrc
decl_stmt|;
specifier|volatile
name|u32
name|Mpc
decl_stmt|;
specifier|volatile
name|u32
name|Scc
decl_stmt|;
specifier|volatile
name|u32
name|Ecol
decl_stmt|;
specifier|volatile
name|u32
name|Mcc
decl_stmt|;
specifier|volatile
name|u32
name|Latecol
decl_stmt|;
specifier|volatile
name|u32
name|Pad66
decl_stmt|;
specifier|volatile
name|u32
name|Colc
decl_stmt|;
specifier|volatile
name|u32
name|Tuc
decl_stmt|;
specifier|volatile
name|u32
name|Dc
decl_stmt|;
specifier|volatile
name|u32
name|Tncrs
decl_stmt|;
specifier|volatile
name|u32
name|Sec
decl_stmt|;
specifier|volatile
name|u32
name|Cexterr
decl_stmt|;
specifier|volatile
name|u32
name|Rlec
decl_stmt|;
specifier|volatile
name|u32
name|Rutec
decl_stmt|;
specifier|volatile
name|u32
name|Xonrxc
decl_stmt|;
specifier|volatile
name|u32
name|Xontxc
decl_stmt|;
specifier|volatile
name|u32
name|Xoffrxc
decl_stmt|;
specifier|volatile
name|u32
name|Xofftxc
decl_stmt|;
specifier|volatile
name|u32
name|Fcruc
decl_stmt|;
specifier|volatile
name|u32
name|Prc64
decl_stmt|;
specifier|volatile
name|u32
name|Prc127
decl_stmt|;
specifier|volatile
name|u32
name|Prc255
decl_stmt|;
specifier|volatile
name|u32
name|Prc511
decl_stmt|;
specifier|volatile
name|u32
name|Prc1023
decl_stmt|;
specifier|volatile
name|u32
name|Prc1522
decl_stmt|;
specifier|volatile
name|u32
name|Gprc
decl_stmt|;
specifier|volatile
name|u32
name|Bprc
decl_stmt|;
specifier|volatile
name|u32
name|Mprc
decl_stmt|;
specifier|volatile
name|u32
name|Gptc
decl_stmt|;
specifier|volatile
name|u32
name|Pad67
decl_stmt|;
specifier|volatile
name|u32
name|Gorl
decl_stmt|;
specifier|volatile
name|u32
name|Gorh
decl_stmt|;
specifier|volatile
name|u32
name|Gotl
decl_stmt|;
specifier|volatile
name|u32
name|Goth
decl_stmt|;
specifier|volatile
name|u8
name|Pad68
index|[
literal|8
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Rnbc
decl_stmt|;
specifier|volatile
name|u32
name|Ruc
decl_stmt|;
specifier|volatile
name|u32
name|Rfc
decl_stmt|;
specifier|volatile
name|u32
name|Roc
decl_stmt|;
specifier|volatile
name|u32
name|Rjc
decl_stmt|;
specifier|volatile
name|u8
name|Pad69
index|[
literal|0xC
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Torl
decl_stmt|;
specifier|volatile
name|u32
name|Torh
decl_stmt|;
specifier|volatile
name|u32
name|Totl
decl_stmt|;
specifier|volatile
name|u32
name|Toth
decl_stmt|;
specifier|volatile
name|u32
name|Tpr
decl_stmt|;
specifier|volatile
name|u32
name|Tpt
decl_stmt|;
specifier|volatile
name|u32
name|Ptc64
decl_stmt|;
specifier|volatile
name|u32
name|Ptc127
decl_stmt|;
specifier|volatile
name|u32
name|Ptc255
decl_stmt|;
specifier|volatile
name|u32
name|Ptc511
decl_stmt|;
specifier|volatile
name|u32
name|Ptc1023
decl_stmt|;
specifier|volatile
name|u32
name|Ptc1522
decl_stmt|;
specifier|volatile
name|u32
name|Mptc
decl_stmt|;
specifier|volatile
name|u32
name|Bptc
decl_stmt|;
specifier|volatile
name|u32
name|Tsctc
decl_stmt|;
specifier|volatile
name|u32
name|Tsctfc
decl_stmt|;
specifier|volatile
name|u8
name|Pad70
index|[
literal|0x0F00
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Rxcsum
decl_stmt|;
specifier|volatile
name|u8
name|Pad71
index|[
literal|0x07FC
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Wuc
decl_stmt|;
specifier|volatile
name|u32
name|Pad72
decl_stmt|;
specifier|volatile
name|u32
name|Wufc
decl_stmt|;
specifier|volatile
name|u32
name|Pad73
decl_stmt|;
specifier|volatile
name|u32
name|Wus
decl_stmt|;
specifier|volatile
name|u8
name|Pad74
index|[
literal|0x24
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Ipav
decl_stmt|;
specifier|volatile
name|u32
name|Pad75
decl_stmt|;
name|IPAT_ENTRY
name|Ipat
index|[
operator|(
literal|4
operator|)
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad76
index|[
literal|0xA0
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Wupl
decl_stmt|;
specifier|volatile
name|u8
name|Pad77
index|[
literal|0xFC
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Wupm
index|[
literal|0x80
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad78
index|[
literal|0x480
index|]
decl_stmt|;
name|FFLT_ENTRY
name|Fflt
index|[
operator|(
literal|4
operator|)
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad79
index|[
literal|0x20E0
index|]
decl_stmt|;
specifier|volatile
name|u32
name|PadRdfh
decl_stmt|;
specifier|volatile
name|u32
name|Pad80
decl_stmt|;
specifier|volatile
name|u32
name|PadRdft
decl_stmt|;
specifier|volatile
name|u32
name|Pad81
decl_stmt|;
specifier|volatile
name|u32
name|PadTdfh
decl_stmt|;
specifier|volatile
name|u32
name|Pad82
decl_stmt|;
specifier|volatile
name|u32
name|PadTdft
decl_stmt|;
specifier|volatile
name|u8
name|Pad83
index|[
literal|0xFE4
index|]
decl_stmt|;
name|FFMT_ENTRY
name|Ffmt
index|[
operator|(
literal|128
operator|)
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad84
index|[
literal|0x0400
index|]
decl_stmt|;
name|FFVT_ENTRY
name|Ffvt
index|[
operator|(
literal|128
operator|)
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad85
index|[
literal|0x6400
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Pbm
index|[
literal|0x4000
index|]
decl_stmt|;
block|}
name|E1000_REGISTERS
operator|,
typedef|*
name|PE1000_REGISTERS
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_OLD_REGISTERS
block|{
specifier|volatile
name|u32
name|Ctrl
decl_stmt|;
specifier|volatile
name|u32
name|Pad1
decl_stmt|;
specifier|volatile
name|u32
name|Status
decl_stmt|;
specifier|volatile
name|u32
name|Pad2
decl_stmt|;
specifier|volatile
name|u32
name|Eecd
decl_stmt|;
specifier|volatile
name|u32
name|Pad3
decl_stmt|;
specifier|volatile
name|u32
name|Exct
decl_stmt|;
specifier|volatile
name|u32
name|Pad4
decl_stmt|;
specifier|volatile
name|u32
name|Mdic
decl_stmt|;
specifier|volatile
name|u32
name|Pad5
decl_stmt|;
specifier|volatile
name|u32
name|Fcal
decl_stmt|;
specifier|volatile
name|u32
name|Fcah
decl_stmt|;
specifier|volatile
name|u32
name|Fct
decl_stmt|;
specifier|volatile
name|u32
name|Pad6
decl_stmt|;
specifier|volatile
name|u32
name|Vet
decl_stmt|;
specifier|volatile
name|u32
name|Pad7
decl_stmt|;
name|RECEIVE_ADDRESS_REGISTER_PAIR
name|Rar
index|[
literal|16
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Icr
decl_stmt|;
specifier|volatile
name|u32
name|Pad8
decl_stmt|;
specifier|volatile
name|u32
name|Ics
decl_stmt|;
specifier|volatile
name|u32
name|Pad9
decl_stmt|;
specifier|volatile
name|u32
name|Ims
decl_stmt|;
specifier|volatile
name|u32
name|Pad10
decl_stmt|;
specifier|volatile
name|u32
name|Imc
decl_stmt|;
specifier|volatile
name|u8
name|Pad11
index|[
literal|0x24
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Rctl
decl_stmt|;
specifier|volatile
name|u32
name|Pad12
decl_stmt|;
specifier|volatile
name|u32
name|Rdtr0
decl_stmt|;
specifier|volatile
name|u32
name|Pad13
decl_stmt|;
specifier|volatile
name|u32
name|Rdbal0
decl_stmt|;
specifier|volatile
name|u32
name|Rdbah0
decl_stmt|;
specifier|volatile
name|u32
name|Rdlen0
decl_stmt|;
specifier|volatile
name|u32
name|Pad14
decl_stmt|;
specifier|volatile
name|u32
name|Rdh0
decl_stmt|;
specifier|volatile
name|u32
name|Pad15
decl_stmt|;
specifier|volatile
name|u32
name|Rdt0
decl_stmt|;
specifier|volatile
name|u32
name|Pad16
decl_stmt|;
specifier|volatile
name|u32
name|Rdtr1
decl_stmt|;
specifier|volatile
name|u32
name|Pad17
decl_stmt|;
specifier|volatile
name|u32
name|Rdbal1
decl_stmt|;
specifier|volatile
name|u32
name|Rdbah1
decl_stmt|;
specifier|volatile
name|u32
name|Rdlen1
decl_stmt|;
specifier|volatile
name|u32
name|Pad18
decl_stmt|;
specifier|volatile
name|u32
name|Rdh1
decl_stmt|;
specifier|volatile
name|u32
name|Pad19
decl_stmt|;
specifier|volatile
name|u32
name|Rdt1
decl_stmt|;
specifier|volatile
name|u8
name|Pad20
index|[
literal|0x0C
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Fcrth
decl_stmt|;
specifier|volatile
name|u32
name|Pad21
decl_stmt|;
specifier|volatile
name|u32
name|Fcrtl
decl_stmt|;
specifier|volatile
name|u32
name|Pad22
decl_stmt|;
specifier|volatile
name|u32
name|Fcttv
decl_stmt|;
specifier|volatile
name|u32
name|Pad23
decl_stmt|;
specifier|volatile
name|u32
name|Txcw
decl_stmt|;
specifier|volatile
name|u32
name|Pad24
decl_stmt|;
specifier|volatile
name|u32
name|Rxcw
decl_stmt|;
specifier|volatile
name|u8
name|Pad25
index|[
literal|0x7C
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Mta
index|[
operator|(
literal|128
operator|)
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Tctl
decl_stmt|;
specifier|volatile
name|u32
name|Pad26
decl_stmt|;
specifier|volatile
name|u32
name|Tqsal
decl_stmt|;
specifier|volatile
name|u32
name|Tqsah
decl_stmt|;
specifier|volatile
name|u32
name|Tipg
decl_stmt|;
specifier|volatile
name|u32
name|Pad27
decl_stmt|;
specifier|volatile
name|u32
name|Tqc
decl_stmt|;
specifier|volatile
name|u32
name|Pad28
decl_stmt|;
specifier|volatile
name|u32
name|Tdbal
decl_stmt|;
specifier|volatile
name|u32
name|Tdbah
decl_stmt|;
specifier|volatile
name|u32
name|Tdl
decl_stmt|;
specifier|volatile
name|u32
name|Pad29
decl_stmt|;
specifier|volatile
name|u32
name|Tdh
decl_stmt|;
specifier|volatile
name|u32
name|Pad30
decl_stmt|;
specifier|volatile
name|u32
name|Tdt
decl_stmt|;
specifier|volatile
name|u32
name|Pad31
decl_stmt|;
specifier|volatile
name|u32
name|Tidv
decl_stmt|;
specifier|volatile
name|u32
name|Pad32
decl_stmt|;
specifier|volatile
name|u32
name|Tbt
decl_stmt|;
specifier|volatile
name|u8
name|Pad33
index|[
literal|0x0C
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Ait
decl_stmt|;
specifier|volatile
name|u8
name|Pad34
index|[
literal|0xA4
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Ftr
index|[
literal|8
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Fcr
decl_stmt|;
specifier|volatile
name|u32
name|Pad35
decl_stmt|;
specifier|volatile
name|u32
name|Trcr
decl_stmt|;
specifier|volatile
name|u8
name|Pad36
index|[
literal|0xD4
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Vfta
index|[
operator|(
literal|128
operator|)
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad37
index|[
literal|0x700
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Circ
decl_stmt|;
specifier|volatile
name|u8
name|Pad37a
index|[
literal|0xFC
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Pba
decl_stmt|;
specifier|volatile
name|u8
name|Pad38
index|[
literal|0xFFC
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad39
index|[
literal|0x8
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Ert
decl_stmt|;
specifier|volatile
name|u8
name|Pad40
index|[
literal|0x1C
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Rxdctl
decl_stmt|;
specifier|volatile
name|u8
name|Pad41
index|[
literal|0xFD4
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Txdmac
decl_stmt|;
specifier|volatile
name|u32
name|Pad42
decl_stmt|;
specifier|volatile
name|u32
name|Ett
decl_stmt|;
specifier|volatile
name|u8
name|Pad43
index|[
literal|0x1C
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Txdctl
decl_stmt|;
specifier|volatile
name|u8
name|Pad44
index|[
literal|0xFD4
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Crcerrs
decl_stmt|;
specifier|volatile
name|u32
name|Algnerrc
decl_stmt|;
specifier|volatile
name|u32
name|Symerrs
decl_stmt|;
specifier|volatile
name|u32
name|Rxerrc
decl_stmt|;
specifier|volatile
name|u32
name|Mpc
decl_stmt|;
specifier|volatile
name|u32
name|Scc
decl_stmt|;
specifier|volatile
name|u32
name|Ecol
decl_stmt|;
specifier|volatile
name|u32
name|Mcc
decl_stmt|;
specifier|volatile
name|u32
name|Latecol
decl_stmt|;
specifier|volatile
name|u32
name|Pad45
decl_stmt|;
specifier|volatile
name|u32
name|Colc
decl_stmt|;
specifier|volatile
name|u32
name|Tuc
decl_stmt|;
specifier|volatile
name|u32
name|Dc
decl_stmt|;
specifier|volatile
name|u32
name|Tncrs
decl_stmt|;
specifier|volatile
name|u32
name|Sec
decl_stmt|;
specifier|volatile
name|u32
name|Cexterr
decl_stmt|;
specifier|volatile
name|u32
name|Rlec
decl_stmt|;
specifier|volatile
name|u32
name|Rutec
decl_stmt|;
specifier|volatile
name|u32
name|Xonrxc
decl_stmt|;
specifier|volatile
name|u32
name|Xontxc
decl_stmt|;
specifier|volatile
name|u32
name|Xoffrxc
decl_stmt|;
specifier|volatile
name|u32
name|Xofftxc
decl_stmt|;
specifier|volatile
name|u32
name|Fcruc
decl_stmt|;
specifier|volatile
name|u32
name|Prc64
decl_stmt|;
specifier|volatile
name|u32
name|Prc127
decl_stmt|;
specifier|volatile
name|u32
name|Prc255
decl_stmt|;
specifier|volatile
name|u32
name|Prc511
decl_stmt|;
specifier|volatile
name|u32
name|Prc1023
decl_stmt|;
specifier|volatile
name|u32
name|Prc1522
decl_stmt|;
specifier|volatile
name|u32
name|Gprc
decl_stmt|;
specifier|volatile
name|u32
name|Bprc
decl_stmt|;
specifier|volatile
name|u32
name|Mprc
decl_stmt|;
specifier|volatile
name|u32
name|Gptc
decl_stmt|;
specifier|volatile
name|u32
name|Pad46
decl_stmt|;
specifier|volatile
name|u32
name|Gorl
decl_stmt|;
specifier|volatile
name|u32
name|Gorh
decl_stmt|;
specifier|volatile
name|u32
name|Gotl
decl_stmt|;
specifier|volatile
name|u32
name|Goth
decl_stmt|;
specifier|volatile
name|u8
name|Pad47
index|[
literal|8
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Rnbc
decl_stmt|;
specifier|volatile
name|u32
name|Ruc
decl_stmt|;
specifier|volatile
name|u32
name|Rfc
decl_stmt|;
specifier|volatile
name|u32
name|Roc
decl_stmt|;
specifier|volatile
name|u32
name|Rjc
decl_stmt|;
specifier|volatile
name|u8
name|Pad48
index|[
literal|0xC
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Torl
decl_stmt|;
specifier|volatile
name|u32
name|Torh
decl_stmt|;
specifier|volatile
name|u32
name|Totl
decl_stmt|;
specifier|volatile
name|u32
name|Toth
decl_stmt|;
specifier|volatile
name|u32
name|Tpr
decl_stmt|;
specifier|volatile
name|u32
name|Tpt
decl_stmt|;
specifier|volatile
name|u32
name|Ptc64
decl_stmt|;
specifier|volatile
name|u32
name|Ptc127
decl_stmt|;
specifier|volatile
name|u32
name|Ptc255
decl_stmt|;
specifier|volatile
name|u32
name|Ptc511
decl_stmt|;
specifier|volatile
name|u32
name|Ptc1023
decl_stmt|;
specifier|volatile
name|u32
name|Ptc1522
decl_stmt|;
specifier|volatile
name|u32
name|Mptc
decl_stmt|;
specifier|volatile
name|u32
name|Bptc
decl_stmt|;
specifier|volatile
name|u32
name|Tsctc
decl_stmt|;
specifier|volatile
name|u32
name|Tsctfc
decl_stmt|;
specifier|volatile
name|u8
name|Pad49
index|[
literal|0x0F00
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Rxcsum
decl_stmt|;
specifier|volatile
name|u8
name|Pad50
index|[
literal|0x07FC
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Wuc
decl_stmt|;
specifier|volatile
name|u32
name|Pad51
decl_stmt|;
specifier|volatile
name|u32
name|Wufc
decl_stmt|;
specifier|volatile
name|u32
name|Pad52
decl_stmt|;
specifier|volatile
name|u32
name|Wus
decl_stmt|;
specifier|volatile
name|u8
name|Pad53
index|[
literal|0x24
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Ipav
decl_stmt|;
specifier|volatile
name|u32
name|Pad54
decl_stmt|;
name|IPAT_ENTRY
name|Ipat
index|[
operator|(
literal|4
operator|)
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad55
index|[
literal|0xA0
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Wupl
decl_stmt|;
specifier|volatile
name|u8
name|Pad56
index|[
literal|0xFC
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Wupm
index|[
literal|0x80
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad57
index|[
literal|0x480
index|]
decl_stmt|;
name|FFLT_ENTRY
name|Fflt
index|[
operator|(
literal|4
operator|)
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad58
index|[
literal|0x20E0
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Rdfh
decl_stmt|;
specifier|volatile
name|u32
name|Pad59
decl_stmt|;
specifier|volatile
name|u32
name|Rdft
decl_stmt|;
specifier|volatile
name|u32
name|Pad60
decl_stmt|;
specifier|volatile
name|u32
name|Tdfh
decl_stmt|;
specifier|volatile
name|u32
name|Pad61
decl_stmt|;
specifier|volatile
name|u32
name|Tdft
decl_stmt|;
specifier|volatile
name|u32
name|Pad62
decl_stmt|;
specifier|volatile
name|u32
name|Tdfhs
decl_stmt|;
specifier|volatile
name|u32
name|Pad63
decl_stmt|;
specifier|volatile
name|u32
name|Tdfts
decl_stmt|;
specifier|volatile
name|u32
name|Pad64
decl_stmt|;
specifier|volatile
name|u32
name|Tdfpc
decl_stmt|;
specifier|volatile
name|u8
name|Pad65
index|[
literal|0x0FCC
index|]
decl_stmt|;
name|FFMT_ENTRY
name|Ffmt
index|[
operator|(
literal|128
operator|)
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad66
index|[
literal|0x0400
index|]
decl_stmt|;
name|FFVT_ENTRY
name|Ffvt
index|[
operator|(
literal|128
operator|)
index|]
decl_stmt|;
specifier|volatile
name|u8
name|Pad67
index|[
literal|0x6400
index|]
decl_stmt|;
specifier|volatile
name|u32
name|Pbm
index|[
literal|0x4000
index|]
decl_stmt|;
block|}
name|OLD_REGISTERS
operator|,
typedef|*
name|POLD_REGISTERS
typedef|;
end_typedef

begin_define
define|#
directive|define
name|E1000_EEPROM_SWDPIN0
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_EEPROM_LED_LOGIC
value|(0x0020)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_FD
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_BEM
value|(0x00000002)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_PRIOR
value|(0x00000004)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_LRST
value|(0x00000008)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_TME
value|(0x00000010)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SLE
value|(0x00000020)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_ASDE
value|(0x00000020)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SLU
value|(0x00000040)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_ILOS
value|(0x00000080)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SPD_SEL
value|(0x00000300)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SPD_10
value|(0x00000000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SPD_100
value|(0x00000100)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SPD_1000
value|(0x00000200)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_BEM32
value|(0x00000400)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_FRCSPD
value|(0x00000800)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_FRCDPX
value|(0x00001000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SWDPIN0
value|(0x00040000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SWDPIN1
value|(0x00080000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SWDPIN2
value|(0x00100000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SWDPIN3
value|(0x00200000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SWDPIO0
value|(0x00400000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SWDPIO1
value|(0x00800000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SWDPIO2
value|(0x01000000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_SWDPIO3
value|(0x02000000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_RST
value|(0x04000000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_RFCE
value|(0x08000000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_TFCE
value|(0x10000000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_RTE
value|(0x20000000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_VME
value|(0x40000000)
end_define

begin_define
define|#
directive|define
name|E1000_CTRL_PHY_RST
value|(0x80000000)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_FD
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_LU
value|(0x00000002)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_TCKOK
value|(0x00000004)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_RBCOK
value|(0x00000008)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_TXOFF
value|(0x00000010)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_TBIMODE
value|(0x00000020)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_SPEED_10
value|(0x00000000)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_SPEED_100
value|(0x00000040)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_SPEED_1000
value|(0x00000080)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_ASDV
value|(0x00000300)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_MTXCKOK
value|(0x00000400)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_PCI66
value|(0x00000800)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_BUS64
value|(0x00001000)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_PCIX_MODE
value|(0x00002000)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_PCIX_SPEED
value|(0x0000C000)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_PCIX_SPEED_66
value|(0x00000000)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_PCIX_SPEED_100
value|(0x00004000)
end_define

begin_define
define|#
directive|define
name|E1000_STATUS_PCIX_SPEED_133
value|(0x00008000)
end_define

begin_define
define|#
directive|define
name|E1000_EESK
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_EECS
value|(0x00000002)
end_define

begin_define
define|#
directive|define
name|E1000_EEDI
value|(0x00000004)
end_define

begin_define
define|#
directive|define
name|E1000_EEDO
value|(0x00000008)
end_define

begin_define
define|#
directive|define
name|E1000_FLASH_WRITE_DIS
value|(0x00000010)
end_define

begin_define
define|#
directive|define
name|E1000_FLASH_WRITE_EN
value|(0x00000020)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_GPI_EN0
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_GPI_EN1
value|(0x00000002)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_GPI_EN2
value|(0x00000004)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_GPI_EN3
value|(0x00000008)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_SWDPIN4
value|(0x00000010)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_SWDPIN5
value|(0x00000020)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_SWDPIN6
value|(0x00000040)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_SWDPIN7
value|(0x00000080)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_SWDPIO4
value|(0x00000100)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_SWDPIO5
value|(0x00000200)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_SWDPIO6
value|(0x00000400)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_SWDPIO7
value|(0x00000800)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_ASDCHK
value|(0x00001000)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_EE_RST
value|(0x00002000)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_IPS
value|(0x00004000)
end_define

begin_define
define|#
directive|define
name|E1000_EXCTRL_SPD_BYPS
value|(0x00008000)
end_define

begin_define
define|#
directive|define
name|E1000_MDI_WRITE
value|(0x04000000)
end_define

begin_define
define|#
directive|define
name|E1000_MDI_READ
value|(0x08000000)
end_define

begin_define
define|#
directive|define
name|E1000_MDI_READY
value|(0x10000000)
end_define

begin_define
define|#
directive|define
name|E1000_MDI_INT
value|(0x20000000)
end_define

begin_define
define|#
directive|define
name|E1000_MDI_ERR
value|(0x40000000)
end_define

begin_define
define|#
directive|define
name|E1000_RAH_RDR
value|(0x40000000)
end_define

begin_define
define|#
directive|define
name|E1000_RAH_AV
value|(0x80000000)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_TXDW
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_TXQE
value|(0x00000002)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_LSC
value|(0x00000004)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_RXSEQ
value|(0x00000008)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_RXDMT0
value|(0x00000010)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_RXDMT1
value|(0x00000020)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_RXO
value|(0x00000040)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_RXT0
value|(0x00000080)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_RXT1
value|(0x00000100)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_MDAC
value|(0x00000200)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_RXCFG
value|(0x00000400)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_GPI_EN0
value|(0x00000800)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_GPI_EN1
value|(0x00001000)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_GPI_EN2
value|(0x00002000)
end_define

begin_define
define|#
directive|define
name|E1000_ICR_GPI_EN3
value|(0x00004000)
end_define

begin_define
define|#
directive|define
name|E1000_ICS_TXDW
value|E1000_ICR_TXDW
end_define

begin_define
define|#
directive|define
name|E1000_ICS_TXQE
value|E1000_ICR_TXQE
end_define

begin_define
define|#
directive|define
name|E1000_ICS_LSC
value|E1000_ICR_LSC
end_define

begin_define
define|#
directive|define
name|E1000_ICS_RXSEQ
value|E1000_ICR_RXSEQ
end_define

begin_define
define|#
directive|define
name|E1000_ICS_RXDMT0
value|E1000_ICR_RXDMT0
end_define

begin_define
define|#
directive|define
name|E1000_ICS_RXDMT1
value|E1000_ICR_RXDMT1
end_define

begin_define
define|#
directive|define
name|E1000_ICS_RXO
value|E1000_ICR_RXO
end_define

begin_define
define|#
directive|define
name|E1000_ICS_RXT0
value|E1000_ICR_RXT0
end_define

begin_define
define|#
directive|define
name|E1000_ICS_RXT1
value|E1000_ICR_RXT1
end_define

begin_define
define|#
directive|define
name|E1000_ICS_MDAC
value|E1000_ICR_MDAC
end_define

begin_define
define|#
directive|define
name|E1000_ICS_RXCFG
value|E1000_ICR_RXCFG
end_define

begin_define
define|#
directive|define
name|E1000_ICS_GPI_EN0
value|E1000_ICR_GPI_EN0
end_define

begin_define
define|#
directive|define
name|E1000_ICS_GPI_EN1
value|E1000_ICR_GPI_EN1
end_define

begin_define
define|#
directive|define
name|E1000_ICS_GPI_EN2
value|E1000_ICR_GPI_EN2
end_define

begin_define
define|#
directive|define
name|E1000_ICS_GPI_EN3
value|E1000_ICR_GPI_EN3
end_define

begin_define
define|#
directive|define
name|E1000_IMS_TXDW
value|E1000_ICR_TXDW
end_define

begin_define
define|#
directive|define
name|E1000_IMS_TXQE
value|E1000_ICR_TXQE
end_define

begin_define
define|#
directive|define
name|E1000_IMS_LSC
value|E1000_ICR_LSC
end_define

begin_define
define|#
directive|define
name|E1000_IMS_RXSEQ
value|E1000_ICR_RXSEQ
end_define

begin_define
define|#
directive|define
name|E1000_IMS_RXDMT0
value|E1000_ICR_RXDMT0
end_define

begin_define
define|#
directive|define
name|E1000_IMS_RXDMT1
value|E1000_ICR_RXDMT1
end_define

begin_define
define|#
directive|define
name|E1000_IMS_RXO
value|E1000_ICR_RXO
end_define

begin_define
define|#
directive|define
name|E1000_IMS_RXT0
value|E1000_ICR_RXT0
end_define

begin_define
define|#
directive|define
name|E1000_IMS_RXT1
value|E1000_ICR_RXT1
end_define

begin_define
define|#
directive|define
name|E1000_IMS_MDAC
value|E1000_ICR_MDAC
end_define

begin_define
define|#
directive|define
name|E1000_IMS_RXCFG
value|E1000_ICR_RXCFG
end_define

begin_define
define|#
directive|define
name|E1000_IMS_GPI_EN0
value|E1000_ICR_GPI_EN0
end_define

begin_define
define|#
directive|define
name|E1000_IMS_GPI_EN1
value|E1000_ICR_GPI_EN1
end_define

begin_define
define|#
directive|define
name|E1000_IMS_GPI_EN2
value|E1000_ICR_GPI_EN2
end_define

begin_define
define|#
directive|define
name|E1000_IMS_GPI_EN3
value|E1000_ICR_GPI_EN3
end_define

begin_define
define|#
directive|define
name|E1000_IMC_TXDW
value|E1000_ICR_TXDW
end_define

begin_define
define|#
directive|define
name|E1000_IMC_TXQE
value|E1000_ICR_TXQE
end_define

begin_define
define|#
directive|define
name|E1000_IMC_LSC
value|E1000_ICR_LSC
end_define

begin_define
define|#
directive|define
name|E1000_IMC_RXSEQ
value|E1000_ICR_RXSEQ
end_define

begin_define
define|#
directive|define
name|E1000_IMC_RXDMT0
value|E1000_ICR_RXDMT0
end_define

begin_define
define|#
directive|define
name|E1000_IMC_RXDMT1
value|E1000_ICR_RXDMT1
end_define

begin_define
define|#
directive|define
name|E1000_IMC_RXO
value|E1000_ICR_RXO
end_define

begin_define
define|#
directive|define
name|E1000_IMC_RXT0
value|E1000_ICR_RXT0
end_define

begin_define
define|#
directive|define
name|E1000_IMC_RXT1
value|E1000_ICR_RXT1
end_define

begin_define
define|#
directive|define
name|E1000_IMC_MDAC
value|E1000_ICR_MDAC
end_define

begin_define
define|#
directive|define
name|E1000_IMC_RXCFG
value|E1000_ICR_RXCFG
end_define

begin_define
define|#
directive|define
name|E1000_IMC_GPI_EN0
value|E1000_ICR_GPI_EN0
end_define

begin_define
define|#
directive|define
name|E1000_IMC_GPI_EN1
value|E1000_ICR_GPI_EN1
end_define

begin_define
define|#
directive|define
name|E1000_IMC_GPI_EN2
value|E1000_ICR_GPI_EN2
end_define

begin_define
define|#
directive|define
name|E1000_IMC_GPI_EN3
value|E1000_ICR_GPI_EN3
end_define

begin_define
define|#
directive|define
name|E1000_TINT_RINT_PCI
value|(E1000_TXDW|E1000_ICR_RXT0)
end_define

begin_define
define|#
directive|define
name|E1000_CAUSE_ERR
value|(E1000_ICR_RXSEQ|E1000_ICR_RXO)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_RST
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_EN
value|(0x00000002)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_SBP
value|(0x00000004)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_UPE
value|(0x00000008)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_MPE
value|(0x00000010)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_LPE
value|(0x00000020)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_LBM_NO
value|(0x00000000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_LBM_MAC
value|(0x00000040)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_LBM_SLP
value|(0x00000080)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_LBM_TCVR
value|(0x000000c0)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_RDMTS0_HALF
value|(0x00000000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_RDMTS0_QUAT
value|(0x00000100)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_RDMTS0_EIGTH
value|(0x00000200)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_RDMTS1_HALF
value|(0x00000000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_RDMTS1_QUAT
value|(0x00000400)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_RDMTS1_EIGTH
value|(0x00000800)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_MO_SHIFT
value|12
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_MO_0
value|(0x00000000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_MO_1
value|(0x00001000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_MO_2
value|(0x00002000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_MO_3
value|(0x00003000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_MDR
value|(0x00004000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_BAM
value|(0x00008000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_SZ_2048
value|(0x00000000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_SZ_1024
value|(0x00010000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_SZ_512
value|(0x00020000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_SZ_256
value|(0x00030000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_SZ_16384
value|(0x00010000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_SZ_8192
value|(0x00020000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_SZ_4096
value|(0x00030000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_VFE
value|(0x00040000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_CFIEN
value|(0x00080000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_CFI
value|(0x00100000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_ISLE
value|(0x00200000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_DPF
value|(0x00400000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_PMCF
value|(0x00800000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_SISLH
value|(0x01000000)
end_define

begin_define
define|#
directive|define
name|E1000_RCTL_BSEX
value|(0x02000000)
end_define

begin_define
define|#
directive|define
name|E1000_RDT0_DELAY
value|(0x0000ffff)
end_define

begin_define
define|#
directive|define
name|E1000_RDT0_FPDB
value|(0x80000000)
end_define

begin_define
define|#
directive|define
name|E1000_RDT1_DELAY
value|(0x0000ffff)
end_define

begin_define
define|#
directive|define
name|E1000_RDT1_FPDB
value|(0x80000000)
end_define

begin_define
define|#
directive|define
name|E1000_RDLEN0_LEN
value|(0x0007ff80)
end_define

begin_define
define|#
directive|define
name|E1000_RDLEN1_LEN
value|(0x0007ff80)
end_define

begin_define
define|#
directive|define
name|E1000_RDH0_RDH
value|(0x0000ffff)
end_define

begin_define
define|#
directive|define
name|E1000_RDH1_RDH
value|(0x0000ffff)
end_define

begin_define
define|#
directive|define
name|E1000_RDT0_RDT
value|(0x0000ffff)
end_define

begin_define
define|#
directive|define
name|E1000_FCRTH_RTH
value|(0x0000FFF8)
end_define

begin_define
define|#
directive|define
name|E1000_FCRTH_XFCE
value|(0x80000000)
end_define

begin_define
define|#
directive|define
name|E1000_FCRTL_RTL
value|(0x0000FFF8)
end_define

begin_define
define|#
directive|define
name|E1000_FCRTL_XONE
value|(0x80000000)
end_define

begin_define
define|#
directive|define
name|E1000_RXDCTL_PTHRESH
value|0x0000003F
end_define

begin_define
define|#
directive|define
name|E1000_RXDCTL_HTHRESH
value|0x00003F00
end_define

begin_define
define|#
directive|define
name|E1000_RXDCTL_WTHRESH
value|0x003F0000
end_define

begin_define
define|#
directive|define
name|E1000_RXDCTL_GRAN
value|0x01000000
end_define

begin_define
define|#
directive|define
name|E1000_TXDCTL_PTHRESH
value|0x000000FF
end_define

begin_define
define|#
directive|define
name|E1000_TXDCTL_HTHRESH
value|0x0000FF00
end_define

begin_define
define|#
directive|define
name|E1000_TXDCTL_WTHRESH
value|0x00FF0000
end_define

begin_define
define|#
directive|define
name|E1000_TXDCTL_GRAN
value|0x01000000
end_define

begin_define
define|#
directive|define
name|E1000_TXCW_FD
value|(0x00000020)
end_define

begin_define
define|#
directive|define
name|E1000_TXCW_HD
value|(0x00000040)
end_define

begin_define
define|#
directive|define
name|E1000_TXCW_PAUSE
value|(0x00000080)
end_define

begin_define
define|#
directive|define
name|E1000_TXCW_ASM_DIR
value|(0x00000100)
end_define

begin_define
define|#
directive|define
name|E1000_TXCW_PAUSE_MASK
value|(0x00000180)
end_define

begin_define
define|#
directive|define
name|E1000_TXCW_RF
value|(0x00003000)
end_define

begin_define
define|#
directive|define
name|E1000_TXCW_NP
value|(0x00008000)
end_define

begin_define
define|#
directive|define
name|E1000_TXCW_CW
value|(0x0000ffff)
end_define

begin_define
define|#
directive|define
name|E1000_TXCW_TXC
value|(0x40000000)
end_define

begin_define
define|#
directive|define
name|E1000_TXCW_ANE
value|(0x80000000)
end_define

begin_define
define|#
directive|define
name|E1000_RXCW_CW
value|(0x0000ffff)
end_define

begin_define
define|#
directive|define
name|E1000_RXCW_NC
value|(0x04000000)
end_define

begin_define
define|#
directive|define
name|E1000_RXCW_IV
value|(0x08000000)
end_define

begin_define
define|#
directive|define
name|E1000_RXCW_CC
value|(0x10000000)
end_define

begin_define
define|#
directive|define
name|E1000_RXCW_C
value|(0x20000000)
end_define

begin_define
define|#
directive|define
name|E1000_RXCW_SYNCH
value|(0x40000000)
end_define

begin_define
define|#
directive|define
name|E1000_RXCW_ANC
value|(0x80000000)
end_define

begin_define
define|#
directive|define
name|E1000_TCTL_RST
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_TCTL_EN
value|(0x00000002)
end_define

begin_define
define|#
directive|define
name|E1000_TCTL_BCE
value|(0x00000004)
end_define

begin_define
define|#
directive|define
name|E1000_TCTL_PSP
value|(0x00000008)
end_define

begin_define
define|#
directive|define
name|E1000_TCTL_CT
value|(0x00000ff0)
end_define

begin_define
define|#
directive|define
name|E1000_TCTL_COLD
value|(0x003ff000)
end_define

begin_define
define|#
directive|define
name|E1000_TCTL_SWXOFF
value|(0x00400000)
end_define

begin_define
define|#
directive|define
name|E1000_TCTL_PBE
value|(0x00800000)
end_define

begin_define
define|#
directive|define
name|E1000_TCTL_RTLC
value|(0x01000000)
end_define

begin_define
define|#
directive|define
name|E1000_TCTL_NRTU
value|(0x02000000)
end_define

begin_define
define|#
directive|define
name|E1000_TQSAL_TQSAL
value|(0xffffffc0)
end_define

begin_define
define|#
directive|define
name|E1000_TQSAH_TQSAH
value|(0xffffffff)
end_define

begin_define
define|#
directive|define
name|E1000_TQC_SQ
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_TQC_RQ
value|(0x00000002)
end_define

begin_define
define|#
directive|define
name|E1000_TDBAL_TDBAL
value|(0xfffff000)
end_define

begin_define
define|#
directive|define
name|E1000_TDBAH_TDBAH
value|(0xffffffff)
end_define

begin_define
define|#
directive|define
name|E1000_TDL_LEN
value|(0x0007ff80)
end_define

begin_define
define|#
directive|define
name|E1000_TDH_TDH
value|(0x0000ffff)
end_define

begin_define
define|#
directive|define
name|E1000_TDT_TDT
value|(0x0000ffff)
end_define

begin_define
define|#
directive|define
name|E1000_RXCSUM_PCSS
value|(0x000000ff)
end_define

begin_define
define|#
directive|define
name|E1000_RXCSUM_IPOFL
value|(0x00000100)
end_define

begin_define
define|#
directive|define
name|E1000_RXCSUM_TUOFL
value|(0x00000200)
end_define

begin_define
define|#
directive|define
name|E1000_WUC_APME
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_WUC_PME_EN
value|(0x00000002)
end_define

begin_define
define|#
directive|define
name|E1000_WUC_PME_STATUS
value|(0x00000004)
end_define

begin_define
define|#
directive|define
name|E1000_WUC_APMPME
value|(0x00000008)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_LNKC
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_MAG
value|(0x00000002)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_EX
value|(0x00000004)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_MC
value|(0x00000008)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_BC
value|(0x00000010)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_ARP
value|(0x00000020)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_IP
value|(0x00000040)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_FLX0
value|(0x00010000)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_FLX1
value|(0x00020000)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_FLX2
value|(0x00040000)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_FLX3
value|(0x00080000)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_ALL_FILTERS
value|(0x000F007F)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_FLX_OFFSET
value|(16)
end_define

begin_define
define|#
directive|define
name|E1000_WUFC_FLX_FILTERS
value|(0x000F0000)
end_define

begin_define
define|#
directive|define
name|E1000_WUS_LNKC
value|(0x00000001)
end_define

begin_define
define|#
directive|define
name|E1000_WUS_MAG
value|(0x00000002)
end_define

begin_define
define|#
directive|define
name|E1000_WUS_EX
value|(0x00000004)
end_define

begin_define
define|#
directive|define
name|E1000_WUS_MC
value|(0x00000008)
end_define

begin_define
define|#
directive|define
name|E1000_WUS_BC
value|(0x00000010)
end_define

begin_define
define|#
directive|define
name|E1000_WUS_ARP
value|(0x00000020)
end_define

begin_define
define|#
directive|define
name|E1000_WUS_IP
value|(0x00000040)
end_define

begin_define
define|#
directive|define
name|E1000_WUS_FLX0
value|(0x00010000)
end_define

begin_define
define|#
directive|define
name|E1000_WUS_FLX1
value|(0x00020000)
end_define

begin_define
define|#
directive|define
name|E1000_WUS_FLX2
value|(0x00040000)
end_define

begin_define
define|#
directive|define
name|E1000_WUS_FLX3
value|(0x00080000)
end_define

begin_define
define|#
directive|define
name|E1000_WUS_FLX_FILTERS
value|(0x000F0000)
end_define

begin_define
define|#
directive|define
name|E1000_WUPL_LENGTH_MASK
value|(0x0FFF)
end_define

begin_define
define|#
directive|define
name|E1000_MDALIGN
value|(4096)
end_define

begin_define
define|#
directive|define
name|EEPROM_READ_OPCODE
value|(0x6)
end_define

begin_define
define|#
directive|define
name|EEPROM_WRITE_OPCODE
value|(0x5)
end_define

begin_define
define|#
directive|define
name|EEPROM_ERASE_OPCODE
value|(0x7)
end_define

begin_define
define|#
directive|define
name|EEPROM_EWEN_OPCODE
value|(0x13)
end_define

begin_define
define|#
directive|define
name|EEPROM_EWDS_OPCODE
value|(0x10)
end_define

begin_define
define|#
directive|define
name|EEPROM_INIT_CONTROL1_REG
value|(0x000A)
end_define

begin_define
define|#
directive|define
name|EEPROM_INIT_CONTROL2_REG
value|(0x000F)
end_define

begin_define
define|#
directive|define
name|EEPROM_CHECKSUM_REG
value|(0x003F)
end_define

begin_define
define|#
directive|define
name|EEPROM_WORD0A_ILOS
value|(0x0010)
end_define

begin_define
define|#
directive|define
name|EEPROM_WORD0A_SWDPIO
value|(0x01E0)
end_define

begin_define
define|#
directive|define
name|EEPROM_WORD0A_LRST
value|(0x0200)
end_define

begin_define
define|#
directive|define
name|EEPROM_WORD0A_FD
value|(0x0400)
end_define

begin_define
define|#
directive|define
name|EEPROM_WORD0A_66MHZ
value|(0x0800)
end_define

begin_define
define|#
directive|define
name|EEPROM_WORD0F_PAUSE_MASK
value|(0x3000)
end_define

begin_define
define|#
directive|define
name|EEPROM_WORD0F_PAUSE
value|(0x1000)
end_define

begin_define
define|#
directive|define
name|EEPROM_WORD0F_ASM_DIR
value|(0x2000)
end_define

begin_define
define|#
directive|define
name|EEPROM_WORD0F_ANE
value|(0x0800)
end_define

begin_define
define|#
directive|define
name|EEPROM_WORD0F_SWPDIO_EXT
value|(0x00F0)
end_define

begin_define
define|#
directive|define
name|EEPROM_SUM
value|(0xBABA)
end_define

begin_define
define|#
directive|define
name|EEPROM_NODE_ADDRESS_BYTE_0
value|(0)
end_define

begin_define
define|#
directive|define
name|EEPROM_PBA_BYTE_1
value|(8)
end_define

begin_define
define|#
directive|define
name|EEPROM_WORD_SIZE
value|(64)
end_define

begin_define
define|#
directive|define
name|NODE_ADDRESS_SIZE
value|(6)
end_define

begin_define
define|#
directive|define
name|PBA_SIZE
value|(4)
end_define

begin_define
define|#
directive|define
name|E1000_COLLISION_THRESHOLD
value|16
end_define

begin_define
define|#
directive|define
name|E1000_CT_SHIFT
value|4
end_define

begin_define
define|#
directive|define
name|E1000_FDX_COLLISION_DISTANCE
value|64
end_define

begin_define
define|#
directive|define
name|E1000_HDX_COLLISION_DISTANCE
value|64
end_define

begin_define
define|#
directive|define
name|E1000_GB_HDX_COLLISION_DISTANCE
value|512
end_define

begin_define
define|#
directive|define
name|E1000_COLD_SHIFT
value|12
end_define

begin_define
define|#
directive|define
name|REQ_TX_DESCRIPTOR_MULTIPLE
value|8
end_define

begin_define
define|#
directive|define
name|REQ_RX_DESCRIPTOR_MULTIPLE
value|8
end_define

begin_define
define|#
directive|define
name|DEFAULT_WSMN_TIPG_IPGT
value|10
end_define

begin_define
define|#
directive|define
name|DEFAULT_LVGD_TIPG_IPGT_FIBER
value|6
end_define

begin_define
define|#
directive|define
name|DEFAULT_LVGD_TIPG_IPGT_COPPER
value|8
end_define

begin_define
define|#
directive|define
name|E1000_TIPG_IPGT_MASK
value|0x000003FF
end_define

begin_define
define|#
directive|define
name|E1000_TIPG_IPGR1_MASK
value|0x000FFC00
end_define

begin_define
define|#
directive|define
name|E1000_TIPG_IPGR2_MASK
value|0x3FF00000
end_define

begin_define
define|#
directive|define
name|DEFAULT_WSMN_TIPG_IPGR1
value|2
end_define

begin_define
define|#
directive|define
name|DEFAULT_LVGD_TIPG_IPGR1
value|8
end_define

begin_define
define|#
directive|define
name|E1000_TIPG_IPGR1_SHIFT
value|10
end_define

begin_define
define|#
directive|define
name|DEFAULT_WSMN_TIPG_IPGR2
value|10
end_define

begin_define
define|#
directive|define
name|DEFAULT_LVGD_TIPG_IPGR2
value|6
end_define

begin_define
define|#
directive|define
name|E1000_TIPG_IPGR2_SHIFT
value|20
end_define

begin_define
define|#
directive|define
name|E1000_TXDMAC_DPP
value|0x00000001
end_define

begin_define
define|#
directive|define
name|E1000_PBA_16K
value|(0x0010)
end_define

begin_define
define|#
directive|define
name|E1000_PBA_24K
value|(0x0018)
end_define

begin_define
define|#
directive|define
name|E1000_PBA_40K
value|(0x0028)
end_define

begin_define
define|#
directive|define
name|E1000_PBA_48K
value|(0x0030)
end_define

begin_define
define|#
directive|define
name|FLOW_CONTROL_ADDRESS_LOW
value|(0x00C28001)
end_define

begin_define
define|#
directive|define
name|FLOW_CONTROL_ADDRESS_HIGH
value|(0x00000100)
end_define

begin_define
define|#
directive|define
name|FLOW_CONTROL_TYPE
value|(0x8808)
end_define

begin_define
define|#
directive|define
name|FC_DEFAULT_HI_THRESH
value|(0x8000)
end_define

begin_define
define|#
directive|define
name|FC_DEFAULT_LO_THRESH
value|(0x4000)
end_define

begin_define
define|#
directive|define
name|FC_DEFAULT_TX_TIMER
value|(0x100)
end_define

begin_define
define|#
directive|define
name|PAUSE_SHIFT
value|5
end_define

begin_define
define|#
directive|define
name|SWDPIO_SHIFT
value|17
end_define

begin_define
define|#
directive|define
name|SWDPIO__EXT_SHIFT
value|4
end_define

begin_define
define|#
directive|define
name|ILOS_SHIFT
value|3
end_define

begin_define
define|#
directive|define
name|MDI_REGADD_SHIFT
value|16
end_define

begin_define
define|#
directive|define
name|MDI_PHYADD_SHIFT
value|21
end_define

begin_define
define|#
directive|define
name|RECEIVE_BUFFER_ALIGN_SIZE
value|(256)
end_define

begin_define
define|#
directive|define
name|LINK_UP_TIMEOUT
value|500
end_define

begin_define
define|#
directive|define
name|E1000_TX_BUFFER_SIZE
value|((u32)1514)
end_define

begin_define
define|#
directive|define
name|E1000_MIN_SIZE_OF_RECEIVE_BUFFERS
value|(2048)
end_define

begin_define
define|#
directive|define
name|CARRIER_EXTENSION
value|0x0F
end_define

begin_define
define|#
directive|define
name|TBI_ACCEPT
parameter_list|(
name|RxErrors
parameter_list|,
name|LastByteInFrame
parameter_list|,
name|HwFrameLength
parameter_list|)
value|(Adapter->TbiCompatibilityOn&& (((RxErrors)& E1000_RXD_ERR_FRAME_ERR_MASK) == E1000_RXD_ERR_CE)&& ((LastByteInFrame) == CARRIER_EXTENSION)&& ((HwFrameLength)> 64)&& ((HwFrameLength)<= Adapter->MaxFrameSize+1))
end_define

begin_define
define|#
directive|define
name|E1000_WAIT_PERIOD
value|10
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _EM_FXHW_H_ */
end_comment

end_unit

