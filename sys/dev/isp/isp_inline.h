begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/*  * Qlogic Host Adapter Inline Functions  *  * Copyright (c) 1999, 2000, 2001 by Matthew Jacob  * Feral Software  * All rights reserved.  * mjacob@feral.com  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice immediately at the beginning of the file, without modification,  *    this list of conditions, and the following disclaimer.  * 2. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_ISP_INLINE_H
end_ifndef

begin_define
define|#
directive|define
name|_ISP_INLINE_H
end_define

begin_comment
comment|/*  * Handle Functions.  * For each outstanding command there will be a non-zero handle.  * There will be at most isp_maxcmds handles, and isp_lasthdls  * will be a seed for the last handled allocated.  */
end_comment

begin_function_decl
specifier|static
name|INLINE
name|int
name|isp_save_xs
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|XS_T
modifier|*
parameter_list|,
name|u_int16_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|XS_T
modifier|*
name|isp_find_xs
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|u_int16_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|u_int16_t
name|isp_find_handle
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|XS_T
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|int
name|isp_handle_index
parameter_list|(
name|u_int16_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_destroy_handle
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|u_int16_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_remove_handle
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|XS_T
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
name|INLINE
name|int
name|isp_save_xs
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|XS_T
modifier|*
name|xs
parameter_list|,
name|u_int16_t
modifier|*
name|handlep
parameter_list|)
block|{
name|int
name|i
decl_stmt|,
name|j
decl_stmt|;
for|for
control|(
name|j
operator|=
name|isp
operator|->
name|isp_lasthdls
operator|,
name|i
operator|=
literal|0
init|;
name|i
operator|<
operator|(
name|int
operator|)
name|isp
operator|->
name|isp_maxcmds
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|isp
operator|->
name|isp_xflist
index|[
name|j
index|]
operator|==
name|NULL
condition|)
block|{
break|break;
block|}
if|if
condition|(
operator|++
name|j
operator|==
name|isp
operator|->
name|isp_maxcmds
condition|)
block|{
name|j
operator|=
literal|0
expr_stmt|;
block|}
block|}
if|if
condition|(
name|i
operator|==
name|isp
operator|->
name|isp_maxcmds
condition|)
block|{
return|return
operator|(
operator|-
literal|1
operator|)
return|;
block|}
name|isp
operator|->
name|isp_xflist
index|[
name|j
index|]
operator|=
name|xs
expr_stmt|;
operator|*
name|handlep
operator|=
name|j
operator|+
literal|1
expr_stmt|;
if|if
condition|(
operator|++
name|j
operator|==
name|isp
operator|->
name|isp_maxcmds
condition|)
name|j
operator|=
literal|0
expr_stmt|;
name|isp
operator|->
name|isp_lasthdls
operator|=
operator|(
name|u_int16_t
operator|)
name|j
expr_stmt|;
return|return
operator|(
literal|0
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|INLINE
name|XS_T
modifier|*
name|isp_find_xs
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|u_int16_t
name|handle
parameter_list|)
block|{
if|if
condition|(
name|handle
operator|<
literal|1
operator|||
name|handle
operator|>
operator|(
name|u_int16_t
operator|)
name|isp
operator|->
name|isp_maxcmds
condition|)
block|{
return|return
operator|(
name|NULL
operator|)
return|;
block|}
else|else
block|{
return|return
operator|(
name|isp
operator|->
name|isp_xflist
index|[
name|handle
operator|-
literal|1
index|]
operator|)
return|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|u_int16_t
name|isp_find_handle
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|XS_T
modifier|*
name|xs
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
if|if
condition|(
name|xs
operator|!=
name|NULL
condition|)
block|{
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|isp
operator|->
name|isp_maxcmds
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|isp
operator|->
name|isp_xflist
index|[
name|i
index|]
operator|==
name|xs
condition|)
block|{
return|return
operator|(
operator|(
name|u_int16_t
operator|)
name|i
operator|+
literal|1
operator|)
return|;
block|}
block|}
block|}
return|return
operator|(
literal|0
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|INLINE
name|int
name|isp_handle_index
parameter_list|(
name|u_int16_t
name|handle
parameter_list|)
block|{
return|return
operator|(
name|handle
operator|-
literal|1
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_destroy_handle
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|u_int16_t
name|handle
parameter_list|)
block|{
if|if
condition|(
name|handle
operator|>
literal|0
operator|&&
name|handle
operator|<=
operator|(
name|u_int16_t
operator|)
name|isp
operator|->
name|isp_maxcmds
condition|)
block|{
name|isp
operator|->
name|isp_xflist
index|[
name|isp_handle_index
argument_list|(
name|handle
argument_list|)
index|]
operator|=
name|NULL
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_remove_handle
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|XS_T
modifier|*
name|xs
parameter_list|)
block|{
name|isp_destroy_handle
argument_list|(
name|isp
argument_list|,
name|isp_find_handle
argument_list|(
name|isp
argument_list|,
name|xs
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function_decl
specifier|static
name|INLINE
name|int
name|isp_getrqentry
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|u_int16_t
modifier|*
parameter_list|,
name|u_int16_t
modifier|*
parameter_list|,
name|void
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
name|INLINE
name|int
name|isp_getrqentry
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|u_int16_t
modifier|*
name|iptrp
parameter_list|,
name|u_int16_t
modifier|*
name|optrp
parameter_list|,
name|void
modifier|*
modifier|*
name|resultp
parameter_list|)
block|{
specifier|volatile
name|u_int16_t
name|iptr
decl_stmt|,
name|optr
decl_stmt|;
name|optr
operator|=
name|isp
operator|->
name|isp_reqodx
operator|=
name|READ_REQUEST_QUEUE_OUT_POINTER
argument_list|(
name|isp
argument_list|)
expr_stmt|;
name|iptr
operator|=
name|isp
operator|->
name|isp_reqidx
expr_stmt|;
operator|*
name|resultp
operator|=
name|ISP_QUEUE_ENTRY
argument_list|(
name|isp
operator|->
name|isp_rquest
argument_list|,
name|iptr
argument_list|)
expr_stmt|;
name|iptr
operator|=
name|ISP_NXT_QENTRY
argument_list|(
name|iptr
argument_list|,
name|RQUEST_QUEUE_LEN
argument_list|(
name|isp
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iptr
operator|==
name|optr
condition|)
block|{
return|return
operator|(
literal|1
operator|)
return|;
block|}
if|if
condition|(
name|optrp
condition|)
operator|*
name|optrp
operator|=
name|optr
expr_stmt|;
if|if
condition|(
name|iptrp
condition|)
operator|*
name|iptrp
operator|=
name|iptr
expr_stmt|;
return|return
operator|(
literal|0
operator|)
return|;
block|}
end_function

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_print_qentry
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|TBA
value|(4 * (((QENTRY_LEN>> 2) * 3) + 1) + 1)
end_define

begin_function
specifier|static
name|INLINE
name|void
name|isp_print_qentry
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|char
modifier|*
name|msg
parameter_list|,
name|int
name|idx
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
block|{
name|char
name|buf
index|[
name|TBA
index|]
decl_stmt|;
name|int
name|amt
decl_stmt|,
name|i
decl_stmt|,
name|j
decl_stmt|;
name|u_int8_t
modifier|*
name|ptr
init|=
name|arg
decl_stmt|;
name|isp_prt
argument_list|(
name|isp
argument_list|,
name|ISP_LOGALL
argument_list|,
literal|"%s index %d=>"
argument_list|,
name|msg
argument_list|,
name|idx
argument_list|)
expr_stmt|;
for|for
control|(
name|buf
index|[
literal|0
index|]
operator|=
literal|0
operator|,
name|amt
operator|=
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|buf
index|[
literal|0
index|]
operator|=
literal|0
expr_stmt|;
name|SNPRINTF
argument_list|(
name|buf
argument_list|,
name|TBA
argument_list|,
literal|"  "
argument_list|)
expr_stmt|;
for|for
control|(
name|j
operator|=
literal|0
init|;
name|j
operator|<
operator|(
name|QENTRY_LEN
operator|>>
literal|2
operator|)
condition|;
name|j
operator|++
control|)
block|{
name|SNPRINTF
argument_list|(
name|buf
argument_list|,
name|TBA
argument_list|,
literal|"%s %02x"
argument_list|,
name|buf
argument_list|,
name|ptr
index|[
name|amt
operator|++
index|]
operator|&
literal|0xff
argument_list|)
expr_stmt|;
block|}
name|isp_prt
argument_list|(
name|isp
argument_list|,
name|ISP_LOGALL
argument_list|,
name|buf
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_print_bytes
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
name|INLINE
name|void
name|isp_print_bytes
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|char
modifier|*
name|msg
parameter_list|,
name|int
name|amt
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
block|{
name|char
name|buf
index|[
literal|128
index|]
decl_stmt|;
name|u_int8_t
modifier|*
name|ptr
init|=
name|arg
decl_stmt|;
name|int
name|off
decl_stmt|;
if|if
condition|(
name|msg
condition|)
name|isp_prt
argument_list|(
name|isp
argument_list|,
name|ISP_LOGALL
argument_list|,
literal|"%s:"
argument_list|,
name|msg
argument_list|)
expr_stmt|;
name|off
operator|=
literal|0
expr_stmt|;
name|buf
index|[
literal|0
index|]
operator|=
literal|0
expr_stmt|;
while|while
condition|(
name|off
operator|<
name|amt
condition|)
block|{
name|int
name|j
decl_stmt|,
name|to
decl_stmt|;
name|to
operator|=
name|off
expr_stmt|;
for|for
control|(
name|j
operator|=
literal|0
init|;
name|j
operator|<
literal|16
condition|;
name|j
operator|++
control|)
block|{
name|SNPRINTF
argument_list|(
name|buf
argument_list|,
literal|128
argument_list|,
literal|"%s %02x"
argument_list|,
name|buf
argument_list|,
name|ptr
index|[
name|off
operator|++
index|]
operator|&
literal|0xff
argument_list|)
expr_stmt|;
if|if
condition|(
name|off
operator|==
name|amt
condition|)
break|break;
block|}
name|isp_prt
argument_list|(
name|isp
argument_list|,
name|ISP_LOGALL
argument_list|,
literal|"0x%08x:%s"
argument_list|,
name|to
argument_list|,
name|buf
argument_list|)
expr_stmt|;
name|buf
index|[
literal|0
index|]
operator|=
literal|0
expr_stmt|;
block|}
block|}
end_function

begin_comment
comment|/*  * Do the common path to try and ensure that link is up, we've scanned  * the fabric (if we're on a fabric), and that we've synchronized this  * all with our own database and done the appropriate logins.  *  * We repeatedly check for firmware state and loop state after each  * action because things may have changed while we were doing this.  * Any failure or change of state causes us to return a nonzero value.  *  * We honor HBA roles in that if we're not in Initiator mode, we don't  * attempt to sync up the database (that's for somebody else to do,  * if ever).  *  * We assume we enter here with any locks held.  */
end_comment

begin_function_decl
specifier|static
name|INLINE
name|int
name|isp_fc_runstate
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
name|INLINE
name|int
name|isp_fc_runstate
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|int
name|tval
parameter_list|)
block|{
name|fcparam
modifier|*
name|fcp
decl_stmt|;
name|int
modifier|*
name|tptr
decl_stmt|;
if|if
condition|(
name|IS_SCSI
argument_list|(
name|isp
argument_list|)
condition|)
return|return
operator|(
literal|0
operator|)
return|;
name|tptr
operator|=
name|tval
condition|?
operator|&
name|tval
else|:
name|NULL
expr_stmt|;
if|if
condition|(
name|isp_control
argument_list|(
name|isp
argument_list|,
name|ISPCTL_FCLINK_TEST
argument_list|,
name|tptr
argument_list|)
operator|!=
literal|0
condition|)
block|{
return|return
operator|(
operator|-
literal|1
operator|)
return|;
block|}
name|fcp
operator|=
name|FCPARAM
argument_list|(
name|isp
argument_list|)
expr_stmt|;
if|if
condition|(
name|fcp
operator|->
name|isp_fwstate
operator|!=
name|FW_READY
operator|||
name|fcp
operator|->
name|isp_loopstate
operator|<
name|LOOP_PDB_RCVD
condition|)
return|return
operator|(
operator|-
literal|1
operator|)
return|;
if|if
condition|(
name|isp_control
argument_list|(
name|isp
argument_list|,
name|ISPCTL_SCAN_FABRIC
argument_list|,
name|NULL
argument_list|)
operator|!=
literal|0
condition|)
block|{
return|return
operator|(
operator|-
literal|1
operator|)
return|;
block|}
if|if
condition|(
name|isp_control
argument_list|(
name|isp
argument_list|,
name|ISPCTL_SCAN_LOOP
argument_list|,
name|NULL
argument_list|)
operator|!=
literal|0
condition|)
block|{
return|return
operator|(
operator|-
literal|1
operator|)
return|;
block|}
if|if
condition|(
operator|(
name|isp
operator|->
name|isp_role
operator|&
name|ISP_ROLE_INITIATOR
operator|)
operator|==
literal|0
condition|)
block|{
return|return
operator|(
literal|0
operator|)
return|;
block|}
if|if
condition|(
name|isp_control
argument_list|(
name|isp
argument_list|,
name|ISPCTL_PDB_SYNC
argument_list|,
name|NULL
argument_list|)
operator|!=
literal|0
condition|)
block|{
return|return
operator|(
operator|-
literal|1
operator|)
return|;
block|}
if|if
condition|(
name|fcp
operator|->
name|isp_fwstate
operator|!=
name|FW_READY
operator|||
name|fcp
operator|->
name|isp_loopstate
operator|!=
name|LOOP_READY
condition|)
block|{
return|return
operator|(
operator|-
literal|1
operator|)
return|;
block|}
return|return
operator|(
literal|0
operator|)
return|;
block|}
end_function

begin_comment
comment|/*  * Functions to move stuff to a form that the QLogic RISC engine understands  * and functions to move stuff back to a form the processor understands.  *  * Each platform is required to provide the 8, 16 and 32 bit  * swizzle and unswizzle macros (ISP_IOX{PUT|GET}_{8,16,32})  *  * The assumption is that swizzling and unswizzling is mostly done 'in place'  * (with a few exceptions for efficiency).  */
end_comment

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_copy_out_hdr
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|isphdr_t
modifier|*
parameter_list|,
name|isphdr_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_copy_in_hdr
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|isphdr_t
modifier|*
parameter_list|,
name|isphdr_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|int
name|isp_get_response_type
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|isphdr_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_request
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|ispreq_t
modifier|*
parameter_list|,
name|ispreq_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_request_t2
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|ispreqt2_t
modifier|*
parameter_list|,
name|ispreqt2_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_request_t3
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|ispreqt3_t
modifier|*
parameter_list|,
name|ispreqt3_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_extended_request
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|ispextreq_t
modifier|*
parameter_list|,
name|ispextreq_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_cont_req
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|ispcontreq_t
modifier|*
parameter_list|,
name|ispcontreq_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_cont64_req
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|ispcontreq64_t
modifier|*
parameter_list|,
name|ispcontreq64_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_response
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|ispstatusreq_t
modifier|*
parameter_list|,
name|ispstatusreq_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_response_x
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|ispstatus_cont_t
modifier|*
parameter_list|,
name|ispstatus_cont_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_icb
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|isp_icb_t
modifier|*
parameter_list|,
name|isp_icb_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_pdb
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|isp_pdb_t
modifier|*
parameter_list|,
name|isp_pdb_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_sns_request
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|sns_screq_t
modifier|*
parameter_list|,
name|sns_screq_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_sns_response
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|sns_scrsp_t
modifier|*
parameter_list|,
name|sns_scrsp_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|ISP_TARGET_MODE
end_ifdef

begin_ifndef
ifndef|#
directive|ifndef
name|_ISP_TARGET_H
end_ifndef

begin_include
include|#
directive|include
file|"isp_target.h"
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_atio
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|at_entry_t
modifier|*
parameter_list|,
name|at_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_atio
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|at_entry_t
modifier|*
parameter_list|,
name|at_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_atio2
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|at2_entry_t
modifier|*
parameter_list|,
name|at2_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_atio2
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|at2_entry_t
modifier|*
parameter_list|,
name|at2_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_ctio
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|ct_entry_t
modifier|*
parameter_list|,
name|ct_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_ctio
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|ct_entry_t
modifier|*
parameter_list|,
name|ct_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_ctio2
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|ct2_entry_t
modifier|*
parameter_list|,
name|ct2_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_ctio2
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|ct2_entry_t
modifier|*
parameter_list|,
name|ct2_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_enable_lun
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|lun_entry_t
modifier|*
parameter_list|,
name|lun_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_enable_lun
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|lun_entry_t
modifier|*
parameter_list|,
name|lun_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_notify
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|in_entry_t
modifier|*
parameter_list|,
name|in_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_notify
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|in_entry_t
modifier|*
parameter_list|,
name|in_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_notify_fc
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|in_fcentry_t
modifier|*
parameter_list|,
name|in_fcentry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_notify_fc
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|in_fcentry_t
modifier|*
parameter_list|,
name|in_fcentry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_notify_ack
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|na_entry_t
modifier|*
parameter_list|,
name|na_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_notify_ack
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|na_entry_t
modifier|*
parameter_list|,
name|na_entry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_put_notify_ack_fc
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|na_fcentry_t
modifier|*
parameter_list|,
name|na_fcentry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|INLINE
name|void
name|isp_get_notify_ack_fc
parameter_list|(
name|struct
name|ispsoftc
modifier|*
parameter_list|,
name|na_fcentry_t
modifier|*
parameter_list|,
name|na_fcentry_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|ISP_IS_SBUS
parameter_list|(
name|isp
parameter_list|)
define|\
value|(ISP_SBUS_SUPPORTED&& (isp)->isp_bustype == ISP_BT_SBUS)
end_define

begin_comment
comment|/*  * Swizzle/Copy Functions  */
end_comment

begin_function
specifier|static
name|INLINE
name|void
name|isp_copy_out_hdr
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|isphdr_t
modifier|*
name|hpsrc
parameter_list|,
name|isphdr_t
modifier|*
name|hpdst
parameter_list|)
block|{
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|hpsrc
operator|->
name|rqs_entry_type
argument_list|,
operator|&
name|hpdst
operator|->
name|rqs_entry_count
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|hpsrc
operator|->
name|rqs_entry_count
argument_list|,
operator|&
name|hpdst
operator|->
name|rqs_entry_type
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|hpsrc
operator|->
name|rqs_seqno
argument_list|,
operator|&
name|hpdst
operator|->
name|rqs_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|hpsrc
operator|->
name|rqs_flags
argument_list|,
operator|&
name|hpdst
operator|->
name|rqs_seqno
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|hpsrc
operator|->
name|rqs_entry_type
argument_list|,
operator|&
name|hpdst
operator|->
name|rqs_entry_type
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|hpsrc
operator|->
name|rqs_entry_count
argument_list|,
operator|&
name|hpdst
operator|->
name|rqs_entry_count
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|hpsrc
operator|->
name|rqs_seqno
argument_list|,
operator|&
name|hpdst
operator|->
name|rqs_seqno
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|hpsrc
operator|->
name|rqs_flags
argument_list|,
operator|&
name|hpdst
operator|->
name|rqs_flags
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_copy_in_hdr
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|isphdr_t
modifier|*
name|hpsrc
parameter_list|,
name|isphdr_t
modifier|*
name|hpdst
parameter_list|)
block|{
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|hpsrc
operator|->
name|rqs_entry_type
argument_list|,
name|hpdst
operator|->
name|rqs_entry_count
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|hpsrc
operator|->
name|rqs_entry_count
argument_list|,
name|hpdst
operator|->
name|rqs_entry_type
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|hpsrc
operator|->
name|rqs_seqno
argument_list|,
name|hpdst
operator|->
name|rqs_flags
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|hpsrc
operator|->
name|rqs_flags
argument_list|,
name|hpdst
operator|->
name|rqs_seqno
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|hpsrc
operator|->
name|rqs_entry_type
argument_list|,
name|hpdst
operator|->
name|rqs_entry_type
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|hpsrc
operator|->
name|rqs_entry_count
argument_list|,
name|hpdst
operator|->
name|rqs_entry_count
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|hpsrc
operator|->
name|rqs_seqno
argument_list|,
name|hpdst
operator|->
name|rqs_seqno
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|hpsrc
operator|->
name|rqs_flags
argument_list|,
name|hpdst
operator|->
name|rqs_flags
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|int
name|isp_get_response_type
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|isphdr_t
modifier|*
name|hp
parameter_list|)
block|{
name|uint8_t
name|type
decl_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|hp
operator|->
name|rqs_entry_count
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|hp
operator|->
name|rqs_entry_type
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
operator|(
name|int
operator|)
name|type
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_request
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|ispreq_t
modifier|*
name|rqsrc
parameter_list|,
name|ispreq_t
modifier|*
name|rqdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|rqsrc
operator|->
name|req_header
argument_list|,
operator|&
name|rqdst
operator|->
name|req_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|rqsrc
operator|->
name|req_handle
argument_list|,
operator|&
name|rqdst
operator|->
name|req_handle
argument_list|)
expr_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|rqsrc
operator|->
name|req_lun_trn
argument_list|,
operator|&
name|rqdst
operator|->
name|req_target
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|rqsrc
operator|->
name|req_target
argument_list|,
operator|&
name|rqdst
operator|->
name|req_lun_trn
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|rqsrc
operator|->
name|req_lun_trn
argument_list|,
operator|&
name|rqdst
operator|->
name|req_lun_trn
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|rqsrc
operator|->
name|req_target
argument_list|,
operator|&
name|rqdst
operator|->
name|req_target
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|rqsrc
operator|->
name|req_cdblen
argument_list|,
operator|&
name|rqdst
operator|->
name|req_cdblen
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|rqsrc
operator|->
name|req_flags
argument_list|,
operator|&
name|rqdst
operator|->
name|req_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|rqsrc
operator|->
name|req_time
argument_list|,
operator|&
name|rqdst
operator|->
name|req_time
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|rqsrc
operator|->
name|req_seg_count
argument_list|,
operator|&
name|rqdst
operator|->
name|req_seg_count
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|12
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|rqsrc
operator|->
name|req_cdb
index|[
name|i
index|]
argument_list|,
operator|&
name|rqdst
operator|->
name|req_cdb
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ISP_RQDSEG
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|rqsrc
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|,
operator|&
name|rqdst
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|rqsrc
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|,
operator|&
name|rqdst
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_request_t2
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|ispreqt2_t
modifier|*
name|tqsrc
parameter_list|,
name|ispreqt2_t
modifier|*
name|tqdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|tqsrc
operator|->
name|req_header
argument_list|,
operator|&
name|tqdst
operator|->
name|req_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_handle
argument_list|,
operator|&
name|tqdst
operator|->
name|req_handle
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_lun_trn
argument_list|,
operator|&
name|tqdst
operator|->
name|req_lun_trn
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_target
argument_list|,
operator|&
name|tqdst
operator|->
name|req_target
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_scclun
argument_list|,
operator|&
name|tqdst
operator|->
name|req_scclun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_flags
argument_list|,
operator|&
name|tqdst
operator|->
name|req_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|_res2
argument_list|,
operator|&
name|tqdst
operator|->
name|_res2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_time
argument_list|,
operator|&
name|tqdst
operator|->
name|req_time
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_seg_count
argument_list|,
operator|&
name|tqdst
operator|->
name|req_seg_count
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|16
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_cdb
index|[
name|i
index|]
argument_list|,
operator|&
name|tqdst
operator|->
name|req_cdb
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_totalcnt
argument_list|,
operator|&
name|tqdst
operator|->
name|req_totalcnt
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ISP_RQDSEG_T2
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|,
operator|&
name|tqdst
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|,
operator|&
name|tqdst
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_request_t3
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|ispreqt3_t
modifier|*
name|tqsrc
parameter_list|,
name|ispreqt3_t
modifier|*
name|tqdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|tqsrc
operator|->
name|req_header
argument_list|,
operator|&
name|tqdst
operator|->
name|req_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_handle
argument_list|,
operator|&
name|tqdst
operator|->
name|req_handle
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_lun_trn
argument_list|,
operator|&
name|tqdst
operator|->
name|req_lun_trn
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_target
argument_list|,
operator|&
name|tqdst
operator|->
name|req_target
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_scclun
argument_list|,
operator|&
name|tqdst
operator|->
name|req_scclun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_flags
argument_list|,
operator|&
name|tqdst
operator|->
name|req_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|_res2
argument_list|,
operator|&
name|tqdst
operator|->
name|_res2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_time
argument_list|,
operator|&
name|tqdst
operator|->
name|req_time
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_seg_count
argument_list|,
operator|&
name|tqdst
operator|->
name|req_seg_count
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|16
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_cdb
index|[
name|i
index|]
argument_list|,
operator|&
name|tqdst
operator|->
name|req_cdb
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_totalcnt
argument_list|,
operator|&
name|tqdst
operator|->
name|req_totalcnt
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ISP_RQDSEG_T2
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|,
operator|&
name|tqdst
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_basehi
argument_list|,
operator|&
name|tqdst
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_basehi
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|tqsrc
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|,
operator|&
name|tqdst
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_extended_request
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|ispextreq_t
modifier|*
name|xqsrc
parameter_list|,
name|ispextreq_t
modifier|*
name|xqdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|xqsrc
operator|->
name|req_header
argument_list|,
operator|&
name|xqdst
operator|->
name|req_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|xqsrc
operator|->
name|req_handle
argument_list|,
operator|&
name|xqdst
operator|->
name|req_handle
argument_list|)
expr_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|xqsrc
operator|->
name|req_lun_trn
argument_list|,
operator|&
name|xqdst
operator|->
name|req_target
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|xqsrc
operator|->
name|req_target
argument_list|,
operator|&
name|xqdst
operator|->
name|req_lun_trn
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|xqsrc
operator|->
name|req_lun_trn
argument_list|,
operator|&
name|xqdst
operator|->
name|req_lun_trn
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|xqsrc
operator|->
name|req_target
argument_list|,
operator|&
name|xqdst
operator|->
name|req_target
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|xqsrc
operator|->
name|req_cdblen
argument_list|,
operator|&
name|xqdst
operator|->
name|req_cdblen
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|xqsrc
operator|->
name|req_flags
argument_list|,
operator|&
name|xqdst
operator|->
name|req_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|xqsrc
operator|->
name|req_time
argument_list|,
operator|&
name|xqdst
operator|->
name|req_time
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|xqsrc
operator|->
name|req_seg_count
argument_list|,
operator|&
name|xqdst
operator|->
name|req_seg_count
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|44
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|xqsrc
operator|->
name|req_cdb
index|[
name|i
index|]
argument_list|,
operator|&
name|xqdst
operator|->
name|req_cdb
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_cont_req
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|ispcontreq_t
modifier|*
name|cqsrc
parameter_list|,
name|ispcontreq_t
modifier|*
name|cqdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|cqsrc
operator|->
name|req_header
argument_list|,
operator|&
name|cqdst
operator|->
name|req_header
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ISP_CDSEG
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|cqsrc
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|,
operator|&
name|cqdst
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|cqsrc
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|,
operator|&
name|cqdst
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_cont64_req
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|ispcontreq64_t
modifier|*
name|cqsrc
parameter_list|,
name|ispcontreq64_t
modifier|*
name|cqdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|cqsrc
operator|->
name|req_header
argument_list|,
operator|&
name|cqdst
operator|->
name|req_header
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ISP_CDSEG64
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|cqsrc
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|,
operator|&
name|cqdst
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|cqsrc
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_basehi
argument_list|,
operator|&
name|cqdst
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_basehi
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|cqsrc
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|,
operator|&
name|cqdst
operator|->
name|req_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_response
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|ispstatusreq_t
modifier|*
name|spsrc
parameter_list|,
name|ispstatusreq_t
modifier|*
name|spdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_in_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|spsrc
operator|->
name|req_header
argument_list|,
operator|&
name|spdst
operator|->
name|req_header
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|spsrc
operator|->
name|req_handle
argument_list|,
name|spdst
operator|->
name|req_handle
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|spsrc
operator|->
name|req_scsi_status
argument_list|,
name|spdst
operator|->
name|req_scsi_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|spsrc
operator|->
name|req_completion_status
argument_list|,
name|spdst
operator|->
name|req_completion_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|spsrc
operator|->
name|req_state_flags
argument_list|,
name|spdst
operator|->
name|req_state_flags
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|spsrc
operator|->
name|req_status_flags
argument_list|,
name|spdst
operator|->
name|req_status_flags
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|spsrc
operator|->
name|req_time
argument_list|,
name|spdst
operator|->
name|req_time
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|spsrc
operator|->
name|req_sense_len
argument_list|,
name|spdst
operator|->
name|req_sense_len
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|spsrc
operator|->
name|req_resid
argument_list|,
name|spdst
operator|->
name|req_resid
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|8
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|spsrc
operator|->
name|req_response
index|[
name|i
index|]
argument_list|,
name|spdst
operator|->
name|req_response
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|32
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|spsrc
operator|->
name|req_sense_data
index|[
name|i
index|]
argument_list|,
name|spdst
operator|->
name|req_sense_data
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_response_x
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|ispstatus_cont_t
modifier|*
name|cpsrc
parameter_list|,
name|ispstatus_cont_t
modifier|*
name|cpdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_in_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|cpsrc
operator|->
name|req_header
argument_list|,
operator|&
name|cpdst
operator|->
name|req_header
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|60
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|cpsrc
operator|->
name|req_sense_data
index|[
name|i
index|]
argument_list|,
name|cpdst
operator|->
name|req_sense_data
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_icb
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|isp_icb_t
modifier|*
name|Is
parameter_list|,
name|isp_icb_t
modifier|*
name|Id
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|ISP_SWAP8
argument_list|(
name|Is
operator|->
name|icb_version
argument_list|,
name|Is
operator|->
name|_reserved0
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_version
argument_list|,
operator|&
name|Id
operator|->
name|icb_version
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|_reserved0
argument_list|,
operator|&
name|Id
operator|->
name|_reserved0
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_fwoptions
argument_list|,
operator|&
name|Id
operator|->
name|icb_fwoptions
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_maxfrmlen
argument_list|,
operator|&
name|Id
operator|->
name|icb_maxfrmlen
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_maxalloc
argument_list|,
operator|&
name|Id
operator|->
name|icb_maxalloc
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_execthrottle
argument_list|,
operator|&
name|Id
operator|->
name|icb_execthrottle
argument_list|)
expr_stmt|;
name|ISP_SWAP8
argument_list|(
name|Is
operator|->
name|icb_retry_count
argument_list|,
name|Is
operator|->
name|icb_retry_delay
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_retry_count
argument_list|,
operator|&
name|Id
operator|->
name|icb_retry_count
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_retry_delay
argument_list|,
operator|&
name|Id
operator|->
name|icb_retry_delay
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|8
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_portname
index|[
name|i
index|]
argument_list|,
operator|&
name|Id
operator|->
name|icb_portname
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_hardaddr
argument_list|,
operator|&
name|Id
operator|->
name|icb_hardaddr
argument_list|)
expr_stmt|;
name|ISP_SWAP8
argument_list|(
name|Is
operator|->
name|icb_iqdevtype
argument_list|,
name|Is
operator|->
name|icb_logintime
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_iqdevtype
argument_list|,
operator|&
name|Id
operator|->
name|icb_iqdevtype
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_logintime
argument_list|,
operator|&
name|Id
operator|->
name|icb_logintime
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|8
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_nodename
index|[
name|i
index|]
argument_list|,
operator|&
name|Id
operator|->
name|icb_nodename
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_rqstout
argument_list|,
operator|&
name|Id
operator|->
name|icb_rqstout
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_rspnsin
argument_list|,
operator|&
name|Id
operator|->
name|icb_rspnsin
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_rqstqlen
argument_list|,
operator|&
name|Id
operator|->
name|icb_rqstqlen
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_rsltqlen
argument_list|,
operator|&
name|Id
operator|->
name|icb_rsltqlen
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_rqstaddr
index|[
name|i
index|]
argument_list|,
operator|&
name|Id
operator|->
name|icb_rqstaddr
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_respaddr
index|[
name|i
index|]
argument_list|,
operator|&
name|Id
operator|->
name|icb_respaddr
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_lunenables
argument_list|,
operator|&
name|Id
operator|->
name|icb_lunenables
argument_list|)
expr_stmt|;
name|ISP_SWAP8
argument_list|(
name|Is
operator|->
name|icb_ccnt
argument_list|,
name|Is
operator|->
name|icb_icnt
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_ccnt
argument_list|,
operator|&
name|Id
operator|->
name|icb_ccnt
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_icnt
argument_list|,
operator|&
name|Id
operator|->
name|icb_icnt
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_lunetimeout
argument_list|,
operator|&
name|Id
operator|->
name|icb_lunetimeout
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_xfwoptions
argument_list|,
operator|&
name|Id
operator|->
name|icb_xfwoptions
argument_list|)
expr_stmt|;
name|ISP_SWAP8
argument_list|(
name|Is
operator|->
name|icb_racctimer
argument_list|,
name|Is
operator|->
name|icb_idelaytimer
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_racctimer
argument_list|,
operator|&
name|Id
operator|->
name|icb_racctimer
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_idelaytimer
argument_list|,
operator|&
name|Id
operator|->
name|icb_idelaytimer
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|Is
operator|->
name|icb_zfwoptions
argument_list|,
operator|&
name|Id
operator|->
name|icb_zfwoptions
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_pdb
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|isp_pdb_t
modifier|*
name|src
parameter_list|,
name|isp_pdb_t
modifier|*
name|dst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_options
argument_list|,
name|dst
operator|->
name|pdb_options
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_mstate
argument_list|,
name|dst
operator|->
name|pdb_mstate
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_sstate
argument_list|,
name|dst
operator|->
name|pdb_sstate
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_hardaddr_bits
index|[
name|i
index|]
argument_list|,
name|dst
operator|->
name|pdb_hardaddr_bits
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_portid_bits
index|[
name|i
index|]
argument_list|,
name|dst
operator|->
name|pdb_portid_bits
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|8
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_nodename
index|[
name|i
index|]
argument_list|,
name|dst
operator|->
name|pdb_nodename
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|8
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_portname
index|[
name|i
index|]
argument_list|,
name|dst
operator|->
name|pdb_portname
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_execthrottle
argument_list|,
name|dst
operator|->
name|pdb_execthrottle
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_exec_count
argument_list|,
name|dst
operator|->
name|pdb_exec_count
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_retry_count
argument_list|,
name|dst
operator|->
name|pdb_retry_count
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_retry_delay
argument_list|,
name|dst
operator|->
name|pdb_retry_delay
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_resalloc
argument_list|,
name|dst
operator|->
name|pdb_resalloc
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_curalloc
argument_list|,
name|dst
operator|->
name|pdb_curalloc
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_qhead
argument_list|,
name|dst
operator|->
name|pdb_qhead
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_qtail
argument_list|,
name|dst
operator|->
name|pdb_qtail
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_tl_next
argument_list|,
name|dst
operator|->
name|pdb_tl_next
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_tl_last
argument_list|,
name|dst
operator|->
name|pdb_tl_last
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_features
argument_list|,
name|dst
operator|->
name|pdb_features
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_pconcurrnt
argument_list|,
name|dst
operator|->
name|pdb_pconcurrnt
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_roi
argument_list|,
name|dst
operator|->
name|pdb_roi
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_target
argument_list|,
name|dst
operator|->
name|pdb_target
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_initiator
argument_list|,
name|dst
operator|->
name|pdb_initiator
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_rdsiz
argument_list|,
name|dst
operator|->
name|pdb_rdsiz
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_ncseq
argument_list|,
name|dst
operator|->
name|pdb_ncseq
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_noseq
argument_list|,
name|dst
operator|->
name|pdb_noseq
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_labrtflg
argument_list|,
name|dst
operator|->
name|pdb_labrtflg
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_lstopflg
argument_list|,
name|dst
operator|->
name|pdb_lstopflg
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_sqhead
argument_list|,
name|dst
operator|->
name|pdb_sqhead
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_sqtail
argument_list|,
name|dst
operator|->
name|pdb_sqtail
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_ptimer
argument_list|,
name|dst
operator|->
name|pdb_ptimer
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_nxt_seqid
argument_list|,
name|dst
operator|->
name|pdb_nxt_seqid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_fcount
argument_list|,
name|dst
operator|->
name|pdb_fcount
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_prli_len
argument_list|,
name|dst
operator|->
name|pdb_prli_len
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_prli_svc0
argument_list|,
name|dst
operator|->
name|pdb_prli_svc0
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_prli_svc3
argument_list|,
name|dst
operator|->
name|pdb_prli_svc3
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_loopid
argument_list|,
name|dst
operator|->
name|pdb_loopid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_il_ptr
argument_list|,
name|dst
operator|->
name|pdb_il_ptr
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|pdb_sl_ptr
argument_list|,
name|dst
operator|->
name|pdb_sl_ptr
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_sns_request
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|sns_screq_t
modifier|*
name|src
parameter_list|,
name|sns_screq_t
modifier|*
name|dst
parameter_list|)
block|{
name|int
name|i
decl_stmt|,
name|nw
init|=
operator|(
name|int
operator|)
name|src
operator|->
name|snscb_sblen
decl_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|src
operator|->
name|snscb_rblen
argument_list|,
operator|&
name|dst
operator|->
name|snscb_rblen
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|src
operator|->
name|snscb_addr
index|[
name|i
index|]
argument_list|,
operator|&
name|dst
operator|->
name|snscb_addr
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|src
operator|->
name|snscb_sblen
argument_list|,
operator|&
name|dst
operator|->
name|snscb_sblen
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|nw
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|src
operator|->
name|snscb_data
index|[
name|i
index|]
argument_list|,
operator|&
name|dst
operator|->
name|snscb_data
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_sns_response
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|sns_scrsp_t
modifier|*
name|src
parameter_list|,
name|sns_scrsp_t
modifier|*
name|dst
parameter_list|,
name|int
name|nwords
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|16
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|snscb_cthdr
index|[
name|i
index|]
argument_list|,
name|dst
operator|->
name|snscb_cthdr
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|snscb_port_type
argument_list|,
name|dst
operator|->
name|snscb_port_type
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|snscb_port_id
index|[
name|i
index|]
argument_list|,
name|dst
operator|->
name|snscb_port_id
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|8
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|snscb_portname
index|[
name|i
index|]
argument_list|,
name|dst
operator|->
name|snscb_portname
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|nwords
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|src
operator|->
name|snscb_data
index|[
name|i
index|]
argument_list|,
name|dst
operator|->
name|snscb_data
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_ifdef
ifdef|#
directive|ifdef
name|ISP_TARGET_MODE
end_ifdef

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_atio
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|at_entry_t
modifier|*
name|atsrc
parameter_list|,
name|at_entry_t
modifier|*
name|atdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_header
argument_list|,
operator|&
name|atdst
operator|->
name|at_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_reserved
argument_list|,
operator|&
name|atdst
operator|->
name|at_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_handle
argument_list|,
operator|&
name|atdst
operator|->
name|at_handle
argument_list|)
expr_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_lun
argument_list|,
operator|&
name|atdst
operator|->
name|at_iid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_iid
argument_list|,
operator|&
name|atdst
operator|->
name|at_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_cdblen
argument_list|,
operator|&
name|atdst
operator|->
name|at_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_tgt
argument_list|,
operator|&
name|atdst
operator|->
name|at_cdblen
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_status
argument_list|,
operator|&
name|atdst
operator|->
name|at_scsi_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_scsi_status
argument_list|,
operator|&
name|atdst
operator|->
name|at_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_tag_val
argument_list|,
operator|&
name|atdst
operator|->
name|at_tag_type
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_tag_type
argument_list|,
operator|&
name|atdst
operator|->
name|at_tag_val
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_lun
argument_list|,
operator|&
name|atdst
operator|->
name|at_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_iid
argument_list|,
operator|&
name|atdst
operator|->
name|at_iid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_cdblen
argument_list|,
operator|&
name|atdst
operator|->
name|at_cdblen
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_tgt
argument_list|,
operator|&
name|atdst
operator|->
name|at_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_status
argument_list|,
operator|&
name|atdst
operator|->
name|at_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_scsi_status
argument_list|,
operator|&
name|atdst
operator|->
name|at_scsi_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_tag_val
argument_list|,
operator|&
name|atdst
operator|->
name|at_tag_val
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_tag_type
argument_list|,
operator|&
name|atdst
operator|->
name|at_tag_type
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_flags
argument_list|,
operator|&
name|atdst
operator|->
name|at_flags
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ATIO_CDBLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_cdb
index|[
name|i
index|]
argument_list|,
operator|&
name|atdst
operator|->
name|at_cdb
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|QLTM_SENSELEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_sense
index|[
name|i
index|]
argument_list|,
operator|&
name|atdst
operator|->
name|at_sense
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_atio
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|at_entry_t
modifier|*
name|atsrc
parameter_list|,
name|at_entry_t
modifier|*
name|atdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_in_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_header
argument_list|,
operator|&
name|atdst
operator|->
name|at_header
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_reserved
argument_list|,
name|atdst
operator|->
name|at_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_handle
argument_list|,
name|atdst
operator|->
name|at_handle
argument_list|)
expr_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_lun
argument_list|,
name|atdst
operator|->
name|at_iid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_iid
argument_list|,
name|atdst
operator|->
name|at_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_cdblen
argument_list|,
name|atdst
operator|->
name|at_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_tgt
argument_list|,
name|atdst
operator|->
name|at_cdblen
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_status
argument_list|,
name|atdst
operator|->
name|at_scsi_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_scsi_status
argument_list|,
name|atdst
operator|->
name|at_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_tag_val
argument_list|,
name|atdst
operator|->
name|at_tag_type
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_tag_type
argument_list|,
name|atdst
operator|->
name|at_tag_val
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_lun
argument_list|,
name|atdst
operator|->
name|at_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_iid
argument_list|,
name|atdst
operator|->
name|at_iid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_cdblen
argument_list|,
name|atdst
operator|->
name|at_cdblen
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_tgt
argument_list|,
name|atdst
operator|->
name|at_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_status
argument_list|,
name|atdst
operator|->
name|at_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_scsi_status
argument_list|,
name|atdst
operator|->
name|at_scsi_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_tag_val
argument_list|,
name|atdst
operator|->
name|at_tag_val
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_tag_type
argument_list|,
name|atdst
operator|->
name|at_tag_type
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_flags
argument_list|,
name|atdst
operator|->
name|at_flags
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ATIO_CDBLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_cdb
index|[
name|i
index|]
argument_list|,
name|atdst
operator|->
name|at_cdb
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|QLTM_SENSELEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_sense
index|[
name|i
index|]
argument_list|,
name|atdst
operator|->
name|at_sense
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_atio2
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|at2_entry_t
modifier|*
name|atsrc
parameter_list|,
name|at2_entry_t
modifier|*
name|atdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_header
argument_list|,
operator|&
name|atdst
operator|->
name|at_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_reserved
argument_list|,
operator|&
name|atdst
operator|->
name|at_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_lun
argument_list|,
operator|&
name|atdst
operator|->
name|at_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_iid
argument_list|,
operator|&
name|atdst
operator|->
name|at_iid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_rxid
argument_list|,
operator|&
name|atdst
operator|->
name|at_rxid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_flags
argument_list|,
operator|&
name|atdst
operator|->
name|at_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_status
argument_list|,
operator|&
name|atdst
operator|->
name|at_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_reserved1
argument_list|,
operator|&
name|atdst
operator|->
name|at_reserved1
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_taskcodes
argument_list|,
operator|&
name|atdst
operator|->
name|at_taskcodes
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_taskflags
argument_list|,
operator|&
name|atdst
operator|->
name|at_taskflags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_execodes
argument_list|,
operator|&
name|atdst
operator|->
name|at_execodes
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ATIO2_CDBLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_cdb
index|[
name|i
index|]
argument_list|,
operator|&
name|atdst
operator|->
name|at_cdb
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_datalen
argument_list|,
operator|&
name|atdst
operator|->
name|at_datalen
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_scclun
argument_list|,
operator|&
name|atdst
operator|->
name|at_scclun
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_reserved2
index|[
name|i
index|]
argument_list|,
operator|&
name|atdst
operator|->
name|at_reserved2
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|atsrc
operator|->
name|at_oxid
argument_list|,
operator|&
name|atdst
operator|->
name|at_oxid
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_atio2
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|at2_entry_t
modifier|*
name|atsrc
parameter_list|,
name|at2_entry_t
modifier|*
name|atdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_in_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_header
argument_list|,
operator|&
name|atdst
operator|->
name|at_header
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_reserved
argument_list|,
name|atdst
operator|->
name|at_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_lun
argument_list|,
name|atdst
operator|->
name|at_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_iid
argument_list|,
name|atdst
operator|->
name|at_iid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_rxid
argument_list|,
name|atdst
operator|->
name|at_rxid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_flags
argument_list|,
name|atdst
operator|->
name|at_flags
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_status
argument_list|,
name|atdst
operator|->
name|at_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_reserved1
argument_list|,
name|atdst
operator|->
name|at_reserved1
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_taskcodes
argument_list|,
name|atdst
operator|->
name|at_taskcodes
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_taskflags
argument_list|,
name|atdst
operator|->
name|at_taskflags
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_execodes
argument_list|,
name|atdst
operator|->
name|at_execodes
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ATIO2_CDBLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_cdb
index|[
name|i
index|]
argument_list|,
name|atdst
operator|->
name|at_cdb
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_datalen
argument_list|,
name|atdst
operator|->
name|at_datalen
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_scclun
argument_list|,
name|atdst
operator|->
name|at_scclun
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_reserved2
index|[
name|i
index|]
argument_list|,
name|atdst
operator|->
name|at_reserved2
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|atsrc
operator|->
name|at_oxid
argument_list|,
name|atdst
operator|->
name|at_oxid
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_ctio
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|ct_entry_t
modifier|*
name|ctsrc
parameter_list|,
name|ct_entry_t
modifier|*
name|ctdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_header
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_reserved
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_fwhandle
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_fwhandle
argument_list|)
expr_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_iid
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_lun
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_iid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_tgt
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_reserved2
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_status
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_scsi_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_scsi_status
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_tag_type
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_tag_val
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_tag_val
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_tag_type
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_iid
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_iid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_lun
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_tgt
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_reserved2
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_scsi_status
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_scsi_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_status
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_tag_type
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_tag_type
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_tag_val
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_tag_val
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_flags
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_xfrlen
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_xfrlen
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_resid
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_resid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_timeout
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_timeout
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_seg_count
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_seg_count
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ISP_RQDSEG
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_ctio
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|ct_entry_t
modifier|*
name|ctsrc
parameter_list|,
name|ct_entry_t
modifier|*
name|ctdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_in_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_header
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_header
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_reserved
argument_list|,
name|ctdst
operator|->
name|ct_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_fwhandle
argument_list|,
name|ctdst
operator|->
name|ct_fwhandle
argument_list|)
expr_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_lun
argument_list|,
name|ctdst
operator|->
name|ct_iid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_iid
argument_list|,
name|ctdst
operator|->
name|ct_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_reserved2
argument_list|,
name|ctdst
operator|->
name|ct_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_tgt
argument_list|,
name|ctdst
operator|->
name|ct_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_status
argument_list|,
name|ctdst
operator|->
name|ct_scsi_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_scsi_status
argument_list|,
name|ctdst
operator|->
name|ct_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_tag_val
argument_list|,
name|ctdst
operator|->
name|ct_tag_type
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_tag_type
argument_list|,
name|ctdst
operator|->
name|ct_tag_val
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_lun
argument_list|,
name|ctdst
operator|->
name|ct_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_iid
argument_list|,
name|ctdst
operator|->
name|ct_iid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_reserved2
argument_list|,
name|ctdst
operator|->
name|ct_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_tgt
argument_list|,
name|ctdst
operator|->
name|ct_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_status
argument_list|,
name|ctdst
operator|->
name|ct_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_scsi_status
argument_list|,
name|ctdst
operator|->
name|ct_scsi_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_tag_val
argument_list|,
name|ctdst
operator|->
name|ct_tag_val
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_tag_type
argument_list|,
name|ctdst
operator|->
name|ct_tag_type
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_flags
argument_list|,
name|ctdst
operator|->
name|ct_flags
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_xfrlen
argument_list|,
name|ctdst
operator|->
name|ct_xfrlen
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_resid
argument_list|,
name|ctdst
operator|->
name|ct_resid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_timeout
argument_list|,
name|ctdst
operator|->
name|ct_timeout
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_seg_count
argument_list|,
name|ctdst
operator|->
name|ct_seg_count
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ISP_RQDSEG
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|,
name|ctdst
operator|->
name|ct_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|,
name|ctdst
operator|->
name|ct_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_ctio2
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|ct2_entry_t
modifier|*
name|ctsrc
parameter_list|,
name|ct2_entry_t
modifier|*
name|ctdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_header
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_reserved
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_fwhandle
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_fwhandle
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_lun
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_iid
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_iid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_rxid
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_rxid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_flags
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_timeout
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_timeout
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_seg_count
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_seg_count
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|ct_resid
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_resid
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|ctsrc
operator|->
name|ct_flags
operator|&
name|CT2_FLAG_MMASK
operator|)
operator|==
name|CT2_FLAG_MODE0
condition|)
block|{
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m0
operator|.
name|_reserved
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m0
operator|.
name|_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m0
operator|.
name|_reserved2
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m0
operator|.
name|_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_scsi_status
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_scsi_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_xfrlen
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_xfrlen
argument_list|)
expr_stmt|;
if|if
condition|(
name|ctsrc
operator|->
name|ct_header
operator|.
name|rqs_entry_type
operator|==
name|RQSTYPE_CTIO2
condition|)
block|{
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ISP_RQDSEG_T2
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dataseg
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dataseg
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|ctsrc
operator|->
name|ct_header
operator|.
name|rqs_entry_type
operator|==
name|RQSTYPE_CTIO3
condition|)
block|{
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ISP_RQDSEG_T3
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dataseg64
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dataseg64
index|[
name|i
index|]
operator|.
name|ds_base
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dataseg64
index|[
name|i
index|]
operator|.
name|ds_basehi
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dataseg64
index|[
name|i
index|]
operator|.
name|ds_basehi
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dataseg64
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dataseg64
index|[
name|i
index|]
operator|.
name|ds_count
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|ctsrc
operator|->
name|ct_header
operator|.
name|rqs_entry_type
operator|==
name|RQSTYPE_CTIO4
condition|)
block|{
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dslist
operator|.
name|ds_type
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dslist
operator|.
name|ds_type
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dslist
operator|.
name|ds_segment
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dslist
operator|.
name|ds_segment
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dslist
operator|.
name|ds_base
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m0
operator|.
name|ct_dslist
operator|.
name|ds_base
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
operator|(
name|ctsrc
operator|->
name|ct_flags
operator|&
name|CT2_FLAG_MMASK
operator|)
operator|==
name|CT2_FLAG_MODE1
condition|)
block|{
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m1
operator|.
name|_reserved
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m1
operator|.
name|_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m1
operator|.
name|_reserved2
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m1
operator|.
name|_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m1
operator|.
name|ct_senselen
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m1
operator|.
name|ct_senselen
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m1
operator|.
name|ct_scsi_status
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m1
operator|.
name|ct_scsi_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m1
operator|.
name|ct_resplen
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m1
operator|.
name|ct_resplen
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|MAXRESPLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m1
operator|.
name|ct_resp
index|[
name|i
index|]
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m1
operator|.
name|ct_resp
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m2
operator|.
name|_reserved
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m2
operator|.
name|_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m2
operator|.
name|_reserved2
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m2
operator|.
name|_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m2
operator|.
name|_reserved3
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m2
operator|.
name|_reserved3
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m2
operator|.
name|ct_datalen
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m2
operator|.
name|ct_datalen
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m2
operator|.
name|ct_fcp_rsp_iudata
operator|.
name|ds_base
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m2
operator|.
name|ct_fcp_rsp_iudata
operator|.
name|ds_base
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|ctsrc
operator|->
name|rsp
operator|.
name|m2
operator|.
name|ct_fcp_rsp_iudata
operator|.
name|ds_count
argument_list|,
operator|&
name|ctdst
operator|->
name|rsp
operator|.
name|m2
operator|.
name|ct_fcp_rsp_iudata
operator|.
name|ds_count
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_ctio2
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|ct2_entry_t
modifier|*
name|ctsrc
parameter_list|,
name|ct2_entry_t
modifier|*
name|ctdst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_in_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_header
argument_list|,
operator|&
name|ctdst
operator|->
name|ct_header
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_reserved
argument_list|,
name|ctdst
operator|->
name|ct_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_fwhandle
argument_list|,
name|ctdst
operator|->
name|ct_fwhandle
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_lun
argument_list|,
name|ctdst
operator|->
name|ct_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_iid
argument_list|,
name|ctdst
operator|->
name|ct_iid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_rxid
argument_list|,
name|ctdst
operator|->
name|ct_rxid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_flags
argument_list|,
name|ctdst
operator|->
name|ct_flags
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_status
argument_list|,
name|ctdst
operator|->
name|ct_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_timeout
argument_list|,
name|ctdst
operator|->
name|ct_timeout
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_seg_count
argument_list|,
name|ctdst
operator|->
name|ct_seg_count
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_reloff
argument_list|,
name|ctdst
operator|->
name|ct_reloff
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|ct_resid
argument_list|,
name|ctdst
operator|->
name|ct_resid
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|rsp
operator|.
name|fw
operator|.
name|_reserved
index|[
name|i
index|]
argument_list|,
name|ctdst
operator|->
name|rsp
operator|.
name|fw
operator|.
name|_reserved
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|rsp
operator|.
name|fw
operator|.
name|ct_scsi_status
argument_list|,
name|ctdst
operator|->
name|rsp
operator|.
name|fw
operator|.
name|ct_scsi_status
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|QLTM_SENSELEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|ctsrc
operator|->
name|rsp
operator|.
name|fw
operator|.
name|ct_sense
index|[
name|i
index|]
argument_list|,
name|ctdst
operator|->
name|rsp
operator|.
name|fw
operator|.
name|ct_sense
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_enable_lun
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|lun_entry_t
modifier|*
name|lesrc
parameter_list|,
name|lun_entry_t
modifier|*
name|ledst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_header
argument_list|,
operator|&
name|ledst
operator|->
name|le_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_reserved
argument_list|,
operator|&
name|ledst
operator|->
name|le_reserved
argument_list|)
expr_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_lun
argument_list|,
operator|&
name|ledst
operator|->
name|le_rsvd
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_rsvd
argument_list|,
operator|&
name|ledst
operator|->
name|le_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_ops
argument_list|,
operator|&
name|ledst
operator|->
name|le_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_tgt
argument_list|,
operator|&
name|ledst
operator|->
name|le_ops
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_status
argument_list|,
operator|&
name|ledst
operator|->
name|le_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_reserved2
argument_list|,
operator|&
name|ledst
operator|->
name|le_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_cmd_count
argument_list|,
operator|&
name|ledst
operator|->
name|le_in_count
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_in_count
argument_list|,
operator|&
name|ledst
operator|->
name|le_cmd_count
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_cdb6len
argument_list|,
operator|&
name|ledst
operator|->
name|le_cdb7len
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_cdb7len
argument_list|,
operator|&
name|ledst
operator|->
name|le_cdb6len
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_lun
argument_list|,
operator|&
name|ledst
operator|->
name|le_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_rsvd
argument_list|,
operator|&
name|ledst
operator|->
name|le_rsvd
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_ops
argument_list|,
operator|&
name|ledst
operator|->
name|le_ops
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_tgt
argument_list|,
operator|&
name|ledst
operator|->
name|le_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_status
argument_list|,
operator|&
name|ledst
operator|->
name|le_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_reserved2
argument_list|,
operator|&
name|ledst
operator|->
name|le_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_cmd_count
argument_list|,
operator|&
name|ledst
operator|->
name|le_cmd_count
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_in_count
argument_list|,
operator|&
name|ledst
operator|->
name|le_in_count
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_cdb6len
argument_list|,
operator|&
name|ledst
operator|->
name|le_cdb6len
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_cdb7len
argument_list|,
operator|&
name|ledst
operator|->
name|le_cdb7len
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_flags
argument_list|,
operator|&
name|ledst
operator|->
name|le_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_timeout
argument_list|,
operator|&
name|ledst
operator|->
name|le_timeout
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|20
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|lesrc
operator|->
name|le_reserved3
index|[
name|i
index|]
argument_list|,
operator|&
name|ledst
operator|->
name|le_reserved3
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_enable_lun
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|lun_entry_t
modifier|*
name|lesrc
parameter_list|,
name|lun_entry_t
modifier|*
name|ledst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_in_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_header
argument_list|,
operator|&
name|ledst
operator|->
name|le_header
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_reserved
argument_list|,
name|ledst
operator|->
name|le_reserved
argument_list|)
expr_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_lun
argument_list|,
name|ledst
operator|->
name|le_rsvd
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_rsvd
argument_list|,
name|ledst
operator|->
name|le_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_ops
argument_list|,
name|ledst
operator|->
name|le_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_tgt
argument_list|,
name|ledst
operator|->
name|le_ops
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_status
argument_list|,
name|ledst
operator|->
name|le_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_reserved2
argument_list|,
name|ledst
operator|->
name|le_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_cmd_count
argument_list|,
name|ledst
operator|->
name|le_in_count
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_in_count
argument_list|,
name|ledst
operator|->
name|le_cmd_count
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_cdb6len
argument_list|,
name|ledst
operator|->
name|le_cdb7len
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_cdb7len
argument_list|,
name|ledst
operator|->
name|le_cdb6len
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_lun
argument_list|,
name|ledst
operator|->
name|le_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_rsvd
argument_list|,
name|ledst
operator|->
name|le_rsvd
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_ops
argument_list|,
name|ledst
operator|->
name|le_ops
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_tgt
argument_list|,
name|ledst
operator|->
name|le_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_status
argument_list|,
name|ledst
operator|->
name|le_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_reserved2
argument_list|,
name|ledst
operator|->
name|le_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_cmd_count
argument_list|,
name|ledst
operator|->
name|le_cmd_count
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_in_count
argument_list|,
name|ledst
operator|->
name|le_in_count
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_cdb6len
argument_list|,
name|ledst
operator|->
name|le_cdb6len
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_cdb7len
argument_list|,
name|ledst
operator|->
name|le_cdb7len
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_flags
argument_list|,
name|ledst
operator|->
name|le_flags
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_timeout
argument_list|,
name|ledst
operator|->
name|le_timeout
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|20
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|lesrc
operator|->
name|le_reserved3
index|[
name|i
index|]
argument_list|,
name|ledst
operator|->
name|le_reserved3
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_notify
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|in_entry_t
modifier|*
name|insrc
parameter_list|,
name|in_entry_t
modifier|*
name|indst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_header
argument_list|,
operator|&
name|indst
operator|->
name|in_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_reserved
argument_list|,
operator|&
name|indst
operator|->
name|in_reserved
argument_list|)
expr_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_lun
argument_list|,
operator|&
name|indst
operator|->
name|in_iid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_iid
argument_list|,
operator|&
name|indst
operator|->
name|in_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_reserved2
argument_list|,
operator|&
name|indst
operator|->
name|in_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_tgt
argument_list|,
operator|&
name|indst
operator|->
name|in_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_status
argument_list|,
operator|&
name|indst
operator|->
name|in_rsvd2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_rsvd2
argument_list|,
operator|&
name|indst
operator|->
name|in_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_tag_val
argument_list|,
operator|&
name|indst
operator|->
name|in_tag_type
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_tag_type
argument_list|,
operator|&
name|indst
operator|->
name|in_tag_val
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_lun
argument_list|,
operator|&
name|indst
operator|->
name|in_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_iid
argument_list|,
operator|&
name|indst
operator|->
name|in_iid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_reserved2
argument_list|,
operator|&
name|indst
operator|->
name|in_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_tgt
argument_list|,
operator|&
name|indst
operator|->
name|in_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_status
argument_list|,
operator|&
name|indst
operator|->
name|in_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_rsvd2
argument_list|,
operator|&
name|indst
operator|->
name|in_rsvd2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_tag_val
argument_list|,
operator|&
name|indst
operator|->
name|in_tag_val
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_tag_type
argument_list|,
operator|&
name|indst
operator|->
name|in_tag_type
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_flags
argument_list|,
operator|&
name|indst
operator|->
name|in_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_seqid
argument_list|,
operator|&
name|indst
operator|->
name|in_seqid
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|IN_MSGLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_msg
index|[
name|i
index|]
argument_list|,
operator|&
name|indst
operator|->
name|in_msg
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|IN_RSVDLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_reserved3
index|[
name|i
index|]
argument_list|,
operator|&
name|indst
operator|->
name|in_reserved3
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|QLTM_SENSELEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_sense
index|[
name|i
index|]
argument_list|,
operator|&
name|indst
operator|->
name|in_sense
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_notify
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|in_entry_t
modifier|*
name|insrc
parameter_list|,
name|in_entry_t
modifier|*
name|indst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_in_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_header
argument_list|,
operator|&
name|indst
operator|->
name|in_header
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_reserved
argument_list|,
name|indst
operator|->
name|in_reserved
argument_list|)
expr_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_lun
argument_list|,
name|indst
operator|->
name|in_iid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_iid
argument_list|,
name|indst
operator|->
name|in_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_reserved2
argument_list|,
name|indst
operator|->
name|in_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_tgt
argument_list|,
name|indst
operator|->
name|in_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_status
argument_list|,
name|indst
operator|->
name|in_rsvd2
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_rsvd2
argument_list|,
name|indst
operator|->
name|in_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_tag_val
argument_list|,
name|indst
operator|->
name|in_tag_type
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_tag_type
argument_list|,
name|indst
operator|->
name|in_tag_val
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_lun
argument_list|,
name|indst
operator|->
name|in_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_iid
argument_list|,
name|indst
operator|->
name|in_iid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_reserved2
argument_list|,
name|indst
operator|->
name|in_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_tgt
argument_list|,
name|indst
operator|->
name|in_tgt
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_status
argument_list|,
name|indst
operator|->
name|in_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_rsvd2
argument_list|,
name|indst
operator|->
name|in_rsvd2
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_tag_val
argument_list|,
name|indst
operator|->
name|in_tag_val
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_tag_type
argument_list|,
name|indst
operator|->
name|in_tag_type
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_flags
argument_list|,
name|indst
operator|->
name|in_flags
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_seqid
argument_list|,
name|indst
operator|->
name|in_seqid
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|IN_MSGLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_msg
index|[
name|i
index|]
argument_list|,
name|indst
operator|->
name|in_msg
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|IN_RSVDLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_reserved3
index|[
name|i
index|]
argument_list|,
name|indst
operator|->
name|in_reserved3
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|QLTM_SENSELEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_sense
index|[
name|i
index|]
argument_list|,
name|indst
operator|->
name|in_sense
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_notify_fc
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|in_fcentry_t
modifier|*
name|insrc
parameter_list|,
name|in_fcentry_t
modifier|*
name|indst
parameter_list|)
block|{
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_header
argument_list|,
operator|&
name|indst
operator|->
name|in_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_reserved
argument_list|,
operator|&
name|indst
operator|->
name|in_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_lun
argument_list|,
operator|&
name|indst
operator|->
name|in_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_iid
argument_list|,
operator|&
name|indst
operator|->
name|in_iid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_scclun
argument_list|,
operator|&
name|indst
operator|->
name|in_scclun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_reserved2
argument_list|,
operator|&
name|indst
operator|->
name|in_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_status
argument_list|,
operator|&
name|indst
operator|->
name|in_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_task_flags
argument_list|,
operator|&
name|indst
operator|->
name|in_task_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|insrc
operator|->
name|in_seqid
argument_list|,
operator|&
name|indst
operator|->
name|in_seqid
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_notify_fc
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|in_fcentry_t
modifier|*
name|insrc
parameter_list|,
name|in_fcentry_t
modifier|*
name|indst
parameter_list|)
block|{
name|isp_copy_in_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_header
argument_list|,
operator|&
name|indst
operator|->
name|in_header
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_reserved
argument_list|,
name|indst
operator|->
name|in_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_lun
argument_list|,
name|indst
operator|->
name|in_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_iid
argument_list|,
name|indst
operator|->
name|in_iid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_scclun
argument_list|,
name|indst
operator|->
name|in_scclun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_reserved2
argument_list|,
name|indst
operator|->
name|in_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_status
argument_list|,
name|indst
operator|->
name|in_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_task_flags
argument_list|,
name|indst
operator|->
name|in_task_flags
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|insrc
operator|->
name|in_seqid
argument_list|,
name|indst
operator|->
name|in_seqid
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_notify_ack
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|na_entry_t
modifier|*
name|nasrc
parameter_list|,
name|na_entry_t
modifier|*
name|nadst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_header
argument_list|,
operator|&
name|nadst
operator|->
name|na_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_reserved
argument_list|,
operator|&
name|nadst
operator|->
name|na_reserved
argument_list|)
expr_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_lun
argument_list|,
operator|&
name|nadst
operator|->
name|na_iid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_iid
argument_list|,
operator|&
name|nadst
operator|->
name|na_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_status
argument_list|,
operator|&
name|nadst
operator|->
name|na_event
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_event
argument_list|,
operator|&
name|nadst
operator|->
name|na_status
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_lun
argument_list|,
operator|&
name|nadst
operator|->
name|na_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_iid
argument_list|,
operator|&
name|nadst
operator|->
name|na_iid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_status
argument_list|,
operator|&
name|nadst
operator|->
name|na_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_event
argument_list|,
operator|&
name|nadst
operator|->
name|na_event
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_flags
argument_list|,
operator|&
name|nadst
operator|->
name|na_flags
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|NA_RSVDLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_reserved3
index|[
name|i
index|]
argument_list|,
operator|&
name|nadst
operator|->
name|na_reserved3
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_notify_ack
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|na_entry_t
modifier|*
name|nasrc
parameter_list|,
name|na_entry_t
modifier|*
name|nadst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_in_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_header
argument_list|,
operator|&
name|nadst
operator|->
name|na_header
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_reserved
argument_list|,
name|nadst
operator|->
name|na_reserved
argument_list|)
expr_stmt|;
if|if
condition|(
name|ISP_IS_SBUS
argument_list|(
name|isp
argument_list|)
condition|)
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_lun
argument_list|,
name|nadst
operator|->
name|na_iid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_iid
argument_list|,
name|nadst
operator|->
name|na_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_status
argument_list|,
name|nadst
operator|->
name|na_event
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_event
argument_list|,
name|nadst
operator|->
name|na_status
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_lun
argument_list|,
name|nadst
operator|->
name|na_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_iid
argument_list|,
name|nadst
operator|->
name|na_iid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_status
argument_list|,
name|nadst
operator|->
name|na_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_event
argument_list|,
name|nadst
operator|->
name|na_event
argument_list|)
expr_stmt|;
block|}
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_flags
argument_list|,
name|nadst
operator|->
name|na_flags
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|NA_RSVDLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_reserved3
index|[
name|i
index|]
argument_list|,
name|nadst
operator|->
name|na_reserved3
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_put_notify_ack_fc
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|na_fcentry_t
modifier|*
name|nasrc
parameter_list|,
name|na_fcentry_t
modifier|*
name|nadst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_out_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_header
argument_list|,
operator|&
name|nadst
operator|->
name|na_header
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_32
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_reserved
argument_list|,
operator|&
name|nadst
operator|->
name|na_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_lun
argument_list|,
operator|&
name|nadst
operator|->
name|na_lun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_8
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_iid
argument_list|,
operator|&
name|nadst
operator|->
name|na_iid
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_scclun
argument_list|,
operator|&
name|nadst
operator|->
name|na_scclun
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_flags
argument_list|,
operator|&
name|nadst
operator|->
name|na_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_reserved2
argument_list|,
operator|&
name|nadst
operator|->
name|na_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_status
argument_list|,
operator|&
name|nadst
operator|->
name|na_status
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_task_flags
argument_list|,
operator|&
name|nadst
operator|->
name|na_task_flags
argument_list|)
expr_stmt|;
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_seqid
argument_list|,
operator|&
name|nadst
operator|->
name|na_seqid
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|NA2_RSVDLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXPUT_16
argument_list|(
name|isp
argument_list|,
name|nasrc
operator|->
name|na_reserved3
index|[
name|i
index|]
argument_list|,
operator|&
name|nadst
operator|->
name|na_reserved3
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
name|INLINE
name|void
name|isp_get_notify_ack_fc
parameter_list|(
name|struct
name|ispsoftc
modifier|*
name|isp
parameter_list|,
name|na_fcentry_t
modifier|*
name|nasrc
parameter_list|,
name|na_fcentry_t
modifier|*
name|nadst
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|isp_copy_in_hdr
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_header
argument_list|,
operator|&
name|nadst
operator|->
name|na_header
argument_list|)
expr_stmt|;
name|ISP_IOXGET_32
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_reserved
argument_list|,
name|nadst
operator|->
name|na_reserved
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_lun
argument_list|,
name|nadst
operator|->
name|na_lun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_8
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_iid
argument_list|,
name|nadst
operator|->
name|na_iid
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_scclun
argument_list|,
name|nadst
operator|->
name|na_scclun
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_flags
argument_list|,
name|nadst
operator|->
name|na_flags
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_reserved2
argument_list|,
name|nadst
operator|->
name|na_reserved2
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_status
argument_list|,
name|nadst
operator|->
name|na_status
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_task_flags
argument_list|,
name|nadst
operator|->
name|na_task_flags
argument_list|)
expr_stmt|;
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_seqid
argument_list|,
name|nadst
operator|->
name|na_seqid
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|NA2_RSVDLEN
condition|;
name|i
operator|++
control|)
block|{
name|ISP_IOXGET_16
argument_list|(
name|isp
argument_list|,
operator|&
name|nasrc
operator|->
name|na_reserved3
index|[
name|i
index|]
argument_list|,
name|nadst
operator|->
name|na_reserved3
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _ISP_INLINE_H */
end_comment

end_unit

