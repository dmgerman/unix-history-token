begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2009-2012,2016 Microsoft Corp.  * Copyright (c) 2010-2012 Citrix Inc.  * Copyright (c) 2012 NetApp Inc.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice unmodified, this list of conditions, and the following  *    disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_HN_NVS_H_
end_ifndef

begin_define
define|#
directive|define
name|_HN_NVS_H_
end_define

begin_struct_decl
struct_decl|struct
name|hn_nvs_sendctx
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|vmbus_channel
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|hn_softc
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|hn_nvs_sent_t
function_decl|)
parameter_list|(
name|struct
name|hn_nvs_sendctx
modifier|*
parameter_list|,
name|struct
name|hn_softc
modifier|*
parameter_list|,
name|struct
name|vmbus_channel
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|hn_nvs_sendctx
block|{
name|hn_nvs_sent_t
name|hn_cb
decl_stmt|;
name|void
modifier|*
name|hn_cbarg
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|HN_NVS_SENDCTX_INITIALIZER
parameter_list|(
name|cb
parameter_list|,
name|cbarg
parameter_list|)
define|\
value|{						\ 	.hn_cb		= cb,			\ 	.hn_cbarg	= cbarg			\ }
end_define

begin_function
specifier|static
name|__inline
name|void
name|hn_nvs_sendctx_init
parameter_list|(
name|struct
name|hn_nvs_sendctx
modifier|*
name|sndc
parameter_list|,
name|hn_nvs_sent_t
name|cb
parameter_list|,
name|void
modifier|*
name|cbarg
parameter_list|)
block|{
name|sndc
operator|->
name|hn_cb
operator|=
name|cb
expr_stmt|;
name|sndc
operator|->
name|hn_cbarg
operator|=
name|cbarg
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|int
name|hn_nvs_send
parameter_list|(
name|struct
name|vmbus_channel
modifier|*
name|chan
parameter_list|,
name|uint16_t
name|flags
parameter_list|,
name|void
modifier|*
name|nvs_msg
parameter_list|,
name|int
name|nvs_msglen
parameter_list|,
name|struct
name|hn_nvs_sendctx
modifier|*
name|sndc
parameter_list|)
block|{
return|return
operator|(
name|vmbus_chan_send
argument_list|(
name|chan
argument_list|,
name|VMBUS_CHANPKT_TYPE_INBAND
argument_list|,
name|flags
argument_list|,
name|nvs_msg
argument_list|,
name|nvs_msglen
argument_list|,
operator|(
name|uint64_t
operator|)
operator|(
name|uintptr_t
operator|)
name|sndc
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|int
name|hn_nvs_send_sglist
parameter_list|(
name|struct
name|vmbus_channel
modifier|*
name|chan
parameter_list|,
name|struct
name|vmbus_gpa
name|sg
index|[]
parameter_list|,
name|int
name|sglen
parameter_list|,
name|void
modifier|*
name|nvs_msg
parameter_list|,
name|int
name|nvs_msglen
parameter_list|,
name|struct
name|hn_nvs_sendctx
modifier|*
name|sndc
parameter_list|)
block|{
return|return
operator|(
name|vmbus_chan_send_sglist
argument_list|(
name|chan
argument_list|,
name|sg
argument_list|,
name|sglen
argument_list|,
name|nvs_msg
argument_list|,
name|nvs_msglen
argument_list|,
operator|(
name|uint64_t
operator|)
operator|(
name|uintptr_t
operator|)
name|sndc
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|int
name|hn_nvs_send_rndis_sglist
parameter_list|(
name|struct
name|vmbus_channel
modifier|*
name|chan
parameter_list|,
name|uint32_t
name|rndis_mtype
parameter_list|,
name|struct
name|hn_nvs_sendctx
modifier|*
name|sndc
parameter_list|,
name|struct
name|vmbus_gpa
modifier|*
name|gpa
parameter_list|,
name|int
name|gpa_cnt
parameter_list|)
block|{
name|struct
name|hn_nvs_rndis
name|rndis
decl_stmt|;
name|rndis
operator|.
name|nvs_type
operator|=
name|HN_NVS_TYPE_RNDIS
expr_stmt|;
name|rndis
operator|.
name|nvs_rndis_mtype
operator|=
name|rndis_mtype
expr_stmt|;
name|rndis
operator|.
name|nvs_chim_idx
operator|=
name|HN_NVS_CHIM_IDX_INVALID
expr_stmt|;
name|rndis
operator|.
name|nvs_chim_sz
operator|=
literal|0
expr_stmt|;
return|return
operator|(
name|hn_nvs_send_sglist
argument_list|(
name|chan
argument_list|,
name|gpa
argument_list|,
name|gpa_cnt
argument_list|,
operator|&
name|rndis
argument_list|,
sizeof|sizeof
argument_list|(
name|rndis
argument_list|)
argument_list|,
name|sndc
argument_list|)
operator|)
return|;
block|}
end_function

begin_function_decl
name|int
name|hn_nvs_attach
parameter_list|(
name|struct
name|hn_softc
modifier|*
name|sc
parameter_list|,
name|int
name|mtu
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|hn_nvs_detach
parameter_list|(
name|struct
name|hn_softc
modifier|*
name|sc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hn_nvs_alloc_subchans
parameter_list|(
name|struct
name|hn_softc
modifier|*
name|sc
parameter_list|,
name|int
modifier|*
name|nsubch
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|hn_nvs_sent_xact
parameter_list|(
name|struct
name|hn_nvs_sendctx
modifier|*
name|sndc
parameter_list|,
name|struct
name|hn_softc
modifier|*
name|sc
parameter_list|,
name|struct
name|vmbus_channel
modifier|*
name|chan
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|int
name|dlen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hn_nvs_send_rndis_ctrl
parameter_list|(
name|struct
name|vmbus_channel
modifier|*
name|chan
parameter_list|,
name|struct
name|hn_nvs_sendctx
modifier|*
name|sndc
parameter_list|,
name|struct
name|vmbus_gpa
modifier|*
name|gpa
parameter_list|,
name|int
name|gpa_cnt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|hn_nvs_set_datapath
parameter_list|(
name|struct
name|hn_softc
modifier|*
name|sc
parameter_list|,
name|uint32_t
name|path
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|struct
name|hn_nvs_sendctx
name|hn_nvs_sendctx_none
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_HN_NVS_H_ */
end_comment

end_unit

