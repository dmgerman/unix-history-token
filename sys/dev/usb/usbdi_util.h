begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2009 Andrew Thompson  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_USB_USBDI_UTIL_H_
end_ifndef

begin_define
define|#
directive|define
name|_USB_USBDI_UTIL_H_
end_define

begin_struct_decl
struct_decl|struct
name|cv
struct_decl|;
end_struct_decl

begin_comment
comment|/* structures */
end_comment

begin_struct
struct|struct
name|usb_idesc_parse_state
block|{
name|struct
name|usb_descriptor
modifier|*
name|desc
decl_stmt|;
name|uint8_t
name|iface_index
decl_stmt|;
comment|/* current interface index */
name|uint8_t
name|iface_no_last
decl_stmt|;
name|uint8_t
name|iface_index_alt
decl_stmt|;
comment|/* current alternate setting */
block|}
struct|;
end_struct

begin_comment
comment|/* prototypes */
end_comment

begin_function_decl
name|usb_error_t
name|usbd_do_request_proc
parameter_list|(
name|struct
name|usb_device
modifier|*
name|udev
parameter_list|,
name|struct
name|usb_process
modifier|*
name|pproc
parameter_list|,
name|struct
name|usb_device_request
modifier|*
name|req
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|uint16_t
name|flags
parameter_list|,
name|uint16_t
modifier|*
name|actlen
parameter_list|,
name|usb_timeout_t
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|usb_descriptor
modifier|*
name|usb_desc_foreach
parameter_list|(
name|struct
name|usb_config_descriptor
modifier|*
name|cd
parameter_list|,
name|struct
name|usb_descriptor
modifier|*
name|desc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|usb_interface_descriptor
modifier|*
name|usb_idesc_foreach
parameter_list|(
name|struct
name|usb_config_descriptor
modifier|*
name|cd
parameter_list|,
name|struct
name|usb_idesc_parse_state
modifier|*
name|ps
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|usb_endpoint_descriptor
modifier|*
name|usb_edesc_foreach
parameter_list|(
name|struct
name|usb_config_descriptor
modifier|*
name|cd
parameter_list|,
name|struct
name|usb_endpoint_descriptor
modifier|*
name|ped
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint8_t
name|usbd_get_no_descriptors
parameter_list|(
name|struct
name|usb_config_descriptor
modifier|*
name|cd
parameter_list|,
name|uint8_t
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint8_t
name|usbd_get_no_alts
parameter_list|(
name|struct
name|usb_config_descriptor
modifier|*
name|cd
parameter_list|,
name|struct
name|usb_interface_descriptor
modifier|*
name|id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|usb_error_t
name|usbd_req_get_report
parameter_list|(
name|struct
name|usb_device
modifier|*
name|udev
parameter_list|,
name|struct
name|mtx
modifier|*
name|mtx
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|uint16_t
name|len
parameter_list|,
name|uint8_t
name|iface_index
parameter_list|,
name|uint8_t
name|type
parameter_list|,
name|uint8_t
name|id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|usb_error_t
name|usbd_req_get_report_descriptor
parameter_list|(
name|struct
name|usb_device
modifier|*
name|udev
parameter_list|,
name|struct
name|mtx
modifier|*
name|mtx
parameter_list|,
name|void
modifier|*
name|d
parameter_list|,
name|uint16_t
name|size
parameter_list|,
name|uint8_t
name|iface_index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|usb_error_t
name|usbd_req_get_string_any
parameter_list|(
name|struct
name|usb_device
modifier|*
name|udev
parameter_list|,
name|struct
name|mtx
modifier|*
name|mtx
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|uint16_t
name|len
parameter_list|,
name|uint8_t
name|string_index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|usb_error_t
name|usbd_req_get_string_desc
parameter_list|(
name|struct
name|usb_device
modifier|*
name|udev
parameter_list|,
name|struct
name|mtx
modifier|*
name|mtx
parameter_list|,
name|void
modifier|*
name|sdesc
parameter_list|,
name|uint16_t
name|max_len
parameter_list|,
name|uint16_t
name|lang_id
parameter_list|,
name|uint8_t
name|string_index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|usb_error_t
name|usbd_req_set_config
parameter_list|(
name|struct
name|usb_device
modifier|*
name|udev
parameter_list|,
name|struct
name|mtx
modifier|*
name|mtx
parameter_list|,
name|uint8_t
name|conf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|usb_error_t
name|usbd_req_set_alt_interface_no
parameter_list|(
name|struct
name|usb_device
modifier|*
name|udev
parameter_list|,
name|struct
name|mtx
modifier|*
name|mtx
parameter_list|,
name|uint8_t
name|iface_index
parameter_list|,
name|uint8_t
name|alt_no
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|usb_error_t
name|usbd_req_set_idle
parameter_list|(
name|struct
name|usb_device
modifier|*
name|udev
parameter_list|,
name|struct
name|mtx
modifier|*
name|mtx
parameter_list|,
name|uint8_t
name|iface_index
parameter_list|,
name|uint8_t
name|duration
parameter_list|,
name|uint8_t
name|id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|usb_error_t
name|usbd_req_set_protocol
parameter_list|(
name|struct
name|usb_device
modifier|*
name|udev
parameter_list|,
name|struct
name|mtx
modifier|*
name|mtx
parameter_list|,
name|uint8_t
name|iface_index
parameter_list|,
name|uint16_t
name|report
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|usb_error_t
name|usbd_req_set_report
parameter_list|(
name|struct
name|usb_device
modifier|*
name|udev
parameter_list|,
name|struct
name|mtx
modifier|*
name|mtx
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|uint16_t
name|len
parameter_list|,
name|uint8_t
name|iface_index
parameter_list|,
name|uint8_t
name|type
parameter_list|,
name|uint8_t
name|id
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* The following functions will not return NULL strings. */
end_comment

begin_function_decl
specifier|const
name|char
modifier|*
name|usb_get_manufacturer
parameter_list|(
name|struct
name|usb_device
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|usb_get_product
parameter_list|(
name|struct
name|usb_device
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|usb_get_serial
parameter_list|(
name|struct
name|usb_device
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _USB_USBDI_UTIL_H_ */
end_comment

end_unit

