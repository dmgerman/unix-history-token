begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2010 Damien Bergamini<damien.bergamini@free.fr>  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  *   * $OpenBSD: if_urtwnreg.h,v 1.3 2010/11/16 18:02:59 damien Exp $  * $FreeBSD$  */
end_comment

begin_define
define|#
directive|define
name|URTWN_RX_LIST_COUNT
value|1
end_define

begin_define
define|#
directive|define
name|URTWN_TX_LIST_COUNT
value|8
end_define

begin_define
define|#
directive|define
name|URTWN_HOST_CMD_RING_COUNT
value|32
end_define

begin_define
define|#
directive|define
name|URTWN_RXBUFSZ
value|(16 * 1024)
end_define

begin_define
define|#
directive|define
name|URTWN_TXBUFSZ
value|(sizeof(struct r92c_tx_desc) + IEEE80211_MAX_LEN)
end_define

begin_define
define|#
directive|define
name|URTWN_RX_DESC_SIZE
value|(sizeof(struct r92c_rx_stat))
end_define

begin_define
define|#
directive|define
name|URTWN_TX_DESC_SIZE
value|(sizeof(struct r92c_tx_desc))
end_define

begin_define
define|#
directive|define
name|URTWN_TX_TIMEOUT
value|5000
end_define

begin_comment
comment|/* ms */
end_comment

begin_define
define|#
directive|define
name|URTWN_LED_LINK
value|0
end_define

begin_define
define|#
directive|define
name|URTWN_LED_DATA
value|1
end_define

begin_struct
struct|struct
name|urtwn_rx_radiotap_header
block|{
name|struct
name|ieee80211_radiotap_header
name|wr_ihdr
decl_stmt|;
name|uint64_t
name|wr_tsft
decl_stmt|;
name|uint8_t
name|wr_flags
decl_stmt|;
name|uint8_t
name|wr_rate
decl_stmt|;
name|uint16_t
name|wr_chan_freq
decl_stmt|;
name|uint16_t
name|wr_chan_flags
decl_stmt|;
name|int8_t
name|wr_dbm_antsignal
decl_stmt|;
name|int8_t
name|wr_dbm_antnoise
decl_stmt|;
block|}
name|__packed
name|__aligned
argument_list|(
literal|8
argument_list|)
struct|;
end_struct

begin_define
define|#
directive|define
name|URTWN_RX_RADIOTAP_PRESENT
define|\
value|(1<< IEEE80211_RADIOTAP_TSFT |			\ 	 1<< IEEE80211_RADIOTAP_FLAGS |		\ 	 1<< IEEE80211_RADIOTAP_RATE |			\ 	 1<< IEEE80211_RADIOTAP_CHANNEL |		\ 	 1<< IEEE80211_RADIOTAP_DBM_ANTSIGNAL |	\ 	 1<< IEEE80211_RADIOTAP_DBM_ANTNOISE)
end_define

begin_struct
struct|struct
name|urtwn_tx_radiotap_header
block|{
name|struct
name|ieee80211_radiotap_header
name|wt_ihdr
decl_stmt|;
name|uint8_t
name|wt_flags
decl_stmt|;
name|uint16_t
name|wt_chan_freq
decl_stmt|;
name|uint16_t
name|wt_chan_flags
decl_stmt|;
block|}
name|__packed
name|__aligned
argument_list|(
literal|8
argument_list|)
struct|;
end_struct

begin_define
define|#
directive|define
name|URTWN_TX_RADIOTAP_PRESENT
define|\
value|(1<< IEEE80211_RADIOTAP_FLAGS |		\ 	 1<< IEEE80211_RADIOTAP_CHANNEL)
end_define

begin_struct_decl
struct_decl|struct
name|urtwn_softc
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|urtwn_data
block|{
name|struct
name|urtwn_softc
modifier|*
name|sc
decl_stmt|;
name|uint8_t
modifier|*
name|buf
decl_stmt|;
name|uint16_t
name|buflen
decl_stmt|;
name|struct
name|mbuf
modifier|*
name|m
decl_stmt|;
name|struct
name|ieee80211_node
modifier|*
name|ni
decl_stmt|;
name|STAILQ_ENTRY
argument_list|(
argument|urtwn_data
argument_list|)
name|next
expr_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|STAILQ_HEAD
argument_list|(
argument_list|,
argument|urtwn_data
argument_list|)
name|urtwn_datahead
expr_stmt|;
end_typedef

begin_union
union|union
name|sec_param
block|{
name|struct
name|ieee80211_key
name|key
decl_stmt|;
block|}
union|;
end_union

begin_define
define|#
directive|define
name|CMD_FUNC_PROTO
value|void (*func)(struct urtwn_softc *, \ 					    union sec_param *)
end_define

begin_struct
struct|struct
name|urtwn_cmdq
block|{
name|union
name|sec_param
name|data
decl_stmt|;
name|CMD_FUNC_PROTO
expr_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|URTWN_CMDQ_SIZE
value|16
end_define

begin_struct
struct|struct
name|urtwn_fw_info
block|{
specifier|const
name|uint8_t
modifier|*
name|data
decl_stmt|;
name|size_t
name|size
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|urtwn_node
block|{
name|struct
name|ieee80211_node
name|ni
decl_stmt|;
comment|/* must be the first */
name|uint8_t
name|id
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|URTWN_NODE
parameter_list|(
name|ni
parameter_list|)
value|((struct urtwn_node *)(ni))
end_define

begin_struct
struct|struct
name|urtwn_vap
block|{
name|struct
name|ieee80211vap
name|vap
decl_stmt|;
name|struct
name|r92c_tx_desc
name|bcn_desc
decl_stmt|;
name|struct
name|mbuf
modifier|*
name|bcn_mbuf
decl_stmt|;
name|struct
name|task
name|tsf_task_adhoc
decl_stmt|;
name|int
function_decl|(
modifier|*
name|newstate
function_decl|)
parameter_list|(
name|struct
name|ieee80211vap
modifier|*
parameter_list|,
name|enum
name|ieee80211_state
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|recv_mgmt
function_decl|)
parameter_list|(
name|struct
name|ieee80211_node
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|struct
name|ieee80211_rx_stats
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|URTWN_VAP
parameter_list|(
name|vap
parameter_list|)
value|((struct urtwn_vap *)(vap))
end_define

begin_struct
struct|struct
name|urtwn_host_cmd
block|{
name|void
function_decl|(
modifier|*
name|cb
function_decl|)
parameter_list|(
name|struct
name|urtwn_softc
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|uint8_t
name|data
index|[
literal|256
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|urtwn_cmd_newstate
block|{
name|enum
name|ieee80211_state
name|state
decl_stmt|;
name|int
name|arg
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|urtwn_cmd_key
block|{
name|struct
name|ieee80211_key
name|key
decl_stmt|;
name|uint16_t
name|associd
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
block|{
name|URTWN_BULK_RX
block|,
name|URTWN_BULK_TX_BE
block|,
comment|/* = WME_AC_BE */
name|URTWN_BULK_TX_BK
block|,
comment|/* = WME_AC_BK */
name|URTWN_BULK_TX_VI
block|,
comment|/* = WME_AC_VI */
name|URTWN_BULK_TX_VO
block|,
comment|/* = WME_AC_VI */
name|URTWN_N_TRANSFER
init|=
literal|5
block|, }
enum|;
end_enum

begin_define
define|#
directive|define
name|URTWN_EP_QUEUES
value|URTWN_BULK_RX
end_define

begin_union
union|union
name|urtwn_rom
block|{
name|struct
name|r92c_rom
name|r92c_rom
decl_stmt|;
name|struct
name|r88e_rom
name|r88e_rom
decl_stmt|;
block|}
union|;
end_union

begin_struct
struct|struct
name|urtwn_softc
block|{
name|struct
name|ieee80211com
name|sc_ic
decl_stmt|;
name|struct
name|mbufq
name|sc_snd
decl_stmt|;
name|device_t
name|sc_dev
decl_stmt|;
name|struct
name|usb_device
modifier|*
name|sc_udev
decl_stmt|;
name|uint32_t
name|sc_debug
decl_stmt|;
name|uint8_t
name|sc_iface_index
decl_stmt|;
name|uint8_t
name|sc_flags
decl_stmt|;
define|#
directive|define
name|URTWN_FLAG_CCK_HIPWR
value|0x01
define|#
directive|define
name|URTWN_DETACHED
value|0x02
define|#
directive|define
name|URTWN_RUNNING
value|0x04
define|#
directive|define
name|URTWN_FW_LOADED
value|0x08
define|#
directive|define
name|URTWN_TEMP_MEASURED
value|0x10
name|u_int
name|chip
decl_stmt|;
define|#
directive|define
name|URTWN_CHIP_92C
value|0x01
define|#
directive|define
name|URTWN_CHIP_92C_1T2R
value|0x02
define|#
directive|define
name|URTWN_CHIP_UMC
value|0x04
define|#
directive|define
name|URTWN_CHIP_UMC_A_CUT
value|0x08
define|#
directive|define
name|URTWN_CHIP_88E
value|0x10
define|#
directive|define
name|URTWN_CHIP_HAS_RATECTL
parameter_list|(
name|_sc
parameter_list|)
value|(!!((_sc)->chip& URTWN_CHIP_88E))
name|void
function_decl|(
modifier|*
name|sc_node_free
function_decl|)
parameter_list|(
name|struct
name|ieee80211_node
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|sc_rf_write
function_decl|)
parameter_list|(
name|struct
name|urtwn_softc
modifier|*
parameter_list|,
name|int
parameter_list|,
name|uint8_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sc_power_on
function_decl|)
parameter_list|(
name|struct
name|urtwn_softc
modifier|*
parameter_list|)
function_decl|;
name|struct
name|ieee80211_node
modifier|*
name|node_list
index|[
name|R88E_MACID_MAX
operator|+
literal|1
index|]
decl_stmt|;
name|struct
name|mtx
name|nt_mtx
decl_stmt|;
name|uint8_t
name|board_type
decl_stmt|;
name|uint8_t
name|regulatory
decl_stmt|;
name|uint8_t
name|pa_setting
decl_stmt|;
name|int8_t
name|ofdm_tx_pwr_diff
decl_stmt|;
name|int8_t
name|bw20_tx_pwr_diff
decl_stmt|;
name|int
name|avg_pwdb
decl_stmt|;
name|uint8_t
name|thcal_lctemp
decl_stmt|;
name|int
name|ntxchains
decl_stmt|;
name|int
name|nrxchains
decl_stmt|;
name|int
name|ledlink
decl_stmt|;
name|int
name|sc_txtimer
decl_stmt|;
name|int
name|fwcur
decl_stmt|;
name|struct
name|urtwn_data
name|sc_rx
index|[
name|URTWN_RX_LIST_COUNT
index|]
decl_stmt|;
name|urtwn_datahead
name|sc_rx_active
decl_stmt|;
name|urtwn_datahead
name|sc_rx_inactive
decl_stmt|;
name|struct
name|urtwn_data
name|sc_tx
index|[
name|URTWN_TX_LIST_COUNT
index|]
decl_stmt|;
name|urtwn_datahead
name|sc_tx_active
decl_stmt|;
name|urtwn_datahead
name|sc_tx_inactive
decl_stmt|;
name|urtwn_datahead
name|sc_tx_pending
decl_stmt|;
name|union
name|urtwn_rom
name|rom
decl_stmt|;
name|uint16_t
name|last_rom_addr
decl_stmt|;
name|struct
name|callout
name|sc_calib_to
decl_stmt|;
name|struct
name|callout
name|sc_watchdog_ch
decl_stmt|;
name|struct
name|mtx
name|sc_mtx
decl_stmt|;
name|uint32_t
name|keys_bmap
decl_stmt|;
name|struct
name|urtwn_cmdq
name|cmdq
index|[
name|URTWN_CMDQ_SIZE
index|]
decl_stmt|;
name|struct
name|mtx
name|cmdq_mtx
decl_stmt|;
name|struct
name|task
name|cmdq_task
decl_stmt|;
name|uint8_t
name|cmdq_first
decl_stmt|;
name|uint8_t
name|cmdq_last
decl_stmt|;
name|uint32_t
name|rf_chnlbw
index|[
name|R92C_MAX_CHAINS
index|]
decl_stmt|;
name|struct
name|usb_xfer
modifier|*
name|sc_xfer
index|[
name|URTWN_N_TRANSFER
index|]
decl_stmt|;
name|struct
name|urtwn_rx_radiotap_header
name|sc_rxtap
decl_stmt|;
name|struct
name|urtwn_tx_radiotap_header
name|sc_txtap
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|URTWN_LOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_lock(&(sc)->sc_mtx)
end_define

begin_define
define|#
directive|define
name|URTWN_UNLOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_unlock(&(sc)->sc_mtx)
end_define

begin_define
define|#
directive|define
name|URTWN_ASSERT_LOCKED
parameter_list|(
name|sc
parameter_list|)
value|mtx_assert(&(sc)->sc_mtx, MA_OWNED)
end_define

begin_define
define|#
directive|define
name|URTWN_CMDQ_LOCK_INIT
parameter_list|(
name|sc
parameter_list|)
define|\
value|mtx_init(&(sc)->cmdq_mtx, "cmdq lock", NULL, MTX_DEF)
end_define

begin_define
define|#
directive|define
name|URTWN_CMDQ_LOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_lock(&(sc)->cmdq_mtx)
end_define

begin_define
define|#
directive|define
name|URTWN_CMDQ_UNLOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_unlock(&(sc)->cmdq_mtx)
end_define

begin_define
define|#
directive|define
name|URTWN_CMDQ_LOCK_DESTROY
parameter_list|(
name|sc
parameter_list|)
value|mtx_destroy(&(sc)->cmdq_mtx)
end_define

begin_define
define|#
directive|define
name|URTWN_NT_LOCK_INIT
parameter_list|(
name|sc
parameter_list|)
define|\
value|mtx_init(&(sc)->nt_mtx, "node table lock", NULL, MTX_DEF)
end_define

begin_define
define|#
directive|define
name|URTWN_NT_LOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_lock(&(sc)->nt_mtx)
end_define

begin_define
define|#
directive|define
name|URTWN_NT_UNLOCK
parameter_list|(
name|sc
parameter_list|)
value|mtx_unlock(&(sc)->nt_mtx)
end_define

begin_define
define|#
directive|define
name|URTWN_NT_LOCK_DESTROY
parameter_list|(
name|sc
parameter_list|)
value|mtx_destroy(&(sc)->nt_mtx)
end_define

end_unit

