begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2010 Damien Bergamini<damien.bergamini@free.fr>  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  *   * $OpenBSD: if_urtwnreg.h,v 1.3 2010/11/16 18:02:59 damien Exp $  * $FreeBSD$  */
end_comment

begin_define
define|#
directive|define
name|URTWN_CONFIG_INDEX
value|0
end_define

begin_define
define|#
directive|define
name|URTWN_IFACE_INDEX
value|0
end_define

begin_define
define|#
directive|define
name|URTWN_NOISE_FLOOR
value|-95
end_define

begin_define
define|#
directive|define
name|R92C_MAX_CHAINS
value|2
end_define

begin_comment
comment|/* Maximum number of output pipes is 3. */
end_comment

begin_define
define|#
directive|define
name|R92C_MAX_EPOUT
value|3
end_define

begin_define
define|#
directive|define
name|R92C_MAX_TX_PWR
value|0x3f
end_define

begin_define
define|#
directive|define
name|R92C_PUBQ_NPAGES
value|231
end_define

begin_define
define|#
directive|define
name|R92C_TXPKTBUF_COUNT
value|256
end_define

begin_define
define|#
directive|define
name|R92C_TX_PAGE_COUNT
value|248
end_define

begin_define
define|#
directive|define
name|R92C_TX_PAGE_BOUNDARY
value|(R92C_TX_PAGE_COUNT + 1)
end_define

begin_define
define|#
directive|define
name|R88E_TXPKTBUF_COUNT
value|177
end_define

begin_define
define|#
directive|define
name|R88E_TX_PAGE_COUNT
value|169
end_define

begin_define
define|#
directive|define
name|R88E_TX_PAGE_BOUNDARY
value|(R88E_TX_PAGE_COUNT + 1)
end_define

begin_define
define|#
directive|define
name|R92C_H2C_NBOX
value|4
end_define

begin_comment
comment|/* USB Requests. */
end_comment

begin_define
define|#
directive|define
name|R92C_REQ_REGS
value|0x05
end_define

begin_comment
comment|/*  * MAC registers.  */
end_comment

begin_comment
comment|/* System Configuration. */
end_comment

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL
value|0x000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN
value|0x002
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO
value|0x004
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CLKR
value|0x008
end_define

begin_define
define|#
directive|define
name|R92C_AFE_MISC
value|0x010
end_define

begin_define
define|#
directive|define
name|R92C_SPS0_CTRL
value|0x011
end_define

begin_define
define|#
directive|define
name|R92C_SPS_OCP_CFG
value|0x018
end_define

begin_define
define|#
directive|define
name|R92C_RSV_CTRL
value|0x01c
end_define

begin_define
define|#
directive|define
name|R92C_RF_CTRL
value|0x01f
end_define

begin_define
define|#
directive|define
name|R92C_LDOA15_CTRL
value|0x020
end_define

begin_define
define|#
directive|define
name|R92C_LDOV12D_CTRL
value|0x021
end_define

begin_define
define|#
directive|define
name|R92C_LDOHCI12_CTRL
value|0x022
end_define

begin_define
define|#
directive|define
name|R92C_LPLDO_CTRL
value|0x023
end_define

begin_define
define|#
directive|define
name|R92C_AFE_XTAL_CTRL
value|0x024
end_define

begin_define
define|#
directive|define
name|R92C_AFE_PLL_CTRL
value|0x028
end_define

begin_define
define|#
directive|define
name|R92C_EFUSE_CTRL
value|0x030
end_define

begin_define
define|#
directive|define
name|R92C_EFUSE_TEST
value|0x034
end_define

begin_define
define|#
directive|define
name|R92C_PWR_DATA
value|0x038
end_define

begin_define
define|#
directive|define
name|R92C_CAL_TIMER
value|0x03c
end_define

begin_define
define|#
directive|define
name|R92C_ACLK_MON
value|0x03e
end_define

begin_define
define|#
directive|define
name|R92C_GPIO_MUXCFG
value|0x040
end_define

begin_define
define|#
directive|define
name|R92C_GPIO_IO_SEL
value|0x042
end_define

begin_define
define|#
directive|define
name|R92C_MAC_PINMUX_CFG
value|0x043
end_define

begin_define
define|#
directive|define
name|R92C_GPIO_PIN_CTRL
value|0x044
end_define

begin_define
define|#
directive|define
name|R92C_GPIO_INTM
value|0x048
end_define

begin_define
define|#
directive|define
name|R92C_LEDCFG0
value|0x04c
end_define

begin_define
define|#
directive|define
name|R92C_LEDCFG1
value|0x04d
end_define

begin_define
define|#
directive|define
name|R92C_LEDCFG2
value|0x04e
end_define

begin_define
define|#
directive|define
name|R92C_LEDCFG3
value|0x04f
end_define

begin_define
define|#
directive|define
name|R92C_FSIMR
value|0x050
end_define

begin_define
define|#
directive|define
name|R92C_FSISR
value|0x054
end_define

begin_define
define|#
directive|define
name|R92C_HSIMR
value|0x058
end_define

begin_define
define|#
directive|define
name|R92C_HSISR
value|0x05c
end_define

begin_define
define|#
directive|define
name|R92C_MCUFWDL
value|0x080
end_define

begin_define
define|#
directive|define
name|R92C_HMEBOX_EXT
parameter_list|(
name|idx
parameter_list|)
value|(0x088 + (idx) * 2)
end_define

begin_define
define|#
directive|define
name|R88E_HIMR
value|0x0b0
end_define

begin_define
define|#
directive|define
name|R88E_HISR
value|0x0b4
end_define

begin_define
define|#
directive|define
name|R88E_HIMRE
value|0x0b8
end_define

begin_define
define|#
directive|define
name|R88E_HISRE
value|0x0bc
end_define

begin_define
define|#
directive|define
name|R92C_EFUSE_ACCESS
value|0x0cf
end_define

begin_define
define|#
directive|define
name|R92C_BIST_SCAN
value|0x0d0
end_define

begin_define
define|#
directive|define
name|R92C_BIST_RPT
value|0x0d4
end_define

begin_define
define|#
directive|define
name|R92C_BIST_ROM_RPT
value|0x0d8
end_define

begin_define
define|#
directive|define
name|R92C_USB_SIE_INTF
value|0x0e0
end_define

begin_define
define|#
directive|define
name|R92C_PCIE_MIO_INTF
value|0x0e4
end_define

begin_define
define|#
directive|define
name|R92C_PCIE_MIO_INTD
value|0x0e8
end_define

begin_define
define|#
directive|define
name|R92C_HPON_FSM
value|0x0ec
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG
value|0x0f0
end_define

begin_comment
comment|/* MAC General Configuration. */
end_comment

begin_define
define|#
directive|define
name|R92C_CR
value|0x100
end_define

begin_define
define|#
directive|define
name|R92C_MSR
value|0x102
end_define

begin_define
define|#
directive|define
name|R92C_PBP
value|0x104
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL
value|0x10c
end_define

begin_define
define|#
directive|define
name|R92C_TRXFF_BNDY
value|0x114
end_define

begin_define
define|#
directive|define
name|R92C_TRXFF_STATUS
value|0x118
end_define

begin_define
define|#
directive|define
name|R92C_RXFF_PTR
value|0x11c
end_define

begin_define
define|#
directive|define
name|R92C_HIMR
value|0x120
end_define

begin_define
define|#
directive|define
name|R92C_HISR
value|0x124
end_define

begin_define
define|#
directive|define
name|R92C_HIMRE
value|0x128
end_define

begin_define
define|#
directive|define
name|R92C_HISRE
value|0x12c
end_define

begin_define
define|#
directive|define
name|R92C_CPWM
value|0x12f
end_define

begin_define
define|#
directive|define
name|R92C_FWIMR
value|0x130
end_define

begin_define
define|#
directive|define
name|R92C_FWISR
value|0x134
end_define

begin_define
define|#
directive|define
name|R92C_PKTBUF_DBG_CTRL
value|0x140
end_define

begin_define
define|#
directive|define
name|R92C_PKTBUF_DBG_DATA_L
value|0x144
end_define

begin_define
define|#
directive|define
name|R92C_PKTBUF_DBG_DATA_H
value|0x148
end_define

begin_define
define|#
directive|define
name|R92C_TC0_CTRL
parameter_list|(
name|i
parameter_list|)
value|(0x150 + (i) * 4)
end_define

begin_define
define|#
directive|define
name|R92C_TCUNIT_BASE
value|0x164
end_define

begin_define
define|#
directive|define
name|R92C_MBIST_START
value|0x174
end_define

begin_define
define|#
directive|define
name|R92C_MBIST_DONE
value|0x178
end_define

begin_define
define|#
directive|define
name|R92C_MBIST_FAIL
value|0x17c
end_define

begin_define
define|#
directive|define
name|R92C_C2HEVT_MSG_NORMAL
value|0x1a0
end_define

begin_define
define|#
directive|define
name|R92C_C2HEVT_MSG_TEST
value|0x1b8
end_define

begin_define
define|#
directive|define
name|R92C_C2HEVT_CLEAR
value|0x1bf
end_define

begin_define
define|#
directive|define
name|R92C_MCUTST_1
value|0x1c0
end_define

begin_define
define|#
directive|define
name|R92C_FMETHR
value|0x1c8
end_define

begin_define
define|#
directive|define
name|R92C_HMETFR
value|0x1cc
end_define

begin_define
define|#
directive|define
name|R92C_HMEBOX
parameter_list|(
name|idx
parameter_list|)
value|(0x1d0 + (idx) * 4)
end_define

begin_define
define|#
directive|define
name|R92C_LLT_INIT
value|0x1e0
end_define

begin_define
define|#
directive|define
name|R92C_BB_ACCESS_CTRL
value|0x1e8
end_define

begin_define
define|#
directive|define
name|R92C_BB_ACCESS_DATA
value|0x1ec
end_define

begin_define
define|#
directive|define
name|R88E_HMEBOX_EXT
parameter_list|(
name|idx
parameter_list|)
value|(0x1f0 + (idx) * 4)
end_define

begin_comment
comment|/* Tx DMA Configuration. */
end_comment

begin_define
define|#
directive|define
name|R92C_RQPN
value|0x200
end_define

begin_define
define|#
directive|define
name|R92C_FIFOPAGE
value|0x204
end_define

begin_define
define|#
directive|define
name|R92C_TDECTRL
value|0x208
end_define

begin_define
define|#
directive|define
name|R92C_TXDMA_OFFSET_CHK
value|0x20c
end_define

begin_define
define|#
directive|define
name|R92C_TXDMA_STATUS
value|0x210
end_define

begin_define
define|#
directive|define
name|R92C_RQPN_NPQ
value|0x214
end_define

begin_comment
comment|/* Rx DMA Configuration. */
end_comment

begin_define
define|#
directive|define
name|R92C_RXDMA_AGG_PG_TH
value|0x280
end_define

begin_define
define|#
directive|define
name|R92C_RXPKT_NUM
value|0x284
end_define

begin_define
define|#
directive|define
name|R92C_RXDMA_STATUS
value|0x288
end_define

begin_comment
comment|/* Protocol Configuration. */
end_comment

begin_define
define|#
directive|define
name|R92C_FWHW_TXQ_CTRL
value|0x420
end_define

begin_define
define|#
directive|define
name|R92C_HWSEQ_CTRL
value|0x423
end_define

begin_define
define|#
directive|define
name|R92C_TXPKTBUF_BCNQ_BDNY
value|0x424
end_define

begin_define
define|#
directive|define
name|R92C_TXPKTBUF_MGQ_BDNY
value|0x425
end_define

begin_define
define|#
directive|define
name|R92C_SPEC_SIFS
value|0x428
end_define

begin_define
define|#
directive|define
name|R92C_RL
value|0x42a
end_define

begin_define
define|#
directive|define
name|R92C_DARFRC
value|0x430
end_define

begin_define
define|#
directive|define
name|R92C_RARFRC
value|0x438
end_define

begin_define
define|#
directive|define
name|R92C_RRSR
value|0x440
end_define

begin_define
define|#
directive|define
name|R92C_ARFR
parameter_list|(
name|i
parameter_list|)
value|(0x444 + (i) * 4)
end_define

begin_define
define|#
directive|define
name|R92C_AGGLEN_LMT
value|0x458
end_define

begin_define
define|#
directive|define
name|R92C_AMPDU_MIN_SPACE
value|0x45c
end_define

begin_define
define|#
directive|define
name|R92C_TXPKTBUF_WMAC_LBK_BF_HD
value|0x45d
end_define

begin_define
define|#
directive|define
name|R92C_FAST_EDCA_CTRL
value|0x460
end_define

begin_define
define|#
directive|define
name|R92C_RD_RESP_PKT_TH
value|0x463
end_define

begin_define
define|#
directive|define
name|R92C_INIRTS_RATE_SEL
value|0x480
end_define

begin_define
define|#
directive|define
name|R92C_INIDATA_RATE_SEL
parameter_list|(
name|macid
parameter_list|)
value|(0x484 + (macid))
end_define

begin_define
define|#
directive|define
name|R92C_MAX_AGGR_NUM
value|0x4ca
end_define

begin_comment
comment|/* EDCA Configuration. */
end_comment

begin_define
define|#
directive|define
name|R92C_EDCA_VO_PARAM
value|0x500
end_define

begin_define
define|#
directive|define
name|R92C_EDCA_VI_PARAM
value|0x504
end_define

begin_define
define|#
directive|define
name|R92C_EDCA_BE_PARAM
value|0x508
end_define

begin_define
define|#
directive|define
name|R92C_EDCA_BK_PARAM
value|0x50c
end_define

begin_define
define|#
directive|define
name|R92C_BCNTCFG
value|0x510
end_define

begin_define
define|#
directive|define
name|R92C_PIFS
value|0x512
end_define

begin_define
define|#
directive|define
name|R92C_RDG_PIFS
value|0x513
end_define

begin_define
define|#
directive|define
name|R92C_SIFS_CCK
value|0x514
end_define

begin_define
define|#
directive|define
name|R92C_SIFS_OFDM
value|0x516
end_define

begin_define
define|#
directive|define
name|R92C_AGGR_BREAK_TIME
value|0x51a
end_define

begin_define
define|#
directive|define
name|R92C_SLOT
value|0x51b
end_define

begin_define
define|#
directive|define
name|R92C_TX_PTCL_CTRL
value|0x520
end_define

begin_define
define|#
directive|define
name|R92C_TXPAUSE
value|0x522
end_define

begin_define
define|#
directive|define
name|R92C_DIS_TXREQ_CLR
value|0x523
end_define

begin_define
define|#
directive|define
name|R92C_RD_CTRL
value|0x524
end_define

begin_define
define|#
directive|define
name|R92C_TBTT_PROHIBIT
value|0x540
end_define

begin_define
define|#
directive|define
name|R92C_RD_NAV_NXT
value|0x544
end_define

begin_define
define|#
directive|define
name|R92C_NAV_PROT_LEN
value|0x546
end_define

begin_define
define|#
directive|define
name|R92C_BCN_CTRL
value|0x550
end_define

begin_define
define|#
directive|define
name|R92C_MBID_NUM
value|0x552
end_define

begin_define
define|#
directive|define
name|R92C_DUAL_TSF_RST
value|0x553
end_define

begin_define
define|#
directive|define
name|R92C_BCN_INTERVAL
value|0x554
end_define

begin_define
define|#
directive|define
name|R92C_DRVERLYINT
value|0x558
end_define

begin_define
define|#
directive|define
name|R92C_BCNDMATIM
value|0x559
end_define

begin_define
define|#
directive|define
name|R92C_ATIMWND
value|0x55a
end_define

begin_define
define|#
directive|define
name|R92C_USTIME_TSF
value|0x55c
end_define

begin_define
define|#
directive|define
name|R92C_BCN_MAX_ERR
value|0x55d
end_define

begin_define
define|#
directive|define
name|R92C_RXTSF_OFFSET_CCK
value|0x55e
end_define

begin_define
define|#
directive|define
name|R92C_RXTSF_OFFSET_OFDM
value|0x55f
end_define

begin_define
define|#
directive|define
name|R92C_TSFTR
value|0x560
end_define

begin_define
define|#
directive|define
name|R92C_INIT_TSFTR
value|0x564
end_define

begin_define
define|#
directive|define
name|R92C_PSTIMER
value|0x580
end_define

begin_define
define|#
directive|define
name|R92C_TIMER0
value|0x584
end_define

begin_define
define|#
directive|define
name|R92C_TIMER1
value|0x588
end_define

begin_define
define|#
directive|define
name|R92C_ACMHWCTRL
value|0x5c0
end_define

begin_define
define|#
directive|define
name|R92C_ACMRSTCTRL
value|0x5c1
end_define

begin_define
define|#
directive|define
name|R92C_ACMAVG
value|0x5c2
end_define

begin_define
define|#
directive|define
name|R92C_VO_ADMTIME
value|0x5c4
end_define

begin_define
define|#
directive|define
name|R92C_VI_ADMTIME
value|0x5c6
end_define

begin_define
define|#
directive|define
name|R92C_BE_ADMTIME
value|0x5c8
end_define

begin_define
define|#
directive|define
name|R92C_EDCA_RANDOM_GEN
value|0x5cc
end_define

begin_define
define|#
directive|define
name|R92C_SCH_TXCMD
value|0x5d0
end_define

begin_comment
comment|/* WMAC Configuration. */
end_comment

begin_define
define|#
directive|define
name|R92C_APSD_CTRL
value|0x600
end_define

begin_define
define|#
directive|define
name|R92C_BWOPMODE
value|0x603
end_define

begin_define
define|#
directive|define
name|R92C_RCR
value|0x608
end_define

begin_define
define|#
directive|define
name|R92C_RX_DRVINFO_SZ
value|0x60f
end_define

begin_define
define|#
directive|define
name|R92C_MACID
value|0x610
end_define

begin_define
define|#
directive|define
name|R92C_BSSID
value|0x618
end_define

begin_define
define|#
directive|define
name|R92C_MAR
value|0x620
end_define

begin_define
define|#
directive|define
name|R92C_MAC_SPEC_SIFS
value|0x63a
end_define

begin_define
define|#
directive|define
name|R92C_R2T_SIFS
value|0x63c
end_define

begin_define
define|#
directive|define
name|R92C_T2T_SIFS
value|0x63e
end_define

begin_define
define|#
directive|define
name|R92C_ACKTO
value|0x640
end_define

begin_define
define|#
directive|define
name|R92C_CAMCMD
value|0x670
end_define

begin_define
define|#
directive|define
name|R92C_CAMWRITE
value|0x674
end_define

begin_define
define|#
directive|define
name|R92C_CAMREAD
value|0x678
end_define

begin_define
define|#
directive|define
name|R92C_CAMDBG
value|0x67c
end_define

begin_define
define|#
directive|define
name|R92C_SECCFG
value|0x680
end_define

begin_define
define|#
directive|define
name|R92C_RXFLTMAP0
value|0x6a0
end_define

begin_define
define|#
directive|define
name|R92C_RXFLTMAP1
value|0x6a2
end_define

begin_define
define|#
directive|define
name|R92C_RXFLTMAP2
value|0x6a4
end_define

begin_comment
comment|/* Bits for R92C_SYS_ISO_CTRL. */
end_comment

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL_MD2PP
value|0x0001
end_define

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL_UA2USB
value|0x0002
end_define

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL_UD2CORE
value|0x0004
end_define

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL_PA2PCIE
value|0x0008
end_define

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL_PD2CORE
value|0x0010
end_define

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL_IP2MAC
value|0x0020
end_define

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL_DIOP
value|0x0040
end_define

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL_DIOE
value|0x0080
end_define

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL_EB2CORE
value|0x0100
end_define

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL_DIOR
value|0x0200
end_define

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL_PWC_EV25V
value|0x4000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_ISO_CTRL_PWC_EV12V
value|0x8000
end_define

begin_comment
comment|/* Bits for R92C_SYS_FUNC_EN. */
end_comment

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_BBRSTB
value|0x0001
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_BB_GLB_RST
value|0x0002
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_USBA
value|0x0004
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_UPLL
value|0x0008
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_USBD
value|0x0010
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_DIO_PCIE
value|0x0020
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_PCIEA
value|0x0040
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_PPLL
value|0x0080
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_PCIED
value|0x0100
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_DIOE
value|0x0200
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_CPUEN
value|0x0400
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_DCORE
value|0x0800
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_ELDR
value|0x1000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_DIO_RF
value|0x2000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_HWPDN
value|0x4000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_FUNC_EN_MREGEN
value|0x8000
end_define

begin_comment
comment|/* Bits for R92C_APS_FSMCO. */
end_comment

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_PFM_LDALL
value|0x00000001
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_PFM_ALDN
value|0x00000002
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_PFM_LDKP
value|0x00000004
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_PFM_WOWL
value|0x00000008
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_PDN_EN
value|0x00000010
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_PDN_PL
value|0x00000020
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_APFM_ONMAC
value|0x00000100
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_APFM_OFF
value|0x00000200
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_APFM_RSM
value|0x00000400
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_AFSM_HSUS
value|0x00000800
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_AFSM_PCIE
value|0x00001000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_APDM_MAC
value|0x00002000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_APDM_HOST
value|0x00004000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_APDM_HPDN
value|0x00008000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_RDY_MACON
value|0x00010000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_SUS_HOST
value|0x00020000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_ROP_ALD
value|0x00100000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_ROP_PWR
value|0x00200000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_ROP_SPS
value|0x00400000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_SOP_MRST
value|0x02000000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_SOP_FUSE
value|0x04000000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_SOP_ABG
value|0x08000000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_SOP_AMB
value|0x10000000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_SOP_RCK
value|0x20000000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_SOP_A8M
value|0x40000000
end_define

begin_define
define|#
directive|define
name|R92C_APS_FSMCO_XOP_BTCK
value|0x80000000
end_define

begin_comment
comment|/* Bits for R92C_SYS_CLKR. */
end_comment

begin_define
define|#
directive|define
name|R92C_SYS_CLKR_ANAD16V_EN
value|0x00000001
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CLKR_ANA8M
value|0x00000002
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CLKR_MACSLP
value|0x00000010
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CLKR_LOADER_EN
value|0x00000020
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CLKR_80M_SSC_DIS
value|0x00000080
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CLKR_80M_SSC_EN_HO
value|0x00000100
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CLKR_PHY_SSC_RSTB
value|0x00000200
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CLKR_SEC_EN
value|0x00000400
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CLKR_MAC_EN
value|0x00000800
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CLKR_SYS_EN
value|0x00001000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CLKR_RING_EN
value|0x00002000
end_define

begin_comment
comment|/* Bits for R92C_RF_CTRL. */
end_comment

begin_define
define|#
directive|define
name|R92C_RF_CTRL_EN
value|0x01
end_define

begin_define
define|#
directive|define
name|R92C_RF_CTRL_RSTB
value|0x02
end_define

begin_define
define|#
directive|define
name|R92C_RF_CTRL_SDMRSTB
value|0x04
end_define

begin_comment
comment|/* Bits for R92C_LDOV12D_CTRL. */
end_comment

begin_define
define|#
directive|define
name|R92C_LDOV12D_CTRL_LDV12_EN
value|0x01
end_define

begin_comment
comment|/* Bits for R92C_AFE_XTAL_CTRL. */
end_comment

begin_define
define|#
directive|define
name|R92C_AFE_XTAL_CTRL_ADDR_M
value|0x007ff800
end_define

begin_define
define|#
directive|define
name|R92C_AFE_XTAL_CTRL_ADDR_S
value|11
end_define

begin_comment
comment|/* Bits for R92C_EFUSE_CTRL. */
end_comment

begin_define
define|#
directive|define
name|R92C_EFUSE_CTRL_DATA_M
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|R92C_EFUSE_CTRL_DATA_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_EFUSE_CTRL_ADDR_M
value|0x0003ff00
end_define

begin_define
define|#
directive|define
name|R92C_EFUSE_CTRL_ADDR_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_EFUSE_CTRL_VALID
value|0x80000000
end_define

begin_comment
comment|/* Bits for R92C_GPIO_MUXCFG. */
end_comment

begin_define
define|#
directive|define
name|R92C_GPIO_MUXCFG_ENBT
value|0x0020
end_define

begin_comment
comment|/* Bits for R92C_LEDCFG0. */
end_comment

begin_define
define|#
directive|define
name|R92C_LEDCFG0_DIS
value|0x08
end_define

begin_comment
comment|/* Bits for R92C_MCUFWDL. */
end_comment

begin_define
define|#
directive|define
name|R92C_MCUFWDL_EN
value|0x00000001
end_define

begin_define
define|#
directive|define
name|R92C_MCUFWDL_RDY
value|0x00000002
end_define

begin_define
define|#
directive|define
name|R92C_MCUFWDL_CHKSUM_RPT
value|0x00000004
end_define

begin_define
define|#
directive|define
name|R92C_MCUFWDL_MACINI_RDY
value|0x00000008
end_define

begin_define
define|#
directive|define
name|R92C_MCUFWDL_BBINI_RDY
value|0x00000010
end_define

begin_define
define|#
directive|define
name|R92C_MCUFWDL_RFINI_RDY
value|0x00000020
end_define

begin_define
define|#
directive|define
name|R92C_MCUFWDL_WINTINI_RDY
value|0x00000040
end_define

begin_define
define|#
directive|define
name|R92C_MCUFWDL_RAM_DL_SEL
value|0x00000080
end_define

begin_define
define|#
directive|define
name|R92C_MCUFWDL_PAGE_M
value|0x00070000
end_define

begin_define
define|#
directive|define
name|R92C_MCUFWDL_PAGE_S
value|16
end_define

begin_define
define|#
directive|define
name|R92C_MCUFWDL_CPRST
value|0x00800000
end_define

begin_comment
comment|/* Bits for R88E_HIMR. */
end_comment

begin_define
define|#
directive|define
name|R88E_HIMR_CPWM
value|0x00000100
end_define

begin_define
define|#
directive|define
name|R88E_HIMR_CPWM2
value|0x00000200
end_define

begin_define
define|#
directive|define
name|R88E_HIMR_TBDER
value|0x04000000
end_define

begin_define
define|#
directive|define
name|R88E_HIMR_PSTIMEOUT
value|0x20000000
end_define

begin_comment
comment|/* Bits for R88E_HIMRE.*/
end_comment

begin_define
define|#
directive|define
name|R88E_HIMRE_RXFOVW
value|0x00000100
end_define

begin_define
define|#
directive|define
name|R88E_HIMRE_TXFOVW
value|0x00000200
end_define

begin_define
define|#
directive|define
name|R88E_HIMRE_RXERR
value|0x00000400
end_define

begin_define
define|#
directive|define
name|R88E_HIMRE_TXERR
value|0x00000800
end_define

begin_comment
comment|/* Bits for R92C_EFUSE_ACCESS. */
end_comment

begin_define
define|#
directive|define
name|R92C_EFUSE_ACCESS_OFF
value|0x00
end_define

begin_define
define|#
directive|define
name|R92C_EFUSE_ACCESS_ON
value|0x69
end_define

begin_comment
comment|/* Bits for R92C_HPON_FSM. */
end_comment

begin_define
define|#
directive|define
name|R92C_HPON_FSM_CHIP_BONDING_ID_S
value|22
end_define

begin_define
define|#
directive|define
name|R92C_HPON_FSM_CHIP_BONDING_ID_M
value|0x00c00000
end_define

begin_define
define|#
directive|define
name|R92C_HPON_FSM_CHIP_BONDING_ID_92C_1T2R
value|1
end_define

begin_comment
comment|/* Bits for R92C_SYS_CFG. */
end_comment

begin_define
define|#
directive|define
name|R92C_SYS_CFG_XCLK_VLD
value|0x00000001
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_ACLK_VLD
value|0x00000002
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_UCLK_VLD
value|0x00000004
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_PCLK_VLD
value|0x00000008
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_PCIRSTB
value|0x00000010
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_V15_VLD
value|0x00000020
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_TRP_B15V_EN
value|0x00000080
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_SIC_IDLE
value|0x00000100
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_BD_MAC2
value|0x00000200
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_BD_MAC1
value|0x00000400
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_IC_MACPHY_MODE
value|0x00000800
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_CHIP_VER_RTL_M
value|0x0000f000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_CHIP_VER_RTL_S
value|12
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_BT_FUNC
value|0x00010000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_VENDOR_UMC
value|0x00080000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_PAD_HWPD_IDN
value|0x00400000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_TRP_VAUX_EN
value|0x00800000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_TRP_BT_EN
value|0x01000000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_BD_PKG_SEL
value|0x02000000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_BD_HCI_SEL
value|0x04000000
end_define

begin_define
define|#
directive|define
name|R92C_SYS_CFG_TYPE_92C
value|0x08000000
end_define

begin_comment
comment|/* Bits for R92C_CR. */
end_comment

begin_define
define|#
directive|define
name|R92C_CR_HCI_TXDMA_EN
value|0x0001
end_define

begin_define
define|#
directive|define
name|R92C_CR_HCI_RXDMA_EN
value|0x0002
end_define

begin_define
define|#
directive|define
name|R92C_CR_TXDMA_EN
value|0x0004
end_define

begin_define
define|#
directive|define
name|R92C_CR_RXDMA_EN
value|0x0008
end_define

begin_define
define|#
directive|define
name|R92C_CR_PROTOCOL_EN
value|0x0010
end_define

begin_define
define|#
directive|define
name|R92C_CR_SCHEDULE_EN
value|0x0020
end_define

begin_define
define|#
directive|define
name|R92C_CR_MACTXEN
value|0x0040
end_define

begin_define
define|#
directive|define
name|R92C_CR_MACRXEN
value|0x0080
end_define

begin_define
define|#
directive|define
name|R92C_CR_ENSEC
value|0x0200
end_define

begin_define
define|#
directive|define
name|R92C_CR_CALTMR_EN
value|0x0400
end_define

begin_comment
comment|/* Bits for R92C_MSR. */
end_comment

begin_define
define|#
directive|define
name|R92C_MSR_NOLINK
value|0x00
end_define

begin_define
define|#
directive|define
name|R92C_MSR_ADHOC
value|0x01
end_define

begin_define
define|#
directive|define
name|R92C_MSR_INFRA
value|0x02
end_define

begin_define
define|#
directive|define
name|R92C_MSR_AP
value|0x03
end_define

begin_define
define|#
directive|define
name|R92C_MSR_MASK
value|(R92C_MSR_AP)
end_define

begin_comment
comment|/* Bits for R92C_PBP. */
end_comment

begin_define
define|#
directive|define
name|R92C_PBP_PSRX_M
value|0x0f
end_define

begin_define
define|#
directive|define
name|R92C_PBP_PSRX_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_PBP_PSTX_M
value|0xf0
end_define

begin_define
define|#
directive|define
name|R92C_PBP_PSTX_S
value|4
end_define

begin_define
define|#
directive|define
name|R92C_PBP_64
value|0
end_define

begin_define
define|#
directive|define
name|R92C_PBP_128
value|1
end_define

begin_define
define|#
directive|define
name|R92C_PBP_256
value|2
end_define

begin_define
define|#
directive|define
name|R92C_PBP_512
value|3
end_define

begin_define
define|#
directive|define
name|R92C_PBP_1024
value|4
end_define

begin_comment
comment|/* Bits for R92C_TRXDMA_CTRL. */
end_comment

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_RXDMA_AGG_EN
value|0x0004
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_TXDMA_VOQ_MAP_M
value|0x0030
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_TXDMA_VOQ_MAP_S
value|4
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_TXDMA_VIQ_MAP_M
value|0x00c0
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_TXDMA_VIQ_MAP_S
value|6
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_TXDMA_BEQ_MAP_M
value|0x0300
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_TXDMA_BEQ_MAP_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_TXDMA_BKQ_MAP_M
value|0x0c00
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_TXDMA_BKQ_MAP_S
value|10
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_TXDMA_MGQ_MAP_M
value|0x3000
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_TXDMA_MGQ_MAP_S
value|12
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_TXDMA_HIQ_MAP_M
value|0xc000
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_TXDMA_HIQ_MAP_S
value|14
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_QUEUE_LOW
value|1
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_QUEUE_NORMAL
value|2
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_QUEUE_HIGH
value|3
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_QMAP_M
value|0xfff0
end_define

begin_comment
comment|/* Shortcuts. */
end_comment

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_QMAP_3EP
value|0xf5b0
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_QMAP_HQ_LQ
value|0xf5f0
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_QMAP_HQ_NQ
value|0xfaf0
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_QMAP_LQ
value|0x5550
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_QMAP_NQ
value|0xaaa0
end_define

begin_define
define|#
directive|define
name|R92C_TRXDMA_CTRL_QMAP_HQ
value|0xfff0
end_define

begin_comment
comment|/* Bits for R92C_LLT_INIT. */
end_comment

begin_define
define|#
directive|define
name|R92C_LLT_INIT_DATA_M
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|R92C_LLT_INIT_DATA_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_LLT_INIT_ADDR_M
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|R92C_LLT_INIT_ADDR_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_LLT_INIT_OP_M
value|0xc0000000
end_define

begin_define
define|#
directive|define
name|R92C_LLT_INIT_OP_S
value|30
end_define

begin_define
define|#
directive|define
name|R92C_LLT_INIT_OP_NO_ACTIVE
value|0
end_define

begin_define
define|#
directive|define
name|R92C_LLT_INIT_OP_WRITE
value|1
end_define

begin_comment
comment|/* Bits for R92C_RQPN. */
end_comment

begin_define
define|#
directive|define
name|R92C_RQPN_HPQ_M
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|R92C_RQPN_HPQ_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_RQPN_LPQ_M
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|R92C_RQPN_LPQ_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_RQPN_PUBQ_M
value|0x00ff0000
end_define

begin_define
define|#
directive|define
name|R92C_RQPN_PUBQ_S
value|16
end_define

begin_define
define|#
directive|define
name|R92C_RQPN_LD
value|0x80000000
end_define

begin_comment
comment|/* Bits for R92C_TDECTRL. */
end_comment

begin_define
define|#
directive|define
name|R92C_TDECTRL_BLK_DESC_NUM_M
value|0x000000f0
end_define

begin_define
define|#
directive|define
name|R92C_TDECTRL_BLK_DESC_NUM_S
value|4
end_define

begin_comment
comment|/* Bits for R92C_FWHW_TXQ_CTRL. */
end_comment

begin_define
define|#
directive|define
name|R92C_FWHW_TXQ_CTRL_AMPDU_RTY_NEW
value|0x80
end_define

begin_comment
comment|/* Bits for R92C_SPEC_SIFS. */
end_comment

begin_define
define|#
directive|define
name|R92C_SPEC_SIFS_CCK_M
value|0x00ff
end_define

begin_define
define|#
directive|define
name|R92C_SPEC_SIFS_CCK_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_SPEC_SIFS_OFDM_M
value|0xff00
end_define

begin_define
define|#
directive|define
name|R92C_SPEC_SIFS_OFDM_S
value|8
end_define

begin_comment
comment|/* Bits for R92C_RL. */
end_comment

begin_define
define|#
directive|define
name|R92C_RL_LRL_M
value|0x003f
end_define

begin_define
define|#
directive|define
name|R92C_RL_LRL_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_RL_SRL_M
value|0x3f00
end_define

begin_define
define|#
directive|define
name|R92C_RL_SRL_S
value|8
end_define

begin_comment
comment|/* Bits for R92C_RRSR. */
end_comment

begin_define
define|#
directive|define
name|R92C_RRSR_RATE_BITMAP_M
value|0x000fffff
end_define

begin_define
define|#
directive|define
name|R92C_RRSR_RATE_BITMAP_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_RRSR_RATE_CCK_ONLY_1M
value|0xffff1
end_define

begin_define
define|#
directive|define
name|R92C_RRSR_RSC_LOWSUBCHNL
value|0x00200000
end_define

begin_define
define|#
directive|define
name|R92C_RRSR_RSC_UPSUBCHNL
value|0x00400000
end_define

begin_define
define|#
directive|define
name|R92C_RRSR_SHORT
value|0x00800000
end_define

begin_comment
comment|/* Bits for R92C_EDCA_XX_PARAM. */
end_comment

begin_define
define|#
directive|define
name|R92C_EDCA_PARAM_AIFS_M
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|R92C_EDCA_PARAM_AIFS_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_EDCA_PARAM_ECWMIN_M
value|0x00000f00
end_define

begin_define
define|#
directive|define
name|R92C_EDCA_PARAM_ECWMIN_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_EDCA_PARAM_ECWMAX_M
value|0x0000f000
end_define

begin_define
define|#
directive|define
name|R92C_EDCA_PARAM_ECWMAX_S
value|12
end_define

begin_define
define|#
directive|define
name|R92C_EDCA_PARAM_TXOP_M
value|0xffff0000
end_define

begin_define
define|#
directive|define
name|R92C_EDCA_PARAM_TXOP_S
value|16
end_define

begin_comment
comment|/* Bits for R92C_BCN_CTRL. */
end_comment

begin_define
define|#
directive|define
name|R92C_BCN_CTRL_EN_MBSSID
value|0x02
end_define

begin_define
define|#
directive|define
name|R92C_BCN_CTRL_TXBCN_RPT
value|0x04
end_define

begin_define
define|#
directive|define
name|R92C_BCN_CTRL_EN_BCN
value|0x08
end_define

begin_define
define|#
directive|define
name|R92C_BCN_CTRL_DIS_TSF_UDT0
value|0x10
end_define

begin_comment
comment|/* Bits for R92C_APSD_CTRL. */
end_comment

begin_define
define|#
directive|define
name|R92C_APSD_CTRL_OFF
value|0x40
end_define

begin_define
define|#
directive|define
name|R92C_APSD_CTRL_OFF_STATUS
value|0x80
end_define

begin_comment
comment|/* Bits for R92C_BWOPMODE. */
end_comment

begin_define
define|#
directive|define
name|R92C_BWOPMODE_11J
value|0x01
end_define

begin_define
define|#
directive|define
name|R92C_BWOPMODE_5G
value|0x02
end_define

begin_define
define|#
directive|define
name|R92C_BWOPMODE_20MHZ
value|0x04
end_define

begin_comment
comment|/* Bits for R92C_RCR. */
end_comment

begin_define
define|#
directive|define
name|R92C_RCR_AAP
value|0x00000001
end_define

begin_define
define|#
directive|define
name|R92C_RCR_APM
value|0x00000002
end_define

begin_define
define|#
directive|define
name|R92C_RCR_AM
value|0x00000004
end_define

begin_define
define|#
directive|define
name|R92C_RCR_AB
value|0x00000008
end_define

begin_define
define|#
directive|define
name|R92C_RCR_ADD3
value|0x00000010
end_define

begin_define
define|#
directive|define
name|R92C_RCR_APWRMGT
value|0x00000020
end_define

begin_define
define|#
directive|define
name|R92C_RCR_CBSSID_DATA
value|0x00000040
end_define

begin_define
define|#
directive|define
name|R92C_RCR_CBSSID_BCN
value|0x00000080
end_define

begin_define
define|#
directive|define
name|R92C_RCR_ACRC32
value|0x00000100
end_define

begin_define
define|#
directive|define
name|R92C_RCR_AICV
value|0x00000200
end_define

begin_define
define|#
directive|define
name|R92C_RCR_ADF
value|0x00000800
end_define

begin_define
define|#
directive|define
name|R92C_RCR_ACF
value|0x00001000
end_define

begin_define
define|#
directive|define
name|R92C_RCR_AMF
value|0x00002000
end_define

begin_define
define|#
directive|define
name|R92C_RCR_HTC_LOC_CTRL
value|0x00004000
end_define

begin_define
define|#
directive|define
name|R92C_RCR_MFBEN
value|0x00400000
end_define

begin_define
define|#
directive|define
name|R92C_RCR_LSIGEN
value|0x00800000
end_define

begin_define
define|#
directive|define
name|R92C_RCR_ENMBID
value|0x01000000
end_define

begin_define
define|#
directive|define
name|R92C_RCR_APP_BA_SSN
value|0x08000000
end_define

begin_define
define|#
directive|define
name|R92C_RCR_APP_PHYSTS
value|0x10000000
end_define

begin_define
define|#
directive|define
name|R92C_RCR_APP_ICV
value|0x20000000
end_define

begin_define
define|#
directive|define
name|R92C_RCR_APP_MIC
value|0x40000000
end_define

begin_define
define|#
directive|define
name|R92C_RCR_APPFCS
value|0x80000000
end_define

begin_comment
comment|/* Bits for R92C_CAMCMD. */
end_comment

begin_define
define|#
directive|define
name|R92C_CAMCMD_ADDR_M
value|0x0000ffff
end_define

begin_define
define|#
directive|define
name|R92C_CAMCMD_ADDR_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_CAMCMD_WRITE
value|0x00010000
end_define

begin_define
define|#
directive|define
name|R92C_CAMCMD_CLR
value|0x40000000
end_define

begin_define
define|#
directive|define
name|R92C_CAMCMD_POLLING
value|0x80000000
end_define

begin_comment
comment|/* Bits for R92C_RXFLTMAP*. */
end_comment

begin_define
define|#
directive|define
name|R92C_RXFLTMAP_SUBTYPE
parameter_list|(
name|subtype
parameter_list|)
define|\
value|(1<< ((subtype)>> IEEE80211_FC0_SUBTYPE_SHIFT))
end_define

begin_comment
comment|/*  * Baseband registers.  */
end_comment

begin_define
define|#
directive|define
name|R92C_FPGA0_RFMOD
value|0x800
end_define

begin_define
define|#
directive|define
name|R92C_FPGA0_TXINFO
value|0x804
end_define

begin_define
define|#
directive|define
name|R92C_HSSI_PARAM1
parameter_list|(
name|chain
parameter_list|)
value|(0x820 + (chain) * 8)
end_define

begin_define
define|#
directive|define
name|R92C_HSSI_PARAM2
parameter_list|(
name|chain
parameter_list|)
value|(0x824 + (chain) * 8)
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE18_06
parameter_list|(
name|i
parameter_list|)
value|(((i) == 0) ? 0xe00 : 0x830)
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE54_24
parameter_list|(
name|i
parameter_list|)
value|(((i) == 0) ? 0xe04 : 0x834)
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_A_CCK1_MCS32
value|0xe08
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_B_CCK1_55_MCS32
value|0x838
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_B_CCK11_A_CCK2_11
value|0x86c
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS03_MCS00
parameter_list|(
name|i
parameter_list|)
value|(((i) == 0) ? 0xe10 : 0x83c)
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS07_MCS04
parameter_list|(
name|i
parameter_list|)
value|(((i) == 0) ? 0xe14 : 0x848)
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS11_MCS08
parameter_list|(
name|i
parameter_list|)
value|(((i) == 0) ? 0xe18 : 0x84c)
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS15_MCS12
parameter_list|(
name|i
parameter_list|)
value|(((i) == 0) ? 0xe1c : 0x868)
end_define

begin_define
define|#
directive|define
name|R92C_LSSI_PARAM
parameter_list|(
name|chain
parameter_list|)
value|(0x840 + (chain) * 4)
end_define

begin_define
define|#
directive|define
name|R92C_FPGA0_RFIFACEOE
parameter_list|(
name|chain
parameter_list|)
value|(0x860 + (chain) * 4)
end_define

begin_define
define|#
directive|define
name|R92C_FPGA0_RFIFACESW
parameter_list|(
name|idx
parameter_list|)
value|(0x870 + (idx) * 4)
end_define

begin_define
define|#
directive|define
name|R92C_FPGA0_RFPARAM
parameter_list|(
name|idx
parameter_list|)
value|(0x878 + (idx) * 4)
end_define

begin_define
define|#
directive|define
name|R92C_FPGA0_ANAPARAM2
value|0x884
end_define

begin_define
define|#
directive|define
name|R92C_LSSI_READBACK
parameter_list|(
name|chain
parameter_list|)
value|(0x8a0 + (chain) * 4)
end_define

begin_define
define|#
directive|define
name|R92C_HSPI_READBACK
parameter_list|(
name|chain
parameter_list|)
value|(0x8b8 + (chain) * 4)
end_define

begin_define
define|#
directive|define
name|R92C_FPGA1_RFMOD
value|0x900
end_define

begin_define
define|#
directive|define
name|R92C_FPGA1_TXINFO
value|0x90c
end_define

begin_define
define|#
directive|define
name|R92C_CCK0_SYSTEM
value|0xa00
end_define

begin_define
define|#
directive|define
name|R92C_CCK0_AFESETTING
value|0xa04
end_define

begin_define
define|#
directive|define
name|R92C_OFDM0_TRXPATHENA
value|0xc04
end_define

begin_define
define|#
directive|define
name|R92C_OFDM0_TRMUXPAR
value|0xc08
end_define

begin_define
define|#
directive|define
name|R92C_OFDM0_AGCCORE1
parameter_list|(
name|chain
parameter_list|)
value|(0xc50 + (chain) * 8)
end_define

begin_define
define|#
directive|define
name|R92C_OFDM0_AGCPARAM1
value|0xc70
end_define

begin_define
define|#
directive|define
name|R92C_OFDM0_AGCRSSITABLE
value|0xc78
end_define

begin_define
define|#
directive|define
name|R92C_OFDM1_LSTF
value|0xd00
end_define

begin_comment
comment|/* Bits for R92C_FPGA[01]_RFMOD. */
end_comment

begin_define
define|#
directive|define
name|R92C_RFMOD_40MHZ
value|0x00000001
end_define

begin_define
define|#
directive|define
name|R92C_RFMOD_JAPAN
value|0x00000002
end_define

begin_define
define|#
directive|define
name|R92C_RFMOD_CCK_TXSC
value|0x00000030
end_define

begin_define
define|#
directive|define
name|R92C_RFMOD_CCK_EN
value|0x01000000
end_define

begin_define
define|#
directive|define
name|R92C_RFMOD_OFDM_EN
value|0x02000000
end_define

begin_comment
comment|/* Bits for R92C_HSSI_PARAM1(i). */
end_comment

begin_define
define|#
directive|define
name|R92C_HSSI_PARAM1_PI
value|0x00000100
end_define

begin_comment
comment|/* Bits for R92C_HSSI_PARAM2(i). */
end_comment

begin_define
define|#
directive|define
name|R92C_HSSI_PARAM2_CCK_HIPWR
value|0x00000200
end_define

begin_define
define|#
directive|define
name|R92C_HSSI_PARAM2_ADDR_LENGTH
value|0x00000400
end_define

begin_define
define|#
directive|define
name|R92C_HSSI_PARAM2_DATA_LENGTH
value|0x00000800
end_define

begin_define
define|#
directive|define
name|R92C_HSSI_PARAM2_READ_ADDR_M
value|0x7f800000
end_define

begin_define
define|#
directive|define
name|R92C_HSSI_PARAM2_READ_ADDR_S
value|23
end_define

begin_define
define|#
directive|define
name|R92C_HSSI_PARAM2_READ_EDGE
value|0x80000000
end_define

begin_comment
comment|/* Bits for R92C_TXAGC_A_CCK1_MCS32. */
end_comment

begin_define
define|#
directive|define
name|R92C_TXAGC_A_CCK1_M
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_A_CCK1_S
value|8
end_define

begin_comment
comment|/* Bits for R92C_TXAGC_B_CCK11_A_CCK2_11. */
end_comment

begin_define
define|#
directive|define
name|R92C_TXAGC_B_CCK11_M
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_B_CCK11_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_A_CCK2_M
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_A_CCK2_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_A_CCK55_M
value|0x00ff0000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_A_CCK55_S
value|16
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_A_CCK11_M
value|0xff000000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_A_CCK11_S
value|24
end_define

begin_comment
comment|/* Bits for R92C_TXAGC_B_CCK1_55_MCS32. */
end_comment

begin_define
define|#
directive|define
name|R92C_TXAGC_B_CCK1_M
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_B_CCK1_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_B_CCK2_M
value|0x00ff0000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_B_CCK2_S
value|16
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_B_CCK55_M
value|0xff000000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_B_CCK55_S
value|24
end_define

begin_comment
comment|/* Bits for R92C_TXAGC_RATE18_06(x). */
end_comment

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE06_M
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE06_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE09_M
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE09_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE12_M
value|0x00ff0000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE12_S
value|16
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE18_M
value|0xff000000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE18_S
value|24
end_define

begin_comment
comment|/* Bits for R92C_TXAGC_RATE54_24(x). */
end_comment

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE24_M
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE24_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE36_M
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE36_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE48_M
value|0x00ff0000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE48_S
value|16
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE54_M
value|0xff000000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_RATE54_S
value|24
end_define

begin_comment
comment|/* Bits for R92C_TXAGC_MCS03_MCS00(x). */
end_comment

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS00_M
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS00_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS01_M
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS01_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS02_M
value|0x00ff0000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS02_S
value|16
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS03_M
value|0xff000000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS03_S
value|24
end_define

begin_comment
comment|/* Bits for R92C_TXAGC_MCS07_MCS04(x). */
end_comment

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS04_M
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS04_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS05_M
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS05_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS06_M
value|0x00ff0000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS06_S
value|16
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS07_M
value|0xff000000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS07_S
value|24
end_define

begin_comment
comment|/* Bits for R92C_TXAGC_MCS11_MCS08(x). */
end_comment

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS08_M
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS08_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS09_M
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS09_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS10_M
value|0x00ff0000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS10_S
value|16
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS11_M
value|0xff000000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS11_S
value|24
end_define

begin_comment
comment|/* Bits for R92C_TXAGC_MCS15_MCS12(x). */
end_comment

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS12_M
value|0x000000ff
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS12_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS13_M
value|0x0000ff00
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS13_S
value|8
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS14_M
value|0x00ff0000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS14_S
value|16
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS15_M
value|0xff000000
end_define

begin_define
define|#
directive|define
name|R92C_TXAGC_MCS15_S
value|24
end_define

begin_comment
comment|/* Bits for R92C_LSSI_PARAM(i). */
end_comment

begin_define
define|#
directive|define
name|R92C_LSSI_PARAM_DATA_M
value|0x000fffff
end_define

begin_define
define|#
directive|define
name|R92C_LSSI_PARAM_DATA_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_LSSI_PARAM_ADDR_M
value|0x03f00000
end_define

begin_define
define|#
directive|define
name|R92C_LSSI_PARAM_ADDR_S
value|20
end_define

begin_define
define|#
directive|define
name|R88E_LSSI_PARAM_ADDR_M
value|0x0ff00000
end_define

begin_define
define|#
directive|define
name|R88E_LSSI_PARAM_ADDR_S
value|20
end_define

begin_comment
comment|/* Bits for R92C_FPGA0_ANAPARAM2. */
end_comment

begin_define
define|#
directive|define
name|R92C_FPGA0_ANAPARAM2_CBW20
value|0x00000400
end_define

begin_comment
comment|/* Bits for R92C_LSSI_READBACK(i). */
end_comment

begin_define
define|#
directive|define
name|R92C_LSSI_READBACK_DATA_M
value|0x000fffff
end_define

begin_define
define|#
directive|define
name|R92C_LSSI_READBACK_DATA_S
value|0
end_define

begin_comment
comment|/* Bits for R92C_OFDM0_AGCCORE1(i). */
end_comment

begin_define
define|#
directive|define
name|R92C_OFDM0_AGCCORE1_GAIN_M
value|0x0000007f
end_define

begin_define
define|#
directive|define
name|R92C_OFDM0_AGCCORE1_GAIN_S
value|0
end_define

begin_comment
comment|/*  * USB registers.  */
end_comment

begin_define
define|#
directive|define
name|R92C_USB_INFO
value|0xfe17
end_define

begin_define
define|#
directive|define
name|R92C_USB_SPECIAL_OPTION
value|0xfe55
end_define

begin_define
define|#
directive|define
name|R92C_USB_HCPWM
value|0xfe57
end_define

begin_define
define|#
directive|define
name|R92C_USB_HRPWM
value|0xfe58
end_define

begin_define
define|#
directive|define
name|R92C_USB_DMA_AGG_TO
value|0xfe5b
end_define

begin_define
define|#
directive|define
name|R92C_USB_AGG_TO
value|0xfe5c
end_define

begin_define
define|#
directive|define
name|R92C_USB_AGG_TH
value|0xfe5d
end_define

begin_define
define|#
directive|define
name|R92C_USB_VID
value|0xfe60
end_define

begin_define
define|#
directive|define
name|R92C_USB_PID
value|0xfe62
end_define

begin_define
define|#
directive|define
name|R92C_USB_OPTIONAL
value|0xfe64
end_define

begin_define
define|#
directive|define
name|R92C_USB_EP
value|0xfe65
end_define

begin_define
define|#
directive|define
name|R92C_USB_PHY
value|0xfe68
end_define

begin_define
define|#
directive|define
name|R92C_USB_MAC_ADDR
value|0xfe70
end_define

begin_define
define|#
directive|define
name|R92C_USB_STRING
value|0xfe80
end_define

begin_comment
comment|/* Bits for R92C_USB_SPECIAL_OPTION. */
end_comment

begin_define
define|#
directive|define
name|R92C_USB_SPECIAL_OPTION_AGG_EN
value|0x08
end_define

begin_define
define|#
directive|define
name|R92C_USB_SPECIAL_OPTION_INT_BULK_SEL
value|0x10
end_define

begin_comment
comment|/* Bits for R92C_USB_EP. */
end_comment

begin_define
define|#
directive|define
name|R92C_USB_EP_HQ_M
value|0x000f
end_define

begin_define
define|#
directive|define
name|R92C_USB_EP_HQ_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_USB_EP_NQ_M
value|0x00f0
end_define

begin_define
define|#
directive|define
name|R92C_USB_EP_NQ_S
value|4
end_define

begin_define
define|#
directive|define
name|R92C_USB_EP_LQ_M
value|0x0f00
end_define

begin_define
define|#
directive|define
name|R92C_USB_EP_LQ_S
value|8
end_define

begin_comment
comment|/*  * Firmware base address.  */
end_comment

begin_define
define|#
directive|define
name|R92C_FW_START_ADDR
value|0x1000
end_define

begin_define
define|#
directive|define
name|R92C_FW_PAGE_SIZE
value|4096
end_define

begin_comment
comment|/*  * RF (6052) registers.  */
end_comment

begin_define
define|#
directive|define
name|R92C_RF_AC
value|0x00
end_define

begin_define
define|#
directive|define
name|R92C_RF_IQADJ_G
parameter_list|(
name|i
parameter_list|)
value|(0x01 + (i))
end_define

begin_define
define|#
directive|define
name|R92C_RF_POW_TRSW
value|0x05
end_define

begin_define
define|#
directive|define
name|R92C_RF_GAIN_RX
value|0x06
end_define

begin_define
define|#
directive|define
name|R92C_RF_GAIN_TX
value|0x07
end_define

begin_define
define|#
directive|define
name|R92C_RF_TXM_IDAC
value|0x08
end_define

begin_define
define|#
directive|define
name|R92C_RF_BS_IQGEN
value|0x0f
end_define

begin_define
define|#
directive|define
name|R92C_RF_MODE1
value|0x10
end_define

begin_define
define|#
directive|define
name|R92C_RF_MODE2
value|0x11
end_define

begin_define
define|#
directive|define
name|R92C_RF_RX_AGC_HP
value|0x12
end_define

begin_define
define|#
directive|define
name|R92C_RF_TX_AGC
value|0x13
end_define

begin_define
define|#
directive|define
name|R92C_RF_BIAS
value|0x14
end_define

begin_define
define|#
directive|define
name|R92C_RF_IPA
value|0x15
end_define

begin_define
define|#
directive|define
name|R92C_RF_POW_ABILITY
value|0x17
end_define

begin_define
define|#
directive|define
name|R92C_RF_CHNLBW
value|0x18
end_define

begin_define
define|#
directive|define
name|R92C_RF_RX_G1
value|0x1a
end_define

begin_define
define|#
directive|define
name|R92C_RF_RX_G2
value|0x1b
end_define

begin_define
define|#
directive|define
name|R92C_RF_RX_BB2
value|0x1c
end_define

begin_define
define|#
directive|define
name|R92C_RF_RX_BB1
value|0x1d
end_define

begin_define
define|#
directive|define
name|R92C_RF_RCK1
value|0x1e
end_define

begin_define
define|#
directive|define
name|R92C_RF_RCK2
value|0x1f
end_define

begin_define
define|#
directive|define
name|R92C_RF_TX_G
parameter_list|(
name|i
parameter_list|)
value|(0x20 + (i))
end_define

begin_define
define|#
directive|define
name|R92C_RF_TX_BB1
value|0x23
end_define

begin_define
define|#
directive|define
name|R92C_RF_T_METER
value|0x24
end_define

begin_define
define|#
directive|define
name|R92C_RF_SYN_G
parameter_list|(
name|i
parameter_list|)
value|(0x25 + (i))
end_define

begin_define
define|#
directive|define
name|R92C_RF_RCK_OS
value|0x30
end_define

begin_define
define|#
directive|define
name|R92C_RF_TXPA_G
parameter_list|(
name|i
parameter_list|)
value|(0x31 + (i))
end_define

begin_comment
comment|/* Bits for R92C_RF_AC. */
end_comment

begin_define
define|#
directive|define
name|R92C_RF_AC_MODE_M
value|0x70000
end_define

begin_define
define|#
directive|define
name|R92C_RF_AC_MODE_S
value|16
end_define

begin_define
define|#
directive|define
name|R92C_RF_AC_MODE_STANDBY
value|1
end_define

begin_comment
comment|/* Bits for R92C_RF_CHNLBW. */
end_comment

begin_define
define|#
directive|define
name|R92C_RF_CHNLBW_CHNL_M
value|0x003ff
end_define

begin_define
define|#
directive|define
name|R92C_RF_CHNLBW_CHNL_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_RF_CHNLBW_BW20
value|0x00400
end_define

begin_define
define|#
directive|define
name|R88E_RF_CHNLBW_BW20
value|0x00c00
end_define

begin_define
define|#
directive|define
name|R92C_RF_CHNLBW_LCSTART
value|0x08000
end_define

begin_comment
comment|/*  * CAM entries.  */
end_comment

begin_define
define|#
directive|define
name|R92C_CAM_ENTRY_COUNT
value|32
end_define

begin_define
define|#
directive|define
name|R92C_CAM_CTL0
parameter_list|(
name|entry
parameter_list|)
value|((entry) * 8 + 0)
end_define

begin_define
define|#
directive|define
name|R92C_CAM_CTL1
parameter_list|(
name|entry
parameter_list|)
value|((entry) * 8 + 1)
end_define

begin_define
define|#
directive|define
name|R92C_CAM_KEY
parameter_list|(
name|entry
parameter_list|,
name|i
parameter_list|)
value|((entry) * 8 + 2 + (i))
end_define

begin_comment
comment|/* Bits for R92C_CAM_CTL0(i). */
end_comment

begin_define
define|#
directive|define
name|R92C_CAM_KEYID_M
value|0x00000003
end_define

begin_define
define|#
directive|define
name|R92C_CAM_KEYID_S
value|0
end_define

begin_define
define|#
directive|define
name|R92C_CAM_ALGO_M
value|0x0000001c
end_define

begin_define
define|#
directive|define
name|R92C_CAM_ALGO_S
value|2
end_define

begin_define
define|#
directive|define
name|R92C_CAM_ALGO_NONE
value|0
end_define

begin_define
define|#
directive|define
name|R92C_CAM_ALGO_WEP40
value|1
end_define

begin_define
define|#
directive|define
name|R92C_CAM_ALGO_TKIP
value|2
end_define

begin_define
define|#
directive|define
name|R92C_CAM_ALGO_AES
value|4
end_define

begin_define
define|#
directive|define
name|R92C_CAM_ALGO_WEP104
value|5
end_define

begin_define
define|#
directive|define
name|R92C_CAM_VALID
value|0x00008000
end_define

begin_define
define|#
directive|define
name|R92C_CAM_MACLO_M
value|0xffff0000
end_define

begin_define
define|#
directive|define
name|R92C_CAM_MACLO_S
value|16
end_define

begin_comment
comment|/* Rate adaptation modes. */
end_comment

begin_define
define|#
directive|define
name|R92C_RAID_11GN
value|1
end_define

begin_define
define|#
directive|define
name|R92C_RAID_11N
value|3
end_define

begin_define
define|#
directive|define
name|R92C_RAID_11BG
value|4
end_define

begin_define
define|#
directive|define
name|R92C_RAID_11G
value|5
end_define

begin_comment
comment|/* "pure" 11g */
end_comment

begin_define
define|#
directive|define
name|R92C_RAID_11B
value|6
end_define

begin_comment
comment|/*  * Macros to access subfields in registers.  */
end_comment

begin_comment
comment|/* Mask and Shift (getter). */
end_comment

begin_define
define|#
directive|define
name|MS
parameter_list|(
name|val
parameter_list|,
name|field
parameter_list|)
define|\
value|(((val)& field##_M)>> field##_S)
end_define

begin_comment
comment|/* Shift and Mask (setter). */
end_comment

begin_define
define|#
directive|define
name|SM
parameter_list|(
name|field
parameter_list|,
name|val
parameter_list|)
define|\
value|(((val)<< field##_S)& field##_M)
end_define

begin_comment
comment|/* Rewrite. */
end_comment

begin_define
define|#
directive|define
name|RW
parameter_list|(
name|var
parameter_list|,
name|field
parameter_list|,
name|val
parameter_list|)
define|\
value|(((var)& ~field##_M) | SM(field, val))
end_define

begin_comment
comment|/*  * Firmware image header.  */
end_comment

begin_struct
struct|struct
name|r92c_fw_hdr
block|{
comment|/* QWORD0 */
name|uint16_t
name|signature
decl_stmt|;
name|uint8_t
name|category
decl_stmt|;
name|uint8_t
name|function
decl_stmt|;
name|uint16_t
name|version
decl_stmt|;
name|uint16_t
name|subversion
decl_stmt|;
comment|/* QWORD1 */
name|uint8_t
name|month
decl_stmt|;
name|uint8_t
name|date
decl_stmt|;
name|uint8_t
name|hour
decl_stmt|;
name|uint8_t
name|minute
decl_stmt|;
name|uint16_t
name|ramcodesize
decl_stmt|;
name|uint16_t
name|reserved2
decl_stmt|;
comment|/* QWORD2 */
name|uint32_t
name|svnidx
decl_stmt|;
name|uint32_t
name|reserved3
decl_stmt|;
comment|/* QWORD3 */
name|uint32_t
name|reserved4
decl_stmt|;
name|uint32_t
name|reserved5
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/*  * Host to firmware commands.  */
end_comment

begin_struct
struct|struct
name|r92c_fw_cmd
block|{
name|uint8_t
name|id
decl_stmt|;
define|#
directive|define
name|R92C_CMD_AP_OFFLOAD
value|0
define|#
directive|define
name|R92C_CMD_SET_PWRMODE
value|1
define|#
directive|define
name|R92C_CMD_JOINBSS_RPT
value|2
define|#
directive|define
name|R92C_CMD_RSVD_PAGE
value|3
define|#
directive|define
name|R92C_CMD_RSSI
value|4
define|#
directive|define
name|R92C_CMD_RSSI_SETTING
value|5
define|#
directive|define
name|R92C_CMD_MACID_CONFIG
value|6
define|#
directive|define
name|R92C_CMD_MACID_PS_MODE
value|7
define|#
directive|define
name|R92C_CMD_P2P_PS_OFFLOAD
value|8
define|#
directive|define
name|R92C_CMD_SELECTIVE_SUSPEND
value|9
define|#
directive|define
name|R92C_CMD_FLAG_EXT
value|0x80
name|uint8_t
name|msg
index|[
literal|5
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* Structure for R92C_CMD_RSSI_SETTING. */
end_comment

begin_struct
struct|struct
name|r92c_fw_cmd_rssi
block|{
name|uint8_t
name|macid
decl_stmt|;
name|uint8_t
name|reserved
decl_stmt|;
name|uint8_t
name|pwdb
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* Structure for R92C_CMD_MACID_CONFIG. */
end_comment

begin_struct
struct|struct
name|r92c_fw_cmd_macid_cfg
block|{
name|uint32_t
name|mask
decl_stmt|;
name|uint8_t
name|macid
decl_stmt|;
define|#
directive|define
name|URTWN_MACID_BSS
value|0
define|#
directive|define
name|URTWN_MACID_BC
value|4
comment|/* Broadcast. */
define|#
directive|define
name|URTWN_MACID_VALID
value|0x80
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/*  * RTL8192CU ROM image.  */
end_comment

begin_struct
struct|struct
name|r92c_rom
block|{
name|uint16_t
name|id
decl_stmt|;
comment|/* 0x8192 */
name|uint8_t
name|reserved1
index|[
literal|5
index|]
decl_stmt|;
name|uint8_t
name|dbg_sel
decl_stmt|;
name|uint16_t
name|reserved2
decl_stmt|;
name|uint16_t
name|vid
decl_stmt|;
name|uint16_t
name|pid
decl_stmt|;
name|uint8_t
name|usb_opt
decl_stmt|;
name|uint8_t
name|ep_setting
decl_stmt|;
name|uint16_t
name|reserved3
decl_stmt|;
name|uint8_t
name|usb_phy
decl_stmt|;
name|uint8_t
name|reserved4
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|macaddr
index|[
literal|6
index|]
decl_stmt|;
name|uint8_t
name|string
index|[
literal|61
index|]
decl_stmt|;
comment|/* "Realtek" */
name|uint8_t
name|subcustomer_id
decl_stmt|;
name|uint8_t
name|cck_tx_pwr
index|[
name|R92C_MAX_CHAINS
index|]
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|ht40_1s_tx_pwr
index|[
name|R92C_MAX_CHAINS
index|]
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|ht40_2s_tx_pwr_diff
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|ht20_tx_pwr_diff
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|ofdm_tx_pwr_diff
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|ht40_max_pwr
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|ht20_max_pwr
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|xtal_calib
decl_stmt|;
name|uint8_t
name|tssi
index|[
name|R92C_MAX_CHAINS
index|]
decl_stmt|;
name|uint8_t
name|thermal_meter
decl_stmt|;
name|uint8_t
name|rf_opt1
decl_stmt|;
define|#
directive|define
name|R92C_ROM_RF1_REGULATORY_M
value|0x07
define|#
directive|define
name|R92C_ROM_RF1_REGULATORY_S
value|0
define|#
directive|define
name|R92C_ROM_RF1_BOARD_TYPE_M
value|0xe0
define|#
directive|define
name|R92C_ROM_RF1_BOARD_TYPE_S
value|5
define|#
directive|define
name|R92C_BOARD_TYPE_DONGLE
value|0
define|#
directive|define
name|R92C_BOARD_TYPE_HIGHPA
value|1
define|#
directive|define
name|R92C_BOARD_TYPE_MINICARD
value|2
define|#
directive|define
name|R92C_BOARD_TYPE_SOLO
value|3
define|#
directive|define
name|R92C_BOARD_TYPE_COMBO
value|4
name|uint8_t
name|rf_opt2
decl_stmt|;
name|uint8_t
name|rf_opt3
decl_stmt|;
name|uint8_t
name|rf_opt4
decl_stmt|;
name|uint8_t
name|channel_plan
decl_stmt|;
name|uint8_t
name|version
decl_stmt|;
name|uint8_t
name|curstomer_id
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* Rx MAC descriptor. */
end_comment

begin_struct
struct|struct
name|r92c_rx_stat
block|{
name|uint32_t
name|rxdw0
decl_stmt|;
define|#
directive|define
name|R92C_RXDW0_PKTLEN_M
value|0x00003fff
define|#
directive|define
name|R92C_RXDW0_PKTLEN_S
value|0
define|#
directive|define
name|R92C_RXDW0_CRCERR
value|0x00004000
define|#
directive|define
name|R92C_RXDW0_ICVERR
value|0x00008000
define|#
directive|define
name|R92C_RXDW0_INFOSZ_M
value|0x000f0000
define|#
directive|define
name|R92C_RXDW0_INFOSZ_S
value|16
define|#
directive|define
name|R92C_RXDW0_QOS
value|0x00800000
define|#
directive|define
name|R92C_RXDW0_SHIFT_M
value|0x03000000
define|#
directive|define
name|R92C_RXDW0_SHIFT_S
value|24
define|#
directive|define
name|R92C_RXDW0_PHYST
value|0x04000000
define|#
directive|define
name|R92C_RXDW0_DECRYPTED
value|0x08000000
name|uint32_t
name|rxdw1
decl_stmt|;
name|uint32_t
name|rxdw2
decl_stmt|;
define|#
directive|define
name|R92C_RXDW2_PKTCNT_M
value|0x00ff0000
define|#
directive|define
name|R92C_RXDW2_PKTCNT_S
value|16
name|uint32_t
name|rxdw3
decl_stmt|;
define|#
directive|define
name|R92C_RXDW3_RATE_M
value|0x0000003f
define|#
directive|define
name|R92C_RXDW3_RATE_S
value|0
define|#
directive|define
name|R92C_RXDW3_HT
value|0x00000040
define|#
directive|define
name|R92C_RXDW3_HTC
value|0x00000400
name|uint32_t
name|rxdw4
decl_stmt|;
name|uint32_t
name|rxdw5
decl_stmt|;
block|}
name|__packed
name|__attribute__
argument_list|(
operator|(
name|aligned
argument_list|(
literal|4
argument_list|)
operator|)
argument_list|)
struct|;
end_struct

begin_comment
comment|/* Rx PHY descriptor. */
end_comment

begin_struct
struct|struct
name|r92c_rx_phystat
block|{
name|uint32_t
name|phydw0
decl_stmt|;
name|uint32_t
name|phydw1
decl_stmt|;
name|uint32_t
name|phydw2
decl_stmt|;
name|uint32_t
name|phydw3
decl_stmt|;
name|uint32_t
name|phydw4
decl_stmt|;
name|uint32_t
name|phydw5
decl_stmt|;
name|uint32_t
name|phydw6
decl_stmt|;
name|uint32_t
name|phydw7
decl_stmt|;
block|}
name|__packed
name|__attribute__
argument_list|(
operator|(
name|aligned
argument_list|(
literal|4
argument_list|)
operator|)
argument_list|)
struct|;
end_struct

begin_comment
comment|/* Rx PHY CCK descriptor. */
end_comment

begin_struct
struct|struct
name|r92c_rx_cck
block|{
name|uint8_t
name|adc_pwdb
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|sq_rpt
decl_stmt|;
name|uint8_t
name|agc_rpt
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|r88e_rx_cck
block|{
name|uint8_t
name|path_agc
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|chan
decl_stmt|;
name|uint8_t
name|reserved1
decl_stmt|;
name|uint8_t
name|sig_qual
decl_stmt|;
name|uint8_t
name|agc_rpt
decl_stmt|;
name|uint8_t
name|rpt_b
decl_stmt|;
name|uint8_t
name|reserved2
decl_stmt|;
name|uint8_t
name|noise_power
decl_stmt|;
name|uint8_t
name|path_cfotail
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|pcts_mask
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|stream_rxevm
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|path_rxsnr
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|noise_power_db_lsb
decl_stmt|;
name|uint8_t
name|reserved3
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|stream_csi
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|stream_target_csi
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|sig_evm
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* Tx MAC descriptor. */
end_comment

begin_struct
struct|struct
name|r92c_tx_desc
block|{
name|uint32_t
name|txdw0
decl_stmt|;
define|#
directive|define
name|R92C_TXDW0_PKTLEN_M
value|0x0000ffff
define|#
directive|define
name|R92C_TXDW0_PKTLEN_S
value|0
define|#
directive|define
name|R92C_TXDW0_OFFSET_M
value|0x00ff0000
define|#
directive|define
name|R92C_TXDW0_OFFSET_S
value|16
define|#
directive|define
name|R92C_TXDW0_BMCAST
value|0x01000000
define|#
directive|define
name|R92C_TXDW0_LSG
value|0x04000000
define|#
directive|define
name|R92C_TXDW0_FSG
value|0x08000000
define|#
directive|define
name|R92C_TXDW0_OWN
value|0x80000000
name|uint32_t
name|txdw1
decl_stmt|;
define|#
directive|define
name|R92C_TXDW1_MACID_M
value|0x0000001f
define|#
directive|define
name|R92C_TXDW1_MACID_S
value|0
define|#
directive|define
name|R88E_TXDW1_MACID_M
value|0x0000003f
define|#
directive|define
name|R88E_TXDW1_MACID_S
value|0
define|#
directive|define
name|R92C_TXDW1_AGGEN
value|0x00000020
define|#
directive|define
name|R92C_TXDW1_AGGBK
value|0x00000040
define|#
directive|define
name|R92C_TXDW1_QSEL_M
value|0x00001f00
define|#
directive|define
name|R92C_TXDW1_QSEL_S
value|8
define|#
directive|define
name|R92C_TXDW1_QSEL_BE
value|0x00
define|#
directive|define
name|R92C_TXDW1_QSEL_MGNT
value|0x12
define|#
directive|define
name|R92C_TXDW1_RAID_M
value|0x000f0000
define|#
directive|define
name|R92C_TXDW1_RAID_S
value|16
define|#
directive|define
name|R92C_TXDW1_CIPHER_M
value|0x00c00000
define|#
directive|define
name|R92C_TXDW1_CIPHER_S
value|22
define|#
directive|define
name|R92C_TXDW1_CIPHER_NONE
value|0
define|#
directive|define
name|R92C_TXDW1_CIPHER_RC4
value|1
define|#
directive|define
name|R92C_TXDW1_CIPHER_AES
value|3
define|#
directive|define
name|R92C_TXDW1_PKTOFF_M
value|0x7c000000
define|#
directive|define
name|R92C_TXDW1_PKTOFF_S
value|26
name|uint32_t
name|txdw2
decl_stmt|;
define|#
directive|define
name|R88E_TXDW2_AGGBK
value|0x00010000
name|uint16_t
name|txdw3
decl_stmt|;
name|uint16_t
name|txdseq
decl_stmt|;
define|#
directive|define
name|R92C_TXDSEQ_HWSEQ_EN
value|0x8000
name|uint32_t
name|txdw4
decl_stmt|;
define|#
directive|define
name|R92C_TXDW4_RTSRATE_M
value|0x0000003f
define|#
directive|define
name|R92C_TXDW4_RTSRATE_S
value|0
define|#
directive|define
name|R92C_TXDW4_HWSEQ_QOS
value|0x00000040
define|#
directive|define
name|R92C_TXDW4_DRVRATE
value|0x00000100
define|#
directive|define
name|R92C_TXDW4_CTS2SELF
value|0x00000800
define|#
directive|define
name|R92C_TXDW4_RTSEN
value|0x00001000
define|#
directive|define
name|R92C_TXDW4_HWRTSEN
value|0x00002000
define|#
directive|define
name|R92C_TXDW4_SCO_M
value|0x003f0000
define|#
directive|define
name|R92C_TXDW4_SCO_S
value|20
define|#
directive|define
name|R92C_TXDW4_SCO_SCA
value|1
define|#
directive|define
name|R92C_TXDW4_SCO_SCB
value|2
define|#
directive|define
name|R92C_TXDW4_40MHZ
value|0x02000000
name|uint32_t
name|txdw5
decl_stmt|;
define|#
directive|define
name|R92C_TXDW5_DATARATE_M
value|0x0000003f
define|#
directive|define
name|R92C_TXDW5_DATARATE_S
value|0
define|#
directive|define
name|R92C_TXDW5_SGI
value|0x00000040
define|#
directive|define
name|R92C_TXDW5_AGGNUM_M
value|0xff000000
define|#
directive|define
name|R92C_TXDW5_AGGNUM_S
value|24
name|uint32_t
name|txdw6
decl_stmt|;
name|uint16_t
name|txdsum
decl_stmt|;
name|uint16_t
name|pad
decl_stmt|;
block|}
name|__packed
name|__attribute__
argument_list|(
operator|(
name|aligned
argument_list|(
literal|4
argument_list|)
operator|)
argument_list|)
struct|;
end_struct

begin_decl_stmt
specifier|static
specifier|const
name|uint8_t
name|ridx2rate
index|[]
init|=
block|{
literal|2
block|,
literal|4
block|,
literal|11
block|,
literal|22
block|,
literal|12
block|,
literal|18
block|,
literal|24
block|,
literal|36
block|,
literal|48
block|,
literal|72
block|,
literal|96
block|,
literal|108
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* HW rate indices. */
end_comment

begin_define
define|#
directive|define
name|URTWN_RIDX_CCK1
value|0
end_define

begin_define
define|#
directive|define
name|URTWN_RIDX_CCK11
value|3
end_define

begin_define
define|#
directive|define
name|URTWN_RIDX_OFDM6
value|4
end_define

begin_define
define|#
directive|define
name|URTWN_RIDX_OFDM24
value|8
end_define

begin_define
define|#
directive|define
name|URTWN_RIDX_OFDM54
value|11
end_define

begin_define
define|#
directive|define
name|URTWN_RIDX_COUNT
value|28
end_define

begin_comment
comment|/*  * MAC initialization values.  */
end_comment

begin_struct
specifier|static
specifier|const
struct|struct
block|{
name|uint16_t
name|reg
decl_stmt|;
name|uint8_t
name|val
decl_stmt|;
block|}
name|rtl8188eu_mac
index|[]
init|=
block|{
block|{
literal|0x026
block|,
literal|0x41
block|}
block|,
block|{
literal|0x027
block|,
literal|0x35
block|}
block|,
block|{
literal|0x040
block|,
literal|0x00
block|}
block|,
block|{
literal|0x428
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x429
block|,
literal|0x10
block|}
block|,
block|{
literal|0x430
block|,
literal|0x00
block|}
block|,
block|{
literal|0x431
block|,
literal|0x01
block|}
block|,
block|{
literal|0x432
block|,
literal|0x02
block|}
block|,
block|{
literal|0x433
block|,
literal|0x04
block|}
block|,
block|{
literal|0x434
block|,
literal|0x05
block|}
block|,
block|{
literal|0x435
block|,
literal|0x06
block|}
block|,
block|{
literal|0x436
block|,
literal|0x07
block|}
block|,
block|{
literal|0x437
block|,
literal|0x08
block|}
block|,
block|{
literal|0x438
block|,
literal|0x00
block|}
block|,
block|{
literal|0x439
block|,
literal|0x00
block|}
block|,
block|{
literal|0x43a
block|,
literal|0x01
block|}
block|,
block|{
literal|0x43b
block|,
literal|0x02
block|}
block|,
block|{
literal|0x43c
block|,
literal|0x04
block|}
block|,
block|{
literal|0x43d
block|,
literal|0x05
block|}
block|,
block|{
literal|0x43e
block|,
literal|0x06
block|}
block|,
block|{
literal|0x43f
block|,
literal|0x07
block|}
block|,
block|{
literal|0x440
block|,
literal|0x5d
block|}
block|,
block|{
literal|0x441
block|,
literal|0x01
block|}
block|,
block|{
literal|0x442
block|,
literal|0x00
block|}
block|,
block|{
literal|0x444
block|,
literal|0x15
block|}
block|,
block|{
literal|0x445
block|,
literal|0xf0
block|}
block|,
block|{
literal|0x446
block|,
literal|0x0f
block|}
block|,
block|{
literal|0x447
block|,
literal|0x00
block|}
block|,
block|{
literal|0x458
block|,
literal|0x41
block|}
block|,
block|{
literal|0x459
block|,
literal|0xa8
block|}
block|,
block|{
literal|0x45a
block|,
literal|0x72
block|}
block|,
block|{
literal|0x45b
block|,
literal|0xb9
block|}
block|,
block|{
literal|0x460
block|,
literal|0x66
block|}
block|,
block|{
literal|0x461
block|,
literal|0x66
block|}
block|,
block|{
literal|0x480
block|,
literal|0x08
block|}
block|,
block|{
literal|0x4c8
block|,
literal|0xff
block|}
block|,
block|{
literal|0x4c9
block|,
literal|0x08
block|}
block|,
block|{
literal|0x4cc
block|,
literal|0xff
block|}
block|,
block|{
literal|0x4cd
block|,
literal|0xff
block|}
block|,
block|{
literal|0x4ce
block|,
literal|0x01
block|}
block|,
block|{
literal|0x4d3
block|,
literal|0x01
block|}
block|,
block|{
literal|0x500
block|,
literal|0x26
block|}
block|,
block|{
literal|0x501
block|,
literal|0xa2
block|}
block|,
block|{
literal|0x502
block|,
literal|0x2f
block|}
block|,
block|{
literal|0x503
block|,
literal|0x00
block|}
block|,
block|{
literal|0x504
block|,
literal|0x28
block|}
block|,
block|{
literal|0x505
block|,
literal|0xa3
block|}
block|,
block|{
literal|0x506
block|,
literal|0x5e
block|}
block|,
block|{
literal|0x507
block|,
literal|0x00
block|}
block|,
block|{
literal|0x508
block|,
literal|0x2b
block|}
block|,
block|{
literal|0x509
block|,
literal|0xa4
block|}
block|,
block|{
literal|0x50a
block|,
literal|0x5e
block|}
block|,
block|{
literal|0x50b
block|,
literal|0x00
block|}
block|,
block|{
literal|0x50c
block|,
literal|0x4f
block|}
block|,
block|{
literal|0x50d
block|,
literal|0xa4
block|}
block|,
block|{
literal|0x50e
block|,
literal|0x00
block|}
block|,
block|{
literal|0x50f
block|,
literal|0x00
block|}
block|,
block|{
literal|0x512
block|,
literal|0x1c
block|}
block|,
block|{
literal|0x514
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x516
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x525
block|,
literal|0x4f
block|}
block|,
block|{
literal|0x550
block|,
literal|0x10
block|}
block|,
block|{
literal|0x551
block|,
literal|0x10
block|}
block|,
block|{
literal|0x559
block|,
literal|0x02
block|}
block|,
block|{
literal|0x55d
block|,
literal|0xff
block|}
block|,
block|{
literal|0x605
block|,
literal|0x30
block|}
block|,
block|{
literal|0x608
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x609
block|,
literal|0x2a
block|}
block|,
block|{
literal|0x620
block|,
literal|0xff
block|}
block|,
block|{
literal|0x621
block|,
literal|0xff
block|}
block|,
block|{
literal|0x622
block|,
literal|0xff
block|}
block|,
block|{
literal|0x623
block|,
literal|0xff
block|}
block|,
block|{
literal|0x624
block|,
literal|0xff
block|}
block|,
block|{
literal|0x625
block|,
literal|0xff
block|}
block|,
block|{
literal|0x626
block|,
literal|0xff
block|}
block|,
block|{
literal|0x627
block|,
literal|0xff
block|}
block|,
block|{
literal|0x652
block|,
literal|0x20
block|}
block|,
block|{
literal|0x63c
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x63d
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x63e
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x63f
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x640
block|,
literal|0x40
block|}
block|,
block|{
literal|0x66e
block|,
literal|0x05
block|}
block|,
block|{
literal|0x700
block|,
literal|0x21
block|}
block|,
block|{
literal|0x701
block|,
literal|0x43
block|}
block|,
block|{
literal|0x702
block|,
literal|0x65
block|}
block|,
block|{
literal|0x703
block|,
literal|0x87
block|}
block|,
block|{
literal|0x708
block|,
literal|0x21
block|}
block|,
block|{
literal|0x709
block|,
literal|0x43
block|}
block|,
block|{
literal|0x70a
block|,
literal|0x65
block|}
block|,
block|{
literal|0x70b
block|,
literal|0x87
block|}
block|}
struct|,
name|rtl8192cu_mac
index|[]
init|=
block|{
block|{
literal|0x420
block|,
literal|0x80
block|}
block|,
block|{
literal|0x423
block|,
literal|0x00
block|}
block|,
block|{
literal|0x430
block|,
literal|0x00
block|}
block|,
block|{
literal|0x431
block|,
literal|0x00
block|}
block|,
block|{
literal|0x432
block|,
literal|0x00
block|}
block|,
block|{
literal|0x433
block|,
literal|0x01
block|}
block|,
block|{
literal|0x434
block|,
literal|0x04
block|}
block|,
block|{
literal|0x435
block|,
literal|0x05
block|}
block|,
block|{
literal|0x436
block|,
literal|0x06
block|}
block|,
block|{
literal|0x437
block|,
literal|0x07
block|}
block|,
block|{
literal|0x438
block|,
literal|0x00
block|}
block|,
block|{
literal|0x439
block|,
literal|0x00
block|}
block|,
block|{
literal|0x43a
block|,
literal|0x00
block|}
block|,
block|{
literal|0x43b
block|,
literal|0x01
block|}
block|,
block|{
literal|0x43c
block|,
literal|0x04
block|}
block|,
block|{
literal|0x43d
block|,
literal|0x05
block|}
block|,
block|{
literal|0x43e
block|,
literal|0x06
block|}
block|,
block|{
literal|0x43f
block|,
literal|0x07
block|}
block|,
block|{
literal|0x440
block|,
literal|0x5d
block|}
block|,
block|{
literal|0x441
block|,
literal|0x01
block|}
block|,
block|{
literal|0x442
block|,
literal|0x00
block|}
block|,
block|{
literal|0x444
block|,
literal|0x15
block|}
block|,
block|{
literal|0x445
block|,
literal|0xf0
block|}
block|,
block|{
literal|0x446
block|,
literal|0x0f
block|}
block|,
block|{
literal|0x447
block|,
literal|0x00
block|}
block|,
block|{
literal|0x458
block|,
literal|0x41
block|}
block|,
block|{
literal|0x459
block|,
literal|0xa8
block|}
block|,
block|{
literal|0x45a
block|,
literal|0x72
block|}
block|,
block|{
literal|0x45b
block|,
literal|0xb9
block|}
block|,
block|{
literal|0x460
block|,
literal|0x66
block|}
block|,
block|{
literal|0x461
block|,
literal|0x66
block|}
block|,
block|{
literal|0x462
block|,
literal|0x08
block|}
block|,
block|{
literal|0x463
block|,
literal|0x03
block|}
block|,
block|{
literal|0x4c8
block|,
literal|0xff
block|}
block|,
block|{
literal|0x4c9
block|,
literal|0x08
block|}
block|,
block|{
literal|0x4cc
block|,
literal|0xff
block|}
block|,
block|{
literal|0x4cd
block|,
literal|0xff
block|}
block|,
block|{
literal|0x4ce
block|,
literal|0x01
block|}
block|,
block|{
literal|0x500
block|,
literal|0x26
block|}
block|,
block|{
literal|0x501
block|,
literal|0xa2
block|}
block|,
block|{
literal|0x502
block|,
literal|0x2f
block|}
block|,
block|{
literal|0x503
block|,
literal|0x00
block|}
block|,
block|{
literal|0x504
block|,
literal|0x28
block|}
block|,
block|{
literal|0x505
block|,
literal|0xa3
block|}
block|,
block|{
literal|0x506
block|,
literal|0x5e
block|}
block|,
block|{
literal|0x507
block|,
literal|0x00
block|}
block|,
block|{
literal|0x508
block|,
literal|0x2b
block|}
block|,
block|{
literal|0x509
block|,
literal|0xa4
block|}
block|,
block|{
literal|0x50a
block|,
literal|0x5e
block|}
block|,
block|{
literal|0x50b
block|,
literal|0x00
block|}
block|,
block|{
literal|0x50c
block|,
literal|0x4f
block|}
block|,
block|{
literal|0x50d
block|,
literal|0xa4
block|}
block|,
block|{
literal|0x50e
block|,
literal|0x00
block|}
block|,
block|{
literal|0x50f
block|,
literal|0x00
block|}
block|,
block|{
literal|0x512
block|,
literal|0x1c
block|}
block|,
block|{
literal|0x514
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x515
block|,
literal|0x10
block|}
block|,
block|{
literal|0x516
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x517
block|,
literal|0x10
block|}
block|,
block|{
literal|0x51a
block|,
literal|0x16
block|}
block|,
block|{
literal|0x524
block|,
literal|0x0f
block|}
block|,
block|{
literal|0x525
block|,
literal|0x4f
block|}
block|,
block|{
literal|0x546
block|,
literal|0x40
block|}
block|,
block|{
literal|0x547
block|,
literal|0x00
block|}
block|,
block|{
literal|0x550
block|,
literal|0x10
block|}
block|,
block|{
literal|0x551
block|,
literal|0x10
block|}
block|,
block|{
literal|0x559
block|,
literal|0x02
block|}
block|,
block|{
literal|0x55a
block|,
literal|0x02
block|}
block|,
block|{
literal|0x55d
block|,
literal|0xff
block|}
block|,
block|{
literal|0x605
block|,
literal|0x30
block|}
block|,
block|{
literal|0x608
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x609
block|,
literal|0x2a
block|}
block|,
block|{
literal|0x652
block|,
literal|0x20
block|}
block|,
block|{
literal|0x63c
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x63d
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x63e
block|,
literal|0x0a
block|}
block|,
block|{
literal|0x63f
block|,
literal|0x0e
block|}
block|,
block|{
literal|0x66e
block|,
literal|0x05
block|}
block|,
block|{
literal|0x700
block|,
literal|0x21
block|}
block|,
block|{
literal|0x701
block|,
literal|0x43
block|}
block|,
block|{
literal|0x702
block|,
literal|0x65
block|}
block|,
block|{
literal|0x703
block|,
literal|0x87
block|}
block|,
block|{
literal|0x708
block|,
literal|0x21
block|}
block|,
block|{
literal|0x709
block|,
literal|0x43
block|}
block|,
block|{
literal|0x70a
block|,
literal|0x65
block|}
block|,
block|{
literal|0x70b
block|,
literal|0x87
block|}
block|}
struct|;
end_struct

begin_comment
comment|/*  * Baseband initialization values.  */
end_comment

begin_struct
struct|struct
name|urtwn_bb_prog
block|{
name|int
name|count
decl_stmt|;
specifier|const
name|uint16_t
modifier|*
name|regs
decl_stmt|;
specifier|const
name|uint32_t
modifier|*
name|vals
decl_stmt|;
name|int
name|agccount
decl_stmt|;
specifier|const
name|uint32_t
modifier|*
name|agcvals
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * RTL8192CU and RTL8192CE-VAU.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint16_t
name|rtl8192ce_bb_regs
index|[]
init|=
block|{
literal|0x024
block|,
literal|0x028
block|,
literal|0x800
block|,
literal|0x804
block|,
literal|0x808
block|,
literal|0x80c
block|,
literal|0x810
block|,
literal|0x814
block|,
literal|0x818
block|,
literal|0x81c
block|,
literal|0x820
block|,
literal|0x824
block|,
literal|0x828
block|,
literal|0x82c
block|,
literal|0x830
block|,
literal|0x834
block|,
literal|0x838
block|,
literal|0x83c
block|,
literal|0x840
block|,
literal|0x844
block|,
literal|0x848
block|,
literal|0x84c
block|,
literal|0x850
block|,
literal|0x854
block|,
literal|0x858
block|,
literal|0x85c
block|,
literal|0x860
block|,
literal|0x864
block|,
literal|0x868
block|,
literal|0x86c
block|,
literal|0x870
block|,
literal|0x874
block|,
literal|0x878
block|,
literal|0x87c
block|,
literal|0x880
block|,
literal|0x884
block|,
literal|0x888
block|,
literal|0x88c
block|,
literal|0x890
block|,
literal|0x894
block|,
literal|0x898
block|,
literal|0x89c
block|,
literal|0x900
block|,
literal|0x904
block|,
literal|0x908
block|,
literal|0x90c
block|,
literal|0xa00
block|,
literal|0xa04
block|,
literal|0xa08
block|,
literal|0xa0c
block|,
literal|0xa10
block|,
literal|0xa14
block|,
literal|0xa18
block|,
literal|0xa1c
block|,
literal|0xa20
block|,
literal|0xa24
block|,
literal|0xa28
block|,
literal|0xa2c
block|,
literal|0xa70
block|,
literal|0xa74
block|,
literal|0xc00
block|,
literal|0xc04
block|,
literal|0xc08
block|,
literal|0xc0c
block|,
literal|0xc10
block|,
literal|0xc14
block|,
literal|0xc18
block|,
literal|0xc1c
block|,
literal|0xc20
block|,
literal|0xc24
block|,
literal|0xc28
block|,
literal|0xc2c
block|,
literal|0xc30
block|,
literal|0xc34
block|,
literal|0xc38
block|,
literal|0xc3c
block|,
literal|0xc40
block|,
literal|0xc44
block|,
literal|0xc48
block|,
literal|0xc4c
block|,
literal|0xc50
block|,
literal|0xc54
block|,
literal|0xc58
block|,
literal|0xc5c
block|,
literal|0xc60
block|,
literal|0xc64
block|,
literal|0xc68
block|,
literal|0xc6c
block|,
literal|0xc70
block|,
literal|0xc74
block|,
literal|0xc78
block|,
literal|0xc7c
block|,
literal|0xc80
block|,
literal|0xc84
block|,
literal|0xc88
block|,
literal|0xc8c
block|,
literal|0xc90
block|,
literal|0xc94
block|,
literal|0xc98
block|,
literal|0xc9c
block|,
literal|0xca0
block|,
literal|0xca4
block|,
literal|0xca8
block|,
literal|0xcac
block|,
literal|0xcb0
block|,
literal|0xcb4
block|,
literal|0xcb8
block|,
literal|0xcbc
block|,
literal|0xcc0
block|,
literal|0xcc4
block|,
literal|0xcc8
block|,
literal|0xccc
block|,
literal|0xcd0
block|,
literal|0xcd4
block|,
literal|0xcd8
block|,
literal|0xcdc
block|,
literal|0xce0
block|,
literal|0xce4
block|,
literal|0xce8
block|,
literal|0xcec
block|,
literal|0xd00
block|,
literal|0xd04
block|,
literal|0xd08
block|,
literal|0xd0c
block|,
literal|0xd10
block|,
literal|0xd14
block|,
literal|0xd18
block|,
literal|0xd2c
block|,
literal|0xd30
block|,
literal|0xd34
block|,
literal|0xd38
block|,
literal|0xd3c
block|,
literal|0xd40
block|,
literal|0xd44
block|,
literal|0xd48
block|,
literal|0xd4c
block|,
literal|0xd50
block|,
literal|0xd54
block|,
literal|0xd58
block|,
literal|0xd5c
block|,
literal|0xd60
block|,
literal|0xd64
block|,
literal|0xd68
block|,
literal|0xd6c
block|,
literal|0xd70
block|,
literal|0xd74
block|,
literal|0xd78
block|,
literal|0xe00
block|,
literal|0xe04
block|,
literal|0xe08
block|,
literal|0xe10
block|,
literal|0xe14
block|,
literal|0xe18
block|,
literal|0xe1c
block|,
literal|0xe28
block|,
literal|0xe30
block|,
literal|0xe34
block|,
literal|0xe38
block|,
literal|0xe3c
block|,
literal|0xe40
block|,
literal|0xe44
block|,
literal|0xe48
block|,
literal|0xe4c
block|,
literal|0xe50
block|,
literal|0xe54
block|,
literal|0xe58
block|,
literal|0xe5c
block|,
literal|0xe60
block|,
literal|0xe68
block|,
literal|0xe6c
block|,
literal|0xe70
block|,
literal|0xe74
block|,
literal|0xe78
block|,
literal|0xe7c
block|,
literal|0xe80
block|,
literal|0xe84
block|,
literal|0xe88
block|,
literal|0xe8c
block|,
literal|0xed0
block|,
literal|0xed4
block|,
literal|0xed8
block|,
literal|0xedc
block|,
literal|0xee0
block|,
literal|0xeec
block|,
literal|0xf14
block|,
literal|0xf4c
block|,
literal|0xf00
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8192ce_bb_vals
index|[]
init|=
block|{
literal|0x0011800d
block|,
literal|0x00ffdb83
block|,
literal|0x80040002
block|,
literal|0x00000003
block|,
literal|0x0000fc00
block|,
literal|0x0000000a
block|,
literal|0x10005388
block|,
literal|0x020c3d10
block|,
literal|0x02200385
block|,
literal|0x00000000
block|,
literal|0x01000100
block|,
literal|0x00390004
block|,
literal|0x01000100
block|,
literal|0x00390004
block|,
literal|0x27272727
block|,
literal|0x27272727
block|,
literal|0x27272727
block|,
literal|0x27272727
block|,
literal|0x00010000
block|,
literal|0x00010000
block|,
literal|0x27272727
block|,
literal|0x27272727
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x569a569a
block|,
literal|0x0c1b25a4
block|,
literal|0x66e60230
block|,
literal|0x061f0130
block|,
literal|0x27272727
block|,
literal|0x2b2b2b27
block|,
literal|0x07000700
block|,
literal|0x22184000
block|,
literal|0x08080808
block|,
literal|0x00000000
block|,
literal|0xc0083070
block|,
literal|0x000004d5
block|,
literal|0x00000000
block|,
literal|0xcc0000c0
block|,
literal|0x00000800
block|,
literal|0xfffffffe
block|,
literal|0x40302010
block|,
literal|0x00706050
block|,
literal|0x00000000
block|,
literal|0x00000023
block|,
literal|0x00000000
block|,
literal|0x81121313
block|,
literal|0x00d047c8
block|,
literal|0x80ff000c
block|,
literal|0x8c838300
block|,
literal|0x2e68120f
block|,
literal|0x9500bb78
block|,
literal|0x11144028
block|,
literal|0x00881117
block|,
literal|0x89140f00
block|,
literal|0x1a1b0000
block|,
literal|0x090e1317
block|,
literal|0x00000204
block|,
literal|0x00d30000
block|,
literal|0x101fbf00
block|,
literal|0x00000007
block|,
literal|0x48071d40
block|,
literal|0x03a05633
block|,
literal|0x000000e4
block|,
literal|0x6c6c6c6c
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x69e9ac44
block|,
literal|0x469652cf
block|,
literal|0x49795994
block|,
literal|0x0a97971c
block|,
literal|0x1f7c403f
block|,
literal|0x000100b7
block|,
literal|0xec020107
block|,
literal|0x007f037f
block|,
literal|0x6954341e
block|,
literal|0x43bc0094
block|,
literal|0x6954341e
block|,
literal|0x433c0094
block|,
literal|0x00000000
block|,
literal|0x5116848b
block|,
literal|0x47c00bff
block|,
literal|0x00000036
block|,
literal|0x2c7f000d
block|,
literal|0x018610db
block|,
literal|0x0000001f
block|,
literal|0x00b91612
block|,
literal|0x40000100
block|,
literal|0x20f60000
block|,
literal|0x40000100
block|,
literal|0x20200000
block|,
literal|0x00121820
block|,
literal|0x00000000
block|,
literal|0x00121820
block|,
literal|0x00007f7f
block|,
literal|0x00000000
block|,
literal|0x00000080
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x28000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x64b22427
block|,
literal|0x00766932
block|,
literal|0x00222222
block|,
literal|0x00000000
block|,
literal|0x37644302
block|,
literal|0x2f97d40c
block|,
literal|0x00080740
block|,
literal|0x00020403
block|,
literal|0x0000907f
block|,
literal|0x20010201
block|,
literal|0xa0633333
block|,
literal|0x3333bc43
block|,
literal|0x7a8f5b6b
block|,
literal|0xcc979975
block|,
literal|0x00000000
block|,
literal|0x80608000
block|,
literal|0x00000000
block|,
literal|0x00027293
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x6437140a
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x30032064
block|,
literal|0x4653de68
block|,
literal|0x04518a3c
block|,
literal|0x00002101
block|,
literal|0x2a201c16
block|,
literal|0x1812362e
block|,
literal|0x322c2220
block|,
literal|0x000e3c24
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x03902a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x00000000
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x681604c2
block|,
literal|0x01007c00
block|,
literal|0x01004800
block|,
literal|0xfb000000
block|,
literal|0x000028d1
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x28160d05
block|,
literal|0x00000010
block|,
literal|0x001b25a4
block|,
literal|0x63db25a4
block|,
literal|0x63db25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x63db25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x63db25a4
block|,
literal|0x63db25a4
block|,
literal|0x63db25a4
block|,
literal|0x63db25a4
block|,
literal|0x001b25a4
block|,
literal|0x001b25a4
block|,
literal|0x6fdb25a4
block|,
literal|0x00000003
block|,
literal|0x00000000
block|,
literal|0x00000300
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8192ce_agc_vals
index|[]
init|=
block|{
literal|0x7b000001
block|,
literal|0x7b010001
block|,
literal|0x7b020001
block|,
literal|0x7b030001
block|,
literal|0x7b040001
block|,
literal|0x7b050001
block|,
literal|0x7a060001
block|,
literal|0x79070001
block|,
literal|0x78080001
block|,
literal|0x77090001
block|,
literal|0x760a0001
block|,
literal|0x750b0001
block|,
literal|0x740c0001
block|,
literal|0x730d0001
block|,
literal|0x720e0001
block|,
literal|0x710f0001
block|,
literal|0x70100001
block|,
literal|0x6f110001
block|,
literal|0x6e120001
block|,
literal|0x6d130001
block|,
literal|0x6c140001
block|,
literal|0x6b150001
block|,
literal|0x6a160001
block|,
literal|0x69170001
block|,
literal|0x68180001
block|,
literal|0x67190001
block|,
literal|0x661a0001
block|,
literal|0x651b0001
block|,
literal|0x641c0001
block|,
literal|0x631d0001
block|,
literal|0x621e0001
block|,
literal|0x611f0001
block|,
literal|0x60200001
block|,
literal|0x49210001
block|,
literal|0x48220001
block|,
literal|0x47230001
block|,
literal|0x46240001
block|,
literal|0x45250001
block|,
literal|0x44260001
block|,
literal|0x43270001
block|,
literal|0x42280001
block|,
literal|0x41290001
block|,
literal|0x402a0001
block|,
literal|0x262b0001
block|,
literal|0x252c0001
block|,
literal|0x242d0001
block|,
literal|0x232e0001
block|,
literal|0x222f0001
block|,
literal|0x21300001
block|,
literal|0x20310001
block|,
literal|0x06320001
block|,
literal|0x05330001
block|,
literal|0x04340001
block|,
literal|0x03350001
block|,
literal|0x02360001
block|,
literal|0x01370001
block|,
literal|0x00380001
block|,
literal|0x00390001
block|,
literal|0x003a0001
block|,
literal|0x003b0001
block|,
literal|0x003c0001
block|,
literal|0x003d0001
block|,
literal|0x003e0001
block|,
literal|0x003f0001
block|,
literal|0x7b400001
block|,
literal|0x7b410001
block|,
literal|0x7b420001
block|,
literal|0x7b430001
block|,
literal|0x7b440001
block|,
literal|0x7b450001
block|,
literal|0x7a460001
block|,
literal|0x79470001
block|,
literal|0x78480001
block|,
literal|0x77490001
block|,
literal|0x764a0001
block|,
literal|0x754b0001
block|,
literal|0x744c0001
block|,
literal|0x734d0001
block|,
literal|0x724e0001
block|,
literal|0x714f0001
block|,
literal|0x70500001
block|,
literal|0x6f510001
block|,
literal|0x6e520001
block|,
literal|0x6d530001
block|,
literal|0x6c540001
block|,
literal|0x6b550001
block|,
literal|0x6a560001
block|,
literal|0x69570001
block|,
literal|0x68580001
block|,
literal|0x67590001
block|,
literal|0x665a0001
block|,
literal|0x655b0001
block|,
literal|0x645c0001
block|,
literal|0x635d0001
block|,
literal|0x625e0001
block|,
literal|0x615f0001
block|,
literal|0x60600001
block|,
literal|0x49610001
block|,
literal|0x48620001
block|,
literal|0x47630001
block|,
literal|0x46640001
block|,
literal|0x45650001
block|,
literal|0x44660001
block|,
literal|0x43670001
block|,
literal|0x42680001
block|,
literal|0x41690001
block|,
literal|0x406a0001
block|,
literal|0x266b0001
block|,
literal|0x256c0001
block|,
literal|0x246d0001
block|,
literal|0x236e0001
block|,
literal|0x226f0001
block|,
literal|0x21700001
block|,
literal|0x20710001
block|,
literal|0x06720001
block|,
literal|0x05730001
block|,
literal|0x04740001
block|,
literal|0x03750001
block|,
literal|0x02760001
block|,
literal|0x01770001
block|,
literal|0x00780001
block|,
literal|0x00790001
block|,
literal|0x007a0001
block|,
literal|0x007b0001
block|,
literal|0x007c0001
block|,
literal|0x007d0001
block|,
literal|0x007e0001
block|,
literal|0x007f0001
block|,
literal|0x3800001e
block|,
literal|0x3801001e
block|,
literal|0x3802001e
block|,
literal|0x3803001e
block|,
literal|0x3804001e
block|,
literal|0x3805001e
block|,
literal|0x3806001e
block|,
literal|0x3807001e
block|,
literal|0x3808001e
block|,
literal|0x3c09001e
block|,
literal|0x3e0a001e
block|,
literal|0x400b001e
block|,
literal|0x440c001e
block|,
literal|0x480d001e
block|,
literal|0x4c0e001e
block|,
literal|0x500f001e
block|,
literal|0x5210001e
block|,
literal|0x5611001e
block|,
literal|0x5a12001e
block|,
literal|0x5e13001e
block|,
literal|0x6014001e
block|,
literal|0x6015001e
block|,
literal|0x6016001e
block|,
literal|0x6217001e
block|,
literal|0x6218001e
block|,
literal|0x6219001e
block|,
literal|0x621a001e
block|,
literal|0x621b001e
block|,
literal|0x621c001e
block|,
literal|0x621d001e
block|,
literal|0x621e001e
block|,
literal|0x621f001e
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_bb_prog
name|rtl8192ce_bb_prog
init|=
block|{
name|nitems
argument_list|(
name|rtl8192ce_bb_regs
argument_list|)
block|,
name|rtl8192ce_bb_regs
block|,
name|rtl8192ce_bb_vals
block|,
name|nitems
argument_list|(
name|rtl8192ce_agc_vals
argument_list|)
block|,
name|rtl8192ce_agc_vals
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RTL8188CU.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8192cu_bb_vals
index|[]
init|=
block|{
literal|0x0011800d
block|,
literal|0x00ffdb83
block|,
literal|0x80040002
block|,
literal|0x00000003
block|,
literal|0x0000fc00
block|,
literal|0x0000000a
block|,
literal|0x10005388
block|,
literal|0x020c3d10
block|,
literal|0x02200385
block|,
literal|0x00000000
block|,
literal|0x01000100
block|,
literal|0x00390004
block|,
literal|0x01000100
block|,
literal|0x00390004
block|,
literal|0x27272727
block|,
literal|0x27272727
block|,
literal|0x27272727
block|,
literal|0x27272727
block|,
literal|0x00010000
block|,
literal|0x00010000
block|,
literal|0x27272727
block|,
literal|0x27272727
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x569a569a
block|,
literal|0x0c1b25a4
block|,
literal|0x66e60230
block|,
literal|0x061f0130
block|,
literal|0x27272727
block|,
literal|0x2b2b2b27
block|,
literal|0x07000700
block|,
literal|0x22184000
block|,
literal|0x08080808
block|,
literal|0x00000000
block|,
literal|0xc0083070
block|,
literal|0x000004d5
block|,
literal|0x00000000
block|,
literal|0xcc0000c0
block|,
literal|0x00000800
block|,
literal|0xfffffffe
block|,
literal|0x40302010
block|,
literal|0x00706050
block|,
literal|0x00000000
block|,
literal|0x00000023
block|,
literal|0x00000000
block|,
literal|0x81121313
block|,
literal|0x00d047c8
block|,
literal|0x80ff000c
block|,
literal|0x8c838300
block|,
literal|0x2e68120f
block|,
literal|0x9500bb78
block|,
literal|0x11144028
block|,
literal|0x00881117
block|,
literal|0x89140f00
block|,
literal|0x1a1b0000
block|,
literal|0x090e1317
block|,
literal|0x00000204
block|,
literal|0x00d30000
block|,
literal|0x101fbf00
block|,
literal|0x00000007
block|,
literal|0x48071d40
block|,
literal|0x03a05633
block|,
literal|0x000000e4
block|,
literal|0x6c6c6c6c
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x69e9ac44
block|,
literal|0x469652cf
block|,
literal|0x49795994
block|,
literal|0x0a97971c
block|,
literal|0x1f7c403f
block|,
literal|0x000100b7
block|,
literal|0xec020107
block|,
literal|0x007f037f
block|,
literal|0x6954341e
block|,
literal|0x43bc0094
block|,
literal|0x6954341e
block|,
literal|0x433c0094
block|,
literal|0x00000000
block|,
literal|0x5116848b
block|,
literal|0x47c00bff
block|,
literal|0x00000036
block|,
literal|0x2c7f000d
block|,
literal|0x0186115b
block|,
literal|0x0000001f
block|,
literal|0x00b99612
block|,
literal|0x40000100
block|,
literal|0x20f60000
block|,
literal|0x40000100
block|,
literal|0x20200000
block|,
literal|0x00121820
block|,
literal|0x00000000
block|,
literal|0x00121820
block|,
literal|0x00007f7f
block|,
literal|0x00000000
block|,
literal|0x00000080
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x28000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x64b22427
block|,
literal|0x00766932
block|,
literal|0x00222222
block|,
literal|0x00000000
block|,
literal|0x37644302
block|,
literal|0x2f97d40c
block|,
literal|0x00080740
block|,
literal|0x00020403
block|,
literal|0x0000907f
block|,
literal|0x20010201
block|,
literal|0xa0633333
block|,
literal|0x3333bc43
block|,
literal|0x7a8f5b6b
block|,
literal|0xcc979975
block|,
literal|0x00000000
block|,
literal|0x80608000
block|,
literal|0x00000000
block|,
literal|0x00027293
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x6437140a
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x30032064
block|,
literal|0x4653de68
block|,
literal|0x04518a3c
block|,
literal|0x00002101
block|,
literal|0x2a201c16
block|,
literal|0x1812362e
block|,
literal|0x322c2220
block|,
literal|0x000e3c24
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x03902a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x00000000
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x681604c2
block|,
literal|0x01007c00
block|,
literal|0x01004800
block|,
literal|0xfb000000
block|,
literal|0x000028d1
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x28160d05
block|,
literal|0x00000010
block|,
literal|0x001b25a4
block|,
literal|0x63db25a4
block|,
literal|0x63db25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x63db25a4
block|,
literal|0x0c1b25a4
block|,
literal|0x63db25a4
block|,
literal|0x63db25a4
block|,
literal|0x63db25a4
block|,
literal|0x63db25a4
block|,
literal|0x001b25a4
block|,
literal|0x001b25a4
block|,
literal|0x6fdb25a4
block|,
literal|0x00000003
block|,
literal|0x00000000
block|,
literal|0x00000300
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_bb_prog
name|rtl8192cu_bb_prog
init|=
block|{
name|nitems
argument_list|(
name|rtl8192ce_bb_regs
argument_list|)
block|,
name|rtl8192ce_bb_regs
block|,
name|rtl8192cu_bb_vals
block|,
name|nitems
argument_list|(
name|rtl8192ce_agc_vals
argument_list|)
block|,
name|rtl8192ce_agc_vals
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RTL8188CE-VAU.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8188ce_bb_vals
index|[]
init|=
block|{
literal|0x0011800d
block|,
literal|0x00ffdb83
block|,
literal|0x80040000
block|,
literal|0x00000001
block|,
literal|0x0000fc00
block|,
literal|0x0000000a
block|,
literal|0x10005388
block|,
literal|0x020c3d10
block|,
literal|0x02200385
block|,
literal|0x00000000
block|,
literal|0x01000100
block|,
literal|0x00390004
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00010000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x569a569a
block|,
literal|0x001b25a4
block|,
literal|0x66e60230
block|,
literal|0x061f0130
block|,
literal|0x00000000
block|,
literal|0x32323200
block|,
literal|0x07000700
block|,
literal|0x22004000
block|,
literal|0x00000808
block|,
literal|0x00000000
block|,
literal|0xc0083070
block|,
literal|0x000004d5
block|,
literal|0x00000000
block|,
literal|0xccc000c0
block|,
literal|0x00000800
block|,
literal|0xfffffffe
block|,
literal|0x40302010
block|,
literal|0x00706050
block|,
literal|0x00000000
block|,
literal|0x00000023
block|,
literal|0x00000000
block|,
literal|0x81121111
block|,
literal|0x00d047c8
block|,
literal|0x80ff000c
block|,
literal|0x8c838300
block|,
literal|0x2e68120f
block|,
literal|0x9500bb78
block|,
literal|0x11144028
block|,
literal|0x00881117
block|,
literal|0x89140f00
block|,
literal|0x1a1b0000
block|,
literal|0x090e1317
block|,
literal|0x00000204
block|,
literal|0x00d30000
block|,
literal|0x101fbf00
block|,
literal|0x00000007
block|,
literal|0x48071d40
block|,
literal|0x03a05611
block|,
literal|0x000000e4
block|,
literal|0x6c6c6c6c
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x69e9ac44
block|,
literal|0x469652cf
block|,
literal|0x49795994
block|,
literal|0x0a97971c
block|,
literal|0x1f7c403f
block|,
literal|0x000100b7
block|,
literal|0xec020107
block|,
literal|0x007f037f
block|,
literal|0x6954341e
block|,
literal|0x43bc0094
block|,
literal|0x6954341e
block|,
literal|0x433c0094
block|,
literal|0x00000000
block|,
literal|0x5116848b
block|,
literal|0x47c00bff
block|,
literal|0x00000036
block|,
literal|0x2c7f000d
block|,
literal|0x018610db
block|,
literal|0x0000001f
block|,
literal|0x00b91612
block|,
literal|0x40000100
block|,
literal|0x20f60000
block|,
literal|0x40000100
block|,
literal|0x20200000
block|,
literal|0x00121820
block|,
literal|0x00000000
block|,
literal|0x00121820
block|,
literal|0x00007f7f
block|,
literal|0x00000000
block|,
literal|0x00000080
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x28000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x64b22427
block|,
literal|0x00766932
block|,
literal|0x00222222
block|,
literal|0x00000000
block|,
literal|0x37644302
block|,
literal|0x2f97d40c
block|,
literal|0x00080740
block|,
literal|0x00020401
block|,
literal|0x0000907f
block|,
literal|0x20010201
block|,
literal|0xa0633333
block|,
literal|0x3333bc43
block|,
literal|0x7a8f5b6b
block|,
literal|0xcc979975
block|,
literal|0x00000000
block|,
literal|0x80608000
block|,
literal|0x00000000
block|,
literal|0x00027293
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x6437140a
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x30032064
block|,
literal|0x4653de68
block|,
literal|0x04518a3c
block|,
literal|0x00002101
block|,
literal|0x2a201c16
block|,
literal|0x1812362e
block|,
literal|0x322c2220
block|,
literal|0x000e3c24
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x03902a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x00000000
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x681604c2
block|,
literal|0x01007c00
block|,
literal|0x01004800
block|,
literal|0xfb000000
block|,
literal|0x000028d1
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x28160d05
block|,
literal|0x00000008
block|,
literal|0x001b25a4
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x081b25a0
block|,
literal|0x081b25a0
block|,
literal|0x081b25a0
block|,
literal|0x081b25a0
block|,
literal|0x631b25a0
block|,
literal|0x081b25a0
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x001b25a0
block|,
literal|0x001b25a0
block|,
literal|0x6b1b25a0
block|,
literal|0x00000003
block|,
literal|0x00000000
block|,
literal|0x00000300
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8188ce_agc_vals
index|[]
init|=
block|{
literal|0x7b000001
block|,
literal|0x7b010001
block|,
literal|0x7b020001
block|,
literal|0x7b030001
block|,
literal|0x7b040001
block|,
literal|0x7b050001
block|,
literal|0x7a060001
block|,
literal|0x79070001
block|,
literal|0x78080001
block|,
literal|0x77090001
block|,
literal|0x760a0001
block|,
literal|0x750b0001
block|,
literal|0x740c0001
block|,
literal|0x730d0001
block|,
literal|0x720e0001
block|,
literal|0x710f0001
block|,
literal|0x70100001
block|,
literal|0x6f110001
block|,
literal|0x6e120001
block|,
literal|0x6d130001
block|,
literal|0x6c140001
block|,
literal|0x6b150001
block|,
literal|0x6a160001
block|,
literal|0x69170001
block|,
literal|0x68180001
block|,
literal|0x67190001
block|,
literal|0x661a0001
block|,
literal|0x651b0001
block|,
literal|0x641c0001
block|,
literal|0x631d0001
block|,
literal|0x621e0001
block|,
literal|0x611f0001
block|,
literal|0x60200001
block|,
literal|0x49210001
block|,
literal|0x48220001
block|,
literal|0x47230001
block|,
literal|0x46240001
block|,
literal|0x45250001
block|,
literal|0x44260001
block|,
literal|0x43270001
block|,
literal|0x42280001
block|,
literal|0x41290001
block|,
literal|0x402a0001
block|,
literal|0x262b0001
block|,
literal|0x252c0001
block|,
literal|0x242d0001
block|,
literal|0x232e0001
block|,
literal|0x222f0001
block|,
literal|0x21300001
block|,
literal|0x20310001
block|,
literal|0x06320001
block|,
literal|0x05330001
block|,
literal|0x04340001
block|,
literal|0x03350001
block|,
literal|0x02360001
block|,
literal|0x01370001
block|,
literal|0x00380001
block|,
literal|0x00390001
block|,
literal|0x003a0001
block|,
literal|0x003b0001
block|,
literal|0x003c0001
block|,
literal|0x003d0001
block|,
literal|0x003e0001
block|,
literal|0x003f0001
block|,
literal|0x7b400001
block|,
literal|0x7b410001
block|,
literal|0x7b420001
block|,
literal|0x7b430001
block|,
literal|0x7b440001
block|,
literal|0x7b450001
block|,
literal|0x7a460001
block|,
literal|0x79470001
block|,
literal|0x78480001
block|,
literal|0x77490001
block|,
literal|0x764a0001
block|,
literal|0x754b0001
block|,
literal|0x744c0001
block|,
literal|0x734d0001
block|,
literal|0x724e0001
block|,
literal|0x714f0001
block|,
literal|0x70500001
block|,
literal|0x6f510001
block|,
literal|0x6e520001
block|,
literal|0x6d530001
block|,
literal|0x6c540001
block|,
literal|0x6b550001
block|,
literal|0x6a560001
block|,
literal|0x69570001
block|,
literal|0x68580001
block|,
literal|0x67590001
block|,
literal|0x665a0001
block|,
literal|0x655b0001
block|,
literal|0x645c0001
block|,
literal|0x635d0001
block|,
literal|0x625e0001
block|,
literal|0x615f0001
block|,
literal|0x60600001
block|,
literal|0x49610001
block|,
literal|0x48620001
block|,
literal|0x47630001
block|,
literal|0x46640001
block|,
literal|0x45650001
block|,
literal|0x44660001
block|,
literal|0x43670001
block|,
literal|0x42680001
block|,
literal|0x41690001
block|,
literal|0x406a0001
block|,
literal|0x266b0001
block|,
literal|0x256c0001
block|,
literal|0x246d0001
block|,
literal|0x236e0001
block|,
literal|0x226f0001
block|,
literal|0x21700001
block|,
literal|0x20710001
block|,
literal|0x06720001
block|,
literal|0x05730001
block|,
literal|0x04740001
block|,
literal|0x03750001
block|,
literal|0x02760001
block|,
literal|0x01770001
block|,
literal|0x00780001
block|,
literal|0x00790001
block|,
literal|0x007a0001
block|,
literal|0x007b0001
block|,
literal|0x007c0001
block|,
literal|0x007d0001
block|,
literal|0x007e0001
block|,
literal|0x007f0001
block|,
literal|0x3800001e
block|,
literal|0x3801001e
block|,
literal|0x3802001e
block|,
literal|0x3803001e
block|,
literal|0x3804001e
block|,
literal|0x3805001e
block|,
literal|0x3806001e
block|,
literal|0x3807001e
block|,
literal|0x3808001e
block|,
literal|0x3c09001e
block|,
literal|0x3e0a001e
block|,
literal|0x400b001e
block|,
literal|0x440c001e
block|,
literal|0x480d001e
block|,
literal|0x4c0e001e
block|,
literal|0x500f001e
block|,
literal|0x5210001e
block|,
literal|0x5611001e
block|,
literal|0x5a12001e
block|,
literal|0x5e13001e
block|,
literal|0x6014001e
block|,
literal|0x6015001e
block|,
literal|0x6016001e
block|,
literal|0x6217001e
block|,
literal|0x6218001e
block|,
literal|0x6219001e
block|,
literal|0x621a001e
block|,
literal|0x621b001e
block|,
literal|0x621c001e
block|,
literal|0x621d001e
block|,
literal|0x621e001e
block|,
literal|0x621f001e
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_bb_prog
name|rtl8188ce_bb_prog
init|=
block|{
name|nitems
argument_list|(
name|rtl8192ce_bb_regs
argument_list|)
block|,
name|rtl8192ce_bb_regs
block|,
name|rtl8188ce_bb_vals
block|,
name|nitems
argument_list|(
name|rtl8188ce_agc_vals
argument_list|)
block|,
name|rtl8188ce_agc_vals
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8188cu_bb_vals
index|[]
init|=
block|{
literal|0x0011800d
block|,
literal|0x00ffdb83
block|,
literal|0x80040000
block|,
literal|0x00000001
block|,
literal|0x0000fc00
block|,
literal|0x0000000a
block|,
literal|0x10005388
block|,
literal|0x020c3d10
block|,
literal|0x02200385
block|,
literal|0x00000000
block|,
literal|0x01000100
block|,
literal|0x00390004
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00010000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x569a569a
block|,
literal|0x001b25a4
block|,
literal|0x66e60230
block|,
literal|0x061f0130
block|,
literal|0x00000000
block|,
literal|0x32323200
block|,
literal|0x07000700
block|,
literal|0x22004000
block|,
literal|0x00000808
block|,
literal|0x00000000
block|,
literal|0xc0083070
block|,
literal|0x000004d5
block|,
literal|0x00000000
block|,
literal|0xccc000c0
block|,
literal|0x00000800
block|,
literal|0xfffffffe
block|,
literal|0x40302010
block|,
literal|0x00706050
block|,
literal|0x00000000
block|,
literal|0x00000023
block|,
literal|0x00000000
block|,
literal|0x81121111
block|,
literal|0x00d047c8
block|,
literal|0x80ff000c
block|,
literal|0x8c838300
block|,
literal|0x2e68120f
block|,
literal|0x9500bb78
block|,
literal|0x11144028
block|,
literal|0x00881117
block|,
literal|0x89140f00
block|,
literal|0x1a1b0000
block|,
literal|0x090e1317
block|,
literal|0x00000204
block|,
literal|0x00d30000
block|,
literal|0x101fbf00
block|,
literal|0x00000007
block|,
literal|0x48071d40
block|,
literal|0x03a05611
block|,
literal|0x000000e4
block|,
literal|0x6c6c6c6c
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x69e9ac44
block|,
literal|0x469652cf
block|,
literal|0x49795994
block|,
literal|0x0a97971c
block|,
literal|0x1f7c403f
block|,
literal|0x000100b7
block|,
literal|0xec020107
block|,
literal|0x007f037f
block|,
literal|0x6954341e
block|,
literal|0x43bc0094
block|,
literal|0x6954341e
block|,
literal|0x433c0094
block|,
literal|0x00000000
block|,
literal|0x5116848b
block|,
literal|0x47c00bff
block|,
literal|0x00000036
block|,
literal|0x2c7f000d
block|,
literal|0x018610db
block|,
literal|0x0000001f
block|,
literal|0x00b91612
block|,
literal|0x40000100
block|,
literal|0x20f60000
block|,
literal|0x40000100
block|,
literal|0x20200000
block|,
literal|0x00121820
block|,
literal|0x00000000
block|,
literal|0x00121820
block|,
literal|0x00007f7f
block|,
literal|0x00000000
block|,
literal|0x00000080
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x28000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x64b22427
block|,
literal|0x00766932
block|,
literal|0x00222222
block|,
literal|0x00000000
block|,
literal|0x37644302
block|,
literal|0x2f97d40c
block|,
literal|0x00080740
block|,
literal|0x00020401
block|,
literal|0x0000907f
block|,
literal|0x20010201
block|,
literal|0xa0633333
block|,
literal|0x3333bc43
block|,
literal|0x7a8f5b6b
block|,
literal|0xcc979975
block|,
literal|0x00000000
block|,
literal|0x80608000
block|,
literal|0x00000000
block|,
literal|0x00027293
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x6437140a
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x30032064
block|,
literal|0x4653de68
block|,
literal|0x04518a3c
block|,
literal|0x00002101
block|,
literal|0x2a201c16
block|,
literal|0x1812362e
block|,
literal|0x322c2220
block|,
literal|0x000e3c24
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x03902a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x00000000
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x681604c2
block|,
literal|0x01007c00
block|,
literal|0x01004800
block|,
literal|0xfb000000
block|,
literal|0x000028d1
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x28160d05
block|,
literal|0x00000008
block|,
literal|0x001b25a4
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x081b25a0
block|,
literal|0x081b25a0
block|,
literal|0x081b25a0
block|,
literal|0x081b25a0
block|,
literal|0x631b25a0
block|,
literal|0x081b25a0
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x001b25a0
block|,
literal|0x001b25a0
block|,
literal|0x6b1b25a0
block|,
literal|0x00000003
block|,
literal|0x00000000
block|,
literal|0x00000300
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_bb_prog
name|rtl8188cu_bb_prog
init|=
block|{
name|nitems
argument_list|(
name|rtl8192ce_bb_regs
argument_list|)
block|,
name|rtl8192ce_bb_regs
block|,
name|rtl8188cu_bb_vals
block|,
name|nitems
argument_list|(
name|rtl8188ce_agc_vals
argument_list|)
block|,
name|rtl8188ce_agc_vals
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RTL8188EU.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint16_t
name|rtl8188eu_bb_regs
index|[]
init|=
block|{
literal|0x800
block|,
literal|0x804
block|,
literal|0x808
block|,
literal|0x80c
block|,
literal|0x810
block|,
literal|0x814
block|,
literal|0x818
block|,
literal|0x81c
block|,
literal|0x820
block|,
literal|0x824
block|,
literal|0x828
block|,
literal|0x82c
block|,
literal|0x830
block|,
literal|0x834
block|,
literal|0x838
block|,
literal|0x83c
block|,
literal|0x840
block|,
literal|0x844
block|,
literal|0x848
block|,
literal|0x84c
block|,
literal|0x850
block|,
literal|0x854
block|,
literal|0x858
block|,
literal|0x85c
block|,
literal|0x860
block|,
literal|0x864
block|,
literal|0x868
block|,
literal|0x86c
block|,
literal|0x870
block|,
literal|0x874
block|,
literal|0x878
block|,
literal|0x87c
block|,
literal|0x880
block|,
literal|0x884
block|,
literal|0x888
block|,
literal|0x88c
block|,
literal|0x890
block|,
literal|0x894
block|,
literal|0x898
block|,
literal|0x89c
block|,
literal|0x900
block|,
literal|0x904
block|,
literal|0x908
block|,
literal|0x90c
block|,
literal|0x910
block|,
literal|0x914
block|,
literal|0xa00
block|,
literal|0xa04
block|,
literal|0xa08
block|,
literal|0xa0c
block|,
literal|0xa10
block|,
literal|0xa14
block|,
literal|0xa18
block|,
literal|0xa1c
block|,
literal|0xa20
block|,
literal|0xa24
block|,
literal|0xa28
block|,
literal|0xa2c
block|,
literal|0xa70
block|,
literal|0xa74
block|,
literal|0xa78
block|,
literal|0xa7c
block|,
literal|0xa80
block|,
literal|0xb2c
block|,
literal|0xc00
block|,
literal|0xc04
block|,
literal|0xc08
block|,
literal|0xc0c
block|,
literal|0xc10
block|,
literal|0xc14
block|,
literal|0xc18
block|,
literal|0xc1c
block|,
literal|0xc20
block|,
literal|0xc24
block|,
literal|0xc28
block|,
literal|0xc2c
block|,
literal|0xc30
block|,
literal|0xc34
block|,
literal|0xc38
block|,
literal|0xc3c
block|,
literal|0xc40
block|,
literal|0xc44
block|,
literal|0xc48
block|,
literal|0xc4c
block|,
literal|0xc50
block|,
literal|0xc54
block|,
literal|0xc58
block|,
literal|0xc5c
block|,
literal|0xc60
block|,
literal|0xc64
block|,
literal|0xc68
block|,
literal|0xc6c
block|,
literal|0xc70
block|,
literal|0xc74
block|,
literal|0xc78
block|,
literal|0xc7c
block|,
literal|0xc80
block|,
literal|0xc84
block|,
literal|0xc88
block|,
literal|0xc8c
block|,
literal|0xc90
block|,
literal|0xc94
block|,
literal|0xc98
block|,
literal|0xc9c
block|,
literal|0xca0
block|,
literal|0xca4
block|,
literal|0xca8
block|,
literal|0xcac
block|,
literal|0xcb0
block|,
literal|0xcb4
block|,
literal|0xcb8
block|,
literal|0xcbc
block|,
literal|0xcc0
block|,
literal|0xcc4
block|,
literal|0xcc8
block|,
literal|0xccc
block|,
literal|0xcd0
block|,
literal|0xcd4
block|,
literal|0xcd8
block|,
literal|0xcdc
block|,
literal|0xce0
block|,
literal|0xce4
block|,
literal|0xce8
block|,
literal|0xcec
block|,
literal|0xd00
block|,
literal|0xd04
block|,
literal|0xd08
block|,
literal|0xd0c
block|,
literal|0xd10
block|,
literal|0xd14
block|,
literal|0xd18
block|,
literal|0xd2c
block|,
literal|0xd30
block|,
literal|0xd34
block|,
literal|0xd38
block|,
literal|0xd3c
block|,
literal|0xd40
block|,
literal|0xd44
block|,
literal|0xd48
block|,
literal|0xd4c
block|,
literal|0xd50
block|,
literal|0xd54
block|,
literal|0xd58
block|,
literal|0xd5c
block|,
literal|0xd60
block|,
literal|0xd64
block|,
literal|0xd68
block|,
literal|0xd6c
block|,
literal|0xd70
block|,
literal|0xd74
block|,
literal|0xd78
block|,
literal|0xe00
block|,
literal|0xe04
block|,
literal|0xe08
block|,
literal|0xe10
block|,
literal|0xe14
block|,
literal|0xe18
block|,
literal|0xe1c
block|,
literal|0xe28
block|,
literal|0xe30
block|,
literal|0xe34
block|,
literal|0xe38
block|,
literal|0xe3c
block|,
literal|0xe40
block|,
literal|0xe44
block|,
literal|0xe48
block|,
literal|0xe4c
block|,
literal|0xe50
block|,
literal|0xe54
block|,
literal|0xe58
block|,
literal|0xe5c
block|,
literal|0xe60
block|,
literal|0xe68
block|,
literal|0xe6c
block|,
literal|0xe70
block|,
literal|0xe74
block|,
literal|0xe78
block|,
literal|0xe7c
block|,
literal|0xe80
block|,
literal|0xe84
block|,
literal|0xe88
block|,
literal|0xe8c
block|,
literal|0xed0
block|,
literal|0xed4
block|,
literal|0xed8
block|,
literal|0xedc
block|,
literal|0xee0
block|,
literal|0xee8
block|,
literal|0xeec
block|,
literal|0xf14
block|,
literal|0xf4c
block|,
literal|0xf00
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8188eu_bb_vals
index|[]
init|=
block|{
literal|0x80040000
block|,
literal|0x00000003
block|,
literal|0x0000fc00
block|,
literal|0x0000000a
block|,
literal|0x10001331
block|,
literal|0x020c3d10
block|,
literal|0x02200385
block|,
literal|0x00000000
block|,
literal|0x01000100
block|,
literal|0x00390204
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00010000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x569a11a9
block|,
literal|0x01000014
block|,
literal|0x66f60110
block|,
literal|0x061f0649
block|,
literal|0x00000000
block|,
literal|0x27272700
block|,
literal|0x07000760
block|,
literal|0x25004000
block|,
literal|0x00000808
block|,
literal|0x00000000
block|,
literal|0xb0000c1c
block|,
literal|0x00000001
block|,
literal|0x00000000
block|,
literal|0xccc000c0
block|,
literal|0x00000800
block|,
literal|0xfffffffe
block|,
literal|0x40302010
block|,
literal|0x00706050
block|,
literal|0x00000000
block|,
literal|0x00000023
block|,
literal|0x00000000
block|,
literal|0x81121111
block|,
literal|0x00000002
block|,
literal|0x00000201
block|,
literal|0x00d047c8
block|,
literal|0x80ff000c
block|,
literal|0x8c838300
block|,
literal|0x2e7f120f
block|,
literal|0x9500bb78
block|,
literal|0x1114d028
block|,
literal|0x00881117
block|,
literal|0x89140f00
block|,
literal|0x1a1b0000
block|,
literal|0x090e1317
block|,
literal|0x00000204
block|,
literal|0x00d30000
block|,
literal|0x101fbf00
block|,
literal|0x00000007
block|,
literal|0x00000900
block|,
literal|0x225b0606
block|,
literal|0x218075b1
block|,
literal|0x80000000
block|,
literal|0x48071d40
block|,
literal|0x03a05611
block|,
literal|0x000000e4
block|,
literal|0x6c6c6c6c
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x69e9ac47
block|,
literal|0x469652af
block|,
literal|0x49795994
block|,
literal|0x0a97971c
block|,
literal|0x1f7c403f
block|,
literal|0x000100b7
block|,
literal|0xec020107
block|,
literal|0x007f037f
block|,
literal|0x69553420
block|,
literal|0x43bc0094
block|,
literal|0x00013169
block|,
literal|0x00250492
block|,
literal|0x00000000
block|,
literal|0x7112848b
block|,
literal|0x47c00bff
block|,
literal|0x00000036
block|,
literal|0x2c7f000d
block|,
literal|0x020610db
block|,
literal|0x0000001f
block|,
literal|0x00b91612
block|,
literal|0x390000e4
block|,
literal|0x20f60000
block|,
literal|0x40000100
block|,
literal|0x20200000
block|,
literal|0x00091521
block|,
literal|0x00000000
block|,
literal|0x00121820
block|,
literal|0x00007f7f
block|,
literal|0x00000000
block|,
literal|0x000300a0
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x28000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x64b22427
block|,
literal|0x00766932
block|,
literal|0x00222222
block|,
literal|0x00000000
block|,
literal|0x37644302
block|,
literal|0x2f97d40c
block|,
literal|0x00000740
block|,
literal|0x00020401
block|,
literal|0x0000907f
block|,
literal|0x20010201
block|,
literal|0xa0633333
block|,
literal|0x3333bc43
block|,
literal|0x7a8f5b6f
block|,
literal|0xcc979975
block|,
literal|0x00000000
block|,
literal|0x80608000
block|,
literal|0x00000000
block|,
literal|0x00127353
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x6437140a
block|,
literal|0x00000000
block|,
literal|0x00000282
block|,
literal|0x30032064
block|,
literal|0x4653de68
block|,
literal|0x04518a3c
block|,
literal|0x00002101
block|,
literal|0x2a201c16
block|,
literal|0x1812362e
block|,
literal|0x322c2220
block|,
literal|0x000e3c24
block|,
literal|0x2d2d2d2d
block|,
literal|0x2d2d2d2d
block|,
literal|0x0390272d
block|,
literal|0x2d2d2d2d
block|,
literal|0x2d2d2d2d
block|,
literal|0x2d2d2d2d
block|,
literal|0x2d2d2d2d
block|,
literal|0x00000000
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x681604c2
block|,
literal|0x01007c00
block|,
literal|0x01004800
block|,
literal|0xfb000000
block|,
literal|0x000028d1
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x28160d05
block|,
literal|0x00000008
block|,
literal|0x001b25a4
block|,
literal|0x00c00014
block|,
literal|0x00c00014
block|,
literal|0x01000014
block|,
literal|0x01000014
block|,
literal|0x01000014
block|,
literal|0x01000014
block|,
literal|0x00c00014
block|,
literal|0x01000014
block|,
literal|0x00c00014
block|,
literal|0x00c00014
block|,
literal|0x00c00014
block|,
literal|0x00c00014
block|,
literal|0x00000014
block|,
literal|0x00000014
block|,
literal|0x21555448
block|,
literal|0x01c00014
block|,
literal|0x00000003
block|,
literal|0x00000000
block|,
literal|0x00000300
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8188eu_agc_vals
index|[]
init|=
block|{
literal|0xfb000001
block|,
literal|0xfb010001
block|,
literal|0xfb020001
block|,
literal|0xfb030001
block|,
literal|0xfb040001
block|,
literal|0xfb050001
block|,
literal|0xfa060001
block|,
literal|0xf9070001
block|,
literal|0xf8080001
block|,
literal|0xf7090001
block|,
literal|0xf60a0001
block|,
literal|0xf50b0001
block|,
literal|0xf40c0001
block|,
literal|0xf30d0001
block|,
literal|0xf20e0001
block|,
literal|0xf10f0001
block|,
literal|0xf0100001
block|,
literal|0xef110001
block|,
literal|0xee120001
block|,
literal|0xed130001
block|,
literal|0xec140001
block|,
literal|0xeb150001
block|,
literal|0xea160001
block|,
literal|0xe9170001
block|,
literal|0xe8180001
block|,
literal|0xe7190001
block|,
literal|0xe61a0001
block|,
literal|0xe51b0001
block|,
literal|0xe41c0001
block|,
literal|0xe31d0001
block|,
literal|0xe21e0001
block|,
literal|0xe11f0001
block|,
literal|0x8a200001
block|,
literal|0x89210001
block|,
literal|0x88220001
block|,
literal|0x87230001
block|,
literal|0x86240001
block|,
literal|0x85250001
block|,
literal|0x84260001
block|,
literal|0x83270001
block|,
literal|0x82280001
block|,
literal|0x6b290001
block|,
literal|0x6a2a0001
block|,
literal|0x692b0001
block|,
literal|0x682c0001
block|,
literal|0x672d0001
block|,
literal|0x662e0001
block|,
literal|0x652f0001
block|,
literal|0x64300001
block|,
literal|0x63310001
block|,
literal|0x62320001
block|,
literal|0x61330001
block|,
literal|0x46340001
block|,
literal|0x45350001
block|,
literal|0x44360001
block|,
literal|0x43370001
block|,
literal|0x42380001
block|,
literal|0x41390001
block|,
literal|0x403a0001
block|,
literal|0x403b0001
block|,
literal|0x403c0001
block|,
literal|0x403d0001
block|,
literal|0x403e0001
block|,
literal|0x403f0001
block|,
literal|0xfb400001
block|,
literal|0xfb410001
block|,
literal|0xfb420001
block|,
literal|0xfb430001
block|,
literal|0xfb440001
block|,
literal|0xfb450001
block|,
literal|0xfb460001
block|,
literal|0xfb470001
block|,
literal|0xfb480001
block|,
literal|0xfa490001
block|,
literal|0xf94a0001
block|,
literal|0xf84B0001
block|,
literal|0xf74c0001
block|,
literal|0xf64d0001
block|,
literal|0xf54e0001
block|,
literal|0xf44f0001
block|,
literal|0xf3500001
block|,
literal|0xf2510001
block|,
literal|0xf1520001
block|,
literal|0xf0530001
block|,
literal|0xef540001
block|,
literal|0xee550001
block|,
literal|0xed560001
block|,
literal|0xec570001
block|,
literal|0xeb580001
block|,
literal|0xea590001
block|,
literal|0xe95a0001
block|,
literal|0xe85b0001
block|,
literal|0xe75c0001
block|,
literal|0xe65d0001
block|,
literal|0xe55e0001
block|,
literal|0xe45f0001
block|,
literal|0xe3600001
block|,
literal|0xe2610001
block|,
literal|0xc3620001
block|,
literal|0xc2630001
block|,
literal|0xc1640001
block|,
literal|0x8b650001
block|,
literal|0x8a660001
block|,
literal|0x89670001
block|,
literal|0x88680001
block|,
literal|0x87690001
block|,
literal|0x866a0001
block|,
literal|0x856b0001
block|,
literal|0x846c0001
block|,
literal|0x676d0001
block|,
literal|0x666e0001
block|,
literal|0x656f0001
block|,
literal|0x64700001
block|,
literal|0x63710001
block|,
literal|0x62720001
block|,
literal|0x61730001
block|,
literal|0x60740001
block|,
literal|0x46750001
block|,
literal|0x45760001
block|,
literal|0x44770001
block|,
literal|0x43780001
block|,
literal|0x42790001
block|,
literal|0x417a0001
block|,
literal|0x407b0001
block|,
literal|0x407c0001
block|,
literal|0x407d0001
block|,
literal|0x407e0001
block|,
literal|0x407f0001
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_bb_prog
name|rtl8188eu_bb_prog
init|=
block|{
name|nitems
argument_list|(
name|rtl8188eu_bb_regs
argument_list|)
block|,
name|rtl8188eu_bb_regs
block|,
name|rtl8188eu_bb_vals
block|,
name|nitems
argument_list|(
name|rtl8188eu_agc_vals
argument_list|)
block|,
name|rtl8188eu_agc_vals
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RTL8188RU.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint16_t
name|rtl8188ru_bb_regs
index|[]
init|=
block|{
literal|0x024
block|,
literal|0x028
block|,
literal|0x040
block|,
literal|0x800
block|,
literal|0x804
block|,
literal|0x808
block|,
literal|0x80c
block|,
literal|0x810
block|,
literal|0x814
block|,
literal|0x818
block|,
literal|0x81c
block|,
literal|0x820
block|,
literal|0x824
block|,
literal|0x828
block|,
literal|0x82c
block|,
literal|0x830
block|,
literal|0x834
block|,
literal|0x838
block|,
literal|0x83c
block|,
literal|0x840
block|,
literal|0x844
block|,
literal|0x848
block|,
literal|0x84c
block|,
literal|0x850
block|,
literal|0x854
block|,
literal|0x858
block|,
literal|0x85c
block|,
literal|0x860
block|,
literal|0x864
block|,
literal|0x868
block|,
literal|0x86c
block|,
literal|0x870
block|,
literal|0x874
block|,
literal|0x878
block|,
literal|0x87c
block|,
literal|0x880
block|,
literal|0x884
block|,
literal|0x888
block|,
literal|0x88c
block|,
literal|0x890
block|,
literal|0x894
block|,
literal|0x898
block|,
literal|0x89c
block|,
literal|0x900
block|,
literal|0x904
block|,
literal|0x908
block|,
literal|0x90c
block|,
literal|0xa00
block|,
literal|0xa04
block|,
literal|0xa08
block|,
literal|0xa0c
block|,
literal|0xa10
block|,
literal|0xa14
block|,
literal|0xa18
block|,
literal|0xa1c
block|,
literal|0xa20
block|,
literal|0xa24
block|,
literal|0xa28
block|,
literal|0xa2c
block|,
literal|0xa70
block|,
literal|0xa74
block|,
literal|0xc00
block|,
literal|0xc04
block|,
literal|0xc08
block|,
literal|0xc0c
block|,
literal|0xc10
block|,
literal|0xc14
block|,
literal|0xc18
block|,
literal|0xc1c
block|,
literal|0xc20
block|,
literal|0xc24
block|,
literal|0xc28
block|,
literal|0xc2c
block|,
literal|0xc30
block|,
literal|0xc34
block|,
literal|0xc38
block|,
literal|0xc3c
block|,
literal|0xc40
block|,
literal|0xc44
block|,
literal|0xc48
block|,
literal|0xc4c
block|,
literal|0xc50
block|,
literal|0xc54
block|,
literal|0xc58
block|,
literal|0xc5c
block|,
literal|0xc60
block|,
literal|0xc64
block|,
literal|0xc68
block|,
literal|0xc6c
block|,
literal|0xc70
block|,
literal|0xc74
block|,
literal|0xc78
block|,
literal|0xc7c
block|,
literal|0xc80
block|,
literal|0xc84
block|,
literal|0xc88
block|,
literal|0xc8c
block|,
literal|0xc90
block|,
literal|0xc94
block|,
literal|0xc98
block|,
literal|0xc9c
block|,
literal|0xca0
block|,
literal|0xca4
block|,
literal|0xca8
block|,
literal|0xcac
block|,
literal|0xcb0
block|,
literal|0xcb4
block|,
literal|0xcb8
block|,
literal|0xcbc
block|,
literal|0xcc0
block|,
literal|0xcc4
block|,
literal|0xcc8
block|,
literal|0xccc
block|,
literal|0xcd0
block|,
literal|0xcd4
block|,
literal|0xcd8
block|,
literal|0xcdc
block|,
literal|0xce0
block|,
literal|0xce4
block|,
literal|0xce8
block|,
literal|0xcec
block|,
literal|0xd00
block|,
literal|0xd04
block|,
literal|0xd08
block|,
literal|0xd0c
block|,
literal|0xd10
block|,
literal|0xd14
block|,
literal|0xd18
block|,
literal|0xd2c
block|,
literal|0xd30
block|,
literal|0xd34
block|,
literal|0xd38
block|,
literal|0xd3c
block|,
literal|0xd40
block|,
literal|0xd44
block|,
literal|0xd48
block|,
literal|0xd4c
block|,
literal|0xd50
block|,
literal|0xd54
block|,
literal|0xd58
block|,
literal|0xd5c
block|,
literal|0xd60
block|,
literal|0xd64
block|,
literal|0xd68
block|,
literal|0xd6c
block|,
literal|0xd70
block|,
literal|0xd74
block|,
literal|0xd78
block|,
literal|0xe00
block|,
literal|0xe04
block|,
literal|0xe08
block|,
literal|0xe10
block|,
literal|0xe14
block|,
literal|0xe18
block|,
literal|0xe1c
block|,
literal|0xe28
block|,
literal|0xe30
block|,
literal|0xe34
block|,
literal|0xe38
block|,
literal|0xe3c
block|,
literal|0xe40
block|,
literal|0xe44
block|,
literal|0xe48
block|,
literal|0xe4c
block|,
literal|0xe50
block|,
literal|0xe54
block|,
literal|0xe58
block|,
literal|0xe5c
block|,
literal|0xe60
block|,
literal|0xe68
block|,
literal|0xe6c
block|,
literal|0xe70
block|,
literal|0xe74
block|,
literal|0xe78
block|,
literal|0xe7c
block|,
literal|0xe80
block|,
literal|0xe84
block|,
literal|0xe88
block|,
literal|0xe8c
block|,
literal|0xed0
block|,
literal|0xed4
block|,
literal|0xed8
block|,
literal|0xedc
block|,
literal|0xee0
block|,
literal|0xeec
block|,
literal|0xee8
block|,
literal|0xf14
block|,
literal|0xf4c
block|,
literal|0xf00
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8188ru_bb_vals
index|[]
init|=
block|{
literal|0x0011800d
block|,
literal|0x00ffdb83
block|,
literal|0x000c0004
block|,
literal|0x80040000
block|,
literal|0x00000001
block|,
literal|0x0000fc00
block|,
literal|0x0000000a
block|,
literal|0x10005388
block|,
literal|0x020c3d10
block|,
literal|0x02200385
block|,
literal|0x00000000
block|,
literal|0x01000100
block|,
literal|0x00390204
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00010000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x569a569a
block|,
literal|0x001b25a4
block|,
literal|0x66e60230
block|,
literal|0x061f0130
block|,
literal|0x00000000
block|,
literal|0x32323200
block|,
literal|0x03000300
block|,
literal|0x22004000
block|,
literal|0x00000808
block|,
literal|0x00ffc3f1
block|,
literal|0xc0083070
block|,
literal|0x000004d5
block|,
literal|0x00000000
block|,
literal|0xccc000c0
block|,
literal|0x00000800
block|,
literal|0xfffffffe
block|,
literal|0x40302010
block|,
literal|0x00706050
block|,
literal|0x00000000
block|,
literal|0x00000023
block|,
literal|0x00000000
block|,
literal|0x81121111
block|,
literal|0x00d047c8
block|,
literal|0x80ff000c
block|,
literal|0x8c838300
block|,
literal|0x2e68120f
block|,
literal|0x9500bb78
block|,
literal|0x11144028
block|,
literal|0x00881117
block|,
literal|0x89140f00
block|,
literal|0x15160000
block|,
literal|0x070b0f12
block|,
literal|0x00000104
block|,
literal|0x00d30000
block|,
literal|0x101fbf00
block|,
literal|0x00000007
block|,
literal|0x48071d40
block|,
literal|0x03a05611
block|,
literal|0x000000e4
block|,
literal|0x6c6c6c6c
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x08800000
block|,
literal|0x40000100
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x69e9ac44
block|,
literal|0x469652cf
block|,
literal|0x49795994
block|,
literal|0x0a97971c
block|,
literal|0x1f7c403f
block|,
literal|0x000100b7
block|,
literal|0xec020107
block|,
literal|0x007f037f
block|,
literal|0x6954342e
block|,
literal|0x43bc0094
block|,
literal|0x6954342f
block|,
literal|0x433c0094
block|,
literal|0x00000000
block|,
literal|0x5116848b
block|,
literal|0x47c00bff
block|,
literal|0x00000036
block|,
literal|0x2c56000d
block|,
literal|0x018610db
block|,
literal|0x0000001f
block|,
literal|0x00b91612
block|,
literal|0x24000090
block|,
literal|0x20f60000
block|,
literal|0x24000090
block|,
literal|0x20200000
block|,
literal|0x00121820
block|,
literal|0x00000000
block|,
literal|0x00121820
block|,
literal|0x00007f7f
block|,
literal|0x00000000
block|,
literal|0x00000080
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x28000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x64b22427
block|,
literal|0x00766932
block|,
literal|0x00222222
block|,
literal|0x00000000
block|,
literal|0x37644302
block|,
literal|0x2f97d40c
block|,
literal|0x00080740
block|,
literal|0x00020401
block|,
literal|0x0000907f
block|,
literal|0x20010201
block|,
literal|0xa0633333
block|,
literal|0x3333bc43
block|,
literal|0x7a8f5b6b
block|,
literal|0xcc979975
block|,
literal|0x00000000
block|,
literal|0x80608000
block|,
literal|0x00000000
block|,
literal|0x00027293
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x6437140a
block|,
literal|0x00000000
block|,
literal|0x00000000
block|,
literal|0x30032064
block|,
literal|0x4653de68
block|,
literal|0x04518a3c
block|,
literal|0x00002101
block|,
literal|0x2a201c16
block|,
literal|0x1812362e
block|,
literal|0x322c2220
block|,
literal|0x000e3c24
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x03902a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x2a2a2a2a
block|,
literal|0x00000000
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x681604c2
block|,
literal|0x01007c00
block|,
literal|0x01004800
block|,
literal|0xfb000000
block|,
literal|0x000028d1
block|,
literal|0x1000dc1f
block|,
literal|0x10008c1f
block|,
literal|0x02140102
block|,
literal|0x28160d05
block|,
literal|0x00000010
block|,
literal|0x001b25a4
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x081b25a0
block|,
literal|0x081b25a0
block|,
literal|0x081b25a0
block|,
literal|0x081b25a0
block|,
literal|0x631b25a0
block|,
literal|0x081b25a0
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x631b25a0
block|,
literal|0x001b25a0
block|,
literal|0x001b25a0
block|,
literal|0x6b1b25a0
block|,
literal|0x31555448
block|,
literal|0x00000003
block|,
literal|0x00000000
block|,
literal|0x00000300
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8188ru_agc_vals
index|[]
init|=
block|{
literal|0x7b000001
block|,
literal|0x7b010001
block|,
literal|0x7b020001
block|,
literal|0x7b030001
block|,
literal|0x7b040001
block|,
literal|0x7b050001
block|,
literal|0x7b060001
block|,
literal|0x7b070001
block|,
literal|0x7b080001
block|,
literal|0x7a090001
block|,
literal|0x790a0001
block|,
literal|0x780b0001
block|,
literal|0x770c0001
block|,
literal|0x760d0001
block|,
literal|0x750e0001
block|,
literal|0x740f0001
block|,
literal|0x73100001
block|,
literal|0x72110001
block|,
literal|0x71120001
block|,
literal|0x70130001
block|,
literal|0x6f140001
block|,
literal|0x6e150001
block|,
literal|0x6d160001
block|,
literal|0x6c170001
block|,
literal|0x6b180001
block|,
literal|0x6a190001
block|,
literal|0x691a0001
block|,
literal|0x681b0001
block|,
literal|0x671c0001
block|,
literal|0x661d0001
block|,
literal|0x651e0001
block|,
literal|0x641f0001
block|,
literal|0x63200001
block|,
literal|0x62210001
block|,
literal|0x61220001
block|,
literal|0x60230001
block|,
literal|0x46240001
block|,
literal|0x45250001
block|,
literal|0x44260001
block|,
literal|0x43270001
block|,
literal|0x42280001
block|,
literal|0x41290001
block|,
literal|0x402a0001
block|,
literal|0x262b0001
block|,
literal|0x252c0001
block|,
literal|0x242d0001
block|,
literal|0x232e0001
block|,
literal|0x222f0001
block|,
literal|0x21300001
block|,
literal|0x20310001
block|,
literal|0x06320001
block|,
literal|0x05330001
block|,
literal|0x04340001
block|,
literal|0x03350001
block|,
literal|0x02360001
block|,
literal|0x01370001
block|,
literal|0x00380001
block|,
literal|0x00390001
block|,
literal|0x003a0001
block|,
literal|0x003b0001
block|,
literal|0x003c0001
block|,
literal|0x003d0001
block|,
literal|0x003e0001
block|,
literal|0x003f0001
block|,
literal|0x7b400001
block|,
literal|0x7b410001
block|,
literal|0x7b420001
block|,
literal|0x7b430001
block|,
literal|0x7b440001
block|,
literal|0x7b450001
block|,
literal|0x7b460001
block|,
literal|0x7b470001
block|,
literal|0x7b480001
block|,
literal|0x7a490001
block|,
literal|0x794a0001
block|,
literal|0x784b0001
block|,
literal|0x774c0001
block|,
literal|0x764d0001
block|,
literal|0x754e0001
block|,
literal|0x744f0001
block|,
literal|0x73500001
block|,
literal|0x72510001
block|,
literal|0x71520001
block|,
literal|0x70530001
block|,
literal|0x6f540001
block|,
literal|0x6e550001
block|,
literal|0x6d560001
block|,
literal|0x6c570001
block|,
literal|0x6b580001
block|,
literal|0x6a590001
block|,
literal|0x695a0001
block|,
literal|0x685b0001
block|,
literal|0x675c0001
block|,
literal|0x665d0001
block|,
literal|0x655e0001
block|,
literal|0x645f0001
block|,
literal|0x63600001
block|,
literal|0x62610001
block|,
literal|0x61620001
block|,
literal|0x60630001
block|,
literal|0x46640001
block|,
literal|0x45650001
block|,
literal|0x44660001
block|,
literal|0x43670001
block|,
literal|0x42680001
block|,
literal|0x41690001
block|,
literal|0x406a0001
block|,
literal|0x266b0001
block|,
literal|0x256c0001
block|,
literal|0x246d0001
block|,
literal|0x236e0001
block|,
literal|0x226f0001
block|,
literal|0x21700001
block|,
literal|0x20710001
block|,
literal|0x06720001
block|,
literal|0x05730001
block|,
literal|0x04740001
block|,
literal|0x03750001
block|,
literal|0x02760001
block|,
literal|0x01770001
block|,
literal|0x00780001
block|,
literal|0x00790001
block|,
literal|0x007a0001
block|,
literal|0x007b0001
block|,
literal|0x007c0001
block|,
literal|0x007d0001
block|,
literal|0x007e0001
block|,
literal|0x007f0001
block|,
literal|0x3800001e
block|,
literal|0x3801001e
block|,
literal|0x3802001e
block|,
literal|0x3803001e
block|,
literal|0x3804001e
block|,
literal|0x3805001e
block|,
literal|0x3806001e
block|,
literal|0x3807001e
block|,
literal|0x3808001e
block|,
literal|0x3c09001e
block|,
literal|0x3e0a001e
block|,
literal|0x400b001e
block|,
literal|0x440c001e
block|,
literal|0x480d001e
block|,
literal|0x4c0e001e
block|,
literal|0x500f001e
block|,
literal|0x5210001e
block|,
literal|0x5611001e
block|,
literal|0x5a12001e
block|,
literal|0x5e13001e
block|,
literal|0x6014001e
block|,
literal|0x6015001e
block|,
literal|0x6016001e
block|,
literal|0x6217001e
block|,
literal|0x6218001e
block|,
literal|0x6219001e
block|,
literal|0x621a001e
block|,
literal|0x621b001e
block|,
literal|0x621c001e
block|,
literal|0x621d001e
block|,
literal|0x621e001e
block|,
literal|0x621f001e
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_bb_prog
name|rtl8188ru_bb_prog
init|=
block|{
name|nitems
argument_list|(
name|rtl8188ru_bb_regs
argument_list|)
block|,
name|rtl8188ru_bb_regs
block|,
name|rtl8188ru_bb_vals
block|,
name|nitems
argument_list|(
name|rtl8188ru_agc_vals
argument_list|)
block|,
name|rtl8188ru_agc_vals
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RF initialization values.  */
end_comment

begin_struct
struct|struct
name|urtwn_rf_prog
block|{
name|int
name|count
decl_stmt|;
specifier|const
name|uint8_t
modifier|*
name|regs
decl_stmt|;
specifier|const
name|uint32_t
modifier|*
name|vals
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * RTL8192CU and RTL8192CE-VAU.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint8_t
name|rtl8192ce_rf1_regs
index|[]
init|=
block|{
literal|0x00
block|,
literal|0x01
block|,
literal|0x02
block|,
literal|0x03
block|,
literal|0x04
block|,
literal|0x09
block|,
literal|0x0a
block|,
literal|0x0b
block|,
literal|0x0c
block|,
literal|0x0d
block|,
literal|0x0e
block|,
literal|0x0f
block|,
literal|0x19
block|,
literal|0x1a
block|,
literal|0x1b
block|,
literal|0x1c
block|,
literal|0x1d
block|,
literal|0x1e
block|,
literal|0x1f
block|,
literal|0x20
block|,
literal|0x21
block|,
literal|0x22
block|,
literal|0x23
block|,
literal|0x24
block|,
literal|0x25
block|,
literal|0x26
block|,
literal|0x27
block|,
literal|0x28
block|,
literal|0x29
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x2b
block|,
literal|0x2b
block|,
literal|0x2c
block|,
literal|0x2a
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x10
block|,
literal|0x11
block|,
literal|0x12
block|,
literal|0x12
block|,
literal|0x12
block|,
literal|0x12
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x14
block|,
literal|0x14
block|,
literal|0x14
block|,
literal|0x14
block|,
literal|0x15
block|,
literal|0x15
block|,
literal|0x15
block|,
literal|0x15
block|,
literal|0x16
block|,
literal|0x16
block|,
literal|0x16
block|,
literal|0x16
block|,
literal|0x00
block|,
literal|0x18
block|,
literal|0xfe
block|,
literal|0xfe
block|,
literal|0x1f
block|,
literal|0xfe
block|,
literal|0xfe
block|,
literal|0x1e
block|,
literal|0x1f
block|,
literal|0x00
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8192ce_rf1_vals
index|[]
init|=
block|{
literal|0x30159
block|,
literal|0x31284
block|,
literal|0x98000
block|,
literal|0x18c63
block|,
literal|0x210e7
block|,
literal|0x2044f
block|,
literal|0x1adb1
block|,
literal|0x54867
block|,
literal|0x8992e
block|,
literal|0x0e52c
block|,
literal|0x39ce7
block|,
literal|0x00451
block|,
literal|0x00000
block|,
literal|0x10255
block|,
literal|0x60a00
block|,
literal|0xfc378
block|,
literal|0xa1250
block|,
literal|0x4445f
block|,
literal|0x80001
block|,
literal|0x0b614
block|,
literal|0x6c000
block|,
literal|0x00000
block|,
literal|0x01558
block|,
literal|0x00060
block|,
literal|0x00483
block|,
literal|0x4f000
block|,
literal|0xec7d9
block|,
literal|0x577c0
block|,
literal|0x04783
block|,
literal|0x00001
block|,
literal|0x21334
block|,
literal|0x00000
block|,
literal|0x00054
block|,
literal|0x00001
block|,
literal|0x00808
block|,
literal|0x53333
block|,
literal|0x0000c
block|,
literal|0x00002
block|,
literal|0x00808
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x00003
block|,
literal|0x00808
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x00004
block|,
literal|0x00808
block|,
literal|0x6b333
block|,
literal|0x0000d
block|,
literal|0x00005
block|,
literal|0x00808
block|,
literal|0x73333
block|,
literal|0x0000d
block|,
literal|0x00006
block|,
literal|0x00709
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x00007
block|,
literal|0x00709
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x00008
block|,
literal|0x0060a
block|,
literal|0x4b333
block|,
literal|0x0000d
block|,
literal|0x00009
block|,
literal|0x0060a
block|,
literal|0x53333
block|,
literal|0x0000d
block|,
literal|0x0000a
block|,
literal|0x0060a
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x0000b
block|,
literal|0x0060a
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x0000c
block|,
literal|0x0060a
block|,
literal|0x6b333
block|,
literal|0x0000d
block|,
literal|0x0000d
block|,
literal|0x0060a
block|,
literal|0x73333
block|,
literal|0x0000d
block|,
literal|0x0000e
block|,
literal|0x0050b
block|,
literal|0x66666
block|,
literal|0x0001a
block|,
literal|0xe0000
block|,
literal|0x4000f
block|,
literal|0xe31fc
block|,
literal|0x6000f
block|,
literal|0xff9f8
block|,
literal|0x2000f
block|,
literal|0x203f9
block|,
literal|0x3000f
block|,
literal|0xff500
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x8000f
block|,
literal|0x3f100
block|,
literal|0x9000f
block|,
literal|0x23100
block|,
literal|0x32000
block|,
literal|0x71000
block|,
literal|0xb0000
block|,
literal|0xfc000
block|,
literal|0x287af
block|,
literal|0x244b7
block|,
literal|0x204ab
block|,
literal|0x1c49f
block|,
literal|0x18493
block|,
literal|0x14297
block|,
literal|0x10295
block|,
literal|0x0c298
block|,
literal|0x0819c
block|,
literal|0x040a8
block|,
literal|0x0001c
block|,
literal|0x1944c
block|,
literal|0x59444
block|,
literal|0x9944c
block|,
literal|0xd9444
block|,
literal|0x0f424
block|,
literal|0x4f424
block|,
literal|0x8f424
block|,
literal|0xcf424
block|,
literal|0xe0330
block|,
literal|0xa0330
block|,
literal|0x60330
block|,
literal|0x20330
block|,
literal|0x10159
block|,
literal|0x0f401
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x80003
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x44457
block|,
literal|0x80000
block|,
literal|0x30159
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint8_t
name|rtl8192ce_rf2_regs
index|[]
init|=
block|{
literal|0x00
block|,
literal|0x01
block|,
literal|0x02
block|,
literal|0x03
block|,
literal|0x04
block|,
literal|0x09
block|,
literal|0x0a
block|,
literal|0x0b
block|,
literal|0x0c
block|,
literal|0x0d
block|,
literal|0x0e
block|,
literal|0x0f
block|,
literal|0x12
block|,
literal|0x12
block|,
literal|0x12
block|,
literal|0x12
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x13
block|,
literal|0x14
block|,
literal|0x14
block|,
literal|0x14
block|,
literal|0x14
block|,
literal|0x15
block|,
literal|0x15
block|,
literal|0x15
block|,
literal|0x15
block|,
literal|0x16
block|,
literal|0x16
block|,
literal|0x16
block|,
literal|0x16
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8192ce_rf2_vals
index|[]
init|=
block|{
literal|0x30159
block|,
literal|0x31284
block|,
literal|0x98000
block|,
literal|0x18c63
block|,
literal|0x210e7
block|,
literal|0x2044f
block|,
literal|0x1adb1
block|,
literal|0x54867
block|,
literal|0x8992e
block|,
literal|0x0e52c
block|,
literal|0x39ce7
block|,
literal|0x00451
block|,
literal|0x32000
block|,
literal|0x71000
block|,
literal|0xb0000
block|,
literal|0xfc000
block|,
literal|0x287af
block|,
literal|0x244b7
block|,
literal|0x204ab
block|,
literal|0x1c49f
block|,
literal|0x18493
block|,
literal|0x14297
block|,
literal|0x10295
block|,
literal|0x0c298
block|,
literal|0x0819c
block|,
literal|0x040a8
block|,
literal|0x0001c
block|,
literal|0x1944c
block|,
literal|0x59444
block|,
literal|0x9944c
block|,
literal|0xd9444
block|,
literal|0x0f424
block|,
literal|0x4f424
block|,
literal|0x8f424
block|,
literal|0xcf424
block|,
literal|0xe0330
block|,
literal|0xa0330
block|,
literal|0x60330
block|,
literal|0x20330
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_rf_prog
name|rtl8192ce_rf_prog
index|[]
init|=
block|{
block|{
name|nitems
argument_list|(
name|rtl8192ce_rf1_regs
argument_list|)
block|,
name|rtl8192ce_rf1_regs
block|,
name|rtl8192ce_rf1_vals
block|}
block|,
block|{
name|nitems
argument_list|(
name|rtl8192ce_rf2_regs
argument_list|)
block|,
name|rtl8192ce_rf2_regs
block|,
name|rtl8192ce_rf2_vals
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RTL8188CE-VAU.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8188ce_rf_vals
index|[]
init|=
block|{
literal|0x30159
block|,
literal|0x31284
block|,
literal|0x98000
block|,
literal|0x18c63
block|,
literal|0x210e7
block|,
literal|0x2044f
block|,
literal|0x1adb1
block|,
literal|0x54867
block|,
literal|0x8992e
block|,
literal|0x0e52c
block|,
literal|0x39ce7
block|,
literal|0x00451
block|,
literal|0x00000
block|,
literal|0x10255
block|,
literal|0x60a00
block|,
literal|0xfc378
block|,
literal|0xa1250
block|,
literal|0x4445f
block|,
literal|0x80001
block|,
literal|0x0b614
block|,
literal|0x6c000
block|,
literal|0x00000
block|,
literal|0x01558
block|,
literal|0x00060
block|,
literal|0x00483
block|,
literal|0x4f200
block|,
literal|0xec7d9
block|,
literal|0x577c0
block|,
literal|0x04783
block|,
literal|0x00001
block|,
literal|0x21334
block|,
literal|0x00000
block|,
literal|0x00054
block|,
literal|0x00001
block|,
literal|0x00808
block|,
literal|0x53333
block|,
literal|0x0000c
block|,
literal|0x00002
block|,
literal|0x00808
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x00003
block|,
literal|0x00808
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x00004
block|,
literal|0x00808
block|,
literal|0x6b333
block|,
literal|0x0000d
block|,
literal|0x00005
block|,
literal|0x00808
block|,
literal|0x73333
block|,
literal|0x0000d
block|,
literal|0x00006
block|,
literal|0x00709
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x00007
block|,
literal|0x00709
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x00008
block|,
literal|0x0060a
block|,
literal|0x4b333
block|,
literal|0x0000d
block|,
literal|0x00009
block|,
literal|0x0060a
block|,
literal|0x53333
block|,
literal|0x0000d
block|,
literal|0x0000a
block|,
literal|0x0060a
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x0000b
block|,
literal|0x0060a
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x0000c
block|,
literal|0x0060a
block|,
literal|0x6b333
block|,
literal|0x0000d
block|,
literal|0x0000d
block|,
literal|0x0060a
block|,
literal|0x73333
block|,
literal|0x0000d
block|,
literal|0x0000e
block|,
literal|0x0050b
block|,
literal|0x66666
block|,
literal|0x0001a
block|,
literal|0xe0000
block|,
literal|0x4000f
block|,
literal|0xe31fc
block|,
literal|0x6000f
block|,
literal|0xff9f8
block|,
literal|0x2000f
block|,
literal|0x203f9
block|,
literal|0x3000f
block|,
literal|0xff500
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x8000f
block|,
literal|0x3f100
block|,
literal|0x9000f
block|,
literal|0x23100
block|,
literal|0x32000
block|,
literal|0x71000
block|,
literal|0xb0000
block|,
literal|0xfc000
block|,
literal|0x287b3
block|,
literal|0x244b7
block|,
literal|0x204ab
block|,
literal|0x1c49f
block|,
literal|0x18493
block|,
literal|0x1429b
block|,
literal|0x10299
block|,
literal|0x0c29c
block|,
literal|0x081a0
block|,
literal|0x040ac
block|,
literal|0x00020
block|,
literal|0x1944c
block|,
literal|0x59444
block|,
literal|0x9944c
block|,
literal|0xd9444
block|,
literal|0x0f424
block|,
literal|0x4f424
block|,
literal|0x8f424
block|,
literal|0xcf424
block|,
literal|0xe0330
block|,
literal|0xa0330
block|,
literal|0x60330
block|,
literal|0x20330
block|,
literal|0x10159
block|,
literal|0x0f401
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x80003
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x44457
block|,
literal|0x80000
block|,
literal|0x30159
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_rf_prog
name|rtl8188ce_rf_prog
index|[]
init|=
block|{
block|{
name|nitems
argument_list|(
name|rtl8192ce_rf1_regs
argument_list|)
block|,
name|rtl8192ce_rf1_regs
block|,
name|rtl8188ce_rf_vals
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RTL8188CU.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8188cu_rf_vals
index|[]
init|=
block|{
literal|0x30159
block|,
literal|0x31284
block|,
literal|0x98000
block|,
literal|0x18c63
block|,
literal|0x210e7
block|,
literal|0x2044f
block|,
literal|0x1adb1
block|,
literal|0x54867
block|,
literal|0x8992e
block|,
literal|0x0e52c
block|,
literal|0x39ce7
block|,
literal|0x00451
block|,
literal|0x00000
block|,
literal|0x10255
block|,
literal|0x60a00
block|,
literal|0xfc378
block|,
literal|0xa1250
block|,
literal|0x4445f
block|,
literal|0x80001
block|,
literal|0x0b614
block|,
literal|0x6c000
block|,
literal|0x00000
block|,
literal|0x01558
block|,
literal|0x00060
block|,
literal|0x00483
block|,
literal|0x4f000
block|,
literal|0xec7d9
block|,
literal|0x577c0
block|,
literal|0x04783
block|,
literal|0x00001
block|,
literal|0x21334
block|,
literal|0x00000
block|,
literal|0x00054
block|,
literal|0x00001
block|,
literal|0x00808
block|,
literal|0x53333
block|,
literal|0x0000c
block|,
literal|0x00002
block|,
literal|0x00808
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x00003
block|,
literal|0x00808
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x00004
block|,
literal|0x00808
block|,
literal|0x6b333
block|,
literal|0x0000d
block|,
literal|0x00005
block|,
literal|0x00808
block|,
literal|0x73333
block|,
literal|0x0000d
block|,
literal|0x00006
block|,
literal|0x00709
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x00007
block|,
literal|0x00709
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x00008
block|,
literal|0x0060a
block|,
literal|0x4b333
block|,
literal|0x0000d
block|,
literal|0x00009
block|,
literal|0x0060a
block|,
literal|0x53333
block|,
literal|0x0000d
block|,
literal|0x0000a
block|,
literal|0x0060a
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x0000b
block|,
literal|0x0060a
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x0000c
block|,
literal|0x0060a
block|,
literal|0x6b333
block|,
literal|0x0000d
block|,
literal|0x0000d
block|,
literal|0x0060a
block|,
literal|0x73333
block|,
literal|0x0000d
block|,
literal|0x0000e
block|,
literal|0x0050b
block|,
literal|0x66666
block|,
literal|0x0001a
block|,
literal|0xe0000
block|,
literal|0x4000f
block|,
literal|0xe31fc
block|,
literal|0x6000f
block|,
literal|0xff9f8
block|,
literal|0x2000f
block|,
literal|0x203f9
block|,
literal|0x3000f
block|,
literal|0xff500
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x8000f
block|,
literal|0x3f100
block|,
literal|0x9000f
block|,
literal|0x23100
block|,
literal|0x32000
block|,
literal|0x71000
block|,
literal|0xb0000
block|,
literal|0xfc000
block|,
literal|0x287b3
block|,
literal|0x244b7
block|,
literal|0x204ab
block|,
literal|0x1c49f
block|,
literal|0x18493
block|,
literal|0x1429b
block|,
literal|0x10299
block|,
literal|0x0c29c
block|,
literal|0x081a0
block|,
literal|0x040ac
block|,
literal|0x00020
block|,
literal|0x1944c
block|,
literal|0x59444
block|,
literal|0x9944c
block|,
literal|0xd9444
block|,
literal|0x0f405
block|,
literal|0x4f405
block|,
literal|0x8f405
block|,
literal|0xcf405
block|,
literal|0xe0330
block|,
literal|0xa0330
block|,
literal|0x60330
block|,
literal|0x20330
block|,
literal|0x10159
block|,
literal|0x0f401
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x80003
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x44457
block|,
literal|0x80000
block|,
literal|0x30159
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_rf_prog
name|rtl8188cu_rf_prog
index|[]
init|=
block|{
block|{
name|nitems
argument_list|(
name|rtl8192ce_rf1_regs
argument_list|)
block|,
name|rtl8192ce_rf1_regs
block|,
name|rtl8188cu_rf_vals
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RTL8188EU.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint8_t
name|rtl8188eu_rf_regs
index|[]
init|=
block|{
literal|0x00
block|,
literal|0x08
block|,
literal|0x18
block|,
literal|0x19
block|,
literal|0x1e
block|,
literal|0x1f
block|,
literal|0x2f
block|,
literal|0x3f
block|,
literal|0x42
block|,
literal|0x57
block|,
literal|0x58
block|,
literal|0x67
block|,
literal|0x83
block|,
literal|0xb0
block|,
literal|0xb1
block|,
literal|0xb2
block|,
literal|0xb4
block|,
literal|0xb6
block|,
literal|0xb7
block|,
literal|0xb8
block|,
literal|0xb9
block|,
literal|0xba
block|,
literal|0xbb
block|,
literal|0xbf
block|,
literal|0xc2
block|,
literal|0xc3
block|,
literal|0xc4
block|,
literal|0xc5
block|,
literal|0xc6
block|,
literal|0xc7
block|,
literal|0xc8
block|,
literal|0xc9
block|,
literal|0xca
block|,
literal|0xdf
block|,
literal|0xef
block|,
literal|0x51
block|,
literal|0x52
block|,
literal|0x53
block|,
literal|0x56
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x35
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0x36
block|,
literal|0xb6
block|,
literal|0x18
block|,
literal|0x5a
block|,
literal|0x19
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x34
block|,
literal|0x00
block|,
literal|0x84
block|,
literal|0x86
block|,
literal|0x87
block|,
literal|0x8e
block|,
literal|0x8f
block|,
literal|0xef
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0x3b
block|,
literal|0xef
block|,
literal|0x00
block|,
literal|0x18
block|,
literal|0xfe
block|,
literal|0xfe
block|,
literal|0x1f
block|,
literal|0xfe
block|,
literal|0xfe
block|,
literal|0x1e
block|,
literal|0x1f
block|,
literal|0x00
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8188eu_rf_vals
index|[]
init|=
block|{
literal|0x30000
block|,
literal|0x84000
block|,
literal|0x00407
block|,
literal|0x00012
block|,
literal|0x80009
block|,
literal|0x00880
block|,
literal|0x1a060
block|,
literal|0x00000
block|,
literal|0x060c0
block|,
literal|0xd0000
block|,
literal|0xbe180
block|,
literal|0x01552
block|,
literal|0x00000
block|,
literal|0xff8fc
block|,
literal|0x54400
block|,
literal|0xccc19
block|,
literal|0x43003
block|,
literal|0x4953e
block|,
literal|0x1c718
block|,
literal|0x060ff
block|,
literal|0x80001
block|,
literal|0x40000
block|,
literal|0x00400
block|,
literal|0xc0000
block|,
literal|0x02400
block|,
literal|0x00009
block|,
literal|0x40c91
block|,
literal|0x99999
block|,
literal|0x000a3
block|,
literal|0x88820
block|,
literal|0x76c06
block|,
literal|0x00000
block|,
literal|0x80000
block|,
literal|0x00180
block|,
literal|0x001a0
block|,
literal|0x6b27d
block|,
literal|0x7e49d
block|,
literal|0x00073
block|,
literal|0x51ff3
block|,
literal|0x00086
block|,
literal|0x00186
block|,
literal|0x00286
block|,
literal|0x01c25
block|,
literal|0x09c25
block|,
literal|0x11c25
block|,
literal|0x19c25
block|,
literal|0x48538
block|,
literal|0x00c07
block|,
literal|0x4bd00
block|,
literal|0x739d0
block|,
literal|0x0adf3
block|,
literal|0x09df0
block|,
literal|0x08ded
block|,
literal|0x07dea
block|,
literal|0x06de7
block|,
literal|0x054ee
block|,
literal|0x044eb
block|,
literal|0x034e8
block|,
literal|0x0246b
block|,
literal|0x01468
block|,
literal|0x0006d
block|,
literal|0x30159
block|,
literal|0x68200
block|,
literal|0x000ce
block|,
literal|0x48a00
block|,
literal|0x65540
block|,
literal|0x88000
block|,
literal|0x020a0
block|,
literal|0xf02b0
block|,
literal|0xef7b0
block|,
literal|0xd4fb0
block|,
literal|0xcf060
block|,
literal|0xb0090
block|,
literal|0xa0080
block|,
literal|0x90080
block|,
literal|0x8f780
block|,
literal|0x722b0
block|,
literal|0x6f7b0
block|,
literal|0x54fb0
block|,
literal|0x4f060
block|,
literal|0x30090
block|,
literal|0x20080
block|,
literal|0x10080
block|,
literal|0x0f780
block|,
literal|0x000a0
block|,
literal|0x10159
block|,
literal|0x0f407
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x80003
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x00001
block|,
literal|0x80000
block|,
literal|0x33e60
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_rf_prog
name|rtl8188eu_rf_prog
index|[]
init|=
block|{
block|{
name|nitems
argument_list|(
name|rtl8188eu_rf_regs
argument_list|)
block|,
name|rtl8188eu_rf_regs
block|,
name|rtl8188eu_rf_vals
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * RTL8188RU.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|uint32_t
name|rtl8188ru_rf_vals
index|[]
init|=
block|{
literal|0x30159
block|,
literal|0x31284
block|,
literal|0x98000
block|,
literal|0x18c63
block|,
literal|0x210e7
block|,
literal|0x2044f
block|,
literal|0x1adb0
block|,
literal|0x54867
block|,
literal|0x8992e
block|,
literal|0x0e529
block|,
literal|0x39ce7
block|,
literal|0x00451
block|,
literal|0x00000
block|,
literal|0x00255
block|,
literal|0x60a00
block|,
literal|0xfc378
block|,
literal|0xa1250
block|,
literal|0x4445f
block|,
literal|0x80001
block|,
literal|0x0b614
block|,
literal|0x6c000
block|,
literal|0x0083c
block|,
literal|0x01558
block|,
literal|0x00060
block|,
literal|0x00483
block|,
literal|0x4f000
block|,
literal|0xec7d9
block|,
literal|0x977c0
block|,
literal|0x04783
block|,
literal|0x00001
block|,
literal|0x21334
block|,
literal|0x00000
block|,
literal|0x00054
block|,
literal|0x00001
block|,
literal|0x00808
block|,
literal|0x53333
block|,
literal|0x0000c
block|,
literal|0x00002
block|,
literal|0x00808
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x00003
block|,
literal|0x00808
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x00004
block|,
literal|0x00808
block|,
literal|0x6b333
block|,
literal|0x0000d
block|,
literal|0x00005
block|,
literal|0x00808
block|,
literal|0x73333
block|,
literal|0x0000d
block|,
literal|0x00006
block|,
literal|0x00709
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x00007
block|,
literal|0x00709
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x00008
block|,
literal|0x0060a
block|,
literal|0x4b333
block|,
literal|0x0000d
block|,
literal|0x00009
block|,
literal|0x0060a
block|,
literal|0x53333
block|,
literal|0x0000d
block|,
literal|0x0000a
block|,
literal|0x0060a
block|,
literal|0x5b333
block|,
literal|0x0000d
block|,
literal|0x0000b
block|,
literal|0x0060a
block|,
literal|0x63333
block|,
literal|0x0000d
block|,
literal|0x0000c
block|,
literal|0x0060a
block|,
literal|0x6b333
block|,
literal|0x0000d
block|,
literal|0x0000d
block|,
literal|0x0060a
block|,
literal|0x73333
block|,
literal|0x0000d
block|,
literal|0x0000e
block|,
literal|0x0050b
block|,
literal|0x66666
block|,
literal|0x0001a
block|,
literal|0xe0000
block|,
literal|0x4000f
block|,
literal|0xe31fc
block|,
literal|0x6000f
block|,
literal|0xff9f8
block|,
literal|0x2000f
block|,
literal|0x203f9
block|,
literal|0x3000f
block|,
literal|0xff500
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x8000f
block|,
literal|0x3f100
block|,
literal|0x9000f
block|,
literal|0x23100
block|,
literal|0xd8000
block|,
literal|0x90000
block|,
literal|0x51000
block|,
literal|0x12000
block|,
literal|0x28fb4
block|,
literal|0x24fa8
block|,
literal|0x207a4
block|,
literal|0x1c798
block|,
literal|0x183a4
block|,
literal|0x14398
block|,
literal|0x101a4
block|,
literal|0x0c198
block|,
literal|0x080a4
block|,
literal|0x04098
block|,
literal|0x00014
block|,
literal|0x1944c
block|,
literal|0x59444
block|,
literal|0x9944c
block|,
literal|0xd9444
block|,
literal|0x0f405
block|,
literal|0x4f405
block|,
literal|0x8f405
block|,
literal|0xcf405
block|,
literal|0xe0330
block|,
literal|0xa0330
block|,
literal|0x60330
block|,
literal|0x20330
block|,
literal|0x10159
block|,
literal|0x0f401
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x80003
block|,
literal|0x00000
block|,
literal|0x00000
block|,
literal|0x44457
block|,
literal|0x80000
block|,
literal|0x30159
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_rf_prog
name|rtl8188ru_rf_prog
index|[]
init|=
block|{
block|{
name|nitems
argument_list|(
name|rtl8192ce_rf1_regs
argument_list|)
block|,
name|rtl8192ce_rf1_regs
block|,
name|rtl8188ru_rf_vals
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_struct
struct|struct
name|urtwn_txpwr
block|{
name|uint8_t
name|pwr
index|[
literal|3
index|]
index|[
literal|28
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|urtwn_r88e_txpwr
block|{
name|uint8_t
name|pwr
index|[
literal|6
index|]
index|[
literal|28
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Per RF chain/group/rate Tx gain values.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_txpwr
name|rtl8192cu_txagc
index|[]
init|=
block|{
block|{
block|{
comment|/* Chain 0. */
block|{
comment|/* Group 0. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x0c
block|,
literal|0x0c
block|,
literal|0x0c
block|,
literal|0x0a
block|,
literal|0x08
block|,
literal|0x06
block|,
literal|0x04
block|,
literal|0x02
block|,
comment|/* OFDM6~54. */
literal|0x0e
block|,
literal|0x0d
block|,
literal|0x0c
block|,
literal|0x0a
block|,
literal|0x08
block|,
literal|0x06
block|,
literal|0x04
block|,
literal|0x02
block|,
comment|/* MCS0~7. */
literal|0x0e
block|,
literal|0x0d
block|,
literal|0x0c
block|,
literal|0x0a
block|,
literal|0x08
block|,
literal|0x06
block|,
literal|0x04
block|,
literal|0x02
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 1. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 2. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x04
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x02
block|,
literal|0x02
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|}
block|}
block|,
block|{
block|{
comment|/* Chain 1. */
block|{
comment|/* Group 0. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 1. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 2. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x04
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x02
block|,
literal|0x02
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|}
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_txpwr
name|rtl8188ru_txagc
index|[]
init|=
block|{
block|{
block|{
comment|/* Chain 0. */
block|{
comment|/* Group 0. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x08
block|,
literal|0x08
block|,
literal|0x08
block|,
literal|0x06
block|,
literal|0x06
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x08
block|,
literal|0x06
block|,
literal|0x06
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x02
block|,
literal|0x02
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x08
block|,
literal|0x06
block|,
literal|0x06
block|,
literal|0x04
block|,
literal|0x04
block|,
literal|0x02
block|,
literal|0x02
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 1. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 2. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|}
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|urtwn_r88e_txpwr
name|rtl8188eu_txagc
index|[]
init|=
block|{
block|{
block|{
comment|/* Chain 0. */
block|{
comment|/* Group 0. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 1. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 2. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 3. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 4. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|,
block|{
comment|/* Group 5. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* CCK1~11. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* OFDM6~54. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
comment|/* MCS0~7. */
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
block|,
literal|0x00
comment|/* MCS8~15. */
block|}
block|}
block|}
block|}
decl_stmt|;
end_decl_stmt

end_unit

