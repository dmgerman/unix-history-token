begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/*-  * Copyright (c) 2008 Hans Petter Selasky. All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_USB2_ETHERNET_H_
end_ifndef

begin_define
define|#
directive|define
name|_USB2_ETHERNET_H_
end_define

begin_include
include|#
directive|include
file|"opt_inet.h"
end_include

begin_include
include|#
directive|include
file|<sys/param.h>
end_include

begin_include
include|#
directive|include
file|<sys/systm.h>
end_include

begin_include
include|#
directive|include
file|<sys/mbuf.h>
end_include

begin_include
include|#
directive|include
file|<sys/socket.h>
end_include

begin_include
include|#
directive|include
file|<sys/sockio.h>
end_include

begin_include
include|#
directive|include
file|<sys/limits.h>
end_include

begin_include
include|#
directive|include
file|<net/if.h>
end_include

begin_include
include|#
directive|include
file|<net/if_arp.h>
end_include

begin_include
include|#
directive|include
file|<net/if_dl.h>
end_include

begin_include
include|#
directive|include
file|<net/if_media.h>
end_include

begin_include
include|#
directive|include
file|<net/if_types.h>
end_include

begin_include
include|#
directive|include
file|<net/bpf.h>
end_include

begin_include
include|#
directive|include
file|<net/ethernet.h>
end_include

begin_include
include|#
directive|include
file|"miibus_if.h"
end_include

begin_include
include|#
directive|include
file|<dev/mii/mii.h>
end_include

begin_include
include|#
directive|include
file|<dev/mii/miivar.h>
end_include

begin_struct_decl
struct_decl|struct
name|usb_ether
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|usb_device_request
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|void
function_decl|(
name|uether_fn_t
function_decl|)
parameter_list|(
name|struct
name|usb_ether
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|usb_ether_methods
block|{
name|uether_fn_t
modifier|*
name|ue_attach_post
decl_stmt|;
name|uether_fn_t
modifier|*
name|ue_start
decl_stmt|;
name|uether_fn_t
modifier|*
name|ue_init
decl_stmt|;
name|uether_fn_t
modifier|*
name|ue_stop
decl_stmt|;
name|uether_fn_t
modifier|*
name|ue_setmulti
decl_stmt|;
name|uether_fn_t
modifier|*
name|ue_setpromisc
decl_stmt|;
name|uether_fn_t
modifier|*
name|ue_tick
decl_stmt|;
name|int
function_decl|(
modifier|*
name|ue_mii_upd
function_decl|)
parameter_list|(
name|struct
name|ifnet
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|ue_mii_sts
function_decl|)
parameter_list|(
name|struct
name|ifnet
modifier|*
parameter_list|,
name|struct
name|ifmediareq
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|ue_ioctl
function_decl|)
parameter_list|(
name|struct
name|ifnet
modifier|*
parameter_list|,
name|u_long
parameter_list|,
name|caddr_t
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|usb_ether_cfg_task
block|{
name|struct
name|usb_proc_msg
name|hdr
decl_stmt|;
name|struct
name|usb_ether
modifier|*
name|ue
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|usb_ether
block|{
comment|/* NOTE: the "ue_ifp" pointer must be first --hps */
name|struct
name|ifnet
modifier|*
name|ue_ifp
decl_stmt|;
name|struct
name|mtx
modifier|*
name|ue_mtx
decl_stmt|;
specifier|const
name|struct
name|usb_ether_methods
modifier|*
name|ue_methods
decl_stmt|;
name|struct
name|sysctl_oid
modifier|*
name|ue_sysctl_oid
decl_stmt|;
name|void
modifier|*
name|ue_sc
decl_stmt|;
name|struct
name|usb_device
modifier|*
name|ue_udev
decl_stmt|;
comment|/* used by usb2_ether_do_request() */
name|device_t
name|ue_dev
decl_stmt|;
name|device_t
name|ue_miibus
decl_stmt|;
name|struct
name|usb_process
name|ue_tq
decl_stmt|;
name|struct
name|sysctl_ctx_list
name|ue_sysctl_ctx
decl_stmt|;
name|struct
name|ifqueue
name|ue_rxq
decl_stmt|;
name|struct
name|usb_callout
name|ue_watchdog
decl_stmt|;
name|struct
name|usb_ether_cfg_task
name|ue_sync_task
index|[
literal|2
index|]
decl_stmt|;
name|struct
name|usb_ether_cfg_task
name|ue_media_task
index|[
literal|2
index|]
decl_stmt|;
name|struct
name|usb_ether_cfg_task
name|ue_multi_task
index|[
literal|2
index|]
decl_stmt|;
name|struct
name|usb_ether_cfg_task
name|ue_promisc_task
index|[
literal|2
index|]
decl_stmt|;
name|struct
name|usb_ether_cfg_task
name|ue_tick_task
index|[
literal|2
index|]
decl_stmt|;
name|int
name|ue_unit
decl_stmt|;
comment|/* ethernet address from eeprom */
name|uint8_t
name|ue_eaddr
index|[
name|ETHER_ADDR_LEN
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|usb2_ether_do_request
parameter_list|(
name|ue
parameter_list|,
name|req
parameter_list|,
name|data
parameter_list|,
name|timo
parameter_list|)
define|\
value|usb2_do_request_proc((ue)->ue_udev,&(ue)->ue_tq,req,data,0,NULL,timo)
end_define

begin_function_decl
name|uint8_t
name|usb2_ether_pause
parameter_list|(
name|struct
name|usb_ether
modifier|*
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ifnet
modifier|*
name|usb2_ether_getifp
parameter_list|(
name|struct
name|usb_ether
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|mii_data
modifier|*
name|usb2_ether_getmii
parameter_list|(
name|struct
name|usb_ether
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|usb2_ether_getsc
parameter_list|(
name|struct
name|usb_ether
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|usb2_ether_ifattach
parameter_list|(
name|struct
name|usb_ether
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_ether_ifdetach
parameter_list|(
name|struct
name|usb_ether
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|usb2_ether_ioctl
parameter_list|(
name|struct
name|ifnet
modifier|*
parameter_list|,
name|u_long
parameter_list|,
name|caddr_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|mbuf
modifier|*
name|usb2_ether_newbuf
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|usb2_ether_rxmbuf
parameter_list|(
name|struct
name|usb_ether
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|usb2_ether_rxbuf
parameter_list|(
name|struct
name|usb_ether
modifier|*
parameter_list|,
name|struct
name|usb_page_cache
modifier|*
parameter_list|,
name|unsigned
name|int
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usb2_ether_rxflush
parameter_list|(
name|struct
name|usb_ether
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint8_t
name|usb2_ether_is_gone
parameter_list|(
name|struct
name|usb_ether
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _USB2_ETHERNET_H_ */
end_comment

end_unit

