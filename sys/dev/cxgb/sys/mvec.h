begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/**************************************************************************  *  * Copyright (c) 2007,2009 Kip Macy kmacy@freebsd.org  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *  * 1. Redistributions of source code must retain the above copyright notice,  *    this list of conditions and the following disclaimer.  *  * 2. The name of Kip Macy nor the names of other  *    contributors may be used to endorse or promote products derived from  *    this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  *  ***************************************************************************/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MVEC_H_
end_ifndef

begin_define
define|#
directive|define
name|_MVEC_H_
end_define

begin_include
include|#
directive|include
file|<machine/bus.h>
end_include

begin_define
define|#
directive|define
name|M_DDP
value|0x200000
end_define

begin_comment
comment|/* direct data placement mbuf */
end_comment

begin_define
define|#
directive|define
name|EXT_PHYS
value|10
end_define

begin_comment
comment|/* physical/bus address  */
end_comment

begin_define
define|#
directive|define
name|m_cur_offset
value|m_ext.ext_size
end_define

begin_comment
comment|/* override to provide ddp offset */
end_comment

begin_define
define|#
directive|define
name|m_seq
value|m_pkthdr.csum_data
end_define

begin_comment
comment|/* stored sequence */
end_comment

begin_define
define|#
directive|define
name|m_ddp_gl
value|m_ext.ext_buf
end_define

begin_comment
comment|/* ddp list	*/
end_comment

begin_define
define|#
directive|define
name|m_ddp_flags
value|m_pkthdr.csum_flags
end_define

begin_comment
comment|/* ddp flags	*/
end_comment

begin_define
define|#
directive|define
name|m_ulp_mode
value|m_pkthdr.tso_segsz
end_define

begin_comment
comment|/* upper level protocol	*/
end_comment

begin_function
specifier|static
name|__inline
name|void
name|busdma_map_mbuf_fast
parameter_list|(
name|bus_dma_tag_t
name|tag
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m
parameter_list|,
name|bus_dma_segment_t
modifier|*
name|seg
parameter_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|__i386__
argument_list|)
operator|||
name|defined
argument_list|(
name|__amd64__
argument_list|)
name|seg
operator|->
name|ds_addr
operator|=
name|pmap_kextract
argument_list|(
name|mtod
argument_list|(
name|m
argument_list|,
name|vm_offset_t
argument_list|)
argument_list|)
expr_stmt|;
name|seg
operator|->
name|ds_len
operator|=
name|m
operator|->
name|m_len
expr_stmt|;
else|#
directive|else
name|int
name|nsegstmp
decl_stmt|;
name|bus_dmamap_load_mbuf_sg
argument_list|(
name|tag
argument_list|,
name|map
argument_list|,
name|m
argument_list|,
name|seg
argument_list|,
operator|&
name|nsegstmp
argument_list|,
literal|0
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function

begin_function_decl
name|int
name|busdma_map_sg_collapse
parameter_list|(
name|bus_dma_tag_t
name|tag
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|struct
name|mbuf
modifier|*
modifier|*
name|m
parameter_list|,
name|bus_dma_segment_t
modifier|*
name|segs
parameter_list|,
name|int
modifier|*
name|nsegs
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|busdma_map_sg_vec
parameter_list|(
name|bus_dma_tag_t
name|tag
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|struct
name|mbuf
modifier|*
name|m
parameter_list|,
name|bus_dma_segment_t
modifier|*
name|segs
parameter_list|,
name|int
modifier|*
name|nsegs
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
name|__inline
name|int
name|busdma_map_sgl
parameter_list|(
name|bus_dma_segment_t
modifier|*
name|vsegs
parameter_list|,
name|bus_dma_segment_t
modifier|*
name|segs
parameter_list|,
name|int
name|count
parameter_list|)
block|{
while|while
condition|(
name|count
operator|--
condition|)
block|{
name|segs
operator|->
name|ds_addr
operator|=
name|pmap_kextract
argument_list|(
operator|(
name|vm_offset_t
operator|)
name|vsegs
operator|->
name|ds_addr
argument_list|)
expr_stmt|;
name|segs
operator|->
name|ds_len
operator|=
name|vsegs
operator|->
name|ds_len
expr_stmt|;
name|segs
operator|++
expr_stmt|;
name|vsegs
operator|++
expr_stmt|;
block|}
return|return
operator|(
literal|0
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|m_freem_list
parameter_list|(
name|struct
name|mbuf
modifier|*
name|m
parameter_list|)
block|{
name|struct
name|mbuf
modifier|*
name|n
decl_stmt|;
while|while
condition|(
name|m
operator|!=
name|NULL
condition|)
block|{
name|n
operator|=
name|m
operator|->
name|m_nextpkt
expr_stmt|;
if|if
condition|(
name|n
operator|!=
name|NULL
condition|)
name|prefetch
argument_list|(
name|n
argument_list|)
expr_stmt|;
name|m_freem
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|m
operator|=
name|n
expr_stmt|;
block|}
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _MVEC_H_ */
end_comment

end_unit

