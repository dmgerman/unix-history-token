begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2000 Michael Smith  * Copyright (c) 2000 BSDi  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	$FreeBSD$  */
end_comment

begin_comment
comment|/*  * Lookup table for code-to-text translations.  */
end_comment

begin_struct
struct|struct
name|twe_code_lookup
block|{
name|char
modifier|*
name|string
decl_stmt|;
name|u_int32_t
name|code
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
specifier|extern
name|char
modifier|*
name|twe_describe_code
parameter_list|(
name|struct
name|twe_code_lookup
modifier|*
name|table
parameter_list|,
name|u_int32_t
name|code
parameter_list|)
function_decl|;
end_function_decl

begin_ifndef
ifndef|#
directive|ifndef
name|TWE_DEFINE_TABLES
end_ifndef

begin_decl_stmt
specifier|extern
name|struct
name|twe_code_lookup
name|twe_table_status
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|twe_code_lookup
name|twe_table_unitstate
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|twe_code_lookup
name|twe_table_unittype
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|twe_code_lookup
name|twe_table_aen
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|twe_code_lookup
name|twe_table_opcode
index|[]
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* TWE_DEFINE_TABLES */
end_comment

begin_comment
comment|/********************************************************************************  * Look up a text description of a numeric code and return a pointer to same.  */
end_comment

begin_function
name|char
modifier|*
name|twe_describe_code
parameter_list|(
name|struct
name|twe_code_lookup
modifier|*
name|table
parameter_list|,
name|u_int32_t
name|code
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|table
index|[
name|i
index|]
operator|.
name|string
operator|!=
name|NULL
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|table
index|[
name|i
index|]
operator|.
name|code
operator|==
name|code
condition|)
return|return
operator|(
name|table
index|[
name|i
index|]
operator|.
name|string
operator|)
return|;
return|return
operator|(
name|table
index|[
name|i
operator|+
literal|1
index|]
operator|.
name|string
operator|)
return|;
block|}
end_function

begin_decl_stmt
name|struct
name|twe_code_lookup
name|twe_table_status
index|[]
init|=
block|{
comment|/* success */
block|{
literal|"successful completion"
block|,
literal|0x00
block|}
block|,
comment|/* info */
block|{
literal|"command in progress"
block|,
literal|0x42
block|}
block|,
block|{
literal|"retrying interface CRC error from UDMA command"
block|,
literal|0x6c
block|}
block|,
comment|/* warning */
block|{
literal|"redundant/inconsequential request ignored"
block|,
literal|0x81
block|}
block|,
block|{
literal|"failed to write zeroes to LBA 0"
block|,
literal|0x8e
block|}
block|,
block|{
literal|"failed to profile TwinStor zones"
block|,
literal|0x8f
block|}
block|,
comment|/* fatal */
block|{
literal|"aborted due to system command or reconfiguration"
block|,
literal|0xc1
block|}
block|,
block|{
literal|"aborted"
block|,
literal|0xc4
block|}
block|,
block|{
literal|"access error"
block|,
literal|0xc5
block|}
block|,
block|{
literal|"access violation"
block|,
literal|0xc6
block|}
block|,
block|{
literal|"device failure"
block|,
literal|0xc7
block|}
block|,
comment|/* high byte may be port number */
block|{
literal|"controller error"
block|,
literal|0xc8
block|}
block|,
block|{
literal|"timed out"
block|,
literal|0xc9
block|}
block|,
block|{
literal|"invalid unit number"
block|,
literal|0xcb
block|}
block|,
block|{
literal|"unit not available"
block|,
literal|0xcf
block|}
block|,
block|{
literal|"undefined opcode"
block|,
literal|0xd2
block|}
block|,
block|{
literal|"request incompatible with unit"
block|,
literal|0xdb
block|}
block|,
block|{
literal|"invalid request"
block|,
literal|0xdc
block|}
block|,
block|{
literal|"firmware error, reset requested"
block|,
literal|0xff
block|}
block|,
block|{
name|NULL
block|,
literal|0
block|}
block|,
block|{
literal|"unknown status"
block|,
literal|0
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|twe_code_lookup
name|twe_table_unitstate
index|[]
init|=
block|{
block|{
literal|"Normal"
block|,
name|TWE_PARAM_UNITSTATUS_Normal
block|}
block|,
block|{
literal|"Initialising"
block|,
name|TWE_PARAM_UNITSTATUS_Initialising
block|}
block|,
block|{
literal|"Degraded"
block|,
name|TWE_PARAM_UNITSTATUS_Degraded
block|}
block|,
block|{
literal|"Rebuilding"
block|,
name|TWE_PARAM_UNITSTATUS_Rebuilding
block|}
block|,
block|{
literal|"Verifying"
block|,
name|TWE_PARAM_UNITSTATUS_Verifying
block|}
block|,
block|{
literal|"Corrupt"
block|,
name|TWE_PARAM_UNITSTATUS_Corrupt
block|}
block|,
block|{
literal|"Missing"
block|,
name|TWE_PARAM_UNITSTATUS_Missing
block|}
block|,
block|{
name|NULL
block|,
literal|0
block|}
block|,
block|{
literal|"unknown state"
block|,
literal|0
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|twe_code_lookup
name|twe_table_unittype
index|[]
init|=
block|{
block|{
literal|"RAID0"
block|,
name|TWE_UD_CONFIG_RAID0
block|}
block|,
block|{
literal|"RAID1"
block|,
name|TWE_UD_CONFIG_RAID1
block|}
block|,
block|{
literal|"TwinStor"
block|,
name|TWE_UD_CONFIG_TwinStor
block|}
block|,
block|{
literal|"RAID5"
block|,
name|TWE_UD_CONFIG_RAID5
block|}
block|,
block|{
literal|"RAID10"
block|,
name|TWE_UD_CONFIG_RAID10
block|}
block|,
block|{
literal|"CBOD"
block|,
name|TWE_UD_CONFIG_CBOD
block|}
block|,
block|{
literal|"SPARE"
block|,
name|TWE_UD_CONFIG_SPARE
block|}
block|,
block|{
literal|"SUBUNIT"
block|,
name|TWE_UD_CONFIG_SUBUNIT
block|}
block|,
block|{
literal|"JBOD"
block|,
name|TWE_UD_CONFIG_JBOD
block|}
block|,
block|{
name|NULL
block|,
literal|0
block|}
block|,
block|{
literal|"unknown type"
block|,
literal|0
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|twe_code_lookup
name|twe_table_aen
index|[]
init|=
block|{
block|{
literal|"q queue empty"
block|,
literal|0x00
block|}
block|,
block|{
literal|"q soft reset"
block|,
literal|0x01
block|}
block|,
block|{
literal|"c degraded mirror"
block|,
literal|0x02
block|}
block|,
block|{
literal|"p controller error"
block|,
literal|0x03
block|}
block|,
block|{
literal|"c rebuild fail"
block|,
literal|0x04
block|}
block|,
block|{
literal|"c rebuild done"
block|,
literal|0x05
block|}
block|,
block|{
literal|"c incomplete unit"
block|,
literal|0x06
block|}
block|,
block|{
literal|"c initialisation done"
block|,
literal|0x07
block|}
block|,
block|{
literal|"c unclean shutdown detected"
block|,
literal|0x08
block|}
block|,
block|{
literal|"c drive timeout"
block|,
literal|0x09
block|}
block|,
block|{
literal|"c drive error"
block|,
literal|0x0a
block|}
block|,
block|{
literal|"c rebuild started"
block|,
literal|0x0b
block|}
block|,
block|{
literal|"p aen queue full"
block|,
literal|0xff
block|}
block|,
block|{
name|NULL
block|,
literal|0
block|}
block|,
block|{
literal|"x unknown AEN"
block|,
literal|0
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|twe_code_lookup
name|twe_table_opcode
index|[]
init|=
block|{
block|{
literal|"NOP"
block|,
literal|0x00
block|}
block|,
block|{
literal|"INIT_CONNECTION"
block|,
literal|0x01
block|}
block|,
block|{
literal|"READ"
block|,
literal|0x02
block|}
block|,
block|{
literal|"WRITE"
block|,
literal|0x03
block|}
block|,
block|{
literal|"READVERIFY"
block|,
literal|0x04
block|}
block|,
block|{
literal|"VERIFY"
block|,
literal|0x05
block|}
block|,
block|{
literal|"ZEROUNIT"
block|,
literal|0x08
block|}
block|,
block|{
literal|"REPLACEUNIT"
block|,
literal|0x09
block|}
block|,
block|{
literal|"HOTSWAP"
block|,
literal|0x0a
block|}
block|,
block|{
literal|"SETATAFEATURE"
block|,
literal|0x0c
block|}
block|,
block|{
literal|"FLUSH"
block|,
literal|0x0e
block|}
block|,
block|{
literal|"ABORT"
block|,
literal|0x0f
block|}
block|,
block|{
literal|"CHECKSTATUS"
block|,
literal|0x10
block|}
block|,
block|{
literal|"GET_PARAM"
block|,
literal|0x12
block|}
block|,
block|{
literal|"SET_PARAM"
block|,
literal|0x13
block|}
block|,
block|{
literal|"CREATEUNIT"
block|,
literal|0x14
block|}
block|,
block|{
literal|"DELETEUNIT"
block|,
literal|0x15
block|}
block|,
block|{
literal|"REBUILDUNIT"
block|,
literal|0x17
block|}
block|,
block|{
literal|"SECTOR_INFO"
block|,
literal|0x1a
block|}
block|,
block|{
literal|"AEN_LISTEN"
block|,
literal|0x1c
block|}
block|,
block|{
literal|"CMD_PACKET"
block|,
literal|0x1d
block|}
block|,
block|{
name|NULL
block|,
literal|0
block|}
block|,
block|{
literal|"unknown opcode"
block|,
literal|0
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

