begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2007-2009 Sam Leffler, Errno Consulting  * Copyright (c) 2007-2009 Marvell Semiconductor, Inc.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer,  *    without modification.  * 2. Redistributions in binary form must reproduce at minimum a disclaimer  *    similar to the "NO WARRANTY" disclaimer below ("Disclaimer") and any  *    redistribution must be conditioned upon including a substantially  *    similar Disclaimer requirement for further binary redistribution.  *  * NO WARRANTY  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF NONINFRINGEMENT, MERCHANTIBILITY  * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL  * THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY,  * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER  * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF  * THE POSSIBILITY OF SUCH DAMAGES.  *  * $FreeBSD$  */
end_comment

begin_comment
comment|/*  * Ioctl-related defintions for the Marvel Wireless LAN controller driver.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_DEV_MWL_MVIOCTL_H
end_ifndef

begin_define
define|#
directive|define
name|_DEV_MWL_MVIOCTL_H
end_define

begin_struct
struct|struct
name|mwl_stats
block|{
name|struct
name|mwl_hal_hwstats
name|hw_stats
decl_stmt|;
comment|/* XXX tied to h/w defs */
name|uint32_t
name|mst_failure
decl_stmt|;
comment|/* generic hardware failure */
name|uint32_t
name|mst_rx_badtkipicv
decl_stmt|;
name|uint32_t
name|mst_tx_discard
decl_stmt|;
name|uint32_t
name|mst_tx_qstop
decl_stmt|;
name|uint32_t
name|mst_tx_encap
decl_stmt|;
name|uint32_t
name|mst_tx_mgmt
decl_stmt|;
name|uint32_t
name|mst_rx_nombuf
decl_stmt|;
name|uint32_t
name|mst_rx_busdma
decl_stmt|;
name|uint32_t
name|mst_rx_tooshort
decl_stmt|;
name|uint32_t
name|mst_tx_busdma
decl_stmt|;
name|uint32_t
name|mst_tx_linear
decl_stmt|;
name|uint32_t
name|mst_tx_nombuf
decl_stmt|;
name|uint32_t
name|mst_tx_nodata
decl_stmt|;
name|uint32_t
name|mst_tx_shortpre
decl_stmt|;
name|uint32_t
name|mst_tx_retries
decl_stmt|;
name|uint32_t
name|mst_tx_mretries
decl_stmt|;
name|uint32_t
name|mst_tx_linkerror
decl_stmt|;
name|uint32_t
name|mst_tx_xretries
decl_stmt|;
name|uint32_t
name|mst_tx_aging
decl_stmt|;
name|uint32_t
name|mst_tx_qdrop
decl_stmt|;
name|uint32_t
name|mst_ff_txerr
decl_stmt|;
name|uint32_t
name|mst_watchdog
decl_stmt|;
name|uint32_t
name|mst_tx_packets
decl_stmt|;
name|uint32_t
name|mst_rx_packets
decl_stmt|;
name|int8_t
name|mst_rx_rssi
decl_stmt|;
name|int8_t
name|mst_rx_noise
decl_stmt|;
name|uint8_t
name|mst_tx_rate
decl_stmt|;
name|uint32_t
name|mst_ant_tx
index|[
literal|4
index|]
decl_stmt|;
name|uint32_t
name|mst_ant_rx
index|[
literal|4
index|]
decl_stmt|;
name|uint32_t
name|mst_tx_tso
decl_stmt|;
name|uint32_t
name|mst_tso_badeth
decl_stmt|;
name|uint32_t
name|mst_tso_nohdr
decl_stmt|;
name|uint32_t
name|mst_tso_badsplit
decl_stmt|;
name|uint32_t
name|mst_rx_crypto
decl_stmt|;
name|uint32_t
name|mst_rx_tkipmic
decl_stmt|;
name|uint32_t
name|mst_rx_nodmabuf
decl_stmt|;
name|uint32_t
name|mst_tx_noheadroom
decl_stmt|;
name|uint32_t
name|mst_tx_badframetype
decl_stmt|;
name|uint32_t
name|mst_ampdu_nostream
decl_stmt|;
name|uint32_t
name|mst_ampdu_reject
decl_stmt|;
name|uint32_t
name|mst_addba_nostream
decl_stmt|;
name|uint32_t
name|mst_bacreate_failed
decl_stmt|;
name|uint32_t
name|mst_bawatchdog
decl_stmt|;
name|uint32_t
name|mst_radardetect
decl_stmt|;
name|uint32_t
name|mst_rx_dmabufmissing
decl_stmt|;
name|uint32_t
name|mst_bawatchdog_notfound
decl_stmt|;
name|uint32_t
name|mst_bawatchdog_empty
decl_stmt|;
name|uint32_t
name|mst_bawatchdog_failed
decl_stmt|;
name|uint32_t
name|mst_rxbuf_failed
decl_stmt|;
name|uint32_t
name|mst_pad
index|[
literal|31
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|SIOCGMVSTATS
value|_IOWR('i', 137, struct ifreq)
end_define

begin_comment
comment|/*  * Radio capture format.  */
end_comment

begin_define
define|#
directive|define
name|MWL_RX_RADIOTAP_PRESENT
value|(		\ 	(1<< IEEE80211_RADIOTAP_FLAGS)		| \ 	(1<< IEEE80211_RADIOTAP_RATE)		| \ 	(1<< IEEE80211_RADIOTAP_CHANNEL)	| \ 	(1<< IEEE80211_RADIOTAP_ANTENNA)	| \ 	(1<< IEEE80211_RADIOTAP_DBM_ANTSIGNAL)	| \ 	(1<< IEEE80211_RADIOTAP_DBM_ANTNOISE)	| \ 	0)
end_define

begin_struct
struct|struct
name|mwl_rx_radiotap_header
block|{
name|struct
name|ieee80211_radiotap_header
name|wr_ihdr
decl_stmt|;
name|u_int8_t
name|wr_flags
decl_stmt|;
name|u_int8_t
name|wr_rate
decl_stmt|;
name|u_int16_t
name|wr_chan_freq
decl_stmt|;
name|u_int16_t
name|wr_chan_flags
decl_stmt|;
name|int8_t
name|wr_antsignal
decl_stmt|;
name|int8_t
name|wr_antnoise
decl_stmt|;
name|u_int8_t
name|wr_antenna
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|MWL_TX_RADIOTAP_PRESENT
value|(		\ 	(1<< IEEE80211_RADIOTAP_FLAGS)		| \ 	(1<< IEEE80211_RADIOTAP_RATE)		| \ 	(1<< IEEE80211_RADIOTAP_CHANNEL)	| \ 	(1<< IEEE80211_RADIOTAP_DBM_TX_POWER)	| \ 	(1<< IEEE80211_RADIOTAP_ANTENNA)	| \ 	0)
end_define

begin_struct
struct|struct
name|mwl_tx_radiotap_header
block|{
name|struct
name|ieee80211_radiotap_header
name|wt_ihdr
decl_stmt|;
name|u_int8_t
name|wt_flags
decl_stmt|;
name|u_int8_t
name|wt_rate
decl_stmt|;
name|u_int16_t
name|wt_chan_freq
decl_stmt|;
name|u_int16_t
name|wt_chan_flags
decl_stmt|;
name|u_int8_t
name|wt_txpower
decl_stmt|;
name|u_int8_t
name|wt_antenna
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _DEV_MWL_MVIOCTL_H */
end_comment

end_unit

