begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$FreeBSD$	*/
end_comment

begin_comment
comment|/*	$NecBSD: dp83932subr.h,v 1.5 1999/02/02 00:47:25 kmatsuda Exp $	*/
end_comment

begin_comment
comment|/*	$NetBSD$	*/
end_comment

begin_comment
comment|/*  * Copyright (c) 1997, 1998, 1999  *	Kouichi Matsuda.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *      This product includes software developed by Kouichi Matsuda for  *      NetBSD/pc98.  * 4. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*  * Routines of NEC PC-9801-83, 84, 103, 104, PC-9801N-25 and PC-9801N-J02, J02R   * Ethernet interface for NetBSD/pc98, ported by Kouichi Matsuda.  *  * These cards use National Semiconductor DP83934AVQB as Ethernet Controller  * and National Semiconductor NS46C46 as (64 * 16 bits) Microwire Serial EEPROM.  */
end_comment

begin_decl_stmt
name|int
name|sncsetup
name|__P
argument_list|(
operator|(
expr|struct
name|snc_softc
operator|*
operator|,
name|u_int8_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|u_int8_t
name|snc_nec16_validate_irq
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|snc_nec16_register_irq
name|__P
argument_list|(
operator|(
expr|struct
name|snc_softc
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|snc_nec16_validate_mem
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|snc_nec16_register_mem
name|__P
argument_list|(
operator|(
expr|struct
name|snc_softc
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|u_int16_t
name|snc_nec16_nic_get
name|__P
argument_list|(
operator|(
expr|struct
name|snc_softc
operator|*
operator|,
name|u_int8_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|snc_nec16_nic_put
name|__P
argument_list|(
operator|(
expr|struct
name|snc_softc
operator|*
operator|,
name|u_int8_t
operator|,
name|u_int16_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|snc_nec16_writetodesc
name|__P
argument_list|(
operator|(
expr|struct
name|snc_softc
operator|*
operator|,
name|u_int32_t
operator|,
name|u_int32_t
operator|,
name|u_int16_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|u_int16_t
name|snc_nec16_readfromdesc
name|__P
argument_list|(
operator|(
expr|struct
name|snc_softc
operator|*
operator|,
name|u_int32_t
operator|,
name|u_int32_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|snc_nec16_copyfrombuf
name|__P
argument_list|(
operator|(
expr|struct
name|snc_softc
operator|*
operator|,
name|void
operator|*
operator|,
name|u_int32_t
operator|,
name|size_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|snc_nec16_copytobuf
name|__P
argument_list|(
operator|(
expr|struct
name|snc_softc
operator|*
operator|,
name|void
operator|*
operator|,
name|u_int32_t
operator|,
name|size_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|snc_nec16_zerobuf
name|__P
argument_list|(
operator|(
expr|struct
name|snc_softc
operator|*
operator|,
name|u_int32_t
operator|,
name|size_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|snc_nec16_detectsubr
name|__P
argument_list|(
operator|(
name|bus_space_tag_t
operator|,
name|bus_space_handle_t
operator|,
name|bus_space_tag_t
operator|,
name|bus_space_handle_t
operator|,
name|int
operator|,
name|int
operator|,
name|u_int8_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|snc_nec16_check_memory
name|__P
argument_list|(
operator|(
name|bus_space_tag_t
operator|,
name|bus_space_handle_t
operator|,
name|bus_space_tag_t
operator|,
name|bus_space_handle_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|snc_nec16_get_enaddr
name|__P
argument_list|(
operator|(
name|bus_space_tag_t
operator|,
name|bus_space_handle_t
operator|,
name|u_int8_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|u_int8_t
modifier|*
name|snc_nec16_detect_type
name|__P
argument_list|(
operator|(
name|u_int8_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|snc_nec16_read_eeprom
name|__P
argument_list|(
operator|(
name|bus_space_tag_t
operator|,
name|bus_space_handle_t
operator|,
name|u_int8_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|SNCDEBUG
end_ifdef

begin_decl_stmt
name|void
name|snc_nec16_dump_reg
name|__P
argument_list|(
operator|(
name|bus_space_tag_t
operator|,
name|bus_space_handle_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* SNDEBUG */
end_comment

end_unit

