begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2003  *	Bill Paul<wpaul@windriver.com>.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by Bill Paul.  * 4. Neither the name of the author nor the names of any co-contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY Bill Paul AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL Bill Paul OR THE VOICES IN HIS HEAD  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF  * THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_define
define|#
directive|define
name|NDIS_DEFAULT_NODENAME
value|"FreeBSD NDIS node"
end_define

begin_define
define|#
directive|define
name|NDIS_NODENAME_LEN
value|32
end_define

begin_struct
struct|struct
name|ndis_pci_type
block|{
name|uint16_t
name|ndis_vid
decl_stmt|;
name|uint16_t
name|ndis_did
decl_stmt|;
name|uint32_t
name|ndis_subsys
decl_stmt|;
name|char
modifier|*
name|ndis_name
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ndis_pccard_type
block|{
specifier|const
name|char
modifier|*
name|ndis_vid
decl_stmt|;
specifier|const
name|char
modifier|*
name|ndis_did
decl_stmt|;
name|char
modifier|*
name|ndis_name
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ndis_shmem
block|{
name|bus_dma_tag_t
name|ndis_stag
decl_stmt|;
name|bus_dmamap_t
name|ndis_smap
decl_stmt|;
name|void
modifier|*
name|ndis_saddr
decl_stmt|;
name|struct
name|ndis_shmem
modifier|*
name|ndis_next
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ndis_cfglist
block|{
name|ndis_cfg
name|ndis_cfg
decl_stmt|;
name|TAILQ_ENTRY
argument_list|(
argument|ndis_cfglist
argument_list|)
name|link
expr_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|TAILQ_HEAD
argument_list|(
name|nch
argument_list|,
name|ndis_cfglist
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|NDIS_INITIALIZED
parameter_list|(
name|sc
parameter_list|)
value|(sc->ndis_block.nmb_miniportadapterctx != NULL)
end_define

begin_define
define|#
directive|define
name|NDIS_INC
parameter_list|(
name|x
parameter_list|)
define|\
value|(x)->ndis_txidx = ((x)->ndis_txidx + 1) % (x)->ndis_maxpkts
end_define

begin_struct
struct|struct
name|ndis_softc
block|{
name|struct
name|arpcom
name|arpcom
decl_stmt|;
name|struct
name|ieee80211com
name|ic
decl_stmt|;
comment|/* interface info */
ifdef|#
directive|ifdef
name|notdef
name|struct
name|ieee80211com
name|arpcom
decl_stmt|;
comment|/* interface info */
endif|#
directive|endif
name|struct
name|ifmedia
name|ifmedia
decl_stmt|;
comment|/* media info */
name|u_long
name|ndis_hwassist
decl_stmt|;
name|uint32_t
name|ndis_v4tx
decl_stmt|;
name|uint32_t
name|ndis_v4rx
decl_stmt|;
name|bus_space_handle_t
name|ndis_bhandle
decl_stmt|;
name|bus_space_tag_t
name|ndis_btag
decl_stmt|;
name|void
modifier|*
name|ndis_intrhand
decl_stmt|;
name|struct
name|resource
modifier|*
name|ndis_irq
decl_stmt|;
name|struct
name|resource
modifier|*
name|ndis_res
decl_stmt|;
name|struct
name|resource
modifier|*
name|ndis_res_io
decl_stmt|;
name|int
name|ndis_io_rid
decl_stmt|;
name|struct
name|resource
modifier|*
name|ndis_res_mem
decl_stmt|;
name|int
name|ndis_mem_rid
decl_stmt|;
name|struct
name|resource
modifier|*
name|ndis_res_altmem
decl_stmt|;
name|int
name|ndis_altmem_rid
decl_stmt|;
name|struct
name|resource
modifier|*
name|ndis_res_am
decl_stmt|;
comment|/* attribute mem (pccard) */
name|int
name|ndis_am_rid
decl_stmt|;
name|struct
name|resource
modifier|*
name|ndis_res_cm
decl_stmt|;
comment|/* common mem (pccard) */
name|struct
name|resource_list
name|ndis_rl
decl_stmt|;
name|int
name|ndis_rescnt
decl_stmt|;
name|struct
name|mtx
name|ndis_mtx
decl_stmt|;
name|struct
name|mtx
name|ndis_intrmtx
decl_stmt|;
name|device_t
name|ndis_dev
decl_stmt|;
name|int
name|ndis_unit
decl_stmt|;
name|ndis_miniport_block
name|ndis_block
decl_stmt|;
name|ndis_miniport_characteristics
name|ndis_chars
decl_stmt|;
name|interface_type
name|ndis_type
decl_stmt|;
name|struct
name|callout_handle
name|ndis_stat_ch
decl_stmt|;
name|int
name|ndis_maxpkts
decl_stmt|;
name|ndis_oid
modifier|*
name|ndis_oids
decl_stmt|;
name|int
name|ndis_oidcnt
decl_stmt|;
name|int
name|ndis_txidx
decl_stmt|;
name|int
name|ndis_txpending
decl_stmt|;
name|ndis_packet
modifier|*
modifier|*
name|ndis_txarray
decl_stmt|;
name|int
name|ndis_sc
decl_stmt|;
name|ndis_cfg
modifier|*
name|ndis_regvals
decl_stmt|;
name|struct
name|nch
name|ndis_cfglist_head
decl_stmt|;
name|int
name|ndis_80211
decl_stmt|;
name|int
name|ndis_link
decl_stmt|;
name|uint32_t
name|ndis_filter
decl_stmt|;
name|int
name|ndis_if_flags
decl_stmt|;
name|int
name|ndis_skip
decl_stmt|;
if|#
directive|if
name|__FreeBSD_version
operator|<
literal|502113
name|struct
name|sysctl_ctx_list
name|ndis_ctx
decl_stmt|;
name|struct
name|sysctl_oid
modifier|*
name|ndis_tree
decl_stmt|;
endif|#
directive|endif
name|int
name|ndis_devidx
decl_stmt|;
name|interface_type
name|ndis_iftype
decl_stmt|;
name|bus_dma_tag_t
name|ndis_parent_tag
decl_stmt|;
name|struct
name|ndis_shmem
modifier|*
name|ndis_shlist
decl_stmt|;
name|bus_dma_tag_t
name|ndis_mtag
decl_stmt|;
name|bus_dma_tag_t
name|ndis_ttag
decl_stmt|;
name|bus_dmamap_t
modifier|*
name|ndis_mmaps
decl_stmt|;
name|bus_dmamap_t
modifier|*
name|ndis_tmaps
decl_stmt|;
name|int
name|ndis_mmapcnt
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|NDIS_LOCK
parameter_list|(
name|_sc
parameter_list|)
value|mtx_lock(&(_sc)->ndis_mtx)
end_define

begin_define
define|#
directive|define
name|NDIS_UNLOCK
parameter_list|(
name|_sc
parameter_list|)
value|mtx_unlock(&(_sc)->ndis_mtx)
end_define

end_unit

