begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*   * Copyright 2003 Eric Anholt  * All Rights Reserved.  *  * Permission is hereby granted, free of charge, to any person obtaining a  * copy of this software and associated documentation files (the "Software"),  * to deal in the Software without restriction, including without limitation  * the rights to use, copy, modify, merge, publish, distribute, sublicense,  * and/or sell copies of the Software, and to permit persons to whom the  * Software is furnished to do so, subject to the following conditions:  *   * The above copyright notice and this permission notice (including the next  * paragraph) shall be included in all copies or substantial portions of the  * Software.  *   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL  * PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR  * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER  * DEALINGS IN THE SOFTWARE.  *  *  * $FreeBSD$  */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|&&
name|__FreeBSD_version
operator|>=
literal|500102
end_if

begin_decl_stmt
specifier|static
name|int
name|DRM
argument_list|(
name|dma_mmap
argument_list|)
argument_list|(
name|dev_t
name|kdev
argument_list|,
name|vm_offset_t
name|offset
argument_list|,
name|vm_paddr_t
operator|*
name|paddr
argument_list|,
name|int
name|prot
argument_list|)
elif|#
directive|elif
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
decl|static
name|int
name|DRM
argument_list|(
name|dma_mmap
argument_list|)
argument_list|(
name|dev_t
name|kdev
argument_list|,
name|vm_offset_t
name|offset
argument_list|,
name|int
name|prot
argument_list|)
elif|#
directive|elif
name|defined
argument_list|(
name|__NetBSD__
argument_list|)
decl|static
name|paddr_t
name|DRM
argument_list|(
name|dma_mmap
argument_list|)
argument_list|(
name|dev_t
name|kdev
argument_list|,
name|vm_offset_t
name|offset
argument_list|,
name|int
name|prot
argument_list|)
endif|#
directive|endif
block|{
name|DRM_DEVICE
expr_stmt|;
name|drm_device_dma_t
modifier|*
name|dma
init|=
name|dev
operator|->
name|dma
decl_stmt|;
name|unsigned
name|long
name|physical
decl_stmt|;
name|unsigned
name|long
name|page
decl_stmt|;
if|if
condition|(
name|dma
operator|==
name|NULL
operator|||
name|dma
operator|->
name|pagelist
operator|==
name|NULL
condition|)
return|return
operator|-
literal|1
return|;
name|page
operator|=
name|offset
operator|>>
name|PAGE_SHIFT
expr_stmt|;
name|physical
operator|=
name|dma
operator|->
name|pagelist
index|[
name|page
index|]
expr_stmt|;
name|DRM_DEBUG
argument_list|(
literal|"0x%08lx (page %lu) => 0x%08lx\n"
argument_list|,
operator|(
name|long
operator|)
name|offset
argument_list|,
name|page
argument_list|,
name|physical
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|&&
name|__FreeBSD_version
operator|>=
literal|500102
operator|*
name|paddr
operator|=
name|physical
expr_stmt|;
return|return
literal|0
return|;
else|#
directive|else
return|return
name|atop
argument_list|(
name|physical
argument_list|)
return|;
endif|#
directive|endif
block|}
end_decl_stmt

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|&&
name|__FreeBSD_version
operator|>=
literal|500102
end_if

begin_decl_stmt
name|int
name|DRM
argument_list|(
name|mmap
argument_list|)
argument_list|(
name|dev_t
name|kdev
argument_list|,
name|vm_offset_t
name|offset
argument_list|,
name|vm_paddr_t
operator|*
name|paddr
argument_list|,
name|int
name|prot
argument_list|)
elif|#
directive|elif
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
name|int
name|DRM
argument_list|(
name|mmap
argument_list|)
argument_list|(
name|dev_t
name|kdev
argument_list|,
name|vm_offset_t
name|offset
argument_list|,
name|int
name|prot
argument_list|)
elif|#
directive|elif
name|defined
argument_list|(
name|__NetBSD__
argument_list|)
name|paddr_t
name|DRM
argument_list|(
name|mmap
argument_list|)
argument_list|(
name|dev_t
name|kdev
argument_list|,
name|off_t
name|offset
argument_list|,
name|int
name|prot
argument_list|)
endif|#
directive|endif
block|{
name|DRM_DEVICE
expr_stmt|;
name|drm_local_map_t
modifier|*
name|map
init|=
name|NULL
decl_stmt|;
name|drm_map_list_entry_t
modifier|*
name|listentry
init|=
name|NULL
decl_stmt|;
name|drm_file_t
modifier|*
name|priv
decl_stmt|;
name|DRM_GET_PRIV_WITH_RETURN
argument_list|(
name|priv
argument_list|,
operator|(
name|DRMFILE
operator|)
operator|(
name|uintptr_t
operator|)
name|DRM_CURRENTPID
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|priv
operator|->
name|authenticated
condition|)
return|return
name|DRM_ERR
argument_list|(
name|EACCES
argument_list|)
return|;
if|if
condition|(
name|dev
operator|->
name|dma
operator|&&
name|offset
operator|>=
literal|0
operator|&&
name|offset
operator|<
name|ptoa
argument_list|(
name|dev
operator|->
name|dma
operator|->
name|page_count
argument_list|)
condition|)
if|#
directive|if
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|&&
name|__FreeBSD_version
operator|>=
literal|500102
return|return
name|DRM
argument_list|(
name|dma_mmap
argument_list|)
argument_list|(
name|kdev
argument_list|,
name|offset
argument_list|,
name|paddr
argument_list|,
name|prot
argument_list|)
return|;
else|#
directive|else
return|return
name|DRM
argument_list|(
name|dma_mmap
argument_list|)
argument_list|(
name|kdev
argument_list|,
name|offset
argument_list|,
name|prot
argument_list|)
return|;
endif|#
directive|endif
comment|/* A sequential search of a linked list is 				   fine here because: 1) there will only be 				   about 5-10 entries in the list and, 2) a 				   DRI client only has to do this mapping 				   once, so it doesn't have to be optimized 				   for performance, even if the list was a 				   bit longer. */
name|TAILQ_FOREACH
argument_list|(
argument|listentry
argument_list|,
argument|dev->maplist
argument_list|,
argument|link
argument_list|)
block|{
name|map
operator|=
name|listentry
operator|->
name|map
expr_stmt|;
comment|/*		DRM_DEBUG("considering 0x%x..0x%x\n", map->offset, map->offset + map->size - 1);*/
if|if
condition|(
name|offset
operator|>=
name|map
operator|->
name|offset
operator|&&
name|offset
operator|<
name|map
operator|->
name|offset
operator|+
name|map
operator|->
name|size
condition|)
break|break;
block|}
if|if
condition|(
operator|!
name|listentry
condition|)
block|{
name|DRM_DEBUG
argument_list|(
literal|"can't find map\n"
argument_list|)
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
if|if
condition|(
operator|(
operator|(
name|map
operator|->
name|flags
operator|&
name|_DRM_RESTRICTED
operator|)
operator|&&
name|DRM_SUSER
argument_list|(
name|DRM_CURPROC
argument_list|)
operator|)
condition|)
block|{
name|DRM_DEBUG
argument_list|(
literal|"restricted map\n"
argument_list|)
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
switch|switch
condition|(
name|map
operator|->
name|type
condition|)
block|{
case|case
name|_DRM_FRAME_BUFFER
case|:
case|case
name|_DRM_REGISTERS
case|:
case|case
name|_DRM_AGP
case|:
if|#
directive|if
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|&&
name|__FreeBSD_version
operator|>=
literal|500102
operator|*
name|paddr
operator|=
name|offset
expr_stmt|;
return|return
literal|0
return|;
else|#
directive|else
return|return
name|atop
argument_list|(
name|offset
argument_list|)
return|;
endif|#
directive|endif
case|case
name|_DRM_SCATTER_GATHER
case|:
case|case
name|_DRM_SHM
case|:
if|#
directive|if
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|&&
name|__FreeBSD_version
operator|>=
literal|500102
operator|*
name|paddr
operator|=
name|vtophys
argument_list|(
name|offset
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
else|#
directive|else
return|return
name|atop
argument_list|(
name|vtophys
argument_list|(
name|offset
argument_list|)
argument_list|)
return|;
endif|#
directive|endif
default|default:
return|return
operator|-
literal|1
return|;
comment|/* This should never happen. */
block|}
name|DRM_DEBUG
argument_list|(
literal|"bailing out\n"
argument_list|)
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
end_decl_stmt

end_unit

