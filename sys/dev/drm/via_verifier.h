begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright 2004 The Unichrome Project. All Rights Reserved.  *  * Permission is hereby granted, free of charge, to any person obtaining a  * copy of this software and associated documentation files (the "Software"),  * to deal in the Software without restriction, including without limitation  * the rights to use, copy, modify, merge, publish, distribute, sub license,  * and/or sell copies of the Software, and to permit persons to whom the  * Software is furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice (including the  * next paragraph) shall be included in all copies or substantial portions  * of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL  * THE UNICHROME PROJECT, AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR  * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER  * DEALINGS IN THE SOFTWARE.  *  * Author: Thomas HellstrÃ¶m 2004.  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|_VIA_VERIFIER_H_
end_ifndef

begin_define
define|#
directive|define
name|_VIA_VERIFIER_H_
end_define

begin_typedef
typedef|typedef
enum|enum
block|{
name|no_sequence
init|=
literal|0
block|,
name|z_address
block|,
name|dest_address
block|,
name|tex_address
block|}
name|drm_via_sequence_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|texture
decl_stmt|;
name|uint32_t
name|z_addr
decl_stmt|;
name|uint32_t
name|d_addr
decl_stmt|;
name|uint32_t
name|t_addr
index|[
literal|2
index|]
index|[
literal|10
index|]
decl_stmt|;
name|uint32_t
name|pitch
index|[
literal|2
index|]
index|[
literal|10
index|]
decl_stmt|;
name|uint32_t
name|height
index|[
literal|2
index|]
index|[
literal|10
index|]
decl_stmt|;
name|uint32_t
name|tex_level_lo
index|[
literal|2
index|]
decl_stmt|;
name|uint32_t
name|tex_level_hi
index|[
literal|2
index|]
decl_stmt|;
name|uint32_t
name|tex_palette_size
index|[
literal|2
index|]
decl_stmt|;
name|uint32_t
name|tex_npot
index|[
literal|2
index|]
decl_stmt|;
name|drm_via_sequence_t
name|unfinished
decl_stmt|;
name|int
name|agp_texture
decl_stmt|;
name|int
name|multitex
decl_stmt|;
name|struct
name|drm_device
modifier|*
name|dev
decl_stmt|;
name|drm_local_map_t
modifier|*
name|map_cache
decl_stmt|;
name|uint32_t
name|vertex_count
decl_stmt|;
name|int
name|agp
decl_stmt|;
specifier|const
name|uint32_t
modifier|*
name|buf_start
decl_stmt|;
block|}
name|drm_via_state_t
typedef|;
end_typedef

begin_function_decl
specifier|extern
name|int
name|via_verify_command_stream
parameter_list|(
specifier|const
name|uint32_t
modifier|*
name|buf
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|,
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|int
name|agp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_parse_command_stream
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
specifier|const
name|uint32_t
modifier|*
name|buf
parameter_list|,
name|unsigned
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

