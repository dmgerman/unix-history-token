begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* i915_drv.h -- Private header for the I915 driver -*- linux-c -*-  */
end_comment

begin_comment
comment|/*  *  * Copyright 2003 Tungsten Graphics, Inc., Cedar Park, Texas.  * All Rights Reserved.  *  * Permission is hereby granted, free of charge, to any person obtaining a  * copy of this software and associated documentation files (the  * "Software"), to deal in the Software without restriction, including  * without limitation the rights to use, copy, modify, merge, publish,  * distribute, sub license, and/or sell copies of the Software, and to  * permit persons to whom the Software is furnished to do so, subject to  * the following conditions:  *  * The above copyright notice and this permission notice (including the  * next paragraph) shall be included in all copies or substantial portions  * of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR  * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  *  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|_I915_DRV_H_
end_ifndef

begin_define
define|#
directive|define
name|_I915_DRV_H_
end_define

begin_include
include|#
directive|include
file|"dev/drm/i915_reg.h"
end_include

begin_comment
comment|/* General customization:  */
end_comment

begin_define
define|#
directive|define
name|DRIVER_AUTHOR
value|"Tungsten Graphics, Inc."
end_define

begin_define
define|#
directive|define
name|DRIVER_NAME
value|"i915"
end_define

begin_define
define|#
directive|define
name|DRIVER_DESC
value|"Intel Graphics"
end_define

begin_define
define|#
directive|define
name|DRIVER_DATE
value|"20080730"
end_define

begin_enum
enum|enum
name|pipe
block|{
name|PIPE_A
init|=
literal|0
block|,
name|PIPE_B
block|, }
enum|;
end_enum

begin_comment
comment|/* Interface history:  *  * 1.1: Original.  * 1.2: Add Power Management  * 1.3: Add vblank support  * 1.4: Fix cmdbuffer path, add heap destroy  * 1.5: Add vblank pipe configuration  * 1.6: - New ioctl for scheduling buffer swaps on vertical blank  *      - Support vertical blank on secondary display pipe  */
end_comment

begin_define
define|#
directive|define
name|DRIVER_MAJOR
value|1
end_define

begin_define
define|#
directive|define
name|DRIVER_MINOR
value|6
end_define

begin_define
define|#
directive|define
name|DRIVER_PATCHLEVEL
value|0
end_define

begin_define
define|#
directive|define
name|WATCH_COHERENCY
value|0
end_define

begin_define
define|#
directive|define
name|WATCH_BUF
value|0
end_define

begin_define
define|#
directive|define
name|WATCH_EXEC
value|0
end_define

begin_define
define|#
directive|define
name|WATCH_LRU
value|0
end_define

begin_define
define|#
directive|define
name|WATCH_RELOC
value|0
end_define

begin_define
define|#
directive|define
name|WATCH_INACTIVE
value|0
end_define

begin_define
define|#
directive|define
name|WATCH_PWRITE
value|0
end_define

begin_typedef
typedef|typedef
struct|struct
name|_drm_i915_ring_buffer
block|{
name|int
name|tail_mask
decl_stmt|;
name|unsigned
name|long
name|Size
decl_stmt|;
name|u8
modifier|*
name|virtual_start
decl_stmt|;
name|int
name|head
decl_stmt|;
name|int
name|tail
decl_stmt|;
name|int
name|space
decl_stmt|;
name|drm_local_map_t
name|map
decl_stmt|;
name|struct
name|drm_gem_object
modifier|*
name|ring_obj
decl_stmt|;
block|}
name|drm_i915_ring_buffer_t
typedef|;
end_typedef

begin_struct
struct|struct
name|mem_block
block|{
name|struct
name|mem_block
modifier|*
name|next
decl_stmt|;
name|struct
name|mem_block
modifier|*
name|prev
decl_stmt|;
name|int
name|start
decl_stmt|;
name|int
name|size
decl_stmt|;
name|struct
name|drm_file
modifier|*
name|file_priv
decl_stmt|;
comment|/* NULL: free, -1: heap, other: real files */
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|opregion_header
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|opregion_acpi
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|opregion_swsci
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|opregion_asle
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|intel_opregion
block|{
name|struct
name|opregion_header
modifier|*
name|header
decl_stmt|;
name|struct
name|opregion_acpi
modifier|*
name|acpi
decl_stmt|;
name|struct
name|opregion_swsci
modifier|*
name|swsci
decl_stmt|;
name|struct
name|opregion_asle
modifier|*
name|asle
decl_stmt|;
name|int
name|enabled
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
struct|struct
name|drm_i915_private
block|{
name|struct
name|drm_device
modifier|*
name|dev
decl_stmt|;
name|drm_local_map_t
modifier|*
name|sarea
decl_stmt|;
name|drm_local_map_t
modifier|*
name|mmio_map
decl_stmt|;
name|drm_i915_sarea_t
modifier|*
name|sarea_priv
decl_stmt|;
name|drm_i915_ring_buffer_t
name|ring
decl_stmt|;
name|drm_dma_handle_t
modifier|*
name|status_page_dmah
decl_stmt|;
name|void
modifier|*
name|hw_status_page
decl_stmt|;
name|dma_addr_t
name|dma_status_page
decl_stmt|;
name|uint32_t
name|counter
decl_stmt|;
name|unsigned
name|int
name|status_gfx_addr
decl_stmt|;
name|drm_local_map_t
name|hws_map
decl_stmt|;
name|struct
name|drm_gem_object
modifier|*
name|hws_obj
decl_stmt|;
name|unsigned
name|int
name|cpp
decl_stmt|;
name|int
name|back_offset
decl_stmt|;
name|int
name|front_offset
decl_stmt|;
name|int
name|current_page
decl_stmt|;
name|int
name|page_flipping
decl_stmt|;
name|wait_queue_head_t
name|irq_queue
decl_stmt|;
name|atomic_t
name|irq_received
decl_stmt|;
comment|/** Protects user_irq_refcount and irq_mask_reg */
name|DRM_SPINTYPE
name|user_irq_lock
decl_stmt|;
comment|/** Refcount for i915_user_irq_get() versus i915_user_irq_put(). */
name|int
name|user_irq_refcount
decl_stmt|;
comment|/** Cached value of IER to avoid reads in updating the bitfield */
name|u32
name|irq_mask_reg
decl_stmt|;
name|u32
name|pipestat
index|[
literal|2
index|]
decl_stmt|;
name|int
name|tex_lru_log_granularity
decl_stmt|;
name|int
name|allow_batchbuffer
decl_stmt|;
name|struct
name|mem_block
modifier|*
name|agp_heap
decl_stmt|;
name|unsigned
name|int
name|sr01
decl_stmt|,
name|adpa
decl_stmt|,
name|ppcr
decl_stmt|,
name|dvob
decl_stmt|,
name|dvoc
decl_stmt|,
name|lvds
decl_stmt|;
name|int
name|vblank_pipe
decl_stmt|;
name|struct
name|intel_opregion
name|opregion
decl_stmt|;
comment|/* Register state */
name|u8
name|saveLBB
decl_stmt|;
name|u32
name|saveDSPACNTR
decl_stmt|;
name|u32
name|saveDSPBCNTR
decl_stmt|;
name|u32
name|saveDSPARB
decl_stmt|;
name|u32
name|savePIPEACONF
decl_stmt|;
name|u32
name|savePIPEBCONF
decl_stmt|;
name|u32
name|savePIPEASRC
decl_stmt|;
name|u32
name|savePIPEBSRC
decl_stmt|;
name|u32
name|saveFPA0
decl_stmt|;
name|u32
name|saveFPA1
decl_stmt|;
name|u32
name|saveDPLL_A
decl_stmt|;
name|u32
name|saveDPLL_A_MD
decl_stmt|;
name|u32
name|saveHTOTAL_A
decl_stmt|;
name|u32
name|saveHBLANK_A
decl_stmt|;
name|u32
name|saveHSYNC_A
decl_stmt|;
name|u32
name|saveVTOTAL_A
decl_stmt|;
name|u32
name|saveVBLANK_A
decl_stmt|;
name|u32
name|saveVSYNC_A
decl_stmt|;
name|u32
name|saveBCLRPAT_A
decl_stmt|;
name|u32
name|savePIPEASTAT
decl_stmt|;
name|u32
name|saveDSPASTRIDE
decl_stmt|;
name|u32
name|saveDSPASIZE
decl_stmt|;
name|u32
name|saveDSPAPOS
decl_stmt|;
name|u32
name|saveDSPAADDR
decl_stmt|;
name|u32
name|saveDSPASURF
decl_stmt|;
name|u32
name|saveDSPATILEOFF
decl_stmt|;
name|u32
name|savePFIT_PGM_RATIOS
decl_stmt|;
name|u32
name|saveBLC_PWM_CTL
decl_stmt|;
name|u32
name|saveBLC_PWM_CTL2
decl_stmt|;
name|u32
name|saveFPB0
decl_stmt|;
name|u32
name|saveFPB1
decl_stmt|;
name|u32
name|saveDPLL_B
decl_stmt|;
name|u32
name|saveDPLL_B_MD
decl_stmt|;
name|u32
name|saveHTOTAL_B
decl_stmt|;
name|u32
name|saveHBLANK_B
decl_stmt|;
name|u32
name|saveHSYNC_B
decl_stmt|;
name|u32
name|saveVTOTAL_B
decl_stmt|;
name|u32
name|saveVBLANK_B
decl_stmt|;
name|u32
name|saveVSYNC_B
decl_stmt|;
name|u32
name|saveBCLRPAT_B
decl_stmt|;
name|u32
name|savePIPEBSTAT
decl_stmt|;
name|u32
name|saveDSPBSTRIDE
decl_stmt|;
name|u32
name|saveDSPBSIZE
decl_stmt|;
name|u32
name|saveDSPBPOS
decl_stmt|;
name|u32
name|saveDSPBADDR
decl_stmt|;
name|u32
name|saveDSPBSURF
decl_stmt|;
name|u32
name|saveDSPBTILEOFF
decl_stmt|;
name|u32
name|saveVGA0
decl_stmt|;
name|u32
name|saveVGA1
decl_stmt|;
name|u32
name|saveVGA_PD
decl_stmt|;
name|u32
name|saveVGACNTRL
decl_stmt|;
name|u32
name|saveADPA
decl_stmt|;
name|u32
name|saveLVDS
decl_stmt|;
name|u32
name|savePP_ON_DELAYS
decl_stmt|;
name|u32
name|savePP_OFF_DELAYS
decl_stmt|;
name|u32
name|saveDVOA
decl_stmt|;
name|u32
name|saveDVOB
decl_stmt|;
name|u32
name|saveDVOC
decl_stmt|;
name|u32
name|savePP_ON
decl_stmt|;
name|u32
name|savePP_OFF
decl_stmt|;
name|u32
name|savePP_CONTROL
decl_stmt|;
name|u32
name|savePP_DIVISOR
decl_stmt|;
name|u32
name|savePFIT_CONTROL
decl_stmt|;
name|u32
name|save_palette_a
index|[
literal|256
index|]
decl_stmt|;
name|u32
name|save_palette_b
index|[
literal|256
index|]
decl_stmt|;
name|u32
name|saveFBC_CFB_BASE
decl_stmt|;
name|u32
name|saveFBC_LL_BASE
decl_stmt|;
name|u32
name|saveFBC_CONTROL
decl_stmt|;
name|u32
name|saveFBC_CONTROL2
decl_stmt|;
name|u32
name|saveIER
decl_stmt|;
name|u32
name|saveIIR
decl_stmt|;
name|u32
name|saveIMR
decl_stmt|;
name|u32
name|saveCACHE_MODE_0
decl_stmt|;
name|u32
name|saveD_STATE
decl_stmt|;
name|u32
name|saveCG_2D_DIS
decl_stmt|;
name|u32
name|saveMI_ARB_STATE
decl_stmt|;
name|u32
name|saveSWF0
index|[
literal|16
index|]
decl_stmt|;
name|u32
name|saveSWF1
index|[
literal|16
index|]
decl_stmt|;
name|u32
name|saveSWF2
index|[
literal|3
index|]
decl_stmt|;
name|u8
name|saveMSR
decl_stmt|;
name|u8
name|saveSR
index|[
literal|8
index|]
decl_stmt|;
name|u8
name|saveGR
index|[
literal|25
index|]
decl_stmt|;
name|u8
name|saveAR_INDEX
decl_stmt|;
name|u8
name|saveAR
index|[
literal|21
index|]
decl_stmt|;
name|u8
name|saveDACMASK
decl_stmt|;
name|u8
name|saveDACDATA
index|[
literal|256
operator|*
literal|3
index|]
decl_stmt|;
comment|/* 256 3-byte colors */
name|u8
name|saveCR
index|[
literal|37
index|]
decl_stmt|;
struct|struct
block|{
ifdef|#
directive|ifdef
name|__linux__
name|struct
name|drm_mm
name|gtt_space
decl_stmt|;
endif|#
directive|endif
comment|/** 		 * List of objects currently involved in rendering from the 		 * ringbuffer. 		 * 		 * A reference is held on the buffer while on this list. 		 */
name|struct
name|list_head
name|active_list
decl_stmt|;
comment|/** 		 * List of objects which are not in the ringbuffer but which 		 * still have a write_domain which needs to be flushed before 		 * unbinding. 		 * 		 * A reference is held on the buffer while on this list. 		 */
name|struct
name|list_head
name|flushing_list
decl_stmt|;
comment|/** 		 * LRU list of objects which are not in the ringbuffer and 		 * are ready to unbind, but are still in the GTT. 		 * 		 * A reference is not held on the buffer while on this list, 		 * as merely being GTT-bound shouldn't prevent its being 		 * freed, and we'll pull it off the list in the free path. 		 */
name|struct
name|list_head
name|inactive_list
decl_stmt|;
comment|/** 		 * List of breadcrumbs associated with GPU requests currently 		 * outstanding. 		 */
name|struct
name|list_head
name|request_list
decl_stmt|;
ifdef|#
directive|ifdef
name|__linux__
comment|/** 		 * We leave the user IRQ off as much as possible, 		 * but this means that requests will finish and never 		 * be retired once the system goes idle. Set a timer to 		 * fire periodically while the ring is running. When it 		 * fires, go retire requests. 		 */
name|struct
name|delayed_work
name|retire_work
decl_stmt|;
endif|#
directive|endif
name|uint32_t
name|next_gem_seqno
decl_stmt|;
comment|/** 		 * Waiting sequence number, if any 		 */
name|uint32_t
name|waiting_gem_seqno
decl_stmt|;
comment|/** 		 * Last seq seen at irq time 		 */
name|uint32_t
name|irq_gem_seqno
decl_stmt|;
comment|/** 		 * Flag if the X Server, and thus DRM, is not currently in 		 * control of the device. 		 * 		 * This is set between LeaveVT and EnterVT.  It needs to be 		 * replaced with a semaphore.  It also needs to be 		 * transitioned away from for kernel modesetting. 		 */
name|int
name|suspended
decl_stmt|;
comment|/** 		 * Flag if the hardware appears to be wedged. 		 * 		 * This is set when attempts to idle the device timeout. 		 * It prevents command submission from occuring and makes 		 * every pending request fail 		 */
name|int
name|wedged
decl_stmt|;
comment|/** Bit 6 swizzling required for X tiling */
name|uint32_t
name|bit_6_swizzle_x
decl_stmt|;
comment|/** Bit 6 swizzling required for Y tiling */
name|uint32_t
name|bit_6_swizzle_y
decl_stmt|;
block|}
name|mm
struct|;
block|}
name|drm_i915_private_t
typedef|;
end_typedef

begin_enum
enum|enum
name|intel_chip_family
block|{
name|CHIP_I8XX
init|=
literal|0x01
block|,
name|CHIP_I9XX
init|=
literal|0x02
block|,
name|CHIP_I915
init|=
literal|0x04
block|,
name|CHIP_I965
init|=
literal|0x08
block|, }
enum|;
end_enum

begin_comment
comment|/** driver private structure attached to each drm_gem_object */
end_comment

begin_struct
struct|struct
name|drm_i915_gem_object
block|{
name|struct
name|drm_gem_object
modifier|*
name|obj
decl_stmt|;
comment|/** Current space allocated to this object in the GTT, if any. */
name|struct
name|drm_mm_node
modifier|*
name|gtt_space
decl_stmt|;
comment|/** This object's place on the active/flushing/inactive lists */
name|struct
name|list_head
name|list
decl_stmt|;
comment|/** 	 * This is set if the object is on the active or flushing lists 	 * (has pending rendering), and is not set if it's on inactive (ready 	 * to be unbound). 	 */
name|int
name|active
decl_stmt|;
comment|/** 	 * This is set if the object has been written to since last bound 	 * to the GTT 	 */
name|int
name|dirty
decl_stmt|;
comment|/** AGP memory structure for our GTT binding. */
name|DRM_AGP_MEM
modifier|*
name|agp_mem
decl_stmt|;
name|struct
name|page
modifier|*
modifier|*
name|page_list
decl_stmt|;
comment|/** 	 * Current offset of the object in GTT space. 	 * 	 * This is the same as gtt_space->start 	 */
name|uint32_t
name|gtt_offset
decl_stmt|;
comment|/** Boolean whether this object has a valid gtt offset. */
name|int
name|gtt_bound
decl_stmt|;
comment|/** How many users have pinned this object in GTT space */
name|int
name|pin_count
decl_stmt|;
comment|/** Breadcrumb of last rendering to the buffer. */
name|uint32_t
name|last_rendering_seqno
decl_stmt|;
comment|/** Current tiling mode for the object. */
name|uint32_t
name|tiling_mode
decl_stmt|;
comment|/** AGP mapping type (AGP_USER_MEMORY or AGP_USER_CACHED_MEMORY */
name|uint32_t
name|agp_type
decl_stmt|;
comment|/** 	 * Flagging of which individual pages are valid in GEM_DOMAIN_CPU when 	 * GEM_DOMAIN_CPU is not in the object's read domain. 	 */
name|uint8_t
modifier|*
name|page_cpu_valid
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/**  * Request queue structure.  *  * The request queue allows us to note sequence numbers that have been emitted  * and may be associated with active buffers to be retired.  *  * By keeping this list, we can avoid having to do questionable  * sequence-number comparisons on buffer last_rendering_seqnos, and associate  * an emission time with seqnos for tracking how far ahead of the GPU we are.  */
end_comment

begin_struct
struct|struct
name|drm_i915_gem_request
block|{
comment|/** GEM sequence number associated with this request. */
name|uint32_t
name|seqno
decl_stmt|;
comment|/** Time at which this request was emitted, in jiffies. */
name|unsigned
name|long
name|emitted_jiffies
decl_stmt|;
comment|/** Cache domains that were flushed at the start of the request. */
name|uint32_t
name|flush_domains
decl_stmt|;
name|struct
name|list_head
name|list
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|drm_i915_file_private
block|{
struct|struct
block|{
name|uint32_t
name|last_gem_seqno
decl_stmt|;
name|uint32_t
name|last_gem_throttle_seqno
decl_stmt|;
block|}
name|mm
struct|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|drm_ioctl_desc
name|i915_ioctls
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|i915_max_ioctl
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* i915_dma.c */
end_comment

begin_function_decl
specifier|extern
name|void
name|i915_kernel_lost_context
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_driver_load
parameter_list|(
name|struct
name|drm_device
modifier|*
parameter_list|,
name|unsigned
name|long
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_driver_unload
parameter_list|(
name|struct
name|drm_device
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_driver_open
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|i915_driver_lastclose
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|i915_driver_preclose
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|i915_driver_postclose
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_driver_device_is_agp
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|long
name|i915_compat_ioctl
parameter_list|(
name|struct
name|file
modifier|*
name|filp
parameter_list|,
name|unsigned
name|int
name|cmd
parameter_list|,
name|unsigned
name|long
name|arg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_emit_box
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|struct
name|drm_clip_rect
name|__user
modifier|*
name|boxes
parameter_list|,
name|int
name|i
parameter_list|,
name|int
name|DR1
parameter_list|,
name|int
name|DR4
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* i915_irq.c */
end_comment

begin_function_decl
specifier|extern
name|int
name|i915_irq_emit
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_irq_wait
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_user_irq_get
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_user_irq_put
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|irqreturn_t
name|i915_driver_irq_handler
parameter_list|(
name|DRM_IRQ_ARGS
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|i915_driver_irq_preinstall
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_driver_irq_postinstall
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|i915_driver_irq_uninstall
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_vblank_pipe_set
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_vblank_pipe_get
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_enable_vblank
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|int
name|crtc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|i915_disable_vblank
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|int
name|crtc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|u32
name|i915_get_vblank_counter
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|int
name|crtc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_vblank_swap
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_enable_pipestat
parameter_list|(
name|drm_i915_private_t
modifier|*
name|dev_priv
parameter_list|,
name|int
name|pipe
parameter_list|,
name|u32
name|mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_disable_pipestat
parameter_list|(
name|drm_i915_private_t
modifier|*
name|dev_priv
parameter_list|,
name|int
name|pipe
parameter_list|,
name|u32
name|mask
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* i915_mem.c */
end_comment

begin_function_decl
specifier|extern
name|int
name|i915_mem_alloc
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_mem_free
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_mem_init_heap
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_mem_destroy_heap
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|i915_mem_takedown
parameter_list|(
name|struct
name|mem_block
modifier|*
modifier|*
name|heap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|i915_mem_release
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|,
name|struct
name|mem_block
modifier|*
name|heap
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|I915_HAVE_GEM
end_ifdef

begin_comment
comment|/* i915_gem.c */
end_comment

begin_function_decl
name|int
name|i915_gem_init_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_create_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_pread_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_pwrite_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_mmap_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_set_domain_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_sw_finish_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_execbuffer
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_pin_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_unpin_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_busy_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_throttle_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_entervt_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_leavevt_ioctl
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_set_tiling
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_get_tiling
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_gem_load
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_proc_init
parameter_list|(
name|struct
name|drm_minor
modifier|*
name|minor
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_gem_proc_cleanup
parameter_list|(
name|struct
name|drm_minor
modifier|*
name|minor
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_init_object
parameter_list|(
name|struct
name|drm_gem_object
modifier|*
name|obj
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_gem_free_object
parameter_list|(
name|struct
name|drm_gem_object
modifier|*
name|obj
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|i915_gem_object_pin
parameter_list|(
name|struct
name|drm_gem_object
modifier|*
name|obj
parameter_list|,
name|uint32_t
name|alignment
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_gem_object_unpin
parameter_list|(
name|struct
name|drm_gem_object
modifier|*
name|obj
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_gem_lastclose
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|i915_get_gem_seqno
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_gem_retire_requests
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_gem_retire_work_handler
parameter_list|(
name|struct
name|work_struct
modifier|*
name|work
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_gem_clflush_object
parameter_list|(
name|struct
name|drm_gem_object
modifier|*
name|obj
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* i915_gem_tiling.c */
end_comment

begin_function_decl
name|void
name|i915_gem_detect_bit_6_swizzle
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* i915_gem_debug.c */
end_comment

begin_function_decl
name|void
name|i915_gem_dump_object
parameter_list|(
name|struct
name|drm_gem_object
modifier|*
name|obj
parameter_list|,
name|int
name|len
parameter_list|,
specifier|const
name|char
modifier|*
name|where
parameter_list|,
name|uint32_t
name|mark
parameter_list|)
function_decl|;
end_function_decl

begin_if
if|#
directive|if
name|WATCH_INACTIVE
end_if

begin_function_decl
name|void
name|i915_verify_inactive
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|char
modifier|*
name|file
parameter_list|,
name|int
name|line
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|i915_verify_inactive
parameter_list|(
name|dev
parameter_list|,
name|file
parameter_list|,
name|line
parameter_list|)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|i915_gem_object_check_coherency
parameter_list|(
name|struct
name|drm_gem_object
modifier|*
name|obj
parameter_list|,
name|int
name|handle
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_gem_dump_object
parameter_list|(
name|struct
name|drm_gem_object
modifier|*
name|obj
parameter_list|,
name|int
name|len
parameter_list|,
specifier|const
name|char
modifier|*
name|where
parameter_list|,
name|uint32_t
name|mark
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|i915_dump_lru
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
specifier|const
name|char
modifier|*
name|where
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* I915_HAVE_GEM */
end_comment

begin_comment
comment|/* i915_suspend.c */
end_comment

begin_function_decl
specifier|extern
name|int
name|i915_save_state
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|i915_restore_state
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* i915_opregion.c */
end_comment

begin_function_decl
specifier|extern
name|int
name|intel_opregion_init
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|intel_opregion_free
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|opregion_asle_intr
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|opregion_enable_asle
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**  * Lock test for when it's just for synchronization of ring access.  *  * In that case, we don't need to do it when GEM is initialized as nobody else  * has access to the ring.  */
end_comment

begin_define
define|#
directive|define
name|RING_LOCK_TEST_WITH_RETURN
parameter_list|(
name|dev
parameter_list|,
name|file_priv
parameter_list|)
value|do {			\ 	if (((drm_i915_private_t *)dev->dev_private)->ring.ring_obj == NULL) \ 		LOCK_TEST_WITH_RETURN(dev, file_priv);			\ } while (0)
end_define

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
end_if

begin_typedef
typedef|typedef
name|boolean_t
name|bool
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|I915_READ
parameter_list|(
name|reg
parameter_list|)
value|DRM_READ32(dev_priv->mmio_map, (reg))
end_define

begin_define
define|#
directive|define
name|I915_WRITE
parameter_list|(
name|reg
parameter_list|,
name|val
parameter_list|)
value|DRM_WRITE32(dev_priv->mmio_map, (reg), (val))
end_define

begin_define
define|#
directive|define
name|I915_READ16
parameter_list|(
name|reg
parameter_list|)
value|DRM_READ16(dev_priv->mmio_map, (reg))
end_define

begin_define
define|#
directive|define
name|I915_WRITE16
parameter_list|(
name|reg
parameter_list|,
name|val
parameter_list|)
value|DRM_WRITE16(dev_priv->mmio_map, (reg), (val))
end_define

begin_define
define|#
directive|define
name|I915_READ8
parameter_list|(
name|reg
parameter_list|)
value|DRM_READ8(dev_priv->mmio_map, (reg))
end_define

begin_define
define|#
directive|define
name|I915_WRITE8
parameter_list|(
name|reg
parameter_list|,
name|val
parameter_list|)
value|DRM_WRITE8(dev_priv->mmio_map, (reg), (val))
end_define

begin_define
define|#
directive|define
name|I915_VERBOSE
value|0
end_define

begin_define
define|#
directive|define
name|RING_LOCALS
value|unsigned int outring, ringmask, outcount; \                         volatile char *virt;
end_define

begin_define
define|#
directive|define
name|BEGIN_LP_RING
parameter_list|(
name|n
parameter_list|)
value|do {				\ 	if (I915_VERBOSE)				\ 		DRM_DEBUG("BEGIN_LP_RING(%d)\n", (n));	\ 	if (dev_priv->ring.space< (n)*4)		\ 		i915_wait_ring(dev, (n)*4, __func__);		\ 	outcount = 0;					\ 	outring = dev_priv->ring.tail;			\ 	ringmask = dev_priv->ring.tail_mask;		\ 	virt = dev_priv->ring.virtual_start;		\ } while (0)
end_define

begin_define
define|#
directive|define
name|OUT_RING
parameter_list|(
name|n
parameter_list|)
value|do {					\ 	if (I915_VERBOSE) DRM_DEBUG("   OUT_RING %x\n", (int)(n));	\ 	*(volatile unsigned int *)(virt + outring) = (n);	\         outcount++;						\ 	outring += 4;						\ 	outring&= ringmask;					\ } while (0)
end_define

begin_define
define|#
directive|define
name|ADVANCE_LP_RING
parameter_list|()
value|do {						\ 	if (I915_VERBOSE) DRM_DEBUG("ADVANCE_LP_RING %x\n", outring);	\ 	dev_priv->ring.tail = outring;					\ 	dev_priv->ring.space -= outcount * 4;				\ 	I915_WRITE(PRB0_TAIL, outring);			\ } while(0)
end_define

begin_comment
comment|/**  * Reads a dword out of the status page, which is written to from the command  * queue by automatic updates, MI_REPORT_HEAD, MI_STORE_DATA_INDEX, or  * MI_STORE_DATA_IMM.  *  * The following dwords have a reserved meaning:  * 0x00: ISR copy, updated when an ISR bit not set in the HWSTAM changes.  * 0x04: ring 0 head pointer  * 0x05: ring 1 head pointer (915-class)  * 0x06: ring 2 head pointer (915-class)  * 0x10-0x1b: Context status DWords (GM45)  * 0x1f: Last written status offset. (GM45)  *  * The area from dword 0x20 to 0x3ff is available for driver usage.  */
end_comment

begin_define
define|#
directive|define
name|READ_HWSP
parameter_list|(
name|dev_priv
parameter_list|,
name|reg
parameter_list|)
value|(((volatile u32*)(dev_priv->hw_status_page))[reg])
end_define

begin_define
define|#
directive|define
name|READ_BREADCRUMB
parameter_list|(
name|dev_priv
parameter_list|)
value|READ_HWSP(dev_priv, I915_BREADCRUMB_INDEX)
end_define

begin_define
define|#
directive|define
name|I915_GEM_HWS_INDEX
value|0x20
end_define

begin_define
define|#
directive|define
name|I915_BREADCRUMB_INDEX
value|0x21
end_define

begin_function_decl
specifier|extern
name|int
name|i915_wait_ring
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|int
name|n
parameter_list|,
specifier|const
name|char
modifier|*
name|caller
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|IS_I830
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x3577)
end_define

begin_define
define|#
directive|define
name|IS_845G
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x2562)
end_define

begin_define
define|#
directive|define
name|IS_I85X
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x3582)
end_define

begin_define
define|#
directive|define
name|IS_I855
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x3582)
end_define

begin_define
define|#
directive|define
name|IS_I865G
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x2572)
end_define

begin_define
define|#
directive|define
name|IS_I915G
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x2582 || (dev)->pci_device == 0x258a)
end_define

begin_define
define|#
directive|define
name|IS_I915GM
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x2592)
end_define

begin_define
define|#
directive|define
name|IS_I945G
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x2772)
end_define

begin_define
define|#
directive|define
name|IS_I945GM
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x27A2 ||\ 		        (dev)->pci_device == 0x27AE)
end_define

begin_define
define|#
directive|define
name|IS_I965G
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x2972 || \ 		       (dev)->pci_device == 0x2982 || \ 		       (dev)->pci_device == 0x2992 || \ 		       (dev)->pci_device == 0x29A2 || \ 		       (dev)->pci_device == 0x2A02 || \ 		       (dev)->pci_device == 0x2A12 || \ 		       (dev)->pci_device == 0x2A42 || \ 		       (dev)->pci_device == 0x2E02 || \ 		       (dev)->pci_device == 0x2E12 || \ 		       (dev)->pci_device == 0x2E22)
end_define

begin_define
define|#
directive|define
name|IS_I965GM
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x2A02)
end_define

begin_define
define|#
directive|define
name|IS_GM45
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x2A42)
end_define

begin_define
define|#
directive|define
name|IS_G4X
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x2E02 || \ 		     (dev)->pci_device == 0x2E12 || \ 		     (dev)->pci_device == 0x2E22)
end_define

begin_define
define|#
directive|define
name|IS_G33
parameter_list|(
name|dev
parameter_list|)
value|((dev)->pci_device == 0x29C2 ||	\ 			(dev)->pci_device == 0x29B2 ||	\ 			(dev)->pci_device == 0x29D2)
end_define

begin_define
define|#
directive|define
name|IS_I9XX
parameter_list|(
name|dev
parameter_list|)
value|(IS_I915G(dev) || IS_I915GM(dev) || IS_I945G(dev) || \ 		      IS_I945GM(dev) || IS_I965G(dev) || IS_G33(dev))
end_define

begin_define
define|#
directive|define
name|IS_MOBILE
parameter_list|(
name|dev
parameter_list|)
value|(IS_I830(dev) || IS_I85X(dev) || IS_I915GM(dev) || \ 			IS_I945GM(dev) || IS_I965GM(dev) || IS_GM45(dev))
end_define

begin_define
define|#
directive|define
name|I915_NEED_GFX_HWS
parameter_list|(
name|dev
parameter_list|)
value|(IS_G33(dev) || IS_GM45(dev) || IS_G4X(dev))
end_define

begin_define
define|#
directive|define
name|PRIMARY_RINGBUFFER_SIZE
value|(128*1024)
end_define

begin_endif
endif|#
directive|endif
end_endif

end_unit

