begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright 1998-2003 VIA Technologies, Inc. All Rights Reserved.  * Copyright 2001-2003 S3 Graphics, Inc. All Rights Reserved.  *  * Permission is hereby granted, free of charge, to any person obtaining a  * copy of this software and associated documentation files (the "Software"),  * to deal in the Software without restriction, including without limitation  * the rights to use, copy, modify, merge, publish, distribute, sub license,  * and/or sell copies of the Software, and to permit persons to whom the  * Software is furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice (including the  * next paragraph) shall be included in all copies or substantial portions  * of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL  * VIA, S3 GRAPHICS, AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR  * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER  * DEALINGS IN THE SOFTWARE.  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|_VIA_DRV_H_
end_ifndef

begin_define
define|#
directive|define
name|_VIA_DRV_H_
end_define

begin_include
include|#
directive|include
file|"dev/drm/drm_sman.h"
end_include

begin_define
define|#
directive|define
name|DRIVER_AUTHOR
value|"Various"
end_define

begin_define
define|#
directive|define
name|DRIVER_NAME
value|"via"
end_define

begin_define
define|#
directive|define
name|DRIVER_DESC
value|"VIA Unichrome / Pro"
end_define

begin_define
define|#
directive|define
name|DRIVER_DATE
value|"20070202"
end_define

begin_define
define|#
directive|define
name|DRIVER_MAJOR
value|2
end_define

begin_define
define|#
directive|define
name|DRIVER_MINOR
value|11
end_define

begin_define
define|#
directive|define
name|DRIVER_PATCHLEVEL
value|1
end_define

begin_include
include|#
directive|include
file|"dev/drm/via_verifier.h"
end_include

begin_include
include|#
directive|include
file|"dev/drm/via_dmablit.h"
end_include

begin_define
define|#
directive|define
name|VIA_PCI_BUF_SIZE
value|60000
end_define

begin_define
define|#
directive|define
name|VIA_FIRE_BUF_SIZE
value|1024
end_define

begin_define
define|#
directive|define
name|VIA_NUM_IRQS
value|4
end_define

begin_typedef
typedef|typedef
struct|struct
name|drm_via_ring_buffer
block|{
name|drm_local_map_t
name|map
decl_stmt|;
name|char
modifier|*
name|virtual_start
decl_stmt|;
block|}
name|drm_via_ring_buffer_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|uint32_t
name|maskarray_t
index|[
literal|5
index|]
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|drm_via_irq
block|{
name|atomic_t
name|irq_received
decl_stmt|;
name|uint32_t
name|pending_mask
decl_stmt|;
name|uint32_t
name|enable_mask
decl_stmt|;
name|wait_queue_head_t
name|irq_queue
decl_stmt|;
block|}
name|drm_via_irq_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|drm_via_private
block|{
name|drm_via_sarea_t
modifier|*
name|sarea_priv
decl_stmt|;
name|drm_local_map_t
modifier|*
name|sarea
decl_stmt|;
name|drm_local_map_t
modifier|*
name|fb
decl_stmt|;
name|drm_local_map_t
modifier|*
name|mmio
decl_stmt|;
name|unsigned
name|long
name|agpAddr
decl_stmt|;
name|wait_queue_head_t
name|decoder_queue
index|[
name|VIA_NR_XVMC_LOCKS
index|]
decl_stmt|;
name|char
modifier|*
name|dma_ptr
decl_stmt|;
name|unsigned
name|int
name|dma_low
decl_stmt|;
name|unsigned
name|int
name|dma_high
decl_stmt|;
name|unsigned
name|int
name|dma_offset
decl_stmt|;
name|uint32_t
name|dma_wrap
decl_stmt|;
specifier|volatile
name|uint32_t
modifier|*
name|last_pause_ptr
decl_stmt|;
specifier|volatile
name|uint32_t
modifier|*
name|hw_addr_ptr
decl_stmt|;
name|drm_via_ring_buffer_t
name|ring
decl_stmt|;
name|struct
name|timeval
name|last_vblank
decl_stmt|;
name|int
name|last_vblank_valid
decl_stmt|;
name|unsigned
name|usec_per_vblank
decl_stmt|;
name|atomic_t
name|vbl_received
decl_stmt|;
name|drm_via_state_t
name|hc_state
decl_stmt|;
name|char
name|pci_buf
index|[
name|VIA_PCI_BUF_SIZE
index|]
decl_stmt|;
specifier|const
name|uint32_t
modifier|*
name|fire_offsets
index|[
name|VIA_FIRE_BUF_SIZE
index|]
decl_stmt|;
name|uint32_t
name|num_fire_offsets
decl_stmt|;
name|int
name|chipset
decl_stmt|;
name|drm_via_irq_t
name|via_irqs
index|[
name|VIA_NUM_IRQS
index|]
decl_stmt|;
name|unsigned
name|num_irqs
decl_stmt|;
name|maskarray_t
modifier|*
name|irq_masks
decl_stmt|;
name|uint32_t
name|irq_enable_mask
decl_stmt|;
name|uint32_t
name|irq_pending_mask
decl_stmt|;
name|int
modifier|*
name|irq_map
decl_stmt|;
name|unsigned
name|int
name|idle_fault
decl_stmt|;
name|struct
name|drm_sman
name|sman
decl_stmt|;
name|int
name|vram_initialized
decl_stmt|;
name|int
name|agp_initialized
decl_stmt|;
name|unsigned
name|long
name|vram_offset
decl_stmt|;
name|unsigned
name|long
name|agp_offset
decl_stmt|;
name|drm_via_blitq_t
name|blit_queues
index|[
name|VIA_NUM_BLIT_ENGINES
index|]
decl_stmt|;
name|uint32_t
name|dma_diff
decl_stmt|;
block|}
name|drm_via_private_t
typedef|;
end_typedef

begin_enum
enum|enum
name|via_family
block|{
name|VIA_OTHER
init|=
literal|0
block|,
comment|/* Baseline */
name|VIA_PRO_GROUP_A
block|,
comment|/* Another video engine and DMA commands */
name|VIA_DX9_0
comment|/* Same video as pro_group_a, but 3D is unsupported */
block|}
enum|;
end_enum

begin_comment
comment|/* VIA MMIO register access */
end_comment

begin_define
define|#
directive|define
name|VIA_BASE
value|((dev_priv->mmio))
end_define

begin_define
define|#
directive|define
name|VIA_READ
parameter_list|(
name|reg
parameter_list|)
value|DRM_READ32(VIA_BASE, reg)
end_define

begin_define
define|#
directive|define
name|VIA_WRITE
parameter_list|(
name|reg
parameter_list|,
name|val
parameter_list|)
value|DRM_WRITE32(VIA_BASE, reg, val)
end_define

begin_define
define|#
directive|define
name|VIA_READ8
parameter_list|(
name|reg
parameter_list|)
value|DRM_READ8(VIA_BASE, reg)
end_define

begin_define
define|#
directive|define
name|VIA_WRITE8
parameter_list|(
name|reg
parameter_list|,
name|val
parameter_list|)
value|DRM_WRITE8(VIA_BASE, reg, val)
end_define

begin_decl_stmt
specifier|extern
name|struct
name|drm_ioctl_desc
name|via_ioctls
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|via_max_ioctl
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|int
name|via_fb_init
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_mem_alloc
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_mem_free
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_agp_init
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_map_init
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_decoder_futex
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_wait_irq
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_dma_blit_sync
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_dma_blit
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_driver_load
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|unsigned
name|long
name|chipset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_driver_unload
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_init_context
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|int
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_final_context
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|int
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_do_cleanup_map
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|u32
name|via_get_vblank_counter
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|int
name|crtc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_enable_vblank
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|int
name|crtc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|via_disable_vblank
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|int
name|crtc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|irqreturn_t
name|via_driver_irq_handler
parameter_list|(
name|DRM_IRQ_ARGS
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|via_driver_irq_preinstall
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_driver_irq_postinstall
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|via_driver_irq_uninstall
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_dma_cleanup
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|via_init_command_verifier
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|via_driver_dma_quiescent
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|via_init_futex
parameter_list|(
name|drm_via_private_t
modifier|*
name|dev_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|via_cleanup_futex
parameter_list|(
name|drm_via_private_t
modifier|*
name|dev_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|via_release_futex
parameter_list|(
name|drm_via_private_t
modifier|*
name|dev_priv
parameter_list|,
name|int
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|via_reclaim_buffers_locked
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|struct
name|drm_file
modifier|*
name|file_priv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|via_lastclose
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|via_dmablit_handler
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|,
name|int
name|engine
parameter_list|,
name|int
name|from_irq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|via_init_dmablit
parameter_list|(
name|struct
name|drm_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

