begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (C) 2009-2012 Semihalf  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NANDSIM_SWAP_CHIP_H_
end_ifndef

begin_define
define|#
directive|define
name|_NANDSIM_SWAP_CHIP_H_
end_define

begin_struct
struct|struct
name|block_space
block|{
name|SLIST_ENTRY
argument_list|(
argument|block_space
argument_list|)
name|free_link
expr_stmt|;
name|STAILQ_ENTRY
argument_list|(
argument|block_space
argument_list|)
name|used_link
expr_stmt|;
name|struct
name|block_state
modifier|*
name|blk_state
decl_stmt|;
name|uint8_t
modifier|*
name|blk_ptr
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|BLOCK_ALLOCATED
value|0x1
end_define

begin_define
define|#
directive|define
name|BLOCK_SWAPPED
value|0x2
end_define

begin_define
define|#
directive|define
name|BLOCK_DIRTY
value|0x4
end_define

begin_struct
struct|struct
name|block_state
block|{
name|struct
name|block_space
modifier|*
name|blk_sp
decl_stmt|;
name|uint32_t
name|offset
decl_stmt|;
name|uint8_t
name|status
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|chip_swap
block|{
name|struct
name|block_state
modifier|*
name|blk_state
decl_stmt|;
name|SLIST_HEAD
argument_list|(
argument_list|,
argument|block_space
argument_list|)
name|free_bs
expr_stmt|;
name|STAILQ_HEAD
argument_list|(
argument_list|,
argument|block_space
argument_list|)
name|used_bs
expr_stmt|;
name|struct
name|ucred
modifier|*
name|swap_cred
decl_stmt|;
name|struct
name|vnode
modifier|*
name|swap_vp
decl_stmt|;
name|uint32_t
name|swap_offset
decl_stmt|;
name|uint32_t
name|blk_size
decl_stmt|;
name|uint32_t
name|nof_blks
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|struct
name|chip_swap
modifier|*
name|nandsim_swap_init
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|uint32_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nandsim_swap_destroy
parameter_list|(
name|struct
name|chip_swap
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|block_space
modifier|*
name|get_bs
parameter_list|(
name|struct
name|chip_swap
modifier|*
parameter_list|,
name|uint32_t
parameter_list|,
name|uint8_t
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _NANDSIM_SWAP_CHIP_H_ */
end_comment

end_unit

