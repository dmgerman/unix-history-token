begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (C) 2009-2012 Semihalf  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NANDSIM_CHIP_H
end_ifndef

begin_define
define|#
directive|define
name|_NANDSIM_CHIP_H
end_define

begin_include
include|#
directive|include
file|<sys/malloc.h>
end_include

begin_include
include|#
directive|include
file|<sys/callout.h>
end_include

begin_include
include|#
directive|include
file|<dev/nand/nand.h>
end_include

begin_include
include|#
directive|include
file|<dev/nand/nandsim.h>
end_include

begin_include
include|#
directive|include
file|<dev/nand/nandsim_swap.h>
end_include

begin_expr_stmt
name|MALLOC_DECLARE
argument_list|(
name|M_NANDSIM
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|MAX_CS_NUM
value|4
end_define

begin_struct_decl
struct_decl|struct
name|nandsim_chip
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|void
name|nandsim_evh_t
parameter_list|(
name|struct
name|nandsim_chip
modifier|*
name|chip
parameter_list|,
name|uint32_t
name|ev
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
end_typedef

begin_enum
enum|enum
name|addr_type
block|{
name|ADDR_NONE
block|,
name|ADDR_ID
block|,
name|ADDR_ROW
block|,
name|ADDR_ROWCOL
block|}
enum|;
end_enum

begin_struct
struct|struct
name|nandsim_softc
block|{
name|struct
name|nand_softc
name|nand_dev
decl_stmt|;
name|device_t
name|dev
decl_stmt|;
name|struct
name|nandsim_chip
modifier|*
name|chips
index|[
name|MAX_CS_NUM
index|]
decl_stmt|;
name|struct
name|nandsim_chip
modifier|*
name|active_chip
decl_stmt|;
name|uint8_t
name|address_cycle
decl_stmt|;
name|enum
name|addr_type
name|address_type
decl_stmt|;
name|int
name|log_idx
decl_stmt|;
name|char
modifier|*
name|log_buff
decl_stmt|;
name|struct
name|alq
modifier|*
name|alq
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nandsim_ev
block|{
name|STAILQ_ENTRY
argument_list|(
argument|nandsim_ev
argument_list|)
name|links
expr_stmt|;
name|struct
name|nandsim_chip
modifier|*
name|chip
decl_stmt|;
name|uint8_t
name|type
decl_stmt|;
name|void
modifier|*
name|data
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nandsim_data
block|{
name|uint8_t
modifier|*
name|data_ptr
decl_stmt|;
name|uint32_t
name|index
decl_stmt|;
name|uint32_t
name|size
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nandsim_block_state
block|{
name|int32_t
name|wear_lev
decl_stmt|;
name|uint8_t
name|is_bad
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|NANDSIM_CHIP_ACTIVE
value|0x1
end_define

begin_define
define|#
directive|define
name|NANDSIM_CHIP_FROZEN
value|0x2
end_define

begin_define
define|#
directive|define
name|NANDSIM_CHIP_GET_STATUS
value|0x4
end_define

begin_struct
struct|struct
name|nandsim_chip
block|{
name|struct
name|nandsim_softc
modifier|*
name|sc
decl_stmt|;
name|struct
name|thread
modifier|*
name|nandsim_td
decl_stmt|;
name|STAILQ_HEAD
argument_list|(
argument_list|,
argument|nandsim_ev
argument_list|)
name|nandsim_events
expr_stmt|;
name|nandsim_evh_t
modifier|*
name|ev_handler
decl_stmt|;
name|struct
name|mtx
name|ns_lock
decl_stmt|;
name|struct
name|callout
name|ns_callout
decl_stmt|;
name|struct
name|chip_geom
name|cg
decl_stmt|;
name|struct
name|nand_id
name|id
decl_stmt|;
name|struct
name|onfi_params
name|params
decl_stmt|;
name|struct
name|nandsim_data
name|data
decl_stmt|;
name|struct
name|nandsim_block_state
modifier|*
name|blk_state
decl_stmt|;
name|struct
name|chip_swap
modifier|*
name|swap
decl_stmt|;
name|uint32_t
name|error_ratio
decl_stmt|;
name|uint32_t
name|wear_level
decl_stmt|;
name|uint32_t
name|sm_state
decl_stmt|;
name|uint32_t
name|sm_addr_cycle
decl_stmt|;
name|uint32_t
name|erase_delay
decl_stmt|;
name|uint32_t
name|prog_delay
decl_stmt|;
name|uint32_t
name|read_delay
decl_stmt|;
name|struct
name|timeval
name|delay_tv
decl_stmt|;
name|uint8_t
name|flags
decl_stmt|;
name|uint8_t
name|chip_status
decl_stmt|;
name|uint8_t
name|ctrl_num
decl_stmt|;
name|uint8_t
name|chip_num
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|sim_ctrl_conf
block|{
name|uint8_t
name|num
decl_stmt|;
name|uint8_t
name|num_cs
decl_stmt|;
name|uint8_t
name|ecc
decl_stmt|;
name|uint8_t
name|running
decl_stmt|;
name|uint8_t
name|created
decl_stmt|;
name|device_t
name|sim_ctrl_dev
decl_stmt|;
name|struct
name|sim_chip
modifier|*
name|chips
index|[
name|MAX_CTRL_CS
index|]
decl_stmt|;
name|uint16_t
name|ecc_layout
index|[
name|MAX_ECC_BYTES
index|]
decl_stmt|;
name|char
name|filename
index|[
name|FILENAME_SIZE
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|NANDSIM_STATE_IDLE
value|0x0
end_define

begin_define
define|#
directive|define
name|NANDSIM_STATE_WAIT_ADDR_BYTE
value|0x1
end_define

begin_define
define|#
directive|define
name|NANDSIM_STATE_WAIT_CMD
value|0x2
end_define

begin_define
define|#
directive|define
name|NANDSIM_STATE_TIMEOUT
value|0x3
end_define

begin_define
define|#
directive|define
name|NANDSIM_STATE_WAIT_ADDR_ROW
value|0x4
end_define

begin_define
define|#
directive|define
name|NANDSIM_STATE_WAIT_ADDR_COL
value|0x5
end_define

begin_define
define|#
directive|define
name|NANDSIM_EV_START
value|0x1
end_define

begin_define
define|#
directive|define
name|NANDSIM_EV_CMD
value|0x2
end_define

begin_define
define|#
directive|define
name|NANDSIM_EV_ADDR
value|0x3
end_define

begin_define
define|#
directive|define
name|NANDSIM_EV_TIMEOUT
value|0x4
end_define

begin_define
define|#
directive|define
name|NANDSIM_EV_EXIT
value|0xff
end_define

begin_function_decl
name|struct
name|nandsim_chip
modifier|*
name|nandsim_chip_init
parameter_list|(
name|struct
name|nandsim_softc
modifier|*
parameter_list|,
name|uint8_t
parameter_list|,
name|struct
name|sim_chip
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nandsim_chip_destroy
parameter_list|(
name|struct
name|nandsim_chip
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nandsim_chip_freeze
parameter_list|(
name|struct
name|nandsim_chip
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nandsim_chip_timeout
parameter_list|(
name|struct
name|nandsim_chip
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nandsim_chip_check_bad_block
parameter_list|(
name|struct
name|nandsim_chip
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint8_t
name|nandchip_get_status
parameter_list|(
name|struct
name|nandsim_chip
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|destroy_event
parameter_list|(
name|struct
name|nandsim_ev
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|send_event
parameter_list|(
name|struct
name|nandsim_ev
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|nandsim_ev
modifier|*
name|create_event
parameter_list|(
name|struct
name|nandsim_chip
modifier|*
parameter_list|,
name|uint8_t
parameter_list|,
name|uint8_t
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  _NANDSIM_CHIP_H */
end_comment

end_unit

