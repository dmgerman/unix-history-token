begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (C) 2009-2012 Semihalf  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_DEV_NAND_H_
end_ifndef

begin_define
define|#
directive|define
name|_DEV_NAND_H_
end_define

begin_include
include|#
directive|include
file|<sys/bus.h>
end_include

begin_include
include|#
directive|include
file|<sys/param.h>
end_include

begin_include
include|#
directive|include
file|<sys/systm.h>
end_include

begin_include
include|#
directive|include
file|<sys/lock.h>
end_include

begin_include
include|#
directive|include
file|<sys/sx.h>
end_include

begin_include
include|#
directive|include
file|<sys/taskqueue.h>
end_include

begin_include
include|#
directive|include
file|<sys/queue.h>
end_include

begin_include
include|#
directive|include
file|<sys/bio.h>
end_include

begin_include
include|#
directive|include
file|<sys/lock.h>
end_include

begin_include
include|#
directive|include
file|<sys/mutex.h>
end_include

begin_include
include|#
directive|include
file|<sys/malloc.h>
end_include

begin_include
include|#
directive|include
file|<dev/nand/nand_dev.h>
end_include

begin_expr_stmt
name|MALLOC_DECLARE
argument_list|(
name|M_NAND
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* Read commands */
end_comment

begin_define
define|#
directive|define
name|NAND_CMD_READ
value|0x00
end_define

begin_define
define|#
directive|define
name|NAND_CMD_CHNG_READ_COL
value|0x05
end_define

begin_define
define|#
directive|define
name|NAND_CMD_READ_END
value|0x30
end_define

begin_define
define|#
directive|define
name|NAND_CMD_READ_CACHE
value|0x31
end_define

begin_define
define|#
directive|define
name|NAND_CMD_READ_CPBK
value|0x35
end_define

begin_define
define|#
directive|define
name|NAND_CMD_READ_CACHE_END
value|0x3F
end_define

begin_define
define|#
directive|define
name|NAND_CMD_CHNG_READ_COL_END
value|0xE0
end_define

begin_comment
comment|/* Erase commands */
end_comment

begin_define
define|#
directive|define
name|NAND_CMD_ERASE
value|0x60
end_define

begin_define
define|#
directive|define
name|NAND_CMD_ERASE_END
value|0xD0
end_define

begin_define
define|#
directive|define
name|NAND_CMD_ERASE_INTLV
value|0xD1
end_define

begin_comment
comment|/* Program commands */
end_comment

begin_define
define|#
directive|define
name|NAND_CMD_PROG
value|0x80
end_define

begin_define
define|#
directive|define
name|NAND_CMD_CHNG_WRITE_COL
value|0x85
end_define

begin_define
define|#
directive|define
name|NAND_CMD_PROG_END
value|0x10
end_define

begin_define
define|#
directive|define
name|NAND_CMD_PROG_INTLV
value|0x11
end_define

begin_define
define|#
directive|define
name|NAND_CMD_PROG_CACHE
value|0x15
end_define

begin_comment
comment|/* Misc commands */
end_comment

begin_define
define|#
directive|define
name|NAND_CMD_STATUS
value|0x70
end_define

begin_define
define|#
directive|define
name|NAND_CMD_STATUS_ENH
value|0x78
end_define

begin_define
define|#
directive|define
name|NAND_CMD_READ_ID
value|0x90
end_define

begin_define
define|#
directive|define
name|NAND_CMD_READ_PARAMETER
value|0xec
end_define

begin_define
define|#
directive|define
name|NAND_CMD_READ_UNIQUE_ID
value|0xed
end_define

begin_define
define|#
directive|define
name|NAND_CMD_GET_FEATURE
value|0xee
end_define

begin_define
define|#
directive|define
name|NAND_CMD_SET_FEATURE
value|0xef
end_define

begin_comment
comment|/* Reset commands */
end_comment

begin_define
define|#
directive|define
name|NAND_CMD_SYNCH_RESET
value|0xfc
end_define

begin_define
define|#
directive|define
name|NAND_CMD_RESET
value|0xff
end_define

begin_comment
comment|/* Small page flash commands */
end_comment

begin_define
define|#
directive|define
name|NAND_CMD_SMALLA
value|0x00
end_define

begin_define
define|#
directive|define
name|NAND_CMD_SMALLB
value|0x01
end_define

begin_define
define|#
directive|define
name|NAND_CMD_SMALLOOB
value|0x50
end_define

begin_define
define|#
directive|define
name|NAND_STATUS_FAIL
value|0x1
end_define

begin_define
define|#
directive|define
name|NAND_STATUS_FAILC
value|0x2
end_define

begin_define
define|#
directive|define
name|NAND_STATUS_ARDY
value|0x20
end_define

begin_define
define|#
directive|define
name|NAND_STATUS_RDY
value|0x40
end_define

begin_define
define|#
directive|define
name|NAND_STATUS_WP
value|0x80
end_define

begin_define
define|#
directive|define
name|NAND_LP_OOB_COLUMN_START
value|0x800
end_define

begin_define
define|#
directive|define
name|NAND_LP_OOBSZ
value|0x40
end_define

begin_define
define|#
directive|define
name|NAND_SP_OOB_COLUMN_START
value|0x200
end_define

begin_define
define|#
directive|define
name|NAND_SP_OOBSZ
value|0x10
end_define

begin_define
define|#
directive|define
name|PAGE_PARAM_LENGTH
value|0x100
end_define

begin_define
define|#
directive|define
name|PAGE_PARAMETER_DEF
value|0x0
end_define

begin_define
define|#
directive|define
name|PAGE_PARAMETER_RED_1
value|0x100
end_define

begin_define
define|#
directive|define
name|PAGE_PARAMETER_RED_2
value|0x200
end_define

begin_define
define|#
directive|define
name|ONFI_SIG_ADDR
value|0x20
end_define

begin_define
define|#
directive|define
name|NAND_MAX_CHIPS
value|0x4
end_define

begin_define
define|#
directive|define
name|NAND_MAX_OOBSZ
value|512
end_define

begin_define
define|#
directive|define
name|NAND_MAX_PAGESZ
value|16384
end_define

begin_define
define|#
directive|define
name|NAND_SMALL_PAGE_SIZE
value|0x200
end_define

begin_define
define|#
directive|define
name|NAND_16_BIT
value|0x00000001
end_define

begin_define
define|#
directive|define
name|NAND_ECC_NONE
value|0x0
end_define

begin_define
define|#
directive|define
name|NAND_ECC_SOFT
value|0x1
end_define

begin_define
define|#
directive|define
name|NAND_ECC_FULLHW
value|0x2
end_define

begin_define
define|#
directive|define
name|NAND_ECC_PARTHW
value|0x4
end_define

begin_define
define|#
directive|define
name|NAND_ECC_MODE_MASK
value|0x7
end_define

begin_define
define|#
directive|define
name|ECC_OK
value|0
end_define

begin_define
define|#
directive|define
name|ECC_CORRECTABLE
value|1
end_define

begin_define
define|#
directive|define
name|ECC_ERROR_ECC
value|(-1)
end_define

begin_define
define|#
directive|define
name|ECC_UNCORRECTABLE
value|(-2)
end_define

begin_define
define|#
directive|define
name|NAND_MAN_SAMSUNG
value|0xec
end_define

begin_define
define|#
directive|define
name|NAND_MAN_HYNIX
value|0xad
end_define

begin_define
define|#
directive|define
name|NAND_MAN_STMICRO
value|0x20
end_define

begin_define
define|#
directive|define
name|NAND_MAN_MICRON
value|0x2c
end_define

begin_struct
struct|struct
name|nand_id
block|{
name|uint8_t
name|man_id
decl_stmt|;
name|uint8_t
name|dev_id
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nand_params
block|{
name|struct
name|nand_id
name|id
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
name|uint32_t
name|chip_size
decl_stmt|;
name|uint32_t
name|page_size
decl_stmt|;
name|uint32_t
name|oob_size
decl_stmt|;
name|uint32_t
name|pages_per_block
decl_stmt|;
name|uint32_t
name|flags
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* nand debug levels */
end_comment

begin_define
define|#
directive|define
name|NDBG_NAND
value|0x01
end_define

begin_define
define|#
directive|define
name|NDBG_CDEV
value|0x02
end_define

begin_define
define|#
directive|define
name|NDBG_GEN
value|0x04
end_define

begin_define
define|#
directive|define
name|NDBG_GEOM
value|0x08
end_define

begin_define
define|#
directive|define
name|NDBG_BUS
value|0x10
end_define

begin_define
define|#
directive|define
name|NDBG_SIM
value|0x20
end_define

begin_define
define|#
directive|define
name|NDBG_CTRL
value|0x40
end_define

begin_define
define|#
directive|define
name|NDBG_DRV
value|0x80
end_define

begin_define
define|#
directive|define
name|NDBG_ECC
value|0x100
end_define

begin_comment
comment|/* nand_debug_function */
end_comment

begin_function_decl
name|void
name|nand_debug
parameter_list|(
name|int
name|level
parameter_list|,
specifier|const
name|char
modifier|*
name|fmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|int
name|nand_debug_flag
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* ONFI features bit*/
end_comment

begin_define
define|#
directive|define
name|ONFI_FEAT_16BIT
value|0x01
end_define

begin_define
define|#
directive|define
name|ONFI_FEAT_MULT_LUN
value|0x02
end_define

begin_define
define|#
directive|define
name|ONFI_FEAT_INTLV_OPS
value|0x04
end_define

begin_define
define|#
directive|define
name|ONFI_FEAT_CPBK_RESTRICT
value|0x08
end_define

begin_define
define|#
directive|define
name|ONFI_FEAT_SRC_SYNCH
value|0x10
end_define

begin_comment
comment|/* ONFI optional commands bits */
end_comment

begin_define
define|#
directive|define
name|ONFI_OPTCOM_PROG_CACHE
value|0x01
end_define

begin_define
define|#
directive|define
name|ONFI_OPTCOM_READ_CACHE
value|0x02
end_define

begin_define
define|#
directive|define
name|ONFI_OPTCOM_GETSET_FEAT
value|0x04
end_define

begin_define
define|#
directive|define
name|ONFI_OPTCOM_STATUS_ENH
value|0x08
end_define

begin_define
define|#
directive|define
name|ONFI_OPTCOM_COPYBACK
value|0x10
end_define

begin_define
define|#
directive|define
name|ONFI_OPTCOM_UNIQUE_ID
value|0x20
end_define

begin_comment
comment|/* Layout of parameter page is defined in ONFI */
end_comment

begin_struct
struct|struct
name|onfi_params
block|{
name|char
name|signature
index|[
literal|4
index|]
decl_stmt|;
name|uint16_t
name|rev
decl_stmt|;
name|uint16_t
name|features
decl_stmt|;
name|uint16_t
name|optional_commands
decl_stmt|;
name|uint8_t
name|primary_advanced_command
decl_stmt|;
name|uint8_t
name|res1
decl_stmt|;
name|uint16_t
name|extended_parameter_page_length
decl_stmt|;
name|uint8_t
name|parameter_page_count
decl_stmt|;
name|uint8_t
name|res2
index|[
literal|17
index|]
decl_stmt|;
name|char
name|manufacturer_name
index|[
literal|12
index|]
decl_stmt|;
name|char
name|device_model
index|[
literal|20
index|]
decl_stmt|;
name|uint8_t
name|manufacturer_id
decl_stmt|;
name|uint8_t
name|manufacture_date_yy
decl_stmt|;
name|uint8_t
name|manufacture_date_ww
decl_stmt|;
name|uint8_t
name|res3
index|[
literal|13
index|]
decl_stmt|;
name|uint32_t
name|bytes_per_page
decl_stmt|;
name|uint16_t
name|spare_bytes_per_page
decl_stmt|;
name|uint32_t
name|bytes_per_partial_page
decl_stmt|;
name|uint16_t
name|spare_bytes_per_partial_page
decl_stmt|;
name|uint32_t
name|pages_per_block
decl_stmt|;
name|uint32_t
name|blocks_per_lun
decl_stmt|;
name|uint8_t
name|luns
decl_stmt|;
name|uint8_t
name|address_cycles
decl_stmt|;
name|uint8_t
name|bits_per_cell
decl_stmt|;
name|uint16_t
name|max_bad_block_per_lun
decl_stmt|;
name|uint16_t
name|block_endurance
decl_stmt|;
name|uint8_t
name|guaranteed_valid_blocks
decl_stmt|;
name|uint16_t
name|valid_block_endurance
decl_stmt|;
name|uint8_t
name|programs_per_page
decl_stmt|;
name|uint8_t
name|partial_prog_attr
decl_stmt|;
name|uint8_t
name|bits_of_ecc
decl_stmt|;
name|uint8_t
name|interleaved_addr_bits
decl_stmt|;
name|uint8_t
name|interleaved_oper_attr
decl_stmt|;
name|uint8_t
name|eznand_support
decl_stmt|;
name|uint8_t
name|res4
index|[
literal|12
index|]
decl_stmt|;
name|uint8_t
name|pin_capacitance
decl_stmt|;
name|uint16_t
name|asynch_timing_mode_support
decl_stmt|;
name|uint16_t
name|asynch_prog_cache_timing_mode_support
decl_stmt|;
name|uint16_t
name|t_prog
decl_stmt|;
comment|/* us, max page program time */
name|uint16_t
name|t_bers
decl_stmt|;
comment|/* us, max block erase time */
name|uint16_t
name|t_r
decl_stmt|;
comment|/* us, max page read time */
name|uint16_t
name|t_ccs
decl_stmt|;
comment|/* ns, min change column setup time */
name|uint16_t
name|source_synch_timing_mode_support
decl_stmt|;
name|uint8_t
name|source_synch_feat
decl_stmt|;
name|uint16_t
name|clk_input_capacitance
decl_stmt|;
name|uint16_t
name|io_capacitance
decl_stmt|;
name|uint16_t
name|input_capacitance
decl_stmt|;
name|uint8_t
name|input_capacitance_max
decl_stmt|;
name|uint8_t
name|driver_strength_support
decl_stmt|;
name|uint16_t
name|t_r_interleaved
decl_stmt|;
name|uint16_t
name|t_adl
decl_stmt|;
name|uint16_t
name|t_r_eznand
decl_stmt|;
name|uint8_t
name|nv_ddr2_features
decl_stmt|;
name|uint8_t
name|nv_ddr2_warmup_cycles
decl_stmt|;
name|uint8_t
name|res5
index|[
literal|4
index|]
decl_stmt|;
name|uint16_t
name|vendor_rev
decl_stmt|;
name|uint8_t
name|vendor_spec
index|[
literal|88
index|]
decl_stmt|;
name|uint16_t
name|crc
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|onfi_params
argument_list|)
operator|==
literal|256
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|onfi_chip_params
block|{
name|uint32_t
name|blocks_per_lun
decl_stmt|;
name|uint32_t
name|pages_per_block
decl_stmt|;
name|uint32_t
name|bytes_per_page
decl_stmt|;
name|uint32_t
name|spare_bytes_per_page
decl_stmt|;
name|uint16_t
name|t_bers
decl_stmt|;
name|uint16_t
name|t_prog
decl_stmt|;
name|uint16_t
name|t_r
decl_stmt|;
name|uint16_t
name|t_ccs
decl_stmt|;
name|uint16_t
name|features
decl_stmt|;
name|uint8_t
name|address_cycles
decl_stmt|;
name|uint8_t
name|luns
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nand_ecc_data
block|{
name|int
name|eccsize
decl_stmt|;
comment|/* Number of data bytes per ECC step */
name|int
name|eccmode
decl_stmt|;
name|int
name|eccbytes
decl_stmt|;
comment|/* Number of ECC bytes per step */
name|uint16_t
modifier|*
name|eccpositions
decl_stmt|;
comment|/* Positions of ecc bytes */
name|uint8_t
name|ecccalculated
index|[
name|NAND_MAX_OOBSZ
index|]
decl_stmt|;
name|uint8_t
name|eccread
index|[
name|NAND_MAX_OOBSZ
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ecc_stat
block|{
name|uint32_t
name|ecc_succeded
decl_stmt|;
name|uint32_t
name|ecc_corrected
decl_stmt|;
name|uint32_t
name|ecc_failed
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|page_stat
block|{
name|struct
name|ecc_stat
name|ecc_stat
decl_stmt|;
name|uint32_t
name|page_read
decl_stmt|;
name|uint32_t
name|page_raw_read
decl_stmt|;
name|uint32_t
name|page_written
decl_stmt|;
name|uint32_t
name|page_raw_written
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|block_stat
block|{
name|uint32_t
name|block_erased
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|chip_geom
block|{
name|uint32_t
name|chip_size
decl_stmt|;
name|uint32_t
name|block_size
decl_stmt|;
name|uint32_t
name|page_size
decl_stmt|;
name|uint32_t
name|oob_size
decl_stmt|;
name|uint32_t
name|luns
decl_stmt|;
name|uint32_t
name|blks_per_lun
decl_stmt|;
name|uint32_t
name|blks_per_chip
decl_stmt|;
name|uint32_t
name|pgs_per_blk
decl_stmt|;
name|uint32_t
name|pg_mask
decl_stmt|;
name|uint32_t
name|blk_mask
decl_stmt|;
name|uint32_t
name|lun_mask
decl_stmt|;
name|uint8_t
name|blk_shift
decl_stmt|;
name|uint8_t
name|lun_shift
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nand_chip
block|{
name|device_t
name|dev
decl_stmt|;
name|struct
name|nand_id
name|id
decl_stmt|;
name|struct
name|chip_geom
name|chip_geom
decl_stmt|;
name|uint16_t
name|t_prog
decl_stmt|;
comment|/* us, max page program time */
name|uint16_t
name|t_bers
decl_stmt|;
comment|/* us, max block erase time */
name|uint16_t
name|t_r
decl_stmt|;
comment|/* us, max page read time */
name|uint16_t
name|t_ccs
decl_stmt|;
comment|/* ns, min change column setup time */
name|uint8_t
name|num
decl_stmt|;
name|uint8_t
name|flags
decl_stmt|;
name|struct
name|page_stat
modifier|*
name|pg_stat
decl_stmt|;
name|struct
name|block_stat
modifier|*
name|blk_stat
decl_stmt|;
name|struct
name|nand_softc
modifier|*
name|nand
decl_stmt|;
name|struct
name|nand_bbt
modifier|*
name|bbt
decl_stmt|;
name|struct
name|nand_ops
modifier|*
name|ops
decl_stmt|;
name|struct
name|cdev
modifier|*
name|cdev
decl_stmt|;
name|struct
name|disk
modifier|*
name|ndisk
decl_stmt|;
name|struct
name|disk
modifier|*
name|rdisk
decl_stmt|;
name|struct
name|bio_queue_head
name|bioq
decl_stmt|;
comment|/* bio queue */
name|struct
name|mtx
name|qlock
decl_stmt|;
comment|/* bioq lock */
name|struct
name|taskqueue
modifier|*
name|tq
decl_stmt|;
comment|/* private task queue for i/o request */
name|struct
name|task
name|iotask
decl_stmt|;
comment|/* i/o processing */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|nand_softc
block|{
name|uint8_t
name|flags
decl_stmt|;
name|char
modifier|*
name|chip_cdev_name
decl_stmt|;
name|struct
name|nand_ecc_data
name|ecc
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* NAND ops */
end_comment

begin_function_decl
name|int
name|nand_erase_blocks
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|off_t
name|offset
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_prog_pages
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|uint32_t
name|offset
parameter_list|,
name|uint8_t
modifier|*
name|buf
parameter_list|,
name|uint32_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_read_pages
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|uint32_t
name|offset
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|uint32_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_read_pages_raw
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|uint32_t
name|offset
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|uint32_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_prog_pages_raw
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|uint32_t
name|offset
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|uint32_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_read_oob
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|uint32_t
name|page
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|uint32_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_prog_oob
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|uint32_t
name|page
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|uint32_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_select_cs
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint8_t
name|cs
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_read_parameter
parameter_list|(
name|struct
name|nand_softc
modifier|*
name|nand
parameter_list|,
name|struct
name|onfi_params
modifier|*
name|param
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_synch_reset
parameter_list|(
name|struct
name|nand_softc
modifier|*
name|nand
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_chng_read_col
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint32_t
name|col
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_chng_write_col
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint32_t
name|col
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_get_feature
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint8_t
name|feat
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_set_feature
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint8_t
name|feat
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_erase_block_intlv
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint32_t
name|block
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_copyback_read
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint32_t
name|page
parameter_list|,
name|uint32_t
name|col
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_copyback_prog
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint32_t
name|page
parameter_list|,
name|uint32_t
name|col
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_copyback_prog_intlv
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint32_t
name|page
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_prog_cache
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint32_t
name|page
parameter_list|,
name|uint32_t
name|col
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|,
name|uint8_t
name|end
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_prog_intlv
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint32_t
name|page
parameter_list|,
name|uint32_t
name|col
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_read_cache
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint32_t
name|page
parameter_list|,
name|uint32_t
name|col
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|,
name|uint8_t
name|end
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_write_ecc
parameter_list|(
name|struct
name|nand_softc
modifier|*
name|nand
parameter_list|,
name|uint32_t
name|page
parameter_list|,
name|uint8_t
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_read_ecc
parameter_list|(
name|struct
name|nand_softc
modifier|*
name|nand
parameter_list|,
name|uint32_t
name|page
parameter_list|,
name|uint8_t
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_softecc_get
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint8_t
modifier|*
name|buf
parameter_list|,
name|int
name|pagesize
parameter_list|,
name|uint8_t
modifier|*
name|ecc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_softecc_correct
parameter_list|(
name|device_t
name|dev
parameter_list|,
name|uint8_t
modifier|*
name|buf
parameter_list|,
name|int
name|pagesize
parameter_list|,
name|uint8_t
modifier|*
name|readecc
parameter_list|,
name|uint8_t
modifier|*
name|calcecc
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Chip initialization */
end_comment

begin_function_decl
name|void
name|nand_init
parameter_list|(
name|struct
name|nand_softc
modifier|*
name|nand
parameter_list|,
name|device_t
name|dev
parameter_list|,
name|int
name|ecc_mode
parameter_list|,
name|int
name|ecc_bytes
parameter_list|,
name|int
name|ecc_size
parameter_list|,
name|uint16_t
modifier|*
name|eccposition
parameter_list|,
name|char
modifier|*
name|cdev_name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nand_detach
parameter_list|(
name|struct
name|nand_softc
modifier|*
name|nand
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|nand_params
modifier|*
name|nand_get_params
parameter_list|(
name|struct
name|nand_id
modifier|*
name|id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nand_onfi_set_params
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|struct
name|onfi_chip_params
modifier|*
name|params
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nand_set_params
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|struct
name|nand_params
modifier|*
name|params
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_init_stat
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nand_destroy_stat
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* BBT */
end_comment

begin_function_decl
name|int
name|nand_init_bbt
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nand_destroy_bbt
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_update_bbt
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_mark_bad_block
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|uint32_t
name|block_num
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_check_bad_block
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|uint32_t
name|block_num
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* cdev creation/removal */
end_comment

begin_function_decl
name|int
name|nand_make_dev
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nand_destroy_dev
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|create_geom_disk
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|create_geom_raw_disk
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|destroy_geom_disk
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|destroy_geom_raw_disk
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|init_chip_geom
parameter_list|(
name|struct
name|chip_geom
modifier|*
name|cg
parameter_list|,
name|uint32_t
name|luns
parameter_list|,
name|uint32_t
name|blks_per_lun
parameter_list|,
name|uint32_t
name|pgs_per_blk
parameter_list|,
name|uint32_t
name|pg_size
parameter_list|,
name|uint32_t
name|oob_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_row_to_blkpg
parameter_list|(
name|struct
name|chip_geom
modifier|*
name|cg
parameter_list|,
name|uint32_t
name|row
parameter_list|,
name|uint32_t
modifier|*
name|lun
parameter_list|,
name|uint32_t
modifier|*
name|blk
parameter_list|,
name|uint32_t
modifier|*
name|pg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|page_to_row
parameter_list|(
name|struct
name|chip_geom
modifier|*
name|cg
parameter_list|,
name|uint32_t
name|page
parameter_list|,
name|uint32_t
modifier|*
name|row
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|nand_check_page_boundary
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|uint32_t
name|page
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|nand_get_chip_param
parameter_list|(
name|struct
name|nand_chip
modifier|*
name|chip
parameter_list|,
name|struct
name|chip_param_io
modifier|*
name|param
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _DEV_NAND_H_ */
end_comment

end_unit

