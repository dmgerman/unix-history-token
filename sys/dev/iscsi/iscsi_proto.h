begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2012 The FreeBSD Foundation  * All rights reserved.  *  * This software was developed by Edward Tomasz Napierala under sponsorship  * from the FreeBSD Foundation.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|ISCSI_PROTO_H
end_ifndef

begin_define
define|#
directive|define
name|ISCSI_PROTO_H
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|CTASSERT
end_ifndef

begin_define
define|#
directive|define
name|CTASSERT
parameter_list|(
name|x
parameter_list|)
value|_CTASSERT(x, __LINE__)
end_define

begin_define
define|#
directive|define
name|_CTASSERT
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|__CTASSERT(x, y)
end_define

begin_define
define|#
directive|define
name|__CTASSERT
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|typedef char __assert_ ## y [(x) ? 1 : -1]
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|ISCSI_SNGT
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|((int32_t)(x) - (int32_t)(y)> 0)
end_define

begin_define
define|#
directive|define
name|ISCSI_SNLT
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|((int32_t)(x) - (int32_t)(y)< 0)
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_SIZE
value|48
end_define

begin_define
define|#
directive|define
name|ISCSI_HEADER_DIGEST_SIZE
value|4
end_define

begin_define
define|#
directive|define
name|ISCSI_DATA_DIGEST_SIZE
value|4
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_IMMEDIATE
value|0x40
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_NOP_OUT
value|0x00
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_SCSI_COMMAND
value|0x01
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_TASK_REQUEST
value|0x02
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_LOGIN_REQUEST
value|0x03
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_TEXT_REQUEST
value|0x04
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_SCSI_DATA_OUT
value|0x05
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_LOGOUT_REQUEST
value|0x06
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_NOP_IN
value|0x20
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_SCSI_RESPONSE
value|0x21
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_TASK_RESPONSE
value|0x22
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_LOGIN_RESPONSE
value|0x23
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_TEXT_RESPONSE
value|0x24
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_SCSI_DATA_IN
value|0x25
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_LOGOUT_RESPONSE
value|0x26
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_R2T
value|0x31
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_ASYNC_MESSAGE
value|0x32
end_define

begin_define
define|#
directive|define
name|ISCSI_BHS_OPCODE_REJECT
value|0x3f
end_define

begin_struct
struct|struct
name|iscsi_bhs
block|{
name|uint8_t
name|bhs_opcode
decl_stmt|;
name|uint8_t
name|bhs_opcode_specific1
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|bhs_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhs_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhs_lun
decl_stmt|;
name|uint8_t
name|bhs_inititator_task_tag
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|bhs_opcode_specific4
index|[
literal|28
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|BHSSC_FLAGS_F
value|0x80
end_define

begin_define
define|#
directive|define
name|BHSSC_FLAGS_R
value|0x40
end_define

begin_define
define|#
directive|define
name|BHSSC_FLAGS_W
value|0x20
end_define

begin_define
define|#
directive|define
name|BHSSC_FLAGS_ATTR
value|0x07
end_define

begin_define
define|#
directive|define
name|BHSSC_FLAGS_ATTR_UNTAGGED
value|0
end_define

begin_define
define|#
directive|define
name|BHSSC_FLAGS_ATTR_SIMPLE
value|1
end_define

begin_define
define|#
directive|define
name|BHSSC_FLAGS_ATTR_ORDERED
value|2
end_define

begin_define
define|#
directive|define
name|BHSSC_FLAGS_ATTR_HOQ
value|3
end_define

begin_define
define|#
directive|define
name|BHSSC_FLAGS_ATTR_ACA
value|4
end_define

begin_struct
struct|struct
name|iscsi_bhs_scsi_command
block|{
name|uint8_t
name|bhssc_opcode
decl_stmt|;
name|uint8_t
name|bhssc_flags
decl_stmt|;
name|uint8_t
name|bhssc_reserved
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|bhssc_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhssc_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhssc_lun
decl_stmt|;
name|uint32_t
name|bhssc_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhssc_expected_data_transfer_length
decl_stmt|;
name|uint32_t
name|bhssc_cmdsn
decl_stmt|;
name|uint32_t
name|bhssc_expstatsn
decl_stmt|;
name|uint8_t
name|bhssc_cdb
index|[
literal|16
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_scsi_command
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|BHSSR_FLAGS_RESIDUAL_UNDERFLOW
value|0x02
end_define

begin_define
define|#
directive|define
name|BHSSR_FLAGS_RESIDUAL_OVERFLOW
value|0x04
end_define

begin_define
define|#
directive|define
name|BHSSR_RESPONSE_COMMAND_COMPLETED
value|0x00
end_define

begin_struct
struct|struct
name|iscsi_bhs_scsi_response
block|{
name|uint8_t
name|bhssr_opcode
decl_stmt|;
name|uint8_t
name|bhssr_flags
decl_stmt|;
name|uint8_t
name|bhssr_response
decl_stmt|;
name|uint8_t
name|bhssr_status
decl_stmt|;
name|uint8_t
name|bhssr_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhssr_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint16_t
name|bhssr_status_qualifier
decl_stmt|;
name|uint16_t
name|bhssr_reserved
decl_stmt|;
name|uint32_t
name|bhssr_reserved2
decl_stmt|;
name|uint32_t
name|bhssr_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhssr_snack_tag
decl_stmt|;
name|uint32_t
name|bhssr_statsn
decl_stmt|;
name|uint32_t
name|bhssr_expcmdsn
decl_stmt|;
name|uint32_t
name|bhssr_maxcmdsn
decl_stmt|;
name|uint32_t
name|bhssr_expdatasn
decl_stmt|;
name|uint32_t
name|bhssr_bidirectional_read_residual_count
decl_stmt|;
name|uint32_t
name|bhssr_residual_count
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_scsi_response
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|BHSTMR_FUNCTION_ABORT_TASK
value|1
end_define

begin_define
define|#
directive|define
name|BHSTMR_FUNCTION_ABORT_TASK_SET
value|2
end_define

begin_define
define|#
directive|define
name|BHSTMR_FUNCTION_CLEAR_ACA
value|3
end_define

begin_define
define|#
directive|define
name|BHSTMR_FUNCTION_CLEAR_TASK_SET
value|4
end_define

begin_define
define|#
directive|define
name|BHSTMR_FUNCTION_LOGICAL_UNIT_RESET
value|5
end_define

begin_define
define|#
directive|define
name|BHSTMR_FUNCTION_TARGET_WARM_RESET
value|6
end_define

begin_define
define|#
directive|define
name|BHSTMR_FUNCTION_TARGET_COLD_RESET
value|7
end_define

begin_define
define|#
directive|define
name|BHSTMR_FUNCTION_TASK_REASSIGN
value|8
end_define

begin_define
define|#
directive|define
name|BHSTMR_FUNCTION_QUERY_TASK
value|9
end_define

begin_define
define|#
directive|define
name|BHSTMR_FUNCTION_QUERY_TASK_SET
value|10
end_define

begin_define
define|#
directive|define
name|BHSTMR_FUNCTION_I_T_NEXUS_RESET
value|11
end_define

begin_define
define|#
directive|define
name|BHSTMR_FUNCTION_QUERY_ASYNC_EVENT
value|12
end_define

begin_struct
struct|struct
name|iscsi_bhs_task_management_request
block|{
name|uint8_t
name|bhstmr_opcode
decl_stmt|;
name|uint8_t
name|bhstmr_function
decl_stmt|;
name|uint8_t
name|bhstmr_reserved
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|bhstmr_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhstmr_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhstmr_lun
decl_stmt|;
name|uint32_t
name|bhstmr_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhstmr_referenced_task_tag
decl_stmt|;
name|uint32_t
name|bhstmr_cmdsn
decl_stmt|;
name|uint32_t
name|bhstmr_expstatsn
decl_stmt|;
name|uint32_t
name|bhstmr_refcmdsn
decl_stmt|;
name|uint32_t
name|bhstmr_expdatasn
decl_stmt|;
name|uint64_t
name|bhstmr_reserved2
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_task_management_request
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|BHSTMR_RESPONSE_FUNCTION_COMPLETE
value|0
end_define

begin_define
define|#
directive|define
name|BHSTMR_RESPONSE_TASK_DOES_NOT_EXIST
value|1
end_define

begin_define
define|#
directive|define
name|BHSTMR_RESPONSE_LUN_DOES_NOT_EXIST
value|2
end_define

begin_define
define|#
directive|define
name|BHSTMR_RESPONSE_TASK_STILL_ALLEGIANT
value|3
end_define

begin_define
define|#
directive|define
name|BHSTMR_RESPONSE_TASK_ALL_REASS_NOT_SUPP
value|4
end_define

begin_define
define|#
directive|define
name|BHSTMR_RESPONSE_FUNCTION_NOT_SUPPORTED
value|5
end_define

begin_define
define|#
directive|define
name|BHSTMR_RESPONSE_FUNCTION_AUTH_FAIL
value|6
end_define

begin_define
define|#
directive|define
name|BHSTMR_RESPONSE_FUNCTION_SUCCEEDED
value|7
end_define

begin_define
define|#
directive|define
name|BHSTMR_RESPONSE_FUNCTION_REJECTED
value|255
end_define

begin_struct
struct|struct
name|iscsi_bhs_task_management_response
block|{
name|uint8_t
name|bhstmr_opcode
decl_stmt|;
name|uint8_t
name|bhstmr_flags
decl_stmt|;
name|uint8_t
name|bhstmr_response
decl_stmt|;
name|uint8_t
name|bhstmr_reserved
decl_stmt|;
name|uint8_t
name|bhstmr_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhstmr_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|bhstmr_additional_reponse_information
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|bhstmr_reserved2
index|[
literal|5
index|]
decl_stmt|;
name|uint32_t
name|bhstmr_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhstmr_reserved3
decl_stmt|;
name|uint32_t
name|bhstmr_statsn
decl_stmt|;
name|uint32_t
name|bhstmr_expcmdsn
decl_stmt|;
name|uint32_t
name|bhstmr_maxcmdsn
decl_stmt|;
name|uint8_t
name|bhstmr_reserved4
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_task_management_response
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|BHSLR_FLAGS_TRANSIT
value|0x80
end_define

begin_define
define|#
directive|define
name|BHSLR_FLAGS_CONTINUE
value|0x40
end_define

begin_define
define|#
directive|define
name|BHSLR_STAGE_SECURITY_NEGOTIATION
value|0
end_define

begin_define
define|#
directive|define
name|BHSLR_STAGE_OPERATIONAL_NEGOTIATION
value|1
end_define

begin_define
define|#
directive|define
name|BHSLR_STAGE_FULL_FEATURE_PHASE
value|3
end_define

begin_comment
comment|/* Yes, 3. */
end_comment

begin_struct
struct|struct
name|iscsi_bhs_login_request
block|{
name|uint8_t
name|bhslr_opcode
decl_stmt|;
name|uint8_t
name|bhslr_flags
decl_stmt|;
name|uint8_t
name|bhslr_version_max
decl_stmt|;
name|uint8_t
name|bhslr_version_min
decl_stmt|;
name|uint8_t
name|bhslr_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhslr_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|bhslr_isid
index|[
literal|6
index|]
decl_stmt|;
name|uint16_t
name|bhslr_tsih
decl_stmt|;
name|uint32_t
name|bhslr_initiator_task_tag
decl_stmt|;
name|uint16_t
name|bhslr_cid
decl_stmt|;
name|uint16_t
name|bhslr_reserved
decl_stmt|;
name|uint32_t
name|bhslr_cmdsn
decl_stmt|;
name|uint32_t
name|bhslr_expstatsn
decl_stmt|;
name|uint8_t
name|bhslr_reserved2
index|[
literal|16
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_login_request
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|iscsi_bhs_login_response
block|{
name|uint8_t
name|bhslr_opcode
decl_stmt|;
name|uint8_t
name|bhslr_flags
decl_stmt|;
name|uint8_t
name|bhslr_version_max
decl_stmt|;
name|uint8_t
name|bhslr_version_active
decl_stmt|;
name|uint8_t
name|bhslr_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhslr_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|bhslr_isid
index|[
literal|6
index|]
decl_stmt|;
name|uint16_t
name|bhslr_tsih
decl_stmt|;
name|uint32_t
name|bhslr_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhslr_reserved
decl_stmt|;
name|uint32_t
name|bhslr_statsn
decl_stmt|;
name|uint32_t
name|bhslr_expcmdsn
decl_stmt|;
name|uint32_t
name|bhslr_maxcmdsn
decl_stmt|;
name|uint8_t
name|bhslr_status_class
decl_stmt|;
name|uint8_t
name|bhslr_status_detail
decl_stmt|;
name|uint16_t
name|bhslr_reserved2
decl_stmt|;
name|uint8_t
name|bhslr_reserved3
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_login_response
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|BHSTR_FLAGS_FINAL
value|0x80
end_define

begin_define
define|#
directive|define
name|BHSTR_FLAGS_CONTINUE
value|0x40
end_define

begin_struct
struct|struct
name|iscsi_bhs_text_request
block|{
name|uint8_t
name|bhstr_opcode
decl_stmt|;
name|uint8_t
name|bhstr_flags
decl_stmt|;
name|uint16_t
name|bhstr_reserved
decl_stmt|;
name|uint8_t
name|bhstr_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhstr_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhstr_lun
decl_stmt|;
name|uint32_t
name|bhstr_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhstr_target_transfer_tag
decl_stmt|;
name|uint32_t
name|bhstr_cmdsn
decl_stmt|;
name|uint32_t
name|bhstr_expstatsn
decl_stmt|;
name|uint8_t
name|bhstr_reserved2
index|[
literal|16
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_text_request
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|iscsi_bhs_text_response
block|{
name|uint8_t
name|bhstr_opcode
decl_stmt|;
name|uint8_t
name|bhstr_flags
decl_stmt|;
name|uint16_t
name|bhstr_reserved
decl_stmt|;
name|uint8_t
name|bhstr_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhstr_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhstr_lun
decl_stmt|;
name|uint32_t
name|bhstr_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhstr_target_transfer_tag
decl_stmt|;
name|uint32_t
name|bhstr_statsn
decl_stmt|;
name|uint32_t
name|bhstr_expcmdsn
decl_stmt|;
name|uint32_t
name|bhstr_maxcmdsn
decl_stmt|;
name|uint8_t
name|bhstr_reserved2
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_text_response
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|BHSDO_FLAGS_F
value|0x80
end_define

begin_struct
struct|struct
name|iscsi_bhs_data_out
block|{
name|uint8_t
name|bhsdo_opcode
decl_stmt|;
name|uint8_t
name|bhsdo_flags
decl_stmt|;
name|uint8_t
name|bhsdo_reserved
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|bhsdo_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhsdo_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhsdo_lun
decl_stmt|;
name|uint32_t
name|bhsdo_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhsdo_target_transfer_tag
decl_stmt|;
name|uint32_t
name|bhsdo_reserved2
decl_stmt|;
name|uint32_t
name|bhsdo_expstatsn
decl_stmt|;
name|uint32_t
name|bhsdo_reserved3
decl_stmt|;
name|uint32_t
name|bhsdo_datasn
decl_stmt|;
name|uint32_t
name|bhsdo_buffer_offset
decl_stmt|;
name|uint32_t
name|bhsdo_reserved4
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_data_out
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|BHSDI_FLAGS_F
value|0x80
end_define

begin_define
define|#
directive|define
name|BHSDI_FLAGS_A
value|0x40
end_define

begin_define
define|#
directive|define
name|BHSDI_FLAGS_O
value|0x04
end_define

begin_define
define|#
directive|define
name|BHSDI_FLAGS_U
value|0x02
end_define

begin_define
define|#
directive|define
name|BHSDI_FLAGS_S
value|0x01
end_define

begin_struct
struct|struct
name|iscsi_bhs_data_in
block|{
name|uint8_t
name|bhsdi_opcode
decl_stmt|;
name|uint8_t
name|bhsdi_flags
decl_stmt|;
name|uint8_t
name|bhsdi_reserved
decl_stmt|;
name|uint8_t
name|bhsdi_status
decl_stmt|;
name|uint8_t
name|bhsdi_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhsdi_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhsdi_lun
decl_stmt|;
name|uint32_t
name|bhsdi_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhsdi_target_transfer_tag
decl_stmt|;
name|uint32_t
name|bhsdi_statsn
decl_stmt|;
name|uint32_t
name|bhsdi_expcmdsn
decl_stmt|;
name|uint32_t
name|bhsdi_maxcmdsn
decl_stmt|;
name|uint32_t
name|bhsdi_datasn
decl_stmt|;
name|uint32_t
name|bhsdi_buffer_offset
decl_stmt|;
name|uint32_t
name|bhsdi_residual_count
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_data_in
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|iscsi_bhs_r2t
block|{
name|uint8_t
name|bhsr2t_opcode
decl_stmt|;
name|uint8_t
name|bhsr2t_flags
decl_stmt|;
name|uint16_t
name|bhsr2t_reserved
decl_stmt|;
name|uint8_t
name|bhsr2t_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhsr2t_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhsr2t_lun
decl_stmt|;
name|uint32_t
name|bhsr2t_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhsr2t_target_transfer_tag
decl_stmt|;
name|uint32_t
name|bhsr2t_statsn
decl_stmt|;
name|uint32_t
name|bhsr2t_expcmdsn
decl_stmt|;
name|uint32_t
name|bhsr2t_maxcmdsn
decl_stmt|;
name|uint32_t
name|bhsr2t_r2tsn
decl_stmt|;
name|uint32_t
name|bhsr2t_buffer_offset
decl_stmt|;
name|uint32_t
name|bhsr2t_desired_data_transfer_length
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_r2t
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|iscsi_bhs_nop_out
block|{
name|uint8_t
name|bhsno_opcode
decl_stmt|;
name|uint8_t
name|bhsno_flags
decl_stmt|;
name|uint16_t
name|bhsno_reserved
decl_stmt|;
name|uint8_t
name|bhsno_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhsno_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhsno_lun
decl_stmt|;
name|uint32_t
name|bhsno_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhsno_target_transfer_tag
decl_stmt|;
name|uint32_t
name|bhsno_cmdsn
decl_stmt|;
name|uint32_t
name|bhsno_expstatsn
decl_stmt|;
name|uint8_t
name|bhsno_reserved2
index|[
literal|16
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_nop_out
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_struct
struct|struct
name|iscsi_bhs_nop_in
block|{
name|uint8_t
name|bhsni_opcode
decl_stmt|;
name|uint8_t
name|bhsni_flags
decl_stmt|;
name|uint16_t
name|bhsni_reserved
decl_stmt|;
name|uint8_t
name|bhsni_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhsni_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhsni_lun
decl_stmt|;
name|uint32_t
name|bhsni_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhsni_target_transfer_tag
decl_stmt|;
name|uint32_t
name|bhsni_statsn
decl_stmt|;
name|uint32_t
name|bhsni_expcmdsn
decl_stmt|;
name|uint32_t
name|bhsni_maxcmdsn
decl_stmt|;
name|uint8_t
name|bhsno_reserved2
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_nop_in
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|BHSLR_REASON_CLOSE_SESSION
value|0
end_define

begin_define
define|#
directive|define
name|BHSLR_REASON_CLOSE_CONNECTION
value|1
end_define

begin_define
define|#
directive|define
name|BHSLR_REASON_REMOVE_FOR_RECOVERY
value|2
end_define

begin_struct
struct|struct
name|iscsi_bhs_logout_request
block|{
name|uint8_t
name|bhslr_opcode
decl_stmt|;
name|uint8_t
name|bhslr_reason
decl_stmt|;
name|uint16_t
name|bhslr_reserved
decl_stmt|;
name|uint8_t
name|bhslr_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhslr_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhslr_reserved2
decl_stmt|;
name|uint32_t
name|bhslr_initiator_task_tag
decl_stmt|;
name|uint16_t
name|bhslr_cid
decl_stmt|;
name|uint16_t
name|bhslr_reserved3
decl_stmt|;
name|uint32_t
name|bhslr_cmdsn
decl_stmt|;
name|uint32_t
name|bhslr_expstatsn
decl_stmt|;
name|uint8_t
name|bhslr_reserved4
index|[
literal|16
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_logout_request
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|BHSLR_RESPONSE_CLOSED_SUCCESSFULLY
value|0
end_define

begin_define
define|#
directive|define
name|BHSLR_RESPONSE_RECOVERY_NOT_SUPPORTED
value|2
end_define

begin_struct
struct|struct
name|iscsi_bhs_logout_response
block|{
name|uint8_t
name|bhslr_opcode
decl_stmt|;
name|uint8_t
name|bhslr_flags
decl_stmt|;
name|uint8_t
name|bhslr_response
decl_stmt|;
name|uint8_t
name|bhslr_reserved
decl_stmt|;
name|uint8_t
name|bhslr_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhslr_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhslr_reserved2
decl_stmt|;
name|uint32_t
name|bhslr_initiator_task_tag
decl_stmt|;
name|uint32_t
name|bhslr_reserved3
decl_stmt|;
name|uint32_t
name|bhslr_statsn
decl_stmt|;
name|uint32_t
name|bhslr_expcmdsn
decl_stmt|;
name|uint32_t
name|bhslr_maxcmdsn
decl_stmt|;
name|uint32_t
name|bhslr_reserved4
decl_stmt|;
name|uint16_t
name|bhslr_time2wait
decl_stmt|;
name|uint16_t
name|bhslr_time2retain
decl_stmt|;
name|uint32_t
name|bhslr_reserved5
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_logout_response
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|BHSAM_EVENT_TARGET_REQUESTS_LOGOUT
value|1
end_define

begin_define
define|#
directive|define
name|BHSAM_EVENT_TARGET_TERMINATES_CONNECTION
value|2
end_define

begin_define
define|#
directive|define
name|BHSAM_EVENT_TARGET_TERMINATES_SESSION
value|3
end_define

begin_struct
struct|struct
name|iscsi_bhs_asynchronous_message
block|{
name|uint8_t
name|bhsam_opcode
decl_stmt|;
name|uint8_t
name|bhsam_flags
decl_stmt|;
name|uint16_t
name|bhsam_reserved
decl_stmt|;
name|uint8_t
name|bhsam_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhsam_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhsam_lun
decl_stmt|;
name|uint32_t
name|bhsam_0xffffffff
decl_stmt|;
name|uint32_t
name|bhsam_reserved2
decl_stmt|;
name|uint32_t
name|bhsam_statsn
decl_stmt|;
name|uint32_t
name|bhsam_expcmdsn
decl_stmt|;
name|uint32_t
name|bhsam_maxcmdsn
decl_stmt|;
name|uint8_t
name|bhsam_async_event
decl_stmt|;
name|uint8_t
name|bhsam_async_vcode
decl_stmt|;
name|uint16_t
name|bhsam_parameter1
decl_stmt|;
name|uint16_t
name|bhsam_parameter2
decl_stmt|;
name|uint16_t
name|bhsam_parameter3
decl_stmt|;
name|uint32_t
name|bhsam_reserved3
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_asynchronous_message
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_define
define|#
directive|define
name|BHSSR_REASON_DATA_DIGEST_ERROR
value|0x02
end_define

begin_define
define|#
directive|define
name|BHSSR_PROTOCOL_ERROR
value|0x04
end_define

begin_define
define|#
directive|define
name|BHSSR_COMMAND_NOT_SUPPORTED
value|0x05
end_define

begin_define
define|#
directive|define
name|BHSSR_INVALID_PDU_FIELD
value|0x09
end_define

begin_struct
struct|struct
name|iscsi_bhs_reject
block|{
name|uint8_t
name|bhsr_opcode
decl_stmt|;
name|uint8_t
name|bhsr_flags
decl_stmt|;
name|uint8_t
name|bhsr_reason
decl_stmt|;
name|uint8_t
name|bhsr_reserved
decl_stmt|;
name|uint8_t
name|bhsr_total_ahs_len
decl_stmt|;
name|uint8_t
name|bhsr_data_segment_len
index|[
literal|3
index|]
decl_stmt|;
name|uint64_t
name|bhsr_reserved2
decl_stmt|;
name|uint32_t
name|bhsr_0xffffffff
decl_stmt|;
name|uint32_t
name|bhsr_reserved3
decl_stmt|;
name|uint32_t
name|bhsr_statsn
decl_stmt|;
name|uint32_t
name|bhsr_expcmdsn
decl_stmt|;
name|uint32_t
name|bhsr_maxcmdsn
decl_stmt|;
name|uint32_t
name|bhsr_datasn_r2tsn
decl_stmt|;
name|uint32_t
name|bhsr_reserved4
decl_stmt|;
name|uint32_t
name|bhsr_reserved5
decl_stmt|;
block|}
struct|;
end_struct

begin_expr_stmt
name|CTASSERT
argument_list|(
sizeof|sizeof
argument_list|(
expr|struct
name|iscsi_bhs_reject
argument_list|)
operator|==
name|ISCSI_BHS_SIZE
argument_list|)
expr_stmt|;
end_expr_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !ISCSI_PROTO_H */
end_comment

end_unit

