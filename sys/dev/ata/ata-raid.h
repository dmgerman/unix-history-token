begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2000 - 2003 SÃ¸ren Schmidt<sos@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer,  *    without modification, immediately at the beginning of the file.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_comment
comment|/* misc defines */
end_comment

begin_define
define|#
directive|define
name|MAX_ARRAYS
value|16
end_define

begin_define
define|#
directive|define
name|MAX_DISKS
value|16
end_define

begin_define
define|#
directive|define
name|AR_PROXIMITY
value|2048
end_define

begin_define
define|#
directive|define
name|AR_READ
value|0x01
end_define

begin_define
define|#
directive|define
name|AR_WRITE
value|0x02
end_define

begin_define
define|#
directive|define
name|AR_WAIT
value|0x04
end_define

begin_define
define|#
directive|define
name|AR_STRATEGY
parameter_list|(
name|x
parameter_list|)
value|(x)->bio_disk->d_strategy((x))
end_define

begin_define
define|#
directive|define
name|AD_SOFTC
parameter_list|(
name|x
parameter_list|)
value|((struct ad_softc *)(x.device->driver))
end_define

begin_define
define|#
directive|define
name|ATA_MAGIC
value|"FreeBSD ATA driver RAID "
end_define

begin_struct
struct|struct
name|ar_disk
block|{
name|struct
name|ata_device
modifier|*
name|device
decl_stmt|;
name|u_int64_t
name|disk_sectors
decl_stmt|;
comment|/* sectors on this disk */
name|off_t
name|last_lba
decl_stmt|;
comment|/* last lba used */
name|int
name|flags
decl_stmt|;
define|#
directive|define
name|AR_DF_PRESENT
value|0x00000001
define|#
directive|define
name|AR_DF_ASSIGNED
value|0x00000002
define|#
directive|define
name|AR_DF_SPARE
value|0x00000004
define|#
directive|define
name|AR_DF_ONLINE
value|0x00000008
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ar_softc
block|{
name|int
name|lun
decl_stmt|;
name|int32_t
name|magic_0
decl_stmt|;
comment|/* ident for this array */
name|int32_t
name|magic_1
decl_stmt|;
comment|/* ident for this array */
name|int
name|flags
decl_stmt|;
define|#
directive|define
name|AR_F_RAID0
value|0x0001
comment|/* STRIPE */
define|#
directive|define
name|AR_F_RAID1
value|0x0002
comment|/* MIRROR */
define|#
directive|define
name|AR_F_SPAN
value|0x0004
comment|/* SPAN */
define|#
directive|define
name|AR_F_READY
value|0x0100
define|#
directive|define
name|AR_F_DEGRADED
value|0x0200
define|#
directive|define
name|AR_F_REBUILDING
value|0x0400
define|#
directive|define
name|AR_F_PROMISE_RAID
value|0x1000
define|#
directive|define
name|AR_F_HIGHPOINT_RAID
value|0x2000
define|#
directive|define
name|AR_F_FREEBSD_RAID
value|0x4000
name|int
name|total_disks
decl_stmt|;
comment|/* number of disks in this array */
name|int
name|generation
decl_stmt|;
comment|/* generation of this array */
name|struct
name|ar_disk
name|disks
index|[
name|MAX_DISKS
operator|+
literal|1
index|]
decl_stmt|;
comment|/* ptr to each disk in array */
name|int
name|width
decl_stmt|;
comment|/* array width in disks */
name|u_int16_t
name|heads
decl_stmt|;
name|u_int16_t
name|sectors
decl_stmt|;
name|u_int32_t
name|cylinders
decl_stmt|;
name|u_int64_t
name|total_sectors
decl_stmt|;
name|int
name|interleave
decl_stmt|;
comment|/* interleave in blocks */
name|int
name|reserved
decl_stmt|;
comment|/* sectors that are NOT to be used */
name|int
name|offset
decl_stmt|;
comment|/* offset from start of disk */
name|u_int64_t
name|lock_start
decl_stmt|;
comment|/* start of locked area for rebuild */
name|u_int64_t
name|lock_end
decl_stmt|;
comment|/* end of locked area for rebuild */
name|struct
name|disk
name|disk
decl_stmt|;
comment|/* disklabel/slice stuff */
name|struct
name|proc
modifier|*
name|pid
decl_stmt|;
comment|/* rebuilder process id */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ar_buf
block|{
name|struct
name|bio
name|bp
decl_stmt|;
comment|/* must be first element! */
name|struct
name|bio
modifier|*
name|org
decl_stmt|;
name|struct
name|ar_buf
modifier|*
name|mirror
decl_stmt|;
name|int
name|drive
decl_stmt|;
name|int
name|flags
decl_stmt|;
define|#
directive|define
name|AB_F_DONE
value|0x01
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|HPT_LBA
value|9
end_define

begin_struct
struct|struct
name|highpoint_raid_conf
block|{
name|int8_t
name|filler1
index|[
literal|32
index|]
decl_stmt|;
name|u_int32_t
name|magic
decl_stmt|;
comment|/* 0x20 */
define|#
directive|define
name|HPT_MAGIC_OK
value|0x5a7816f0
define|#
directive|define
name|HPT_MAGIC_BAD
value|0x5a7816fd
name|u_int32_t
name|magic_0
decl_stmt|;
name|u_int32_t
name|magic_1
decl_stmt|;
name|u_int32_t
name|order
decl_stmt|;
define|#
directive|define
name|HPT_O_RAID0
value|0x01
define|#
directive|define
name|HPT_O_RAID1
value|0x02
define|#
directive|define
name|HPT_O_OK
value|0x04
name|u_int8_t
name|array_width
decl_stmt|;
name|u_int8_t
name|stripe_shift
decl_stmt|;
name|u_int8_t
name|type
decl_stmt|;
define|#
directive|define
name|HPT_T_RAID0
value|0x00
define|#
directive|define
name|HPT_T_RAID1
value|0x01
define|#
directive|define
name|HPT_T_RAID01_RAID0
value|0x02
define|#
directive|define
name|HPT_T_SPAN
value|0x03
define|#
directive|define
name|HPT_T_RAID_3
value|0x04
define|#
directive|define
name|HPT_T_RAID_5
value|0x05
define|#
directive|define
name|HPT_T_SINGLEDISK
value|0x06
define|#
directive|define
name|HPT_T_RAID01_RAID1
value|0x07
name|u_int8_t
name|disk_number
decl_stmt|;
name|u_int32_t
name|total_sectors
decl_stmt|;
name|u_int32_t
name|disk_mode
decl_stmt|;
name|u_int32_t
name|boot_mode
decl_stmt|;
name|u_int8_t
name|boot_disk
decl_stmt|;
name|u_int8_t
name|boot_protect
decl_stmt|;
name|u_int8_t
name|error_log_entries
decl_stmt|;
name|u_int8_t
name|error_log_index
decl_stmt|;
struct|struct
block|{
name|u_int32_t
name|timestamp
decl_stmt|;
name|u_int8_t
name|reason
decl_stmt|;
define|#
directive|define
name|HPT_R_REMOVED
value|0xfe
define|#
directive|define
name|HPT_R_BROKEN
value|0xff
name|u_int8_t
name|disk
decl_stmt|;
name|u_int8_t
name|status
decl_stmt|;
name|u_int8_t
name|sectors
decl_stmt|;
name|u_int32_t
name|lba
decl_stmt|;
block|}
name|errorlog
index|[
literal|32
index|]
struct|;
name|int8_t
name|filler2
index|[
literal|16
index|]
decl_stmt|;
name|u_int32_t
name|rebuild_lba
decl_stmt|;
name|u_int8_t
name|dummy_1
decl_stmt|;
name|u_int8_t
name|name_1
index|[
literal|15
index|]
decl_stmt|;
name|u_int8_t
name|dummy_2
decl_stmt|;
name|u_int8_t
name|name_2
index|[
literal|15
index|]
decl_stmt|;
name|int8_t
name|filler3
index|[
literal|8
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_define
define|#
directive|define
name|PR_LBA
parameter_list|(
name|adp
parameter_list|)
define|\
value|(((adp->total_secs / (adp->heads * adp->sectors)) * \ 	  adp->heads * adp->sectors) - adp->sectors)
end_define

begin_struct
struct|struct
name|promise_raid_conf
block|{
name|char
name|promise_id
index|[
literal|24
index|]
decl_stmt|;
define|#
directive|define
name|PR_MAGIC
value|"Promise Technology, Inc."
name|u_int32_t
name|dummy_0
decl_stmt|;
name|u_int64_t
name|magic_0
decl_stmt|;
define|#
directive|define
name|PR_MAGIC0
parameter_list|(
name|x
parameter_list|)
value|(x.device ? ((u_int64_t)x.device->channel->unit<<48) | \ 			((u_int64_t)(x.device->unit != 0)<< 56) : 0)
name|u_int16_t
name|magic_1
decl_stmt|;
name|u_int32_t
name|magic_2
decl_stmt|;
name|u_int8_t
name|filler1
index|[
literal|470
index|]
decl_stmt|;
struct|struct
block|{
name|u_int32_t
name|integrity
decl_stmt|;
comment|/* 0x200 */
define|#
directive|define
name|PR_I_VALID
value|0x00000080
name|u_int8_t
name|flags
decl_stmt|;
define|#
directive|define
name|PR_F_VALID
value|0x00000001
define|#
directive|define
name|PR_F_ONLINE
value|0x00000002
define|#
directive|define
name|PR_F_ASSIGNED
value|0x00000004
define|#
directive|define
name|PR_F_SPARE
value|0x00000008
define|#
directive|define
name|PR_F_DUPLICATE
value|0x00000010
define|#
directive|define
name|PR_F_REDIR
value|0x00000020
define|#
directive|define
name|PR_F_DOWN
value|0x00000040
define|#
directive|define
name|PR_F_READY
value|0x00000080
name|u_int8_t
name|disk_number
decl_stmt|;
name|u_int8_t
name|channel
decl_stmt|;
name|u_int8_t
name|device
decl_stmt|;
name|u_int64_t
name|magic_0
name|__packed
decl_stmt|;
name|u_int32_t
name|disk_offset
decl_stmt|;
comment|/* 0x210 */
name|u_int32_t
name|disk_sectors
decl_stmt|;
name|u_int32_t
name|rebuild_lba
decl_stmt|;
name|u_int16_t
name|generation
decl_stmt|;
name|u_int8_t
name|status
decl_stmt|;
define|#
directive|define
name|PR_S_VALID
value|0x01
define|#
directive|define
name|PR_S_ONLINE
value|0x02
define|#
directive|define
name|PR_S_INITED
value|0x04
define|#
directive|define
name|PR_S_READY
value|0x08
define|#
directive|define
name|PR_S_DEGRADED
value|0x10
define|#
directive|define
name|PR_S_MARKED
value|0x20
define|#
directive|define
name|PR_S_FUNCTIONAL
value|0x80
name|u_int8_t
name|type
decl_stmt|;
define|#
directive|define
name|PR_T_RAID0
value|0x00
define|#
directive|define
name|PR_T_RAID1
value|0x01
define|#
directive|define
name|PR_T_RAID3
value|0x02
define|#
directive|define
name|PR_T_RAID5
value|0x04
define|#
directive|define
name|PR_T_SPAN
value|0x08
name|u_int8_t
name|total_disks
decl_stmt|;
comment|/* 0x220 */
name|u_int8_t
name|stripe_shift
decl_stmt|;
name|u_int8_t
name|array_width
decl_stmt|;
name|u_int8_t
name|array_number
decl_stmt|;
name|u_int32_t
name|total_sectors
decl_stmt|;
name|u_int16_t
name|cylinders
decl_stmt|;
name|u_int8_t
name|heads
decl_stmt|;
name|u_int8_t
name|sectors
decl_stmt|;
name|int64_t
name|magic_1
name|__packed
decl_stmt|;
struct|struct
block|{
comment|/* 0x240 */
name|u_int8_t
name|flags
decl_stmt|;
name|u_int8_t
name|dummy_0
decl_stmt|;
name|u_int8_t
name|channel
decl_stmt|;
name|u_int8_t
name|device
decl_stmt|;
name|u_int64_t
name|magic_0
name|__packed
decl_stmt|;
block|}
name|disk
index|[
literal|8
index|]
struct|;
block|}
name|raid
struct|;
name|int32_t
name|filler2
index|[
literal|346
index|]
decl_stmt|;
name|u_int32_t
name|checksum
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_function_decl
name|int
name|ata_raiddisk_probe
parameter_list|(
name|struct
name|ad_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ata_raiddisk_attach
parameter_list|(
name|struct
name|ad_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ata_raiddisk_detach
parameter_list|(
name|struct
name|ad_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ata_raid_attach
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ata_raid_create
parameter_list|(
name|struct
name|raid_setup
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ata_raid_delete
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ata_raid_status
parameter_list|(
name|int
name|array
parameter_list|,
name|struct
name|raid_status
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ata_raid_rebuild
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

end_unit

