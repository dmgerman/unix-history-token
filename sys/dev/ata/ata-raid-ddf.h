begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2008 Scott Long  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer,  *    without modification, immediately at the beginning of the file.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|ATA_RAID_DDF_H
end_ifndef

begin_define
define|#
directive|define
name|ATA_RAID_DDF_H
end_define

begin_comment
comment|/* Definitions from the SNIA DDF spec, rev 1.2 */
end_comment

begin_define
define|#
directive|define
name|DDF_HEADER_LENGTH
value|512
end_define

begin_struct
struct|struct
name|ddf_header
block|{
name|uint32_t
name|Signature
decl_stmt|;
define|#
directive|define
name|DDF_HEADER_SIGNATURE
value|0xde11de11
name|uint32_t
name|CRC
decl_stmt|;
name|uint8_t
name|DDF_Header_GUID
index|[
literal|24
index|]
decl_stmt|;
name|uint8_t
name|DDF_rev
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|Sequence_Number
decl_stmt|;
name|uint32_t
name|TimeStamp
decl_stmt|;
name|uint8_t
name|Open_Flag
decl_stmt|;
define|#
directive|define
name|DDF_HEADER_CLOSED
value|0x00
define|#
directive|define
name|DDF_HEADER_OPENED_MASK
value|0x0f
define|#
directive|define
name|DDF_HEADER_OPEN_ANCHOR
value|0xff
name|uint8_t
name|Foreign_Flag
decl_stmt|;
name|uint8_t
name|Diskgrouping
decl_stmt|;
name|uint8_t
name|pad1
index|[
literal|13
index|]
decl_stmt|;
name|uint8_t
name|Header_ext
index|[
literal|32
index|]
decl_stmt|;
name|uint64_t
name|Primary_Header_LBA
decl_stmt|;
name|uint64_t
name|Secondary_Header_LBA
decl_stmt|;
name|uint8_t
name|Header_Type
decl_stmt|;
define|#
directive|define
name|DDF_HEADER_ANCHOR
value|0x00
define|#
directive|define
name|DDF_HEADER_PRIMARY
value|0x01
define|#
directive|define
name|DDF_HEADER_SECONDARY
value|0x02
name|uint8_t
name|pad2
index|[
literal|3
index|]
decl_stmt|;
name|uint32_t
name|WorkSpace_Length
decl_stmt|;
name|uint64_t
name|WorkSpace_LBA
decl_stmt|;
name|uint16_t
name|Max_PD_Entries
decl_stmt|;
name|uint16_t
name|Max_VD_Entries
decl_stmt|;
name|uint16_t
name|Max_Partitions
decl_stmt|;
name|uint16_t
name|Configuration_Record_Length
decl_stmt|;
name|uint16_t
name|Max_Primary_Element_Entries
decl_stmt|;
name|uint8_t
name|pad3
index|[
literal|54
index|]
decl_stmt|;
name|uint32_t
name|cd_section
decl_stmt|;
comment|/* Controller_Data_Section */
name|uint32_t
name|cd_length
decl_stmt|;
comment|/* Controller_Data_Section_Length */
name|uint32_t
name|pdr_section
decl_stmt|;
comment|/* Physical_Drive_Records_Section */
name|uint32_t
name|pdr_length
decl_stmt|;
comment|/* Physical_Drive_Records_Length */
name|uint32_t
name|vdr_section
decl_stmt|;
comment|/* Virtual_Drive_Records_Section */
name|uint32_t
name|vdr_length
decl_stmt|;
comment|/* Virtual_Drive_Records_Length */
name|uint32_t
name|cr_section
decl_stmt|;
comment|/* Configuration_Records_Section */
name|uint32_t
name|cr_length
decl_stmt|;
comment|/* Configuration_Records_Length */
name|uint32_t
name|pdd_section
decl_stmt|;
comment|/* Physical_Drive_Data_Section */
name|uint32_t
name|pdd_length
decl_stmt|;
comment|/* Physical_Drive_Data_Length */
name|uint32_t
name|bbmlog_section
decl_stmt|;
comment|/* BBM_Log_Section */
name|uint32_t
name|bbmlog_length
decl_stmt|;
comment|/* BBM_Log_Section_Length */
name|uint32_t
name|Diagnostic_Space
decl_stmt|;
name|uint32_t
name|Diagnostic_Space_Length
decl_stmt|;
name|uint32_t
name|Vendor_Specific_Logs
decl_stmt|;
name|uint32_t
name|Vendor_Specific_Logs_Length
decl_stmt|;
name|uint8_t
name|pad4
index|[
literal|256
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ddf_cd_record
block|{
name|uint32_t
name|Signature
decl_stmt|;
define|#
directive|define
name|DDF_CONTROLLER_DATA_SIGNATURE
value|0xad111111
name|uint32_t
name|CRC
decl_stmt|;
name|uint8_t
name|Controller_GUID
index|[
literal|24
index|]
decl_stmt|;
struct|struct
block|{
name|uint16_t
name|Vendor_ID
decl_stmt|;
name|uint16_t
name|Device_ID
decl_stmt|;
name|uint16_t
name|SubVendor_ID
decl_stmt|;
name|uint16_t
name|SubDevice_ID
decl_stmt|;
block|}
name|Controller_Type
name|__packed
struct|;
name|uint8_t
name|Product_ID
index|[
literal|16
index|]
decl_stmt|;
name|uint8_t
name|pad1
index|[
literal|8
index|]
decl_stmt|;
name|uint8_t
name|Controller_Data
index|[
literal|448
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ddf_device_scsi
block|{
name|uint8_t
name|Lun
decl_stmt|;
name|uint8_t
name|Id
decl_stmt|;
name|uint8_t
name|Channel
decl_stmt|;
name|uint8_t
name|Path_Flags
decl_stmt|;
define|#
directive|define
name|DDF_DEVICE_SCSI_FLAG_BROKEN
value|(1<< 7)
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ddf_device_sas
block|{
name|uint64_t
name|Initiator_Path
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_union
union|union
name|ddf_pathinfo
block|{
struct|struct
block|{
name|struct
name|ddf_device_scsi
name|Path0
decl_stmt|;
name|struct
name|ddf_device_scsi
name|Path1
decl_stmt|;
name|uint8_t
name|pad
index|[
literal|10
index|]
decl_stmt|;
block|}
name|__packed
name|scsi
struct|;
struct|struct
block|{
name|struct
name|ddf_device_sas
name|Path0
decl_stmt|;
name|struct
name|ddf_device_sas
name|Path1
decl_stmt|;
name|uint8_t
name|Path0_Flags
decl_stmt|;
name|uint8_t
name|Path1_Flags
decl_stmt|;
define|#
directive|define
name|DDF_DEVICE_SAS_FLAG_BROKEN
value|(1<< 7)
block|}
name|__packed
name|sas
struct|;
block|}
name|__packed
union|;
end_union

begin_struct
struct|struct
name|ddf_pd_entry
block|{
name|uint8_t
name|PD_GUID
index|[
literal|24
index|]
decl_stmt|;
name|uint32_t
name|PD_Reference
decl_stmt|;
name|uint16_t
name|PD_Type
decl_stmt|;
define|#
directive|define
name|DDF_PDE_GUID_FORCE
value|(1<< 0)
define|#
directive|define
name|DDF_PDE_PARTICIPATING
value|(1<< 1)
define|#
directive|define
name|DDF_PDE_GLOBAL_SPARE
value|(1<< 2)
define|#
directive|define
name|DDF_PDE_CONFIG_SPARE
value|(1<< 3)
define|#
directive|define
name|DDF_PDE_FOREIGN
value|(1<< 4)
define|#
directive|define
name|DDF_PDE_LEGACY
value|(1<< 5)
define|#
directive|define
name|DDF_PDE_TYPE_MASK
value|(0x0f<< 12)
define|#
directive|define
name|DDF_PDE_UNKNOWN
value|(0x00<< 12)
define|#
directive|define
name|DDF_PDE_SCSI
value|(0x01<< 12)
define|#
directive|define
name|DDF_PDE_SAS
value|(0x02<< 12)
define|#
directive|define
name|DDF_PDE_SATA
value|(0x03<< 12)
define|#
directive|define
name|DDF_PDE_FC
value|(0x04<< 12)
name|uint16_t
name|PD_State
decl_stmt|;
define|#
directive|define
name|DDF_PDE_ONLINE
value|(1<< 0)
define|#
directive|define
name|DDF_PDE_FAILED
value|(1<< 1)
define|#
directive|define
name|DDF_PDE_REBUILD
value|(1<< 2)
define|#
directive|define
name|DDF_PDE_TRANSITION
value|(1<< 3)
define|#
directive|define
name|DDF_PDE_PFA
value|(1<< 4)
define|#
directive|define
name|DDF_PDE_UNRECOVERED
value|(1<< 5)
define|#
directive|define
name|DDF_PDE_MISSING
value|(1<< 6)
name|uint64_t
name|Configured_Size
decl_stmt|;
name|union
name|ddf_pathinfo
name|Path_Information
decl_stmt|;
name|uint8_t
name|pad1
index|[
literal|6
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ddf_pd_record
block|{
name|uint32_t
name|Signature
decl_stmt|;
define|#
directive|define
name|DDF_PDR_SIGNATURE
value|0x22222222
name|uint32_t
name|CRC
decl_stmt|;
name|uint16_t
name|Populated_PDEs
decl_stmt|;
name|uint16_t
name|Max_PDE_Supported
decl_stmt|;
name|uint8_t
name|pad1
index|[
literal|52
index|]
decl_stmt|;
name|struct
name|ddf_pd_entry
name|entry
index|[
literal|0
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ddf_vd_entry
block|{
name|uint8_t
name|VD_GUID
index|[
literal|24
index|]
decl_stmt|;
name|uint16_t
name|VD_Number
decl_stmt|;
name|uint8_t
name|pad1
index|[
literal|2
index|]
decl_stmt|;
name|uint16_t
name|VD_Type
decl_stmt|;
define|#
directive|define
name|DDF_VDE_SHARED
value|(1<< 0)
define|#
directive|define
name|DDF_VDE_ENFORCE_GROUP
value|(1<< 1)
define|#
directive|define
name|DDF_VDE_UNICODE_NAME
value|(1<< 2)
define|#
directive|define
name|DDF_VDE_OWNER_ID_VALID
value|(1<< 3)
name|uint16_t
name|Controller_GUID_CRC
decl_stmt|;
name|uint8_t
name|VD_State
decl_stmt|;
define|#
directive|define
name|DDF_VDE_OPTIMAL
value|0x00
define|#
directive|define
name|DDF_VDE_DEGRADED
value|0x01
define|#
directive|define
name|DDF_VDE_DELETED
value|0x02
define|#
directive|define
name|DDF_VDE_MISSING
value|0x03
define|#
directive|define
name|DDF_VDE_FAILED
value|0x04
define|#
directive|define
name|DDF_VDE_PARTIAL
value|0x05
define|#
directive|define
name|DDF_VDE_STATE_MASK
value|0x07
define|#
directive|define
name|DDF_VDE_MORPH
value|(1<< 3)
define|#
directive|define
name|DDF_VDE_DIRTY
value|(1<< 4)
name|uint8_t
name|Init_State
decl_stmt|;
define|#
directive|define
name|DDF_VDE_UNINTIALIZED
value|0x00
define|#
directive|define
name|DDF_VDE_INIT_QUICK
value|0x01
define|#
directive|define
name|DDF_VDE_INIT_FULL
value|0x02
define|#
directive|define
name|DDF_VDE_INIT_MASK
value|0x03
define|#
directive|define
name|DDF_VDE_UACCESS_RW
value|0x00
define|#
directive|define
name|DDF_VDE_UACCESS_RO
value|0x80
define|#
directive|define
name|DDF_VDE_UACCESS_BLOCKED
value|0xc0
define|#
directive|define
name|DDF_VDE_UACCESS_MASK
value|0xc0
name|uint8_t
name|pad2
index|[
literal|14
index|]
decl_stmt|;
name|uint8_t
name|VD_Name
index|[
literal|16
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ddf_vd_record
block|{
name|uint32_t
name|Signature
decl_stmt|;
define|#
directive|define
name|DDF_VD_RECORD_SIGNATURE
value|0xdddddddd
name|uint32_t
name|CRC
decl_stmt|;
name|uint16_t
name|Populated_VDEs
decl_stmt|;
name|uint16_t
name|Max_VDE_Supported
decl_stmt|;
name|uint8_t
name|pad1
index|[
literal|52
index|]
decl_stmt|;
name|struct
name|ddf_vd_entry
name|entry
index|[
literal|0
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_define
define|#
directive|define
name|DDF_CR_INVALID
value|0xffffffff
end_define

begin_struct
struct|struct
name|ddf_vdc_record
block|{
name|uint32_t
name|Signature
decl_stmt|;
define|#
directive|define
name|DDF_VDCR_SIGNATURE
value|0xeeeeeeee
name|uint32_t
name|CRC
decl_stmt|;
name|uint8_t
name|VD_GUID
index|[
literal|24
index|]
decl_stmt|;
name|uint32_t
name|Timestamp
decl_stmt|;
name|uint32_t
name|Sequence_Number
decl_stmt|;
name|uint8_t
name|pad1
index|[
literal|24
index|]
decl_stmt|;
name|uint16_t
name|Primary_Element_Count
decl_stmt|;
name|uint8_t
name|Stripe_Size
decl_stmt|;
name|uint8_t
name|Primary_RAID_Level
decl_stmt|;
define|#
directive|define
name|DDF_VDCR_RAID0
value|0x00
define|#
directive|define
name|DDF_VDCR_RAID1
value|0x01
define|#
directive|define
name|DDF_VDCR_RAID3
value|0x03
define|#
directive|define
name|DDF_VDCR_RAID4
value|0x04
define|#
directive|define
name|DDF_VDCR_RAID5
value|0x05
define|#
directive|define
name|DDF_VDCR_RAID6
value|0x06
define|#
directive|define
name|DDF_VDCR_RAID1E
value|0x11
define|#
directive|define
name|DDF_VDCR_SINGLE
value|0x0f
define|#
directive|define
name|DDF_VDCR_CONCAT
value|0x1f
define|#
directive|define
name|DDF_VDCR_RAID5E
value|0x15
define|#
directive|define
name|DDF_VDCR_RAID5EE
value|0x25
name|uint8_t
name|RLQ
decl_stmt|;
name|uint8_t
name|Secondary_Element_Count
decl_stmt|;
name|uint8_t
name|Secondary_Element_Seq
decl_stmt|;
name|uint8_t
name|Secondary_RAID_Level
decl_stmt|;
name|uint64_t
name|Block_Count
decl_stmt|;
name|uint64_t
name|VD_Size
decl_stmt|;
name|uint8_t
name|pad2
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|Associated_Spares
index|[
literal|8
index|]
decl_stmt|;
name|uint64_t
name|Cache_Flags
decl_stmt|;
define|#
directive|define
name|DDF_VDCR_CACHE_WB
value|(1<< 0)
define|#
directive|define
name|DDF_VDCR_CACHE_WB_ADAPTIVE
value|(1<< 1)
define|#
directive|define
name|DDF_VDCR_CACHE_RA
value|(1<< 2)
define|#
directive|define
name|DDF_VDCR_CACHE_RA_ADAPTIVE
value|(1<< 3)
define|#
directive|define
name|DDF_VDCR_CACHE_WCACHE_NOBATTERY
value|(1<< 4)
define|#
directive|define
name|DDF_VDCR_CACHE_WCACHE_ALLOW
value|(1<< 5)
define|#
directive|define
name|DDF_VDCR_CACHE_RCACHE_ALLOW
value|(1<< 6)
define|#
directive|define
name|DDF_VDCR_CACHE_VENDOR
value|(1<< 7)
name|uint8_t
name|BG_Rate
decl_stmt|;
name|uint8_t
name|pad3
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|pad4
index|[
literal|52
index|]
decl_stmt|;
name|uint8_t
name|pad5
index|[
literal|192
index|]
decl_stmt|;
name|uint8_t
name|V0
index|[
literal|32
index|]
decl_stmt|;
name|uint8_t
name|V1
index|[
literal|32
index|]
decl_stmt|;
name|uint8_t
name|V2
index|[
literal|16
index|]
decl_stmt|;
name|uint8_t
name|V3
index|[
literal|16
index|]
decl_stmt|;
name|uint8_t
name|Vendor_Scratch
index|[
literal|32
index|]
decl_stmt|;
name|uint32_t
name|Physical_Disk_Sequence
index|[
literal|0
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ddf_vuc_record
block|{
name|uint32_t
name|Signature
decl_stmt|;
define|#
directive|define
name|DDF_VUCR_SIGNATURE
value|0x88888888
name|uint32_t
name|CRC
decl_stmt|;
name|uint8_t
name|VD_GUID
index|[
literal|24
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ddf_sa_entry
block|{
name|uint8_t
name|VD_GUID
index|[
literal|24
index|]
decl_stmt|;
name|uint16_t
name|Secondary_Element
decl_stmt|;
name|uint8_t
name|rsrvd2
index|[
literal|6
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ddf_sa_record
block|{
name|uint32_t
name|Signature
decl_stmt|;
define|#
directive|define
name|DDF_SA_SIGNATURE
value|0x55555555
name|uint32_t
name|CRC
decl_stmt|;
name|uint32_t
name|Timestamp
decl_stmt|;
name|uint8_t
name|pad1
index|[
literal|7
index|]
decl_stmt|;
name|uint8_t
name|Spare_Type
decl_stmt|;
define|#
directive|define
name|DDF_SAR_TYPE_DEDICATED
value|(1<< 0)
define|#
directive|define
name|DDF_SAR_TYPE_REVERTIBLE
value|(1<< 1)
define|#
directive|define
name|DDF_SAR_TYPE_ACTIVE
value|(1<< 2)
define|#
directive|define
name|DDF_SAR_TYPE_ENCL_AFFINITY
value|(1<< 3)
name|uint16_t
name|Populated_SAEs
decl_stmt|;
name|uint16_t
name|MAX_SAE_Supported
decl_stmt|;
name|uint8_t
name|pad2
index|[
literal|8
index|]
decl_stmt|;
name|struct
name|ddf_sa_entry
name|entry
index|[
literal|0
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ddf_pdd_record
block|{
name|uint32_t
name|Signature
decl_stmt|;
define|#
directive|define
name|DDF_PDD_SIGNATURE
value|0x33333333
name|uint32_t
name|CRC
decl_stmt|;
name|uint8_t
name|PD_GUID
index|[
literal|24
index|]
decl_stmt|;
name|uint32_t
name|PD_Reference
decl_stmt|;
name|uint8_t
name|Forced_Ref_Flag
decl_stmt|;
define|#
directive|define
name|DDF_PDD_FORCED_REF
value|0x01
name|uint8_t
name|Forced_PD_GUID_Flag
decl_stmt|;
define|#
directive|define
name|DDF_PDD_FORCED_GUID
value|0x01
name|uint8_t
name|Vendor_Scratch
index|[
literal|32
index|]
decl_stmt|;
name|uint8_t
name|pad2
index|[
literal|442
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ddf_bbm_entry
block|{
name|uint64_t
name|Defective_Block_Start
decl_stmt|;
name|uint32_t
name|Spare_Block_Offset
decl_stmt|;
name|uint16_t
name|Remapped_Count
decl_stmt|;
name|uint8_t
name|pad
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ddf_bbm_log
block|{
name|uint32_t
name|Signature
decl_stmt|;
define|#
directive|define
name|DDF_BBML_SIGNATURE
value|0xabadb10c
name|uint32_t
name|CRC
decl_stmt|;
name|uint16_t
name|Entry_Count
decl_stmt|;
name|uint32_t
name|Spare_Block_Count
decl_stmt|;
name|uint8_t
name|pad1
index|[
literal|10
index|]
decl_stmt|;
name|uint64_t
name|First_Spare_LBA
decl_stmt|;
name|uint64_t
name|Mapped_Block_Entry
index|[
literal|0
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|ddf_vendor_log
block|{
name|uint32_t
name|Signature
decl_stmt|;
define|#
directive|define
name|DDF_VENDOR_LOG_SIGNATURE
value|0x01dbeef0
name|uint32_t
name|CRC
decl_stmt|;
name|uint64_t
name|Log_Owner
decl_stmt|;
name|uint8_t
name|pad1
index|[
literal|16
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

end_unit

