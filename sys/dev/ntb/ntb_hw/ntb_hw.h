begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (C) 2013 Intel Corporation  * Copyright (C) 2015 EMC Corporation  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NTB_HW_H_
end_ifndef

begin_define
define|#
directive|define
name|_NTB_HW_H_
end_define

begin_struct_decl
struct_decl|struct
name|ntb_softc
struct_decl|;
end_struct_decl

begin_define
define|#
directive|define
name|NTB_MAX_NUM_MW
value|3
end_define

begin_enum
enum|enum
name|ntb_speed
block|{
name|NTB_SPEED_AUTO
init|=
operator|-
literal|1
block|,
name|NTB_SPEED_NONE
init|=
literal|0
block|,
name|NTB_SPEED_GEN1
init|=
literal|1
block|,
name|NTB_SPEED_GEN2
init|=
literal|2
block|,
name|NTB_SPEED_GEN3
init|=
literal|3
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|ntb_width
block|{
name|NTB_WIDTH_AUTO
init|=
operator|-
literal|1
block|,
name|NTB_WIDTH_NONE
init|=
literal|0
block|,
name|NTB_WIDTH_1
init|=
literal|1
block|,
name|NTB_WIDTH_2
init|=
literal|2
block|,
name|NTB_WIDTH_4
init|=
literal|4
block|,
name|NTB_WIDTH_8
init|=
literal|8
block|,
name|NTB_WIDTH_12
init|=
literal|12
block|,
name|NTB_WIDTH_16
init|=
literal|16
block|,
name|NTB_WIDTH_32
init|=
literal|32
block|, }
enum|;
end_enum

begin_expr_stmt
name|SYSCTL_DECL
argument_list|(
name|_hw_ntb
argument_list|)
expr_stmt|;
end_expr_stmt

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|ntb_db_callback
function_decl|)
parameter_list|(
name|void
modifier|*
name|data
parameter_list|,
name|uint32_t
name|vector
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|ntb_event_callback
function_decl|)
parameter_list|(
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|ntb_ctx_ops
block|{
name|ntb_event_callback
name|link_event
decl_stmt|;
name|ntb_db_callback
name|db_event
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|device_t
name|ntb_get_device
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|ntb_link_is_up
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|enum
name|ntb_speed
modifier|*
parameter_list|,
name|enum
name|ntb_width
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ntb_link_event
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ntb_link_enable
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|enum
name|ntb_speed
parameter_list|,
name|enum
name|ntb_width
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ntb_link_disable
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ntb_set_ctx
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
specifier|const
name|struct
name|ntb_ctx_ops
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|ntb_get_ctx
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
specifier|const
name|struct
name|ntb_ctx_ops
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ntb_clear_ctx
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint8_t
name|ntb_mw_count
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ntb_mw_get_range
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|unsigned
name|mw_idx
parameter_list|,
name|vm_paddr_t
modifier|*
name|base
parameter_list|,
name|void
modifier|*
modifier|*
name|vbase
parameter_list|,
name|size_t
modifier|*
name|size
parameter_list|,
name|size_t
modifier|*
name|align
parameter_list|,
name|size_t
modifier|*
name|align_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ntb_mw_set_trans
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|unsigned
name|mw_idx
parameter_list|,
name|bus_addr_t
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ntb_mw_clear_trans
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|unsigned
name|mw_idx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint8_t
name|ntb_get_max_spads
parameter_list|(
name|struct
name|ntb_softc
modifier|*
name|ntb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ntb_spad_write
parameter_list|(
name|struct
name|ntb_softc
modifier|*
name|ntb
parameter_list|,
name|unsigned
name|int
name|idx
parameter_list|,
name|uint32_t
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ntb_spad_read
parameter_list|(
name|struct
name|ntb_softc
modifier|*
name|ntb
parameter_list|,
name|unsigned
name|int
name|idx
parameter_list|,
name|uint32_t
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ntb_peer_spad_write
parameter_list|(
name|struct
name|ntb_softc
modifier|*
name|ntb
parameter_list|,
name|unsigned
name|int
name|idx
parameter_list|,
name|uint32_t
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ntb_peer_spad_read
parameter_list|(
name|struct
name|ntb_softc
modifier|*
name|ntb
parameter_list|,
name|unsigned
name|int
name|idx
parameter_list|,
name|uint32_t
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint64_t
name|ntb_db_valid_mask
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint64_t
name|ntb_db_vector_mask
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|uint32_t
name|vector
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bus_addr_t
name|ntb_get_peer_db_addr
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|vm_size_t
modifier|*
name|sz_out
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ntb_db_clear
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|uint64_t
name|bits
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ntb_db_clear_mask
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|uint64_t
name|bits
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint64_t
name|ntb_db_read
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ntb_db_set_mask
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|uint64_t
name|bits
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ntb_peer_db_set
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|uint64_t
name|bits
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Hardware owns the low 32 bits of features. */
end_comment

begin_define
define|#
directive|define
name|NTB_BAR_SIZE_4K
value|(1<< 0)
end_define

begin_define
define|#
directive|define
name|NTB_SDOORBELL_LOCKUP
value|(1<< 1)
end_define

begin_define
define|#
directive|define
name|NTB_SB01BASE_LOCKUP
value|(1<< 2)
end_define

begin_define
define|#
directive|define
name|NTB_B2BDOORBELL_BIT14
value|(1<< 3)
end_define

begin_comment
comment|/* Software/configuration owns the top 32 bits. */
end_comment

begin_define
define|#
directive|define
name|NTB_SPLIT_BAR
value|(1ull<< 32)
end_define

begin_function_decl
name|bool
name|ntb_has_feature
parameter_list|(
name|struct
name|ntb_softc
modifier|*
parameter_list|,
name|uint64_t
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _NTB_HW_H_ */
end_comment

end_unit

