begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2016 Alexander Motin<mav@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_struct_decl
struct_decl|struct
name|ntb_transport_qp
struct_decl|;
end_struct_decl

begin_decl_stmt
specifier|extern
name|devclass_t
name|ntb_transport_devclass
decl_stmt|;
end_decl_stmt

begin_enum
enum|enum
name|ntb_link_event
block|{
name|NTB_LINK_DOWN
init|=
literal|0
block|,
name|NTB_LINK_UP
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|ntb_queue_handlers
block|{
name|void
function_decl|(
modifier|*
name|rx_handler
function_decl|)
parameter_list|(
name|struct
name|ntb_transport_qp
modifier|*
name|qp
parameter_list|,
name|void
modifier|*
name|qp_data
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|int
name|len
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|tx_handler
function_decl|)
parameter_list|(
name|struct
name|ntb_transport_qp
modifier|*
name|qp
parameter_list|,
name|void
modifier|*
name|qp_data
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|int
name|len
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|event_handler
function_decl|)
parameter_list|(
name|void
modifier|*
name|data
parameter_list|,
name|enum
name|ntb_link_event
name|status
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_function_decl
name|unsigned
name|char
name|ntb_transport_qp_num
parameter_list|(
name|struct
name|ntb_transport_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|int
name|ntb_transport_max_size
parameter_list|(
name|struct
name|ntb_transport_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ntb_transport_qp
modifier|*
name|ntb_transport_create_queue
parameter_list|(
name|void
modifier|*
name|data
parameter_list|,
name|device_t
name|dev
parameter_list|,
specifier|const
name|struct
name|ntb_queue_handlers
modifier|*
name|handlers
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ntb_transport_free_queue
parameter_list|(
name|struct
name|ntb_transport_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ntb_transport_rx_enqueue
parameter_list|(
name|struct
name|ntb_transport_qp
modifier|*
name|qp
parameter_list|,
name|void
modifier|*
name|cb
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|unsigned
name|int
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ntb_transport_tx_enqueue
parameter_list|(
name|struct
name|ntb_transport_qp
modifier|*
name|qp
parameter_list|,
name|void
modifier|*
name|cb
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|unsigned
name|int
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|ntb_transport_rx_remove
parameter_list|(
name|struct
name|ntb_transport_qp
modifier|*
name|qp
parameter_list|,
name|unsigned
name|int
modifier|*
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ntb_transport_link_up
parameter_list|(
name|struct
name|ntb_transport_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ntb_transport_link_down
parameter_list|(
name|struct
name|ntb_transport_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|ntb_transport_link_query
parameter_list|(
name|struct
name|ntb_transport_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|int
name|ntb_transport_tx_free_entry
parameter_list|(
name|struct
name|ntb_transport_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

end_unit

