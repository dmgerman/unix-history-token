begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2006 Marcel Moolenaar  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_DEV_PUC_BFE_H_
end_ifndef

begin_define
define|#
directive|define
name|_DEV_PUC_BFE_H
end_define

begin_define
define|#
directive|define
name|PUC_PCI_BARS
value|6
end_define

begin_struct_decl
struct_decl|struct
name|puc_cfg
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|puc_port
struct_decl|;
end_struct_decl

begin_decl_stmt
specifier|extern
specifier|const
name|struct
name|puc_cfg
name|puc_pci_devices
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|devclass_t
name|puc_devclass
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|char
name|puc_driver_name
index|[]
decl_stmt|;
end_decl_stmt

begin_struct
struct|struct
name|puc_bar
block|{
name|struct
name|resource
modifier|*
name|b_res
decl_stmt|;
name|int
name|b_rid
decl_stmt|;
name|int
name|b_type
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|puc_softc
block|{
name|device_t
name|sc_dev
decl_stmt|;
specifier|const
name|struct
name|puc_cfg
modifier|*
name|sc_cfg
decl_stmt|;
name|intptr_t
name|sc_cfg_data
decl_stmt|;
name|struct
name|puc_bar
name|sc_bar
index|[
name|PUC_PCI_BARS
index|]
decl_stmt|;
name|struct
name|rman
name|sc_ioport
decl_stmt|;
name|struct
name|rman
name|sc_iomem
decl_stmt|;
name|struct
name|rman
name|sc_irq
decl_stmt|;
name|struct
name|resource
modifier|*
name|sc_ires
decl_stmt|;
name|void
modifier|*
name|sc_icookie
decl_stmt|;
name|int
name|sc_irid
decl_stmt|;
name|int
name|sc_nports
decl_stmt|;
name|struct
name|puc_port
modifier|*
name|sc_port
decl_stmt|;
name|int
name|sc_fastintr
range|:
literal|1
decl_stmt|;
name|int
name|sc_leaving
range|:
literal|1
decl_stmt|;
name|int
name|sc_polled
range|:
literal|1
decl_stmt|;
name|int
name|sc_ilr
decl_stmt|;
comment|/* 	 * Bitmask of ports that use the serdev I/F. This allows for 	 * 32 ports on ILP32 machines and 64 ports on LP64 machines. 	 */
name|u_long
name|sc_serdevs
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|struct
name|puc_bar
modifier|*
name|puc_get_bar
parameter_list|(
name|struct
name|puc_softc
modifier|*
name|sc
parameter_list|,
name|int
name|rid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|puc_bfe_attach
parameter_list|(
name|device_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|puc_bfe_detach
parameter_list|(
name|device_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|puc_bfe_probe
parameter_list|(
name|device_t
parameter_list|,
specifier|const
name|struct
name|puc_cfg
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|resource
modifier|*
name|puc_bus_alloc_resource
parameter_list|(
name|device_t
parameter_list|,
name|device_t
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|,
name|u_long
parameter_list|,
name|u_long
parameter_list|,
name|u_long
parameter_list|,
name|u_int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|puc_bus_get_resource
parameter_list|(
name|device_t
parameter_list|,
name|device_t
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|u_long
modifier|*
parameter_list|,
name|u_long
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|puc_bus_read_ivar
parameter_list|(
name|device_t
parameter_list|,
name|device_t
parameter_list|,
name|int
parameter_list|,
name|uintptr_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|puc_bus_release_resource
parameter_list|(
name|device_t
parameter_list|,
name|device_t
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|struct
name|resource
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|puc_bus_setup_intr
parameter_list|(
name|device_t
parameter_list|,
name|device_t
parameter_list|,
name|struct
name|resource
modifier|*
parameter_list|,
name|int
parameter_list|,
name|driver_intr_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|puc_bus_teardown_intr
parameter_list|(
name|device_t
parameter_list|,
name|device_t
parameter_list|,
name|struct
name|resource
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _DEV_PUC_BFE_H_ */
end_comment

end_unit

