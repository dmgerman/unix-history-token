begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$FreeBSD$ */
end_comment

begin_comment
comment|/*	$NetBSD: rf_dagutils.h,v 1.3 1999/02/05 00:06:08 oster Exp $	*/
end_comment

begin_comment
comment|/*  * Copyright (c) 1995 Carnegie-Mellon University.  * All rights reserved.  *  * Author: Mark Holland, William V. Courtright II  *  * Permission to use, copy, modify and distribute this software and  * its documentation is hereby granted, provided that both the copyright  * notice and this permission notice appear in all copies of the  * software, derivative works or modified versions, and any portions  * thereof, and that both notices appear in supporting documentation.  *  * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"  * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND  * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.  *  * Carnegie Mellon requests users of this software to return to  *  *  Software Distribution Coordinator  or  Software.Distribution@CS.CMU.EDU  *  School of Computer Science  *  Carnegie Mellon University  *  Pittsburgh PA 15213-3890  *  * any improvements or extensions that they make and grant Carnegie the  * rights to redistribute these changes.  */
end_comment

begin_comment
comment|/*************************************************************************  *  * rf_dagutils.h -- header file for utility routines for manipulating DAGs  *  *************************************************************************/
end_comment

begin_include
include|#
directive|include
file|<dev/raidframe/rf_types.h>
end_include

begin_include
include|#
directive|include
file|<dev/raidframe/rf_dagfuncs.h>
end_include

begin_include
include|#
directive|include
file|<dev/raidframe/rf_general.h>
end_include

begin_ifndef
ifndef|#
directive|ifndef
name|_RF__RF_DAGUTILS_H_
end_ifndef

begin_define
define|#
directive|define
name|_RF__RF_DAGUTILS_H_
end_define

begin_struct
struct|struct
name|RF_RedFuncs_s
block|{
name|int
function_decl|(
modifier|*
name|regular
function_decl|)
parameter_list|(
name|RF_DagNode_t
modifier|*
parameter_list|)
function_decl|;
name|char
modifier|*
name|RegularName
decl_stmt|;
name|int
function_decl|(
modifier|*
name|simple
function_decl|)
parameter_list|(
name|RF_DagNode_t
modifier|*
parameter_list|)
function_decl|;
name|char
modifier|*
name|SimpleName
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|RF_RedFuncs_t
name|rf_xorFuncs
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|RF_RedFuncs_t
name|rf_xorRecoveryFuncs
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|rf_InitNode
parameter_list|(
name|RF_DagNode_t
modifier|*
name|node
parameter_list|,
name|RF_NodeStatus_t
name|initstatus
parameter_list|,
name|int
name|commit
parameter_list|,
name|int
function_decl|(
modifier|*
name|doFunc
function_decl|)
parameter_list|(
name|RF_DagNode_t
modifier|*
name|node
parameter_list|)
parameter_list|,
name|int
function_decl|(
modifier|*
name|undoFunc
function_decl|)
parameter_list|(
name|RF_DagNode_t
modifier|*
name|node
parameter_list|)
parameter_list|,
name|int
function_decl|(
modifier|*
name|wakeFunc
function_decl|)
parameter_list|(
name|RF_DagNode_t
modifier|*
name|node
parameter_list|,
name|int
name|status
parameter_list|)
parameter_list|,
name|int
name|nSucc
parameter_list|,
name|int
name|nAnte
parameter_list|,
name|int
name|nParam
parameter_list|,
name|int
name|nResult
parameter_list|,
name|RF_DagHeader_t
modifier|*
name|hdr
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|RF_AllocListElem_t
modifier|*
name|alist
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rf_FreeDAG
parameter_list|(
name|RF_DagHeader_t
modifier|*
name|dag_h
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|RF_PropHeader_t
modifier|*
name|rf_MakePropListEntry
parameter_list|(
name|RF_DagHeader_t
modifier|*
name|dag_h
parameter_list|,
name|int
name|resultNum
parameter_list|,
name|int
name|paramNum
parameter_list|,
name|RF_PropHeader_t
modifier|*
name|next
parameter_list|,
name|RF_AllocListElem_t
modifier|*
name|allocList
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|rf_ConfigureDAGs
parameter_list|(
name|RF_ShutdownList_t
modifier|*
modifier|*
name|listp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|RF_DagHeader_t
modifier|*
name|rf_AllocDAGHeader
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rf_FreeDAGHeader
parameter_list|(
name|RF_DagHeader_t
modifier|*
name|dh
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|rf_AllocBuffer
parameter_list|(
name|RF_Raid_t
modifier|*
name|raidPtr
parameter_list|,
name|RF_DagHeader_t
modifier|*
name|dag_h
parameter_list|,
name|RF_PhysDiskAddr_t
modifier|*
name|pda
parameter_list|,
name|RF_AllocListElem_t
modifier|*
name|allocList
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|rf_NodeStatusString
parameter_list|(
name|RF_DagNode_t
modifier|*
name|node
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rf_PrintNodeInfoString
parameter_list|(
name|RF_DagNode_t
modifier|*
name|node
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|rf_AssignNodeNums
parameter_list|(
name|RF_DagHeader_t
modifier|*
name|dag_h
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|rf_RecurAssignNodeNums
parameter_list|(
name|RF_DagNode_t
modifier|*
name|node
parameter_list|,
name|int
name|num
parameter_list|,
name|int
name|unvisited
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rf_ResetDAGHeaderPointers
parameter_list|(
name|RF_DagHeader_t
modifier|*
name|dag_h
parameter_list|,
name|RF_DagHeader_t
modifier|*
name|newptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rf_RecurResetDAGHeaderPointers
parameter_list|(
name|RF_DagNode_t
modifier|*
name|node
parameter_list|,
name|RF_DagHeader_t
modifier|*
name|newptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rf_PrintDAGList
parameter_list|(
name|RF_DagHeader_t
modifier|*
name|dag_h
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|rf_ValidateDAG
parameter_list|(
name|RF_DagHeader_t
modifier|*
name|dag_h
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rf_redirect_asm
parameter_list|(
name|RF_Raid_t
modifier|*
name|raidPtr
parameter_list|,
name|RF_AccessStripeMap_t
modifier|*
name|asmap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rf_MapUnaccessedPortionOfStripe
parameter_list|(
name|RF_Raid_t
modifier|*
name|raidPtr
parameter_list|,
name|RF_RaidLayout_t
modifier|*
name|layoutPtr
parameter_list|,
name|RF_AccessStripeMap_t
modifier|*
name|asmap
parameter_list|,
name|RF_DagHeader_t
modifier|*
name|dag_h
parameter_list|,
name|RF_AccessStripeMapHeader_t
modifier|*
modifier|*
name|new_asm_h
parameter_list|,
name|int
modifier|*
name|nRodNodes
parameter_list|,
name|char
modifier|*
modifier|*
name|sosBuffer
parameter_list|,
name|char
modifier|*
modifier|*
name|eosBuffer
parameter_list|,
name|RF_AllocListElem_t
modifier|*
name|allocList
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|rf_PDAOverlap
parameter_list|(
name|RF_RaidLayout_t
modifier|*
name|layoutPtr
parameter_list|,
name|RF_PhysDiskAddr_t
modifier|*
name|src
parameter_list|,
name|RF_PhysDiskAddr_t
modifier|*
name|dest
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rf_GenerateFailedAccessASMs
parameter_list|(
name|RF_Raid_t
modifier|*
name|raidPtr
parameter_list|,
name|RF_AccessStripeMap_t
modifier|*
name|asmap
parameter_list|,
name|RF_PhysDiskAddr_t
modifier|*
name|failedPDA
parameter_list|,
name|RF_DagHeader_t
modifier|*
name|dag_h
parameter_list|,
name|RF_AccessStripeMapHeader_t
modifier|*
modifier|*
name|new_asm_h
parameter_list|,
name|int
modifier|*
name|nXorBufs
parameter_list|,
name|char
modifier|*
modifier|*
name|rpBufPtr
parameter_list|,
name|char
modifier|*
name|overlappingPDAs
parameter_list|,
name|RF_AllocListElem_t
modifier|*
name|allocList
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* flags used by RangeRestrictPDA */
end_comment

begin_define
define|#
directive|define
name|RF_RESTRICT_NOBUFFER
value|0
end_define

begin_define
define|#
directive|define
name|RF_RESTRICT_DOBUFFER
value|1
end_define

begin_function_decl
name|void
name|rf_RangeRestrictPDA
parameter_list|(
name|RF_Raid_t
modifier|*
name|raidPtr
parameter_list|,
name|RF_PhysDiskAddr_t
modifier|*
name|src
parameter_list|,
name|RF_PhysDiskAddr_t
modifier|*
name|dest
parameter_list|,
name|int
name|dobuffer
parameter_list|,
name|int
name|doraidaddr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|rf_compute_workload_shift
parameter_list|(
name|RF_Raid_t
modifier|*
name|raidPtr
parameter_list|,
name|RF_PhysDiskAddr_t
modifier|*
name|pda
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rf_SelectMirrorDiskIdle
parameter_list|(
name|RF_DagNode_t
modifier|*
name|node
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rf_SelectMirrorDiskPartition
parameter_list|(
name|RF_DagNode_t
modifier|*
name|node
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_RF__RF_DAGUTILS_H_ */
end_comment

end_unit

