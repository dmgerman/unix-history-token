begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/******************************************************************************* *Copyright (c) 2014 PMC-Sierra, Inc.  All rights reserved.  * *Redistribution and use in source and binary forms, with or without modification, are permitted provided  *that the following conditions are met:  *1. Redistributions of source code must retain the above copyright notice, this list of conditions and the *following disclaimer.  *2. Redistributions in binary form must reproduce the above copyright notice,  *this list of conditions and the following disclaimer in the documentation and/or other materials provided *with the distribution.  * *THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED  *WARRANTIES,INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS *FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE *FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR  *BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  *LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  *SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE * * $FreeBSD$ * ********************************************************************************/
end_comment

begin_comment
comment|/******************************************************************************** ** ** Version Control Information: ** ** *******************************************************************************/
end_comment

begin_comment
comment|/******************************************************************************** ** **   ostiapi.h ** **   Abstract:   This module contains function prototype of the Transport **               Independent (TIAPI) OS Callback interface. ** ********************************************************************************/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|OSTIAPI_H
end_ifndef

begin_define
define|#
directive|define
name|OSTIAPI_H
end_define

begin_comment
comment|/*  * Definition for return status is defined in tiStatus_t in TIDEFS.H  */
end_comment

begin_comment
comment|/*****************************************************************************  *  Initiator/Target Shared Callbacks  *****************************************************************************/
end_comment

begin_function_decl
name|osGLOBAL
name|bit32
name|ostiGetTransportParam
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|char
modifier|*
name|key
parameter_list|,
name|char
modifier|*
name|subkey1
parameter_list|,
name|char
modifier|*
name|subkey2
parameter_list|,
name|char
modifier|*
name|subkey3
parameter_list|,
name|char
modifier|*
name|subkey4
parameter_list|,
name|char
modifier|*
name|subkey5
parameter_list|,
name|char
modifier|*
name|valueName
parameter_list|,
name|char
modifier|*
name|buffer
parameter_list|,
name|bit32
name|bufferLen
parameter_list|,
name|bit32
modifier|*
name|lenReceived
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiPortEvent
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|tiPortEvent_t
name|eventType
parameter_list|,
name|bit32
name|status
parameter_list|,
name|void
modifier|*
name|pParm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|bit32
name|ostiTimeStamp
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|bit64
name|ostiTimeStamp64
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|bit32
name|ostiChipConfigReadBit32
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|chipConfigOffset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|void
name|ostiChipConfigWriteBit32
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|chipConfigOffset
parameter_list|,
name|bit32
name|chipConfigValue
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|bit32
name|ostiChipReadBit32
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|chipOffset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|void
name|ostiChipWriteBit32
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|chipOffset
parameter_list|,
name|bit32
name|chipValue
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|bit8
name|ostiChipReadBit8
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|chipOffset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|void
name|ostiChipWriteBit8
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|chipOffset
parameter_list|,
name|bit8
name|chipValue
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiFlashReadBlock
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|flashOffset
parameter_list|,
name|void
modifier|*
name|buffer
parameter_list|,
name|bit32
name|bufferLen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|tiDeviceHandle_t
modifier|*
name|ostiGetDevHandleFromSasAddr
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|unsigned
name|char
modifier|*
name|sas_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|void
name|ostidisableEncryption
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|void
name|ostiSingleThreadedEnter
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|queueId
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|void
name|ostiSingleThreadedLeave
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|queueId
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|bit32
name|ostiNumOfLUNIOCTLreq
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|void
modifier|*
name|param1
parameter_list|,
name|void
modifier|*
name|param2
parameter_list|,
name|void
modifier|*
modifier|*
name|tiRequestBody
parameter_list|,
name|tiIORequest_t
modifier|*
modifier|*
name|tiIORequest
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|PERF_COUNT
end_ifdef

begin_function_decl
name|osGLOBAL
name|void
name|ostiEnter
parameter_list|(
name|tiRoot_t
modifier|*
name|ptiRoot
parameter_list|,
name|bit32
name|layer
parameter_list|,
name|int
name|io
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiLeave
parameter_list|(
name|tiRoot_t
modifier|*
name|ptiRoot
parameter_list|,
name|bit32
name|layer
parameter_list|,
name|int
name|io
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|OSTI_INP_ENTER
parameter_list|(
name|root
parameter_list|)
value|ostiEnter(root, 2, 0)
end_define

begin_define
define|#
directive|define
name|OSTI_INP_LEAVE
parameter_list|(
name|root
parameter_list|)
value|ostiLeave(root, 2, 0)
end_define

begin_define
define|#
directive|define
name|OSTI_OUT_ENTER
parameter_list|(
name|root
parameter_list|)
value|ostiEnter(root, 2, 1)
end_define

begin_define
define|#
directive|define
name|OSTI_OUT_LEAVE
parameter_list|(
name|root
parameter_list|)
value|ostiLeave(root, 2, 1)
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|OSTI_INP_ENTER
parameter_list|(
name|root
parameter_list|)
end_define

begin_define
define|#
directive|define
name|OSTI_INP_LEAVE
parameter_list|(
name|root
parameter_list|)
end_define

begin_define
define|#
directive|define
name|OSTI_OUT_ENTER
parameter_list|(
name|root
parameter_list|)
end_define

begin_define
define|#
directive|define
name|OSTI_OUT_LEAVE
parameter_list|(
name|root
parameter_list|)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|osGLOBAL
name|void
name|ostiStallThread
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|microseconds
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|bit8
name|ostiBitScanForward
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|bit32
modifier|*
name|Index
parameter_list|,
name|bit32
name|Mask
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|LINUX_VERSION_CODE
end_ifdef

begin_function_decl
name|osGLOBAL
name|sbit32
name|ostiAtomicIncrement
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|sbit32
specifier|volatile
modifier|*
name|Addend
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|sbit32
name|ostiAtomicDecrement
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|sbit32
specifier|volatile
modifier|*
name|Addend
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|sbit32
name|ostiAtomicBitClear
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|sbit32
specifier|volatile
modifier|*
name|Destination
parameter_list|,
name|sbit32
name|Value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|sbit32
name|ostiAtomicBitSet
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|sbit32
specifier|volatile
modifier|*
name|Destination
parameter_list|,
name|sbit32
name|Value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|sbit32
name|ostiAtomicExchange
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|sbit32
specifier|volatile
modifier|*
name|Target
parameter_list|,
name|sbit32
name|Value
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|sbit32
name|ostiInterlockedIncrement
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|sbit32
specifier|volatile
modifier|*
name|Addend
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|sbit32
name|ostiInterlockedDecrement
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|sbit32
specifier|volatile
modifier|*
name|Addend
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|sbit32
name|ostiInterlockedAnd
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|sbit32
specifier|volatile
modifier|*
name|Destination
parameter_list|,
name|sbit32
name|Value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|sbit32
name|ostiInterlockedOr
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|sbit32
specifier|volatile
modifier|*
name|Destination
parameter_list|,
name|sbit32
name|Value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|sbit32
name|ostiInterlockedExchange
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|sbit32
specifier|volatile
modifier|*
name|Target
parameter_list|,
name|sbit32
name|Value
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*LINUX_VERSION_CODE*/
end_comment

begin_function_decl
name|osGLOBAL
name|bit32
name|ostiAllocMemory
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|void
modifier|*
modifier|*
name|osMemHandle
parameter_list|,
name|void
modifier|*
modifier|*
name|virtPtr
parameter_list|,
name|bit32
modifier|*
name|physAddrUpper
parameter_list|,
name|bit32
modifier|*
name|physAddrLower
parameter_list|,
name|bit32
name|alignment
parameter_list|,
name|bit32
name|allocLength
parameter_list|,
name|agBOOLEAN
name|isCacheable
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|bit32
name|ostiFreeMemory
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|void
modifier|*
name|osDMAHandle
parameter_list|,
name|bit32
name|allocLength
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|void
name|ostiCacheFlush
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|void
modifier|*
name|osMemHandle
parameter_list|,
name|void
modifier|*
name|virtPtr
parameter_list|,
name|bit32
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|void
name|ostiCacheInvalidate
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|void
modifier|*
name|osMemHandle
parameter_list|,
name|void
modifier|*
name|virtPtr
parameter_list|,
name|bit32
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|void
name|ostiCachePreFlush
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|void
modifier|*
name|osMemHandle
parameter_list|,
name|void
modifier|*
name|virtPtr
parameter_list|,
name|bit32
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  *  The following two functions are for SAS/SATA  */
end_comment

begin_function_decl
name|osGLOBAL
name|void
name|ostiInterruptEnable
parameter_list|(
name|tiRoot_t
modifier|*
name|ptiRoot
parameter_list|,
name|bit32
name|channelNum
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiInterruptDisable
parameter_list|(
name|tiRoot_t
modifier|*
name|ptiRoot
parameter_list|,
name|bit32
name|channelNum
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|bit32
name|ostiChipReadBit32Ext
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|busBaseNumber
parameter_list|,
name|bit32
name|chipOffset
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|FORCEINLINE
name|void
name|ostiChipWriteBit32Ext
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|busBaseNumber
parameter_list|,
name|bit32
name|chipOffset
parameter_list|,
name|bit32
name|chipValue
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*****************************************************************************  *  Initiator specific Callbacks  *****************************************************************************/
end_comment

begin_comment
comment|/*  * Initiator specific IO Completion  */
end_comment

begin_function_decl
name|osGLOBAL
name|void
name|ostiInitiatorIOCompleted
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|tiIORequest_t
modifier|*
name|tiIORequest
parameter_list|,
name|tiIOStatus_t
name|status
parameter_list|,
name|bit32
name|statusDetail
parameter_list|,
name|tiSenseData_t
modifier|*
name|senseData
parameter_list|,
name|bit32
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|tiDeviceHandle_t
modifier|*
name|ostiMapToDevHandle
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|bit8
name|pathId
parameter_list|,
name|bit8
name|targetId
parameter_list|,
name|bit8
name|LUN
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|bit32
name|ostiSendResetDeviceIoctl
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|void
modifier|*
name|pccb
parameter_list|,
name|bit8
name|pathId
parameter_list|,
name|bit8
name|targetId
parameter_list|,
name|bit8
name|lun
parameter_list|,
name|unsigned
name|long
name|resetType
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiGetSenseKeyCount
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|bit32
name|fIsClear
parameter_list|,
name|void
modifier|*
name|SenseKeyCount
parameter_list|,
name|bit32
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiGetSCSIStatusCount
parameter_list|(
name|tiRoot_t
modifier|*
name|root
parameter_list|,
name|bit32
name|fIsClear
parameter_list|,
name|void
modifier|*
name|ScsiStatusCount
parameter_list|,
name|bit32
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|bit32
name|ostiSetDeviceQueueDepth
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|tiIORequest_t
modifier|*
name|tiIORequest
parameter_list|,
name|bit32
name|QueueDepth
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|FAST_IO_TEST
end_ifdef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|ostiFastSSPCb_t
function_decl|)
parameter_list|(
name|tiRoot_t
modifier|*
name|ptiRoot
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|,
name|tiIOStatus_t
name|IOStatus
parameter_list|,
name|bit32
name|statusDetail
parameter_list|)
function_decl|;
end_typedef

begin_function_decl
name|void
name|osti_FastIOCb
parameter_list|(
name|tiRoot_t
modifier|*
name|ptiRoot
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|,
name|tiIOStatus_t
name|IOStatus
parameter_list|,
name|bit32
name|statusDetail
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|osGLOBAL
name|void
name|ostiInitiatorSMPCompleted
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|tiIORequest_t
modifier|*
name|tiSMPRequest
parameter_list|,
name|tiSMPStatus_t
name|smpStatus
parameter_list|,
name|bit32
name|tiSMPInfoLen
parameter_list|,
name|void
modifier|*
name|tiFrameHandle
parameter_list|,
name|bit32
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Initiator specific event  */
end_comment

begin_function_decl
name|osGLOBAL
name|void
name|ostiInitiatorEvent
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|tiPortalContext_t
modifier|*
name|portalContext
parameter_list|,
name|tiDeviceHandle_t
modifier|*
name|tiDeviceHandle
parameter_list|,
name|tiIntrEventType_t
name|eventType
parameter_list|,
name|bit32
name|eventStatus
parameter_list|,
name|void
modifier|*
name|parm
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * PMC-Sierra IOCTL semaphoring  */
end_comment

begin_function_decl
name|osGLOBAL
name|void
name|ostiIOCTLClearSignal
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|void
modifier|*
modifier|*
name|agParam1
parameter_list|,
name|void
modifier|*
modifier|*
name|agParam2
parameter_list|,
name|void
modifier|*
modifier|*
name|agParam3
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiIOCTLWaitForSignal
parameter_list|(
name|tiRoot_t
modifier|*
name|tigRoot
parameter_list|,
name|void
modifier|*
name|agParam1
parameter_list|,
name|void
modifier|*
name|agParam2
parameter_list|,
name|void
modifier|*
name|agParam3
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiIOCTLSetSignal
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|void
modifier|*
name|agParam1
parameter_list|,
name|void
modifier|*
name|agParam2
parameter_list|,
name|void
modifier|*
name|agParam3
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiIOCTLWaitForComplete
parameter_list|(
name|tiRoot_t
modifier|*
name|tigRoot
parameter_list|,
name|void
modifier|*
name|agParam1
parameter_list|,
name|void
modifier|*
name|agParam2
parameter_list|,
name|void
modifier|*
name|agParam3
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiIOCTLComplete
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|void
modifier|*
name|agParam1
parameter_list|,
name|void
modifier|*
name|agParam2
parameter_list|,
name|void
modifier|*
name|agParam3
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*****************************************************************************  *  Target specific Callbacks  *****************************************************************************/
end_comment

begin_function_decl
name|osGLOBAL
name|void
name|ostiProcessScsiReq
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|tiTargetScsiCmnd_t
modifier|*
name|tiTgtScsiCmnd
parameter_list|,
name|void
modifier|*
name|agFrameHandle
parameter_list|,
name|bit32
name|immDataLength
parameter_list|,
name|tiIORequest_t
modifier|*
name|tiIORequest
parameter_list|,
name|tiDeviceHandle_t
modifier|*
name|tiDeviceHandle
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiNextDataPhase
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|tiIORequest_t
modifier|*
name|tiIORequest
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiTaskManagement
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|bit32
name|task
parameter_list|,
name|bit8
modifier|*
name|scsiLun
parameter_list|,
name|tiIORequest_t
modifier|*
name|refTiIORequest
parameter_list|,
name|tiIORequest_t
modifier|*
name|tiTMRequest
parameter_list|,
name|tiDeviceHandle_t
modifier|*
name|tiDeviceHandle
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiTargetIOCompleted
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|tiIORequest_t
modifier|*
name|tiIORequest
parameter_list|,
name|tiIOStatus_t
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|bit32
name|ostiTargetEvent
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|tiPortalContext_t
modifier|*
name|portalContext
parameter_list|,
name|tiDeviceHandle_t
modifier|*
name|tiDeviceHandle
parameter_list|,
name|tiTgtEventType_t
name|eventType
parameter_list|,
name|bit32
name|eventStatus
parameter_list|,
name|void
modifier|*
name|parm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiTargetIOError
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|tiIORequest_t
modifier|*
name|tiIORequest
parameter_list|,
name|tiIOStatus_t
name|status
parameter_list|,
name|bit32
name|statusDetail
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiTargetTmCompleted
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|,
name|tiIORequest_t
modifier|*
name|tiTmRequest
parameter_list|,
name|tiIOStatus_t
name|status
parameter_list|,
name|bit32
name|statusDetail
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|osGLOBAL
name|void
name|ostiPCI_TRIGGER
parameter_list|(
name|tiRoot_t
modifier|*
name|tiRoot
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* OSTIAPI_H */
end_comment

end_unit

