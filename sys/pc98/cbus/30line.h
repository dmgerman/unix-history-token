begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1994, 1995, 1996.  FreeBSD(98) porting team.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer as  *    the first lines of this file unmodified.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__PC98_PC98_30LINE_H__
end_ifndef

begin_define
define|#
directive|define
name|__PC98_PC98_30LINE_H__
end_define

begin_define
define|#
directive|define
name|LINE30_ROW
value|30
end_define

begin_define
define|#
directive|define
name|_HS
value|1 + 1
end_define

begin_define
define|#
directive|define
name|_VS
value|2
end_define

begin_define
define|#
directive|define
name|_HFP
value|3 + 1
end_define

begin_define
define|#
directive|define
name|_HBP
value|14 + 1
end_define

begin_define
define|#
directive|define
name|_VFP
value|11
end_define

begin_define
define|#
directive|define
name|_VBP
value|44
end_define

begin_define
define|#
directive|define
name|_CR
value|80
end_define

begin_define
define|#
directive|define
name|_LF
value|LINE30_ROW*16
end_define

begin_define
define|#
directive|define
name|_GDC_RESET
value|0x00
end_define

begin_define
define|#
directive|define
name|_GDC_SYNC
value|0x0e
end_define

begin_define
define|#
directive|define
name|_GDC_MASTER
value|0x6f
end_define

begin_define
define|#
directive|define
name|_GDC_SLAVE
value|0x6e
end_define

begin_define
define|#
directive|define
name|_GDC_START
value|0x0d
end_define

begin_define
define|#
directive|define
name|_GDC_STOP
value|0x0c
end_define

begin_define
define|#
directive|define
name|_GDC_SCROLL
value|0x70
end_define

begin_define
define|#
directive|define
name|_GDC_PITCH
value|0x47
end_define

begin_define
define|#
directive|define
name|GDC_CR
value|0
end_define

begin_define
define|#
directive|define
name|GDC_VS
value|1
end_define

begin_define
define|#
directive|define
name|GDC_HS
value|2
end_define

begin_define
define|#
directive|define
name|GDC_HFP
value|3
end_define

begin_define
define|#
directive|define
name|GDC_HBP
value|4
end_define

begin_define
define|#
directive|define
name|GDC_VFP
value|5
end_define

begin_define
define|#
directive|define
name|GDC_VBP
value|6
end_define

begin_define
define|#
directive|define
name|GDC_LF
value|7
end_define

begin_define
define|#
directive|define
name|_24KHZ
value|0
end_define

begin_define
define|#
directive|define
name|_31KHZ
value|1
end_define

begin_define
define|#
directive|define
name|_2_5MHZ
value|0
end_define

begin_define
define|#
directive|define
name|_5MHZ
value|1
end_define

begin_define
define|#
directive|define
name|_25L
value|0
end_define

begin_define
define|#
directive|define
name|_30L
value|1
end_define

begin_define
define|#
directive|define
name|T25_G400
value|0
end_define

begin_define
define|#
directive|define
name|T30_G400
value|1
end_define

begin_define
define|#
directive|define
name|T30_G480
value|2
end_define

begin_function_decl
specifier|static
name|void
name|master_gdc_cmd
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|master_gdc_prm
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|master_gdc_word_prm
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|master_gdc_fifo_empty
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|master_gdc_wait_vsync
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|gdc_cmd
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|gdc_prm
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|gdc_word_prm
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|gdc_fifo_empty
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|gdc_wait_vsync
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|int
name|check_gdc_clock
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|static
name|int
name|gdc_INFO
init|=
name|_25L
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|int
name|gdc_FH
init|=
name|_24KHZ
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|static
name|void
name|initialize_gdc
parameter_list|(
name|unsigned
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|static
name|unsigned
name|int
name|master_param
index|[
literal|2
index|]
index|[
literal|2
index|]
index|[
literal|8
index|]
init|=
block|{
block|{
block|{
literal|78
block|,
literal|8
block|,
literal|7
block|,
literal|9
block|,
literal|7
block|,
literal|7
block|,
literal|25
block|,
literal|400
block|}
block|,
comment|/* 400/24k */
block|{
name|_CR
operator|-
literal|2
block|,
name|_VS
block|,
name|_HS
operator|-
literal|1
block|,
name|_HFP
operator|-
literal|1
block|,
name|_HBP
operator|-
literal|1
block|,
name|_VFP
block|,
name|_VBP
block|,
name|_LF
block|}
block|}
block|,
comment|/* 480/24k */
block|{
block|{
literal|78
block|,
literal|2
block|,
literal|7
block|,
literal|3
block|,
literal|7
block|,
literal|13
block|,
literal|34
block|,
literal|400
block|}
block|,
comment|/* 400/31k */
block|{
literal|78
block|,
literal|2
block|,
literal|11
block|,
literal|3
block|,
literal|3
block|,
literal|6
block|,
literal|37
block|,
literal|480
block|}
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* 480/31k */
end_comment

begin_decl_stmt
specifier|static
name|unsigned
name|int
name|slave_param
index|[
literal|2
index|]
index|[
literal|6
index|]
index|[
literal|8
index|]
init|=
block|{
block|{
block|{
literal|38
block|,
literal|8
block|,
literal|3
block|,
literal|4
block|,
literal|3
block|,
literal|7
block|,
literal|25
block|,
literal|400
block|}
block|,
comment|/* normal */
block|{
literal|78
block|,
literal|8
block|,
literal|7
block|,
literal|9
block|,
literal|7
block|,
literal|7
block|,
literal|25
block|,
literal|400
block|}
block|,
block|{
name|_CR
operator|/
literal|2
operator|-
literal|2
block|,
name|_VS
block|,
operator|(
name|_HS
operator|)
operator|/
literal|2
operator|-
literal|1
block|,
operator|(
name|_HFP
operator|)
operator|/
literal|2
operator|-
literal|1
block|,
operator|(
name|_HBP
operator|)
operator|/
literal|2
operator|-
literal|1
block|,
name|_VFP
operator|+
operator|(
name|_LF
operator|-
literal|400
operator|)
operator|/
literal|2
operator|+
literal|8
block|,
name|_VBP
operator|+
operator|(
name|_LF
operator|-
literal|400
operator|)
operator|/
literal|2
operator|-
literal|8
block|,
literal|400
block|}
block|,
comment|/* 30& 400 */
block|{
name|_CR
operator|-
literal|2
block|,
name|_VS
block|,
name|_HS
operator|-
literal|1
block|,
name|_HFP
operator|-
literal|1
block|,
name|_HBP
operator|-
literal|1
block|,
name|_VFP
operator|+
operator|(
name|_LF
operator|-
literal|400
operator|)
operator|/
literal|2
operator|+
literal|8
block|,
name|_VBP
operator|+
operator|(
name|_LF
operator|-
literal|400
operator|)
operator|/
literal|2
operator|-
literal|8
block|,
literal|400
block|}
block|,
block|{
name|_CR
operator|/
literal|2
operator|-
literal|2
block|,
name|_VS
block|,
operator|(
name|_HS
operator|)
operator|/
literal|2
operator|-
literal|1
block|,
operator|(
name|_HFP
operator|)
operator|/
literal|2
operator|-
literal|1
block|,
operator|(
name|_HBP
operator|)
operator|/
literal|2
operator|-
literal|1
block|,
name|_VFP
block|,
name|_VBP
block|,
name|_LF
block|}
block|,
comment|/* 30& 480 */
block|{
name|_CR
operator|-
literal|2
block|,
name|_VS
block|,
name|_HS
operator|-
literal|1
block|,
name|_HFP
operator|-
literal|1
block|,
name|_HBP
operator|-
literal|1
block|,
name|_VFP
block|,
name|_VBP
block|,
name|_LF
block|}
block|}
block|,
block|{
block|{
literal|38
block|,
literal|2
block|,
literal|3
block|,
literal|1
block|,
literal|3
block|,
literal|13
block|,
literal|34
block|,
literal|400
block|}
block|,
comment|/* normal */
block|{
literal|78
block|,
literal|2
block|,
literal|7
block|,
literal|3
block|,
literal|7
block|,
literal|13
block|,
literal|34
block|,
literal|400
block|}
block|,
block|{
literal|38
block|,
literal|2
block|,
literal|5
block|,
literal|1
block|,
literal|1
block|,
literal|6
operator|+
literal|48
block|,
literal|37
operator|+
literal|32
block|,
literal|400
block|}
block|,
comment|/* 30& 400 */
block|{
literal|78
block|,
literal|2
block|,
literal|11
block|,
literal|3
block|,
literal|3
block|,
literal|6
operator|+
literal|48
block|,
literal|37
operator|+
literal|32
block|,
literal|400
block|}
block|,
block|{
literal|38
block|,
literal|2
block|,
literal|5
block|,
literal|1
block|,
literal|1
block|,
literal|6
block|,
literal|37
block|,
literal|480
block|}
block|,
comment|/* 30& 480 */
block|{
literal|78
block|,
literal|2
block|,
literal|11
block|,
literal|3
block|,
literal|3
block|,
literal|6
block|,
literal|37
block|,
literal|480
block|}
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|int
name|SlavePCH
index|[
literal|2
index|]
init|=
block|{
literal|40
block|,
literal|80
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|int
name|MasterPCH
init|=
literal|80
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|int
name|SlaveScrlLF
index|[
literal|3
index|]
init|=
block|{
literal|400
block|,
literal|400
block|,
name|_LF
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __PC98_PC98_30LINE_H__ */
end_comment

end_unit

