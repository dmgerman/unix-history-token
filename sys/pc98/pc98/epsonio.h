begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) KATO Takenori, 1996.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer as  *    the first lines of this file unmodified.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__PC98_PC98_EPSONIO_H__
end_ifndef

begin_define
define|#
directive|define
name|__PC98_PC98_EPSONIO_H__
end_define

begin_include
include|#
directive|include
file|<machine/cpufunc.h>
end_include

begin_function
specifier|static
name|__inline
name|u_char
name|epson_inb
parameter_list|(
name|u_int
name|port
parameter_list|)
block|{
name|u_char
name|data
decl_stmt|;
name|outb
argument_list|(
literal|0x43f
argument_list|,
literal|0x42
argument_list|)
expr_stmt|;
name|data
operator|=
name|inb
argument_list|(
name|port
argument_list|)
expr_stmt|;
name|outb
argument_list|(
literal|0x43f
argument_list|,
literal|0x40
argument_list|)
expr_stmt|;
return|return
operator|(
name|data
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|epson_outb
parameter_list|(
name|u_int
name|port
parameter_list|,
name|u_char
name|data
parameter_list|)
block|{
name|outb
argument_list|(
literal|0x43f
argument_list|,
literal|0x42
argument_list|)
expr_stmt|;
name|outb
argument_list|(
name|port
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|outb
argument_list|(
literal|0x43f
argument_list|,
literal|0x40
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|u_int16_t
name|epson_inw
parameter_list|(
name|u_int
name|port
parameter_list|)
block|{
name|u_int16_t
name|data
decl_stmt|;
name|outb
argument_list|(
literal|0x43f
argument_list|,
literal|0x42
argument_list|)
expr_stmt|;
name|data
operator|=
name|inw
argument_list|(
name|port
argument_list|)
expr_stmt|;
name|outb
argument_list|(
literal|0x43f
argument_list|,
literal|0x40
argument_list|)
expr_stmt|;
return|return
operator|(
name|data
operator|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|epson_insw
parameter_list|(
name|u_int
name|port
parameter_list|,
name|void
modifier|*
name|addr
parameter_list|,
name|size_t
name|cnt
parameter_list|)
block|{
name|int
name|s
decl_stmt|;
name|s
operator|=
name|splbio
argument_list|()
expr_stmt|;
name|outb
argument_list|(
literal|0x43f
argument_list|,
literal|0x42
argument_list|)
expr_stmt|;
name|disable_intr
argument_list|()
expr_stmt|;
name|insw
argument_list|(
operator|(
name|u_int
operator|)
name|port
argument_list|,
operator|(
name|void
operator|*
operator|)
name|addr
argument_list|,
operator|(
name|size_t
operator|)
name|cnt
argument_list|)
expr_stmt|;
name|outb
argument_list|(
literal|0x43f
argument_list|,
literal|0x40
argument_list|)
expr_stmt|;
name|enable_intr
argument_list|()
expr_stmt|;
name|splx
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline
name|void
name|epson_outsw
parameter_list|(
name|u_int
name|port
parameter_list|,
name|void
modifier|*
name|addr
parameter_list|,
name|size_t
name|cnt
parameter_list|)
block|{
name|int
name|s
decl_stmt|;
name|s
operator|=
name|splbio
argument_list|()
expr_stmt|;
name|outb
argument_list|(
literal|0x43f
argument_list|,
literal|0x42
argument_list|)
expr_stmt|;
name|disable_intr
argument_list|()
expr_stmt|;
name|outsw
argument_list|(
operator|(
name|u_int
operator|)
name|port
argument_list|,
operator|(
name|void
operator|*
operator|)
name|addr
argument_list|,
operator|(
name|size_t
operator|)
name|cnt
argument_list|)
expr_stmt|;
name|outb
argument_list|(
literal|0x43f
argument_list|,
literal|0x40
argument_list|)
expr_stmt|;
name|enable_intr
argument_list|()
expr_stmt|;
name|splx
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

end_unit

