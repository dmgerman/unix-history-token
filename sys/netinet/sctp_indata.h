begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2001-2007, by Cisco Systems, Inc. All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *  * a) Redistributions of source code must retain the above copyright notice,  *   this list of conditions and the following disclaimer.  *  * b) Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in  *   the documentation and/or other materials provided with the distribution.  *  * c) Neither the name of Cisco Systems, Inc. nor the names of its  *    contributors may be used to endorse or promote products derived  *    from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF  * THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_comment
comment|/* $KAME: sctp_indata.h,v 1.9 2005/03/06 16:04:17 itojun Exp $	 */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|__sctp_indata_h__
end_ifndef

begin_define
define|#
directive|define
name|__sctp_indata_h__
end_define

begin_if
if|#
directive|if
name|defined
argument_list|(
name|_KERNEL
argument_list|)
end_if

begin_function_decl
name|struct
name|sctp_queued_to_read
modifier|*
name|sctp_build_readq_entry
parameter_list|(
name|struct
name|sctp_tcb
modifier|*
name|stcb
parameter_list|,
name|struct
name|sctp_nets
modifier|*
name|net
parameter_list|,
name|uint32_t
name|tsn
parameter_list|,
name|uint32_t
name|ppid
parameter_list|,
name|uint32_t
name|context
parameter_list|,
name|uint16_t
name|stream_no
parameter_list|,
name|uint16_t
name|stream_seq
parameter_list|,
name|uint8_t
name|flags
parameter_list|,
name|struct
name|mbuf
modifier|*
name|dm
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|sctp_build_readq_entry_mac
parameter_list|(
name|_ctl
parameter_list|,
name|in_it
parameter_list|,
name|a
parameter_list|,
name|net
parameter_list|,
name|tsn
parameter_list|,
name|ppid
parameter_list|,
name|context
parameter_list|,
name|stream_no
parameter_list|,
name|stream_seq
parameter_list|,
name|flags
parameter_list|,
name|dm
parameter_list|)
value|do { \ 	if (_ctl) { \ 		atomic_add_int(&((net)->ref_count), 1); \ 		(_ctl)->sinfo_stream = stream_no; \ 		(_ctl)->sinfo_ssn = stream_seq; \ 		(_ctl)->sinfo_flags = (flags<< 8); \ 		(_ctl)->sinfo_ppid = ppid; \ 		(_ctl)->sinfo_context = a; \ 		(_ctl)->sinfo_timetolive = 0; \ 		(_ctl)->sinfo_tsn = tsn; \ 		(_ctl)->sinfo_cumtsn = tsn; \ 		(_ctl)->sinfo_assoc_id = sctp_get_associd((in_it)); \ 		(_ctl)->length = 0; \ 		(_ctl)->held_length = 0; \ 		(_ctl)->whoFrom = net; \ 		(_ctl)->data = dm; \ 		(_ctl)->tail_mbuf = NULL; \ 	        (_ctl)->aux_data = NULL; \ 		(_ctl)->stcb = (in_it); \ 		(_ctl)->port_from = (in_it)->rport; \ 		(_ctl)->spec_flags = 0; \ 		(_ctl)->do_not_ref_stcb = 0; \ 		(_ctl)->end_added = 0; \ 		(_ctl)->pdapi_aborted = 0; \ 		(_ctl)->some_taken = 0; \ 	} \ } while (0)
end_define

begin_function_decl
name|struct
name|mbuf
modifier|*
name|sctp_build_ctl_nchunk
parameter_list|(
name|struct
name|sctp_inpcb
modifier|*
name|inp
parameter_list|,
name|struct
name|sctp_sndrcvinfo
modifier|*
name|sinfo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|sctp_build_ctl_cchunk
parameter_list|(
name|struct
name|sctp_inpcb
modifier|*
name|inp
parameter_list|,
name|int
modifier|*
name|control_len
parameter_list|,
name|struct
name|sctp_sndrcvinfo
modifier|*
name|sinfo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sctp_set_rwnd
parameter_list|(
name|struct
name|sctp_tcb
modifier|*
parameter_list|,
name|struct
name|sctp_association
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|sctp_calc_rwnd
parameter_list|(
name|struct
name|sctp_tcb
modifier|*
name|stcb
parameter_list|,
name|struct
name|sctp_association
modifier|*
name|asoc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sctp_express_handle_sack
parameter_list|(
name|struct
name|sctp_tcb
modifier|*
name|stcb
parameter_list|,
name|uint32_t
name|cumack
parameter_list|,
name|uint32_t
name|rwnd
parameter_list|,
name|int
name|nonce_sum_flag
parameter_list|,
name|int
modifier|*
name|abort_now
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sctp_handle_sack
parameter_list|(
name|struct
name|mbuf
modifier|*
name|m
parameter_list|,
name|int
name|offset
parameter_list|,
name|struct
name|sctp_sack_chunk
modifier|*
parameter_list|,
name|struct
name|sctp_tcb
modifier|*
parameter_list|,
name|struct
name|sctp_nets
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* draft-ietf-tsvwg-usctp */
end_comment

begin_function_decl
name|void
name|sctp_handle_forward_tsn
parameter_list|(
name|struct
name|sctp_tcb
modifier|*
parameter_list|,
name|struct
name|sctp_forward_tsn_chunk
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|sctp_tmit_chunk
modifier|*
name|sctp_try_advance_peer_ack_point
parameter_list|(
name|struct
name|sctp_tcb
modifier|*
parameter_list|,
name|struct
name|sctp_association
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sctp_service_queues
parameter_list|(
name|struct
name|sctp_tcb
modifier|*
parameter_list|,
name|struct
name|sctp_association
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sctp_update_acked
parameter_list|(
name|struct
name|sctp_tcb
modifier|*
parameter_list|,
name|struct
name|sctp_shutdown_chunk
modifier|*
parameter_list|,
name|struct
name|sctp_nets
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sctp_process_data
parameter_list|(
name|struct
name|mbuf
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|sctphdr
modifier|*
parameter_list|,
name|struct
name|sctp_inpcb
modifier|*
parameter_list|,
name|struct
name|sctp_tcb
modifier|*
parameter_list|,
name|struct
name|sctp_nets
modifier|*
parameter_list|,
name|uint32_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sctp_sack_check
parameter_list|(
name|struct
name|sctp_tcb
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

