begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * $FreeBSD$  *  * linux-like bidirectional lists  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MYLIST_H
end_ifndef

begin_define
define|#
directive|define
name|_MYLIST_H
end_define

begin_struct
struct|struct
name|list_head
block|{
name|struct
name|list_head
modifier|*
name|prev
decl_stmt|,
modifier|*
name|next
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|INIT_LIST_HEAD
parameter_list|(
name|l
parameter_list|)
value|do {  (l)->prev = (l)->next = (l); } while (0)
end_define

begin_define
define|#
directive|define
name|list_empty
parameter_list|(
name|l
parameter_list|)
value|( (l)->next == l )
end_define

begin_function
specifier|static
specifier|inline
name|void
name|__list_add
parameter_list|(
name|struct
name|list_head
modifier|*
name|new
parameter_list|,
name|struct
name|list_head
modifier|*
name|prev
parameter_list|,
name|struct
name|list_head
modifier|*
name|next
parameter_list|)
block|{
name|next
operator|->
name|prev
operator|=
name|new
expr_stmt|;
name|new
operator|->
name|next
operator|=
name|next
expr_stmt|;
name|new
operator|->
name|prev
operator|=
name|prev
expr_stmt|;
name|prev
operator|->
name|next
operator|=
name|new
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|list_add_tail
parameter_list|(
name|struct
name|list_head
modifier|*
name|new
parameter_list|,
name|struct
name|list_head
modifier|*
name|head
parameter_list|)
block|{
name|__list_add
argument_list|(
name|new
argument_list|,
name|head
operator|->
name|prev
argument_list|,
name|head
argument_list|)
expr_stmt|;
block|}
end_function

begin_define
define|#
directive|define
name|list_first_entry
parameter_list|(
name|pL
parameter_list|,
name|ty
parameter_list|,
name|member
parameter_list|)
define|\
value|(ty *)((char *)((pL)->next) - offsetof(ty, member))
end_define

begin_function
specifier|static
specifier|inline
name|void
name|__list_del
parameter_list|(
name|struct
name|list_head
modifier|*
name|prev
parameter_list|,
name|struct
name|list_head
modifier|*
name|next
parameter_list|)
block|{
name|next
operator|->
name|prev
operator|=
name|prev
expr_stmt|;
name|prev
operator|->
name|next
operator|=
name|next
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|list_del
parameter_list|(
name|struct
name|list_head
modifier|*
name|entry
parameter_list|)
block|{
name|ND
argument_list|(
literal|"called on %p"
argument_list|,
name|entry
argument_list|)
expr_stmt|;
name|__list_del
argument_list|(
name|entry
operator|->
name|prev
argument_list|,
name|entry
operator|->
name|next
argument_list|)
expr_stmt|;
name|entry
operator|->
name|next
operator|=
name|entry
operator|->
name|prev
operator|=
name|NULL
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _MYLIST_H */
end_comment

end_unit

