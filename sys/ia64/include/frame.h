begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2000 Doug Rabson  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	$FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MACHINE_FRAME_H_
end_ifndef

begin_define
define|#
directive|define
name|_MACHINE_FRAME_H_
end_define

begin_include
include|#
directive|include
file|<machine/reg.h>
end_include

begin_comment
comment|/*  * Software trap, exception, and syscall frame.  *  * This is loosely based on the Linux pt_regs structure. When I  * understand things better, I might change it.  */
end_comment

begin_struct
struct|struct
name|trapframe
block|{
name|u_int64_t
name|tf_cr_iip
decl_stmt|;
name|u_int64_t
name|tf_cr_ipsr
decl_stmt|;
name|u_int64_t
name|tf_cr_isr
decl_stmt|;
name|u_int64_t
name|tf_cr_ifa
decl_stmt|;
name|u_int64_t
name|tf_pr
decl_stmt|;
name|u_int64_t
name|tf_ar_rsc
decl_stmt|;
name|u_int64_t
name|tf_ar_pfs
decl_stmt|;
name|u_int64_t
name|tf_cr_ifs
decl_stmt|;
name|u_int64_t
name|tf_ar_bspstore
decl_stmt|;
name|u_int64_t
name|tf_ar_rnat
decl_stmt|;
name|u_int64_t
name|tf_ndirty
decl_stmt|;
name|u_int64_t
name|tf_ar_unat
decl_stmt|;
name|u_int64_t
name|tf_ar_ccv
decl_stmt|;
name|u_int64_t
name|tf_ar_fpsr
decl_stmt|;
name|u_int64_t
name|tf_b
index|[
literal|8
index|]
decl_stmt|;
name|u_int64_t
name|tf_r
index|[
literal|31
index|]
decl_stmt|;
comment|/* don't need to save r0 */
define|#
directive|define
name|FRAME_R1
value|0
define|#
directive|define
name|FRAME_GP
value|0
define|#
directive|define
name|FRAME_R2
value|1
define|#
directive|define
name|FRAME_R3
value|2
define|#
directive|define
name|FRAME_R4
value|3
define|#
directive|define
name|FRAME_R5
value|4
define|#
directive|define
name|FRAME_R6
value|5
define|#
directive|define
name|FRAME_R7
value|6
define|#
directive|define
name|FRAME_R8
value|7
define|#
directive|define
name|FRAME_R9
value|8
define|#
directive|define
name|FRAME_R10
value|9
define|#
directive|define
name|FRAME_R11
value|10
define|#
directive|define
name|FRAME_R12
value|11
define|#
directive|define
name|FRAME_SP
value|11
define|#
directive|define
name|FRAME_R13
value|12
define|#
directive|define
name|FRAME_TP
value|12
define|#
directive|define
name|FRAME_R14
value|13
define|#
directive|define
name|FRAME_R15
value|14
define|#
directive|define
name|FRAME_R16
value|15
define|#
directive|define
name|FRAME_R17
value|16
define|#
directive|define
name|FRAME_R18
value|17
define|#
directive|define
name|FRAME_R19
value|18
define|#
directive|define
name|FRAME_R20
value|19
define|#
directive|define
name|FRAME_R21
value|20
define|#
directive|define
name|FRAME_R22
value|21
define|#
directive|define
name|FRAME_R23
value|22
define|#
directive|define
name|FRAME_R24
value|23
define|#
directive|define
name|FRAME_R25
value|24
define|#
directive|define
name|FRAME_R26
value|25
define|#
directive|define
name|FRAME_R27
value|26
define|#
directive|define
name|FRAME_R28
value|27
define|#
directive|define
name|FRAME_R29
value|28
define|#
directive|define
name|FRAME_R30
value|29
define|#
directive|define
name|FRAME_R31
value|30
name|u_int64_t
name|tf_pad1
decl_stmt|;
comment|/* 	 * We rely on the compiler to save/restore f2-f5 and 	 * f16-f31. We also tell the compiler to avoid f32-f127 	 * completely so we don't worry about them at all. 	 */
name|struct
name|ia64_fpreg
name|tf_f
index|[
literal|10
index|]
decl_stmt|;
define|#
directive|define
name|FRAME_F6
value|0
define|#
directive|define
name|FRAME_F7
value|1
define|#
directive|define
name|FRAME_F8
value|2
define|#
directive|define
name|FRAME_F9
value|3
define|#
directive|define
name|FRAME_F10
value|3
define|#
directive|define
name|FRAME_F11
value|3
define|#
directive|define
name|FRAME_F12
value|3
define|#
directive|define
name|FRAME_F13
value|3
define|#
directive|define
name|FRAME_F14
value|3
define|#
directive|define
name|FRAME_F15
value|3
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _MACHINE_FRAME_H_ */
end_comment

end_unit

