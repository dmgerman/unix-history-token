begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2002 Marcel Moolenaar  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MACHINE_DIG64_H_
end_ifndef

begin_define
define|#
directive|define
name|_MACHINE_DIG64_H_
end_define

begin_struct
struct|struct
name|dig64_gas
block|{
name|uint8_t
name|addr_space
decl_stmt|;
name|uint8_t
name|bit_width
decl_stmt|;
name|uint8_t
name|bit_offset
decl_stmt|;
name|uint8_t
name|_reserved_
decl_stmt|;
comment|/* 	 * XXX using a 64-bit type for the address would cause padding and 	 * using __packed would cause unaligned accesses... 	 */
name|uint32_t
name|addr_low
decl_stmt|;
name|uint32_t
name|addr_high
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|dig64_hcdp_entry
block|{
name|uint8_t
name|type
decl_stmt|;
define|#
directive|define
name|DIG64_HCDP_CONSOLE
value|0
define|#
directive|define
name|DIG64_HCDP_DBGPORT
value|1
name|uint8_t
name|databits
decl_stmt|;
name|uint8_t
name|parity
decl_stmt|;
name|uint8_t
name|stopbits
decl_stmt|;
name|uint8_t
name|pci_segment
decl_stmt|;
name|uint8_t
name|pci_bus
decl_stmt|;
name|uint8_t
name|pci_device
range|:
literal|5
decl_stmt|;
name|uint8_t
name|_reserved1_
range|:
literal|3
decl_stmt|;
name|uint8_t
name|pci_function
range|:
literal|3
decl_stmt|;
name|uint8_t
name|_reserved2_
range|:
literal|3
decl_stmt|;
name|uint8_t
name|interrupt
range|:
literal|1
decl_stmt|;
name|uint8_t
name|pci_flag
range|:
literal|1
decl_stmt|;
comment|/* 	 * XXX using a 64-bit type for the baudrate would cause padding and 	 * using __packed would cause unaligned accesses... 	 */
name|uint32_t
name|baud_low
decl_stmt|;
name|uint32_t
name|baud_high
decl_stmt|;
name|struct
name|dig64_gas
name|address
decl_stmt|;
name|uint16_t
name|pci_devid
decl_stmt|;
name|uint16_t
name|pci_vendor
decl_stmt|;
name|uint32_t
name|irq
decl_stmt|;
name|uint32_t
name|pclock
decl_stmt|;
name|uint8_t
name|pci_interface
decl_stmt|;
name|uint8_t
name|_reserved3_
index|[
literal|7
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|dig64_hcdp_table
block|{
name|char
name|signature
index|[
literal|4
index|]
decl_stmt|;
define|#
directive|define
name|HCDP_SIGNATURE
value|"HCDP"
name|uint32_t
name|length
decl_stmt|;
name|uint8_t
name|revision
decl_stmt|;
name|uint8_t
name|checksum
decl_stmt|;
name|char
name|oem_id
index|[
literal|6
index|]
decl_stmt|;
name|char
name|oem_tbl_id
index|[
literal|8
index|]
decl_stmt|;
name|uint32_t
name|oem_rev
decl_stmt|;
name|char
name|creator_id
index|[
literal|4
index|]
decl_stmt|;
name|uint32_t
name|creator_rev
decl_stmt|;
name|uint32_t
name|entries
decl_stmt|;
name|struct
name|dig64_hcdp_entry
name|entry
index|[
literal|1
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

end_unit

