begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2013 The FreeBSD Foundation  * All rights reserved.  *  * This software was developed by Konstantin Belousov<kib@FreeBSD.org>  * under sponsorship from the FreeBSD Foundation.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__X86_BUSDMA_IMPL_H
end_ifndef

begin_define
define|#
directive|define
name|__X86_BUSDMA_IMPL_H
end_define

begin_struct
struct|struct
name|bus_dma_tag_common
block|{
name|struct
name|bus_dma_impl
modifier|*
name|impl
decl_stmt|;
name|struct
name|bus_dma_tag_common
modifier|*
name|parent
decl_stmt|;
name|bus_size_t
name|alignment
decl_stmt|;
name|bus_addr_t
name|boundary
decl_stmt|;
name|bus_addr_t
name|lowaddr
decl_stmt|;
name|bus_addr_t
name|highaddr
decl_stmt|;
name|bus_dma_filter_t
modifier|*
name|filter
decl_stmt|;
name|void
modifier|*
name|filterarg
decl_stmt|;
name|bus_size_t
name|maxsize
decl_stmt|;
name|u_int
name|nsegments
decl_stmt|;
name|bus_size_t
name|maxsegsz
decl_stmt|;
name|int
name|flags
decl_stmt|;
name|bus_dma_lock_t
modifier|*
name|lockfunc
decl_stmt|;
name|void
modifier|*
name|lockfuncarg
decl_stmt|;
name|int
name|ref_count
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|bus_dma_impl
block|{
name|int
function_decl|(
modifier|*
name|tag_create
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|parent
parameter_list|,
name|bus_size_t
name|alignment
parameter_list|,
name|bus_addr_t
name|boundary
parameter_list|,
name|bus_addr_t
name|lowaddr
parameter_list|,
name|bus_addr_t
name|highaddr
parameter_list|,
name|bus_dma_filter_t
modifier|*
name|filter
parameter_list|,
name|void
modifier|*
name|filterarg
parameter_list|,
name|bus_size_t
name|maxsize
parameter_list|,
name|int
name|nsegments
parameter_list|,
name|bus_size_t
name|maxsegsz
parameter_list|,
name|int
name|flags
parameter_list|,
name|bus_dma_lock_t
modifier|*
name|lockfunc
parameter_list|,
name|void
modifier|*
name|lockfuncarg
parameter_list|,
name|bus_dma_tag_t
modifier|*
name|dmat
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|tag_destroy
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|map_create
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|int
name|flags
parameter_list|,
name|bus_dmamap_t
modifier|*
name|mapp
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|map_destroy
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|mem_alloc
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|void
modifier|*
modifier|*
name|vaddr
parameter_list|,
name|int
name|flags
parameter_list|,
name|bus_dmamap_t
modifier|*
name|mapp
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|mem_free
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|void
modifier|*
name|vaddr
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|load_ma
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|struct
name|vm_page
modifier|*
modifier|*
name|ma
parameter_list|,
name|bus_size_t
name|tlen
parameter_list|,
name|int
name|ma_offs
parameter_list|,
name|int
name|flags
parameter_list|,
name|bus_dma_segment_t
modifier|*
name|segs
parameter_list|,
name|int
modifier|*
name|segp
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|load_phys
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|vm_paddr_t
name|buf
parameter_list|,
name|bus_size_t
name|buflen
parameter_list|,
name|int
name|flags
parameter_list|,
name|bus_dma_segment_t
modifier|*
name|segs
parameter_list|,
name|int
modifier|*
name|segp
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|load_buffer
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|bus_size_t
name|buflen
parameter_list|,
name|pmap_t
name|pmap
parameter_list|,
name|int
name|flags
parameter_list|,
name|bus_dma_segment_t
modifier|*
name|segs
parameter_list|,
name|int
modifier|*
name|segp
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|map_waitok
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|struct
name|memdesc
modifier|*
name|mem
parameter_list|,
name|bus_dmamap_callback_t
modifier|*
name|callback
parameter_list|,
name|void
modifier|*
name|callback_arg
parameter_list|)
function_decl|;
name|bus_dma_segment_t
modifier|*
function_decl|(
modifier|*
name|map_complete
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|bus_dma_segment_t
modifier|*
name|segs
parameter_list|,
name|int
name|nsegs
parameter_list|,
name|int
name|error
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|map_unload
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|map_sync
function_decl|)
parameter_list|(
name|bus_dma_tag_t
name|dmat
parameter_list|,
name|bus_dmamap_t
name|map
parameter_list|,
name|bus_dmasync_op_t
name|op
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_function_decl
name|void
name|busdma_lock_mutex
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|,
name|bus_dma_lock_op_t
name|op
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|bus_dma_dflt_lock
parameter_list|(
name|void
modifier|*
name|arg
parameter_list|,
name|bus_dma_lock_op_t
name|op
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bus_dma_run_filter
parameter_list|(
name|struct
name|bus_dma_tag_common
modifier|*
name|dmat
parameter_list|,
name|bus_addr_t
name|paddr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|common_bus_dma_tag_create
parameter_list|(
name|struct
name|bus_dma_tag_common
modifier|*
name|parent
parameter_list|,
name|bus_size_t
name|alignment
parameter_list|,
name|bus_addr_t
name|boundary
parameter_list|,
name|bus_addr_t
name|lowaddr
parameter_list|,
name|bus_addr_t
name|highaddr
parameter_list|,
name|bus_dma_filter_t
modifier|*
name|filter
parameter_list|,
name|void
modifier|*
name|filterarg
parameter_list|,
name|bus_size_t
name|maxsize
parameter_list|,
name|int
name|nsegments
parameter_list|,
name|bus_size_t
name|maxsegsz
parameter_list|,
name|int
name|flags
parameter_list|,
name|bus_dma_lock_t
modifier|*
name|lockfunc
parameter_list|,
name|void
modifier|*
name|lockfuncarg
parameter_list|,
name|size_t
name|sz
parameter_list|,
name|void
modifier|*
modifier|*
name|dmat
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|struct
name|bus_dma_impl
name|bus_dma_bounce_impl
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

