begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2010  *	Ben Gray<ben.r.gray@gmail.com>.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by Ben Gray.  * 4. The name of the company nor the name of the author may be used to  *    endorse or promote products derived from this software without specific  *    prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY BEN GRAY ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL BEN GRAY BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;  * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR  * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF  * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_comment
comment|/**  *	Functions to configure the PIN multiplexing on the chip.  *  *	This is different from the GPIO module in that it is used to configure the  *	pins between modules not just GPIO input output.  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_TI_PINMUX_H_
end_ifndef

begin_define
define|#
directive|define
name|_TI_PINMUX_H_
end_define

begin_struct
struct|struct
name|ti_pinmux_padconf
block|{
name|uint16_t
name|reg_off
decl_stmt|;
name|uint16_t
name|gpio_pin
decl_stmt|;
name|uint16_t
name|gpio_mode
decl_stmt|;
specifier|const
name|char
modifier|*
name|ballname
decl_stmt|;
specifier|const
name|char
modifier|*
name|muxmodes
index|[
literal|8
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ti_pinmux_padstate
block|{
specifier|const
name|char
modifier|*
name|state
decl_stmt|;
name|uint16_t
name|reg
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ti_pinmux_device
block|{
name|uint16_t
name|padconf_muxmode_mask
decl_stmt|;
name|uint16_t
name|padconf_sate_mask
decl_stmt|;
specifier|const
name|struct
name|ti_pinmux_padstate
modifier|*
name|padstate
decl_stmt|;
specifier|const
name|struct
name|ti_pinmux_padconf
modifier|*
name|padconf
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ti_pinmux_softc
block|{
name|device_t
name|sc_dev
decl_stmt|;
name|struct
name|resource
modifier|*
name|sc_res
index|[
literal|4
index|]
decl_stmt|;
name|bus_space_tag_t
name|sc_bst
decl_stmt|;
name|bus_space_handle_t
name|sc_bsh
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|ti_pinmux_padconf_set
parameter_list|(
specifier|const
name|char
modifier|*
name|padname
parameter_list|,
specifier|const
name|char
modifier|*
name|muxmode
parameter_list|,
name|unsigned
name|int
name|state
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ti_pinmux_padconf_get
parameter_list|(
specifier|const
name|char
modifier|*
name|padname
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|muxmode
parameter_list|,
name|unsigned
name|int
modifier|*
name|state
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ti_pinmux_padconf_set_gpiomode
parameter_list|(
name|uint32_t
name|gpio
parameter_list|,
name|unsigned
name|int
name|state
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ti_pinmux_padconf_get_gpiomode
parameter_list|(
name|uint32_t
name|gpio
parameter_list|,
name|unsigned
name|int
modifier|*
name|state
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _TI_SCM_H_ */
end_comment

end_unit

