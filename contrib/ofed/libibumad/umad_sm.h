begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2004-2014 Mellanox Technologies Ltd.  All rights reserved.  * Copyright (c) 2004 Infinicon Corporation.  All rights reserved.  * Copyright (c) 2004 Intel Corporation.  All rights reserved.  * Copyright (c) 2004 Topspin Corporation.  All rights reserved.  * Copyright (c) 2004 Voltaire Corporation.  All rights reserved.  * Copyright (c) 2013 Oracle and/or its affiliates. All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_UMAD_SM_H
end_ifndef

begin_define
define|#
directive|define
name|_UMAD_SM_H
end_define

begin_include
include|#
directive|include
file|<infiniband/umad_types.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_define
define|#
directive|define
name|BEGIN_C_DECLS
value|extern "C" {
end_define

begin_define
define|#
directive|define
name|END_C_DECLS
value|}
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* !__cplusplus */
end_comment

begin_define
define|#
directive|define
name|BEGIN_C_DECLS
end_define

begin_define
define|#
directive|define
name|END_C_DECLS
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __cplusplus */
end_comment

begin_decl_stmt
name|BEGIN_C_DECLS
name|enum
type|{
name|UMAD_SMP_DIRECTION
init|=
literal|0x8000
decl_stmt|,
end_decl_stmt

begin_comment
unit|};
comment|/* Subnet management attributes */
end_comment

begin_enum
enum|enum
block|{
name|UMAD_SM_ATTR_NODE_DESC
init|=
literal|0x0010
block|,
name|UMAD_SM_ATTR_NODE_INFO
init|=
literal|0x0011
block|,
name|UMAD_SM_ATTR_SWITCH_INFO
init|=
literal|0x0012
block|,
name|UMAD_SM_ATTR_GUID_INFO
init|=
literal|0x0014
block|,
name|UMAD_SM_ATTR_PORT_INFO
init|=
literal|0x0015
block|,
name|UMAD_SM_ATTR_PKEY_TABLE
init|=
literal|0x0016
block|,
name|UMAD_SM_ATTR_SLVL_TABLE
init|=
literal|0x0017
block|,
name|UMAD_SM_ATTR_VL_ARB_TABLE
init|=
literal|0x0018
block|,
name|UMAD_SM_ATTR_LINEAR_FT
init|=
literal|0x0019
block|,
name|UMAD_SM_ATTR_RANDOM_FT
init|=
literal|0x001A
block|,
name|UMAD_SM_ATTR_MCAST_FT
init|=
literal|0x001B
block|,
name|UMAD_SM_ATTR_LINK_SPD_WIDTH_TABLE
init|=
literal|0x001C
block|,
name|UMAD_SM_ATTR_VENDOR_MADS_TABLE
init|=
literal|0x001D
block|,
name|UMAD_SM_ATTR_HIERARCHY_INFO
init|=
literal|0x001E
block|,
name|UMAD_SM_ATTR_SM_INFO
init|=
literal|0x0020
block|,
name|UMAD_SM_ATTR_VENDOR_DIAG
init|=
literal|0x0030
block|,
name|UMAD_SM_ATTR_LED_INFO
init|=
literal|0x0031
block|,
name|UMAD_SM_ATTR_CABLE_INFO
init|=
literal|0x0032
block|,
name|UMAD_SM_ATTR_PORT_INFO_EXT
init|=
literal|0x0033
block|,
name|UMAD_SM_ATTR_VENDOR_MASK
init|=
literal|0xFF00
block|,
name|UMAD_SM_ATTR_MLNX_EXT_PORT_INFO
init|=
literal|0xFF90
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|UMAD_SM_GID_IN_SERVICE_TRAP
init|=
literal|64
block|,
name|UMAD_SM_GID_OUT_OF_SERVICE_TRAP
init|=
literal|65
block|,
name|UMAD_SM_MGID_CREATED_TRAP
init|=
literal|66
block|,
name|UMAD_SM_MGID_DESTROYED_TRAP
init|=
literal|67
block|,
name|UMAD_SM_UNPATH_TRAP
init|=
literal|68
block|,
name|UMAD_SM_REPATH_TRAP
init|=
literal|69
block|,
name|UMAD_SM_LINK_STATE_CHANGED_TRAP
init|=
literal|128
block|,
name|UMAD_SM_LINK_INTEGRITY_THRESHOLD_TRAP
init|=
literal|129
block|,
name|UMAD_SM_BUFFER_OVERRUN_THRESHOLD_TRAP
init|=
literal|130
block|,
name|UMAD_SM_WATCHDOG_TIMER_EXPIRED_TRAP
init|=
literal|131
block|,
name|UMAD_SM_LOCAL_CHANGES_TRAP
init|=
literal|144
block|,
name|UMAD_SM_SYS_IMG_GUID_CHANGED_TRAP
init|=
literal|145
block|,
name|UMAD_SM_BAD_MKEY_TRAP
init|=
literal|256
block|,
name|UMAD_SM_BAD_PKEY_TRAP
init|=
literal|257
block|,
name|UMAD_SM_BAD_QKEY_TRAP
init|=
literal|258
block|,
name|UMAD_SM_BAD_SWITCH_PKEY_TRAP
init|=
literal|259
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|UMAD_LEN_SMP_DATA
init|=
literal|64
block|,
name|UMAD_SMP_MAX_HOPS
init|=
literal|64
block|}
enum|;
end_enum

begin_struct
struct|struct
name|umad_smp
block|{
name|uint8_t
name|base_version
decl_stmt|;
name|uint8_t
name|mgmt_class
decl_stmt|;
name|uint8_t
name|class_version
decl_stmt|;
name|uint8_t
name|method
decl_stmt|;
name|__be16
name|status
decl_stmt|;
name|uint8_t
name|hop_ptr
decl_stmt|;
name|uint8_t
name|hop_cnt
decl_stmt|;
name|__be64
name|tid
decl_stmt|;
name|__be16
name|attr_id
decl_stmt|;
name|__be16
name|resv
decl_stmt|;
name|__be32
name|attr_mod
decl_stmt|;
name|__be64
name|mkey
decl_stmt|;
name|__be16
name|dr_slid
decl_stmt|;
name|__be16
name|dr_dlid
decl_stmt|;
name|uint8_t
name|reserved
index|[
literal|28
index|]
decl_stmt|;
name|uint8_t
name|data
index|[
name|UMAD_LEN_SMP_DATA
index|]
decl_stmt|;
name|uint8_t
name|initial_path
index|[
name|UMAD_SMP_MAX_HOPS
index|]
decl_stmt|;
name|uint8_t
name|return_path
index|[
name|UMAD_SMP_MAX_HOPS
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_macro
name|END_C_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _UMAD_SM_H */
end_comment

end_unit

