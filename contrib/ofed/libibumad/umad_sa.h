begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2004 Topspin Communications.  All rights reserved.  * Copyright (c) 2005 Voltaire, Inc.  All rights reserved.  * Copyright (c) 2006, 2010 Intel Corporation.  All rights reserved.  * Copyright (c) 2014 Mellanox Technologies LTD. All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_UMAD_SA_H
end_ifndef

begin_define
define|#
directive|define
name|_UMAD_SA_H
end_define

begin_include
include|#
directive|include
file|<infiniband/umad_types.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_define
define|#
directive|define
name|BEGIN_C_DECLS
value|extern "C" {
end_define

begin_define
define|#
directive|define
name|END_C_DECLS
value|}
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* !__cplusplus */
end_comment

begin_define
define|#
directive|define
name|BEGIN_C_DECLS
end_define

begin_define
define|#
directive|define
name|END_C_DECLS
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __cplusplus */
end_comment

begin_decl_stmt
name|BEGIN_C_DECLS
comment|/* SA specific methods */
name|enum
type|{
name|UMAD_SA_CLASS_VERSION
init|=
literal|2
decl_stmt|,
comment|/* IB spec version 1.1/1.2 */
name|UMAD_SA_METHOD_GET_TABLE
init|=
literal|0x12
decl_stmt|,
name|UMAD_SA_METHOD_GET_TABLE_RESP
init|=
literal|0x92
decl_stmt|,
name|UMAD_SA_METHOD_DELETE
init|=
literal|0x15
decl_stmt|,
name|UMAD_SA_METHOD_DELETE_RESP
init|=
literal|0x95
decl_stmt|,
name|UMAD_SA_METHOD_GET_MULTI
init|=
literal|0x14
decl_stmt|,
name|UMAD_SA_METHOD_GET_MULTI_RESP
init|=
literal|0x94
decl_stmt|,
name|UMAD_SA_METHOD_GET_TRACE_TABLE
init|=
literal|0x13
end_decl_stmt

begin_enum
unit|};
enum|enum
block|{
name|UMAD_SA_STATUS_SUCCESS
init|=
literal|0
block|,
name|UMAD_SA_STATUS_NO_RESOURCES
init|=
literal|1
block|,
name|UMAD_SA_STATUS_REQ_INVALID
init|=
literal|2
block|,
name|UMAD_SA_STATUS_NO_RECORDS
init|=
literal|3
block|,
name|UMAD_SA_STATUS_TOO_MANY_RECORDS
init|=
literal|4
block|,
name|UMAD_SA_STATUS_INVALID_GID
init|=
literal|5
block|,
name|UMAD_SA_STATUS_INSUF_COMPS
init|=
literal|6
block|,
name|UMAD_SA_STATUS_REQ_DENIED
init|=
literal|7
block|,
name|UMAD_SA_STATUS_PRI_SUGGESTED
init|=
literal|8
block|}
enum|;
end_enum

begin_comment
comment|/* SA attributes */
end_comment

begin_enum
enum|enum
block|{
name|UMAD_SA_ATTR_NODE_REC
init|=
literal|0x0011
block|,
name|UMAD_SA_ATTR_PORT_INFO_REC
init|=
literal|0x0012
block|,
name|UMAD_SA_ATTR_SLVL_REC
init|=
literal|0x0013
block|,
name|UMAD_SA_ATTR_SWITCH_INFO_REC
init|=
literal|0x0014
block|,
name|UMAD_SA_ATTR_LINEAR_FT_REC
init|=
literal|0x0015
block|,
name|UMAD_SA_ATTR_RANDOM_FT_REC
init|=
literal|0x0016
block|,
name|UMAD_SA_ATTR_MCAST_FT_REC
init|=
literal|0x0017
block|,
name|UMAD_SA_ATTR_SM_INFO_REC
init|=
literal|0x0018
block|,
name|UMAD_SA_ATTR_LINK_SPD_WIDTH_TABLE_REC
init|=
literal|0x0019
block|,
name|UMAD_SA_ATTR_INFORM_INFO_REC
init|=
literal|0x00F3
block|,
name|UMAD_SA_ATTR_LINK_REC
init|=
literal|0x0020
block|,
name|UMAD_SA_ATTR_GUID_INFO_REC
init|=
literal|0x0030
block|,
name|UMAD_SA_ATTR_SERVICE_REC
init|=
literal|0x0031
block|,
name|UMAD_SA_ATTR_PKEY_TABLE_REC
init|=
literal|0x0033
block|,
name|UMAD_SA_ATTR_PATH_REC
init|=
literal|0x0035
block|,
name|UMAD_SA_ATTR_VL_ARB_REC
init|=
literal|0x0036
block|,
name|UMAD_SA_ATTR_MCMEMBER_REC
init|=
literal|0x0038
block|,
name|UMAD_SA_ATTR_TRACE_REC
init|=
literal|0x0039
block|,
name|UMAD_SA_ATTR_MULTI_PATH_REC
init|=
literal|0x003A
block|,
name|UMAD_SA_ATTR_SERVICE_ASSOC_REC
init|=
literal|0x003B
block|,
name|UMAD_SA_ATTR_HIERARCHY_INFO_REC
init|=
literal|0x003C
block|,
name|UMAD_SA_ATTR_CABLE_INFO_REC
init|=
literal|0x003D
block|,
name|UMAD_SA_ATTR_PORT_INFO_EXT_REC
init|=
literal|0x003E
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|UMAD_LEN_SA_DATA
init|=
literal|200
block|}
enum|;
end_enum

begin_comment
comment|/* CM bits */
end_comment

begin_enum
enum|enum
block|{
name|UMAD_SA_CAP_MASK_IS_SUBNET_OPT_REC_SUP
init|=
operator|(
literal|1
operator|<<
literal|8
operator|)
block|,
name|UMAD_SA_CAP_MASK_IS_UD_MCAST_SUP
init|=
operator|(
literal|1
operator|<<
literal|9
operator|)
block|,
name|UMAD_SA_CAP_MASK_IS_MULTIPATH_SUP
init|=
operator|(
literal|1
operator|<<
literal|10
operator|)
block|,
name|UMAD_SA_CAP_MASK_IS_REINIT_SUP
init|=
operator|(
literal|1
operator|<<
literal|11
operator|)
block|,
name|UMAD_SA_CAP_MASK_IS_GID_SCOPED_MULTIPATH_SUP
init|=
operator|(
literal|1
operator|<<
literal|12
operator|)
block|,
name|UMAD_SA_CAP_MASK_IS_PORTINFO_CAP_MASK_MATCH_SUP
init|=
operator|(
literal|1
operator|<<
literal|13
operator|)
block|,
name|UMAD_SA_CAP_MASK_IS_LINK_SPEED_WIDTH_PAIRS_REC_SUP
init|=
operator|(
literal|1
operator|<<
literal|14
operator|)
block|,
name|UMAD_SA_CAP_MASK_IS_PA_SERVICES_SUP
init|=
operator|(
literal|1
operator|<<
literal|15
operator|)
block|}
enum|;
end_enum

begin_comment
comment|/* CM2 bits */
end_comment

begin_enum
enum|enum
block|{
name|UMAD_SA_CAP_MASK2_IS_UNPATH_REPATH_SUP
init|=
operator|(
literal|1
operator|<<
literal|0
operator|)
block|,
name|UMAD_SA_CAP_MASK2_IS_QOS_SUP
init|=
operator|(
literal|1
operator|<<
literal|1
operator|)
block|,
name|UMAD_SA_CAP_MASK2_IS_REV_PATH_PKEY_MEM_BIT_SUP
init|=
operator|(
literal|1
operator|<<
literal|2
operator|)
block|,
name|UMAD_SA_CAP_MASK2_IS_MCAST_TOP_SUP
init|=
operator|(
literal|1
operator|<<
literal|3
operator|)
block|,
name|UMAD_SA_CAP_MASK2_IS_HIERARCHY_INFO_SUP
init|=
operator|(
literal|1
operator|<<
literal|4
operator|)
block|,
name|UMAD_SA_CAP_MASK2_IS_ADDITIONAL_GUID_SUP
init|=
operator|(
literal|1
operator|<<
literal|5
operator|)
block|,
name|UMAD_SA_CAP_MASK2_IS_FULL_PORTINFO_REC_SUP
init|=
operator|(
literal|1
operator|<<
literal|6
operator|)
block|,
name|UMAD_SA_CAP_MASK2_IS_EXT_SPEEDS_SUP
init|=
operator|(
literal|1
operator|<<
literal|7
operator|)
block|,
name|UMAD_SA_CAP_MASK2_IS_MCAST_SERVICE_REC_SUP
init|=
operator|(
literal|1
operator|<<
literal|8
operator|)
block|,
name|UMAD_SA_CAP_MASK2_IS_CABLE_INFO_REC_SUP
init|=
operator|(
literal|1
operator|<<
literal|9
operator|)
block|,
name|UMAD_SA_CAP_MASK2_IS_PORT_INFO_CAPMASK2_MATCH_SUP
init|=
operator|(
literal|1
operator|<<
literal|10
operator|)
block|,
name|UMAD_SA_CAP_MASK2_IS_PORT_INFO_EXT_REC_SUP
init|=
operator|(
literal|1
operator|<<
literal|11
operator|)
block|}
enum|;
end_enum

begin_comment
comment|/*  *  sm_key is not aligned on an 8-byte boundary, so is defined as a byte array  */
end_comment

begin_struct
struct|struct
name|umad_sa_packet
block|{
name|struct
name|umad_hdr
name|mad_hdr
decl_stmt|;
name|struct
name|umad_rmpp_hdr
name|rmpp_hdr
decl_stmt|;
name|uint8_t
name|sm_key
index|[
literal|8
index|]
decl_stmt|;
comment|/* network-byte order */
name|__be16
name|attr_offset
decl_stmt|;
name|__be16
name|reserved
decl_stmt|;
name|__be64
name|comp_mask
decl_stmt|;
name|uint8_t
name|data
index|[
name|UMAD_LEN_SA_DATA
index|]
decl_stmt|;
comment|/* network-byte order */
block|}
struct|;
end_struct

begin_macro
name|END_C_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _UMAD_SA_H */
end_comment

end_unit

