begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2008,2009 System Fabric Works, Inc. All rights reserved.  * Copyright (c) 2004-2008 Voltaire, Inc. All rights reserved.  * Copyright (c) 2002-2006 Mellanox Technologies LTD. All rights reserved.  * Copyright (c) 1996-2003 Intel Corporation. All rights reserved.  * Copyright (c) 2007      Simula Research Laboratory. All rights reserved.  * Copyright (c) 2007      Silicon Graphics Inc. All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  *  */
end_comment

begin_comment
comment|/*  * Abstract:  *      Declarations for LASH algorithm  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|OSM_UCAST_LASH_H
end_ifndef

begin_define
define|#
directive|define
name|OSM_UCAST_LASH_H
end_define

begin_include
include|#
directive|include
file|<opensm/osm_mesh.h>
end_include

begin_enum
enum|enum
block|{
name|UNQUEUED
block|,
name|Q_MEMBER
block|,
name|MST_MEMBER
block|,
name|MAX_INT
init|=
literal|9999
block|,
name|NONE
init|=
name|MAX_INT
block|}
enum|;
end_enum

begin_typedef
typedef|typedef
struct|struct
name|_cdg_vertex
block|{
name|int
name|from
decl_stmt|;
name|int
name|to
decl_stmt|;
name|int
name|seen
decl_stmt|;
name|int
name|temp
decl_stmt|;
name|int
name|visiting_number
decl_stmt|;
name|struct
name|_cdg_vertex
modifier|*
name|next
decl_stmt|;
name|int
name|num_temp_depend
decl_stmt|;
name|int
name|num_using_vertex
decl_stmt|;
name|int
name|num_deps
decl_stmt|;
struct|struct
name|vertex_deps
block|{
name|struct
name|_cdg_vertex
modifier|*
name|v
decl_stmt|;
name|int
name|num_used
decl_stmt|;
block|}
name|deps
index|[
literal|0
index|]
struct|;
block|}
name|cdg_vertex_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_switch
block|{
name|osm_switch_t
modifier|*
name|p_sw
decl_stmt|;
name|int
name|id
decl_stmt|;
name|int
name|used_channels
decl_stmt|;
name|int
modifier|*
name|dij_channels
decl_stmt|;
name|int
name|q_state
decl_stmt|;
name|mesh_node_t
modifier|*
name|node
decl_stmt|;
struct|struct
name|routing_table
block|{
name|unsigned
name|out_link
decl_stmt|;
name|unsigned
name|lane
decl_stmt|;
block|}
name|routing_table
index|[
literal|0
index|]
struct|;
block|}
name|switch_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_lash
block|{
name|osm_opensm_t
modifier|*
name|p_osm
decl_stmt|;
name|int
name|num_switches
decl_stmt|;
name|uint8_t
name|vl_min
decl_stmt|;
name|int
name|balance_limit
decl_stmt|;
name|switch_t
modifier|*
modifier|*
name|switches
decl_stmt|;
name|cdg_vertex_t
modifier|*
modifier|*
modifier|*
modifier|*
name|cdg_vertex_matrix
decl_stmt|;
name|int
name|num_mst_in_lane
index|[
name|IB_MAX_NUM_VLS
index|]
decl_stmt|;
name|int
modifier|*
modifier|*
modifier|*
name|virtual_location
decl_stmt|;
block|}
name|lash_t
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

end_unit

