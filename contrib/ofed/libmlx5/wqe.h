begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2012 Mellanox Technologies, Inc.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|WQE_H
end_ifndef

begin_define
define|#
directive|define
name|WQE_H
end_define

begin_include
include|#
directive|include
file|<stdint.h>
end_include

begin_struct
struct|struct
name|mlx5_sg_copy_ptr
block|{
name|int
name|index
decl_stmt|;
name|int
name|offset
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_eqe_comp
block|{
name|uint32_t
name|reserved
index|[
literal|6
index|]
decl_stmt|;
name|uint32_t
name|cqn
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_eqe_qp_srq
block|{
name|uint32_t
name|reserved
index|[
literal|6
index|]
decl_stmt|;
name|uint32_t
name|qp_srq_n
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_wqe_xrc_seg
block|{
name|uint32_t
name|xrc_srqn
decl_stmt|;
name|uint8_t
name|rsvd
index|[
literal|12
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_wqe_masked_atomic_seg
block|{
name|uint64_t
name|swap_add
decl_stmt|;
name|uint64_t
name|compare
decl_stmt|;
name|uint64_t
name|swap_add_mask
decl_stmt|;
name|uint64_t
name|compare_mask
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
block|{
name|MLX5_ETH_L2_INLINE_HEADER_SIZE
init|=
literal|18
block|,
name|MLX5_ETH_L2_MIN_HEADER_SIZE
init|=
literal|14
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_WQE_UMR_CTRL_FLAG_INLINE
init|=
literal|1
operator|<<
literal|7
block|,
name|MLX5_WQE_UMR_CTRL_FLAG_CHECK_FREE
init|=
literal|1
operator|<<
literal|5
block|,
name|MLX5_WQE_UMR_CTRL_FLAG_TRNSLATION_OFFSET
init|=
literal|1
operator|<<
literal|4
block|,
name|MLX5_WQE_UMR_CTRL_FLAG_CHECK_QPN
init|=
literal|1
operator|<<
literal|3
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_WQE_UMR_CTRL_MKEY_MASK_LEN
init|=
literal|1
operator|<<
literal|0
block|,
name|MLX5_WQE_UMR_CTRL_MKEY_MASK_START_ADDR
init|=
literal|1
operator|<<
literal|6
block|,
name|MLX5_WQE_UMR_CTRL_MKEY_MASK_MKEY
init|=
literal|1
operator|<<
literal|13
block|,
name|MLX5_WQE_UMR_CTRL_MKEY_MASK_QPN
init|=
literal|1
operator|<<
literal|14
block|,
name|MLX5_WQE_UMR_CTRL_MKEY_MASK_ACCESS_LOCAL_WRITE
init|=
literal|1
operator|<<
literal|18
block|,
name|MLX5_WQE_UMR_CTRL_MKEY_MASK_ACCESS_REMOTE_READ
init|=
literal|1
operator|<<
literal|19
block|,
name|MLX5_WQE_UMR_CTRL_MKEY_MASK_ACCESS_REMOTE_WRITE
init|=
literal|1
operator|<<
literal|20
block|,
name|MLX5_WQE_UMR_CTRL_MKEY_MASK_ACCESS_ATOMIC
init|=
literal|1
operator|<<
literal|21
block|,
name|MLX5_WQE_UMR_CTRL_MKEY_MASK_FREE
init|=
literal|1
operator|<<
literal|29
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_wqe_umr_ctrl_seg
block|{
name|uint8_t
name|flags
decl_stmt|;
name|uint8_t
name|rsvd0
index|[
literal|3
index|]
decl_stmt|;
name|uint16_t
name|klm_octowords
decl_stmt|;
name|uint16_t
name|translation_offset
decl_stmt|;
name|uint64_t
name|mkey_mask
decl_stmt|;
name|uint8_t
name|rsvd1
index|[
literal|32
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_wqe_umr_klm_seg
block|{
comment|/* up to 2GB */
name|uint32_t
name|byte_count
decl_stmt|;
name|uint32_t
name|mkey
decl_stmt|;
name|uint64_t
name|address
decl_stmt|;
block|}
struct|;
end_struct

begin_union
union|union
name|mlx5_wqe_umr_inline_seg
block|{
name|struct
name|mlx5_wqe_umr_klm_seg
name|klm
decl_stmt|;
block|}
union|;
end_union

begin_enum
enum|enum
block|{
name|MLX5_WQE_MKEY_CONTEXT_FREE
init|=
literal|1
operator|<<
literal|6
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_WQE_MKEY_CONTEXT_ACCESS_FLAGS_ATOMIC
init|=
literal|1
operator|<<
literal|6
block|,
name|MLX5_WQE_MKEY_CONTEXT_ACCESS_FLAGS_REMOTE_WRITE
init|=
literal|1
operator|<<
literal|5
block|,
name|MLX5_WQE_MKEY_CONTEXT_ACCESS_FLAGS_REMOTE_READ
init|=
literal|1
operator|<<
literal|4
block|,
name|MLX5_WQE_MKEY_CONTEXT_ACCESS_FLAGS_LOCAL_WRITE
init|=
literal|1
operator|<<
literal|3
block|,
name|MLX5_WQE_MKEY_CONTEXT_ACCESS_FLAGS_LOCAL_READ
init|=
literal|1
operator|<<
literal|2
block|}
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_wqe_mkey_context_seg
block|{
name|uint8_t
name|free
decl_stmt|;
name|uint8_t
name|reserved1
decl_stmt|;
name|uint8_t
name|access_flags
decl_stmt|;
name|uint8_t
name|sf
decl_stmt|;
name|uint32_t
name|qpn_mkey
decl_stmt|;
name|uint32_t
name|reserved2
decl_stmt|;
name|uint32_t
name|flags_pd
decl_stmt|;
name|uint64_t
name|start_addr
decl_stmt|;
name|uint64_t
name|len
decl_stmt|;
name|uint32_t
name|bsf_octword_size
decl_stmt|;
name|uint32_t
name|reserved3
index|[
literal|4
index|]
decl_stmt|;
name|uint32_t
name|translations_octword_size
decl_stmt|;
name|uint8_t
name|reserved4
index|[
literal|3
index|]
decl_stmt|;
name|uint8_t
name|log_page_size
decl_stmt|;
name|uint32_t
name|reserved
decl_stmt|;
name|union
name|mlx5_wqe_umr_inline_seg
name|inseg
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_seg_set_psv
block|{
name|uint8_t
name|rsvd
index|[
literal|4
index|]
decl_stmt|;
name|uint16_t
name|syndrome
decl_stmt|;
name|uint16_t
name|status
decl_stmt|;
name|uint16_t
name|block_guard
decl_stmt|;
name|uint16_t
name|app_tag
decl_stmt|;
name|uint32_t
name|ref_tag
decl_stmt|;
name|uint32_t
name|mkey
decl_stmt|;
name|uint64_t
name|va
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_seg_get_psv
block|{
name|uint8_t
name|rsvd
index|[
literal|19
index|]
decl_stmt|;
name|uint8_t
name|num_psv
decl_stmt|;
name|uint32_t
name|l_key
decl_stmt|;
name|uint64_t
name|va
decl_stmt|;
name|uint32_t
name|psv_index
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_seg_check_psv
block|{
name|uint8_t
name|rsvd0
index|[
literal|2
index|]
decl_stmt|;
name|uint16_t
name|err_coalescing_op
decl_stmt|;
name|uint8_t
name|rsvd1
index|[
literal|2
index|]
decl_stmt|;
name|uint16_t
name|xport_err_op
decl_stmt|;
name|uint8_t
name|rsvd2
index|[
literal|2
index|]
decl_stmt|;
name|uint16_t
name|xport_err_mask
decl_stmt|;
name|uint8_t
name|rsvd3
index|[
literal|7
index|]
decl_stmt|;
name|uint8_t
name|num_psv
decl_stmt|;
name|uint32_t
name|l_key
decl_stmt|;
name|uint64_t
name|va
decl_stmt|;
name|uint32_t
name|psv_index
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_rwqe_sig
block|{
name|uint8_t
name|rsvd0
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|signature
decl_stmt|;
name|uint8_t
name|rsvd1
index|[
literal|11
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_wqe_signature_seg
block|{
name|uint8_t
name|rsvd0
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|signature
decl_stmt|;
name|uint8_t
name|rsvd1
index|[
literal|11
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_wqe_inline_seg
block|{
name|uint32_t
name|byte_count
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WQE_H */
end_comment

end_unit

