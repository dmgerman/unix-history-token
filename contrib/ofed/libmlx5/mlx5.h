begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2012 Mellanox Technologies, Inc.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MLX5_H
end_ifndef

begin_define
define|#
directive|define
name|MLX5_H
end_define

begin_include
include|#
directive|include
file|<stddef.h>
end_include

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_include
include|#
directive|include
file|<stdatomic.h>
end_include

begin_include
include|#
directive|include
file|<stdbool.h>
end_include

begin_include
include|#
directive|include
file|<sys/queue.h>
end_include

begin_include
include|#
directive|include
file|<infiniband/driver.h>
end_include

begin_include
include|#
directive|include
file|<infiniband/udma_barrier.h>
end_include

begin_include
include|#
directive|include
file|"mlx5-abi.h"
end_include

begin_include
include|#
directive|include
file|"bitmap.h"
end_include

begin_include
include|#
directive|include
file|"mlx5dv.h"
end_include

begin_define
define|#
directive|define
name|PFX
value|"mlx5: "
end_define

begin_enum
enum|enum
block|{
name|MLX5_IB_MMAP_CMD_SHIFT
init|=
literal|8
block|,
name|MLX5_IB_MMAP_CMD_MASK
init|=
literal|0xff
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_MMAP_GET_REGULAR_PAGES_CMD
init|=
literal|0
block|,
name|MLX5_MMAP_GET_CONTIGUOUS_PAGES_CMD
init|=
literal|1
block|,
name|MLX5_MMAP_GET_CORE_CLOCK_CMD
init|=
literal|5
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_CQE_VERSION_V0
init|=
literal|0
block|,
name|MLX5_CQE_VERSION_V1
init|=
literal|1
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_ADAPTER_PAGE_SIZE
init|=
literal|4096
block|, }
enum|;
end_enum

begin_define
define|#
directive|define
name|MLX5_CQ_PREFIX
value|"MLX_CQ"
end_define

begin_define
define|#
directive|define
name|MLX5_QP_PREFIX
value|"MLX_QP"
end_define

begin_define
define|#
directive|define
name|MLX5_MR_PREFIX
value|"MLX_MR"
end_define

begin_define
define|#
directive|define
name|MLX5_RWQ_PREFIX
value|"MLX_RWQ"
end_define

begin_define
define|#
directive|define
name|MLX5_MAX_LOG2_CONTIG_BLOCK_SIZE
value|23
end_define

begin_define
define|#
directive|define
name|MLX5_MIN_LOG2_CONTIG_BLOCK_SIZE
value|12
end_define

begin_enum
enum|enum
block|{
name|MLX5_DBG_QP
init|=
literal|1
operator|<<
literal|0
block|,
name|MLX5_DBG_CQ
init|=
literal|1
operator|<<
literal|1
block|,
name|MLX5_DBG_QP_SEND
init|=
literal|1
operator|<<
literal|2
block|,
name|MLX5_DBG_QP_SEND_ERR
init|=
literal|1
operator|<<
literal|3
block|,
name|MLX5_DBG_CQ_CQE
init|=
literal|1
operator|<<
literal|4
block|,
name|MLX5_DBG_CONTIG
init|=
literal|1
operator|<<
literal|5
block|, }
enum|;
end_enum

begin_decl_stmt
specifier|extern
name|uint32_t
name|mlx5_debug_mask
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|mlx5_freeze_on_error_cqe
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|MLX5_DEBUG
end_ifdef

begin_define
define|#
directive|define
name|mlx5_dbg
parameter_list|(
name|fp
parameter_list|,
name|mask
parameter_list|,
name|format
parameter_list|,
name|arg
modifier|...
parameter_list|)
define|\
value|do {									\ 	if (mask& mlx5_debug_mask)					\ 		fprintf(fp, "%s:%d: " format, __func__, __LINE__, ##arg);	\ } while (0)
end_define

begin_else
else|#
directive|else
end_else

begin_function_decl
specifier|static
specifier|inline
name|void
name|mlx5_dbg
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|,
name|uint32_t
name|mask
parameter_list|,
specifier|const
name|char
modifier|*
name|fmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__attribute__
parameter_list|(
function_decl|(format
parameter_list|(
name|printf
parameter_list|,
function_decl|3
operator|,
function_decl|4
end_function_decl

begin_empty_stmt
unit|)))
empty_stmt|;
end_empty_stmt

begin_function
specifier|static
specifier|inline
name|void
name|mlx5_dbg
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|,
name|uint32_t
name|mask
parameter_list|,
specifier|const
name|char
modifier|*
name|fmt
parameter_list|,
modifier|...
parameter_list|)
block|{ }
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_enum
enum|enum
block|{
name|MLX5_STAT_RATE_OFFSET
init|=
literal|5
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_QP_TABLE_SHIFT
init|=
literal|12
block|,
name|MLX5_QP_TABLE_MASK
init|=
operator|(
literal|1
operator|<<
name|MLX5_QP_TABLE_SHIFT
operator|)
operator|-
literal|1
block|,
name|MLX5_QP_TABLE_SIZE
init|=
literal|1
operator|<<
operator|(
literal|24
operator|-
name|MLX5_QP_TABLE_SHIFT
operator|)
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_UIDX_TABLE_SHIFT
init|=
literal|12
block|,
name|MLX5_UIDX_TABLE_MASK
init|=
operator|(
literal|1
operator|<<
name|MLX5_UIDX_TABLE_SHIFT
operator|)
operator|-
literal|1
block|,
name|MLX5_UIDX_TABLE_SIZE
init|=
literal|1
operator|<<
operator|(
literal|24
operator|-
name|MLX5_UIDX_TABLE_SHIFT
operator|)
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_SRQ_TABLE_SHIFT
init|=
literal|12
block|,
name|MLX5_SRQ_TABLE_MASK
init|=
operator|(
literal|1
operator|<<
name|MLX5_SRQ_TABLE_SHIFT
operator|)
operator|-
literal|1
block|,
name|MLX5_SRQ_TABLE_SIZE
init|=
literal|1
operator|<<
operator|(
literal|24
operator|-
name|MLX5_SRQ_TABLE_SHIFT
operator|)
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_BF_OFFSET
init|=
literal|0x800
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_RECV_OPCODE_RDMA_WRITE_IMM
init|=
literal|0x00
block|,
name|MLX5_RECV_OPCODE_SEND
init|=
literal|0x01
block|,
name|MLX5_RECV_OPCODE_SEND_IMM
init|=
literal|0x02
block|,
name|MLX5_RECV_OPCODE_SEND_INVAL
init|=
literal|0x03
block|,
name|MLX5_CQE_OPCODE_ERROR
init|=
literal|0x1e
block|,
name|MLX5_CQE_OPCODE_RESIZE
init|=
literal|0x16
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_SRQ_FLAG_SIGNATURE
init|=
literal|1
operator|<<
literal|0
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_MAX_PORTS_NUM
init|=
literal|2
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_CSUM_SUPPORT_RAW_OVER_ETH
init|=
operator|(
literal|1
operator|<<
literal|0
operator|)
block|,
comment|/* 	 * Only report rx checksum when the validation 	 * is valid. 	 */
name|MLX5_RX_CSUM_VALID
init|=
operator|(
literal|1
operator|<<
literal|16
operator|)
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|mlx5_alloc_type
block|{
name|MLX5_ALLOC_TYPE_ANON
block|,
name|MLX5_ALLOC_TYPE_HUGE
block|,
name|MLX5_ALLOC_TYPE_CONTIG
block|,
name|MLX5_ALLOC_TYPE_PREFER_HUGE
block|,
name|MLX5_ALLOC_TYPE_PREFER_CONTIG
block|,
name|MLX5_ALLOC_TYPE_ALL
block|}
enum|;
end_enum

begin_enum
enum|enum
name|mlx5_rsc_type
block|{
name|MLX5_RSC_TYPE_QP
block|,
name|MLX5_RSC_TYPE_XSRQ
block|,
name|MLX5_RSC_TYPE_SRQ
block|,
name|MLX5_RSC_TYPE_RWQ
block|,
name|MLX5_RSC_TYPE_INVAL
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_USER_CMDS_SUPP_UHW_QUERY_DEVICE
init|=
literal|1
operator|<<
literal|0
block|,
name|MLX5_USER_CMDS_SUPP_UHW_CREATE_AH
init|=
literal|1
operator|<<
literal|1
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|mlx5_vendor_cap_flags
block|{
name|MLX5_VENDOR_CAP_FLAGS_MPW
init|=
literal|1
operator|<<
literal|0
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_FLOW_TAG_MASK
init|=
literal|0x000fffff
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_resource
block|{
name|enum
name|mlx5_rsc_type
name|type
decl_stmt|;
name|uint32_t
name|rsn
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_device
block|{
name|struct
name|verbs_device
name|verbs_dev
decl_stmt|;
name|int
name|page_size
decl_stmt|;
name|int
name|driver_abi_ver
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|mlx5_db_page
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|mlx5_spinlock
block|{
name|pthread_spinlock_t
name|lock
decl_stmt|;
name|int
name|in_use
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|mlx5_hugetlb_mem
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|mlx5_context
block|{
name|struct
name|ibv_context
name|ibv_ctx
decl_stmt|;
name|int
name|max_num_qps
decl_stmt|;
name|int
name|bf_reg_size
decl_stmt|;
name|int
name|tot_uuars
decl_stmt|;
name|int
name|low_lat_uuars
decl_stmt|;
name|int
name|num_uars_per_page
decl_stmt|;
name|int
name|bf_regs_per_page
decl_stmt|;
name|int
name|num_bf_regs
decl_stmt|;
name|int
name|prefer_bf
decl_stmt|;
name|int
name|shut_up_bf
decl_stmt|;
struct|struct
block|{
name|struct
name|mlx5_qp
modifier|*
modifier|*
name|table
decl_stmt|;
name|int
name|refcnt
decl_stmt|;
block|}
name|qp_table
index|[
name|MLX5_QP_TABLE_SIZE
index|]
struct|;
name|pthread_mutex_t
name|qp_table_mutex
decl_stmt|;
struct|struct
block|{
name|struct
name|mlx5_srq
modifier|*
modifier|*
name|table
decl_stmt|;
name|int
name|refcnt
decl_stmt|;
block|}
name|srq_table
index|[
name|MLX5_SRQ_TABLE_SIZE
index|]
struct|;
name|pthread_mutex_t
name|srq_table_mutex
decl_stmt|;
struct|struct
block|{
name|struct
name|mlx5_resource
modifier|*
modifier|*
name|table
decl_stmt|;
name|int
name|refcnt
decl_stmt|;
block|}
name|uidx_table
index|[
name|MLX5_UIDX_TABLE_SIZE
index|]
struct|;
name|pthread_mutex_t
name|uidx_table_mutex
decl_stmt|;
name|void
modifier|*
name|uar
index|[
name|MLX5_MAX_UARS
index|]
decl_stmt|;
name|struct
name|mlx5_spinlock
name|lock32
decl_stmt|;
name|struct
name|mlx5_db_page
modifier|*
name|db_list
decl_stmt|;
name|pthread_mutex_t
name|db_list_mutex
decl_stmt|;
name|int
name|cache_line_size
decl_stmt|;
name|int
name|max_sq_desc_sz
decl_stmt|;
name|int
name|max_rq_desc_sz
decl_stmt|;
name|int
name|max_send_wqebb
decl_stmt|;
name|int
name|max_recv_wr
decl_stmt|;
name|unsigned
name|max_srq_recv_wr
decl_stmt|;
name|int
name|num_ports
decl_stmt|;
name|int
name|stall_enable
decl_stmt|;
name|int
name|stall_adaptive_enable
decl_stmt|;
name|int
name|stall_cycles
decl_stmt|;
name|struct
name|mlx5_bf
modifier|*
name|bfs
decl_stmt|;
name|FILE
modifier|*
name|dbg_fp
decl_stmt|;
name|char
name|hostname
index|[
literal|40
index|]
decl_stmt|;
name|struct
name|mlx5_spinlock
name|hugetlb_lock
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|mlx5_hugetlb_mem
argument_list|)
name|hugetlb_list
expr_stmt|;
name|int
name|cqe_version
decl_stmt|;
name|uint8_t
name|cached_link_layer
index|[
name|MLX5_MAX_PORTS_NUM
index|]
decl_stmt|;
name|int
name|cached_device_cap_flags
decl_stmt|;
name|enum
name|ibv_atomic_cap
name|atomic_cap
decl_stmt|;
struct|struct
block|{
name|uint64_t
name|offset
decl_stmt|;
name|uint64_t
name|mask
decl_stmt|;
block|}
name|core_clock
struct|;
name|void
modifier|*
name|hca_core_clock
decl_stmt|;
name|struct
name|ibv_tso_caps
name|cached_tso_caps
decl_stmt|;
name|int
name|cmds_supp_uhw
decl_stmt|;
name|uint32_t
name|uar_size
decl_stmt|;
name|uint64_t
name|vendor_cap_flags
decl_stmt|;
comment|/* Use enum mlx5_vendor_cap_flags */
name|struct
name|mlx5dv_cqe_comp_caps
name|cqe_comp_caps
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_bitmap
block|{
name|uint32_t
name|last
decl_stmt|;
name|uint32_t
name|top
decl_stmt|;
name|uint32_t
name|max
decl_stmt|;
name|uint32_t
name|avail
decl_stmt|;
name|uint32_t
name|mask
decl_stmt|;
name|unsigned
name|long
modifier|*
name|table
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_hugetlb_mem
block|{
name|int
name|shmid
decl_stmt|;
name|void
modifier|*
name|shmaddr
decl_stmt|;
name|struct
name|mlx5_bitmap
name|bitmap
decl_stmt|;
name|TAILQ_ENTRY
argument_list|(
argument|mlx5_hugetlb_mem
argument_list|)
name|entry
expr_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_buf
block|{
name|void
modifier|*
name|buf
decl_stmt|;
name|size_t
name|length
decl_stmt|;
name|int
name|base
decl_stmt|;
name|struct
name|mlx5_hugetlb_mem
modifier|*
name|hmem
decl_stmt|;
name|enum
name|mlx5_alloc_type
name|type
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_pd
block|{
name|struct
name|ibv_pd
name|ibv_pd
decl_stmt|;
name|uint32_t
name|pdn
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
block|{
name|MLX5_CQ_SET_CI
init|=
literal|0
block|,
name|MLX5_CQ_ARM_DB
init|=
literal|1
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MLX5_CQ_FLAGS_RX_CSUM_VALID
init|=
literal|1
operator|<<
literal|0
block|,
name|MLX5_CQ_FLAGS_EMPTY_DURING_POLL
init|=
literal|1
operator|<<
literal|1
block|,
name|MLX5_CQ_FLAGS_FOUND_CQES
init|=
literal|1
operator|<<
literal|2
block|,
name|MLX5_CQ_FLAGS_EXTENDED
init|=
literal|1
operator|<<
literal|3
block|,
name|MLX5_CQ_FLAGS_SINGLE_THREADED
init|=
literal|1
operator|<<
literal|4
block|,
name|MLX5_CQ_FLAGS_DV_OWNED
init|=
literal|1
operator|<<
literal|5
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|mlx5_cq
block|{
comment|/* ibv_cq should always be subset of ibv_cq_ex */
name|struct
name|ibv_cq_ex
name|ibv_cq
decl_stmt|;
name|struct
name|mlx5_buf
name|buf_a
decl_stmt|;
name|struct
name|mlx5_buf
name|buf_b
decl_stmt|;
name|struct
name|mlx5_buf
modifier|*
name|active_buf
decl_stmt|;
name|struct
name|mlx5_buf
modifier|*
name|resize_buf
decl_stmt|;
name|int
name|resize_cqes
decl_stmt|;
name|int
name|active_cqes
decl_stmt|;
name|struct
name|mlx5_spinlock
name|lock
decl_stmt|;
name|uint32_t
name|cqn
decl_stmt|;
name|uint32_t
name|cons_index
decl_stmt|;
name|uint32_t
modifier|*
name|dbrec
decl_stmt|;
name|int
name|arm_sn
decl_stmt|;
name|int
name|cqe_sz
decl_stmt|;
name|int
name|resize_cqe_sz
decl_stmt|;
name|int
name|stall_next_poll
decl_stmt|;
name|int
name|stall_enable
decl_stmt|;
name|uint64_t
name|stall_last_count
decl_stmt|;
name|int
name|stall_adaptive_enable
decl_stmt|;
name|int
name|stall_cycles
decl_stmt|;
name|struct
name|mlx5_resource
modifier|*
name|cur_rsc
decl_stmt|;
name|struct
name|mlx5_srq
modifier|*
name|cur_srq
decl_stmt|;
name|struct
name|mlx5_cqe64
modifier|*
name|cqe64
decl_stmt|;
name|uint32_t
name|flags
decl_stmt|;
name|int
name|umr_opcode
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_srq
block|{
name|struct
name|mlx5_resource
name|rsc
decl_stmt|;
comment|/* This struct must be first */
name|struct
name|verbs_srq
name|vsrq
decl_stmt|;
name|struct
name|mlx5_buf
name|buf
decl_stmt|;
name|struct
name|mlx5_spinlock
name|lock
decl_stmt|;
name|uint64_t
modifier|*
name|wrid
decl_stmt|;
name|uint32_t
name|srqn
decl_stmt|;
name|int
name|max
decl_stmt|;
name|int
name|max_gs
decl_stmt|;
name|int
name|wqe_shift
decl_stmt|;
name|int
name|head
decl_stmt|;
name|int
name|tail
decl_stmt|;
name|uint32_t
modifier|*
name|db
decl_stmt|;
name|uint16_t
name|counter
decl_stmt|;
name|int
name|wq_sig
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|wr_list
block|{
name|uint16_t
name|opcode
decl_stmt|;
name|uint16_t
name|next
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_wq
block|{
name|uint64_t
modifier|*
name|wrid
decl_stmt|;
name|unsigned
modifier|*
name|wqe_head
decl_stmt|;
name|struct
name|mlx5_spinlock
name|lock
decl_stmt|;
name|unsigned
name|wqe_cnt
decl_stmt|;
name|unsigned
name|max_post
decl_stmt|;
name|unsigned
name|head
decl_stmt|;
name|unsigned
name|tail
decl_stmt|;
name|unsigned
name|cur_post
decl_stmt|;
name|int
name|max_gs
decl_stmt|;
name|int
name|wqe_shift
decl_stmt|;
name|int
name|offset
decl_stmt|;
name|void
modifier|*
name|qend
decl_stmt|;
name|uint32_t
modifier|*
name|wr_data
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_bf
block|{
name|void
modifier|*
name|reg
decl_stmt|;
name|int
name|need_lock
decl_stmt|;
name|struct
name|mlx5_spinlock
name|lock
decl_stmt|;
name|unsigned
name|offset
decl_stmt|;
name|unsigned
name|buf_size
decl_stmt|;
name|unsigned
name|uuarn
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_mr
block|{
name|struct
name|ibv_mr
name|ibv_mr
decl_stmt|;
name|struct
name|mlx5_buf
name|buf
decl_stmt|;
name|uint32_t
name|alloc_flags
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_qp
block|{
name|struct
name|mlx5_resource
name|rsc
decl_stmt|;
comment|/* This struct must be first */
name|struct
name|verbs_qp
name|verbs_qp
decl_stmt|;
name|struct
name|ibv_qp
modifier|*
name|ibv_qp
decl_stmt|;
name|struct
name|mlx5_buf
name|buf
decl_stmt|;
name|void
modifier|*
name|sq_start
decl_stmt|;
name|int
name|max_inline_data
decl_stmt|;
name|int
name|buf_size
decl_stmt|;
comment|/* For Raw Packet QP, use different buffers for the SQ and RQ */
name|struct
name|mlx5_buf
name|sq_buf
decl_stmt|;
name|int
name|sq_buf_size
decl_stmt|;
name|struct
name|mlx5_bf
modifier|*
name|bf
decl_stmt|;
name|uint8_t
name|fm_cache
decl_stmt|;
name|uint8_t
name|sq_signal_bits
decl_stmt|;
name|struct
name|mlx5_wq
name|sq
decl_stmt|;
name|uint32_t
modifier|*
name|db
decl_stmt|;
name|struct
name|mlx5_wq
name|rq
decl_stmt|;
name|int
name|wq_sig
decl_stmt|;
name|uint32_t
name|qp_cap_cache
decl_stmt|;
name|int
name|atomics_enabled
decl_stmt|;
name|uint32_t
name|max_tso
decl_stmt|;
name|uint16_t
name|max_tso_header
decl_stmt|;
name|int
name|rss_qp
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_ah
block|{
name|struct
name|ibv_ah
name|ibv_ah
decl_stmt|;
name|struct
name|mlx5_wqe_av
name|av
decl_stmt|;
name|bool
name|kern_ah
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx5_rwq
block|{
name|struct
name|mlx5_resource
name|rsc
decl_stmt|;
name|struct
name|ibv_wq
name|wq
decl_stmt|;
name|struct
name|mlx5_buf
name|buf
decl_stmt|;
name|int
name|buf_size
decl_stmt|;
name|struct
name|mlx5_wq
name|rq
decl_stmt|;
name|uint32_t
modifier|*
name|db
decl_stmt|;
name|void
modifier|*
name|pbuff
decl_stmt|;
name|uint32_t
modifier|*
name|recv_db
decl_stmt|;
name|int
name|wq_sig
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|int
name|mlx5_ilog2
parameter_list|(
name|int
name|n
parameter_list|)
block|{
name|int
name|t
decl_stmt|;
if|if
condition|(
name|n
operator|<=
literal|0
condition|)
return|return
operator|-
literal|1
return|;
name|t
operator|=
literal|0
expr_stmt|;
while|while
condition|(
operator|(
literal|1
operator|<<
name|t
operator|)
operator|<
name|n
condition|)
operator|++
name|t
expr_stmt|;
return|return
name|t
return|;
block|}
end_function

begin_decl_stmt
specifier|extern
name|int
name|mlx5_stall_num_loop
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|mlx5_stall_cq_poll_min
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|mlx5_stall_cq_poll_max
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|mlx5_stall_cq_inc_step
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|mlx5_stall_cq_dec_step
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|mlx5_single_threaded
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
specifier|inline
name|unsigned
name|DIV_ROUND_UP
parameter_list|(
name|unsigned
name|n
parameter_list|,
name|unsigned
name|d
parameter_list|)
block|{
return|return
operator|(
name|n
operator|+
name|d
operator|-
literal|1u
operator|)
operator|/
name|d
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|long
name|align
parameter_list|(
name|unsigned
name|long
name|val
parameter_list|,
name|unsigned
name|long
name|align
parameter_list|)
block|{
return|return
operator|(
name|val
operator|+
name|align
operator|-
literal|1
operator|)
operator|&
operator|~
operator|(
name|align
operator|-
literal|1
operator|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|to_mxxx
parameter_list|(
name|xxx
parameter_list|,
name|type
parameter_list|)
define|\
value|((struct mlx5_##type *)					\ 	 ((void *) ib##xxx - offsetof(struct mlx5_##type, ibv_##xxx)))
end_define

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_device
modifier|*
name|to_mdev
parameter_list|(
name|struct
name|ibv_device
modifier|*
name|ibdev
parameter_list|)
block|{
name|struct
name|mlx5_device
modifier|*
name|ret
decl_stmt|;
name|ret
operator|=
operator|(
name|void
operator|*
operator|)
name|ibdev
operator|-
name|offsetof
argument_list|(
expr|struct
name|mlx5_device
argument_list|,
name|verbs_dev
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_context
modifier|*
name|to_mctx
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|ibctx
parameter_list|)
block|{
return|return
name|to_mxxx
argument_list|(
name|ctx
argument_list|,
name|context
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_pd
modifier|*
name|to_mpd
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|ibpd
parameter_list|)
block|{
return|return
name|to_mxxx
argument_list|(
name|pd
argument_list|,
name|pd
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_cq
modifier|*
name|to_mcq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|ibcq
parameter_list|)
block|{
return|return
name|to_mxxx
argument_list|(
name|cq
argument_list|,
name|cq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_srq
modifier|*
name|to_msrq
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|ibsrq
parameter_list|)
block|{
name|struct
name|verbs_srq
modifier|*
name|vsrq
init|=
operator|(
expr|struct
name|verbs_srq
operator|*
operator|)
name|ibsrq
decl_stmt|;
return|return
name|container_of
argument_list|(
name|vsrq
argument_list|,
expr|struct
name|mlx5_srq
argument_list|,
name|vsrq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_qp
modifier|*
name|to_mqp
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|ibqp
parameter_list|)
block|{
name|struct
name|verbs_qp
modifier|*
name|vqp
init|=
operator|(
expr|struct
name|verbs_qp
operator|*
operator|)
name|ibqp
decl_stmt|;
return|return
name|container_of
argument_list|(
name|vqp
argument_list|,
expr|struct
name|mlx5_qp
argument_list|,
name|verbs_qp
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_rwq
modifier|*
name|to_mrwq
parameter_list|(
name|struct
name|ibv_wq
modifier|*
name|ibwq
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|ibwq
argument_list|,
expr|struct
name|mlx5_rwq
argument_list|,
name|wq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_mr
modifier|*
name|to_mmr
parameter_list|(
name|struct
name|ibv_mr
modifier|*
name|ibmr
parameter_list|)
block|{
return|return
name|to_mxxx
argument_list|(
name|mr
argument_list|,
name|mr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_ah
modifier|*
name|to_mah
parameter_list|(
name|struct
name|ibv_ah
modifier|*
name|ibah
parameter_list|)
block|{
return|return
name|to_mxxx
argument_list|(
name|ah
argument_list|,
name|ah
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|max_int
parameter_list|(
name|int
name|a
parameter_list|,
name|int
name|b
parameter_list|)
block|{
return|return
name|a
operator|>
name|b
condition|?
name|a
else|:
name|b
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_qp
modifier|*
name|rsc_to_mqp
parameter_list|(
name|struct
name|mlx5_resource
modifier|*
name|rsc
parameter_list|)
block|{
return|return
operator|(
expr|struct
name|mlx5_qp
operator|*
operator|)
name|rsc
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_srq
modifier|*
name|rsc_to_msrq
parameter_list|(
name|struct
name|mlx5_resource
modifier|*
name|rsc
parameter_list|)
block|{
return|return
operator|(
expr|struct
name|mlx5_srq
operator|*
operator|)
name|rsc
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|mlx5_rwq
modifier|*
name|rsc_to_mrwq
parameter_list|(
name|struct
name|mlx5_resource
modifier|*
name|rsc
parameter_list|)
block|{
return|return
operator|(
expr|struct
name|mlx5_rwq
operator|*
operator|)
name|rsc
return|;
block|}
end_function

begin_function_decl
name|int
name|mlx5_alloc_buf
parameter_list|(
name|struct
name|mlx5_buf
modifier|*
name|buf
parameter_list|,
name|size_t
name|size
parameter_list|,
name|int
name|page_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_free_buf
parameter_list|(
name|struct
name|mlx5_buf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_alloc_buf_contig
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|mctx
parameter_list|,
name|struct
name|mlx5_buf
modifier|*
name|buf
parameter_list|,
name|size_t
name|size
parameter_list|,
name|int
name|page_size
parameter_list|,
specifier|const
name|char
modifier|*
name|component
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_free_buf_contig
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|mctx
parameter_list|,
name|struct
name|mlx5_buf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_alloc_prefered_buf
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|mctx
parameter_list|,
name|struct
name|mlx5_buf
modifier|*
name|buf
parameter_list|,
name|size_t
name|size
parameter_list|,
name|int
name|page_size
parameter_list|,
name|enum
name|mlx5_alloc_type
name|alloc_type
parameter_list|,
specifier|const
name|char
modifier|*
name|component
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_free_actual_buf
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|ctx
parameter_list|,
name|struct
name|mlx5_buf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_get_alloc_type
parameter_list|(
specifier|const
name|char
modifier|*
name|component
parameter_list|,
name|enum
name|mlx5_alloc_type
modifier|*
name|alloc_type
parameter_list|,
name|enum
name|mlx5_alloc_type
name|default_alloc_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_use_huge
parameter_list|(
specifier|const
name|char
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
modifier|*
name|mlx5_alloc_dbrec
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_free_db
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|context
parameter_list|,
name|uint32_t
modifier|*
name|db
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_device
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_device_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_device_ex
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
specifier|const
name|struct
name|ibv_query_device_ex_input
modifier|*
name|input
parameter_list|,
name|struct
name|ibv_device_attr_ex
modifier|*
name|attr
parameter_list|,
name|size_t
name|attr_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_rt_values
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_values_ex
modifier|*
name|values
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_qp
modifier|*
name|mlx5_create_qp_ex
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_qp_init_attr_ex
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_port
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|uint8_t
name|port
parameter_list|,
name|struct
name|ibv_port_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_pd
modifier|*
name|mlx5_alloc_pd
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_free_pd
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_mr
modifier|*
name|mlx5_reg_mr
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|void
modifier|*
name|addr
parameter_list|,
name|size_t
name|length
parameter_list|,
name|int
name|access
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_rereg_mr
parameter_list|(
name|struct
name|ibv_mr
modifier|*
name|mr
parameter_list|,
name|int
name|flags
parameter_list|,
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|void
modifier|*
name|addr
parameter_list|,
name|size_t
name|length
parameter_list|,
name|int
name|access
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_dereg_mr
parameter_list|(
name|struct
name|ibv_mr
modifier|*
name|mr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_mw
modifier|*
name|mlx5_alloc_mw
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|enum
name|ibv_mw_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_dealloc_mw
parameter_list|(
name|struct
name|ibv_mw
modifier|*
name|mw
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_bind_mw
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ibv_mw
modifier|*
name|mw
parameter_list|,
name|struct
name|ibv_mw_bind
modifier|*
name|mw_bind
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_cq
modifier|*
name|mlx5_create_cq
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|int
name|cqe
parameter_list|,
name|struct
name|ibv_comp_channel
modifier|*
name|channel
parameter_list|,
name|int
name|comp_vector
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_cq_ex
modifier|*
name|mlx5_create_cq_ex
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_cq_init_attr_ex
modifier|*
name|cq_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cq_fill_pfns
parameter_list|(
name|struct
name|mlx5_cq
modifier|*
name|cq
parameter_list|,
specifier|const
name|struct
name|ibv_cq_init_attr_ex
modifier|*
name|cq_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_alloc_cq_buf
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|mctx
parameter_list|,
name|struct
name|mlx5_cq
modifier|*
name|cq
parameter_list|,
name|struct
name|mlx5_buf
modifier|*
name|buf
parameter_list|,
name|int
name|nent
parameter_list|,
name|int
name|cqe_sz
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_free_cq_buf
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|ctx
parameter_list|,
name|struct
name|mlx5_buf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_resize_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|,
name|int
name|cqe
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_destroy_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_poll_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|,
name|int
name|ne
parameter_list|,
name|struct
name|ibv_wc
modifier|*
name|wc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_poll_cq_v1
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|,
name|int
name|ne
parameter_list|,
name|struct
name|ibv_wc
modifier|*
name|wc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_arm_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|,
name|int
name|solicited
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cq_event
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__mlx5_cq_clean
parameter_list|(
name|struct
name|mlx5_cq
modifier|*
name|cq
parameter_list|,
name|uint32_t
name|qpn
parameter_list|,
name|struct
name|mlx5_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cq_clean
parameter_list|(
name|struct
name|mlx5_cq
modifier|*
name|cq
parameter_list|,
name|uint32_t
name|qpn
parameter_list|,
name|struct
name|mlx5_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_cq_resize_copy_cqes
parameter_list|(
name|struct
name|mlx5_cq
modifier|*
name|cq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_srq
modifier|*
name|mlx5_create_srq
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ibv_srq_init_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_modify_srq
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|srq
parameter_list|,
name|struct
name|ibv_srq_attr
modifier|*
name|attr
parameter_list|,
name|int
name|mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_srq
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|srq
parameter_list|,
name|struct
name|ibv_srq_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_destroy_srq
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_alloc_srq_buf
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|mlx5_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_free_srq_wqe
parameter_list|(
name|struct
name|mlx5_srq
modifier|*
name|srq
parameter_list|,
name|int
name|ind
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_post_srq_recv
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|ibsrq
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_qp
modifier|*
name|mlx5_create_qp
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ibv_qp_init_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_query_qp
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ibv_qp_attr
modifier|*
name|attr
parameter_list|,
name|int
name|attr_mask
parameter_list|,
name|struct
name|ibv_qp_init_attr
modifier|*
name|init_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_modify_qp
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ibv_qp_attr
modifier|*
name|attr
parameter_list|,
name|int
name|attr_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_destroy_qp
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_init_qp_indices
parameter_list|(
name|struct
name|mlx5_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_init_rwq_indices
parameter_list|(
name|struct
name|mlx5_rwq
modifier|*
name|rwq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_post_send
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ibv_send_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ibv_send_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_post_recv
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_post_wq_recv
parameter_list|(
name|struct
name|ibv_wq
modifier|*
name|ibwq
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_calc_sq_wqe_size
parameter_list|(
name|struct
name|ibv_qp_cap
modifier|*
name|cap
parameter_list|,
name|enum
name|ibv_qp_type
name|type
parameter_list|,
name|struct
name|mlx5_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_set_sq_sizes
parameter_list|(
name|struct
name|mlx5_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ibv_qp_cap
modifier|*
name|cap
parameter_list|,
name|enum
name|ibv_qp_type
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|mlx5_qp
modifier|*
name|mlx5_find_qp
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|ctx
parameter_list|,
name|uint32_t
name|qpn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_store_qp
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|ctx
parameter_list|,
name|uint32_t
name|qpn
parameter_list|,
name|struct
name|mlx5_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_clear_qp
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|ctx
parameter_list|,
name|uint32_t
name|qpn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int32_t
name|mlx5_store_uidx
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|ctx
parameter_list|,
name|void
modifier|*
name|rsc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_clear_uidx
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|ctx
parameter_list|,
name|uint32_t
name|uidx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|mlx5_srq
modifier|*
name|mlx5_find_srq
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|ctx
parameter_list|,
name|uint32_t
name|srqn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_store_srq
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|ctx
parameter_list|,
name|uint32_t
name|srqn
parameter_list|,
name|struct
name|mlx5_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_clear_srq
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|ctx
parameter_list|,
name|uint32_t
name|srqn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_ah
modifier|*
name|mlx5_create_ah
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ibv_ah_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_destroy_ah
parameter_list|(
name|struct
name|ibv_ah
modifier|*
name|ah
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_alloc_av
parameter_list|(
name|struct
name|mlx5_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ibv_ah_attr
modifier|*
name|attr
parameter_list|,
name|struct
name|mlx5_ah
modifier|*
name|ah
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mlx5_free_av
parameter_list|(
name|struct
name|mlx5_ah
modifier|*
name|ah
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_attach_mcast
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
specifier|const
name|union
name|ibv_gid
modifier|*
name|gid
parameter_list|,
name|uint16_t
name|lid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_detach_mcast
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
specifier|const
name|union
name|ibv_gid
modifier|*
name|gid
parameter_list|,
name|uint16_t
name|lid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_round_up_power_of_two
parameter_list|(
name|long
name|long
name|sz
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|mlx5_get_atomic_laddr
parameter_list|(
name|struct
name|mlx5_qp
modifier|*
name|qp
parameter_list|,
name|uint16_t
name|idx
parameter_list|,
name|int
modifier|*
name|byte_count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|mlx5_get_send_wqe
parameter_list|(
name|struct
name|mlx5_qp
modifier|*
name|qp
parameter_list|,
name|int
name|n
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_copy_to_recv_wqe
parameter_list|(
name|struct
name|mlx5_qp
modifier|*
name|qp
parameter_list|,
name|int
name|idx
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_copy_to_send_wqe
parameter_list|(
name|struct
name|mlx5_qp
modifier|*
name|qp
parameter_list|,
name|int
name|idx
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_copy_to_recv_srq
parameter_list|(
name|struct
name|mlx5_srq
modifier|*
name|srq
parameter_list|,
name|int
name|idx
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_xrcd
modifier|*
name|mlx5_open_xrcd
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_xrcd_init_attr
modifier|*
name|xrcd_init_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_get_srq_num
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|srq
parameter_list|,
name|uint32_t
modifier|*
name|srq_num
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_close_xrcd
parameter_list|(
name|struct
name|ibv_xrcd
modifier|*
name|ib_xrcd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_wq
modifier|*
name|mlx5_create_wq
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_wq_init_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_modify_wq
parameter_list|(
name|struct
name|ibv_wq
modifier|*
name|wq
parameter_list|,
name|struct
name|ibv_wq_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_destroy_wq
parameter_list|(
name|struct
name|ibv_wq
modifier|*
name|wq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_rwq_ind_table
modifier|*
name|mlx5_create_rwq_ind_table
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_rwq_ind_table_init_attr
modifier|*
name|init_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mlx5_destroy_rwq_ind_table
parameter_list|(
name|struct
name|ibv_rwq_ind_table
modifier|*
name|rwq_ind_table
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_srq
modifier|*
name|mlx5_create_srq_ex
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_srq_init_attr_ex
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|void
modifier|*
name|mlx5_find_uidx
parameter_list|(
name|struct
name|mlx5_context
modifier|*
name|ctx
parameter_list|,
name|uint32_t
name|uidx
parameter_list|)
block|{
name|int
name|tind
init|=
name|uidx
operator|>>
name|MLX5_UIDX_TABLE_SHIFT
decl_stmt|;
if|if
condition|(
name|likely
argument_list|(
name|ctx
operator|->
name|uidx_table
index|[
name|tind
index|]
operator|.
name|refcnt
argument_list|)
condition|)
return|return
name|ctx
operator|->
name|uidx_table
index|[
name|tind
index|]
operator|.
name|table
index|[
name|uidx
operator|&
name|MLX5_UIDX_TABLE_MASK
index|]
return|;
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|mlx5_spin_lock
parameter_list|(
name|struct
name|mlx5_spinlock
modifier|*
name|lock
parameter_list|)
block|{
if|if
condition|(
operator|!
name|mlx5_single_threaded
condition|)
return|return
name|pthread_spin_lock
argument_list|(
operator|&
name|lock
operator|->
name|lock
argument_list|)
return|;
if|if
condition|(
name|unlikely
argument_list|(
name|lock
operator|->
name|in_use
argument_list|)
condition|)
block|{
name|fprintf
argument_list|(
name|stderr
argument_list|,
literal|"*** ERROR: multithreading vilation ***\n"
literal|"You are running a multithreaded application but\n"
literal|"you set MLX5_SINGLE_THREADED=1. Please unset it.\n"
argument_list|)
expr_stmt|;
name|abort
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|lock
operator|->
name|in_use
operator|=
literal|1
expr_stmt|;
comment|/* 		 * This fence is not at all correct, but it increases the 		 * chance that in_use is detected by another thread without 		 * much runtime cost. */
name|atomic_thread_fence
argument_list|(
name|memory_order_acq_rel
argument_list|)
expr_stmt|;
block|}
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|mlx5_spin_unlock
parameter_list|(
name|struct
name|mlx5_spinlock
modifier|*
name|lock
parameter_list|)
block|{
if|if
condition|(
operator|!
name|mlx5_single_threaded
condition|)
return|return
name|pthread_spin_unlock
argument_list|(
operator|&
name|lock
operator|->
name|lock
argument_list|)
return|;
name|lock
operator|->
name|in_use
operator|=
literal|0
expr_stmt|;
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|mlx5_spinlock_init
parameter_list|(
name|struct
name|mlx5_spinlock
modifier|*
name|lock
parameter_list|)
block|{
name|lock
operator|->
name|in_use
operator|=
literal|0
expr_stmt|;
return|return
name|pthread_spin_init
argument_list|(
operator|&
name|lock
operator|->
name|lock
argument_list|,
name|PTHREAD_PROCESS_PRIVATE
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|mlx5_spinlock_destroy
parameter_list|(
name|struct
name|mlx5_spinlock
modifier|*
name|lock
parameter_list|)
block|{
return|return
name|pthread_spin_destroy
argument_list|(
operator|&
name|lock
operator|->
name|lock
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|set_command
parameter_list|(
name|int
name|command
parameter_list|,
name|off_t
modifier|*
name|offset
parameter_list|)
block|{
operator|*
name|offset
operator||=
operator|(
name|command
operator|<<
name|MLX5_IB_MMAP_CMD_SHIFT
operator|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|set_arg
parameter_list|(
name|int
name|arg
parameter_list|,
name|off_t
modifier|*
name|offset
parameter_list|)
block|{
operator|*
name|offset
operator||=
name|arg
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|set_order
parameter_list|(
name|int
name|order
parameter_list|,
name|off_t
modifier|*
name|offset
parameter_list|)
block|{
name|set_arg
argument_list|(
name|order
argument_list|,
name|offset
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|set_index
parameter_list|(
name|int
name|index
parameter_list|,
name|off_t
modifier|*
name|offset
parameter_list|)
block|{
name|set_arg
argument_list|(
name|index
argument_list|,
name|offset
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|uint8_t
name|calc_sig
parameter_list|(
name|void
modifier|*
name|wqe
parameter_list|,
name|int
name|size
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
name|uint8_t
modifier|*
name|p
init|=
name|wqe
decl_stmt|;
name|uint8_t
name|res
init|=
literal|0
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
operator|++
name|i
control|)
name|res
operator|^=
name|p
index|[
name|i
index|]
expr_stmt|;
return|return
operator|~
name|res
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* MLX5_H */
end_comment

end_unit

