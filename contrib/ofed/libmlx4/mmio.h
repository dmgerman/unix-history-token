begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Licensed under the OpenIB.org BSD license (FreeBSD Variant) - See COPYING.md  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MMIO_H
end_ifndef

begin_define
define|#
directive|define
name|MMIO_H
end_define

begin_include
include|#
directive|include
file|<unistd.h>
end_include

begin_include
include|#
directive|include
file|<sys/syscall.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__s390x__
end_ifdef

begin_function
specifier|static
specifier|inline
name|long
name|mmio_writeb
parameter_list|(
specifier|const
name|unsigned
name|long
name|mmio_addr
parameter_list|,
specifier|const
name|uint8_t
name|val
parameter_list|)
block|{
return|return
name|syscall
argument_list|(
name|__NR_s390_pci_mmio_write
argument_list|,
name|mmio_addr
argument_list|,
operator|&
name|val
argument_list|,
sizeof|sizeof
argument_list|(
name|val
argument_list|)
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|long
name|mmio_writew
parameter_list|(
specifier|const
name|unsigned
name|long
name|mmio_addr
parameter_list|,
specifier|const
name|uint16_t
name|val
parameter_list|)
block|{
return|return
name|syscall
argument_list|(
name|__NR_s390_pci_mmio_write
argument_list|,
name|mmio_addr
argument_list|,
operator|&
name|val
argument_list|,
sizeof|sizeof
argument_list|(
name|val
argument_list|)
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|long
name|mmio_writel
parameter_list|(
specifier|const
name|unsigned
name|long
name|mmio_addr
parameter_list|,
specifier|const
name|uint32_t
name|val
parameter_list|)
block|{
return|return
name|syscall
argument_list|(
name|__NR_s390_pci_mmio_write
argument_list|,
name|mmio_addr
argument_list|,
operator|&
name|val
argument_list|,
sizeof|sizeof
argument_list|(
name|val
argument_list|)
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|long
name|mmio_writeq
parameter_list|(
specifier|const
name|unsigned
name|long
name|mmio_addr
parameter_list|,
specifier|const
name|uint64_t
name|val
parameter_list|)
block|{
return|return
name|syscall
argument_list|(
name|__NR_s390_pci_mmio_write
argument_list|,
name|mmio_addr
argument_list|,
operator|&
name|val
argument_list|,
sizeof|sizeof
argument_list|(
name|val
argument_list|)
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|long
name|mmio_write
parameter_list|(
specifier|const
name|unsigned
name|long
name|mmio_addr
parameter_list|,
specifier|const
name|void
modifier|*
name|val
parameter_list|,
specifier|const
name|size_t
name|length
parameter_list|)
block|{
return|return
name|syscall
argument_list|(
name|__NR_s390_pci_mmio_write
argument_list|,
name|mmio_addr
argument_list|,
name|val
argument_list|,
name|length
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|long
name|mmio_readb
parameter_list|(
specifier|const
name|unsigned
name|long
name|mmio_addr
parameter_list|,
name|uint8_t
modifier|*
name|val
parameter_list|)
block|{
return|return
name|syscall
argument_list|(
name|__NR_s390_pci_mmio_read
argument_list|,
name|mmio_addr
argument_list|,
name|val
argument_list|,
sizeof|sizeof
argument_list|(
operator|*
name|val
argument_list|)
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|long
name|mmio_readw
parameter_list|(
specifier|const
name|unsigned
name|long
name|mmio_addr
parameter_list|,
name|uint16_t
modifier|*
name|val
parameter_list|)
block|{
return|return
name|syscall
argument_list|(
name|__NR_s390_pci_mmio_read
argument_list|,
name|mmio_addr
argument_list|,
name|val
argument_list|,
sizeof|sizeof
argument_list|(
operator|*
name|val
argument_list|)
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|long
name|mmio_readl
parameter_list|(
specifier|const
name|unsigned
name|long
name|mmio_addr
parameter_list|,
name|uint32_t
modifier|*
name|val
parameter_list|)
block|{
return|return
name|syscall
argument_list|(
name|__NR_s390_pci_mmio_read
argument_list|,
name|mmio_addr
argument_list|,
name|val
argument_list|,
sizeof|sizeof
argument_list|(
operator|*
name|val
argument_list|)
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|long
name|mmio_readq
parameter_list|(
specifier|const
name|unsigned
name|long
name|mmio_addr
parameter_list|,
name|uint64_t
modifier|*
name|val
parameter_list|)
block|{
return|return
name|syscall
argument_list|(
name|__NR_s390_pci_mmio_read
argument_list|,
name|mmio_addr
argument_list|,
name|val
argument_list|,
sizeof|sizeof
argument_list|(
operator|*
name|val
argument_list|)
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|long
name|mmio_read
parameter_list|(
specifier|const
name|unsigned
name|long
name|mmio_addr
parameter_list|,
name|void
modifier|*
name|val
parameter_list|,
specifier|const
name|size_t
name|length
parameter_list|)
block|{
return|return
name|syscall
argument_list|(
name|__NR_s390_pci_mmio_read
argument_list|,
name|mmio_addr
argument_list|,
name|val
argument_list|,
name|length
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|mlx4_bf_copy
parameter_list|(
name|unsigned
name|long
modifier|*
name|dst
parameter_list|,
name|unsigned
name|long
modifier|*
name|src
parameter_list|,
name|unsigned
name|bytecnt
parameter_list|)
block|{
name|mmio_write
argument_list|(
operator|(
name|unsigned
name|long
operator|)
name|dst
argument_list|,
name|src
argument_list|,
name|bytecnt
argument_list|)
expr_stmt|;
block|}
end_function

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|mmio_writeb
parameter_list|(
name|addr
parameter_list|,
name|value
parameter_list|)
define|\
value|(*((volatile uint8_t *)addr) = value)
end_define

begin_define
define|#
directive|define
name|mmio_writew
parameter_list|(
name|addr
parameter_list|,
name|value
parameter_list|)
define|\
value|(*((volatile uint16_t *)addr) = value)
end_define

begin_define
define|#
directive|define
name|mmio_writel
parameter_list|(
name|addr
parameter_list|,
name|value
parameter_list|)
define|\
value|(*((volatile uint32_t *)addr) = value)
end_define

begin_define
define|#
directive|define
name|mmio_writeq
parameter_list|(
name|addr
parameter_list|,
name|value
parameter_list|)
define|\
value|(*((volatile uint64_t *)addr) = value)
end_define

begin_define
define|#
directive|define
name|mmio_write
parameter_list|(
name|addr
parameter_list|,
name|value
parameter_list|,
name|length
parameter_list|)
define|\
value|memcpy(addr, value, length)
end_define

begin_define
define|#
directive|define
name|mmio_readb
parameter_list|(
name|addr
parameter_list|,
name|value
parameter_list|)
define|\
value|(value = *((volatile uint8_t *)addr))
end_define

begin_define
define|#
directive|define
name|mmio_readw
parameter_list|(
name|addr
parameter_list|,
name|value
parameter_list|)
define|\
value|(value = *((volatile uint16_t *)addr))
end_define

begin_define
define|#
directive|define
name|mmio_readl
parameter_list|(
name|addr
parameter_list|,
name|value
parameter_list|)
define|\
value|(value = *((volatile uint32_t *)addr))
end_define

begin_define
define|#
directive|define
name|mmio_readq
parameter_list|(
name|addr
parameter_list|,
name|value
parameter_list|)
define|\
value|(value = *((volatile uint64_t *)addr))
end_define

begin_define
define|#
directive|define
name|mmio_read
parameter_list|(
name|addr
parameter_list|,
name|value
parameter_list|,
name|length
parameter_list|)
define|\
value|memcpy(value, addr, length)
end_define

begin_comment
comment|/*  * Avoid using memcpy() to copy to BlueFlame page, since memcpy()  * implementations may use move-string-buffer assembler instructions,  * which do not guarantee order of copying.  */
end_comment

begin_function
specifier|static
specifier|inline
name|void
name|mlx4_bf_copy
parameter_list|(
name|unsigned
name|long
modifier|*
name|dst
parameter_list|,
name|unsigned
name|long
modifier|*
name|src
parameter_list|,
name|unsigned
name|bytecnt
parameter_list|)
block|{
while|while
condition|(
name|bytecnt
operator|>
literal|0
condition|)
block|{
operator|*
name|dst
operator|++
operator|=
operator|*
name|src
operator|++
expr_stmt|;
operator|*
name|dst
operator|++
operator|=
operator|*
name|src
operator|++
expr_stmt|;
name|bytecnt
operator|-=
literal|2
operator|*
sizeof|sizeof
argument_list|(
name|long
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

