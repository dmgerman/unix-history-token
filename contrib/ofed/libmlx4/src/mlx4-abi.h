begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2007 Cisco, Inc.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MLX4_ABI_H
end_ifndef

begin_define
define|#
directive|define
name|MLX4_ABI_H
end_define

begin_include
include|#
directive|include
file|<infiniband/kern-abi.h>
end_include

begin_define
define|#
directive|define
name|MLX4_UVERBS_MIN_ABI_VERSION
value|2
end_define

begin_define
define|#
directive|define
name|MLX4_UVERBS_MAX_ABI_VERSION
value|4
end_define

begin_struct
struct|struct
name|mlx4_alloc_ucontext_resp
block|{
name|struct
name|ibv_get_context_resp
name|ibv_resp
decl_stmt|;
name|__u32
name|dev_caps
decl_stmt|;
name|__u32
name|qp_tab_size
decl_stmt|;
name|__u16
name|bf_reg_size
decl_stmt|;
name|__u16
name|bf_regs_per_page
decl_stmt|;
name|__u32
name|cqe_size
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_alloc_pd_resp
block|{
name|struct
name|ibv_alloc_pd_resp
name|ibv_resp
decl_stmt|;
name|__u32
name|pdn
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_create_cq
block|{
name|struct
name|ibv_create_cq
name|ibv_cmd
decl_stmt|;
name|__u64
name|buf_addr
decl_stmt|;
name|__u64
name|db_addr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_create_cq_resp
block|{
name|struct
name|ibv_create_cq_resp
name|ibv_resp
decl_stmt|;
name|__u32
name|cqn
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_resize_cq
block|{
name|struct
name|ibv_resize_cq
name|ibv_cmd
decl_stmt|;
name|__u64
name|buf_addr
decl_stmt|;
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|HAVE_IBV_XRC_OPS
end_ifdef

begin_struct
struct|struct
name|mlx4_create_xrc_srq
block|{
name|struct
name|ibv_create_xrc_srq
name|ibv_cmd
decl_stmt|;
name|__u64
name|buf_addr
decl_stmt|;
name|__u64
name|db_addr
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_struct
struct|struct
name|mlx4_create_srq
block|{
name|struct
name|ibv_create_srq
name|ibv_cmd
decl_stmt|;
name|__u64
name|buf_addr
decl_stmt|;
name|__u64
name|db_addr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_create_srq_resp
block|{
name|struct
name|ibv_create_srq_resp
name|ibv_resp
decl_stmt|;
name|__u32
name|srqn
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mlx4_create_qp
block|{
name|struct
name|ibv_create_qp
name|ibv_cmd
decl_stmt|;
name|__u64
name|buf_addr
decl_stmt|;
name|__u64
name|db_addr
decl_stmt|;
name|__u8
name|log_sq_bb_count
decl_stmt|;
name|__u8
name|log_sq_stride
decl_stmt|;
name|__u8
name|sq_no_prefetch
decl_stmt|;
comment|/* was reserved in ABI 2 */
name|__u8
name|reserved
index|[
literal|5
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|HAVE_IBV_XRC_OPS
end_ifdef

begin_struct
struct|struct
name|mlx4_open_xrc_domain_resp
block|{
name|struct
name|ibv_open_xrc_domain_resp
name|ibv_resp
decl_stmt|;
name|__u32
name|xrcdn
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* MLX4_ABI_H */
end_comment

end_unit

