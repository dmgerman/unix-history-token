begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2008 Lawrence Livermore National Laboratory  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  *  */
end_comment

begin_comment
comment|/** =========================================================================  * Define the internal data structures.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_INTERNAL_H_
end_ifndef

begin_define
define|#
directive|define
name|_INTERNAL_H_
end_define

begin_include
include|#
directive|include
file|<infiniband/ibnetdisc.h>
end_include

begin_include
include|#
directive|include
file|<complib/cl_qmap.h>
end_include

begin_define
define|#
directive|define
name|IBND_DEBUG
parameter_list|(
name|fmt
parameter_list|,
modifier|...
parameter_list|)
define|\
value|if (ibdebug) { \ 		printf("%s:%u; " fmt, __FILE__, __LINE__, ## __VA_ARGS__); \ 	}
end_define

begin_define
define|#
directive|define
name|IBND_ERROR
parameter_list|(
name|fmt
parameter_list|,
modifier|...
parameter_list|)
define|\
value|fprintf(stderr, "%s:%u; " fmt, __FILE__, __LINE__, ## __VA_ARGS__)
end_define

begin_comment
comment|/* HASH table defines */
end_comment

begin_define
define|#
directive|define
name|HASHGUID
parameter_list|(
name|guid
parameter_list|)
value|((uint32_t)(((uint32_t)(guid) * 101) ^ ((uint32_t)((guid)>> 32) * 103)))
end_define

begin_define
define|#
directive|define
name|MAXHOPS
value|63
end_define

begin_define
define|#
directive|define
name|DEFAULT_MAX_SMP_ON_WIRE
value|2
end_define

begin_define
define|#
directive|define
name|DEFAULT_TIMEOUT
value|1000
end_define

begin_define
define|#
directive|define
name|DEFAULT_RETRIES
value|3
end_define

begin_define
define|#
directive|define
name|GINT_TO_POINTER
parameter_list|(
name|x
parameter_list|)
value|((void *)(uintptr_t)(x))
end_define

begin_typedef
typedef|typedef
name|struct
name|GHashTable
name|GHashTable
typedef|;
end_typedef

begin_define
define|#
directive|define
name|g_hash_table_new_full
parameter_list|(
modifier|...
parameter_list|)
value|GHashTableNew()
end_define

begin_define
define|#
directive|define
name|g_hash_table_destroy
parameter_list|(
modifier|...
parameter_list|)
value|GHashTableDestroy(__VA_ARGS__)
end_define

begin_define
define|#
directive|define
name|g_hash_table_insert
parameter_list|(
modifier|...
parameter_list|)
value|GHashTableInsert(__VA_ARGS__)
end_define

begin_define
define|#
directive|define
name|g_hash_table_lookup
parameter_list|(
modifier|...
parameter_list|)
value|GHashTableLookup(__VA_ARGS__)
end_define

begin_function_decl
specifier|extern
name|GHashTable
modifier|*
name|GHashTableNew
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|GHashTableDestroy
parameter_list|(
name|GHashTable
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|GHashTableInsert
parameter_list|(
name|GHashTable
modifier|*
parameter_list|,
name|void
modifier|*
name|key
parameter_list|,
name|void
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
modifier|*
name|GHashTableLookup
parameter_list|(
name|GHashTable
modifier|*
parameter_list|,
name|void
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_typedef
typedef|typedef
struct|struct
name|f_internal
block|{
name|ibnd_fabric_t
name|fabric
decl_stmt|;
name|GHashTable
modifier|*
name|lid2guid
decl_stmt|;
block|}
name|f_internal_t
typedef|;
end_typedef

begin_function_decl
name|f_internal_t
modifier|*
name|allocate_fabric_internal
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|create_lid2guid
parameter_list|(
name|f_internal_t
modifier|*
name|f_int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|destroy_lid2guid
parameter_list|(
name|f_internal_t
modifier|*
name|f_int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|add_to_portlid_hash
parameter_list|(
name|ibnd_port_t
modifier|*
name|port
parameter_list|,
name|GHashTable
modifier|*
name|htable
parameter_list|)
function_decl|;
end_function_decl

begin_typedef
typedef|typedef
struct|struct
name|ibnd_scan
block|{
name|ib_portid_t
name|selfportid
decl_stmt|;
name|f_internal_t
modifier|*
name|f_int
decl_stmt|;
name|struct
name|ibnd_config
modifier|*
name|cfg
decl_stmt|;
name|unsigned
name|initial_hops
decl_stmt|;
block|}
name|ibnd_scan_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|ibnd_smp
name|ibnd_smp_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|smp_engine
name|smp_engine_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|smp_comp_cb_t
function_decl|)
parameter_list|(
name|smp_engine_t
modifier|*
name|engine
parameter_list|,
name|ibnd_smp_t
modifier|*
name|smp
parameter_list|,
name|uint8_t
modifier|*
name|mad_resp
parameter_list|,
name|void
modifier|*
name|cb_data
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|ibnd_smp
block|{
name|cl_map_item_t
name|on_wire
decl_stmt|;
name|struct
name|ibnd_smp
modifier|*
name|qnext
decl_stmt|;
name|smp_comp_cb_t
name|cb
decl_stmt|;
name|void
modifier|*
name|cb_data
decl_stmt|;
name|ib_portid_t
name|path
decl_stmt|;
name|ib_rpc_t
name|rpc
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|smp_engine
block|{
name|int
name|umad_fd
decl_stmt|;
name|int
name|smi_agent
decl_stmt|;
name|int
name|smi_dir_agent
decl_stmt|;
name|ibnd_smp_t
modifier|*
name|smp_queue_head
decl_stmt|;
name|ibnd_smp_t
modifier|*
name|smp_queue_tail
decl_stmt|;
name|void
modifier|*
name|user_data
decl_stmt|;
name|cl_qmap_t
name|smps_on_wire
decl_stmt|;
name|struct
name|ibnd_config
modifier|*
name|cfg
decl_stmt|;
name|unsigned
name|total_smps
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|smp_engine_init
parameter_list|(
name|smp_engine_t
modifier|*
name|engine
parameter_list|,
name|char
modifier|*
name|ca_name
parameter_list|,
name|int
name|ca_port
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|,
name|ibnd_config_t
modifier|*
name|cfg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|issue_smp
parameter_list|(
name|smp_engine_t
modifier|*
name|engine
parameter_list|,
name|ib_portid_t
modifier|*
name|portid
parameter_list|,
name|unsigned
name|attrid
parameter_list|,
name|unsigned
name|mod
parameter_list|,
name|smp_comp_cb_t
name|cb
parameter_list|,
name|void
modifier|*
name|cb_data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|process_mads
parameter_list|(
name|smp_engine_t
modifier|*
name|engine
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|smp_engine_destroy
parameter_list|(
name|smp_engine_t
modifier|*
name|engine
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|add_to_nodeguid_hash
parameter_list|(
name|ibnd_node_t
modifier|*
name|node
parameter_list|,
name|ibnd_node_t
modifier|*
name|hash
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|add_to_portguid_hash
parameter_list|(
name|ibnd_port_t
modifier|*
name|port
parameter_list|,
name|ibnd_port_t
modifier|*
name|hash
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|add_to_type_list
parameter_list|(
name|ibnd_node_t
modifier|*
name|node
parameter_list|,
name|f_internal_t
modifier|*
name|fabric
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|destroy_node
parameter_list|(
name|ibnd_node_t
modifier|*
name|node
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _INTERNAL_H_ */
end_comment

end_unit

