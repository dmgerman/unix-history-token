begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2006-2014 Chelsio, Inc. All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *	  copyright notice, this list of conditions and the following  *	  disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *	  copyright notice, this list of conditions and the following  *	  disclaimer in the documentation and/or other materials  *	  provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|IWCH_H
end_ifndef

begin_define
define|#
directive|define
name|IWCH_H
end_define

begin_include
include|#
directive|include
file|<pthread.h>
end_include

begin_include
include|#
directive|include
file|<inttypes.h>
end_include

begin_include
include|#
directive|include
file|<stddef.h>
end_include

begin_include
include|#
directive|include
file|<string.h>
end_include

begin_include
include|#
directive|include
file|<syslog.h>
end_include

begin_include
include|#
directive|include
file|<sys/errno.h>
end_include

begin_include
include|#
directive|include
file|<sys/time.h>
end_include

begin_include
include|#
directive|include
file|<infiniband/driver.h>
end_include

begin_include
include|#
directive|include
file|<infiniband/arch.h>
end_include

begin_include
include|#
directive|include
file|"queue.h"
end_include

begin_include
include|#
directive|include
file|"t4.h"
end_include

begin_decl_stmt
specifier|extern
name|unsigned
name|long
name|c4iw_page_size
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|unsigned
name|long
name|c4iw_page_shift
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|unsigned
name|long
name|c4iw_page_mask
decl_stmt|;
end_decl_stmt

begin_struct_decl
struct_decl|struct
name|c4iw_mr
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|c4iw_dev
block|{
name|struct
name|ibv_device
name|ibv_dev
decl_stmt|;
name|unsigned
name|chip_version
decl_stmt|;
name|int
name|max_mr
decl_stmt|;
name|struct
name|c4iw_mr
modifier|*
modifier|*
name|mmid2ptr
decl_stmt|;
name|int
name|max_qp
decl_stmt|;
name|struct
name|c4iw_qp
modifier|*
modifier|*
name|qpid2ptr
decl_stmt|;
name|int
name|max_cq
decl_stmt|;
name|struct
name|c4iw_cq
modifier|*
modifier|*
name|cqid2ptr
decl_stmt|;
name|pthread_spinlock_t
name|lock
decl_stmt|;
name|SLIST_ENTRY
argument_list|(
argument|c4iw_dev
argument_list|)
name|list
expr_stmt|;
name|int
name|abi_version
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|int
name|dev_is_t5
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|dev
parameter_list|)
block|{
return|return
name|dev
operator|->
name|chip_version
operator|==
name|CHELSIO_T5
return|;
block|}
end_function

begin_struct
struct|struct
name|c4iw_context
block|{
name|struct
name|ibv_context
name|ibv_ctx
decl_stmt|;
name|struct
name|t4_dev_status_page
modifier|*
name|status_page
decl_stmt|;
name|int
name|status_page_size
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_pd
block|{
name|struct
name|ibv_pd
name|ibv_pd
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_mr
block|{
name|struct
name|ibv_mr
name|ibv_mr
decl_stmt|;
name|uint64_t
name|va_fbo
decl_stmt|;
name|uint32_t
name|len
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|u32
name|c4iw_mmid
parameter_list|(
name|u32
name|stag
parameter_list|)
block|{
return|return
operator|(
name|stag
operator|>>
literal|8
operator|)
return|;
block|}
end_function

begin_struct
struct|struct
name|c4iw_cq
block|{
name|struct
name|ibv_cq
name|ibv_cq
decl_stmt|;
name|struct
name|c4iw_dev
modifier|*
name|rhp
decl_stmt|;
name|struct
name|t4_cq
name|cq
decl_stmt|;
name|pthread_spinlock_t
name|lock
decl_stmt|;
ifdef|#
directive|ifdef
name|STALL_DETECTION
name|struct
name|timeval
name|time
decl_stmt|;
name|int
name|dumped
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|c4iw_qp
block|{
name|struct
name|ibv_qp
name|ibv_qp
decl_stmt|;
name|struct
name|c4iw_dev
modifier|*
name|rhp
decl_stmt|;
name|struct
name|t4_wq
name|wq
decl_stmt|;
name|pthread_spinlock_t
name|lock
decl_stmt|;
name|int
name|sq_sig_all
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|to_c4iw_xxx
parameter_list|(
name|xxx
parameter_list|,
name|type
parameter_list|)
define|\
value|((struct c4iw_##type *)						\ 	 ((void *) ib##xxx - offsetof(struct c4iw_##type, ibv_##xxx)))
end_define

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_dev
modifier|*
name|to_c4iw_dev
parameter_list|(
name|struct
name|ibv_device
modifier|*
name|ibdev
parameter_list|)
block|{
return|return
name|to_c4iw_xxx
argument_list|(
name|dev
argument_list|,
name|dev
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_context
modifier|*
name|to_c4iw_context
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|ibctx
parameter_list|)
block|{
return|return
name|to_c4iw_xxx
argument_list|(
name|ctx
argument_list|,
name|context
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_pd
modifier|*
name|to_c4iw_pd
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|ibpd
parameter_list|)
block|{
return|return
name|to_c4iw_xxx
argument_list|(
name|pd
argument_list|,
name|pd
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_cq
modifier|*
name|to_c4iw_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|ibcq
parameter_list|)
block|{
return|return
name|to_c4iw_xxx
argument_list|(
name|cq
argument_list|,
name|cq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_qp
modifier|*
name|to_c4iw_qp
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|ibqp
parameter_list|)
block|{
return|return
name|to_c4iw_xxx
argument_list|(
name|qp
argument_list|,
name|qp
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_mr
modifier|*
name|to_c4iw_mr
parameter_list|(
name|struct
name|ibv_mr
modifier|*
name|ibmr
parameter_list|)
block|{
return|return
name|to_c4iw_xxx
argument_list|(
name|mr
argument_list|,
name|mr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_qp
modifier|*
name|get_qhp
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|u32
name|qid
parameter_list|)
block|{
return|return
name|rhp
operator|->
name|qpid2ptr
index|[
name|qid
index|]
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|c4iw_cq
modifier|*
name|get_chp
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|rhp
parameter_list|,
name|u32
name|qid
parameter_list|)
block|{
return|return
name|rhp
operator|->
name|cqid2ptr
index|[
name|qid
index|]
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|unsigned
name|long_log2
parameter_list|(
name|unsigned
name|long
name|x
parameter_list|)
block|{
name|unsigned
name|r
init|=
literal|0
decl_stmt|;
for|for
control|(
name|x
operator|>>=
literal|1
init|;
name|x
operator|>
literal|0
condition|;
name|x
operator|>>=
literal|1
control|)
name|r
operator|++
expr_stmt|;
return|return
name|r
return|;
block|}
end_function

begin_function_decl
name|int
name|c4iw_query_device
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_device_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_query_port
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|uint8_t
name|port
parameter_list|,
name|struct
name|ibv_port_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_pd
modifier|*
name|c4iw_alloc_pd
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_free_pd
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_mr
modifier|*
name|c4iw_reg_mr
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|void
modifier|*
name|addr
parameter_list|,
name|size_t
name|length
parameter_list|,
name|int
name|access
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_dereg_mr
parameter_list|(
name|struct
name|ibv_mr
modifier|*
name|mr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_cq
modifier|*
name|c4iw_create_cq
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|int
name|cqe
parameter_list|,
name|struct
name|ibv_comp_channel
modifier|*
name|channel
parameter_list|,
name|int
name|comp_vector
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_resize_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|,
name|int
name|cqe
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_destroy_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_poll_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|,
name|int
name|ne
parameter_list|,
name|struct
name|ibv_wc
modifier|*
name|wc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_arm_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|,
name|int
name|solicited
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_cq_event
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_init_cq_buf
parameter_list|(
name|struct
name|c4iw_cq
modifier|*
name|cq
parameter_list|,
name|int
name|nent
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_srq
modifier|*
name|c4iw_create_srq
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ibv_srq_init_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_modify_srq
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|srq
parameter_list|,
name|struct
name|ibv_srq_attr
modifier|*
name|attr
parameter_list|,
name|int
name|mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_destroy_srq
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_post_srq_recv
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|ibsrq
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_qp
modifier|*
name|c4iw_create_qp
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ibv_qp_init_attr
modifier|*
name|attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_modify_qp
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ibv_qp_attr
modifier|*
name|attr
parameter_list|,
name|int
name|attr_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_destroy_qp
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_query_qp
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ibv_qp_attr
modifier|*
name|attr
parameter_list|,
name|int
name|attr_mask
parameter_list|,
name|struct
name|ibv_qp_init_attr
modifier|*
name|init_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_flush_qp
parameter_list|(
name|struct
name|c4iw_qp
modifier|*
name|qhp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_flush_qps
parameter_list|(
name|struct
name|c4iw_dev
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_post_send
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ibv_send_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ibv_send_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_post_receive
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_ah
modifier|*
name|c4iw_create_ah
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ibv_ah_attr
modifier|*
name|ah_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_destroy_ah
parameter_list|(
name|struct
name|ibv_ah
modifier|*
name|ah
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_attach_mcast
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
specifier|const
name|union
name|ibv_gid
modifier|*
name|gid
parameter_list|,
name|uint16_t
name|lid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_detach_mcast
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
specifier|const
name|union
name|ibv_gid
modifier|*
name|gid
parameter_list|,
name|uint16_t
name|lid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_async_event
parameter_list|(
name|struct
name|ibv_async_event
modifier|*
name|event
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_flush_hw_cq
parameter_list|(
name|struct
name|c4iw_cq
modifier|*
name|chp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|c4iw_flush_rq
parameter_list|(
name|struct
name|t4_wq
modifier|*
name|wq
parameter_list|,
name|struct
name|t4_cq
modifier|*
name|cq
parameter_list|,
name|int
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_flush_sq
parameter_list|(
name|struct
name|c4iw_qp
modifier|*
name|qhp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|c4iw_count_rcqes
parameter_list|(
name|struct
name|t4_cq
modifier|*
name|cq
parameter_list|,
name|struct
name|t4_wq
modifier|*
name|wq
parameter_list|,
name|int
modifier|*
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|FW_MAJ
value|0
end_define

begin_define
define|#
directive|define
name|FW_MIN
value|0
end_define

begin_function
specifier|static
specifier|inline
name|unsigned
name|long
name|align
parameter_list|(
name|unsigned
name|long
name|val
parameter_list|,
name|unsigned
name|long
name|align
parameter_list|)
block|{
return|return
operator|(
name|val
operator|+
name|align
operator|-
literal|1
operator|)
operator|&
operator|~
operator|(
name|align
operator|-
literal|1
operator|)
return|;
block|}
end_function

begin_ifdef
ifdef|#
directive|ifdef
name|STATS
end_ifdef

begin_define
define|#
directive|define
name|INC_STAT
parameter_list|(
name|a
parameter_list|)
value|{ c4iw_stats.a++; }
end_define

begin_struct
struct|struct
name|c4iw_stats
block|{
name|unsigned
name|long
name|send
decl_stmt|;
name|unsigned
name|long
name|recv
decl_stmt|;
name|unsigned
name|long
name|read
decl_stmt|;
name|unsigned
name|long
name|write
decl_stmt|;
name|unsigned
name|long
name|arm
decl_stmt|;
name|unsigned
name|long
name|cqe
decl_stmt|;
name|unsigned
name|long
name|mr
decl_stmt|;
name|unsigned
name|long
name|qp
decl_stmt|;
name|unsigned
name|long
name|cq
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|c4iw_stats
name|c4iw_stats
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|INC_STAT
parameter_list|(
name|a
parameter_list|)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|STALL_DETECTION
end_ifdef

begin_function_decl
name|void
name|dump_state
parameter_list|()
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|int
name|stall_to
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* IWCH_H */
end_comment

end_unit

