begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2004, 2005 Topspin Communications.  All rights reserved.  * Copyright (c) 2005, 2006 Cisco Systems, Inc.  All rights reserved.  * Copyright (c) 2005 PathScale, Inc.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|INFINIBAND_DRIVER_H
end_ifndef

begin_define
define|#
directive|define
name|INFINIBAND_DRIVER_H
end_define

begin_include
include|#
directive|include
file|<infiniband/verbs.h>
end_include

begin_include
include|#
directive|include
file|<infiniband/kern-abi.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_define
define|#
directive|define
name|BEGIN_C_DECLS
value|extern "C" {
end_define

begin_define
define|#
directive|define
name|END_C_DECLS
value|}
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* !__cplusplus */
end_comment

begin_define
define|#
directive|define
name|BEGIN_C_DECLS
end_define

begin_define
define|#
directive|define
name|END_C_DECLS
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __cplusplus */
end_comment

begin_comment
comment|/*  * Extension that low-level drivers should add to their .so filename  * (probably via libtool "-release" option).  For example a low-level  * driver named "libfoo" should build a plug-in named "libfoo-rdmav2.so".  */
end_comment

begin_define
define|#
directive|define
name|IBV_DEVICE_LIBRARY_EXTENSION
value|rdmav2
end_define

begin_struct_decl
struct_decl|struct
name|verbs_device
struct_decl|;
end_struct_decl

begin_enum
enum|enum
name|verbs_xrcd_mask
block|{
name|VERBS_XRCD_HANDLE
init|=
literal|1
operator|<<
literal|0
block|,
name|VERBS_XRCD_RESERVED
init|=
literal|1
operator|<<
literal|1
block|}
enum|;
end_enum

begin_struct
struct|struct
name|verbs_xrcd
block|{
name|struct
name|ibv_xrcd
name|xrcd
decl_stmt|;
name|uint32_t
name|comp_mask
decl_stmt|;
name|uint32_t
name|handle
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|verbs_srq_mask
block|{
name|VERBS_SRQ_TYPE
init|=
literal|1
operator|<<
literal|0
block|,
name|VERBS_SRQ_XRCD
init|=
literal|1
operator|<<
literal|1
block|,
name|VERBS_SRQ_CQ
init|=
literal|1
operator|<<
literal|2
block|,
name|VERBS_SRQ_NUM
init|=
literal|1
operator|<<
literal|3
block|,
name|VERBS_SRQ_RESERVED
init|=
literal|1
operator|<<
literal|4
block|}
enum|;
end_enum

begin_struct
struct|struct
name|verbs_srq
block|{
name|struct
name|ibv_srq
name|srq
decl_stmt|;
name|uint32_t
name|comp_mask
decl_stmt|;
name|enum
name|ibv_srq_type
name|srq_type
decl_stmt|;
name|struct
name|verbs_xrcd
modifier|*
name|xrcd
decl_stmt|;
name|struct
name|ibv_cq
modifier|*
name|cq
decl_stmt|;
name|uint32_t
name|srq_num
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|verbs_qp_mask
block|{
name|VERBS_QP_XRCD
init|=
literal|1
operator|<<
literal|0
block|,
name|VERBS_QP_RESERVED
init|=
literal|1
operator|<<
literal|1
block|}
enum|;
end_enum

begin_enum
enum|enum
name|ibv_gid_type
block|{
name|IBV_GID_TYPE_IB_ROCE_V1
block|,
name|IBV_GID_TYPE_ROCE_V2
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|verbs_qp
block|{
name|struct
name|ibv_qp
name|qp
decl_stmt|;
name|uint32_t
name|comp_mask
decl_stmt|;
name|struct
name|verbs_xrcd
modifier|*
name|xrcd
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Must change the PRIVATE IBVERBS_PRIVATE_ symbol if this is changed */
end_comment

begin_struct
struct|struct
name|verbs_device_ops
block|{
comment|/* Old interface, do not use in new code. */
name|struct
name|ibv_context
modifier|*
function_decl|(
modifier|*
name|alloc_context
function_decl|)
parameter_list|(
name|struct
name|ibv_device
modifier|*
name|device
parameter_list|,
name|int
name|cmd_fd
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|free_context
function_decl|)
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|)
function_decl|;
comment|/* New interface */
name|int
function_decl|(
modifier|*
name|init_context
function_decl|)
parameter_list|(
name|struct
name|verbs_device
modifier|*
name|device
parameter_list|,
name|struct
name|ibv_context
modifier|*
name|ctx
parameter_list|,
name|int
name|cmd_fd
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|uninit_context
function_decl|)
parameter_list|(
name|struct
name|verbs_device
modifier|*
name|device
parameter_list|,
name|struct
name|ibv_context
modifier|*
name|ctx
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_comment
comment|/* Must change the PRIVATE IBVERBS_PRIVATE_ symbol if this is changed */
end_comment

begin_struct
struct|struct
name|verbs_device
block|{
name|struct
name|ibv_device
name|device
decl_stmt|;
comment|/* Must be first */
specifier|const
name|struct
name|verbs_device_ops
modifier|*
name|ops
decl_stmt|;
name|size_t
name|sz
decl_stmt|;
name|size_t
name|size_of_context
decl_stmt|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|struct
name|verbs_device
modifier|*
name|verbs_get_device
parameter_list|(
specifier|const
name|struct
name|ibv_device
modifier|*
name|dev
parameter_list|)
block|{
return|return
name|container_of
argument_list|(
name|dev
argument_list|,
expr|struct
name|verbs_device
argument_list|,
name|device
argument_list|)
return|;
block|}
end_function

begin_typedef
typedef|typedef
name|struct
name|verbs_device
modifier|*
function_decl|(
modifier|*
name|verbs_driver_init_func
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
name|uverbs_sys_path
parameter_list|,
name|int
name|abi_version
parameter_list|)
function_decl|;
end_typedef

begin_function_decl
name|void
name|verbs_register_driver
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|verbs_driver_init_func
name|init_func
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|verbs_init_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|,
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_comp_channel
modifier|*
name|channel
parameter_list|,
name|void
modifier|*
name|cq_context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_get_context
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_get_context
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_get_context_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_query_device
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_device_attr
modifier|*
name|device_attr
parameter_list|,
name|uint64_t
modifier|*
name|raw_fw_ver
parameter_list|,
name|struct
name|ibv_query_device
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_query_device_ex
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
specifier|const
name|struct
name|ibv_query_device_ex_input
modifier|*
name|input
parameter_list|,
name|struct
name|ibv_device_attr_ex
modifier|*
name|attr
parameter_list|,
name|size_t
name|attr_size
parameter_list|,
name|uint64_t
modifier|*
name|raw_fw_ver
parameter_list|,
name|struct
name|ibv_query_device_ex
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_core_size
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_query_device_resp_ex
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_core_size
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_query_port
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|uint8_t
name|port_num
parameter_list|,
name|struct
name|ibv_port_attr
modifier|*
name|port_attr
parameter_list|,
name|struct
name|ibv_query_port
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_alloc_pd
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ibv_alloc_pd
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_alloc_pd_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_dealloc_pd
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_open_xrcd
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|verbs_xrcd
modifier|*
name|xrcd
parameter_list|,
name|int
name|vxrcd_size
parameter_list|,
name|struct
name|ibv_xrcd_init_attr
modifier|*
name|attr
parameter_list|,
name|struct
name|ibv_open_xrcd
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_open_xrcd_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_close_xrcd
parameter_list|(
name|struct
name|verbs_xrcd
modifier|*
name|xrcd
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|IBV_CMD_REG_MR_HAS_RESP_PARAMS
end_define

begin_function_decl
name|int
name|ibv_cmd_reg_mr
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|void
modifier|*
name|addr
parameter_list|,
name|size_t
name|length
parameter_list|,
name|uint64_t
name|hca_va
parameter_list|,
name|int
name|access
parameter_list|,
name|struct
name|ibv_mr
modifier|*
name|mr
parameter_list|,
name|struct
name|ibv_reg_mr
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_reg_mr_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_rereg_mr
parameter_list|(
name|struct
name|ibv_mr
modifier|*
name|mr
parameter_list|,
name|uint32_t
name|flags
parameter_list|,
name|void
modifier|*
name|addr
parameter_list|,
name|size_t
name|length
parameter_list|,
name|uint64_t
name|hca_va
parameter_list|,
name|int
name|access
parameter_list|,
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ibv_rereg_mr
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_sz
parameter_list|,
name|struct
name|ibv_rereg_mr_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_sz
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_dereg_mr
parameter_list|(
name|struct
name|ibv_mr
modifier|*
name|mr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_alloc_mw
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|enum
name|ibv_mw_type
name|type
parameter_list|,
name|struct
name|ibv_mw
modifier|*
name|mw
parameter_list|,
name|struct
name|ibv_alloc_mw
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_alloc_mw_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_dealloc_mw
parameter_list|(
name|struct
name|ibv_mw
modifier|*
name|mw
parameter_list|,
name|struct
name|ibv_dealloc_mw
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_create_cq
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|int
name|cqe
parameter_list|,
name|struct
name|ibv_comp_channel
modifier|*
name|channel
parameter_list|,
name|int
name|comp_vector
parameter_list|,
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|,
name|struct
name|ibv_create_cq
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_create_cq_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_create_cq_ex
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_cq_init_attr_ex
modifier|*
name|cq_attr
parameter_list|,
name|struct
name|ibv_cq_ex
modifier|*
name|cq
parameter_list|,
name|struct
name|ibv_create_cq_ex
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_core_size
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_create_cq_resp_ex
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_core_size
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_poll_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|,
name|int
name|ne
parameter_list|,
name|struct
name|ibv_wc
modifier|*
name|wc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_req_notify_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|,
name|int
name|solicited_only
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|IBV_CMD_RESIZE_CQ_HAS_RESP_PARAMS
end_define

begin_function_decl
name|int
name|ibv_cmd_resize_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|,
name|int
name|cqe
parameter_list|,
name|struct
name|ibv_resize_cq
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_resize_cq_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_destroy_cq
parameter_list|(
name|struct
name|ibv_cq
modifier|*
name|cq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_create_srq
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ibv_srq
modifier|*
name|srq
parameter_list|,
name|struct
name|ibv_srq_init_attr
modifier|*
name|attr
parameter_list|,
name|struct
name|ibv_create_srq
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_create_srq_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_create_srq_ex
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|verbs_srq
modifier|*
name|srq
parameter_list|,
name|int
name|vsrq_sz
parameter_list|,
name|struct
name|ibv_srq_init_attr_ex
modifier|*
name|attr_ex
parameter_list|,
name|struct
name|ibv_create_xsrq
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_create_srq_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_modify_srq
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|srq
parameter_list|,
name|struct
name|ibv_srq_attr
modifier|*
name|srq_attr
parameter_list|,
name|int
name|srq_attr_mask
parameter_list|,
name|struct
name|ibv_modify_srq
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_query_srq
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|srq
parameter_list|,
name|struct
name|ibv_srq_attr
modifier|*
name|srq_attr
parameter_list|,
name|struct
name|ibv_query_srq
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_destroy_srq
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|srq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_create_qp
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ibv_qp_init_attr
modifier|*
name|attr
parameter_list|,
name|struct
name|ibv_create_qp
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_create_qp_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_create_qp_ex
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|verbs_qp
modifier|*
name|qp
parameter_list|,
name|int
name|vqp_sz
parameter_list|,
name|struct
name|ibv_qp_init_attr_ex
modifier|*
name|attr_ex
parameter_list|,
name|struct
name|ibv_create_qp
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_create_qp_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_create_qp_ex2
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|verbs_qp
modifier|*
name|qp
parameter_list|,
name|int
name|vqp_sz
parameter_list|,
name|struct
name|ibv_qp_init_attr_ex
modifier|*
name|qp_attr
parameter_list|,
name|struct
name|ibv_create_qp_ex
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_core_size
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_create_qp_resp_ex
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_core_size
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_open_qp
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|verbs_qp
modifier|*
name|qp
parameter_list|,
name|int
name|vqp_sz
parameter_list|,
name|struct
name|ibv_qp_open_attr
modifier|*
name|attr
parameter_list|,
name|struct
name|ibv_open_qp
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_create_qp_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_query_qp
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ibv_qp_attr
modifier|*
name|qp_attr
parameter_list|,
name|int
name|attr_mask
parameter_list|,
name|struct
name|ibv_qp_init_attr
modifier|*
name|qp_init_attr
parameter_list|,
name|struct
name|ibv_query_qp
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_modify_qp
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ibv_qp_attr
modifier|*
name|attr
parameter_list|,
name|int
name|attr_mask
parameter_list|,
name|struct
name|ibv_modify_qp
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_modify_qp_ex
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ibv_qp_attr
modifier|*
name|attr
parameter_list|,
name|int
name|attr_mask
parameter_list|,
name|struct
name|ibv_modify_qp_ex
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_core_size
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_modify_qp_resp_ex
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_core_size
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_destroy_qp
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_post_send
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ibv_send_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ibv_send_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_post_recv
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|ibqp
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_post_srq_recv
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|srq
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
name|wr
parameter_list|,
name|struct
name|ibv_recv_wr
modifier|*
modifier|*
name|bad_wr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_create_ah
parameter_list|(
name|struct
name|ibv_pd
modifier|*
name|pd
parameter_list|,
name|struct
name|ibv_ah
modifier|*
name|ah
parameter_list|,
name|struct
name|ibv_ah_attr
modifier|*
name|attr
parameter_list|,
name|struct
name|ibv_create_ah_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_destroy_ah
parameter_list|(
name|struct
name|ibv_ah
modifier|*
name|ah
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_attach_mcast
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
specifier|const
name|union
name|ibv_gid
modifier|*
name|gid
parameter_list|,
name|uint16_t
name|lid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_detach_mcast
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
specifier|const
name|union
name|ibv_gid
modifier|*
name|gid
parameter_list|,
name|uint16_t
name|lid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ibv_flow
modifier|*
name|ibv_cmd_create_flow
parameter_list|(
name|struct
name|ibv_qp
modifier|*
name|qp
parameter_list|,
name|struct
name|ibv_flow_attr
modifier|*
name|flow_attr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_destroy_flow
parameter_list|(
name|struct
name|ibv_flow
modifier|*
name|flow_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_create_wq
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_wq_init_attr
modifier|*
name|wq_init_attr
parameter_list|,
name|struct
name|ibv_wq
modifier|*
name|wq
parameter_list|,
name|struct
name|ibv_create_wq
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_core_size
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_create_wq_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_core_size
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_modify_wq
parameter_list|(
name|struct
name|ibv_wq
modifier|*
name|wq
parameter_list|,
name|struct
name|ibv_wq_attr
modifier|*
name|attr
parameter_list|,
name|struct
name|ibv_modify_wq
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_core_size
parameter_list|,
name|size_t
name|cmd_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_destroy_wq
parameter_list|(
name|struct
name|ibv_wq
modifier|*
name|wq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_create_rwq_ind_table
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|struct
name|ibv_rwq_ind_table_init_attr
modifier|*
name|init_attr
parameter_list|,
name|struct
name|ibv_rwq_ind_table
modifier|*
name|rwq_ind_table
parameter_list|,
name|struct
name|ibv_create_rwq_ind_table
modifier|*
name|cmd
parameter_list|,
name|size_t
name|cmd_core_size
parameter_list|,
name|size_t
name|cmd_size
parameter_list|,
name|struct
name|ibv_create_rwq_ind_table_resp
modifier|*
name|resp
parameter_list|,
name|size_t
name|resp_core_size
parameter_list|,
name|size_t
name|resp_size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_cmd_destroy_rwq_ind_table
parameter_list|(
name|struct
name|ibv_rwq_ind_table
modifier|*
name|rwq_ind_table
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_dontfork_range
parameter_list|(
name|void
modifier|*
name|base
parameter_list|,
name|size_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_dofork_range
parameter_list|(
name|void
modifier|*
name|base
parameter_list|,
name|size_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * sysfs helper functions  */
end_comment

begin_function_decl
specifier|const
name|char
modifier|*
name|ibv_get_sysfs_path
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ibv_read_sysfs_file
parameter_list|(
specifier|const
name|char
modifier|*
name|dir
parameter_list|,
specifier|const
name|char
modifier|*
name|file
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|int
name|verbs_get_srq_num
parameter_list|(
name|struct
name|ibv_srq
modifier|*
name|srq
parameter_list|,
name|uint32_t
modifier|*
name|srq_num
parameter_list|)
block|{
name|struct
name|verbs_srq
modifier|*
name|vsrq
init|=
name|container_of
argument_list|(
name|srq
argument_list|,
expr|struct
name|verbs_srq
argument_list|,
name|srq
argument_list|)
decl_stmt|;
if|if
condition|(
name|vsrq
operator|->
name|comp_mask
operator|&
name|VERBS_SRQ_NUM
condition|)
block|{
operator|*
name|srq_num
operator|=
name|vsrq
operator|->
name|srq_num
expr_stmt|;
return|return
literal|0
return|;
block|}
return|return
name|ENOSYS
return|;
block|}
end_function

begin_function_decl
name|int
name|ibv_query_gid_type
parameter_list|(
name|struct
name|ibv_context
modifier|*
name|context
parameter_list|,
name|uint8_t
name|port_num
parameter_list|,
name|unsigned
name|int
name|index
parameter_list|,
name|enum
name|ibv_gid_type
modifier|*
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* INFINIBAND_DRIVER_H */
end_comment

end_unit

