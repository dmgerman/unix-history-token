begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Licensed under the OpenIB.org BSD license (FreeBSD Variant) - See COPYING.md  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NEIGH_H_
end_ifndef

begin_define
define|#
directive|define
name|_NEIGH_H_
end_define

begin_include
include|#
directive|include
file|<stddef.h>
end_include

begin_include
include|#
directive|include
file|<stdint.h>
end_include

begin_include
include|#
directive|include
file|"config.h"
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|HAVE_LIBNL1
end_ifdef

begin_include
include|#
directive|include
file|<netlink/object.h>
end_include

begin_include
include|#
directive|include
file|"nl1_compat.h"
end_include

begin_else
else|#
directive|else
end_else

begin_include
include|#
directive|include
file|<netlink/object-api.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_struct
struct|struct
name|get_neigh_handler
block|{
ifdef|#
directive|ifdef
name|HAVE_LIBNL1
name|struct
name|nl_handle
modifier|*
name|sock
decl_stmt|;
else|#
directive|else
name|struct
name|nl_sock
modifier|*
name|sock
decl_stmt|;
endif|#
directive|endif
name|struct
name|nl_cache
modifier|*
name|link_cache
decl_stmt|;
name|struct
name|nl_cache
modifier|*
name|neigh_cache
decl_stmt|;
name|struct
name|nl_cache
modifier|*
name|route_cache
decl_stmt|;
name|int32_t
name|oif
decl_stmt|;
name|int
name|vid
decl_stmt|;
name|struct
name|rtnl_neigh
modifier|*
name|filter_neigh
decl_stmt|;
name|struct
name|nl_addr
modifier|*
name|found_ll_addr
decl_stmt|;
name|struct
name|nl_addr
modifier|*
name|dst
decl_stmt|;
name|struct
name|nl_addr
modifier|*
name|src
decl_stmt|;
name|uint64_t
name|timeout
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|process_get_neigh
parameter_list|(
name|struct
name|get_neigh_handler
modifier|*
name|neigh_handler
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|neigh_free_resources
parameter_list|(
name|struct
name|get_neigh_handler
modifier|*
name|neigh_handler
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|neigh_set_vlan_id
parameter_list|(
name|struct
name|get_neigh_handler
modifier|*
name|neigh_handler
parameter_list|,
name|uint16_t
name|vid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint16_t
name|neigh_get_vlan_id_from_dev
parameter_list|(
name|struct
name|get_neigh_handler
modifier|*
name|neigh_handler
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|neigh_init_resources
parameter_list|(
name|struct
name|get_neigh_handler
modifier|*
name|neigh_handler
parameter_list|,
name|int
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|neigh_set_src
parameter_list|(
name|struct
name|get_neigh_handler
modifier|*
name|neigh_handler
parameter_list|,
name|int
name|family
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|neigh_set_oif
parameter_list|(
name|struct
name|get_neigh_handler
modifier|*
name|neigh_handler
parameter_list|,
name|int
name|oif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|neigh_set_dst
parameter_list|(
name|struct
name|get_neigh_handler
modifier|*
name|neigh_handler
parameter_list|,
name|int
name|family
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|neigh_get_oif_from_src
parameter_list|(
name|struct
name|get_neigh_handler
modifier|*
name|neigh_handler
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|neigh_get_ll
parameter_list|(
name|struct
name|get_neigh_handler
modifier|*
name|neigh_handler
parameter_list|,
name|void
modifier|*
name|addr_buf
parameter_list|,
name|int
name|addr_size
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

