begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2005 Topspin Communications.  All rights reserved.  * Copyright (c) 2005, 2006 Cisco Systems.  All rights reserved.  * Copyright (c) 2005 PathScale, Inc.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|KERN_ABI_H
end_ifndef

begin_define
define|#
directive|define
name|KERN_ABI_H
end_define

begin_include
include|#
directive|include
file|<infiniband/types.h>
end_include

begin_comment
comment|/*  * This file must be kept in sync with the kernel's version of  * drivers/infiniband/include/ib_user_verbs.h  */
end_comment

begin_comment
comment|/*  * The minimum and maximum kernel ABI that we can handle.  */
end_comment

begin_define
define|#
directive|define
name|IB_USER_VERBS_MIN_ABI_VERSION
value|3
end_define

begin_define
define|#
directive|define
name|IB_USER_VERBS_MAX_ABI_VERSION
value|6
end_define

begin_define
define|#
directive|define
name|IB_USER_VERBS_CMD_THRESHOLD
value|50
end_define

begin_enum
enum|enum
block|{
name|IB_USER_VERBS_CMD_GET_CONTEXT
block|,
name|IB_USER_VERBS_CMD_QUERY_DEVICE
block|,
name|IB_USER_VERBS_CMD_QUERY_PORT
block|,
name|IB_USER_VERBS_CMD_ALLOC_PD
block|,
name|IB_USER_VERBS_CMD_DEALLOC_PD
block|,
name|IB_USER_VERBS_CMD_CREATE_AH
block|,
name|IB_USER_VERBS_CMD_MODIFY_AH
block|,
name|IB_USER_VERBS_CMD_QUERY_AH
block|,
name|IB_USER_VERBS_CMD_DESTROY_AH
block|,
name|IB_USER_VERBS_CMD_REG_MR
block|,
name|IB_USER_VERBS_CMD_REG_SMR
block|,
name|IB_USER_VERBS_CMD_REREG_MR
block|,
name|IB_USER_VERBS_CMD_QUERY_MR
block|,
name|IB_USER_VERBS_CMD_DEREG_MR
block|,
name|IB_USER_VERBS_CMD_ALLOC_MW
block|,
name|IB_USER_VERBS_CMD_BIND_MW
block|,
name|IB_USER_VERBS_CMD_DEALLOC_MW
block|,
name|IB_USER_VERBS_CMD_CREATE_COMP_CHANNEL
block|,
name|IB_USER_VERBS_CMD_CREATE_CQ
block|,
name|IB_USER_VERBS_CMD_RESIZE_CQ
block|,
name|IB_USER_VERBS_CMD_DESTROY_CQ
block|,
name|IB_USER_VERBS_CMD_POLL_CQ
block|,
name|IB_USER_VERBS_CMD_PEEK_CQ
block|,
name|IB_USER_VERBS_CMD_REQ_NOTIFY_CQ
block|,
name|IB_USER_VERBS_CMD_CREATE_QP
block|,
name|IB_USER_VERBS_CMD_QUERY_QP
block|,
name|IB_USER_VERBS_CMD_MODIFY_QP
block|,
name|IB_USER_VERBS_CMD_DESTROY_QP
block|,
name|IB_USER_VERBS_CMD_POST_SEND
block|,
name|IB_USER_VERBS_CMD_POST_RECV
block|,
name|IB_USER_VERBS_CMD_ATTACH_MCAST
block|,
name|IB_USER_VERBS_CMD_DETACH_MCAST
block|,
name|IB_USER_VERBS_CMD_CREATE_SRQ
block|,
name|IB_USER_VERBS_CMD_MODIFY_SRQ
block|,
name|IB_USER_VERBS_CMD_QUERY_SRQ
block|,
name|IB_USER_VERBS_CMD_DESTROY_SRQ
block|,
name|IB_USER_VERBS_CMD_POST_SRQ_RECV
block|,
name|IB_USER_VERBS_CMD_OPEN_XRCD
block|,
name|IB_USER_VERBS_CMD_CLOSE_XRCD
block|,
name|IB_USER_VERBS_CMD_CREATE_XSRQ
block|,
name|IB_USER_VERBS_CMD_OPEN_QP
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|IB_USER_VERBS_CMD_COMMAND_MASK
value|0xff
end_define

begin_define
define|#
directive|define
name|IB_USER_VERBS_CMD_FLAGS_MASK
value|0xff000000u
end_define

begin_define
define|#
directive|define
name|IB_USER_VERBS_CMD_FLAGS_SHIFT
value|24
end_define

begin_define
define|#
directive|define
name|IB_USER_VERBS_CMD_FLAG_EXTENDED
value|0x80ul
end_define

begin_comment
comment|/* use this mask for creating extended commands */
end_comment

begin_define
define|#
directive|define
name|IB_USER_VERBS_CMD_EXTENDED_MASK
define|\
value|(IB_USER_VERBS_CMD_FLAG_EXTENDED<< \ 	 IB_USER_VERBS_CMD_FLAGS_SHIFT)
end_define

begin_enum
enum|enum
block|{
name|IB_USER_VERBS_CMD_QUERY_DEVICE_EX
init|=
name|IB_USER_VERBS_CMD_EXTENDED_MASK
operator||
name|IB_USER_VERBS_CMD_QUERY_DEVICE
block|,
name|IB_USER_VERBS_CMD_CREATE_QP_EX
init|=
name|IB_USER_VERBS_CMD_EXTENDED_MASK
operator||
name|IB_USER_VERBS_CMD_CREATE_QP
block|,
name|IB_USER_VERBS_CMD_CREATE_CQ_EX
init|=
name|IB_USER_VERBS_CMD_EXTENDED_MASK
operator||
name|IB_USER_VERBS_CMD_CREATE_CQ
block|,
name|IB_USER_VERBS_CMD_MODIFY_QP_EX
init|=
name|IB_USER_VERBS_CMD_EXTENDED_MASK
operator||
name|IB_USER_VERBS_CMD_MODIFY_QP
block|,
name|IB_USER_VERBS_CMD_CREATE_FLOW
init|=
name|IB_USER_VERBS_CMD_EXTENDED_MASK
operator|+
name|IB_USER_VERBS_CMD_THRESHOLD
block|,
name|IB_USER_VERBS_CMD_DESTROY_FLOW
block|,
name|IB_USER_VERBS_CMD_CREATE_WQ
block|,
name|IB_USER_VERBS_CMD_MODIFY_WQ
block|,
name|IB_USER_VERBS_CMD_DESTROY_WQ
block|,
name|IB_USER_VERBS_CMD_CREATE_RWQ_IND_TBL
block|,
name|IB_USER_VERBS_CMD_DESTROY_RWQ_IND_TBL
block|, }
enum|;
end_enum

begin_comment
comment|/*  * Make sure that all structs defined in this file remain laid out so  * that they pack the same way on 32-bit and 64-bit architectures (to  * avoid incompatibility between 32-bit userspace and 64-bit kernels).  * Specifically:  *  - Do not use pointer types -- pass pointers in __u64 instead.  *  - Make sure that any structure larger than 4 bytes is padded to a  *    multiple of 8 bytes.  Otherwise the structure size will be  *    different between 32-bit and 64-bit architectures.  */
end_comment

begin_struct
struct|struct
name|hdr
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|response_hdr
block|{
name|__u64
name|response
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ex_hdr
block|{
struct|struct
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
block|}
struct|;
struct|struct
block|{
name|__u64
name|response
decl_stmt|;
block|}
struct|;
struct|struct
block|{
name|__u16
name|provider_in_words
decl_stmt|;
name|__u16
name|provider_out_words
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_async_event
block|{
name|__u64
name|element
decl_stmt|;
name|__u32
name|event_type
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_comp_event
block|{
name|__u64
name|cq_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * All commands from userspace should start with a __u32 command field  * followed by __u16 in_words and out_words fields (which give the  * length of the command block and response buffer if any in 32-bit  * words).  The kernel driver will read these fields first and read  * the rest of the command struct based on these value.  */
end_comment

begin_struct
struct|struct
name|ibv_query_params
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_query_params_resp
block|{
name|__u32
name|num_cq_events
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_get_context
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_get_context_resp
block|{
name|__u32
name|async_fd
decl_stmt|;
name|__u32
name|num_comp_vectors
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_query_device
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_query_device_resp
block|{
name|__u64
name|fw_ver
decl_stmt|;
name|__be64
name|node_guid
decl_stmt|;
name|__be64
name|sys_image_guid
decl_stmt|;
name|__u64
name|max_mr_size
decl_stmt|;
name|__u64
name|page_size_cap
decl_stmt|;
name|__u32
name|vendor_id
decl_stmt|;
name|__u32
name|vendor_part_id
decl_stmt|;
name|__u32
name|hw_ver
decl_stmt|;
name|__u32
name|max_qp
decl_stmt|;
name|__u32
name|max_qp_wr
decl_stmt|;
name|__u32
name|device_cap_flags
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|max_sge_rd
decl_stmt|;
name|__u32
name|max_cq
decl_stmt|;
name|__u32
name|max_cqe
decl_stmt|;
name|__u32
name|max_mr
decl_stmt|;
name|__u32
name|max_pd
decl_stmt|;
name|__u32
name|max_qp_rd_atom
decl_stmt|;
name|__u32
name|max_ee_rd_atom
decl_stmt|;
name|__u32
name|max_res_rd_atom
decl_stmt|;
name|__u32
name|max_qp_init_rd_atom
decl_stmt|;
name|__u32
name|max_ee_init_rd_atom
decl_stmt|;
name|__u32
name|atomic_cap
decl_stmt|;
name|__u32
name|max_ee
decl_stmt|;
name|__u32
name|max_rdd
decl_stmt|;
name|__u32
name|max_mw
decl_stmt|;
name|__u32
name|max_raw_ipv6_qp
decl_stmt|;
name|__u32
name|max_raw_ethy_qp
decl_stmt|;
name|__u32
name|max_mcast_grp
decl_stmt|;
name|__u32
name|max_mcast_qp_attach
decl_stmt|;
name|__u32
name|max_total_mcast_qp_attach
decl_stmt|;
name|__u32
name|max_ah
decl_stmt|;
name|__u32
name|max_fmr
decl_stmt|;
name|__u32
name|max_map_per_fmr
decl_stmt|;
name|__u32
name|max_srq
decl_stmt|;
name|__u32
name|max_srq_wr
decl_stmt|;
name|__u32
name|max_srq_sge
decl_stmt|;
name|__u16
name|max_pkeys
decl_stmt|;
name|__u8
name|local_ca_ack_delay
decl_stmt|;
name|__u8
name|phys_port_cnt
decl_stmt|;
name|__u8
name|reserved
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_query_device_ex
block|{
name|struct
name|ex_hdr
name|hdr
decl_stmt|;
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_odp_caps_resp
block|{
name|__u64
name|general_caps
decl_stmt|;
struct|struct
block|{
name|__u32
name|rc_odp_caps
decl_stmt|;
name|__u32
name|uc_odp_caps
decl_stmt|;
name|__u32
name|ud_odp_caps
decl_stmt|;
block|}
name|per_transport_caps
struct|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_rss_caps_resp
block|{
name|__u32
name|supported_qpts
decl_stmt|;
name|__u32
name|max_rwq_indirection_tables
decl_stmt|;
name|__u32
name|max_rwq_indirection_table_size
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_query_device_resp_ex
block|{
name|struct
name|ibv_query_device_resp
name|base
decl_stmt|;
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|response_length
decl_stmt|;
name|struct
name|ibv_odp_caps_resp
name|odp_caps
decl_stmt|;
name|__u64
name|timestamp_mask
decl_stmt|;
name|__u64
name|hca_core_clock
decl_stmt|;
name|__u64
name|device_cap_flags_ex
decl_stmt|;
name|struct
name|ibv_rss_caps_resp
name|rss_caps
decl_stmt|;
name|__u32
name|max_wq_type_rq
decl_stmt|;
name|__u32
name|raw_packet_caps
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_query_port
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|reserved
index|[
literal|7
index|]
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_query_port_resp
block|{
name|__u32
name|port_cap_flags
decl_stmt|;
name|__u32
name|max_msg_sz
decl_stmt|;
name|__u32
name|bad_pkey_cntr
decl_stmt|;
name|__u32
name|qkey_viol_cntr
decl_stmt|;
name|__u32
name|gid_tbl_len
decl_stmt|;
name|__u16
name|pkey_tbl_len
decl_stmt|;
name|__u16
name|lid
decl_stmt|;
name|__u16
name|sm_lid
decl_stmt|;
name|__u8
name|state
decl_stmt|;
name|__u8
name|max_mtu
decl_stmt|;
name|__u8
name|active_mtu
decl_stmt|;
name|__u8
name|lmc
decl_stmt|;
name|__u8
name|max_vl_num
decl_stmt|;
name|__u8
name|sm_sl
decl_stmt|;
name|__u8
name|subnet_timeout
decl_stmt|;
name|__u8
name|init_type_reply
decl_stmt|;
name|__u8
name|active_width
decl_stmt|;
name|__u8
name|active_speed
decl_stmt|;
name|__u8
name|phys_state
decl_stmt|;
name|__u8
name|link_layer
decl_stmt|;
name|__u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_alloc_pd
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_alloc_pd_resp
block|{
name|__u32
name|pd_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_dealloc_pd
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_open_xrcd
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|fd
decl_stmt|;
name|__u32
name|oflags
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_open_xrcd_resp
block|{
name|__u32
name|xrcd_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_close_xrcd
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u32
name|xrcd_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_reg_mr
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u64
name|start
decl_stmt|;
name|__u64
name|length
decl_stmt|;
name|__u64
name|hca_va
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|access_flags
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_reg_mr_resp
block|{
name|__u32
name|mr_handle
decl_stmt|;
name|__u32
name|lkey
decl_stmt|;
name|__u32
name|rkey
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_rereg_mr
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|mr_handle
decl_stmt|;
name|__u32
name|flags
decl_stmt|;
name|__u64
name|start
decl_stmt|;
name|__u64
name|length
decl_stmt|;
name|__u64
name|hca_va
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|access_flags
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_rereg_mr_resp
block|{
name|__u32
name|lkey
decl_stmt|;
name|__u32
name|rkey
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_dereg_mr
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u32
name|mr_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_alloc_mw
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u8
name|mw_type
decl_stmt|;
name|__u8
name|reserved
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_alloc_mw_resp
block|{
name|__u32
name|mw_handle
decl_stmt|;
name|__u32
name|rkey
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_dealloc_mw
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u32
name|mw_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_comp_channel
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_comp_channel_resp
block|{
name|__u32
name|fd
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_cq
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|cqe
decl_stmt|;
name|__u32
name|comp_vector
decl_stmt|;
name|__s32
name|comp_channel
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_cq_resp
block|{
name|__u32
name|cq_handle
decl_stmt|;
name|__u32
name|cqe
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|ibv_create_cq_ex_kernel_flags
block|{
name|IBV_CREATE_CQ_EX_KERNEL_FLAG_COMPLETION_TIMESTAMP
init|=
literal|1
operator|<<
literal|0
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|ibv_create_cq_ex
block|{
name|struct
name|ex_hdr
name|hdr
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|cqe
decl_stmt|;
name|__u32
name|comp_vector
decl_stmt|;
name|__s32
name|comp_channel
decl_stmt|;
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|flags
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_cq_resp_ex
block|{
name|struct
name|ibv_create_cq_resp
name|base
decl_stmt|;
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|response_length
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_wc
block|{
name|__u64
name|wr_id
decl_stmt|;
name|__u32
name|status
decl_stmt|;
name|__u32
name|opcode
decl_stmt|;
name|__u32
name|vendor_err
decl_stmt|;
name|__u32
name|byte_len
decl_stmt|;
name|__be32
name|imm_data
decl_stmt|;
name|__u32
name|qp_num
decl_stmt|;
name|__u32
name|src_qp
decl_stmt|;
name|__u32
name|wc_flags
decl_stmt|;
name|__u16
name|pkey_index
decl_stmt|;
name|__u16
name|slid
decl_stmt|;
name|__u8
name|sl
decl_stmt|;
name|__u8
name|dlid_path_bits
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_poll_cq
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|cq_handle
decl_stmt|;
name|__u32
name|ne
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_poll_cq_resp
block|{
name|__u32
name|count
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|struct
name|ibv_kern_wc
name|wc
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_req_notify_cq
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u32
name|cq_handle
decl_stmt|;
name|__u32
name|solicited
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_resize_cq
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|cq_handle
decl_stmt|;
name|__u32
name|cqe
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_resize_cq_resp
block|{
name|__u32
name|cqe
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_destroy_cq
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|cq_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_destroy_cq_resp
block|{
name|__u32
name|comp_events_reported
decl_stmt|;
name|__u32
name|async_events_reported
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_global_route
block|{
name|__u8
name|dgid
index|[
literal|16
index|]
decl_stmt|;
name|__u32
name|flow_label
decl_stmt|;
name|__u8
name|sgid_index
decl_stmt|;
name|__u8
name|hop_limit
decl_stmt|;
name|__u8
name|traffic_class
decl_stmt|;
name|__u8
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_ah_attr
block|{
name|struct
name|ibv_kern_global_route
name|grh
decl_stmt|;
name|__u16
name|dlid
decl_stmt|;
name|__u8
name|sl
decl_stmt|;
name|__u8
name|src_path_bits
decl_stmt|;
name|__u8
name|static_rate
decl_stmt|;
name|__u8
name|is_global
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_qp_attr
block|{
name|__u32
name|qp_attr_mask
decl_stmt|;
name|__u32
name|qp_state
decl_stmt|;
name|__u32
name|cur_qp_state
decl_stmt|;
name|__u32
name|path_mtu
decl_stmt|;
name|__u32
name|path_mig_state
decl_stmt|;
name|__u32
name|qkey
decl_stmt|;
name|__u32
name|rq_psn
decl_stmt|;
name|__u32
name|sq_psn
decl_stmt|;
name|__u32
name|dest_qp_num
decl_stmt|;
name|__u32
name|qp_access_flags
decl_stmt|;
name|struct
name|ibv_kern_ah_attr
name|ah_attr
decl_stmt|;
name|struct
name|ibv_kern_ah_attr
name|alt_ah_attr
decl_stmt|;
comment|/* ib_qp_cap */
name|__u32
name|max_send_wr
decl_stmt|;
name|__u32
name|max_recv_wr
decl_stmt|;
name|__u32
name|max_send_sge
decl_stmt|;
name|__u32
name|max_recv_sge
decl_stmt|;
name|__u32
name|max_inline_data
decl_stmt|;
name|__u16
name|pkey_index
decl_stmt|;
name|__u16
name|alt_pkey_index
decl_stmt|;
name|__u8
name|en_sqd_async_notify
decl_stmt|;
name|__u8
name|sq_draining
decl_stmt|;
name|__u8
name|max_rd_atomic
decl_stmt|;
name|__u8
name|max_dest_rd_atomic
decl_stmt|;
name|__u8
name|min_rnr_timer
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|timeout
decl_stmt|;
name|__u8
name|retry_cnt
decl_stmt|;
name|__u8
name|rnr_retry
decl_stmt|;
name|__u8
name|alt_port_num
decl_stmt|;
name|__u8
name|alt_timeout
decl_stmt|;
name|__u8
name|reserved
index|[
literal|5
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|IBV_CREATE_QP_COMMON
define|\
value|__u64 user_handle;	\ 	__u32 pd_handle;	\ 	__u32 send_cq_handle;	\ 	__u32 recv_cq_handle;	\ 	__u32 srq_handle;	\ 	__u32 max_send_wr;	\ 	__u32 max_recv_wr;	\ 	__u32 max_send_sge;	\ 	__u32 max_recv_sge;	\ 	__u32 max_inline_data;	\ 	__u8  sq_sig_all;	\ 	__u8  qp_type;		\ 	__u8  is_srq;		\ 	__u8  reserved
end_define

begin_struct
struct|struct
name|ibv_create_qp
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|IBV_CREATE_QP_COMMON
expr_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_qp_common
block|{
name|IBV_CREATE_QP_COMMON
expr_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_open_qp
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|qpn
decl_stmt|;
name|__u8
name|qp_type
decl_stmt|;
name|__u8
name|reserved
index|[
literal|7
index|]
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* also used for open response */
end_comment

begin_struct
struct|struct
name|ibv_create_qp_resp
block|{
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|qpn
decl_stmt|;
name|__u32
name|max_send_wr
decl_stmt|;
name|__u32
name|max_recv_wr
decl_stmt|;
name|__u32
name|max_send_sge
decl_stmt|;
name|__u32
name|max_recv_sge
decl_stmt|;
name|__u32
name|max_inline_data
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|ibv_create_qp_ex_kernel_mask
block|{
name|IBV_CREATE_QP_EX_KERNEL_MASK_IND_TABLE
init|=
literal|1
operator|<<
literal|0
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|ibv_create_qp_ex
block|{
name|struct
name|ex_hdr
name|hdr
decl_stmt|;
name|struct
name|ibv_create_qp_common
name|base
decl_stmt|;
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|create_flags
decl_stmt|;
name|__u32
name|ind_tbl_handle
decl_stmt|;
name|__u32
name|reserved1
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_qp_resp_ex
block|{
name|struct
name|ibv_create_qp_resp
name|base
decl_stmt|;
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|response_length
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_qp_dest
block|{
name|__u8
name|dgid
index|[
literal|16
index|]
decl_stmt|;
name|__u32
name|flow_label
decl_stmt|;
name|__u16
name|dlid
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|__u8
name|sgid_index
decl_stmt|;
name|__u8
name|hop_limit
decl_stmt|;
name|__u8
name|traffic_class
decl_stmt|;
name|__u8
name|sl
decl_stmt|;
name|__u8
name|src_path_bits
decl_stmt|;
name|__u8
name|static_rate
decl_stmt|;
name|__u8
name|is_global
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_query_qp
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|attr_mask
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_query_qp_resp
block|{
name|struct
name|ibv_qp_dest
name|dest
decl_stmt|;
name|struct
name|ibv_qp_dest
name|alt_dest
decl_stmt|;
name|__u32
name|max_send_wr
decl_stmt|;
name|__u32
name|max_recv_wr
decl_stmt|;
name|__u32
name|max_send_sge
decl_stmt|;
name|__u32
name|max_recv_sge
decl_stmt|;
name|__u32
name|max_inline_data
decl_stmt|;
name|__u32
name|qkey
decl_stmt|;
name|__u32
name|rq_psn
decl_stmt|;
name|__u32
name|sq_psn
decl_stmt|;
name|__u32
name|dest_qp_num
decl_stmt|;
name|__u32
name|qp_access_flags
decl_stmt|;
name|__u16
name|pkey_index
decl_stmt|;
name|__u16
name|alt_pkey_index
decl_stmt|;
name|__u8
name|qp_state
decl_stmt|;
name|__u8
name|cur_qp_state
decl_stmt|;
name|__u8
name|path_mtu
decl_stmt|;
name|__u8
name|path_mig_state
decl_stmt|;
name|__u8
name|sq_draining
decl_stmt|;
name|__u8
name|max_rd_atomic
decl_stmt|;
name|__u8
name|max_dest_rd_atomic
decl_stmt|;
name|__u8
name|min_rnr_timer
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|timeout
decl_stmt|;
name|__u8
name|retry_cnt
decl_stmt|;
name|__u8
name|rnr_retry
decl_stmt|;
name|__u8
name|alt_port_num
decl_stmt|;
name|__u8
name|alt_timeout
decl_stmt|;
name|__u8
name|sq_sig_all
decl_stmt|;
name|__u8
name|reserved
index|[
literal|5
index|]
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_modify_qp_common
block|{
name|struct
name|ibv_qp_dest
name|dest
decl_stmt|;
name|struct
name|ibv_qp_dest
name|alt_dest
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|attr_mask
decl_stmt|;
name|__u32
name|qkey
decl_stmt|;
name|__u32
name|rq_psn
decl_stmt|;
name|__u32
name|sq_psn
decl_stmt|;
name|__u32
name|dest_qp_num
decl_stmt|;
name|__u32
name|qp_access_flags
decl_stmt|;
name|__u16
name|pkey_index
decl_stmt|;
name|__u16
name|alt_pkey_index
decl_stmt|;
name|__u8
name|qp_state
decl_stmt|;
name|__u8
name|cur_qp_state
decl_stmt|;
name|__u8
name|path_mtu
decl_stmt|;
name|__u8
name|path_mig_state
decl_stmt|;
name|__u8
name|en_sqd_async_notify
decl_stmt|;
name|__u8
name|max_rd_atomic
decl_stmt|;
name|__u8
name|max_dest_rd_atomic
decl_stmt|;
name|__u8
name|min_rnr_timer
decl_stmt|;
name|__u8
name|port_num
decl_stmt|;
name|__u8
name|timeout
decl_stmt|;
name|__u8
name|retry_cnt
decl_stmt|;
name|__u8
name|rnr_retry
decl_stmt|;
name|__u8
name|alt_port_num
decl_stmt|;
name|__u8
name|alt_timeout
decl_stmt|;
name|__u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_modify_qp
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|struct
name|ibv_modify_qp_common
name|base
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_modify_qp_ex
block|{
name|struct
name|ex_hdr
name|hdr
decl_stmt|;
name|struct
name|ibv_modify_qp_common
name|base
decl_stmt|;
name|__u32
name|rate_limit
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_modify_qp_resp_ex
block|{
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|response_length
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_destroy_qp
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_destroy_qp_resp
block|{
name|__u32
name|events_reported
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_send_wr
block|{
name|__u64
name|wr_id
decl_stmt|;
name|__u32
name|num_sge
decl_stmt|;
name|__u32
name|opcode
decl_stmt|;
name|__u32
name|send_flags
decl_stmt|;
name|__be32
name|imm_data
decl_stmt|;
union|union
block|{
struct|struct
block|{
name|__u64
name|remote_addr
decl_stmt|;
name|__u32
name|rkey
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
name|rdma
struct|;
struct|struct
block|{
name|__u64
name|remote_addr
decl_stmt|;
name|__u64
name|compare_add
decl_stmt|;
name|__u64
name|swap
decl_stmt|;
name|__u32
name|rkey
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
name|atomic
struct|;
struct|struct
block|{
name|__u32
name|ah
decl_stmt|;
name|__u32
name|remote_qpn
decl_stmt|;
name|__u32
name|remote_qkey
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
name|ud
struct|;
block|}
name|wr
union|;
union|union
block|{
struct|struct
block|{
name|__u32
name|remote_srqn
decl_stmt|;
block|}
name|xrc
struct|;
block|}
name|qp_type
union|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_eth_filter
block|{
name|__u8
name|dst_mac
index|[
literal|6
index|]
decl_stmt|;
name|__u8
name|src_mac
index|[
literal|6
index|]
decl_stmt|;
name|__u16
name|ether_type
decl_stmt|;
name|__u16
name|vlan_tag
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_spec_eth
block|{
name|__u32
name|type
decl_stmt|;
name|__u16
name|size
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|struct
name|ibv_kern_eth_filter
name|val
decl_stmt|;
name|struct
name|ibv_kern_eth_filter
name|mask
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_ipv4_filter
block|{
name|__u32
name|src_ip
decl_stmt|;
name|__u32
name|dst_ip
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_spec_ipv4
block|{
name|__u32
name|type
decl_stmt|;
name|__u16
name|size
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|struct
name|ibv_kern_ipv4_filter
name|val
decl_stmt|;
name|struct
name|ibv_kern_ipv4_filter
name|mask
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_ipv4_ext_filter
block|{
name|__u32
name|src_ip
decl_stmt|;
name|__u32
name|dst_ip
decl_stmt|;
name|__u8
name|proto
decl_stmt|;
name|__u8
name|tos
decl_stmt|;
name|__u8
name|ttl
decl_stmt|;
name|__u8
name|flags
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_spec_ipv4_ext
block|{
name|__u32
name|type
decl_stmt|;
name|__u16
name|size
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|struct
name|ibv_kern_ipv4_ext_filter
name|val
decl_stmt|;
name|struct
name|ibv_kern_ipv4_ext_filter
name|mask
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_ipv6_filter
block|{
name|__u8
name|src_ip
index|[
literal|16
index|]
decl_stmt|;
name|__u8
name|dst_ip
index|[
literal|16
index|]
decl_stmt|;
name|__u32
name|flow_label
decl_stmt|;
name|__u8
name|next_hdr
decl_stmt|;
name|__u8
name|traffic_class
decl_stmt|;
name|__u8
name|hop_limit
decl_stmt|;
name|__u8
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_spec_ipv6
block|{
name|__u32
name|type
decl_stmt|;
name|__u16
name|size
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|struct
name|ibv_kern_ipv6_filter
name|val
decl_stmt|;
name|struct
name|ibv_kern_ipv6_filter
name|mask
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_tcp_udp_filter
block|{
name|__u16
name|dst_port
decl_stmt|;
name|__u16
name|src_port
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_spec_tcp_udp
block|{
name|__u32
name|type
decl_stmt|;
name|__u16
name|size
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|struct
name|ibv_kern_tcp_udp_filter
name|val
decl_stmt|;
name|struct
name|ibv_kern_tcp_udp_filter
name|mask
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_spec_action_tag
block|{
name|__u32
name|type
decl_stmt|;
name|__u16
name|size
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|__u32
name|tag_id
decl_stmt|;
name|__u32
name|reserved1
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_tunnel_filter
block|{
name|__u32
name|tunnel_id
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_spec_tunnel
block|{
name|__u32
name|type
decl_stmt|;
name|__u16
name|size
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|struct
name|ibv_kern_tunnel_filter
name|val
decl_stmt|;
name|struct
name|ibv_kern_tunnel_filter
name|mask
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_spec_action_drop
block|{
name|__u32
name|type
decl_stmt|;
name|__u16
name|size
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_spec
block|{
union|union
block|{
struct|struct
block|{
name|__u32
name|type
decl_stmt|;
name|__u16
name|size
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
block|}
name|hdr
struct|;
name|struct
name|ibv_kern_spec_eth
name|eth
decl_stmt|;
name|struct
name|ibv_kern_spec_ipv4
name|ipv4
decl_stmt|;
name|struct
name|ibv_kern_spec_ipv4_ext
name|ipv4_ext
decl_stmt|;
name|struct
name|ibv_kern_spec_tcp_udp
name|tcp_udp
decl_stmt|;
name|struct
name|ibv_kern_spec_ipv6
name|ipv6
decl_stmt|;
name|struct
name|ibv_kern_spec_tunnel
name|tunnel
decl_stmt|;
name|struct
name|ibv_kern_spec_action_tag
name|flow_tag
decl_stmt|;
name|struct
name|ibv_kern_spec_action_drop
name|drop
decl_stmt|;
block|}
union|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_flow_attr
block|{
name|__u32
name|type
decl_stmt|;
name|__u16
name|size
decl_stmt|;
name|__u16
name|priority
decl_stmt|;
name|__u8
name|num_of_specs
decl_stmt|;
name|__u8
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|__u8
name|port
decl_stmt|;
name|__u32
name|flags
decl_stmt|;
comment|/* Following are the optional layers according to user request 	 * struct ibv_kern_flow_spec_xxx 	 * struct ibv_kern_flow_spec_yyy 	 */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_post_send
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|wr_count
decl_stmt|;
name|__u32
name|sge_count
decl_stmt|;
name|__u32
name|wqe_size
decl_stmt|;
name|struct
name|ibv_kern_send_wr
name|send_wr
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_post_send_resp
block|{
name|__u32
name|bad_wr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_kern_recv_wr
block|{
name|__u64
name|wr_id
decl_stmt|;
name|__u32
name|num_sge
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_post_recv
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|wr_count
decl_stmt|;
name|__u32
name|sge_count
decl_stmt|;
name|__u32
name|wqe_size
decl_stmt|;
name|struct
name|ibv_kern_recv_wr
name|recv_wr
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_post_recv_resp
block|{
name|__u32
name|bad_wr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_post_srq_recv
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|wr_count
decl_stmt|;
name|__u32
name|sge_count
decl_stmt|;
name|__u32
name|wqe_size
decl_stmt|;
name|struct
name|ibv_kern_recv_wr
name|recv_wr
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_post_srq_recv_resp
block|{
name|__u32
name|bad_wr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_ah
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|struct
name|ibv_kern_ah_attr
name|attr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_ah_resp
block|{
name|__u32
name|handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_destroy_ah
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u32
name|ah_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_attach_mcast
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u8
name|gid
index|[
literal|16
index|]
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u16
name|mlid
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_flow
block|{
name|struct
name|ex_hdr
name|hdr
decl_stmt|;
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|struct
name|ibv_kern_flow_attr
name|flow_attr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_flow_resp
block|{
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|flow_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_destroy_flow
block|{
name|struct
name|ex_hdr
name|hdr
decl_stmt|;
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|flow_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_detach_mcast
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u8
name|gid
index|[
literal|16
index|]
decl_stmt|;
name|__u32
name|qp_handle
decl_stmt|;
name|__u16
name|mlid
decl_stmt|;
name|__u16
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_srq
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|srq_limit
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_xsrq
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|srq_type
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|srq_limit
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|__u32
name|xrcd_handle
decl_stmt|;
name|__u32
name|cq_handle
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_srq_resp
block|{
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|srqn
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_modify_srq
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|attr_mask
decl_stmt|;
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|srq_limit
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_query_srq
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_query_srq_resp
block|{
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|srq_limit
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_destroy_srq
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u64
name|response
decl_stmt|;
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_destroy_srq_resp
block|{
name|__u32
name|events_reported
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Compatibility with older ABI versions  */
end_comment

begin_enum
enum|enum
block|{
name|IB_USER_VERBS_CMD_QUERY_PARAMS_V2
block|,
name|IB_USER_VERBS_CMD_GET_CONTEXT_V2
block|,
name|IB_USER_VERBS_CMD_QUERY_DEVICE_V2
block|,
name|IB_USER_VERBS_CMD_QUERY_PORT_V2
block|,
name|IB_USER_VERBS_CMD_QUERY_GID_V2
block|,
name|IB_USER_VERBS_CMD_QUERY_PKEY_V2
block|,
name|IB_USER_VERBS_CMD_ALLOC_PD_V2
block|,
name|IB_USER_VERBS_CMD_DEALLOC_PD_V2
block|,
name|IB_USER_VERBS_CMD_CREATE_AH_V2
block|,
name|IB_USER_VERBS_CMD_MODIFY_AH_V2
block|,
name|IB_USER_VERBS_CMD_QUERY_AH_V2
block|,
name|IB_USER_VERBS_CMD_DESTROY_AH_V2
block|,
name|IB_USER_VERBS_CMD_REG_MR_V2
block|,
name|IB_USER_VERBS_CMD_REG_SMR_V2
block|,
name|IB_USER_VERBS_CMD_REREG_MR_V2
block|,
name|IB_USER_VERBS_CMD_QUERY_MR_V2
block|,
name|IB_USER_VERBS_CMD_DEREG_MR_V2
block|,
name|IB_USER_VERBS_CMD_ALLOC_MW_V2
block|,
name|IB_USER_VERBS_CMD_BIND_MW_V2
block|,
name|IB_USER_VERBS_CMD_DEALLOC_MW_V2
block|,
name|IB_USER_VERBS_CMD_CREATE_CQ_V2
block|,
name|IB_USER_VERBS_CMD_RESIZE_CQ_V2
block|,
name|IB_USER_VERBS_CMD_DESTROY_CQ_V2
block|,
name|IB_USER_VERBS_CMD_POLL_CQ_V2
block|,
name|IB_USER_VERBS_CMD_PEEK_CQ_V2
block|,
name|IB_USER_VERBS_CMD_REQ_NOTIFY_CQ_V2
block|,
name|IB_USER_VERBS_CMD_CREATE_QP_V2
block|,
name|IB_USER_VERBS_CMD_QUERY_QP_V2
block|,
name|IB_USER_VERBS_CMD_MODIFY_QP_V2
block|,
name|IB_USER_VERBS_CMD_DESTROY_QP_V2
block|,
name|IB_USER_VERBS_CMD_POST_SEND_V2
block|,
name|IB_USER_VERBS_CMD_POST_RECV_V2
block|,
name|IB_USER_VERBS_CMD_ATTACH_MCAST_V2
block|,
name|IB_USER_VERBS_CMD_DETACH_MCAST_V2
block|,
name|IB_USER_VERBS_CMD_CREATE_SRQ_V2
block|,
name|IB_USER_VERBS_CMD_MODIFY_SRQ_V2
block|,
name|IB_USER_VERBS_CMD_QUERY_SRQ_V2
block|,
name|IB_USER_VERBS_CMD_DESTROY_SRQ_V2
block|,
name|IB_USER_VERBS_CMD_POST_SRQ_RECV_V2
block|,
comment|/* 	 * Set commands that didn't exist to -1 so our compile-time 	 * trick opcodes in IBV_INIT_CMD() doesn't break. 	 */
name|IB_USER_VERBS_CMD_CREATE_COMP_CHANNEL_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_OPEN_XRCD_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_CLOSE_XRCD_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_CREATE_XSRQ_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_OPEN_QP_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_CREATE_FLOW_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_DESTROY_FLOW_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_QUERY_DEVICE_EX_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_CREATE_QP_EX_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_CREATE_CQ_EX_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_CREATE_WQ_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_MODIFY_WQ_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_DESTROY_WQ_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_CREATE_RWQ_IND_TBL_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_DESTROY_RWQ_IND_TBL_V2
init|=
operator|-
literal|1
block|,
name|IB_USER_VERBS_CMD_MODIFY_QP_EX_V2
init|=
operator|-
literal|1
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|ibv_modify_srq_v3
block|{
name|__u32
name|command
decl_stmt|;
name|__u16
name|in_words
decl_stmt|;
name|__u16
name|out_words
decl_stmt|;
name|__u32
name|srq_handle
decl_stmt|;
name|__u32
name|attr_mask
decl_stmt|;
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|srq_limit
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
name|__u64
name|driver_data
index|[
literal|0
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_qp_resp_v3
block|{
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|qpn
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_qp_resp_v4
block|{
name|__u32
name|qp_handle
decl_stmt|;
name|__u32
name|qpn
decl_stmt|;
name|__u32
name|max_send_wr
decl_stmt|;
name|__u32
name|max_recv_wr
decl_stmt|;
name|__u32
name|max_send_sge
decl_stmt|;
name|__u32
name|max_recv_sge
decl_stmt|;
name|__u32
name|max_inline_data
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_srq_resp_v5
block|{
name|__u32
name|srq_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_wq
block|{
name|struct
name|ex_hdr
name|hdr
decl_stmt|;
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|wq_type
decl_stmt|;
name|__u64
name|user_handle
decl_stmt|;
name|__u32
name|pd_handle
decl_stmt|;
name|__u32
name|cq_handle
decl_stmt|;
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|create_flags
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_wq_resp
block|{
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|response_length
decl_stmt|;
name|__u32
name|wq_handle
decl_stmt|;
name|__u32
name|max_wr
decl_stmt|;
name|__u32
name|max_sge
decl_stmt|;
name|__u32
name|wqn
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_destroy_wq
block|{
name|struct
name|ex_hdr
name|hdr
decl_stmt|;
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|wq_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_destroy_wq_resp
block|{
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|response_length
decl_stmt|;
name|__u32
name|events_reported
decl_stmt|;
name|__u32
name|reserved
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_modify_wq
block|{
name|struct
name|ex_hdr
name|hdr
decl_stmt|;
name|__u32
name|attr_mask
decl_stmt|;
name|__u32
name|wq_handle
decl_stmt|;
name|__u32
name|wq_state
decl_stmt|;
name|__u32
name|curr_wq_state
decl_stmt|;
name|__u32
name|flags
decl_stmt|;
name|__u32
name|flags_mask
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_rwq_ind_table
block|{
name|struct
name|ex_hdr
name|hdr
decl_stmt|;
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|log_ind_tbl_size
decl_stmt|;
comment|/* Following are wq handles based on log_ind_tbl_size, must be 64 bytes aligned. 	 * __u32 wq_handle1 	 * __u32 wq_handle2 	 */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_create_rwq_ind_table_resp
block|{
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|response_length
decl_stmt|;
name|__u32
name|ind_tbl_handle
decl_stmt|;
name|__u32
name|ind_tbl_num
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ibv_destroy_rwq_ind_table
block|{
name|struct
name|ex_hdr
name|hdr
decl_stmt|;
name|__u32
name|comp_mask
decl_stmt|;
name|__u32
name|ind_tbl_handle
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* KERN_ABI_H */
end_comment

end_unit

