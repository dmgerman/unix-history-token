begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2011-2012 Intel Corporation.  All rights reserved.  *  * This software is available to you under a choice of one of two  * licenses.  You may choose to be licensed under the terms of the GNU  * General Public License (GPL) Version 2, available from the file  * COPYING in the main directory of this source tree, or the  * OpenIB.org BSD license below:  *  *     Redistribution and use in source and binary forms, with or  *     without modification, are permitted provided that the following  *     conditions are met:  *  *      - Redistributions of source code must retain the above  *        copyright notice, this list of conditions and the following  *        disclaimer.  *  *      - Redistributions in binary form must reproduce the above  *        copyright notice, this list of conditions and the following  *        disclaimer in the documentation and/or other materials  *        provided with the distribution.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN  * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  * SOFTWARE.  */
end_comment

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|RSOCKET_H
argument_list|)
end_if

begin_define
define|#
directive|define
name|RSOCKET_H
end_define

begin_include
include|#
directive|include
file|<infiniband/verbs.h>
end_include

begin_include
include|#
directive|include
file|<rdma/rdma_cma.h>
end_include

begin_include
include|#
directive|include
file|<sys/socket.h>
end_include

begin_include
include|#
directive|include
file|<errno.h>
end_include

begin_include
include|#
directive|include
file|<poll.h>
end_include

begin_include
include|#
directive|include
file|<sys/select.h>
end_include

begin_include
include|#
directive|include
file|<sys/mman.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
name|int
name|rsocket
parameter_list|(
name|int
name|domain
parameter_list|,
name|int
name|type
parameter_list|,
name|int
name|protocol
parameter_list|)
function_decl|;
name|int
name|rbind
parameter_list|(
name|int
name|socket
parameter_list|,
specifier|const
name|struct
name|sockaddr
modifier|*
name|addr
parameter_list|,
name|socklen_t
name|addrlen
parameter_list|)
function_decl|;
name|int
name|rlisten
parameter_list|(
name|int
name|socket
parameter_list|,
name|int
name|backlog
parameter_list|)
function_decl|;
name|int
name|raccept
parameter_list|(
name|int
name|socket
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|addr
parameter_list|,
name|socklen_t
modifier|*
name|addrlen
parameter_list|)
function_decl|;
name|int
name|rconnect
parameter_list|(
name|int
name|socket
parameter_list|,
specifier|const
name|struct
name|sockaddr
modifier|*
name|addr
parameter_list|,
name|socklen_t
name|addrlen
parameter_list|)
function_decl|;
name|int
name|rshutdown
parameter_list|(
name|int
name|socket
parameter_list|,
name|int
name|how
parameter_list|)
function_decl|;
name|int
name|rclose
parameter_list|(
name|int
name|socket
parameter_list|)
function_decl|;
name|ssize_t
name|rrecv
parameter_list|(
name|int
name|socket
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
name|ssize_t
name|rrecvfrom
parameter_list|(
name|int
name|socket
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|flags
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|src_addr
parameter_list|,
name|socklen_t
modifier|*
name|addrlen
parameter_list|)
function_decl|;
name|ssize_t
name|rrecvmsg
parameter_list|(
name|int
name|socket
parameter_list|,
name|struct
name|msghdr
modifier|*
name|msg
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
name|ssize_t
name|rsend
parameter_list|(
name|int
name|socket
parameter_list|,
specifier|const
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
name|ssize_t
name|rsendto
parameter_list|(
name|int
name|socket
parameter_list|,
specifier|const
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|flags
parameter_list|,
specifier|const
name|struct
name|sockaddr
modifier|*
name|dest_addr
parameter_list|,
name|socklen_t
name|addrlen
parameter_list|)
function_decl|;
name|ssize_t
name|rsendmsg
parameter_list|(
name|int
name|socket
parameter_list|,
specifier|const
name|struct
name|msghdr
modifier|*
name|msg
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
name|ssize_t
name|rread
parameter_list|(
name|int
name|socket
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|count
parameter_list|)
function_decl|;
name|ssize_t
name|rreadv
parameter_list|(
name|int
name|socket
parameter_list|,
specifier|const
name|struct
name|iovec
modifier|*
name|iov
parameter_list|,
name|int
name|iovcnt
parameter_list|)
function_decl|;
name|ssize_t
name|rwrite
parameter_list|(
name|int
name|socket
parameter_list|,
specifier|const
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|count
parameter_list|)
function_decl|;
name|ssize_t
name|rwritev
parameter_list|(
name|int
name|socket
parameter_list|,
specifier|const
name|struct
name|iovec
modifier|*
name|iov
parameter_list|,
name|int
name|iovcnt
parameter_list|)
function_decl|;
name|int
name|rpoll
parameter_list|(
name|struct
name|pollfd
modifier|*
name|fds
parameter_list|,
name|nfds_t
name|nfds
parameter_list|,
name|int
name|timeout
parameter_list|)
function_decl|;
name|int
name|rselect
parameter_list|(
name|int
name|nfds
parameter_list|,
name|fd_set
modifier|*
name|readfds
parameter_list|,
name|fd_set
modifier|*
name|writefds
parameter_list|,
name|fd_set
modifier|*
name|exceptfds
parameter_list|,
name|struct
name|timeval
modifier|*
name|timeout
parameter_list|)
function_decl|;
name|int
name|rgetpeername
parameter_list|(
name|int
name|socket
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|addr
parameter_list|,
name|socklen_t
modifier|*
name|addrlen
parameter_list|)
function_decl|;
name|int
name|rgetsockname
parameter_list|(
name|int
name|socket
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|addr
parameter_list|,
name|socklen_t
modifier|*
name|addrlen
parameter_list|)
function_decl|;
define|#
directive|define
name|SOL_RDMA
value|0x10000
enum|enum
block|{
name|RDMA_SQSIZE
block|,
name|RDMA_RQSIZE
block|,
name|RDMA_INLINE
block|,
name|RDMA_IOMAPSIZE
block|,
name|RDMA_ROUTE
block|}
enum|;
name|int
name|rsetsockopt
parameter_list|(
name|int
name|socket
parameter_list|,
name|int
name|level
parameter_list|,
name|int
name|optname
parameter_list|,
specifier|const
name|void
modifier|*
name|optval
parameter_list|,
name|socklen_t
name|optlen
parameter_list|)
function_decl|;
name|int
name|rgetsockopt
parameter_list|(
name|int
name|socket
parameter_list|,
name|int
name|level
parameter_list|,
name|int
name|optname
parameter_list|,
name|void
modifier|*
name|optval
parameter_list|,
name|socklen_t
modifier|*
name|optlen
parameter_list|)
function_decl|;
name|int
name|rfcntl
parameter_list|(
name|int
name|socket
parameter_list|,
name|int
name|cmd
parameter_list|,
modifier|...
comment|/* arg */
parameter_list|)
function_decl|;
name|off_t
name|riomap
parameter_list|(
name|int
name|socket
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|prot
parameter_list|,
name|int
name|flags
parameter_list|,
name|off_t
name|offset
parameter_list|)
function_decl|;
name|int
name|riounmap
parameter_list|(
name|int
name|socket
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
name|size_t
name|riowrite
parameter_list|(
name|int
name|socket
parameter_list|,
specifier|const
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|count
parameter_list|,
name|off_t
name|offset
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* RSOCKET_H */
end_comment

end_unit

