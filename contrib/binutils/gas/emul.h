begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* emul.h.  File format emulation routines    Copyright 2001 Free Software Foundation, Inc.     This file is part of GAS, the GNU Assembler.     GAS is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2, or (at your option)    any later version.     GAS is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License    along with GAS; see the file COPYING.  If not, write to the Free    Software Foundation, 59 Temple Place - Suite 330, Boston, MA    02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|EMUL_DEFS
end_ifndef

begin_define
define|#
directive|define
name|EMUL_DEFS
end_define

begin_struct
struct|struct
name|emulation
block|{
name|void
argument_list|(
argument|*match
argument_list|)
name|PARAMS
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|void
argument_list|(
argument|*init
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
expr_stmt|;
specifier|const
name|char
operator|*
operator|(
operator|*
name|bfd_name
operator|)
name|PARAMS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
expr_stmt|;
name|unsigned
name|local_labels_fb
range|:
literal|1
decl_stmt|;
name|unsigned
name|local_labels_dollar
range|:
literal|1
decl_stmt|;
name|unsigned
name|leading_underscore
range|:
literal|2
decl_stmt|;
name|unsigned
name|strip_underscore
range|:
literal|1
decl_stmt|;
name|unsigned
name|default_endian
range|:
literal|2
decl_stmt|;
specifier|const
name|char
modifier|*
name|fake_label_name
decl_stmt|;
specifier|const
name|struct
name|format_ops
modifier|*
name|format
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
name|COMMON
name|struct
name|emulation
modifier|*
name|this_emulation
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|char
modifier|*
name|default_emul_bfd_name
name|PARAMS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|common_emul_init
name|PARAMS
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

