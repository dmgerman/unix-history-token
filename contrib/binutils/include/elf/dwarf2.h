begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Declarations and definitions of codes relating to the DWARF2 and    DWARF3 symbolic debugging information formats.    Copyright (C) 1992, 1993, 1995, 1996, 1997, 1999, 2000, 2001, 2002,    2003, 2004, 2005, 2006 Free Software Foundation, Inc.     Written by Gary Funck (gary@intrepid.com) The Ada Joint Program    Office (AJPO), Florida State University and Silicon Graphics Inc.    provided support for this effort -- June 21, 1995.     Derived from the DWARF 1 implementation written by Ron Guilmette    (rfg@netcom.com), November 1990.     This file is part of GCC.     GCC is free software; you can redistribute it and/or modify it under    the terms of the GNU General Public License as published by the Free    Software Foundation; either version 2, or (at your option) any later    version.     GCC is distributed in the hope that it will be useful, but WITHOUT    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY    or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public    License for more details.     You should have received a copy of the GNU General Public License    along with GCC; see the file COPYING.  If not, write to the Free    Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA    02110-1301, USA.  */
end_comment

begin_comment
comment|/* This file is derived from the DWARF specification (a public document)    Revision 2.0.0 (July 27, 1993) developed by the UNIX International    Programming Languages Special Interest Group (UI/PLSIG) and distributed    by UNIX International.  Copies of this specification are available from    UNIX International, 20 Waterview Boulevard, Parsippany, NJ, 07054.     This file also now contains definitions from the DWARF 3 specification.  */
end_comment

begin_comment
comment|/* This file is shared between GCC and GDB, and should not contain    prototypes.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_ELF_DWARF2_H
end_ifndef

begin_define
define|#
directive|define
name|_ELF_DWARF2_H
end_define

begin_comment
comment|/* Structure found in the .debug_line section.  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|char
name|li_length
index|[
literal|4
index|]
decl_stmt|;
name|unsigned
name|char
name|li_version
index|[
literal|2
index|]
decl_stmt|;
name|unsigned
name|char
name|li_prologue_length
index|[
literal|4
index|]
decl_stmt|;
name|unsigned
name|char
name|li_min_insn_length
index|[
literal|1
index|]
decl_stmt|;
name|unsigned
name|char
name|li_default_is_stmt
index|[
literal|1
index|]
decl_stmt|;
name|unsigned
name|char
name|li_line_base
index|[
literal|1
index|]
decl_stmt|;
name|unsigned
name|char
name|li_line_range
index|[
literal|1
index|]
decl_stmt|;
name|unsigned
name|char
name|li_opcode_base
index|[
literal|1
index|]
decl_stmt|;
block|}
name|DWARF2_External_LineInfo
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|long
name|li_length
decl_stmt|;
name|unsigned
name|short
name|li_version
decl_stmt|;
name|unsigned
name|int
name|li_prologue_length
decl_stmt|;
name|unsigned
name|char
name|li_min_insn_length
decl_stmt|;
name|unsigned
name|char
name|li_default_is_stmt
decl_stmt|;
name|int
name|li_line_base
decl_stmt|;
name|unsigned
name|char
name|li_line_range
decl_stmt|;
name|unsigned
name|char
name|li_opcode_base
decl_stmt|;
block|}
name|DWARF2_Internal_LineInfo
typedef|;
end_typedef

begin_comment
comment|/* Structure found in .debug_pubnames section.  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|char
name|pn_length
index|[
literal|4
index|]
decl_stmt|;
name|unsigned
name|char
name|pn_version
index|[
literal|2
index|]
decl_stmt|;
name|unsigned
name|char
name|pn_offset
index|[
literal|4
index|]
decl_stmt|;
name|unsigned
name|char
name|pn_size
index|[
literal|4
index|]
decl_stmt|;
block|}
name|DWARF2_External_PubNames
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|long
name|pn_length
decl_stmt|;
name|unsigned
name|short
name|pn_version
decl_stmt|;
name|unsigned
name|long
name|pn_offset
decl_stmt|;
name|unsigned
name|long
name|pn_size
decl_stmt|;
block|}
name|DWARF2_Internal_PubNames
typedef|;
end_typedef

begin_comment
comment|/* Structure found in .debug_info section.  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|char
name|cu_length
index|[
literal|4
index|]
decl_stmt|;
name|unsigned
name|char
name|cu_version
index|[
literal|2
index|]
decl_stmt|;
name|unsigned
name|char
name|cu_abbrev_offset
index|[
literal|4
index|]
decl_stmt|;
name|unsigned
name|char
name|cu_pointer_size
index|[
literal|1
index|]
decl_stmt|;
block|}
name|DWARF2_External_CompUnit
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|long
name|cu_length
decl_stmt|;
name|unsigned
name|short
name|cu_version
decl_stmt|;
name|unsigned
name|long
name|cu_abbrev_offset
decl_stmt|;
name|unsigned
name|char
name|cu_pointer_size
decl_stmt|;
block|}
name|DWARF2_Internal_CompUnit
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|char
name|ar_length
index|[
literal|4
index|]
decl_stmt|;
name|unsigned
name|char
name|ar_version
index|[
literal|2
index|]
decl_stmt|;
name|unsigned
name|char
name|ar_info_offset
index|[
literal|4
index|]
decl_stmt|;
name|unsigned
name|char
name|ar_pointer_size
index|[
literal|1
index|]
decl_stmt|;
name|unsigned
name|char
name|ar_segment_size
index|[
literal|1
index|]
decl_stmt|;
block|}
name|DWARF2_External_ARange
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|long
name|ar_length
decl_stmt|;
name|unsigned
name|short
name|ar_version
decl_stmt|;
name|unsigned
name|long
name|ar_info_offset
decl_stmt|;
name|unsigned
name|char
name|ar_pointer_size
decl_stmt|;
name|unsigned
name|char
name|ar_segment_size
decl_stmt|;
block|}
name|DWARF2_Internal_ARange
typedef|;
end_typedef

begin_comment
comment|/* Tag names and codes.  */
end_comment

begin_enum
enum|enum
name|dwarf_tag
block|{
name|DW_TAG_padding
init|=
literal|0x00
block|,
name|DW_TAG_array_type
init|=
literal|0x01
block|,
name|DW_TAG_class_type
init|=
literal|0x02
block|,
name|DW_TAG_entry_point
init|=
literal|0x03
block|,
name|DW_TAG_enumeration_type
init|=
literal|0x04
block|,
name|DW_TAG_formal_parameter
init|=
literal|0x05
block|,
name|DW_TAG_imported_declaration
init|=
literal|0x08
block|,
name|DW_TAG_label
init|=
literal|0x0a
block|,
name|DW_TAG_lexical_block
init|=
literal|0x0b
block|,
name|DW_TAG_member
init|=
literal|0x0d
block|,
name|DW_TAG_pointer_type
init|=
literal|0x0f
block|,
name|DW_TAG_reference_type
init|=
literal|0x10
block|,
name|DW_TAG_compile_unit
init|=
literal|0x11
block|,
name|DW_TAG_string_type
init|=
literal|0x12
block|,
name|DW_TAG_structure_type
init|=
literal|0x13
block|,
name|DW_TAG_subroutine_type
init|=
literal|0x15
block|,
name|DW_TAG_typedef
init|=
literal|0x16
block|,
name|DW_TAG_union_type
init|=
literal|0x17
block|,
name|DW_TAG_unspecified_parameters
init|=
literal|0x18
block|,
name|DW_TAG_variant
init|=
literal|0x19
block|,
name|DW_TAG_common_block
init|=
literal|0x1a
block|,
name|DW_TAG_common_inclusion
init|=
literal|0x1b
block|,
name|DW_TAG_inheritance
init|=
literal|0x1c
block|,
name|DW_TAG_inlined_subroutine
init|=
literal|0x1d
block|,
name|DW_TAG_module
init|=
literal|0x1e
block|,
name|DW_TAG_ptr_to_member_type
init|=
literal|0x1f
block|,
name|DW_TAG_set_type
init|=
literal|0x20
block|,
name|DW_TAG_subrange_type
init|=
literal|0x21
block|,
name|DW_TAG_with_stmt
init|=
literal|0x22
block|,
name|DW_TAG_access_declaration
init|=
literal|0x23
block|,
name|DW_TAG_base_type
init|=
literal|0x24
block|,
name|DW_TAG_catch_block
init|=
literal|0x25
block|,
name|DW_TAG_const_type
init|=
literal|0x26
block|,
name|DW_TAG_constant
init|=
literal|0x27
block|,
name|DW_TAG_enumerator
init|=
literal|0x28
block|,
name|DW_TAG_file_type
init|=
literal|0x29
block|,
name|DW_TAG_friend
init|=
literal|0x2a
block|,
name|DW_TAG_namelist
init|=
literal|0x2b
block|,
name|DW_TAG_namelist_item
init|=
literal|0x2c
block|,
name|DW_TAG_packed_type
init|=
literal|0x2d
block|,
name|DW_TAG_subprogram
init|=
literal|0x2e
block|,
name|DW_TAG_template_type_param
init|=
literal|0x2f
block|,
name|DW_TAG_template_value_param
init|=
literal|0x30
block|,
name|DW_TAG_thrown_type
init|=
literal|0x31
block|,
name|DW_TAG_try_block
init|=
literal|0x32
block|,
name|DW_TAG_variant_part
init|=
literal|0x33
block|,
name|DW_TAG_variable
init|=
literal|0x34
block|,
name|DW_TAG_volatile_type
init|=
literal|0x35
block|,
comment|/* DWARF 3.  */
name|DW_TAG_dwarf_procedure
init|=
literal|0x36
block|,
name|DW_TAG_restrict_type
init|=
literal|0x37
block|,
name|DW_TAG_interface_type
init|=
literal|0x38
block|,
name|DW_TAG_namespace
init|=
literal|0x39
block|,
name|DW_TAG_imported_module
init|=
literal|0x3a
block|,
name|DW_TAG_unspecified_type
init|=
literal|0x3b
block|,
name|DW_TAG_partial_unit
init|=
literal|0x3c
block|,
name|DW_TAG_imported_unit
init|=
literal|0x3d
block|,
name|DW_TAG_condition
init|=
literal|0x3f
block|,
name|DW_TAG_shared_type
init|=
literal|0x40
block|,
comment|/* SGI/MIPS Extensions.  */
name|DW_TAG_MIPS_loop
init|=
literal|0x4081
block|,
comment|/* HP extensions.  See: ftp://ftp.hp.com/pub/lang/tools/WDB/wdb-4.0.tar.gz .  */
name|DW_TAG_HP_array_descriptor
init|=
literal|0x4090
block|,
comment|/* GNU extensions.  */
name|DW_TAG_format_label
init|=
literal|0x4101
block|,
comment|/* For FORTRAN 77 and Fortran 90.  */
name|DW_TAG_function_template
init|=
literal|0x4102
block|,
comment|/* For C++.  */
name|DW_TAG_class_template
init|=
literal|0x4103
block|,
comment|/* For C++.  */
name|DW_TAG_GNU_BINCL
init|=
literal|0x4104
block|,
name|DW_TAG_GNU_EINCL
init|=
literal|0x4105
block|,
comment|/* Extensions for UPC.  See: http://upc.gwu.edu/~upc.  */
name|DW_TAG_upc_shared_type
init|=
literal|0x8765
block|,
name|DW_TAG_upc_strict_type
init|=
literal|0x8766
block|,
name|DW_TAG_upc_relaxed_type
init|=
literal|0x8767
block|,
comment|/* PGI (STMicroelectronics) extensions.  No documentation available.  */
name|DW_TAG_PGI_kanji_type
init|=
literal|0xA000
block|,
name|DW_TAG_PGI_interface_block
init|=
literal|0xA020
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|DW_TAG_lo_user
value|0x4080
end_define

begin_define
define|#
directive|define
name|DW_TAG_hi_user
value|0xffff
end_define

begin_comment
comment|/* Flag that tells whether entry has a child or not.  */
end_comment

begin_define
define|#
directive|define
name|DW_children_no
value|0
end_define

begin_define
define|#
directive|define
name|DW_children_yes
value|1
end_define

begin_comment
comment|/* Form names and codes.  */
end_comment

begin_enum
enum|enum
name|dwarf_form
block|{
name|DW_FORM_addr
init|=
literal|0x01
block|,
name|DW_FORM_block2
init|=
literal|0x03
block|,
name|DW_FORM_block4
init|=
literal|0x04
block|,
name|DW_FORM_data2
init|=
literal|0x05
block|,
name|DW_FORM_data4
init|=
literal|0x06
block|,
name|DW_FORM_data8
init|=
literal|0x07
block|,
name|DW_FORM_string
init|=
literal|0x08
block|,
name|DW_FORM_block
init|=
literal|0x09
block|,
name|DW_FORM_block1
init|=
literal|0x0a
block|,
name|DW_FORM_data1
init|=
literal|0x0b
block|,
name|DW_FORM_flag
init|=
literal|0x0c
block|,
name|DW_FORM_sdata
init|=
literal|0x0d
block|,
name|DW_FORM_strp
init|=
literal|0x0e
block|,
name|DW_FORM_udata
init|=
literal|0x0f
block|,
name|DW_FORM_ref_addr
init|=
literal|0x10
block|,
name|DW_FORM_ref1
init|=
literal|0x11
block|,
name|DW_FORM_ref2
init|=
literal|0x12
block|,
name|DW_FORM_ref4
init|=
literal|0x13
block|,
name|DW_FORM_ref8
init|=
literal|0x14
block|,
name|DW_FORM_ref_udata
init|=
literal|0x15
block|,
name|DW_FORM_indirect
init|=
literal|0x16
block|}
enum|;
end_enum

begin_comment
comment|/* Attribute names and codes.  */
end_comment

begin_enum
enum|enum
name|dwarf_attribute
block|{
name|DW_AT_sibling
init|=
literal|0x01
block|,
name|DW_AT_location
init|=
literal|0x02
block|,
name|DW_AT_name
init|=
literal|0x03
block|,
name|DW_AT_ordering
init|=
literal|0x09
block|,
name|DW_AT_subscr_data
init|=
literal|0x0a
block|,
name|DW_AT_byte_size
init|=
literal|0x0b
block|,
name|DW_AT_bit_offset
init|=
literal|0x0c
block|,
name|DW_AT_bit_size
init|=
literal|0x0d
block|,
name|DW_AT_element_list
init|=
literal|0x0f
block|,
name|DW_AT_stmt_list
init|=
literal|0x10
block|,
name|DW_AT_low_pc
init|=
literal|0x11
block|,
name|DW_AT_high_pc
init|=
literal|0x12
block|,
name|DW_AT_language
init|=
literal|0x13
block|,
name|DW_AT_member
init|=
literal|0x14
block|,
name|DW_AT_discr
init|=
literal|0x15
block|,
name|DW_AT_discr_value
init|=
literal|0x16
block|,
name|DW_AT_visibility
init|=
literal|0x17
block|,
name|DW_AT_import
init|=
literal|0x18
block|,
name|DW_AT_string_length
init|=
literal|0x19
block|,
name|DW_AT_common_reference
init|=
literal|0x1a
block|,
name|DW_AT_comp_dir
init|=
literal|0x1b
block|,
name|DW_AT_const_value
init|=
literal|0x1c
block|,
name|DW_AT_containing_type
init|=
literal|0x1d
block|,
name|DW_AT_default_value
init|=
literal|0x1e
block|,
name|DW_AT_inline
init|=
literal|0x20
block|,
name|DW_AT_is_optional
init|=
literal|0x21
block|,
name|DW_AT_lower_bound
init|=
literal|0x22
block|,
name|DW_AT_producer
init|=
literal|0x25
block|,
name|DW_AT_prototyped
init|=
literal|0x27
block|,
name|DW_AT_return_addr
init|=
literal|0x2a
block|,
name|DW_AT_start_scope
init|=
literal|0x2c
block|,
name|DW_AT_stride_size
init|=
literal|0x2e
block|,
name|DW_AT_upper_bound
init|=
literal|0x2f
block|,
name|DW_AT_abstract_origin
init|=
literal|0x31
block|,
name|DW_AT_accessibility
init|=
literal|0x32
block|,
name|DW_AT_address_class
init|=
literal|0x33
block|,
name|DW_AT_artificial
init|=
literal|0x34
block|,
name|DW_AT_base_types
init|=
literal|0x35
block|,
name|DW_AT_calling_convention
init|=
literal|0x36
block|,
name|DW_AT_count
init|=
literal|0x37
block|,
name|DW_AT_data_member_location
init|=
literal|0x38
block|,
name|DW_AT_decl_column
init|=
literal|0x39
block|,
name|DW_AT_decl_file
init|=
literal|0x3a
block|,
name|DW_AT_decl_line
init|=
literal|0x3b
block|,
name|DW_AT_declaration
init|=
literal|0x3c
block|,
name|DW_AT_discr_list
init|=
literal|0x3d
block|,
name|DW_AT_encoding
init|=
literal|0x3e
block|,
name|DW_AT_external
init|=
literal|0x3f
block|,
name|DW_AT_frame_base
init|=
literal|0x40
block|,
name|DW_AT_friend
init|=
literal|0x41
block|,
name|DW_AT_identifier_case
init|=
literal|0x42
block|,
name|DW_AT_macro_info
init|=
literal|0x43
block|,
name|DW_AT_namelist_items
init|=
literal|0x44
block|,
name|DW_AT_priority
init|=
literal|0x45
block|,
name|DW_AT_segment
init|=
literal|0x46
block|,
name|DW_AT_specification
init|=
literal|0x47
block|,
name|DW_AT_static_link
init|=
literal|0x48
block|,
name|DW_AT_type
init|=
literal|0x49
block|,
name|DW_AT_use_location
init|=
literal|0x4a
block|,
name|DW_AT_variable_parameter
init|=
literal|0x4b
block|,
name|DW_AT_virtuality
init|=
literal|0x4c
block|,
name|DW_AT_vtable_elem_location
init|=
literal|0x4d
block|,
comment|/* DWARF 3 values.  */
name|DW_AT_allocated
init|=
literal|0x4e
block|,
name|DW_AT_associated
init|=
literal|0x4f
block|,
name|DW_AT_data_location
init|=
literal|0x50
block|,
name|DW_AT_stride
init|=
literal|0x51
block|,
name|DW_AT_entry_pc
init|=
literal|0x52
block|,
name|DW_AT_use_UTF8
init|=
literal|0x53
block|,
name|DW_AT_extension
init|=
literal|0x54
block|,
name|DW_AT_ranges
init|=
literal|0x55
block|,
name|DW_AT_trampoline
init|=
literal|0x56
block|,
name|DW_AT_call_column
init|=
literal|0x57
block|,
name|DW_AT_call_file
init|=
literal|0x58
block|,
name|DW_AT_call_line
init|=
literal|0x59
block|,
name|DW_AT_description
init|=
literal|0x5a
block|,
name|DW_AT_binary_scale
init|=
literal|0x5b
block|,
name|DW_AT_decimal_scale
init|=
literal|0x5c
block|,
name|DW_AT_small
init|=
literal|0x5d
block|,
name|DW_AT_decimal_sign
init|=
literal|0x5e
block|,
name|DW_AT_digit_count
init|=
literal|0x5f
block|,
name|DW_AT_picture_string
init|=
literal|0x60
block|,
name|DW_AT_mutable
init|=
literal|0x61
block|,
name|DW_AT_threads_scaled
init|=
literal|0x62
block|,
name|DW_AT_explicit
init|=
literal|0x63
block|,
name|DW_AT_object_pointer
init|=
literal|0x64
block|,
name|DW_AT_endianity
init|=
literal|0x65
block|,
name|DW_AT_elemental
init|=
literal|0x66
block|,
name|DW_AT_pure
init|=
literal|0x67
block|,
name|DW_AT_recursive
init|=
literal|0x68
block|,
comment|/* SGI/MIPS extensions.  */
name|DW_AT_MIPS_fde
init|=
literal|0x2001
block|,
name|DW_AT_MIPS_loop_begin
init|=
literal|0x2002
block|,
name|DW_AT_MIPS_tail_loop_begin
init|=
literal|0x2003
block|,
name|DW_AT_MIPS_epilog_begin
init|=
literal|0x2004
block|,
name|DW_AT_MIPS_loop_unroll_factor
init|=
literal|0x2005
block|,
name|DW_AT_MIPS_software_pipeline_depth
init|=
literal|0x2006
block|,
name|DW_AT_MIPS_linkage_name
init|=
literal|0x2007
block|,
name|DW_AT_MIPS_stride
init|=
literal|0x2008
block|,
name|DW_AT_MIPS_abstract_name
init|=
literal|0x2009
block|,
name|DW_AT_MIPS_clone_origin
init|=
literal|0x200a
block|,
name|DW_AT_MIPS_has_inlines
init|=
literal|0x200b
block|,
comment|/* HP extensions.  */
name|DW_AT_HP_block_index
init|=
literal|0x2000
block|,
name|DW_AT_HP_unmodifiable
init|=
literal|0x2001
block|,
comment|/* Same as DW_AT_MIPS_fde.  */
name|DW_AT_HP_actuals_stmt_list
init|=
literal|0x2010
block|,
name|DW_AT_HP_proc_per_section
init|=
literal|0x2011
block|,
name|DW_AT_HP_raw_data_ptr
init|=
literal|0x2012
block|,
name|DW_AT_HP_pass_by_reference
init|=
literal|0x2013
block|,
name|DW_AT_HP_opt_level
init|=
literal|0x2014
block|,
name|DW_AT_HP_prof_version_id
init|=
literal|0x2015
block|,
name|DW_AT_HP_opt_flags
init|=
literal|0x2016
block|,
name|DW_AT_HP_cold_region_low_pc
init|=
literal|0x2017
block|,
name|DW_AT_HP_cold_region_high_pc
init|=
literal|0x2018
block|,
name|DW_AT_HP_all_variables_modifiable
init|=
literal|0x2019
block|,
name|DW_AT_HP_linkage_name
init|=
literal|0x201a
block|,
name|DW_AT_HP_prof_flags
init|=
literal|0x201b
block|,
comment|/* In comp unit of procs_info for -g.  */
comment|/* GNU extensions.  */
name|DW_AT_sf_names
init|=
literal|0x2101
block|,
name|DW_AT_src_info
init|=
literal|0x2102
block|,
name|DW_AT_mac_info
init|=
literal|0x2103
block|,
name|DW_AT_src_coords
init|=
literal|0x2104
block|,
name|DW_AT_body_begin
init|=
literal|0x2105
block|,
name|DW_AT_body_end
init|=
literal|0x2106
block|,
name|DW_AT_GNU_vector
init|=
literal|0x2107
block|,
comment|/* VMS extensions.  */
name|DW_AT_VMS_rtnbeg_pd_address
init|=
literal|0x2201
block|,
comment|/* UPC extension.  */
name|DW_AT_upc_threads_scaled
init|=
literal|0x3210
block|,
comment|/* PGI (STMicroelectronics) extensions.  */
name|DW_AT_PGI_lbase
init|=
literal|0x3a00
block|,
name|DW_AT_PGI_soffset
init|=
literal|0x3a01
block|,
name|DW_AT_PGI_lstride
init|=
literal|0x3a02
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|DW_AT_lo_user
value|0x2000
end_define

begin_comment
comment|/* Implementation-defined range start.  */
end_comment

begin_define
define|#
directive|define
name|DW_AT_hi_user
value|0x3ff0
end_define

begin_comment
comment|/* Implementation-defined range end.  */
end_comment

begin_comment
comment|/* Location atom names and codes.  */
end_comment

begin_enum
enum|enum
name|dwarf_location_atom
block|{
name|DW_OP_addr
init|=
literal|0x03
block|,
name|DW_OP_deref
init|=
literal|0x06
block|,
name|DW_OP_const1u
init|=
literal|0x08
block|,
name|DW_OP_const1s
init|=
literal|0x09
block|,
name|DW_OP_const2u
init|=
literal|0x0a
block|,
name|DW_OP_const2s
init|=
literal|0x0b
block|,
name|DW_OP_const4u
init|=
literal|0x0c
block|,
name|DW_OP_const4s
init|=
literal|0x0d
block|,
name|DW_OP_const8u
init|=
literal|0x0e
block|,
name|DW_OP_const8s
init|=
literal|0x0f
block|,
name|DW_OP_constu
init|=
literal|0x10
block|,
name|DW_OP_consts
init|=
literal|0x11
block|,
name|DW_OP_dup
init|=
literal|0x12
block|,
name|DW_OP_drop
init|=
literal|0x13
block|,
name|DW_OP_over
init|=
literal|0x14
block|,
name|DW_OP_pick
init|=
literal|0x15
block|,
name|DW_OP_swap
init|=
literal|0x16
block|,
name|DW_OP_rot
init|=
literal|0x17
block|,
name|DW_OP_xderef
init|=
literal|0x18
block|,
name|DW_OP_abs
init|=
literal|0x19
block|,
name|DW_OP_and
init|=
literal|0x1a
block|,
name|DW_OP_div
init|=
literal|0x1b
block|,
name|DW_OP_minus
init|=
literal|0x1c
block|,
name|DW_OP_mod
init|=
literal|0x1d
block|,
name|DW_OP_mul
init|=
literal|0x1e
block|,
name|DW_OP_neg
init|=
literal|0x1f
block|,
name|DW_OP_not
init|=
literal|0x20
block|,
name|DW_OP_or
init|=
literal|0x21
block|,
name|DW_OP_plus
init|=
literal|0x22
block|,
name|DW_OP_plus_uconst
init|=
literal|0x23
block|,
name|DW_OP_shl
init|=
literal|0x24
block|,
name|DW_OP_shr
init|=
literal|0x25
block|,
name|DW_OP_shra
init|=
literal|0x26
block|,
name|DW_OP_xor
init|=
literal|0x27
block|,
name|DW_OP_bra
init|=
literal|0x28
block|,
name|DW_OP_eq
init|=
literal|0x29
block|,
name|DW_OP_ge
init|=
literal|0x2a
block|,
name|DW_OP_gt
init|=
literal|0x2b
block|,
name|DW_OP_le
init|=
literal|0x2c
block|,
name|DW_OP_lt
init|=
literal|0x2d
block|,
name|DW_OP_ne
init|=
literal|0x2e
block|,
name|DW_OP_skip
init|=
literal|0x2f
block|,
name|DW_OP_lit0
init|=
literal|0x30
block|,
name|DW_OP_lit1
init|=
literal|0x31
block|,
name|DW_OP_lit2
init|=
literal|0x32
block|,
name|DW_OP_lit3
init|=
literal|0x33
block|,
name|DW_OP_lit4
init|=
literal|0x34
block|,
name|DW_OP_lit5
init|=
literal|0x35
block|,
name|DW_OP_lit6
init|=
literal|0x36
block|,
name|DW_OP_lit7
init|=
literal|0x37
block|,
name|DW_OP_lit8
init|=
literal|0x38
block|,
name|DW_OP_lit9
init|=
literal|0x39
block|,
name|DW_OP_lit10
init|=
literal|0x3a
block|,
name|DW_OP_lit11
init|=
literal|0x3b
block|,
name|DW_OP_lit12
init|=
literal|0x3c
block|,
name|DW_OP_lit13
init|=
literal|0x3d
block|,
name|DW_OP_lit14
init|=
literal|0x3e
block|,
name|DW_OP_lit15
init|=
literal|0x3f
block|,
name|DW_OP_lit16
init|=
literal|0x40
block|,
name|DW_OP_lit17
init|=
literal|0x41
block|,
name|DW_OP_lit18
init|=
literal|0x42
block|,
name|DW_OP_lit19
init|=
literal|0x43
block|,
name|DW_OP_lit20
init|=
literal|0x44
block|,
name|DW_OP_lit21
init|=
literal|0x45
block|,
name|DW_OP_lit22
init|=
literal|0x46
block|,
name|DW_OP_lit23
init|=
literal|0x47
block|,
name|DW_OP_lit24
init|=
literal|0x48
block|,
name|DW_OP_lit25
init|=
literal|0x49
block|,
name|DW_OP_lit26
init|=
literal|0x4a
block|,
name|DW_OP_lit27
init|=
literal|0x4b
block|,
name|DW_OP_lit28
init|=
literal|0x4c
block|,
name|DW_OP_lit29
init|=
literal|0x4d
block|,
name|DW_OP_lit30
init|=
literal|0x4e
block|,
name|DW_OP_lit31
init|=
literal|0x4f
block|,
name|DW_OP_reg0
init|=
literal|0x50
block|,
name|DW_OP_reg1
init|=
literal|0x51
block|,
name|DW_OP_reg2
init|=
literal|0x52
block|,
name|DW_OP_reg3
init|=
literal|0x53
block|,
name|DW_OP_reg4
init|=
literal|0x54
block|,
name|DW_OP_reg5
init|=
literal|0x55
block|,
name|DW_OP_reg6
init|=
literal|0x56
block|,
name|DW_OP_reg7
init|=
literal|0x57
block|,
name|DW_OP_reg8
init|=
literal|0x58
block|,
name|DW_OP_reg9
init|=
literal|0x59
block|,
name|DW_OP_reg10
init|=
literal|0x5a
block|,
name|DW_OP_reg11
init|=
literal|0x5b
block|,
name|DW_OP_reg12
init|=
literal|0x5c
block|,
name|DW_OP_reg13
init|=
literal|0x5d
block|,
name|DW_OP_reg14
init|=
literal|0x5e
block|,
name|DW_OP_reg15
init|=
literal|0x5f
block|,
name|DW_OP_reg16
init|=
literal|0x60
block|,
name|DW_OP_reg17
init|=
literal|0x61
block|,
name|DW_OP_reg18
init|=
literal|0x62
block|,
name|DW_OP_reg19
init|=
literal|0x63
block|,
name|DW_OP_reg20
init|=
literal|0x64
block|,
name|DW_OP_reg21
init|=
literal|0x65
block|,
name|DW_OP_reg22
init|=
literal|0x66
block|,
name|DW_OP_reg23
init|=
literal|0x67
block|,
name|DW_OP_reg24
init|=
literal|0x68
block|,
name|DW_OP_reg25
init|=
literal|0x69
block|,
name|DW_OP_reg26
init|=
literal|0x6a
block|,
name|DW_OP_reg27
init|=
literal|0x6b
block|,
name|DW_OP_reg28
init|=
literal|0x6c
block|,
name|DW_OP_reg29
init|=
literal|0x6d
block|,
name|DW_OP_reg30
init|=
literal|0x6e
block|,
name|DW_OP_reg31
init|=
literal|0x6f
block|,
name|DW_OP_breg0
init|=
literal|0x70
block|,
name|DW_OP_breg1
init|=
literal|0x71
block|,
name|DW_OP_breg2
init|=
literal|0x72
block|,
name|DW_OP_breg3
init|=
literal|0x73
block|,
name|DW_OP_breg4
init|=
literal|0x74
block|,
name|DW_OP_breg5
init|=
literal|0x75
block|,
name|DW_OP_breg6
init|=
literal|0x76
block|,
name|DW_OP_breg7
init|=
literal|0x77
block|,
name|DW_OP_breg8
init|=
literal|0x78
block|,
name|DW_OP_breg9
init|=
literal|0x79
block|,
name|DW_OP_breg10
init|=
literal|0x7a
block|,
name|DW_OP_breg11
init|=
literal|0x7b
block|,
name|DW_OP_breg12
init|=
literal|0x7c
block|,
name|DW_OP_breg13
init|=
literal|0x7d
block|,
name|DW_OP_breg14
init|=
literal|0x7e
block|,
name|DW_OP_breg15
init|=
literal|0x7f
block|,
name|DW_OP_breg16
init|=
literal|0x80
block|,
name|DW_OP_breg17
init|=
literal|0x81
block|,
name|DW_OP_breg18
init|=
literal|0x82
block|,
name|DW_OP_breg19
init|=
literal|0x83
block|,
name|DW_OP_breg20
init|=
literal|0x84
block|,
name|DW_OP_breg21
init|=
literal|0x85
block|,
name|DW_OP_breg22
init|=
literal|0x86
block|,
name|DW_OP_breg23
init|=
literal|0x87
block|,
name|DW_OP_breg24
init|=
literal|0x88
block|,
name|DW_OP_breg25
init|=
literal|0x89
block|,
name|DW_OP_breg26
init|=
literal|0x8a
block|,
name|DW_OP_breg27
init|=
literal|0x8b
block|,
name|DW_OP_breg28
init|=
literal|0x8c
block|,
name|DW_OP_breg29
init|=
literal|0x8d
block|,
name|DW_OP_breg30
init|=
literal|0x8e
block|,
name|DW_OP_breg31
init|=
literal|0x8f
block|,
name|DW_OP_regx
init|=
literal|0x90
block|,
name|DW_OP_fbreg
init|=
literal|0x91
block|,
name|DW_OP_bregx
init|=
literal|0x92
block|,
name|DW_OP_piece
init|=
literal|0x93
block|,
name|DW_OP_deref_size
init|=
literal|0x94
block|,
name|DW_OP_xderef_size
init|=
literal|0x95
block|,
name|DW_OP_nop
init|=
literal|0x96
block|,
comment|/* DWARF 3 extensions.  */
name|DW_OP_push_object_address
init|=
literal|0x97
block|,
name|DW_OP_call2
init|=
literal|0x98
block|,
name|DW_OP_call4
init|=
literal|0x99
block|,
name|DW_OP_call_ref
init|=
literal|0x9a
block|,
name|DW_OP_form_tls_address
init|=
literal|0x9b
block|,
name|DW_OP_call_frame_cfa
init|=
literal|0x9c
block|,
name|DW_OP_bit_piece
init|=
literal|0x9d
block|,
comment|/* GNU extensions.  */
name|DW_OP_GNU_push_tls_address
init|=
literal|0xe0
block|,
comment|/* HP extensions.  */
name|DW_OP_HP_unknown
init|=
literal|0xe0
block|,
comment|/* Ouch, the same as GNU_push_tls_address.  */
name|DW_OP_HP_is_value
init|=
literal|0xe1
block|,
name|DW_OP_HP_fltconst4
init|=
literal|0xe2
block|,
name|DW_OP_HP_fltconst8
init|=
literal|0xe3
block|,
name|DW_OP_HP_mod_range
init|=
literal|0xe4
block|,
name|DW_OP_HP_unmod_range
init|=
literal|0xe5
block|,
name|DW_OP_HP_tls
init|=
literal|0xe6
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|DW_OP_lo_user
value|0xe0
end_define

begin_comment
comment|/* Implementation-defined range start.  */
end_comment

begin_define
define|#
directive|define
name|DW_OP_hi_user
value|0xff
end_define

begin_comment
comment|/* Implementation-defined range end.  */
end_comment

begin_comment
comment|/* Type encodings.  */
end_comment

begin_enum
enum|enum
name|dwarf_type
block|{
name|DW_ATE_void
init|=
literal|0x0
block|,
name|DW_ATE_address
init|=
literal|0x1
block|,
name|DW_ATE_boolean
init|=
literal|0x2
block|,
name|DW_ATE_complex_float
init|=
literal|0x3
block|,
name|DW_ATE_float
init|=
literal|0x4
block|,
name|DW_ATE_signed
init|=
literal|0x5
block|,
name|DW_ATE_signed_char
init|=
literal|0x6
block|,
name|DW_ATE_unsigned
init|=
literal|0x7
block|,
name|DW_ATE_unsigned_char
init|=
literal|0x8
block|,
comment|/* DWARF 3.  */
name|DW_ATE_imaginary_float
init|=
literal|0x9
block|,
name|DW_ATE_packed_decimal
init|=
literal|0xa
block|,
name|DW_ATE_numeric_string
init|=
literal|0xb
block|,
name|DW_ATE_edited
init|=
literal|0xc
block|,
name|DW_ATE_signed_fixed
init|=
literal|0xd
block|,
name|DW_ATE_unsigned_fixed
init|=
literal|0xe
block|,
name|DW_ATE_decimal_float
init|=
literal|0xf
block|,
comment|/* HP extensions.  */
name|DW_ATE_HP_float80
init|=
literal|0x80
block|,
comment|/* Floating-point (80 bit).  */
name|DW_ATE_HP_complex_float80
init|=
literal|0x81
block|,
comment|/* Complex floating-point (80 bit).  */
name|DW_ATE_HP_float128
init|=
literal|0x82
block|,
comment|/* Floating-point (128 bit).  */
name|DW_ATE_HP_complex_float128
init|=
literal|0x83
block|,
comment|/* Complex floating-point (128 bit).  */
name|DW_ATE_HP_floathpintel
init|=
literal|0x84
block|,
comment|/* Floating-point (82 bit IA64).  */
name|DW_ATE_HP_imaginary_float80
init|=
literal|0x85
block|,
name|DW_ATE_HP_imaginary_float128
init|=
literal|0x86
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|DW_ATE_lo_user
value|0x80
end_define

begin_define
define|#
directive|define
name|DW_ATE_hi_user
value|0xff
end_define

begin_comment
comment|/* Decimal sign encodings.  */
end_comment

begin_enum
enum|enum
name|dwarf_decimal_sign_encoding
block|{
comment|/* DWARF 3.  */
name|DW_DS_unsigned
init|=
literal|0x01
block|,
name|DW_DS_leading_overpunch
init|=
literal|0x02
block|,
name|DW_DS_trailing_overpunch
init|=
literal|0x03
block|,
name|DW_DS_leading_separate
init|=
literal|0x04
block|,
name|DW_DS_trailing_separate
init|=
literal|0x05
block|}
enum|;
end_enum

begin_comment
comment|/* Endianity encodings.  */
end_comment

begin_enum
enum|enum
name|dwarf_endianity_encoding
block|{
comment|/* DWARF 3.  */
name|DW_END_default
init|=
literal|0x00
block|,
name|DW_END_big
init|=
literal|0x01
block|,
name|DW_END_little
init|=
literal|0x02
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|DW_END_lo_user
value|0x40
end_define

begin_define
define|#
directive|define
name|DW_END_hi_user
value|0xff
end_define

begin_comment
comment|/* Array ordering names and codes.  */
end_comment

begin_enum
enum|enum
name|dwarf_array_dim_ordering
block|{
name|DW_ORD_row_major
init|=
literal|0
block|,
name|DW_ORD_col_major
init|=
literal|1
block|}
enum|;
end_enum

begin_comment
comment|/* Access attribute.  */
end_comment

begin_enum
enum|enum
name|dwarf_access_attribute
block|{
name|DW_ACCESS_public
init|=
literal|1
block|,
name|DW_ACCESS_protected
init|=
literal|2
block|,
name|DW_ACCESS_private
init|=
literal|3
block|}
enum|;
end_enum

begin_comment
comment|/* Visibility.  */
end_comment

begin_enum
enum|enum
name|dwarf_visibility_attribute
block|{
name|DW_VIS_local
init|=
literal|1
block|,
name|DW_VIS_exported
init|=
literal|2
block|,
name|DW_VIS_qualified
init|=
literal|3
block|}
enum|;
end_enum

begin_comment
comment|/* Virtuality.  */
end_comment

begin_enum
enum|enum
name|dwarf_virtuality_attribute
block|{
name|DW_VIRTUALITY_none
init|=
literal|0
block|,
name|DW_VIRTUALITY_virtual
init|=
literal|1
block|,
name|DW_VIRTUALITY_pure_virtual
init|=
literal|2
block|}
enum|;
end_enum

begin_comment
comment|/* Case sensitivity.  */
end_comment

begin_enum
enum|enum
name|dwarf_id_case
block|{
name|DW_ID_case_sensitive
init|=
literal|0
block|,
name|DW_ID_up_case
init|=
literal|1
block|,
name|DW_ID_down_case
init|=
literal|2
block|,
name|DW_ID_case_insensitive
init|=
literal|3
block|}
enum|;
end_enum

begin_comment
comment|/* Calling convention.  */
end_comment

begin_enum
enum|enum
name|dwarf_calling_convention
block|{
name|DW_CC_normal
init|=
literal|0x1
block|,
name|DW_CC_program
init|=
literal|0x2
block|,
name|DW_CC_nocall
init|=
literal|0x3
block|,
name|DW_CC_GNU_renesas_sh
init|=
literal|0x40
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|DW_CC_lo_user
value|0x40
end_define

begin_define
define|#
directive|define
name|DW_CC_hi_user
value|0xff
end_define

begin_comment
comment|/* Inline attribute.  */
end_comment

begin_enum
enum|enum
name|dwarf_inline_attribute
block|{
name|DW_INL_not_inlined
init|=
literal|0
block|,
name|DW_INL_inlined
init|=
literal|1
block|,
name|DW_INL_declared_not_inlined
init|=
literal|2
block|,
name|DW_INL_declared_inlined
init|=
literal|3
block|}
enum|;
end_enum

begin_comment
comment|/* Discriminant lists.  */
end_comment

begin_enum
enum|enum
name|dwarf_discrim_list
block|{
name|DW_DSC_label
init|=
literal|0
block|,
name|DW_DSC_range
init|=
literal|1
block|}
enum|;
end_enum

begin_comment
comment|/* Line number opcodes.  */
end_comment

begin_enum
enum|enum
name|dwarf_line_number_ops
block|{
name|DW_LNS_extended_op
init|=
literal|0
block|,
name|DW_LNS_copy
init|=
literal|1
block|,
name|DW_LNS_advance_pc
init|=
literal|2
block|,
name|DW_LNS_advance_line
init|=
literal|3
block|,
name|DW_LNS_set_file
init|=
literal|4
block|,
name|DW_LNS_set_column
init|=
literal|5
block|,
name|DW_LNS_negate_stmt
init|=
literal|6
block|,
name|DW_LNS_set_basic_block
init|=
literal|7
block|,
name|DW_LNS_const_add_pc
init|=
literal|8
block|,
name|DW_LNS_fixed_advance_pc
init|=
literal|9
block|,
comment|/* DWARF 3.  */
name|DW_LNS_set_prologue_end
init|=
literal|10
block|,
name|DW_LNS_set_epilogue_begin
init|=
literal|11
block|,
name|DW_LNS_set_isa
init|=
literal|12
block|}
enum|;
end_enum

begin_comment
comment|/* Line number extended opcodes.  */
end_comment

begin_enum
enum|enum
name|dwarf_line_number_x_ops
block|{
name|DW_LNE_end_sequence
init|=
literal|1
block|,
name|DW_LNE_set_address
init|=
literal|2
block|,
name|DW_LNE_define_file
init|=
literal|3
block|,
comment|/* HP extensions.  */
name|DW_LNE_HP_negate_is_UV_update
init|=
literal|0x11
block|,
name|DW_LNE_HP_push_context
init|=
literal|0x12
block|,
name|DW_LNE_HP_pop_context
init|=
literal|0x13
block|,
name|DW_LNE_HP_set_file_line_column
init|=
literal|0x14
block|,
name|DW_LNE_HP_set_routine_name
init|=
literal|0x15
block|,
name|DW_LNE_HP_set_sequence
init|=
literal|0x16
block|,
name|DW_LNE_HP_negate_post_semantics
init|=
literal|0x17
block|,
name|DW_LNE_HP_negate_function_exit
init|=
literal|0x18
block|,
name|DW_LNE_HP_negate_front_end_logical
init|=
literal|0x19
block|,
name|DW_LNE_HP_define_proc
init|=
literal|0x20
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|DW_LNE_lo_user
value|0x80
end_define

begin_define
define|#
directive|define
name|DW_LNE_hi_user
value|0xff
end_define

begin_comment
comment|/* Call frame information.  */
end_comment

begin_enum
enum|enum
name|dwarf_call_frame_info
block|{
name|DW_CFA_advance_loc
init|=
literal|0x40
block|,
name|DW_CFA_offset
init|=
literal|0x80
block|,
name|DW_CFA_restore
init|=
literal|0xc0
block|,
name|DW_CFA_nop
init|=
literal|0x00
block|,
name|DW_CFA_set_loc
init|=
literal|0x01
block|,
name|DW_CFA_advance_loc1
init|=
literal|0x02
block|,
name|DW_CFA_advance_loc2
init|=
literal|0x03
block|,
name|DW_CFA_advance_loc4
init|=
literal|0x04
block|,
name|DW_CFA_offset_extended
init|=
literal|0x05
block|,
name|DW_CFA_restore_extended
init|=
literal|0x06
block|,
name|DW_CFA_undefined
init|=
literal|0x07
block|,
name|DW_CFA_same_value
init|=
literal|0x08
block|,
name|DW_CFA_register
init|=
literal|0x09
block|,
name|DW_CFA_remember_state
init|=
literal|0x0a
block|,
name|DW_CFA_restore_state
init|=
literal|0x0b
block|,
name|DW_CFA_def_cfa
init|=
literal|0x0c
block|,
name|DW_CFA_def_cfa_register
init|=
literal|0x0d
block|,
name|DW_CFA_def_cfa_offset
init|=
literal|0x0e
block|,
comment|/* DWARF 3.  */
name|DW_CFA_def_cfa_expression
init|=
literal|0x0f
block|,
name|DW_CFA_expression
init|=
literal|0x10
block|,
name|DW_CFA_offset_extended_sf
init|=
literal|0x11
block|,
name|DW_CFA_def_cfa_sf
init|=
literal|0x12
block|,
name|DW_CFA_def_cfa_offset_sf
init|=
literal|0x13
block|,
name|DW_CFA_val_offset
init|=
literal|0x14
block|,
name|DW_CFA_val_offset_sf
init|=
literal|0x15
block|,
name|DW_CFA_val_expression
init|=
literal|0x16
block|,
comment|/* SGI/MIPS specific.  */
name|DW_CFA_MIPS_advance_loc8
init|=
literal|0x1d
block|,
comment|/* GNU extensions.  */
name|DW_CFA_GNU_window_save
init|=
literal|0x2d
block|,
name|DW_CFA_GNU_args_size
init|=
literal|0x2e
block|,
name|DW_CFA_GNU_negative_offset_extended
init|=
literal|0x2f
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|DW_CIE_ID
value|0xffffffff
end_define

begin_define
define|#
directive|define
name|DW_CIE_VERSION
value|1
end_define

begin_define
define|#
directive|define
name|DW_CFA_extended
value|0
end_define

begin_define
define|#
directive|define
name|DW_CFA_lo_user
value|0x1c
end_define

begin_define
define|#
directive|define
name|DW_CFA_hi_user
value|0x3f
end_define

begin_define
define|#
directive|define
name|DW_CHILDREN_no
value|0x00
end_define

begin_define
define|#
directive|define
name|DW_CHILDREN_yes
value|0x01
end_define

begin_define
define|#
directive|define
name|DW_ADDR_none
value|0
end_define

begin_comment
comment|/* Source language names and codes.  */
end_comment

begin_enum
enum|enum
name|dwarf_source_language
block|{
name|DW_LANG_C89
init|=
literal|0x0001
block|,
name|DW_LANG_C
init|=
literal|0x0002
block|,
name|DW_LANG_Ada83
init|=
literal|0x0003
block|,
name|DW_LANG_C_plus_plus
init|=
literal|0x0004
block|,
name|DW_LANG_Cobol74
init|=
literal|0x0005
block|,
name|DW_LANG_Cobol85
init|=
literal|0x0006
block|,
name|DW_LANG_Fortran77
init|=
literal|0x0007
block|,
name|DW_LANG_Fortran90
init|=
literal|0x0008
block|,
name|DW_LANG_Pascal83
init|=
literal|0x0009
block|,
name|DW_LANG_Modula2
init|=
literal|0x000a
block|,
comment|/* DWARF 3.  */
name|DW_LANG_Java
init|=
literal|0x000b
block|,
name|DW_LANG_C99
init|=
literal|0x000c
block|,
name|DW_LANG_Ada95
init|=
literal|0x000d
block|,
name|DW_LANG_Fortran95
init|=
literal|0x000e
block|,
name|DW_LANG_PLI
init|=
literal|0x000f
block|,
name|DW_LANG_ObjC
init|=
literal|0x0010
block|,
name|DW_LANG_ObjC_plus_plus
init|=
literal|0x0011
block|,
name|DW_LANG_UPC
init|=
literal|0x0012
block|,
name|DW_LANG_D
init|=
literal|0x0013
block|,
comment|/* MIPS.  */
name|DW_LANG_Mips_Assembler
init|=
literal|0x8001
block|,
comment|/* UPC.  */
name|DW_LANG_Upc
init|=
literal|0x8765
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|DW_LANG_lo_user
value|0x8000
end_define

begin_comment
comment|/* Implementation-defined range start.  */
end_comment

begin_define
define|#
directive|define
name|DW_LANG_hi_user
value|0xffff
end_define

begin_comment
comment|/* Implementation-defined range start.  */
end_comment

begin_comment
comment|/* Names and codes for macro information.  */
end_comment

begin_enum
enum|enum
name|dwarf_macinfo_record_type
block|{
name|DW_MACINFO_define
init|=
literal|1
block|,
name|DW_MACINFO_undef
init|=
literal|2
block|,
name|DW_MACINFO_start_file
init|=
literal|3
block|,
name|DW_MACINFO_end_file
init|=
literal|4
block|,
name|DW_MACINFO_vendor_ext
init|=
literal|255
block|}
enum|;
end_enum

begin_escape
end_escape

begin_comment
comment|/* @@@ For use with GNU frame unwind information.  */
end_comment

begin_define
define|#
directive|define
name|DW_EH_PE_absptr
value|0x00
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_omit
value|0xff
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_uleb128
value|0x01
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_udata2
value|0x02
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_udata4
value|0x03
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_udata8
value|0x04
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_sleb128
value|0x09
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_sdata2
value|0x0A
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_sdata4
value|0x0B
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_sdata8
value|0x0C
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_signed
value|0x08
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_pcrel
value|0x10
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_textrel
value|0x20
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_datarel
value|0x30
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_funcrel
value|0x40
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_aligned
value|0x50
end_define

begin_define
define|#
directive|define
name|DW_EH_PE_indirect
value|0x80
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _ELF_DWARF2_H */
end_comment

end_unit

