begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* CRIS ELF support for BFD.    Copyright 2000, 2001, 2004 Free Software Foundation, Inc.    Contributed by Axis Communications AB, Lund, Sweden.    Written by Hans-Peter Nilsson.  This file is part of BFD, the Binary File Descriptor library.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_ELF_CRIS_H
end_ifndef

begin_define
define|#
directive|define
name|_ELF_CRIS_H
end_define

begin_include
include|#
directive|include
file|"elf/reloc-macros.h"
end_include

begin_comment
comment|/* Relocations.  */
end_comment

begin_macro
name|START_RELOC_NUMBERS
argument_list|(
argument|elf_cris_reloc_type
argument_list|)
end_macro

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_NONE
argument_list|,
literal|0
argument_list|)
end_macro

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_8
argument_list|,
literal|1
argument_list|)
end_macro

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_16
argument_list|,
literal|2
argument_list|)
end_macro

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_32
argument_list|,
literal|3
argument_list|)
end_macro

begin_comment
comment|/* The "PC" position is the location right after the relocation.  */
end_comment

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_8_PCREL
argument_list|,
literal|4
argument_list|)
end_macro

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_16_PCREL
argument_list|,
literal|5
argument_list|)
end_macro

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_32_PCREL
argument_list|,
literal|6
argument_list|)
end_macro

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_GNU_VTINHERIT
argument_list|,
literal|7
argument_list|)
end_macro

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_GNU_VTENTRY
argument_list|,
literal|8
argument_list|)
end_macro

begin_comment
comment|/* Copy contents at dynlinking.  Generated by the linker.      The BFD equivalent is BFD_RELOC_CRIS_COPY.  */
end_comment

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_COPY
argument_list|,
literal|9
argument_list|)
end_macro

begin_comment
comment|/* Create GOT entry.  Generated by the linker.      The BFD equivalent is BFD_RELOC_CRIS_GLOB_DAT.  */
end_comment

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_GLOB_DAT
argument_list|,
literal|10
argument_list|)
end_macro

begin_comment
comment|/* Create PLT entry.  Generated by the linker.      The BFD equivalent is BFD_RELOC_CRIS_JUMP_SLOT.  */
end_comment

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_JUMP_SLOT
argument_list|,
literal|11
argument_list|)
end_macro

begin_comment
comment|/* Adjust by program base.  Generated by the linker.      The BFD equivalent is BFD_RELOC_CRIS_RELATIVE.  */
end_comment

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_RELATIVE
argument_list|,
literal|12
argument_list|)
end_macro

begin_comment
comment|/* A 16-bit offset to entry in GOT and request to create GOT entry for      that symbol.      The BFD equivalent is BFD_RELOC_CRIS_16_GOT.  */
end_comment

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_16_GOT
argument_list|,
literal|13
argument_list|)
end_macro

begin_comment
comment|/* A 32-bit offset to entry in GOT and request to create GOT entry for      that symbol.      The BFD equivalent is BFD_RELOC_CRIS_32_GOT.  */
end_comment

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_32_GOT
argument_list|,
literal|14
argument_list|)
end_macro

begin_comment
comment|/* A 16-bit offset to entry in PLT part of GOT and request to create PLT      entry for that symbol.      The BFD equivalent is BFD_RELOC_CRIS_16_GOTPLT.  */
end_comment

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_16_GOTPLT
argument_list|,
literal|15
argument_list|)
end_macro

begin_comment
comment|/* A 32-bit offset to entry in PLT part of GOT and request to create PLT      entry for that symbol.      The BFD equivalent is BFD_RELOC_CRIS_32_GOTPLT.  */
end_comment

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_32_GOTPLT
argument_list|,
literal|16
argument_list|)
end_macro

begin_comment
comment|/* A 32-bit offset from GOT to (local) symbol: no GOT entry should be      necessary.      The BFD equivalent is BFD_RELOC_CRIS_32_GOTREL.  */
end_comment

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_32_GOTREL
argument_list|,
literal|17
argument_list|)
end_macro

begin_comment
comment|/* A 32-bit offset from GOT to entry for this symbol in PLT and request      to create PLT entry for symbol.      The BFD equivalent is BFD_RELOC_CRIS_32_GOTREL.  */
end_comment

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_32_PLT_GOTREL
argument_list|,
literal|18
argument_list|)
end_macro

begin_comment
comment|/* A 32-bit offset from location after this relocation (addend specifies      offset) to entry for this symbol in PLT and request to create PLT      entry for symbol.      The BFD equivalent is BFD_RELOC_CRIS_32_PLT_PCREL.  */
end_comment

begin_macro
name|RELOC_NUMBER
argument_list|(
argument|R_CRIS_32_PLT_PCREL
argument_list|,
literal|19
argument_list|)
end_macro

begin_comment
comment|/* No other relocs must be visible outside the assembler.  */
end_comment

begin_macro
name|END_RELOC_NUMBERS
argument_list|(
argument|R_CRIS_max
argument_list|)
end_macro

begin_comment
comment|/* User symbols in this file have a leading underscore.  */
end_comment

begin_define
define|#
directive|define
name|EF_CRIS_UNDERSCORE
value|0x00000001
end_define

begin_comment
comment|/* This is a mask for different incompatible machine variants.  */
end_comment

begin_define
define|#
directive|define
name|EF_CRIS_VARIANT_MASK
value|0x0000000e
end_define

begin_comment
comment|/* Variant 0; may contain v0..10 object.  */
end_comment

begin_define
define|#
directive|define
name|EF_CRIS_VARIANT_ANY_V0_V10
value|0x00000000
end_define

begin_comment
comment|/* Variant 1; contains v32 object.  */
end_comment

begin_define
define|#
directive|define
name|EF_CRIS_VARIANT_V32
value|0x00000002
end_define

begin_comment
comment|/* Variant 2; contains object compatible with v32 and v10.  */
end_comment

begin_define
define|#
directive|define
name|EF_CRIS_VARIANT_COMMON_V10_V32
value|0x00000004
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _ELF_CRIS_H */
end_comment

end_unit

