begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* IEEE-695 object file formats:  definitions internal to BFD.    Copyright (C) 1990, 91, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.    Written by Cygnus Support.  Mostly Steve Chamberlain's fault.  This file is part of BFD, the Binary File Descriptor library.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|int
name|index
range|:
literal|24
decl_stmt|;
name|char
name|letter
decl_stmt|;
block|}
name|ieee_symbol_index_type
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|ct
block|{
name|bfd
modifier|*
name|this
decl_stmt|;
name|struct
name|ct
modifier|*
name|next
decl_stmt|;
block|}
name|bfd_chain_type
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|ieee_symbol
block|{
name|asymbol
name|symbol
decl_stmt|;
name|struct
name|ieee_symbol
modifier|*
name|next
decl_stmt|;
name|unsigned
name|int
name|index
decl_stmt|;
block|}
name|ieee_symbol_type
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|ieee_reloc
block|{
name|arelent
name|relent
decl_stmt|;
name|struct
name|ieee_reloc
modifier|*
name|next
decl_stmt|;
name|ieee_symbol_index_type
name|symbol
decl_stmt|;
block|}
name|ieee_reloc_type
typedef|;
end_typedef

begin_define
define|#
directive|define
name|ieee_symbol
parameter_list|(
name|x
parameter_list|)
value|((ieee_symbol_type *)(x))
end_define

begin_typedef
typedef|typedef
struct|struct
name|ieee_per_section
block|{
name|asection
modifier|*
name|section
decl_stmt|;
name|bfd_byte
modifier|*
name|data
decl_stmt|;
name|bfd_vma
name|offset
decl_stmt|;
name|bfd_vma
name|pc
decl_stmt|;
comment|/* For output */
name|file_ptr
name|current_pos
decl_stmt|;
name|unsigned
name|int
name|current_byte
decl_stmt|;
name|boolean
name|initialized
decl_stmt|;
name|ieee_reloc_type
modifier|*
modifier|*
name|reloc_tail_ptr
decl_stmt|;
block|}
name|ieee_per_section_type
typedef|;
end_typedef

begin_define
define|#
directive|define
name|ieee_per_section
parameter_list|(
name|x
parameter_list|)
value|((ieee_per_section_type *)((x)->used_by_bfd))
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|unsigned
name|char
modifier|*
name|input_p
decl_stmt|;
name|unsigned
name|char
modifier|*
name|first_byte
decl_stmt|;
name|bfd
modifier|*
name|abfd
decl_stmt|;
block|}
name|common_header_type
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|ieee_data_struct
block|{
name|common_header_type
name|h
decl_stmt|;
name|boolean
name|read_symbols
decl_stmt|;
name|boolean
name|read_data
decl_stmt|;
name|file_ptr
name|output_cursor
decl_stmt|;
comment|/* Map of section indexes to section ptrs */
name|asection
modifier|*
modifier|*
name|section_table
decl_stmt|;
name|unsigned
name|int
name|section_table_size
decl_stmt|;
name|ieee_address_descriptor_type
name|ad
decl_stmt|;
name|ieee_module_begin_type
name|mb
decl_stmt|;
name|ieee_w_variable_type
name|w
decl_stmt|;
name|unsigned
name|int
name|section_count
decl_stmt|;
name|unsigned
name|int
name|map_idx
decl_stmt|;
comment|/* List of GLOBAL EXPORT symbols */
name|ieee_symbol_type
modifier|*
name|external_symbols
decl_stmt|;
comment|/* List of UNDEFINED symbols */
name|ieee_symbol_type
modifier|*
name|external_reference
decl_stmt|;
comment|/* When the symbols have been canonicalized, they are in a     * special order, we remember various bases here.. */
name|unsigned
name|int
name|external_symbol_max_index
decl_stmt|;
name|unsigned
name|int
name|external_symbol_min_index
decl_stmt|;
name|unsigned
name|int
name|external_symbol_count
decl_stmt|;
name|int
name|external_symbol_base_offset
decl_stmt|;
name|unsigned
name|int
name|external_reference_max_index
decl_stmt|;
name|unsigned
name|int
name|external_reference_min_index
decl_stmt|;
name|unsigned
name|int
name|external_reference_count
decl_stmt|;
name|int
name|external_reference_base_offset
decl_stmt|;
name|boolean
name|symbol_table_full
decl_stmt|;
name|boolean
name|done_debug
decl_stmt|;
name|bfd_chain_type
modifier|*
name|chain_head
decl_stmt|;
name|bfd_chain_type
modifier|*
name|chain_root
decl_stmt|;
block|}
name|ieee_data_type
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|file_ptr
name|file_offset
decl_stmt|;
name|bfd
modifier|*
name|abfd
decl_stmt|;
block|}
name|ieee_ar_obstack_type
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|ieee_ar_data_struct
block|{
name|common_header_type
name|h
decl_stmt|;
name|ieee_ar_obstack_type
modifier|*
name|elements
decl_stmt|;
name|unsigned
name|int
name|element_index
decl_stmt|;
name|unsigned
name|int
name|element_count
decl_stmt|;
block|}
name|ieee_ar_data_type
typedef|;
end_typedef

begin_define
define|#
directive|define
name|IEEE_DATA
parameter_list|(
name|abfd
parameter_list|)
value|((abfd)->tdata.ieee_data)
end_define

begin_define
define|#
directive|define
name|IEEE_AR_DATA
parameter_list|(
name|abfd
parameter_list|)
value|((abfd)->tdata.ieee_ar_data)
end_define

begin_define
define|#
directive|define
name|ptr
parameter_list|(
name|abfd
parameter_list|)
value|(ieee_data(abfd)->input_p)
end_define

end_unit

