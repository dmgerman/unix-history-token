begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Instruction opcode header for mep.  THIS FILE IS MACHINE GENERATED WITH CGEN.  Copyright 1996-2005 Free Software Foundation, Inc.  This file is part of the GNU Binutils and/or GDB, the GNU debugger.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MEP_OPC_H
end_ifndef

begin_define
define|#
directive|define
name|MEP_OPC_H
end_define

begin_comment
comment|/* -- opc.h */
end_comment

begin_undef
undef|#
directive|undef
name|CGEN_DIS_HASH_SIZE
end_undef

begin_define
define|#
directive|define
name|CGEN_DIS_HASH_SIZE
value|1
end_define

begin_undef
undef|#
directive|undef
name|CGEN_DIS_HASH
end_undef

begin_define
define|#
directive|define
name|CGEN_DIS_HASH
parameter_list|(
name|buffer
parameter_list|,
name|insn
parameter_list|)
value|0
end_define

begin_define
define|#
directive|define
name|CGEN_VERBOSE_ASSEMBLER_ERRORS
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|int
name|config_enum
decl_stmt|;
name|unsigned
name|cpu_flag
decl_stmt|;
name|int
name|big_endian
decl_stmt|;
name|int
name|vliw_bits
decl_stmt|;
name|CGEN_ATTR_VALUE_BITSET_TYPE
name|cop16_isa
decl_stmt|;
name|CGEN_ATTR_VALUE_BITSET_TYPE
name|cop32_isa
decl_stmt|;
name|CGEN_ATTR_VALUE_BITSET_TYPE
name|cop48_isa
decl_stmt|;
name|CGEN_ATTR_VALUE_BITSET_TYPE
name|cop64_isa
decl_stmt|;
name|CGEN_ATTR_VALUE_BITSET_TYPE
name|cop_isa
decl_stmt|;
name|CGEN_ATTR_VALUE_BITSET_TYPE
name|core_isa
decl_stmt|;
name|unsigned
name|int
name|option_mask
decl_stmt|;
block|}
name|mep_config_map_struct
typedef|;
end_typedef

begin_decl_stmt
specifier|extern
name|mep_config_map_struct
name|mep_config_map
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|mep_config_index
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|void
name|init_mep_all_core_isas_mask
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|init_mep_all_cop_isas_mask
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|CGEN_ATTR_VALUE_BITSET_TYPE
name|mep_cop_isa
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|MEP_CONFIG
value|(mep_config_map[mep_config_index].config_enum)
end_define

begin_define
define|#
directive|define
name|MEP_CPU
value|(mep_config_map[mep_config_index].cpu_flag)
end_define

begin_define
define|#
directive|define
name|MEP_OMASK
value|(mep_config_map[mep_config_index].option_mask)
end_define

begin_define
define|#
directive|define
name|MEP_VLIW
value|(mep_config_map[mep_config_index].vliw_bits> 0)
end_define

begin_define
define|#
directive|define
name|MEP_VLIW32
value|(mep_config_map[mep_config_index].vliw_bits == 32)
end_define

begin_define
define|#
directive|define
name|MEP_VLIW64
value|(mep_config_map[mep_config_index].vliw_bits == 64)
end_define

begin_define
define|#
directive|define
name|MEP_COP16_ISA
value|(mep_config_map[mep_config_index].cop16_isa)
end_define

begin_define
define|#
directive|define
name|MEP_COP32_ISA
value|(mep_config_map[mep_config_index].cop32_isa)
end_define

begin_define
define|#
directive|define
name|MEP_COP48_ISA
value|(mep_config_map[mep_config_index].cop48_isa)
end_define

begin_define
define|#
directive|define
name|MEP_COP64_ISA
value|(mep_config_map[mep_config_index].cop64_isa)
end_define

begin_define
define|#
directive|define
name|MEP_COP_ISA
value|(mep_config_map[mep_config_index].cop_isa)
end_define

begin_define
define|#
directive|define
name|MEP_CORE_ISA
value|(mep_config_map[mep_config_index].core_isa)
end_define

begin_function_decl
specifier|extern
name|int
name|mep_insn_supported_by_isa
parameter_list|(
specifier|const
name|CGEN_INSN
modifier|*
parameter_list|,
name|CGEN_ATTR_VALUE_BITSET_TYPE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* A mask for all ISAs executed by the core.  */
end_comment

begin_define
define|#
directive|define
name|MEP_ALL_CORE_ISAS_MASK
value|mep_all_core_isas_mask
end_define

begin_decl_stmt
specifier|extern
name|CGEN_ATTR_VALUE_BITSET_TYPE
name|mep_all_core_isas_mask
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|MEP_INSN_CORE_P
parameter_list|(
name|insn
parameter_list|)
value|( \   init_mep_all_core_isas_mask (), \   mep_insn_supported_by_isa (insn,& MEP_ALL_CORE_ISAS_MASK) \ )
end_define

begin_comment
comment|/* A mask for all ISAs executed by a VLIW coprocessor.  */
end_comment

begin_define
define|#
directive|define
name|MEP_ALL_COP_ISAS_MASK
value|mep_all_cop_isas_mask
end_define

begin_decl_stmt
specifier|extern
name|CGEN_ATTR_VALUE_BITSET_TYPE
name|mep_all_cop_isas_mask
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|MEP_INSN_COP_P
parameter_list|(
name|insn
parameter_list|)
value|( \   init_mep_all_cop_isas_mask (), \   mep_insn_supported_by_isa (insn,& MEP_ALL_COP_ISAS_MASK) \ )
end_define

begin_function_decl
specifier|extern
name|int
name|mep_cgen_insn_supported
parameter_list|(
name|CGEN_CPU_DESC
parameter_list|,
specifier|const
name|CGEN_INSN
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* -- asm.c */
end_comment

begin_comment
comment|/* Enum declaration for mep instruction types.  */
end_comment

begin_typedef
typedef|typedef
enum|enum
name|cgen_insn_type
block|{
name|MEP_INSN_INVALID
block|,
name|MEP_INSN_SB
block|,
name|MEP_INSN_SH
block|,
name|MEP_INSN_SW
block|,
name|MEP_INSN_LB
block|,
name|MEP_INSN_LH
block|,
name|MEP_INSN_LW
block|,
name|MEP_INSN_LBU
block|,
name|MEP_INSN_LHU
block|,
name|MEP_INSN_SW_SP
block|,
name|MEP_INSN_LW_SP
block|,
name|MEP_INSN_SB_TP
block|,
name|MEP_INSN_SH_TP
block|,
name|MEP_INSN_SW_TP
block|,
name|MEP_INSN_LB_TP
block|,
name|MEP_INSN_LH_TP
block|,
name|MEP_INSN_LW_TP
block|,
name|MEP_INSN_LBU_TP
block|,
name|MEP_INSN_LHU_TP
block|,
name|MEP_INSN_SB16
block|,
name|MEP_INSN_SH16
block|,
name|MEP_INSN_SW16
block|,
name|MEP_INSN_LB16
block|,
name|MEP_INSN_LH16
block|,
name|MEP_INSN_LW16
block|,
name|MEP_INSN_LBU16
block|,
name|MEP_INSN_LHU16
block|,
name|MEP_INSN_SW24
block|,
name|MEP_INSN_LW24
block|,
name|MEP_INSN_EXTB
block|,
name|MEP_INSN_EXTH
block|,
name|MEP_INSN_EXTUB
block|,
name|MEP_INSN_EXTUH
block|,
name|MEP_INSN_SSARB
block|,
name|MEP_INSN_MOV
block|,
name|MEP_INSN_MOVI8
block|,
name|MEP_INSN_MOVI16
block|,
name|MEP_INSN_MOVU24
block|,
name|MEP_INSN_MOVU16
block|,
name|MEP_INSN_MOVH
block|,
name|MEP_INSN_ADD3
block|,
name|MEP_INSN_ADD
block|,
name|MEP_INSN_ADD3I
block|,
name|MEP_INSN_ADVCK3
block|,
name|MEP_INSN_SUB
block|,
name|MEP_INSN_SBVCK3
block|,
name|MEP_INSN_NEG
block|,
name|MEP_INSN_SLT3
block|,
name|MEP_INSN_SLTU3
block|,
name|MEP_INSN_SLT3I
block|,
name|MEP_INSN_SLTU3I
block|,
name|MEP_INSN_SL1AD3
block|,
name|MEP_INSN_SL2AD3
block|,
name|MEP_INSN_ADD3X
block|,
name|MEP_INSN_SLT3X
block|,
name|MEP_INSN_SLTU3X
block|,
name|MEP_INSN_OR
block|,
name|MEP_INSN_AND
block|,
name|MEP_INSN_XOR
block|,
name|MEP_INSN_NOR
block|,
name|MEP_INSN_OR3
block|,
name|MEP_INSN_AND3
block|,
name|MEP_INSN_XOR3
block|,
name|MEP_INSN_SRA
block|,
name|MEP_INSN_SRL
block|,
name|MEP_INSN_SLL
block|,
name|MEP_INSN_SRAI
block|,
name|MEP_INSN_SRLI
block|,
name|MEP_INSN_SLLI
block|,
name|MEP_INSN_SLL3
block|,
name|MEP_INSN_FSFT
block|,
name|MEP_INSN_BRA
block|,
name|MEP_INSN_BEQZ
block|,
name|MEP_INSN_BNEZ
block|,
name|MEP_INSN_BEQI
block|,
name|MEP_INSN_BNEI
block|,
name|MEP_INSN_BLTI
block|,
name|MEP_INSN_BGEI
block|,
name|MEP_INSN_BEQ
block|,
name|MEP_INSN_BNE
block|,
name|MEP_INSN_BSR12
block|,
name|MEP_INSN_BSR24
block|,
name|MEP_INSN_JMP
block|,
name|MEP_INSN_JMP24
block|,
name|MEP_INSN_JSR
block|,
name|MEP_INSN_RET
block|,
name|MEP_INSN_REPEAT
block|,
name|MEP_INSN_EREPEAT
block|,
name|MEP_INSN_STC_LP
block|,
name|MEP_INSN_STC_HI
block|,
name|MEP_INSN_STC_LO
block|,
name|MEP_INSN_STC
block|,
name|MEP_INSN_LDC_LP
block|,
name|MEP_INSN_LDC_HI
block|,
name|MEP_INSN_LDC_LO
block|,
name|MEP_INSN_LDC
block|,
name|MEP_INSN_DI
block|,
name|MEP_INSN_EI
block|,
name|MEP_INSN_RETI
block|,
name|MEP_INSN_HALT
block|,
name|MEP_INSN_SLEEP
block|,
name|MEP_INSN_SWI
block|,
name|MEP_INSN_BREAK
block|,
name|MEP_INSN_SYNCM
block|,
name|MEP_INSN_STCB
block|,
name|MEP_INSN_LDCB
block|,
name|MEP_INSN_BSETM
block|,
name|MEP_INSN_BCLRM
block|,
name|MEP_INSN_BNOTM
block|,
name|MEP_INSN_BTSTM
block|,
name|MEP_INSN_TAS
block|,
name|MEP_INSN_CACHE
block|,
name|MEP_INSN_MUL
block|,
name|MEP_INSN_MULU
block|,
name|MEP_INSN_MULR
block|,
name|MEP_INSN_MULRU
block|,
name|MEP_INSN_MADD
block|,
name|MEP_INSN_MADDU
block|,
name|MEP_INSN_MADDR
block|,
name|MEP_INSN_MADDRU
block|,
name|MEP_INSN_DIV
block|,
name|MEP_INSN_DIVU
block|,
name|MEP_INSN_DRET
block|,
name|MEP_INSN_DBREAK
block|,
name|MEP_INSN_LDZ
block|,
name|MEP_INSN_ABS
block|,
name|MEP_INSN_AVE
block|,
name|MEP_INSN_MIN
block|,
name|MEP_INSN_MAX
block|,
name|MEP_INSN_MINU
block|,
name|MEP_INSN_MAXU
block|,
name|MEP_INSN_CLIP
block|,
name|MEP_INSN_CLIPU
block|,
name|MEP_INSN_SADD
block|,
name|MEP_INSN_SSUB
block|,
name|MEP_INSN_SADDU
block|,
name|MEP_INSN_SSUBU
block|,
name|MEP_INSN_SWCP
block|,
name|MEP_INSN_LWCP
block|,
name|MEP_INSN_SMCP
block|,
name|MEP_INSN_LMCP
block|,
name|MEP_INSN_SWCPI
block|,
name|MEP_INSN_LWCPI
block|,
name|MEP_INSN_SMCPI
block|,
name|MEP_INSN_LMCPI
block|,
name|MEP_INSN_SWCP16
block|,
name|MEP_INSN_LWCP16
block|,
name|MEP_INSN_SMCP16
block|,
name|MEP_INSN_LMCP16
block|,
name|MEP_INSN_SBCPA
block|,
name|MEP_INSN_LBCPA
block|,
name|MEP_INSN_SHCPA
block|,
name|MEP_INSN_LHCPA
block|,
name|MEP_INSN_SWCPA
block|,
name|MEP_INSN_LWCPA
block|,
name|MEP_INSN_SMCPA
block|,
name|MEP_INSN_LMCPA
block|,
name|MEP_INSN_SBCPM0
block|,
name|MEP_INSN_LBCPM0
block|,
name|MEP_INSN_SHCPM0
block|,
name|MEP_INSN_LHCPM0
block|,
name|MEP_INSN_SWCPM0
block|,
name|MEP_INSN_LWCPM0
block|,
name|MEP_INSN_SMCPM0
block|,
name|MEP_INSN_LMCPM0
block|,
name|MEP_INSN_SBCPM1
block|,
name|MEP_INSN_LBCPM1
block|,
name|MEP_INSN_SHCPM1
block|,
name|MEP_INSN_LHCPM1
block|,
name|MEP_INSN_SWCPM1
block|,
name|MEP_INSN_LWCPM1
block|,
name|MEP_INSN_SMCPM1
block|,
name|MEP_INSN_LMCPM1
block|,
name|MEP_INSN_BCPEQ
block|,
name|MEP_INSN_BCPNE
block|,
name|MEP_INSN_BCPAT
block|,
name|MEP_INSN_BCPAF
block|,
name|MEP_INSN_SYNCCP
block|,
name|MEP_INSN_JSRV
block|,
name|MEP_INSN_BSRV
block|,
name|MEP_INSN_SIM_SYSCALL
block|,
name|MEP_INSN_RI_0
block|,
name|MEP_INSN_RI_1
block|,
name|MEP_INSN_RI_2
block|,
name|MEP_INSN_RI_3
block|,
name|MEP_INSN_RI_4
block|,
name|MEP_INSN_RI_5
block|,
name|MEP_INSN_RI_6
block|,
name|MEP_INSN_RI_7
block|,
name|MEP_INSN_RI_8
block|,
name|MEP_INSN_RI_9
block|,
name|MEP_INSN_RI_10
block|,
name|MEP_INSN_RI_11
block|,
name|MEP_INSN_RI_12
block|,
name|MEP_INSN_RI_13
block|,
name|MEP_INSN_RI_14
block|,
name|MEP_INSN_RI_15
block|,
name|MEP_INSN_RI_17
block|,
name|MEP_INSN_RI_20
block|,
name|MEP_INSN_RI_21
block|,
name|MEP_INSN_RI_22
block|,
name|MEP_INSN_RI_23
block|,
name|MEP_INSN_RI_24
block|,
name|MEP_INSN_RI_25
block|,
name|MEP_INSN_RI_26
block|,
name|MEP_INSN_RI_16
block|,
name|MEP_INSN_RI_18
block|,
name|MEP_INSN_RI_19
block|,
name|MEP_INSN_FADDS
block|,
name|MEP_INSN_FSUBS
block|,
name|MEP_INSN_FMULS
block|,
name|MEP_INSN_FDIVS
block|,
name|MEP_INSN_FSQRTS
block|,
name|MEP_INSN_FABSS
block|,
name|MEP_INSN_FNEGS
block|,
name|MEP_INSN_FMOVS
block|,
name|MEP_INSN_FROUNDWS
block|,
name|MEP_INSN_FTRUNCWS
block|,
name|MEP_INSN_FCEILWS
block|,
name|MEP_INSN_FFLOORWS
block|,
name|MEP_INSN_FCVTWS
block|,
name|MEP_INSN_FCVTSW
block|,
name|MEP_INSN_FCMPFS
block|,
name|MEP_INSN_FCMPUS
block|,
name|MEP_INSN_FCMPES
block|,
name|MEP_INSN_FCMPUES
block|,
name|MEP_INSN_FCMPLS
block|,
name|MEP_INSN_FCMPULS
block|,
name|MEP_INSN_FCMPLES
block|,
name|MEP_INSN_FCMPULES
block|,
name|MEP_INSN_FCMPFIS
block|,
name|MEP_INSN_FCMPUIS
block|,
name|MEP_INSN_FCMPEIS
block|,
name|MEP_INSN_FCMPUEIS
block|,
name|MEP_INSN_FCMPLIS
block|,
name|MEP_INSN_FCMPULIS
block|,
name|MEP_INSN_FCMPLEIS
block|,
name|MEP_INSN_FCMPULEIS
block|,
name|MEP_INSN_CMOV_FRN_RM
block|,
name|MEP_INSN_CMOV_RM_FRN
block|,
name|MEP_INSN_CMOVC_CCRN_RM
block|,
name|MEP_INSN_CMOVC_RM_CCRN
block|}
name|CGEN_INSN_TYPE
typedef|;
end_typedef

begin_comment
comment|/* Index of `invalid' insn place holder.  */
end_comment

begin_define
define|#
directive|define
name|CGEN_INSN_INVALID
value|MEP_INSN_INVALID
end_define

begin_comment
comment|/* Total number of insns in table.  */
end_comment

begin_define
define|#
directive|define
name|MAX_INSNS
value|((int) MEP_INSN_CMOVC_RM_CCRN + 1)
end_define

begin_comment
comment|/* This struct records data prior to insertion or after extraction.  */
end_comment

begin_struct
struct|struct
name|cgen_fields
block|{
name|int
name|length
decl_stmt|;
name|long
name|f_nil
decl_stmt|;
name|long
name|f_anyof
decl_stmt|;
name|long
name|f_major
decl_stmt|;
name|long
name|f_rn
decl_stmt|;
name|long
name|f_rn3
decl_stmt|;
name|long
name|f_rm
decl_stmt|;
name|long
name|f_rl
decl_stmt|;
name|long
name|f_sub2
decl_stmt|;
name|long
name|f_sub3
decl_stmt|;
name|long
name|f_sub4
decl_stmt|;
name|long
name|f_ext
decl_stmt|;
name|long
name|f_crn
decl_stmt|;
name|long
name|f_csrn_hi
decl_stmt|;
name|long
name|f_csrn_lo
decl_stmt|;
name|long
name|f_csrn
decl_stmt|;
name|long
name|f_crnx_hi
decl_stmt|;
name|long
name|f_crnx_lo
decl_stmt|;
name|long
name|f_crnx
decl_stmt|;
name|long
name|f_0
decl_stmt|;
name|long
name|f_1
decl_stmt|;
name|long
name|f_2
decl_stmt|;
name|long
name|f_3
decl_stmt|;
name|long
name|f_4
decl_stmt|;
name|long
name|f_5
decl_stmt|;
name|long
name|f_6
decl_stmt|;
name|long
name|f_7
decl_stmt|;
name|long
name|f_8
decl_stmt|;
name|long
name|f_9
decl_stmt|;
name|long
name|f_10
decl_stmt|;
name|long
name|f_11
decl_stmt|;
name|long
name|f_12
decl_stmt|;
name|long
name|f_13
decl_stmt|;
name|long
name|f_14
decl_stmt|;
name|long
name|f_15
decl_stmt|;
name|long
name|f_16
decl_stmt|;
name|long
name|f_17
decl_stmt|;
name|long
name|f_18
decl_stmt|;
name|long
name|f_19
decl_stmt|;
name|long
name|f_20
decl_stmt|;
name|long
name|f_21
decl_stmt|;
name|long
name|f_22
decl_stmt|;
name|long
name|f_23
decl_stmt|;
name|long
name|f_24
decl_stmt|;
name|long
name|f_25
decl_stmt|;
name|long
name|f_26
decl_stmt|;
name|long
name|f_27
decl_stmt|;
name|long
name|f_28
decl_stmt|;
name|long
name|f_29
decl_stmt|;
name|long
name|f_30
decl_stmt|;
name|long
name|f_31
decl_stmt|;
name|long
name|f_8s8a2
decl_stmt|;
name|long
name|f_12s4a2
decl_stmt|;
name|long
name|f_17s16a2
decl_stmt|;
name|long
name|f_24s5a2n_hi
decl_stmt|;
name|long
name|f_24s5a2n_lo
decl_stmt|;
name|long
name|f_24s5a2n
decl_stmt|;
name|long
name|f_24u5a2n_hi
decl_stmt|;
name|long
name|f_24u5a2n_lo
decl_stmt|;
name|long
name|f_24u5a2n
decl_stmt|;
name|long
name|f_2u6
decl_stmt|;
name|long
name|f_7u9
decl_stmt|;
name|long
name|f_7u9a2
decl_stmt|;
name|long
name|f_7u9a4
decl_stmt|;
name|long
name|f_16s16
decl_stmt|;
name|long
name|f_2u10
decl_stmt|;
name|long
name|f_3u5
decl_stmt|;
name|long
name|f_4u8
decl_stmt|;
name|long
name|f_5u8
decl_stmt|;
name|long
name|f_5u24
decl_stmt|;
name|long
name|f_6s8
decl_stmt|;
name|long
name|f_8s8
decl_stmt|;
name|long
name|f_16u16
decl_stmt|;
name|long
name|f_12u16
decl_stmt|;
name|long
name|f_3u29
decl_stmt|;
name|long
name|f_8s24
decl_stmt|;
name|long
name|f_8s24a2
decl_stmt|;
name|long
name|f_8s24a4
decl_stmt|;
name|long
name|f_8s24a8
decl_stmt|;
name|long
name|f_24u8a4n_hi
decl_stmt|;
name|long
name|f_24u8a4n_lo
decl_stmt|;
name|long
name|f_24u8a4n
decl_stmt|;
name|long
name|f_24u8n_hi
decl_stmt|;
name|long
name|f_24u8n_lo
decl_stmt|;
name|long
name|f_24u8n
decl_stmt|;
name|long
name|f_24u4n_hi
decl_stmt|;
name|long
name|f_24u4n_lo
decl_stmt|;
name|long
name|f_24u4n
decl_stmt|;
name|long
name|f_callnum
decl_stmt|;
name|long
name|f_ccrn_hi
decl_stmt|;
name|long
name|f_ccrn_lo
decl_stmt|;
name|long
name|f_ccrn
decl_stmt|;
name|long
name|f_fmax_0_4
decl_stmt|;
name|long
name|f_fmax_4_4
decl_stmt|;
name|long
name|f_fmax_8_4
decl_stmt|;
name|long
name|f_fmax_12_4
decl_stmt|;
name|long
name|f_fmax_16_4
decl_stmt|;
name|long
name|f_fmax_20_4
decl_stmt|;
name|long
name|f_fmax_24_4
decl_stmt|;
name|long
name|f_fmax_28_1
decl_stmt|;
name|long
name|f_fmax_29_1
decl_stmt|;
name|long
name|f_fmax_30_1
decl_stmt|;
name|long
name|f_fmax_31_1
decl_stmt|;
name|long
name|f_fmax_frd
decl_stmt|;
name|long
name|f_fmax_frn
decl_stmt|;
name|long
name|f_fmax_frm
decl_stmt|;
name|long
name|f_fmax_rm
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|CGEN_INIT_PARSE
parameter_list|(
name|od
parameter_list|)
define|\
value|{\ }
end_define

begin_define
define|#
directive|define
name|CGEN_INIT_INSERT
parameter_list|(
name|od
parameter_list|)
define|\
value|{\ }
end_define

begin_define
define|#
directive|define
name|CGEN_INIT_EXTRACT
parameter_list|(
name|od
parameter_list|)
define|\
value|{\ }
end_define

begin_define
define|#
directive|define
name|CGEN_INIT_PRINT
parameter_list|(
name|od
parameter_list|)
define|\
value|{\ }
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* MEP_OPC_H */
end_comment

end_unit

