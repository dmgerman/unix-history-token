begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|RADIUS_H
end_ifndef

begin_define
define|#
directive|define
name|RADIUS_H
end_define

begin_comment
comment|/* RFC 2865 - RADIUS */
end_comment

begin_struct
struct|struct
name|radius_hdr
block|{
name|u8
name|code
decl_stmt|;
name|u8
name|identifier
decl_stmt|;
name|u16
name|length
decl_stmt|;
comment|/* including this header */
name|u8
name|authenticator
index|[
literal|16
index|]
decl_stmt|;
comment|/* followed by length-20 octets of attributes */
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_enum
enum|enum
block|{
name|RADIUS_CODE_ACCESS_REQUEST
init|=
literal|1
block|,
name|RADIUS_CODE_ACCESS_ACCEPT
init|=
literal|2
block|,
name|RADIUS_CODE_ACCESS_REJECT
init|=
literal|3
block|,
name|RADIUS_CODE_ACCOUNTING_REQUEST
init|=
literal|4
block|,
name|RADIUS_CODE_ACCOUNTING_RESPONSE
init|=
literal|5
block|,
name|RADIUS_CODE_ACCESS_CHALLENGE
init|=
literal|11
block|,
name|RADIUS_CODE_STATUS_SERVER
init|=
literal|12
block|,
name|RADIUS_CODE_STATUS_CLIENT
init|=
literal|13
block|,
name|RADIUS_CODE_RESERVED
init|=
literal|255
block|}
enum|;
end_enum

begin_struct
struct|struct
name|radius_attr_hdr
block|{
name|u8
name|type
decl_stmt|;
name|u8
name|length
decl_stmt|;
comment|/* including this header */
comment|/* followed by length-2 octets of attribute value */
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_define
define|#
directive|define
name|RADIUS_MAX_ATTR_LEN
value|(255 - sizeof(struct radius_attr_hdr))
end_define

begin_enum
enum|enum
block|{
name|RADIUS_ATTR_USER_NAME
init|=
literal|1
block|,
name|RADIUS_ATTR_USER_PASSWORD
init|=
literal|2
block|,
name|RADIUS_ATTR_NAS_IP_ADDRESS
init|=
literal|4
block|,
name|RADIUS_ATTR_NAS_PORT
init|=
literal|5
block|,
name|RADIUS_ATTR_FRAMED_MTU
init|=
literal|12
block|,
name|RADIUS_ATTR_STATE
init|=
literal|24
block|,
name|RADIUS_ATTR_CLASS
init|=
literal|25
block|,
name|RADIUS_ATTR_VENDOR_SPECIFIC
init|=
literal|26
block|,
name|RADIUS_ATTR_SESSION_TIMEOUT
init|=
literal|27
block|,
name|RADIUS_ATTR_IDLE_TIMEOUT
init|=
literal|28
block|,
name|RADIUS_ATTR_TERMINATION_ACTION
init|=
literal|29
block|,
name|RADIUS_ATTR_CALLED_STATION_ID
init|=
literal|30
block|,
name|RADIUS_ATTR_CALLING_STATION_ID
init|=
literal|31
block|,
name|RADIUS_ATTR_NAS_IDENTIFIER
init|=
literal|32
block|,
name|RADIUS_ATTR_ACCT_STATUS_TYPE
init|=
literal|40
block|,
name|RADIUS_ATTR_ACCT_DELAY_TIME
init|=
literal|41
block|,
name|RADIUS_ATTR_ACCT_INPUT_OCTETS
init|=
literal|42
block|,
name|RADIUS_ATTR_ACCT_OUTPUT_OCTETS
init|=
literal|43
block|,
name|RADIUS_ATTR_ACCT_SESSION_ID
init|=
literal|44
block|,
name|RADIUS_ATTR_ACCT_AUTHENTIC
init|=
literal|45
block|,
name|RADIUS_ATTR_ACCT_SESSION_TIME
init|=
literal|46
block|,
name|RADIUS_ATTR_ACCT_INPUT_PACKETS
init|=
literal|47
block|,
name|RADIUS_ATTR_ACCT_OUTPUT_PACKETS
init|=
literal|48
block|,
name|RADIUS_ATTR_ACCT_TERMINATE_CAUSE
init|=
literal|49
block|,
name|RADIUS_ATTR_ACCT_MULTI_SESSION_ID
init|=
literal|50
block|,
name|RADIUS_ATTR_ACCT_LINK_COUNT
init|=
literal|51
block|,
name|RADIUS_ATTR_ACCT_INPUT_GIGAWORDS
init|=
literal|52
block|,
name|RADIUS_ATTR_ACCT_OUTPUT_GIGAWORDS
init|=
literal|53
block|,
name|RADIUS_ATTR_EVENT_TIMESTAMP
init|=
literal|55
block|,
name|RADIUS_ATTR_NAS_PORT_TYPE
init|=
literal|61
block|,
name|RADIUS_ATTR_CONNECT_INFO
init|=
literal|77
block|,
name|RADIUS_ATTR_EAP_MESSAGE
init|=
literal|79
block|,
name|RADIUS_ATTR_MESSAGE_AUTHENTICATOR
init|=
literal|80
block|,
name|RADIUS_ATTR_ACCT_INTERIM_INTERVAL
init|=
literal|85
block|,
name|RADIUS_ATTR_NAS_IPV6_ADDRESS
init|=
literal|95
block|}
enum|;
end_enum

begin_comment
comment|/* Termination-Action */
end_comment

begin_define
define|#
directive|define
name|RADIUS_TERMINATION_ACTION_DEFAULT
value|0
end_define

begin_define
define|#
directive|define
name|RADIUS_TERMINATION_ACTION_RADIUS_REQUEST
value|1
end_define

begin_comment
comment|/* NAS-Port-Type */
end_comment

begin_define
define|#
directive|define
name|RADIUS_NAS_PORT_TYPE_IEEE_802_11
value|19
end_define

begin_comment
comment|/* Acct-Status-Type */
end_comment

begin_define
define|#
directive|define
name|RADIUS_ACCT_STATUS_TYPE_START
value|1
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_STATUS_TYPE_STOP
value|2
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_STATUS_TYPE_INTERIM_UPDATE
value|3
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_STATUS_TYPE_ACCOUNTING_ON
value|7
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_STATUS_TYPE_ACCOUNTING_OFF
value|8
end_define

begin_comment
comment|/* Acct-Authentic */
end_comment

begin_define
define|#
directive|define
name|RADIUS_ACCT_AUTHENTIC_RADIUS
value|1
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_AUTHENTIC_LOCAL
value|2
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_AUTHENTIC_REMOTE
value|3
end_define

begin_comment
comment|/* Acct-Terminate-Cause */
end_comment

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_USER_REQUEST
value|1
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_LOST_CARRIER
value|2
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_LOST_SERVICE
value|3
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_IDLE_TIMEOUT
value|4
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_SESSION_TIMEOUT
value|5
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_ADMIN_RESET
value|6
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_ADMIN_REBOOT
value|7
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_PORT_ERROR
value|8
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_NAS_ERROR
value|9
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_NAS_REQUEST
value|10
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_NAS_REBOOT
value|11
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_PORT_UNNEEDED
value|12
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_PORT_PREEMPTED
value|13
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_PORT_SUSPENDED
value|14
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_SERVICE_UNAVAILABLE
value|15
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_CALLBACK
value|16
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_USER_ERROR
value|17
end_define

begin_define
define|#
directive|define
name|RADIUS_ACCT_TERMINATE_CAUSE_HOST_REQUEST
value|18
end_define

begin_struct
struct|struct
name|radius_attr_vendor
block|{
name|u8
name|vendor_type
decl_stmt|;
name|u8
name|vendor_length
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_define
define|#
directive|define
name|RADIUS_VENDOR_ID_CISCO
value|9
end_define

begin_define
define|#
directive|define
name|RADIUS_CISCO_AV_PAIR
value|1
end_define

begin_comment
comment|/* RFC 2548 - Microsoft Vendor-specific RADIUS Attributes */
end_comment

begin_define
define|#
directive|define
name|RADIUS_VENDOR_ID_MICROSOFT
value|311
end_define

begin_enum
enum|enum
block|{
name|RADIUS_VENDOR_ATTR_MS_MPPE_SEND_KEY
init|=
literal|16
block|,
name|RADIUS_VENDOR_ATTR_MS_MPPE_RECV_KEY
init|=
literal|17
block|}
enum|;
end_enum

begin_struct
struct|struct
name|radius_ms_mppe_keys
block|{
name|u8
modifier|*
name|send
decl_stmt|;
name|size_t
name|send_len
decl_stmt|;
name|u8
modifier|*
name|recv
decl_stmt|;
name|size_t
name|recv_len
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* RADIUS message structure for new and parsed messages */
end_comment

begin_struct
struct|struct
name|radius_msg
block|{
name|unsigned
name|char
modifier|*
name|buf
decl_stmt|;
name|size_t
name|buf_size
decl_stmt|;
comment|/* total size allocated for buf */
name|size_t
name|buf_used
decl_stmt|;
comment|/* bytes used in buf */
name|struct
name|radius_hdr
modifier|*
name|hdr
decl_stmt|;
name|struct
name|radius_attr_hdr
modifier|*
modifier|*
name|attrs
decl_stmt|;
comment|/* array of pointers to attributes */
name|size_t
name|attr_size
decl_stmt|;
comment|/* total size of the attribute pointer array */
name|size_t
name|attr_used
decl_stmt|;
comment|/* total number of attributes in the array */
block|}
struct|;
end_struct

begin_comment
comment|/* Default size to be allocated for new RADIUS messages */
end_comment

begin_define
define|#
directive|define
name|RADIUS_DEFAULT_MSG_SIZE
value|1024
end_define

begin_comment
comment|/* Default size to be allocated for attribute array */
end_comment

begin_define
define|#
directive|define
name|RADIUS_DEFAULT_ATTR_COUNT
value|16
end_define

begin_comment
comment|/* MAC address ASCII format for IEEE 802.1X use  * (draft-congdon-radius-8021x-20.txt) */
end_comment

begin_define
define|#
directive|define
name|RADIUS_802_1X_ADDR_FORMAT
value|"%02X-%02X-%02X-%02X-%02X-%02X"
end_define

begin_comment
comment|/* MAC address ASCII format for non-802.1X use */
end_comment

begin_define
define|#
directive|define
name|RADIUS_ADDR_FORMAT
value|"%02x%02x%02x%02x%02x%02x"
end_define

begin_function_decl
name|struct
name|radius_msg
modifier|*
name|radius_msg_new
parameter_list|(
name|u8
name|code
parameter_list|,
name|u8
name|identifier
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radius_msg_initialize
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|size_t
name|init_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radius_msg_set_hdr
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|u8
name|code
parameter_list|,
name|u8
name|identifier
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radius_msg_free
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radius_msg_dump
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radius_msg_finish
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|u8
modifier|*
name|secret
parameter_list|,
name|size_t
name|secret_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radius_msg_finish_srv
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
specifier|const
name|u8
modifier|*
name|secret
parameter_list|,
name|size_t
name|secret_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|req_authenticator
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radius_msg_finish_acct
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|u8
modifier|*
name|secret
parameter_list|,
name|size_t
name|secret_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|radius_attr_hdr
modifier|*
name|radius_msg_add_attr
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|u8
name|type
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|radius_msg
modifier|*
name|radius_msg_parse
parameter_list|(
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radius_msg_add_eap
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
modifier|*
name|radius_msg_get_eap
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|size_t
modifier|*
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radius_msg_verify
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
specifier|const
name|u8
modifier|*
name|secret
parameter_list|,
name|size_t
name|secret_len
parameter_list|,
name|struct
name|radius_msg
modifier|*
name|sent_msg
parameter_list|,
name|int
name|auth
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radius_msg_verify_msg_auth
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
specifier|const
name|u8
modifier|*
name|secret
parameter_list|,
name|size_t
name|secret_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|req_auth
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radius_msg_copy_attr
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|dst
parameter_list|,
name|struct
name|radius_msg
modifier|*
name|src
parameter_list|,
name|u8
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|radius_msg_make_authenticator
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|radius_ms_mppe_keys
modifier|*
name|radius_msg_get_ms_keys
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|struct
name|radius_msg
modifier|*
name|sent_msg
parameter_list|,
name|u8
modifier|*
name|secret
parameter_list|,
name|size_t
name|secret_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|radius_ms_mppe_keys
modifier|*
name|radius_msg_get_cisco_keys
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|struct
name|radius_msg
modifier|*
name|sent_msg
parameter_list|,
name|u8
modifier|*
name|secret
parameter_list|,
name|size_t
name|secret_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radius_msg_add_mppe_keys
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
specifier|const
name|u8
modifier|*
name|req_authenticator
parameter_list|,
specifier|const
name|u8
modifier|*
name|secret
parameter_list|,
name|size_t
name|secret_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|send_key
parameter_list|,
name|size_t
name|send_key_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|recv_key
parameter_list|,
name|size_t
name|recv_key_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|radius_attr_hdr
modifier|*
name|radius_msg_add_attr_user_password
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|u8
modifier|*
name|secret
parameter_list|,
name|size_t
name|secret_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radius_msg_get_attr
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|u8
name|type
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|int
name|radius_msg_add_attr_int32
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|u8
name|type
parameter_list|,
name|u32
name|value
parameter_list|)
block|{
name|u32
name|val
init|=
name|htonl
argument_list|(
name|value
argument_list|)
decl_stmt|;
return|return
name|radius_msg_add_attr
argument_list|(
name|msg
argument_list|,
name|type
argument_list|,
operator|(
name|u8
operator|*
operator|)
operator|&
name|val
argument_list|,
literal|4
argument_list|)
operator|!=
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|radius_msg_get_attr_int32
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|u8
name|type
parameter_list|,
name|u32
modifier|*
name|value
parameter_list|)
block|{
name|u32
name|val
decl_stmt|;
name|int
name|res
decl_stmt|;
name|res
operator|=
name|radius_msg_get_attr
argument_list|(
name|msg
argument_list|,
name|type
argument_list|,
operator|(
name|u8
operator|*
operator|)
operator|&
name|val
argument_list|,
literal|4
argument_list|)
expr_stmt|;
if|if
condition|(
name|res
operator|!=
literal|4
condition|)
return|return
operator|-
literal|1
return|;
operator|*
name|value
operator|=
name|ntohl
argument_list|(
name|val
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
end_function

begin_function_decl
name|int
name|radius_msg_get_attr_ptr
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|u8
name|type
parameter_list|,
name|u8
modifier|*
modifier|*
name|buf
parameter_list|,
name|size_t
modifier|*
name|len
parameter_list|,
specifier|const
name|u8
modifier|*
name|start
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|radius_msg_count_attr
parameter_list|(
name|struct
name|radius_msg
modifier|*
name|msg
parameter_list|,
name|u8
name|type
parameter_list|,
name|int
name|min_len
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* RADIUS_H */
end_comment

end_unit

