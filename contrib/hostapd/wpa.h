begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|WPA_H
end_ifndef

begin_define
define|#
directive|define
name|WPA_H
end_define

begin_define
define|#
directive|define
name|WPA_NONCE_LEN
value|32
end_define

begin_define
define|#
directive|define
name|WPA_PMK_LEN
value|PMK_LEN
end_define

begin_define
define|#
directive|define
name|WPA_REPLAY_COUNTER_LEN
value|8
end_define

begin_define
define|#
directive|define
name|WPA_GMK_LEN
value|32
end_define

begin_define
define|#
directive|define
name|WPA_GTK_MAX_LEN
value|32
end_define

begin_define
define|#
directive|define
name|WPA_KEY_RSC_LEN
value|8
end_define

begin_define
define|#
directive|define
name|PMKID_LEN
value|16
end_define

begin_struct
struct|struct
name|rsn_pmksa_cache
block|{
name|struct
name|rsn_pmksa_cache
modifier|*
name|next
decl_stmt|,
modifier|*
name|hnext
decl_stmt|;
name|u8
name|pmkid
index|[
name|PMKID_LEN
index|]
decl_stmt|;
name|u8
name|pmk
index|[
name|PMK_LEN
index|]
decl_stmt|;
name|time_t
name|expiration
decl_stmt|;
name|int
name|akmp
decl_stmt|;
comment|/* WPA_KEY_MGMT_* */
name|u8
name|spa
index|[
name|ETH_ALEN
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rsn_preauth_interface
block|{
name|struct
name|rsn_preauth_interface
modifier|*
name|next
decl_stmt|;
name|struct
name|hostapd_data
modifier|*
name|hapd
decl_stmt|;
name|struct
name|l2_packet_data
modifier|*
name|l2
decl_stmt|;
name|char
modifier|*
name|ifname
decl_stmt|;
name|int
name|ifindex
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|wpa_eapol_key
block|{
name|u8
name|type
decl_stmt|;
name|u16
name|key_info
decl_stmt|;
name|u16
name|key_length
decl_stmt|;
name|u8
name|replay_counter
index|[
name|WPA_REPLAY_COUNTER_LEN
index|]
decl_stmt|;
name|u8
name|key_nonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|key_iv
index|[
literal|16
index|]
decl_stmt|;
name|u8
name|key_rsc
index|[
name|WPA_KEY_RSC_LEN
index|]
decl_stmt|;
name|u8
name|key_id
index|[
literal|8
index|]
decl_stmt|;
comment|/* Reserved */
name|u8
name|key_mic
index|[
literal|16
index|]
decl_stmt|;
name|u16
name|key_data_length
decl_stmt|;
comment|/* followed by key_data_length bytes of key_data */
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_define
define|#
directive|define
name|WPA_KEY_INFO_TYPE_MASK
value|(BIT(0) | BIT(1) | BIT(2))
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_TYPE_HMAC_MD5_RC4
value|BIT(0)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_TYPE_HMAC_SHA1_AES
value|BIT(1)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_KEY_TYPE
value|BIT(3)
end_define

begin_comment
comment|/* 1 = Pairwise, 0 = Group key */
end_comment

begin_comment
comment|/* bit4..5 is used in WPA, but is reserved in IEEE 802.11i/RSN */
end_comment

begin_define
define|#
directive|define
name|WPA_KEY_INFO_KEY_INDEX_MASK
value|(BIT(4) | BIT(5))
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_KEY_INDEX_SHIFT
value|4
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_INSTALL
value|BIT(6)
end_define

begin_comment
comment|/* pairwise */
end_comment

begin_define
define|#
directive|define
name|WPA_KEY_INFO_TXRX
value|BIT(6)
end_define

begin_comment
comment|/* group */
end_comment

begin_define
define|#
directive|define
name|WPA_KEY_INFO_ACK
value|BIT(7)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_MIC
value|BIT(8)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_SECURE
value|BIT(9)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_ERROR
value|BIT(10)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_REQUEST
value|BIT(11)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_ENCR_KEY_DATA
value|BIT(12)
end_define

begin_comment
comment|/* per STA state machine data */
end_comment

begin_struct
struct|struct
name|wpa_ptk
block|{
name|u8
name|mic_key
index|[
literal|16
index|]
decl_stmt|;
comment|/* EAPOL-Key MIC Key (MK) */
name|u8
name|encr_key
index|[
literal|16
index|]
decl_stmt|;
comment|/* EAPOL-Key Encryption Key (EK) */
name|u8
name|tk1
index|[
literal|16
index|]
decl_stmt|;
comment|/* Temporal Key 1 (TK1) */
union|union
block|{
name|u8
name|tk2
index|[
literal|16
index|]
decl_stmt|;
comment|/* Temporal Key 2 (TK2) */
struct|struct
block|{
name|u8
name|tx_mic_key
index|[
literal|8
index|]
decl_stmt|;
name|u8
name|rx_mic_key
index|[
literal|8
index|]
decl_stmt|;
block|}
name|auth
struct|;
block|}
name|u
union|;
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_struct
struct|struct
name|wpa_state_machine
block|{
name|struct
name|hostapd_data
modifier|*
name|hapd
decl_stmt|;
name|struct
name|sta_info
modifier|*
name|sta
decl_stmt|;
enum|enum
block|{
name|WPA_PTK_INITIALIZE
block|,
name|WPA_PTK_DISCONNECT
block|,
name|WPA_PTK_DISCONNECTED
block|,
name|WPA_PTK_AUTHENTICATION
block|,
name|WPA_PTK_AUTHENTICATION2
block|,
name|WPA_PTK_INITPMK
block|,
name|WPA_PTK_INITPSK
block|,
name|WPA_PTK_PTKSTART
block|,
name|WPA_PTK_PTKCALCNEGOTIATING
block|,
name|WPA_PTK_PTKCALCNEGOTIATING2
block|,
name|WPA_PTK_PTKINITNEGOTIATING
block|,
name|WPA_PTK_PTKINITDONE
block|}
name|wpa_ptk_state
enum|;
enum|enum
block|{
name|WPA_PTK_GROUP_IDLE
init|=
literal|0
block|,
name|WPA_PTK_GROUP_REKEYNEGOTIATING
block|,
name|WPA_PTK_GROUP_REKEYESTABLISHED
block|,
name|WPA_PTK_GROUP_KEYERROR
block|}
name|wpa_ptk_group_state
enum|;
name|Boolean
name|Init
decl_stmt|;
name|Boolean
name|DeauthenticationRequest
decl_stmt|;
name|Boolean
name|AuthenticationRequest
decl_stmt|;
name|Boolean
name|ReAuthenticationRequest
decl_stmt|;
name|Boolean
name|Disconnect
decl_stmt|;
name|int
name|TimeoutCtr
decl_stmt|;
name|int
name|GTimeoutCtr
decl_stmt|;
name|Boolean
name|TimeoutEvt
decl_stmt|;
name|Boolean
name|EAPOLKeyReceived
decl_stmt|;
name|Boolean
name|EAPOLKeyPairwise
decl_stmt|;
name|Boolean
name|EAPOLKeyRequest
decl_stmt|;
name|Boolean
name|MICVerified
decl_stmt|;
name|Boolean
name|GUpdateStationKeys
decl_stmt|;
name|u8
name|ANonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|SNonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|PMK
index|[
name|WPA_PMK_LEN
index|]
decl_stmt|;
name|struct
name|wpa_ptk
name|PTK
decl_stmt|;
name|Boolean
name|PTK_valid
decl_stmt|;
name|Boolean
name|pairwise_set
decl_stmt|;
name|int
name|keycount
decl_stmt|;
name|Boolean
name|Pair
decl_stmt|;
name|u8
name|key_replay_counter
index|[
name|WPA_REPLAY_COUNTER_LEN
index|]
decl_stmt|;
name|Boolean
name|key_replay_counter_valid
decl_stmt|;
name|Boolean
name|PInitAKeys
decl_stmt|;
comment|/* WPA only, not in IEEE 802.11i/D8 */
name|Boolean
name|PTKRequest
decl_stmt|;
comment|/* not in IEEE 802.11i state machine */
name|Boolean
name|has_GTK
decl_stmt|;
name|u8
modifier|*
name|last_rx_eapol_key
decl_stmt|;
comment|/* starting from IEEE 802.1X header */
name|size_t
name|last_rx_eapol_key_len
decl_stmt|;
name|Boolean
name|changed
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* per authenticator data */
end_comment

begin_struct
struct|struct
name|wpa_authenticator
block|{
name|Boolean
name|GInit
decl_stmt|;
name|int
name|GNoStations
decl_stmt|;
name|int
name|GKeyDoneStations
decl_stmt|;
name|Boolean
name|GTKReKey
decl_stmt|;
name|int
name|GTK_len
decl_stmt|;
name|int
name|GN
decl_stmt|,
name|GM
decl_stmt|;
name|Boolean
name|GTKAuthenticator
decl_stmt|;
name|u8
name|Counter
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
enum|enum
block|{
name|WPA_GROUP_GTK_INIT
init|=
literal|0
block|,
name|WPA_GROUP_SETKEYS
block|,
name|WPA_GROUP_SETKEYSDONE
block|}
name|wpa_group_state
enum|;
name|u8
name|GMK
index|[
name|WPA_GMK_LEN
index|]
decl_stmt|;
name|u8
name|GTK
index|[
literal|2
index|]
index|[
name|WPA_GTK_MAX_LEN
index|]
decl_stmt|;
name|u8
name|GNonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
name|Boolean
name|changed
decl_stmt|;
name|unsigned
name|int
name|dot11RSNAStatsTKIPRemoteMICFailures
decl_stmt|;
name|u8
name|dot11RSNAAuthenticationSuiteSelected
index|[
literal|4
index|]
decl_stmt|;
name|u8
name|dot11RSNAPairwiseCipherSelected
index|[
literal|4
index|]
decl_stmt|;
name|u8
name|dot11RSNAGroupCipherSelected
index|[
literal|4
index|]
decl_stmt|;
name|u8
name|dot11RSNAPMKIDUsed
index|[
name|PMKID_LEN
index|]
decl_stmt|;
name|u8
name|dot11RSNAAuthenticationSuiteRequested
index|[
literal|4
index|]
decl_stmt|;
comment|/* FIX: update */
name|u8
name|dot11RSNAPairwiseCipherRequested
index|[
literal|4
index|]
decl_stmt|;
comment|/* FIX: update */
name|u8
name|dot11RSNAGroupCipherRequested
index|[
literal|4
index|]
decl_stmt|;
comment|/* FIX: update */
name|unsigned
name|int
name|dot11RSNATKIPCounterMeasuresInvoked
decl_stmt|;
name|unsigned
name|int
name|dot11RSNA4WayHandshakeFailures
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|wpa_init
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_deinit
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
function_decl|;
end_function_decl

begin_enum
enum|enum
block|{
name|WPA_IE_OK
block|,
name|WPA_INVALID_IE
block|,
name|WPA_INVALID_GROUP
block|,
name|WPA_INVALID_PAIRWISE
block|,
name|WPA_INVALID_AKMP
block|}
enum|;
end_enum

begin_function_decl
name|int
name|wpa_validate_wpa_ie
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|,
name|u8
modifier|*
name|wpa_ie
parameter_list|,
name|size_t
name|wpa_ie_len
parameter_list|,
name|int
name|version
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_new_station
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_free_station
parameter_list|(
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_receive
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|,
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|)
function_decl|;
end_function_decl

begin_typedef
typedef|typedef
enum|enum
block|{
name|WPA_AUTH
block|,
name|WPA_ASSOC
block|,
name|WPA_DISASSOC
block|,
name|WPA_DEAUTH
block|,
name|WPA_REAUTH
block|,
name|WPA_REAUTH_EAPOL
block|}
name|wpa_event
typedef|;
end_typedef

begin_function_decl
name|void
name|wpa_sm_event
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|,
name|wpa_event
name|event
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_sm_notify
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|pmksa_cache_add
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|,
name|u8
modifier|*
name|pmk
parameter_list|,
name|int
name|session_timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rsn_preauth_finished
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|,
name|int
name|success
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rsn_preauth_send
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_gtk_rekey
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_get_mib
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|buflen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_get_mib_sta
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|buflen
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WPA_H */
end_comment

end_unit

