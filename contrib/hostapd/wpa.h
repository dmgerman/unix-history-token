begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * hostapd - IEEE 802.11i-2004 / WPA Authenticator  * Copyright (c) 2004-2006, Jouni Malinen<j@w1.fi>  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License version 2 as  * published by the Free Software Foundation.  *  * Alternatively, this software may be distributed under the terms of BSD  * license.  *  * See README and COPYING for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|WPA_H
end_ifndef

begin_define
define|#
directive|define
name|WPA_H
end_define

begin_include
include|#
directive|include
file|"wpa_common.h"
end_include

begin_define
define|#
directive|define
name|WPA_PMK_LEN
value|PMK_LEN
end_define

begin_define
define|#
directive|define
name|WPA_GMK_LEN
value|32
end_define

begin_define
define|#
directive|define
name|WPA_GTK_MAX_LEN
value|32
end_define

begin_define
define|#
directive|define
name|PMKID_LEN
value|16
end_define

begin_define
define|#
directive|define
name|WPA_CAPABILITY_PREAUTH
value|BIT(0)
end_define

begin_define
define|#
directive|define
name|WPA_CAPABILITY_MGMT_FRAME_PROTECTION
value|BIT(6)
end_define

begin_define
define|#
directive|define
name|WPA_CAPABILITY_PEERKEY_ENABLED
value|BIT(9)
end_define

begin_struct
struct|struct
name|wpa_eapol_key
block|{
name|u8
name|type
decl_stmt|;
name|u16
name|key_info
decl_stmt|;
name|u16
name|key_length
decl_stmt|;
name|u8
name|replay_counter
index|[
name|WPA_REPLAY_COUNTER_LEN
index|]
decl_stmt|;
name|u8
name|key_nonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|key_iv
index|[
literal|16
index|]
decl_stmt|;
name|u8
name|key_rsc
index|[
name|WPA_KEY_RSC_LEN
index|]
decl_stmt|;
name|u8
name|key_id
index|[
literal|8
index|]
decl_stmt|;
comment|/* Reserved */
name|u8
name|key_mic
index|[
literal|16
index|]
decl_stmt|;
name|u16
name|key_data_length
decl_stmt|;
comment|/* followed by key_data_length bytes of key_data */
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_define
define|#
directive|define
name|WPA_KEY_INFO_TYPE_MASK
value|(BIT(0) | BIT(1) | BIT(2))
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_TYPE_HMAC_MD5_RC4
value|BIT(0)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_TYPE_HMAC_SHA1_AES
value|BIT(1)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_KEY_TYPE
value|BIT(3)
end_define

begin_comment
comment|/* 1 = Pairwise, 0 = Group key */
end_comment

begin_comment
comment|/* bit4..5 is used in WPA, but is reserved in IEEE 802.11i/RSN */
end_comment

begin_define
define|#
directive|define
name|WPA_KEY_INFO_KEY_INDEX_MASK
value|(BIT(4) | BIT(5))
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_KEY_INDEX_SHIFT
value|4
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_INSTALL
value|BIT(6)
end_define

begin_comment
comment|/* pairwise */
end_comment

begin_define
define|#
directive|define
name|WPA_KEY_INFO_TXRX
value|BIT(6)
end_define

begin_comment
comment|/* group */
end_comment

begin_define
define|#
directive|define
name|WPA_KEY_INFO_ACK
value|BIT(7)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_MIC
value|BIT(8)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_SECURE
value|BIT(9)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_ERROR
value|BIT(10)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_REQUEST
value|BIT(11)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_ENCR_KEY_DATA
value|BIT(12)
end_define

begin_define
define|#
directive|define
name|WPA_KEY_INFO_SMK_MESSAGE
value|BIT(13)
end_define

begin_comment
comment|/* per STA state machine data */
end_comment

begin_struct
struct|struct
name|wpa_ptk
block|{
name|u8
name|mic_key
index|[
literal|16
index|]
decl_stmt|;
comment|/* EAPOL-Key MIC Key (MK) */
name|u8
name|encr_key
index|[
literal|16
index|]
decl_stmt|;
comment|/* EAPOL-Key Encryption Key (EK) */
name|u8
name|tk1
index|[
literal|16
index|]
decl_stmt|;
comment|/* Temporal Key 1 (TK1) */
union|union
block|{
name|u8
name|tk2
index|[
literal|16
index|]
decl_stmt|;
comment|/* Temporal Key 2 (TK2) */
struct|struct
block|{
name|u8
name|tx_mic_key
index|[
literal|8
index|]
decl_stmt|;
name|u8
name|rx_mic_key
index|[
literal|8
index|]
decl_stmt|;
block|}
name|auth
struct|;
block|}
name|u
union|;
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|wpa_authenticator
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|wpa_state_machine
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|rsn_pmksa_cache_entry
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|wpa_auth_config
block|{
name|int
name|wpa
decl_stmt|;
name|int
name|wpa_key_mgmt
decl_stmt|;
name|int
name|wpa_pairwise
decl_stmt|;
name|int
name|wpa_group
decl_stmt|;
name|int
name|wpa_group_rekey
decl_stmt|;
name|int
name|wpa_strict_rekey
decl_stmt|;
name|int
name|wpa_gmk_rekey
decl_stmt|;
name|int
name|rsn_preauth
decl_stmt|;
name|int
name|eapol_version
decl_stmt|;
name|int
name|peerkey
decl_stmt|;
name|int
name|wme_enabled
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_IEEE80211W
enum|enum
block|{
name|WPA_NO_IEEE80211W
init|=
literal|0
block|,
name|WPA_IEEE80211W_OPTIONAL
init|=
literal|1
block|,
name|WPA_IEEE80211W_REQUIRED
init|=
literal|2
block|}
name|ieee80211w
enum|;
endif|#
directive|endif
comment|/* CONFIG_IEEE80211W */
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
enum|enum
block|{
name|LOGGER_DEBUG
block|,
name|LOGGER_INFO
block|,
name|LOGGER_WARNING
block|}
name|logger_level
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
block|{
name|WPA_EAPOL_portEnabled
block|,
name|WPA_EAPOL_portValid
block|,
name|WPA_EAPOL_authorized
block|,
name|WPA_EAPOL_portControl_Auto
block|,
name|WPA_EAPOL_keyRun
block|,
name|WPA_EAPOL_keyAvailable
block|,
name|WPA_EAPOL_keyDone
block|,
name|WPA_EAPOL_inc_EapolFramesTx
block|}
name|wpa_eapol_variable
typedef|;
end_typedef

begin_struct
struct|struct
name|wpa_auth_callbacks
block|{
name|void
modifier|*
name|ctx
decl_stmt|;
name|void
function_decl|(
modifier|*
name|logger
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|logger_level
name|level
parameter_list|,
specifier|const
name|char
modifier|*
name|txt
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|disconnect
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|u16
name|reason
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|mic_failure_report
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_eapol
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|wpa_eapol_variable
name|var
parameter_list|,
name|int
name|value
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_eapol
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|wpa_eapol_variable
name|var
parameter_list|)
function_decl|;
specifier|const
name|u8
modifier|*
function_decl|(
modifier|*
name|get_psk
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
specifier|const
name|u8
modifier|*
name|prev_psk
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_pmk
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|u8
modifier|*
name|pmk
parameter_list|,
name|size_t
modifier|*
name|len
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_key
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|int
name|vlan_id
parameter_list|,
specifier|const
name|char
modifier|*
name|alg
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|idx
parameter_list|,
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_seqnum
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|idx
parameter_list|,
name|u8
modifier|*
name|seq
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_seqnum_igtk
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|idx
parameter_list|,
name|u8
modifier|*
name|seq
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|send_eapol
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|int
name|encrypt
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|for_each_sta
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|int
function_decl|(
modifier|*
name|cb
function_decl|)
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
name|void
modifier|*
name|ctx
parameter_list|)
parameter_list|,
name|void
modifier|*
name|cb_ctx
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_function_decl
name|struct
name|wpa_authenticator
modifier|*
name|wpa_init
parameter_list|(
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|struct
name|wpa_auth_config
modifier|*
name|conf
parameter_list|,
name|struct
name|wpa_auth_callbacks
modifier|*
name|cb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_deinit
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_reconfig
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|struct
name|wpa_auth_config
modifier|*
name|conf
parameter_list|)
function_decl|;
end_function_decl

begin_enum
enum|enum
block|{
name|WPA_IE_OK
block|,
name|WPA_INVALID_IE
block|,
name|WPA_INVALID_GROUP
block|,
name|WPA_INVALID_PAIRWISE
block|,
name|WPA_INVALID_AKMP
block|,
name|WPA_NOT_ENABLED
block|,
name|WPA_ALLOC_FAIL
block|,
name|WPA_MGMT_FRAME_PROTECTION_VIOLATION
block|,
name|WPA_INVALID_MGMT_GROUP_CIPHER
block|}
enum|;
end_enum

begin_function_decl
name|int
name|wpa_validate_wpa_ie
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|wpa_ie
parameter_list|,
name|size_t
name|wpa_ie_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpa_state_machine
modifier|*
name|wpa_auth_sta_init
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_auth_sta_associated
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_auth_sta_deinit
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_receive
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|)
function_decl|;
end_function_decl

begin_typedef
typedef|typedef
enum|enum
block|{
name|WPA_AUTH
block|,
name|WPA_ASSOC
block|,
name|WPA_DISASSOC
block|,
name|WPA_DEAUTH
block|,
name|WPA_REAUTH
block|,
name|WPA_REAUTH_EAPOL
block|}
name|wpa_event
typedef|;
end_typedef

begin_function_decl
name|void
name|wpa_remove_ptk
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_auth_sm_event
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
name|wpa_event
name|event
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_auth_sm_notify
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_gtk_rekey
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_get_mib
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|buflen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_get_mib_sta
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|buflen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_auth_countermeasures_start
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_auth_pairwise_set
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_auth_sta_key_mgmt
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_auth_sta_wpa_version
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_auth_sta_clear_pmksa
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
name|struct
name|rsn_pmksa_cache_entry
modifier|*
name|entry
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|rsn_pmksa_cache_entry
modifier|*
name|wpa_auth_sta_get_pmksa
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_auth_sta_local_mic_failure_report
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|u8
modifier|*
name|wpa_auth_get_wpa_ie
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|size_t
modifier|*
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_auth_pmksa_add
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|pmk
parameter_list|,
name|int
name|session_timeout
parameter_list|,
name|struct
name|eapol_state_machine
modifier|*
name|eapol
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_auth_pmksa_add_preauth
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
specifier|const
name|u8
modifier|*
name|pmk
parameter_list|,
name|size_t
name|len
parameter_list|,
specifier|const
name|u8
modifier|*
name|sta_addr
parameter_list|,
name|int
name|session_timeout
parameter_list|,
name|struct
name|eapol_state_machine
modifier|*
name|eapol
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_auth_sta_set_vlan
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
name|int
name|vlan_id
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WPA_H */
end_comment

end_unit

