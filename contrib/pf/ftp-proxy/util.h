begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$OpenBSD: util.h,v 1.3 2002/05/23 10:22:14 deraadt Exp $ */
end_comment

begin_comment
comment|/*  * Copyright (c) 1996-2001  *	Obtuse Systems Corporation.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 4. Neither the name of the Obtuse Systems nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL OBTUSE SYSTEMS CORPORATION OR  * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;  * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR  * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF  * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_struct
struct|struct
name|proxy_channel
block|{
name|int
name|pc_to_fd
decl_stmt|,
name|pc_from_fd
decl_stmt|;
name|int
name|pc_alive
decl_stmt|;
name|int
name|pc_nextbyte
decl_stmt|;
name|int
name|pc_flags
decl_stmt|;
name|int
name|pc_length
decl_stmt|;
name|int
name|pc_size
decl_stmt|;
name|struct
name|sockaddr_in
name|pc_from_sa
decl_stmt|,
name|pc_to_sa
decl_stmt|;
name|int
function_decl|(
modifier|*
name|pc_filter
function_decl|)
parameter_list|(
name|void
modifier|*
modifier|*
name|databuf
parameter_list|,
name|int
name|datalen
parameter_list|)
function_decl|;
name|char
modifier|*
name|pc_buffer
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|csiob
block|{
name|int
name|fd
decl_stmt|;
name|int
name|line_buffer_size
decl_stmt|,
name|io_buffer_size
decl_stmt|,
name|io_buffer_len
decl_stmt|,
name|next_byte
decl_stmt|;
name|unsigned
name|char
modifier|*
name|io_buffer
decl_stmt|,
modifier|*
name|line_buffer
decl_stmt|;
name|struct
name|sockaddr_in
name|sa
decl_stmt|,
name|real_sa
decl_stmt|;
name|char
modifier|*
name|who
decl_stmt|;
name|char
name|alive
decl_stmt|,
name|got_eof
decl_stmt|,
name|data_available
decl_stmt|;
name|int
name|send_oob_flags
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
specifier|extern
name|int
name|telnet_getline
parameter_list|(
name|struct
name|csiob
modifier|*
name|iobp
parameter_list|,
name|struct
name|csiob
modifier|*
name|telnet_passthrough
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|get_proxy_env
parameter_list|(
name|int
name|fd
parameter_list|,
name|struct
name|sockaddr_in
modifier|*
name|server_sa_ptr
parameter_list|,
name|struct
name|sockaddr_in
modifier|*
name|client_sa_ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|get_backchannel_socket
parameter_list|(
name|int
name|type
parameter_list|,
name|int
name|min_port
parameter_list|,
name|int
name|max_port
parameter_list|,
name|int
name|start_port
parameter_list|,
name|int
name|direction
parameter_list|,
name|struct
name|sockaddr_in
modifier|*
name|sap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|xfer_data
parameter_list|(
specifier|const
name|char
modifier|*
name|what_read
parameter_list|,
name|int
name|from_fd
parameter_list|,
name|int
name|to_fd
parameter_list|,
name|struct
name|in_addr
name|from
parameter_list|,
name|struct
name|in_addr
name|to
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|ProgName
decl_stmt|;
end_decl_stmt

end_unit

