begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Ppmd7.h -- PPMdH compression codec 2010-03-12 : Igor Pavlov : Public domain This code is based on PPMd var.H (2001): Dmitry Shkarin : Public domain */
end_comment

begin_comment
comment|/* This code supports virtual RangeDecoder and includes the implementation of RangeCoder from 7z, instead of RangeCoder from original PPMd var.H. If you need the compatibility with original PPMd var.H, you can use external RangeDecoder */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__LIBARCHIVE_BUILD
end_ifndef

begin_error
error|#
directive|error
error|This header is only to be used internally to libarchive.
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|ARCHIVE_PPMD7_PRIVATE_H_INCLUDED
end_ifndef

begin_define
define|#
directive|define
name|ARCHIVE_PPMD7_PRIVATE_H_INCLUDED
end_define

begin_include
include|#
directive|include
file|"archive_ppmd_private.h"
end_include

begin_define
define|#
directive|define
name|PPMD7_MIN_ORDER
value|2
end_define

begin_define
define|#
directive|define
name|PPMD7_MAX_ORDER
value|64
end_define

begin_define
define|#
directive|define
name|PPMD7_MIN_MEM_SIZE
value|(1<< 11)
end_define

begin_define
define|#
directive|define
name|PPMD7_MAX_MEM_SIZE
value|(0xFFFFFFFFu - 12 * 3)
end_define

begin_struct_decl
struct_decl|struct
name|CPpmd7_Context_
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
ifdef|#
directive|ifdef
name|PPMD_32BIT
name|struct
name|CPpmd7_Context_
modifier|*
else|#
directive|else
name|UInt32
endif|#
directive|endif
name|CPpmd7_Context_Ref
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|CPpmd7_Context_
block|{
name|UInt16
name|NumStats
decl_stmt|;
name|UInt16
name|SummFreq
decl_stmt|;
name|CPpmd_State_Ref
name|Stats
decl_stmt|;
name|CPpmd7_Context_Ref
name|Suffix
decl_stmt|;
block|}
name|CPpmd7_Context
typedef|;
end_typedef

begin_define
define|#
directive|define
name|Ppmd7Context_OneState
parameter_list|(
name|p
parameter_list|)
value|((CPpmd_State *)&(p)->SummFreq)
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|CPpmd7_Context
modifier|*
name|MinContext
decl_stmt|,
modifier|*
name|MaxContext
decl_stmt|;
name|CPpmd_State
modifier|*
name|FoundState
decl_stmt|;
name|unsigned
name|OrderFall
decl_stmt|,
name|InitEsc
decl_stmt|,
name|PrevSuccess
decl_stmt|,
name|MaxOrder
decl_stmt|,
name|HiBitsFlag
decl_stmt|;
name|Int32
name|RunLength
decl_stmt|,
name|InitRL
decl_stmt|;
comment|/* must be 32-bit at least */
name|UInt32
name|Size
decl_stmt|;
name|UInt32
name|GlueCount
decl_stmt|;
name|Byte
modifier|*
name|Base
decl_stmt|,
modifier|*
name|LoUnit
decl_stmt|,
modifier|*
name|HiUnit
decl_stmt|,
modifier|*
name|Text
decl_stmt|,
modifier|*
name|UnitsStart
decl_stmt|;
name|UInt32
name|AlignOffset
decl_stmt|;
name|Byte
name|Indx2Units
index|[
name|PPMD_NUM_INDEXES
index|]
decl_stmt|;
name|Byte
name|Units2Indx
index|[
literal|128
index|]
decl_stmt|;
name|CPpmd_Void_Ref
name|FreeList
index|[
name|PPMD_NUM_INDEXES
index|]
decl_stmt|;
name|Byte
name|NS2Indx
index|[
literal|256
index|]
decl_stmt|,
name|NS2BSIndx
index|[
literal|256
index|]
decl_stmt|,
name|HB2Flag
index|[
literal|256
index|]
decl_stmt|;
name|CPpmd_See
name|DummySee
decl_stmt|,
name|See
index|[
literal|25
index|]
index|[
literal|16
index|]
decl_stmt|;
name|UInt16
name|BinSumm
index|[
literal|128
index|]
index|[
literal|64
index|]
decl_stmt|;
block|}
name|CPpmd7
typedef|;
end_typedef

begin_comment
comment|/* ---------- Decode ---------- */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|UInt32
function_decl|(
modifier|*
name|GetThreshold
function_decl|)
parameter_list|(
name|void
modifier|*
name|p
parameter_list|,
name|UInt32
name|total
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|Decode
function_decl|)
parameter_list|(
name|void
modifier|*
name|p
parameter_list|,
name|UInt32
name|start
parameter_list|,
name|UInt32
name|size
parameter_list|)
function_decl|;
name|UInt32
function_decl|(
modifier|*
name|DecodeBit
function_decl|)
parameter_list|(
name|void
modifier|*
name|p
parameter_list|,
name|UInt32
name|size0
parameter_list|)
function_decl|;
block|}
name|IPpmd7_RangeDec
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|IPpmd7_RangeDec
name|p
decl_stmt|;
name|UInt32
name|Range
decl_stmt|;
name|UInt32
name|Code
decl_stmt|;
name|UInt32
name|Low
decl_stmt|;
name|UInt32
name|Bottom
decl_stmt|;
name|IByteIn
modifier|*
name|Stream
decl_stmt|;
block|}
name|CPpmd7z_RangeDec
typedef|;
end_typedef

begin_comment
comment|/* ---------- Encode ---------- */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|UInt64
name|Low
decl_stmt|;
name|UInt32
name|Range
decl_stmt|;
name|Byte
name|Cache
decl_stmt|;
name|UInt64
name|CacheSize
decl_stmt|;
name|IByteOut
modifier|*
name|Stream
decl_stmt|;
block|}
name|CPpmd7z_RangeEnc
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
comment|/* Base Functions */
name|void
function_decl|(
modifier|*
name|Ppmd7_Construct
function_decl|)
parameter_list|(
name|CPpmd7
modifier|*
name|p
parameter_list|)
function_decl|;
name|Bool
function_decl|(
modifier|*
name|Ppmd7_Alloc
function_decl|)
parameter_list|(
name|CPpmd7
modifier|*
name|p
parameter_list|,
name|UInt32
name|size
parameter_list|,
name|ISzAlloc
modifier|*
name|alloc
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|Ppmd7_Free
function_decl|)
parameter_list|(
name|CPpmd7
modifier|*
name|p
parameter_list|,
name|ISzAlloc
modifier|*
name|alloc
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|Ppmd7_Init
function_decl|)
parameter_list|(
name|CPpmd7
modifier|*
name|p
parameter_list|,
name|unsigned
name|maxOrder
parameter_list|)
function_decl|;
define|#
directive|define
name|Ppmd7_WasAllocated
parameter_list|(
name|p
parameter_list|)
value|((p)->Base != NULL)
comment|/* Decode Functions */
name|void
function_decl|(
modifier|*
name|Ppmd7z_RangeDec_CreateVTable
function_decl|)
parameter_list|(
name|CPpmd7z_RangeDec
modifier|*
name|p
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|PpmdRAR_RangeDec_CreateVTable
function_decl|)
parameter_list|(
name|CPpmd7z_RangeDec
modifier|*
name|p
parameter_list|)
function_decl|;
name|Bool
function_decl|(
modifier|*
name|Ppmd7z_RangeDec_Init
function_decl|)
parameter_list|(
name|CPpmd7z_RangeDec
modifier|*
name|p
parameter_list|)
function_decl|;
name|Bool
function_decl|(
modifier|*
name|PpmdRAR_RangeDec_Init
function_decl|)
parameter_list|(
name|CPpmd7z_RangeDec
modifier|*
name|p
parameter_list|)
function_decl|;
define|#
directive|define
name|Ppmd7z_RangeDec_IsFinishedOK
parameter_list|(
name|p
parameter_list|)
value|((p)->Code == 0)
name|int
function_decl|(
modifier|*
name|Ppmd7_DecodeSymbol
function_decl|)
parameter_list|(
name|CPpmd7
modifier|*
name|p
parameter_list|,
name|IPpmd7_RangeDec
modifier|*
name|rc
parameter_list|)
function_decl|;
comment|/* Encode Functions */
name|void
function_decl|(
modifier|*
name|Ppmd7z_RangeEnc_Init
function_decl|)
parameter_list|(
name|CPpmd7z_RangeEnc
modifier|*
name|p
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|Ppmd7z_RangeEnc_FlushData
function_decl|)
parameter_list|(
name|CPpmd7z_RangeEnc
modifier|*
name|p
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|Ppmd7_EncodeSymbol
function_decl|)
parameter_list|(
name|CPpmd7
modifier|*
name|p
parameter_list|,
name|CPpmd7z_RangeEnc
modifier|*
name|rc
parameter_list|,
name|int
name|symbol
parameter_list|)
function_decl|;
block|}
name|IPpmd7
typedef|;
end_typedef

begin_decl_stmt
specifier|extern
specifier|const
name|IPpmd7
name|__archive_ppmd7_functions
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

