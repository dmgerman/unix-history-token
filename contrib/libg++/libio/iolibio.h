begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_include
include|#
directive|include
file|"libio.h"
end_include

begin_comment
comment|/* These emulate stdio functionality, but with a different name    (_IO_ungetc instead of ungetc), and using _IO_FILE instead of FILE. */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
specifier|extern
name|int
name|_IO_fclose
name|__P
argument_list|(
operator|(
name|_IO_FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_IO_FILE
modifier|*
name|_IO_fdopen
name|__P
argument_list|(
operator|(
name|int
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_fflush
name|__P
argument_list|(
operator|(
name|_IO_FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_fgetpos
name|__P
argument_list|(
operator|(
name|_IO_FILE
operator|*
operator|,
name|_IO_fpos_t
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|char
modifier|*
name|_IO_fgets
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|,
name|int
operator|,
name|_IO_FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_IO_FILE
modifier|*
name|_IO_fopen
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_fprintf
name|__P
argument_list|(
operator|(
name|_IO_FILE
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_fputs
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
name|_IO_FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_fsetpos
name|__P
argument_list|(
operator|(
name|_IO_FILE
operator|*
operator|,
specifier|const
name|_IO_fpos_t
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|long
name|int
name|_IO_ftell
name|__P
argument_list|(
operator|(
name|_IO_FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_IO_size_t
name|_IO_fread
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|,
name|_IO_size_t
operator|,
name|_IO_size_t
operator|,
name|_IO_FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|_IO_size_t
name|_IO_fwrite
name|__P
argument_list|(
operator|(
specifier|const
name|void
operator|*
operator|,
name|_IO_size_t
operator|,
name|_IO_size_t
operator|,
name|_IO_FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|char
modifier|*
name|_IO_gets
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|_IO_perror
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_printf
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_puts
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_scanf
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|void
name|_IO_setbuffer
name|__P
argument_list|(
operator|(
name|_IO_FILE
operator|*
operator|,
name|char
operator|*
operator|,
name|_IO_size_t
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_setvbuf
name|__P
argument_list|(
operator|(
name|_IO_FILE
operator|*
operator|,
name|char
operator|*
operator|,
name|int
operator|,
name|_IO_size_t
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_sscanf
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_sprintf
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_ungetc
name|__P
argument_list|(
operator|(
name|int
operator|,
name|_IO_FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_vsscanf
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
name|_IO_va_list
operator|)
argument_list|)
decl_stmt|;
specifier|extern
name|int
name|_IO_vsprintf
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
name|_IO_va_list
operator|)
argument_list|)
decl_stmt|;
ifndef|#
directive|ifndef
name|_IO_pos_BAD
define|#
directive|define
name|_IO_pos_BAD
value|((_IO_fpos_t)(-1))
endif|#
directive|endif
define|#
directive|define
name|_IO_clearerr
parameter_list|(
name|FP
parameter_list|)
value|((FP)->_flags&= ~(_IO_ERR_SEEN|_IO_EOF_SEEN))
define|#
directive|define
name|_IO_fseek
parameter_list|(
name|__fp
parameter_list|,
name|__offset
parameter_list|,
name|__whence
parameter_list|)
define|\
value|(_IO_seekoff(__fp, __offset, __whence, _IOS_INPUT|_IOS_OUTPUT) == _IO_pos_BAD ? EOF : 0)
define|#
directive|define
name|_IO_rewind
parameter_list|(
name|FILE
parameter_list|)
value|(void)_IO_seekoff(FILE, 0, 0, _IOS_INPUT|_IOS_OUTPUT)
define|#
directive|define
name|_IO_vprintf
parameter_list|(
name|FORMAT
parameter_list|,
name|ARGS
parameter_list|)
value|_IO_vfprintf(_IO_stdout, FORMAT, ARGS)
define|#
directive|define
name|_IO_freopen
parameter_list|(
name|FILENAME
parameter_list|,
name|MODE
parameter_list|,
name|FP
parameter_list|)
define|\
value|(_IO_file_close_it(FP), _IO_file_fopen(FP, FILENAME, MODE))
define|#
directive|define
name|_IO_fileno
parameter_list|(
name|FP
parameter_list|)
value|((FP)->_fileno)
specifier|extern
name|_IO_FILE
modifier|*
name|_IO_popen
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
define|#
directive|define
name|_IO_pclose
value|_IO_fclose
define|#
directive|define
name|_IO_setbuf
parameter_list|(
name|_FP
parameter_list|,
name|_BUF
parameter_list|)
value|_IO_setbuffer(_FP, _BUF, _IO_BUFSIZ)
define|#
directive|define
name|_IO_setlinebuf
parameter_list|(
name|_FP
parameter_list|)
value|_IO_setvbuf(_FP, NULL, 1, 0)
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

end_unit

