begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* US Software GOFAST floating point library support.    Copyright (C) 1994, 1998, 1999, 2002, 2003, 2004    Free Software Foundation, Inc.  This file is part of GCC.  GCC is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  GCC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with GCC; see the file COPYING.  If not, write to the Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
end_comment

begin_comment
comment|/* The US Software GOFAST library requires special optabs support.    This file is intended to be included by config/ARCH/ARCH.c.  It    defines one function, gofast_maybe_init_libfuncs, which should be    called from the TARGET_INIT_LIBFUNCS hook.  When tm.h has defined    US_SOFTWARE_GOFAST, this function will adjust all the optabs and    libfuncs appropriately.  Otherwise it will do nothing.  */
end_comment

begin_function
specifier|static
name|void
name|gofast_maybe_init_libfuncs
parameter_list|(
name|void
parameter_list|)
block|{
ifdef|#
directive|ifdef
name|US_SOFTWARE_GOFAST
name|int
name|mode
decl_stmt|;
name|set_optab_libfunc
argument_list|(
name|add_optab
argument_list|,
name|SFmode
argument_list|,
literal|"fpadd"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|add_optab
argument_list|,
name|DFmode
argument_list|,
literal|"dpadd"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|sub_optab
argument_list|,
name|SFmode
argument_list|,
literal|"fpsub"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|sub_optab
argument_list|,
name|DFmode
argument_list|,
literal|"dpsub"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|smul_optab
argument_list|,
name|SFmode
argument_list|,
literal|"fpmul"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|smul_optab
argument_list|,
name|DFmode
argument_list|,
literal|"dpmul"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|sdiv_optab
argument_list|,
name|SFmode
argument_list|,
literal|"fpdiv"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|sdiv_optab
argument_list|,
name|DFmode
argument_list|,
literal|"dpdiv"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|cmp_optab
argument_list|,
name|SFmode
argument_list|,
literal|"fpcmp"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|cmp_optab
argument_list|,
name|DFmode
argument_list|,
literal|"dpcmp"
argument_list|)
expr_stmt|;
comment|/* GOFAST does not provide libfuncs for negation, so we use the      standard names.  */
comment|/* GCC does not use fpcmp/dpcmp for gt or ge because its own      FP-emulation library returns +1 for both> and unord.  So we      leave gt and ge unset, such that, instead of fpcmp(a,b)>[=], we      generate fpcmp(b,a)<[=] 0, which is unambiguous.  For unord      libfuncs, we use our own functions, since GOFAST doesn't supply      them.  */
name|set_optab_libfunc
argument_list|(
name|eq_optab
argument_list|,
name|SFmode
argument_list|,
literal|"fpcmp"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|ne_optab
argument_list|,
name|SFmode
argument_list|,
literal|"fpcmp"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|gt_optab
argument_list|,
name|SFmode
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|ge_optab
argument_list|,
name|SFmode
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|lt_optab
argument_list|,
name|SFmode
argument_list|,
literal|"fpcmp"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|le_optab
argument_list|,
name|SFmode
argument_list|,
literal|"fpcmp"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|eq_optab
argument_list|,
name|DFmode
argument_list|,
literal|"dpcmp"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|ne_optab
argument_list|,
name|DFmode
argument_list|,
literal|"dpcmp"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|gt_optab
argument_list|,
name|DFmode
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|ge_optab
argument_list|,
name|DFmode
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|lt_optab
argument_list|,
name|DFmode
argument_list|,
literal|"dpcmp"
argument_list|)
expr_stmt|;
name|set_optab_libfunc
argument_list|(
name|le_optab
argument_list|,
name|DFmode
argument_list|,
literal|"dpcmp"
argument_list|)
expr_stmt|;
name|set_conv_libfunc
argument_list|(
name|sext_optab
argument_list|,
name|DFmode
argument_list|,
name|SFmode
argument_list|,
literal|"fptodp"
argument_list|)
expr_stmt|;
name|set_conv_libfunc
argument_list|(
name|trunc_optab
argument_list|,
name|SFmode
argument_list|,
name|DFmode
argument_list|,
literal|"dptofp"
argument_list|)
expr_stmt|;
name|set_conv_libfunc
argument_list|(
name|sfix_optab
argument_list|,
name|SImode
argument_list|,
name|SFmode
argument_list|,
literal|"fptosi"
argument_list|)
expr_stmt|;
name|set_conv_libfunc
argument_list|(
name|sfix_optab
argument_list|,
name|SImode
argument_list|,
name|DFmode
argument_list|,
literal|"dptoli"
argument_list|)
expr_stmt|;
name|set_conv_libfunc
argument_list|(
name|ufix_optab
argument_list|,
name|SImode
argument_list|,
name|SFmode
argument_list|,
literal|"fptoui"
argument_list|)
expr_stmt|;
name|set_conv_libfunc
argument_list|(
name|ufix_optab
argument_list|,
name|SImode
argument_list|,
name|DFmode
argument_list|,
literal|"dptoul"
argument_list|)
expr_stmt|;
name|set_conv_libfunc
argument_list|(
name|sfloat_optab
argument_list|,
name|SFmode
argument_list|,
name|SImode
argument_list|,
literal|"sitofp"
argument_list|)
expr_stmt|;
name|set_conv_libfunc
argument_list|(
name|sfloat_optab
argument_list|,
name|DFmode
argument_list|,
name|SImode
argument_list|,
literal|"litodp"
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function

end_unit

