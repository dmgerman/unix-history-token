begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Copyright (C) 1997 Free Software Foundation, Inc.    This file is part of GNU CC.  */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|frame_state
block|{
name|void
modifier|*
name|cfa
decl_stmt|;
name|void
modifier|*
name|eh_ptr
decl_stmt|;
name|long
name|cfa_offset
decl_stmt|;
name|long
name|args_size
decl_stmt|;
name|long
name|reg_or_offset
index|[
name|FIRST_PSEUDO_REGISTER
operator|+
literal|1
index|]
decl_stmt|;
name|unsigned
name|short
name|cfa_reg
decl_stmt|;
name|unsigned
name|short
name|retaddr_column
decl_stmt|;
name|char
name|saved
index|[
name|FIRST_PSEUDO_REGISTER
operator|+
literal|1
index|]
decl_stmt|;
block|}
name|frame_state
typedef|;
end_typedef

begin_comment
comment|/* Values for 'saved' above.  */
end_comment

begin_define
define|#
directive|define
name|REG_UNSAVED
value|0
end_define

begin_define
define|#
directive|define
name|REG_SAVED_OFFSET
value|1
end_define

begin_define
define|#
directive|define
name|REG_SAVED_REG
value|2
end_define

begin_comment
comment|/* The representation for an "object" to be searched for frame unwind info.    For targets with named sections, one object is an executable or shared    library; for other targets, one object is one translation unit.     A copy of this structure declaration is printed by collect2.c;    keep the copies synchronized!  */
end_comment

begin_struct
struct|struct
name|object
block|{
name|void
modifier|*
name|pc_begin
decl_stmt|;
name|void
modifier|*
name|pc_end
decl_stmt|;
name|struct
name|dwarf_fde
modifier|*
name|fde_begin
decl_stmt|;
name|struct
name|dwarf_fde
modifier|*
modifier|*
name|fde_array
decl_stmt|;
name|size_t
name|count
decl_stmt|;
name|struct
name|object
modifier|*
name|next
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Note the following routines are exported interfaces from libgcc; do not    change these interfaces.  Instead create new interfaces.  Also note    references to these functions may be made weak in files where they    are referenced.  */
end_comment

begin_function_decl
specifier|extern
name|void
name|__register_frame
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|__register_frame_table
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|__deregister_frame
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Called either from crtbegin.o or a static constructor to register the    unwind info for an object or translation unit, respectively.  */
end_comment

begin_function_decl
specifier|extern
name|void
name|__register_frame_info
parameter_list|(
name|void
modifier|*
parameter_list|,
name|struct
name|object
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Similar, but BEGIN is actually a pointer to a table of unwind entries    for different translation units.  Called from the file generated by    collect2.  */
end_comment

begin_function_decl
specifier|extern
name|void
name|__register_frame_info_table
parameter_list|(
name|void
modifier|*
parameter_list|,
name|struct
name|object
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Called from crtend.o to deregister the unwind info for an object.  */
end_comment

begin_function_decl
specifier|extern
name|void
modifier|*
name|__deregister_frame_info
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Called from __throw to find the registers to restore for a given    PC_TARGET.  The caller should allocate a local variable of `struct    frame_state' (declared in frame.h) and pass its address to STATE_IN.    Returns NULL on failure, otherwise returns STATE_IN.  */
end_comment

begin_function_decl
specifier|extern
name|struct
name|frame_state
modifier|*
name|__frame_state_for
parameter_list|(
name|void
modifier|*
parameter_list|,
name|struct
name|frame_state
modifier|*
parameter_list|)
function_decl|;
end_function_decl

end_unit

