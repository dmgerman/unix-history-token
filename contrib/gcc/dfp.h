begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Decimal floating point support functions for GNU compiler.    Copyright (C) 2005, 2006 Free Software Foundation, Inc.  This file is part of GCC.  GCC is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  GCC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with GCC; see the file COPYING.  If not, write to the Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|GCC_DFP_H
end_ifndef

begin_define
define|#
directive|define
name|GCC_DFP_H
end_define

begin_comment
comment|/* Encode REAL_VALUE_TYPEs into 32/64/128-bit IEEE 754R encoded values.  */
end_comment

begin_function_decl
name|void
name|encode_decimal32
parameter_list|(
specifier|const
name|struct
name|real_format
modifier|*
name|fmt
parameter_list|,
name|long
modifier|*
parameter_list|,
specifier|const
name|REAL_VALUE_TYPE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|encode_decimal64
parameter_list|(
specifier|const
name|struct
name|real_format
modifier|*
name|fmt
parameter_list|,
name|long
modifier|*
parameter_list|,
specifier|const
name|REAL_VALUE_TYPE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|decode_decimal128
parameter_list|(
specifier|const
name|struct
name|real_format
modifier|*
parameter_list|,
name|REAL_VALUE_TYPE
modifier|*
parameter_list|,
specifier|const
name|long
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Decode 32/64/128-bit IEEE 754R encoded values into REAL_VALUE_TYPEs.  */
end_comment

begin_function_decl
name|void
name|decode_decimal32
parameter_list|(
specifier|const
name|struct
name|real_format
modifier|*
parameter_list|,
name|REAL_VALUE_TYPE
modifier|*
parameter_list|,
specifier|const
name|long
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|decode_decimal64
parameter_list|(
specifier|const
name|struct
name|real_format
modifier|*
parameter_list|,
name|REAL_VALUE_TYPE
modifier|*
parameter_list|,
specifier|const
name|long
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|encode_decimal128
parameter_list|(
specifier|const
name|struct
name|real_format
modifier|*
name|fmt
parameter_list|,
name|long
modifier|*
parameter_list|,
specifier|const
name|REAL_VALUE_TYPE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Arithmetic and conversion functions.  */
end_comment

begin_function_decl
name|int
name|decimal_do_compare
parameter_list|(
specifier|const
name|REAL_VALUE_TYPE
modifier|*
parameter_list|,
specifier|const
name|REAL_VALUE_TYPE
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|decimal_real_from_string
parameter_list|(
name|REAL_VALUE_TYPE
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|decimal_round_for_format
parameter_list|(
specifier|const
name|struct
name|real_format
modifier|*
parameter_list|,
name|REAL_VALUE_TYPE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|decimal_real_convert
parameter_list|(
name|REAL_VALUE_TYPE
modifier|*
parameter_list|,
name|enum
name|machine_mode
parameter_list|,
specifier|const
name|REAL_VALUE_TYPE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|decimal_real_to_decimal
parameter_list|(
name|char
modifier|*
parameter_list|,
specifier|const
name|REAL_VALUE_TYPE
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|size_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|decimal_do_fix_trunc
parameter_list|(
name|REAL_VALUE_TYPE
modifier|*
parameter_list|,
specifier|const
name|REAL_VALUE_TYPE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|decimal_real_arithmetic
parameter_list|(
name|REAL_VALUE_TYPE
modifier|*
parameter_list|,
name|enum
name|tree_code
parameter_list|,
specifier|const
name|REAL_VALUE_TYPE
modifier|*
parameter_list|,
specifier|const
name|REAL_VALUE_TYPE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|decimal_real_maxval
parameter_list|(
name|REAL_VALUE_TYPE
modifier|*
parameter_list|,
name|int
parameter_list|,
name|enum
name|machine_mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|decimal_real_to_integer2
parameter_list|(
name|HOST_WIDE_INT
modifier|*
parameter_list|,
name|HOST_WIDE_INT
modifier|*
parameter_list|,
specifier|const
name|REAL_VALUE_TYPE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|HOST_WIDE_INT
name|decimal_real_to_integer
parameter_list|(
specifier|const
name|REAL_VALUE_TYPE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* GCC_DFP_H */
end_comment

end_unit

