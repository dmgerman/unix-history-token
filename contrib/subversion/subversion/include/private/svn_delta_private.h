begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/**  * @copyright  * ====================================================================  *    Licensed to the Apache Software Foundation (ASF) under one  *    or more contributor license agreements.  See the NOTICE file  *    distributed with this work for additional information  *    regarding copyright ownership.  The ASF licenses this file  *    to you under the Apache License, Version 2.0 (the  *    "License"); you may not use this file except in compliance  *    with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *    Unless required by applicable law or agreed to in writing,  *    software distributed under the License is distributed on an  *    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *    KIND, either express or implied.  See the License for the  *    specific language governing permissions and limitations  *    under the License.  * ====================================================================  * @endcopyright  *  * @file svn_delta_private.h  * @brief The Subversion delta/diff/editor library - Internal routines  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SVN_DELTA_PRIVATE_H
end_ifndef

begin_define
define|#
directive|define
name|SVN_DELTA_PRIVATE_H
end_define

begin_include
include|#
directive|include
file|<apr_pools.h>
end_include

begin_include
include|#
directive|include
file|"svn_types.h"
end_include

begin_include
include|#
directive|include
file|"svn_error.h"
end_include

begin_include
include|#
directive|include
file|"svn_delta.h"
end_include

begin_include
include|#
directive|include
file|"svn_editor.h"
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* __cplusplus */
typedef|typedef
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|svn_delta__start_edit_func_t
function_decl|)
parameter_list|(
name|void
modifier|*
name|baton
parameter_list|,
name|svn_revnum_t
name|base_revision
parameter_list|)
function_decl|;
typedef|typedef
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|svn_delta__target_revision_func_t
function_decl|)
parameter_list|(
name|void
modifier|*
name|baton
parameter_list|,
name|svn_revnum_t
name|target_revision
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
typedef|typedef
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|svn_delta__unlock_func_t
function_decl|)
parameter_list|(
name|void
modifier|*
name|baton
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
comment|/* See svn_editor__insert_shims() for more information. */
struct|struct
name|svn_delta__extra_baton
block|{
name|svn_delta__start_edit_func_t
name|start_edit
decl_stmt|;
name|svn_delta__target_revision_func_t
name|target_revision
decl_stmt|;
name|void
modifier|*
name|baton
decl_stmt|;
block|}
struct|;
comment|/** A temporary API to convert from a delta editor to an Ev2 editor. */
name|svn_error_t
modifier|*
name|svn_delta__editor_from_delta
parameter_list|(
name|svn_editor_t
modifier|*
modifier|*
name|editor_p
parameter_list|,
name|struct
name|svn_delta__extra_baton
modifier|*
modifier|*
name|exb
parameter_list|,
name|svn_delta__unlock_func_t
modifier|*
name|unlock_func
parameter_list|,
name|void
modifier|*
modifier|*
name|unlock_baton
parameter_list|,
specifier|const
name|svn_delta_editor_t
modifier|*
name|deditor
parameter_list|,
name|void
modifier|*
name|dedit_baton
parameter_list|,
name|svn_boolean_t
modifier|*
name|send_abs_paths
parameter_list|,
specifier|const
name|char
modifier|*
name|repos_root
parameter_list|,
specifier|const
name|char
modifier|*
name|base_relpath
parameter_list|,
name|svn_cancel_func_t
name|cancel_func
parameter_list|,
name|void
modifier|*
name|cancel_baton
parameter_list|,
name|svn_delta_fetch_kind_func_t
name|fetch_kind_func
parameter_list|,
name|void
modifier|*
name|fetch_kind_baton
parameter_list|,
name|svn_delta_fetch_props_func_t
name|fetch_props_func
parameter_list|,
name|void
modifier|*
name|fetch_props_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|result_pool
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
comment|/** A temporary API to convert from an Ev2 editor to a delta editor. */
name|svn_error_t
modifier|*
name|svn_delta__delta_from_editor
parameter_list|(
specifier|const
name|svn_delta_editor_t
modifier|*
modifier|*
name|deditor
parameter_list|,
name|void
modifier|*
modifier|*
name|dedit_baton
parameter_list|,
name|svn_editor_t
modifier|*
name|editor
parameter_list|,
name|svn_delta__unlock_func_t
name|unlock_func
parameter_list|,
name|void
modifier|*
name|unlock_baton
parameter_list|,
name|svn_boolean_t
modifier|*
name|found_abs_paths
parameter_list|,
specifier|const
name|char
modifier|*
name|repos_root
parameter_list|,
specifier|const
name|char
modifier|*
name|base_relpath
parameter_list|,
name|svn_delta_fetch_props_func_t
name|fetch_props_func
parameter_list|,
name|void
modifier|*
name|fetch_props_baton
parameter_list|,
name|svn_delta_fetch_base_func_t
name|fetch_base_func
parameter_list|,
name|void
modifier|*
name|fetch_base_baton
parameter_list|,
name|struct
name|svn_delta__extra_baton
modifier|*
name|exb
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/** Read the txdelta window header from @a stream and return the total     length of the unparsed window data in @a *window_len. */
name|svn_error_t
modifier|*
name|svn_txdelta__read_raw_window_len
parameter_list|(
name|apr_size_t
modifier|*
name|window_len
parameter_list|,
name|svn_stream_t
modifier|*
name|stream
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __cplusplus */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* SVN_DELTA_PRIVATE_H */
end_comment

end_unit

