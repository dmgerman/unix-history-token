begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/**  * @copyright  * ====================================================================  *    Licensed to the Apache Software Foundation (ASF) under one  *    or more contributor license agreements.  See the NOTICE file  *    distributed with this work for additional information  *    regarding copyright ownership.  The ASF licenses this file  *    to you under the Apache License, Version 2.0 (the  *    "License"); you may not use this file except in compliance  *    with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *    Unless required by applicable law or agreed to in writing,  *    software distributed under the License is distributed on an  *    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *    KIND, either express or implied.  See the License for the  *    specific language governing permissions and limitations  *    under the License.  * ====================================================================  * @endcopyright  *  * @file ra_loader.h  * @brief structures related to repository access, private to libsvn_ra and the  * RA implementation libraries.  */
end_comment

begin_escape
end_escape

begin_ifndef
ifndef|#
directive|ifndef
name|LIBSVN_RA_RA_LOADER_H
end_ifndef

begin_define
define|#
directive|define
name|LIBSVN_RA_RA_LOADER_H
end_define

begin_include
include|#
directive|include
file|"svn_ra.h"
end_include

begin_include
include|#
directive|include
file|"private/svn_ra_private.h"
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* The RA layer vtable. */
typedef|typedef
struct|struct
name|svn_ra__vtable_t
block|{
comment|/* This field should always remain first in the vtable. */
specifier|const
name|svn_version_t
modifier|*
function_decl|(
modifier|*
name|get_version
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
comment|/* Return a short description of the RA implementation, as a localized    * string. */
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|get_description
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
comment|/* Return a list of actual URI schemes supported by this implementation.    * The returned array is NULL-terminated. */
specifier|const
name|char
modifier|*
specifier|const
modifier|*
function_decl|(
modifier|*
name|get_schemes
function_decl|)
parameter_list|(
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* Implementations of the public API functions. */
comment|/* See svn_ra_open4(). */
comment|/* All fields in SESSION, except priv, have been initialized by the      time this is called.  SESSION->priv may be set by this function. */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|open_session
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|corrected_url
parameter_list|,
specifier|const
name|char
modifier|*
name|session_URL
parameter_list|,
specifier|const
name|svn_ra_callbacks2_t
modifier|*
name|callbacks
parameter_list|,
name|void
modifier|*
name|callback_baton
parameter_list|,
name|apr_hash_t
modifier|*
name|config
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_reparent(). */
comment|/* URL is guaranteed to have what get_repos_root() returns as a prefix. */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|reparent
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
name|url
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_session_url(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_session_url
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|url
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_latest_revnum(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_latest_revnum
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_revnum_t
modifier|*
name|latest_revnum
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_dated_revision(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_dated_revision
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_revnum_t
modifier|*
name|revision
parameter_list|,
name|apr_time_t
name|tm
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_change_rev_prop2(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|change_rev_prop
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_revnum_t
name|rev
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|svn_string_t
modifier|*
specifier|const
modifier|*
name|old_value_p
parameter_list|,
specifier|const
name|svn_string_t
modifier|*
name|value
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_rev_proplist(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|rev_proplist
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_revnum_t
name|rev
parameter_list|,
name|apr_hash_t
modifier|*
modifier|*
name|props
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_rev_prop(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|rev_prop
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_revnum_t
name|rev
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|svn_string_t
modifier|*
modifier|*
name|value
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_commit_editor3(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_commit_editor
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|svn_delta_editor_t
modifier|*
modifier|*
name|editor
parameter_list|,
name|void
modifier|*
modifier|*
name|edit_baton
parameter_list|,
name|apr_hash_t
modifier|*
name|revprop_table
parameter_list|,
name|svn_commit_callback2_t
name|callback
parameter_list|,
name|void
modifier|*
name|callback_baton
parameter_list|,
name|apr_hash_t
modifier|*
name|lock_tokens
parameter_list|,
name|svn_boolean_t
name|keep_locks
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_file(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_file
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|revision
parameter_list|,
name|svn_stream_t
modifier|*
name|stream
parameter_list|,
name|svn_revnum_t
modifier|*
name|fetched_rev
parameter_list|,
name|apr_hash_t
modifier|*
modifier|*
name|props
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_dir2(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_dir
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|apr_hash_t
modifier|*
modifier|*
name|dirents
parameter_list|,
name|svn_revnum_t
modifier|*
name|fetched_rev
parameter_list|,
name|apr_hash_t
modifier|*
modifier|*
name|props
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|revision
parameter_list|,
name|apr_uint32_t
name|dirent_fields
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_mergeinfo(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_mergeinfo
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_mergeinfo_catalog_t
modifier|*
name|mergeinfo
parameter_list|,
specifier|const
name|apr_array_header_t
modifier|*
name|paths
parameter_list|,
name|svn_revnum_t
name|revision
parameter_list|,
name|svn_mergeinfo_inheritance_t
name|inherit
parameter_list|,
name|svn_boolean_t
name|include_merged_revisions
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_do_update3(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|do_update
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|svn_ra_reporter3_t
modifier|*
modifier|*
name|reporter
parameter_list|,
name|void
modifier|*
modifier|*
name|report_baton
parameter_list|,
name|svn_revnum_t
name|revision_to_update_to
parameter_list|,
specifier|const
name|char
modifier|*
name|update_target
parameter_list|,
name|svn_depth_t
name|depth
parameter_list|,
name|svn_boolean_t
name|send_copyfrom_args
parameter_list|,
name|svn_boolean_t
name|ignore_ancestry
parameter_list|,
specifier|const
name|svn_delta_editor_t
modifier|*
name|update_editor
parameter_list|,
name|void
modifier|*
name|update_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|result_pool
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_do_switch3(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|do_switch
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|svn_ra_reporter3_t
modifier|*
modifier|*
name|reporter
parameter_list|,
name|void
modifier|*
modifier|*
name|report_baton
parameter_list|,
name|svn_revnum_t
name|revision_to_switch_to
parameter_list|,
specifier|const
name|char
modifier|*
name|switch_target
parameter_list|,
name|svn_depth_t
name|depth
parameter_list|,
specifier|const
name|char
modifier|*
name|switch_url
parameter_list|,
name|svn_boolean_t
name|send_copyfrom_args
parameter_list|,
name|svn_boolean_t
name|ignore_ancestry
parameter_list|,
specifier|const
name|svn_delta_editor_t
modifier|*
name|switch_editor
parameter_list|,
name|void
modifier|*
name|switch_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|result_pool
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_do_status2(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|do_status
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|svn_ra_reporter3_t
modifier|*
modifier|*
name|reporter
parameter_list|,
name|void
modifier|*
modifier|*
name|report_baton
parameter_list|,
specifier|const
name|char
modifier|*
name|status_target
parameter_list|,
name|svn_revnum_t
name|revision
parameter_list|,
name|svn_depth_t
name|depth
parameter_list|,
specifier|const
name|svn_delta_editor_t
modifier|*
name|status_editor
parameter_list|,
name|void
modifier|*
name|status_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_do_diff3(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|do_diff
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|svn_ra_reporter3_t
modifier|*
modifier|*
name|reporter
parameter_list|,
name|void
modifier|*
modifier|*
name|report_baton
parameter_list|,
name|svn_revnum_t
name|revision
parameter_list|,
specifier|const
name|char
modifier|*
name|diff_target
parameter_list|,
name|svn_depth_t
name|depth
parameter_list|,
name|svn_boolean_t
name|ignore_ancestry
parameter_list|,
name|svn_boolean_t
name|text_deltas
parameter_list|,
specifier|const
name|char
modifier|*
name|versus_url
parameter_list|,
specifier|const
name|svn_delta_editor_t
modifier|*
name|diff_editor
parameter_list|,
name|void
modifier|*
name|diff_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_log2(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_log
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|apr_array_header_t
modifier|*
name|paths
parameter_list|,
name|svn_revnum_t
name|start
parameter_list|,
name|svn_revnum_t
name|end
parameter_list|,
name|int
name|limit
parameter_list|,
name|svn_boolean_t
name|discover_changed_paths
parameter_list|,
name|svn_boolean_t
name|strict_node_history
parameter_list|,
name|svn_boolean_t
name|include_merged_revisions
parameter_list|,
specifier|const
name|apr_array_header_t
modifier|*
name|revprops
parameter_list|,
name|svn_log_entry_receiver_t
name|receiver
parameter_list|,
name|void
modifier|*
name|receiver_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_check_path(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|check_path
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|revision
parameter_list|,
name|svn_node_kind_t
modifier|*
name|kind
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_stat(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|stat
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|revision
parameter_list|,
name|svn_dirent_t
modifier|*
modifier|*
name|dirent
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_uuid2(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_uuid
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|uuid
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_repos_root2(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_repos_root
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|url
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_locations(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_locations
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|apr_hash_t
modifier|*
modifier|*
name|locations
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|peg_revision
parameter_list|,
specifier|const
name|apr_array_header_t
modifier|*
name|location_revisions
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_location_segments(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_location_segments
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|peg_revision
parameter_list|,
name|svn_revnum_t
name|start_rev
parameter_list|,
name|svn_revnum_t
name|end_rev
parameter_list|,
name|svn_location_segment_receiver_t
name|rcvr
parameter_list|,
name|void
modifier|*
name|receiver_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_file_revs2(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_file_revs
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|start
parameter_list|,
name|svn_revnum_t
name|end
parameter_list|,
name|svn_boolean_t
name|include_merged_revisions
parameter_list|,
name|svn_file_rev_handler_t
name|handler
parameter_list|,
name|void
modifier|*
name|handler_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_lock(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|lock
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|apr_hash_t
modifier|*
name|path_revs
parameter_list|,
specifier|const
name|char
modifier|*
name|comment
parameter_list|,
name|svn_boolean_t
name|force
parameter_list|,
name|svn_ra_lock_callback_t
name|lock_func
parameter_list|,
name|void
modifier|*
name|lock_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_unlock(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|unlock
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|apr_hash_t
modifier|*
name|path_tokens
parameter_list|,
name|svn_boolean_t
name|force
parameter_list|,
name|svn_ra_lock_callback_t
name|lock_func
parameter_list|,
name|void
modifier|*
name|lock_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_lock(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_lock
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_lock_t
modifier|*
modifier|*
name|lock
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_locks2(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_locks
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|apr_hash_t
modifier|*
modifier|*
name|locks
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_depth_t
name|depth
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_replay(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|replay
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_revnum_t
name|revision
parameter_list|,
name|svn_revnum_t
name|low_water_mark
parameter_list|,
name|svn_boolean_t
name|text_deltas
parameter_list|,
specifier|const
name|svn_delta_editor_t
modifier|*
name|editor
parameter_list|,
name|void
modifier|*
name|edit_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_has_capability(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|has_capability
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_boolean_t
modifier|*
name|has
parameter_list|,
specifier|const
name|char
modifier|*
name|capability
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_replay_range(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|replay_range
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_revnum_t
name|start_revision
parameter_list|,
name|svn_revnum_t
name|end_revision
parameter_list|,
name|svn_revnum_t
name|low_water_mark
parameter_list|,
name|svn_boolean_t
name|text_deltas
parameter_list|,
name|svn_ra_replay_revstart_callback_t
name|revstart_func
parameter_list|,
name|svn_ra_replay_revfinish_callback_t
name|revfinish_func
parameter_list|,
name|void
modifier|*
name|replay_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_deleted_rev(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_deleted_rev
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|peg_revision
parameter_list|,
name|svn_revnum_t
name|end_revision
parameter_list|,
name|svn_revnum_t
modifier|*
name|revision_deleted
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* See svn_ra__register_editor_shim_callbacks() */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|register_editor_shim_callbacks
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_delta_shim_callbacks_t
modifier|*
name|callbacks
parameter_list|)
function_decl|;
comment|/* See svn_ra_get_inherited_props(). */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_inherited_props
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|apr_array_header_t
modifier|*
modifier|*
name|iprops
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|revision
parameter_list|,
name|apr_pool_t
modifier|*
name|result_pool
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
comment|/* See svn_ra__get_commit_ev2()  */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|get_commit_ev2
function_decl|)
parameter_list|(
name|svn_editor_t
modifier|*
modifier|*
name|editor
parameter_list|,
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|apr_hash_t
modifier|*
name|revprop_table
parameter_list|,
name|svn_commit_callback2_t
name|callback
parameter_list|,
name|void
modifier|*
name|callback_baton
parameter_list|,
name|apr_hash_t
modifier|*
name|lock_tokens
parameter_list|,
name|svn_boolean_t
name|keep_locks
parameter_list|,
name|svn_ra__provide_base_cb_t
name|provide_base_cb
parameter_list|,
name|svn_ra__provide_props_cb_t
name|provide_props_cb
parameter_list|,
name|svn_ra__get_copysrc_kind_cb_t
name|get_copysrc_kind_cb
parameter_list|,
name|void
modifier|*
name|cb_baton
parameter_list|,
name|svn_cancel_func_t
name|cancel_func
parameter_list|,
name|void
modifier|*
name|cancel_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|result_pool
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
comment|/* See svn_ra__replay_range_ev2() */
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|replay_range_ev2
function_decl|)
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_revnum_t
name|start_revision
parameter_list|,
name|svn_revnum_t
name|end_revision
parameter_list|,
name|svn_revnum_t
name|low_water_mark
parameter_list|,
name|svn_boolean_t
name|send_deltas
parameter_list|,
name|svn_ra__replay_revstart_ev2_callback_t
name|revstart_func
parameter_list|,
name|svn_ra__replay_revfinish_ev2_callback_t
name|revfinish_func
parameter_list|,
name|void
modifier|*
name|replay_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
block|}
name|svn_ra__vtable_t
typedef|;
comment|/* The RA session object. */
struct|struct
name|svn_ra_session_t
block|{
specifier|const
name|svn_ra__vtable_t
modifier|*
name|vtable
decl_stmt|;
comment|/* Cancellation handlers consumers may want to use. */
name|svn_cancel_func_t
name|cancel_func
decl_stmt|;
name|void
modifier|*
name|cancel_baton
decl_stmt|;
comment|/* Pool used to manage this session. */
name|apr_pool_t
modifier|*
name|pool
decl_stmt|;
comment|/* Private data for the RA implementation. */
name|void
modifier|*
name|priv
decl_stmt|;
block|}
struct|;
comment|/* Each libsvn_ra_foo defines a function named svn_ra_foo__init of this type.  *  * The LOADER_VERSION parameter must remain first in the list, and the  * function must use the C calling convention on all platforms, so that  * the init functions can safely read the version parameter.  *  * POOL will be available as long as this module is being used.  *  * ### need to force this to be __cdecl on Windows... how??  */
typedef|typedef
name|svn_error_t
modifier|*
function_decl|(
modifier|*
name|svn_ra__init_func_t
function_decl|)
parameter_list|(
specifier|const
name|svn_version_t
modifier|*
name|loader_version
parameter_list|,
specifier|const
name|svn_ra__vtable_t
modifier|*
modifier|*
name|vtable
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/* Declarations of the init functions for the available RA libraries. */
name|svn_error_t
modifier|*
name|svn_ra_local__init
parameter_list|(
specifier|const
name|svn_version_t
modifier|*
name|loader_version
parameter_list|,
specifier|const
name|svn_ra__vtable_t
modifier|*
modifier|*
name|vtable
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_ra_svn__init
parameter_list|(
specifier|const
name|svn_version_t
modifier|*
name|loader_version
parameter_list|,
specifier|const
name|svn_ra__vtable_t
modifier|*
modifier|*
name|vtable
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|svn_error_t
modifier|*
name|svn_ra_serf__init
parameter_list|(
specifier|const
name|svn_version_t
modifier|*
name|loader_version
parameter_list|,
specifier|const
name|svn_ra__vtable_t
modifier|*
modifier|*
name|vtable
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/*** Compat Functions ***/
comment|/**  * Set *LOCATIONS to the locations (at the repository revisions  * LOCATION_REVISIONS) of the file identified by PATH in PEG_REVISION.  * PATH is relative to the URL to which SESSION was opened.  * LOCATION_REVISIONS is an array of svn_revnum_t's.  *LOCATIONS will  * be a mapping from the revisions to their appropriate absolute  * paths.  If the file doesn't exist in a location_revision, that  * revision will be ignored.  *  * Use POOL for all allocations.  *  * NOTE: This function uses the RA get_log interfaces to do its work,  * as a fallback mechanism for servers which don't support the native  * get_locations API.  */
name|svn_error_t
modifier|*
name|svn_ra__locations_from_log
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|apr_hash_t
modifier|*
modifier|*
name|locations_p
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|peg_revision
parameter_list|,
specifier|const
name|apr_array_header_t
modifier|*
name|location_revisions
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/**  * Call RECEIVER (with RECEIVER_BATON) for each segment in the  * location history of PATH in START_REV, working backwards in time  * from START_REV to END_REV.  *  * END_REV may be SVN_INVALID_REVNUM to indicate that you want to  * trace the history of the object to its origin.  *  * START_REV may be SVN_INVALID_REVNUM to indicate that you want to  * trace the history of the object beginning in the HEAD revision.  * Otherwise, START_REV must be younger than END_REV (unless END_REV  * is SVN_INVALID_REVNUM).  *  * Use POOL for all allocations.  *  * NOTE: This function uses the RA get_log interfaces to do its work,  * as a fallback mechanism for servers which don't support the native  * get_location_segments API.  */
name|svn_error_t
modifier|*
name|svn_ra__location_segments_from_log
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|peg_revision
parameter_list|,
name|svn_revnum_t
name|start_rev
parameter_list|,
name|svn_revnum_t
name|end_rev
parameter_list|,
name|svn_location_segment_receiver_t
name|receiver
parameter_list|,
name|void
modifier|*
name|receiver_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/**  * Retrieve a subset of the interesting revisions of a file PATH  * as seen in revision END (see svn_fs_history_prev() for a  * definition of "interesting revisions").  Invoke HANDLER with  * @a handler_baton as its first argument for each such revision.  * @a session is an open RA session.  Use POOL for all allocations.  *  * If there is an interesting revision of the file that is less than or  * equal to START, the iteration will begin at that revision.  * Else, the iteration will begin at the first revision of the file in  * the repository, which has to be less than or equal to END.  Note  * that if the function succeeds, HANDLER will have been called at  * least once.  *  * In a series of calls to HANDLER, the file contents for the first  * interesting revision will be provided as a text delta against the  * empty file.  In the following calls, the delta will be against the  * fulltext contents for the previous call.  *  * NOTE: This function uses the RA get_log interfaces to do its work,  * as a fallback mechanism for servers which don't support the native  * get_location_segments API.  */
name|svn_error_t
modifier|*
name|svn_ra__file_revs_from_log
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|start
parameter_list|,
name|svn_revnum_t
name|end
parameter_list|,
name|svn_file_rev_handler_t
name|handler
parameter_list|,
name|void
modifier|*
name|handler_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/**  * Given a path REL_DELETED_PATH, relative to the URL of SESSION, which  * exists at PEG_REVISION, and an END_REVISION> PEG_REVISION at which  * REL_DELETED_PATH no longer exists, set *REVISION_DELETED to the revision  * REL_DELETED_PATH was first deleted or replaced, within the inclusive  * revision range defined by PEG_REVISION and END_REVISION.  *  * If REL_DELETED_PATH does not exist at PEG_REVISION or was not deleted prior  * to END_REVISION within the specified range, then set *REVISION_DELETED to  * SVN_INVALID_REVNUM.  If PEG_REVISION or END_REVISION are invalid or if  * END_REVISION<= PEG_REVISION, then return SVN_ERR_CLIENT_BAD_REVISION.  *  * Use POOL for all allocations.  *  * NOTE: This function uses the RA get_log interfaces to do its work,  * as a fallback mechanism for servers which don't support the native  * get_deleted_rev API.  */
name|svn_error_t
modifier|*
name|svn_ra__get_deleted_rev_from_log
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
name|rel_deleted_path
parameter_list|,
name|svn_revnum_t
name|peg_revision
parameter_list|,
name|svn_revnum_t
name|end_revision
parameter_list|,
name|svn_revnum_t
modifier|*
name|revision_deleted
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
comment|/**  * Fallback logic for svn_ra_get_inherited_props() when that API  * need to find PATH's inherited properties on a legacy server that  * doesn't have the SVN_RA_CAPABILITY_INHERITED_PROPS capability.  *  * All arguments are as per svn_ra_get_inherited_props().  */
name|svn_error_t
modifier|*
name|svn_ra__get_inherited_props_walk
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|svn_revnum_t
name|revision
parameter_list|,
name|apr_array_header_t
modifier|*
modifier|*
name|inherited_props
parameter_list|,
name|apr_pool_t
modifier|*
name|result_pool
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
comment|/* Utility function to provide a shim between a returned Ev2 and an RA    provider's Ev1-based commit editor.     See svn_ra__get_commit_ev2() for parameter semantics.  */
name|svn_error_t
modifier|*
name|svn_ra__use_commit_shim
parameter_list|(
name|svn_editor_t
modifier|*
modifier|*
name|editor
parameter_list|,
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|apr_hash_t
modifier|*
name|revprop_table
parameter_list|,
name|svn_commit_callback2_t
name|callback
parameter_list|,
name|void
modifier|*
name|callback_baton
parameter_list|,
name|apr_hash_t
modifier|*
name|lock_tokens
parameter_list|,
name|svn_boolean_t
name|keep_locks
parameter_list|,
name|svn_ra__provide_base_cb_t
name|provide_base_cb
parameter_list|,
name|svn_ra__provide_props_cb_t
name|provide_props_cb
parameter_list|,
name|svn_ra__get_copysrc_kind_cb_t
name|get_copysrc_kind_cb
parameter_list|,
name|void
modifier|*
name|cb_baton
parameter_list|,
name|svn_cancel_func_t
name|cancel_func
parameter_list|,
name|void
modifier|*
name|cancel_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|result_pool
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
comment|/* Utility function to provide a shim between a returned Ev2 and an RA    provider's Ev1-based commit editor.     See svn_ra__replay_range_ev2() for parameter semantics.  */
name|svn_error_t
modifier|*
name|svn_ra__use_replay_range_shim
parameter_list|(
name|svn_ra_session_t
modifier|*
name|session
parameter_list|,
name|svn_revnum_t
name|start_revision
parameter_list|,
name|svn_revnum_t
name|end_revision
parameter_list|,
name|svn_revnum_t
name|low_water_mark
parameter_list|,
name|svn_boolean_t
name|send_deltas
parameter_list|,
name|svn_ra__replay_revstart_ev2_callback_t
name|revstart_func
parameter_list|,
name|svn_ra__replay_revfinish_ev2_callback_t
name|revfinish_func
parameter_list|,
name|void
modifier|*
name|replay_baton
parameter_list|,
name|svn_ra__provide_base_cb_t
name|provide_base_cb
parameter_list|,
name|svn_ra__provide_props_cb_t
name|provide_props_cb
parameter_list|,
name|void
modifier|*
name|cb_baton
parameter_list|,
name|apr_pool_t
modifier|*
name|scratch_pool
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

