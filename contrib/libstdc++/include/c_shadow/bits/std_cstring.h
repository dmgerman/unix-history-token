begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C++ -*- header wrapper.
end_comment

begin_comment
comment|// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is part of the GNU ISO C++ Library.  This library is free
end_comment

begin_comment
comment|// software; you can redistribute it and/or modify it under the
end_comment

begin_comment
comment|// terms of the GNU General Public License as published by the
end_comment

begin_comment
comment|// Free Software Foundation; either version 2, or (at your option)
end_comment

begin_comment
comment|// any later version.
end_comment

begin_comment
comment|// This library is distributed in the hope that it will be useful,
end_comment

begin_comment
comment|// but WITHOUT ANY WARRANTY; without even the implied warranty of
end_comment

begin_comment
comment|// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
end_comment

begin_comment
comment|// GNU General Public License for more details.
end_comment

begin_comment
comment|// You should have received a copy of the GNU General Public License along
end_comment

begin_comment
comment|// with this library; see the file COPYING.  If not, write to the Free
end_comment

begin_comment
comment|// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
end_comment

begin_comment
comment|// USA.
end_comment

begin_comment
comment|// As a special exception, you may use this file as part of a free software
end_comment

begin_comment
comment|// library without restriction.  Specifically, if other files instantiate
end_comment

begin_comment
comment|// templates or use macros or inline functions from this file, or you compile
end_comment

begin_comment
comment|// this file and link it with other files to produce an executable, this
end_comment

begin_comment
comment|// file does not by itself cause the resulting executable to be covered by
end_comment

begin_comment
comment|// the GNU General Public License.  This exception does not however
end_comment

begin_comment
comment|// invalidate any other reasons why the executable file might be covered by
end_comment

begin_comment
comment|// the GNU General Public License.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// ISO C++ 14882: 20.4.6  C library
end_comment

begin_comment
comment|//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_CPP_CSTRING
end_ifndef

begin_define
define|#
directive|define
name|_CPP_CSTRING
value|1
end_define

begin_if
if|#
directive|if
name|defined
name|__GLIBC__
operator|&&
name|__GLIBC__
operator|>=
literal|2
end_if

begin_comment
comment|// We must not see the optimized string functions GNU libc defines.
end_comment

begin_define
define|#
directive|define
name|__NO_STRING_INLINES
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<bits/std_cstddef.h>
end_include

begin_decl_stmt
name|namespace
name|_C_legacy
block|{
extern|extern
literal|"C"
block|{
define|#
directive|define
name|_IN_C_LEGACY_
pragma|#
directive|pragma
name|GCC
name|system_header
empty|#     include_next<string.h>
block|}
comment|// We do inline captures of most of these in case they
comment|// have been optimized with macros.
specifier|inline
name|void
modifier|*
name|_CPP_memcpy_capture
parameter_list|(
name|void
modifier|*
name|__s1
parameter_list|,
name|void
specifier|const
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|memcpy
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|void
modifier|*
name|_CPP_memmove_capture
parameter_list|(
name|void
modifier|*
name|__s1
parameter_list|,
name|void
specifier|const
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|memmove
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|void
modifier|*
name|_CPP_strcpy_capture
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|strcpy
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|_CPP_strncpy_capture
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|strncpy
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|_CPP_strcat_capture
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|strcat
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|_CPP_strncat_capture
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|strncat
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|int
name|_CPP_memcmp_capture
parameter_list|(
name|void
specifier|const
modifier|*
name|__s1
parameter_list|,
name|void
specifier|const
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|memcmp
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|int
name|_CPP_strcmp_capture
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|strcmp
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|int
name|_CPP_strcoll_capture
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|strcoll
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|int
name|_CPP_strncmp_capture
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|strncmp
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|size_t
name|_CPP_strxfrm_capture
parameter_list|(
name|char
modifier|*
name|__b
parameter_list|,
name|char
specifier|const
modifier|*
name|__s
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|strxfrm
argument_list|(
name|__b
argument_list|,
name|__s
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|void
modifier|*
name|_CPP_memchr_capture
parameter_list|(
name|void
specifier|const
modifier|*
name|__s1
parameter_list|,
name|int
name|__c
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|memchr
argument_list|(
name|__s1
argument_list|,
name|__c
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|_CPP_strchr_capture
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|int
name|__c
parameter_list|)
block|{
return|return
name|strchr
argument_list|(
name|__s1
argument_list|,
name|__c
argument_list|)
return|;
block|}
specifier|inline
name|size_t
name|_CPP_strcspn_capture
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|strcspn
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|_CPP_strpbrk_capture
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|strpbrk
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|_CPP_strrchr_capture
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|int
name|__c
parameter_list|)
block|{
return|return
name|strrchr
argument_list|(
name|__s1
argument_list|,
name|__c
argument_list|)
return|;
block|}
specifier|inline
name|size_t
name|_CPP_strspn_capture
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|strspn
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|_CPP_strstr_capture
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|strstr
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|_CPP_strtok_capture
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|strtok
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|void
modifier|*
name|_CPP_memset_capture
parameter_list|(
name|void
modifier|*
name|__s
parameter_list|,
name|int
name|__c
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|memset
argument_list|(
name|__s
argument_list|,
name|__c
argument_list|,
name|__n
argument_list|)
return|;
block|}
comment|// inline char*
comment|// _CPP_strerror_capture(int __num)
comment|// { return strerror(__num); }
specifier|inline
name|size_t
name|_CPP_strlen_capture
parameter_list|(
name|char
specifier|const
modifier|*
name|__s
parameter_list|)
block|{
return|return
name|strlen
argument_list|(
name|__s
argument_list|)
return|;
block|}
block|}
end_decl_stmt

begin_comment
comment|// namespace _C_legacy
end_comment

begin_undef
undef|#
directive|undef
name|memcpy
end_undef

begin_undef
undef|#
directive|undef
name|memmove
end_undef

begin_undef
undef|#
directive|undef
name|strcpy
end_undef

begin_undef
undef|#
directive|undef
name|strncpy
end_undef

begin_undef
undef|#
directive|undef
name|strcat
end_undef

begin_undef
undef|#
directive|undef
name|strncat
end_undef

begin_undef
undef|#
directive|undef
name|memcmp
end_undef

begin_undef
undef|#
directive|undef
name|strcmp
end_undef

begin_undef
undef|#
directive|undef
name|strcoll
end_undef

begin_undef
undef|#
directive|undef
name|strncmp
end_undef

begin_undef
undef|#
directive|undef
name|strxfrm
end_undef

begin_undef
undef|#
directive|undef
name|memchr
end_undef

begin_undef
undef|#
directive|undef
name|strchr
end_undef

begin_undef
undef|#
directive|undef
name|strcspn
end_undef

begin_undef
undef|#
directive|undef
name|strpbrk
end_undef

begin_undef
undef|#
directive|undef
name|strrchr
end_undef

begin_undef
undef|#
directive|undef
name|strspn
end_undef

begin_undef
undef|#
directive|undef
name|strstr
end_undef

begin_undef
undef|#
directive|undef
name|strtok
end_undef

begin_undef
undef|#
directive|undef
name|memset
end_undef

begin_undef
undef|#
directive|undef
name|strerror
end_undef

begin_undef
undef|#
directive|undef
name|strlen
end_undef

begin_decl_stmt
name|namespace
name|std
block|{
comment|// Redefine most of these inline.  Note that the
comment|// C++ definition differs from C in some cases.
specifier|inline
name|void
modifier|*
name|memcpy
parameter_list|(
name|void
modifier|*
name|__s1
parameter_list|,
name|void
specifier|const
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_memcpy_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|void
modifier|*
name|memmove
parameter_list|(
name|void
modifier|*
name|__s1
parameter_list|,
name|void
specifier|const
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_memmove_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|void
modifier|*
name|strcpy
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strcpy_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|strncpy
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strncpy_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|strcat
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strcat_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|strncat
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strncat_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|int
name|memcmp
parameter_list|(
name|void
specifier|const
modifier|*
name|__s1
parameter_list|,
name|void
specifier|const
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_memcmp_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|int
name|strcmp
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strcmp_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|int
name|strcoll
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strcoll_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|int
name|strncmp
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strncmp_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|size_t
name|strxfrm
parameter_list|(
name|char
modifier|*
name|__b
parameter_list|,
name|char
specifier|const
modifier|*
name|__s
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strxfrm_capture
argument_list|(
name|__b
argument_list|,
name|__s
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|void
specifier|const
modifier|*
name|memchr
parameter_list|(
name|void
specifier|const
modifier|*
name|__s1
parameter_list|,
name|int
name|__c
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_memchr_capture
argument_list|(
name|__s1
argument_list|,
name|__c
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|void
modifier|*
name|memchr
parameter_list|(
name|void
modifier|*
name|__s1
parameter_list|,
name|int
name|__c
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_memchr_capture
argument_list|(
name|__s1
argument_list|,
name|__c
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|inline
name|char
specifier|const
modifier|*
name|strchr
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|int
name|__c
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strchr_capture
argument_list|(
name|__s1
argument_list|,
name|__c
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|strchr
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|int
name|__c
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strchr_capture
argument_list|(
name|__s1
argument_list|,
name|__c
argument_list|)
return|;
block|}
specifier|inline
name|size_t
name|strcspn
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strcspn_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
specifier|const
modifier|*
name|strpbrk
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strpbrk_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|strpbrk
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strpbrk_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
specifier|const
modifier|*
name|strrchr
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|int
name|__c
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strrchr_capture
argument_list|(
name|__s1
argument_list|,
name|__c
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|strrchr
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|int
name|__c
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strrchr_capture
argument_list|(
name|__s1
argument_list|,
name|__c
argument_list|)
return|;
block|}
specifier|inline
name|size_t
name|strspn
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strspn_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
specifier|const
modifier|*
name|strstr
parameter_list|(
name|char
specifier|const
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strstr_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|strstr
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strstr_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|strtok
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
name|char
specifier|const
modifier|*
name|__s2
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strtok_capture
argument_list|(
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|inline
name|void
modifier|*
name|memset
parameter_list|(
name|void
modifier|*
name|__s
parameter_list|,
name|int
name|__c
parameter_list|,
name|size_t
name|__n
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_memset_capture
argument_list|(
name|__s
argument_list|,
name|__c
argument_list|,
name|__n
argument_list|)
return|;
block|}
name|using
name|_C_legacy
operator|::
name|strerror
expr_stmt|;
specifier|inline
name|size_t
name|strlen
parameter_list|(
name|char
specifier|const
modifier|*
name|__s
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_strlen_capture
argument_list|(
name|__s
argument_list|)
return|;
block|}
block|}
end_decl_stmt

begin_comment
comment|// namespace std
end_comment

begin_undef
undef|#
directive|undef
name|_IN_C_LEGACY_
end_undef

begin_endif
endif|#
directive|endif
end_endif

end_unit

