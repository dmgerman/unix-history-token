begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C++ -*- header wrapper.
end_comment

begin_comment
comment|// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is part of the GNU ISO C++ Library.  This library is free
end_comment

begin_comment
comment|// software; you can redistribute it and/or modify it under the
end_comment

begin_comment
comment|// terms of the GNU General Public License as published by the
end_comment

begin_comment
comment|// Free Software Foundation; either version 2, or (at your option)
end_comment

begin_comment
comment|// any later version.
end_comment

begin_comment
comment|// This library is distributed in the hope that it will be useful,
end_comment

begin_comment
comment|// but WITHOUT ANY WARRANTY; without even the implied warranty of
end_comment

begin_comment
comment|// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
end_comment

begin_comment
comment|// GNU General Public License for more details.
end_comment

begin_comment
comment|// You should have received a copy of the GNU General Public License along
end_comment

begin_comment
comment|// with this library; see the file COPYING.  If not, write to the Free
end_comment

begin_comment
comment|// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
end_comment

begin_comment
comment|// USA.
end_comment

begin_comment
comment|// As a special exception, you may use this file as part of a free software
end_comment

begin_comment
comment|// library without restriction.  Specifically, if other files instantiate
end_comment

begin_comment
comment|// templates or use macros or inline functions from this file, or you compile
end_comment

begin_comment
comment|// this file and link it with other files to produce an executable, this
end_comment

begin_comment
comment|// file does not by itself cause the resulting executable to be covered by
end_comment

begin_comment
comment|// the GNU General Public License.  This exception does not however
end_comment

begin_comment
comment|// invalidate any other reasons why the executable file might be covered by
end_comment

begin_comment
comment|// the GNU General Public License.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// ISO C++ 14882: 27.8.2  C Library files
end_comment

begin_comment
comment|//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_CPP_CSTDIO
end_ifndef

begin_define
define|#
directive|define
name|_CPP_CSTDIO
value|1
end_define

begin_include
include|#
directive|include
file|<bits/std_cstddef.h>
end_include

begin_include
include|#
directive|include
file|<bits/std_cstdarg.h>
end_include

begin_decl_stmt
name|namespace
name|_C_legacy
block|{
extern|extern
literal|"C"
block|{
define|#
directive|define
name|_IN_C_LEGACY_
undef|#
directive|undef
name|__need_FILE
pragma|#
directive|pragma
name|GCC
name|system_header
empty|#     include_next<stdio.h>
block|}
typedef|typedef
name|FILE
name|_CPP_FILE_capture
typedef|;
typedef|typedef
name|fpos_t
name|_CPP_fpos_t_capture
typedef|;
specifier|inline
name|FILE
modifier|*
name|_CPP_stderr_capture
parameter_list|()
block|{
return|return
name|stderr
return|;
block|}
specifier|inline
name|FILE
modifier|*
name|_CPP_stdin_capture
parameter_list|()
block|{
return|return
name|stdin
return|;
block|}
specifier|inline
name|FILE
modifier|*
name|_CPP_stdout_capture
parameter_list|()
block|{
return|return
name|stdout
return|;
block|}
specifier|inline
name|int
name|_CPP_getc_capture
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|getc
argument_list|(
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|int
name|_CPP_getchar_capture
parameter_list|()
block|{
return|return
name|getchar
argument_list|()
return|;
block|}
specifier|inline
name|int
name|_CPP_putc_capture
parameter_list|(
name|int
name|__c
parameter_list|,
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|putc
argument_list|(
name|__c
argument_list|,
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|int
name|_CPP_putchar_capture
parameter_list|(
name|int
name|__c
parameter_list|)
block|{
return|return
name|putchar
argument_list|(
name|__c
argument_list|)
return|;
block|}
specifier|inline
name|int
name|_CPP_feof_capture
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|feof
argument_list|(
name|__f
argument_list|)
return|;
block|}
block|}
end_decl_stmt

begin_comment
comment|// namespace _C_legacy
end_comment

begin_undef
undef|#
directive|undef
name|FILE
end_undef

begin_undef
undef|#
directive|undef
name|fpos_t
end_undef

begin_undef
undef|#
directive|undef
name|remove
end_undef

begin_undef
undef|#
directive|undef
name|rename
end_undef

begin_undef
undef|#
directive|undef
name|tmpfile
end_undef

begin_undef
undef|#
directive|undef
name|tmpnam
end_undef

begin_undef
undef|#
directive|undef
name|fclose
end_undef

begin_undef
undef|#
directive|undef
name|fflush
end_undef

begin_undef
undef|#
directive|undef
name|fopen
end_undef

begin_undef
undef|#
directive|undef
name|freopen
end_undef

begin_undef
undef|#
directive|undef
name|setbuf
end_undef

begin_undef
undef|#
directive|undef
name|setvbuf
end_undef

begin_undef
undef|#
directive|undef
name|fprintf
end_undef

begin_undef
undef|#
directive|undef
name|fscanf
end_undef

begin_undef
undef|#
directive|undef
name|printf
end_undef

begin_undef
undef|#
directive|undef
name|scanf
end_undef

begin_undef
undef|#
directive|undef
name|sprintf
end_undef

begin_undef
undef|#
directive|undef
name|sscanf
end_undef

begin_undef
undef|#
directive|undef
name|vfprintf
end_undef

begin_undef
undef|#
directive|undef
name|vprintf
end_undef

begin_undef
undef|#
directive|undef
name|vsprintf
end_undef

begin_undef
undef|#
directive|undef
name|fgetc
end_undef

begin_undef
undef|#
directive|undef
name|fgets
end_undef

begin_undef
undef|#
directive|undef
name|fputc
end_undef

begin_undef
undef|#
directive|undef
name|fputs
end_undef

begin_undef
undef|#
directive|undef
name|getc
end_undef

begin_undef
undef|#
directive|undef
name|getchar
end_undef

begin_undef
undef|#
directive|undef
name|gets
end_undef

begin_undef
undef|#
directive|undef
name|putc
end_undef

begin_undef
undef|#
directive|undef
name|putchar
end_undef

begin_undef
undef|#
directive|undef
name|puts
end_undef

begin_undef
undef|#
directive|undef
name|ungetc
end_undef

begin_undef
undef|#
directive|undef
name|fread
end_undef

begin_undef
undef|#
directive|undef
name|fwrite
end_undef

begin_undef
undef|#
directive|undef
name|fgetpos
end_undef

begin_undef
undef|#
directive|undef
name|fseek
end_undef

begin_undef
undef|#
directive|undef
name|fsetpos
end_undef

begin_undef
undef|#
directive|undef
name|ftell
end_undef

begin_undef
undef|#
directive|undef
name|rewind
end_undef

begin_undef
undef|#
directive|undef
name|clearerr
end_undef

begin_undef
undef|#
directive|undef
name|feof
end_undef

begin_undef
undef|#
directive|undef
name|ferror
end_undef

begin_undef
undef|#
directive|undef
name|perror
end_undef

begin_undef
undef|#
directive|undef
name|stderr
end_undef

begin_define
define|#
directive|define
name|stderr
value|std::_CPP_stderr()
end_define

begin_undef
undef|#
directive|undef
name|stdin
end_undef

begin_define
define|#
directive|define
name|stdin
value|std::_CPP_stdin()
end_define

begin_undef
undef|#
directive|undef
name|stdout
end_undef

begin_define
define|#
directive|define
name|stdout
value|std::_CPP_stdout()
end_define

begin_decl_stmt
name|namespace
name|std
block|{
name|struct
name|FILE
range|:
name|_C_legacy
operator|::
name|_CPP_FILE_capture
block|{ }
decl_stmt|;
struct|struct
name|fpos_t
block|{
name|_C_legacy
operator|::
name|_CPP_fpos_t_capture
name|_M_dummy
expr_stmt|;
block|}
struct|;
name|using
name|_C_legacy
operator|::
name|remove
expr_stmt|;
name|using
name|_C_legacy
operator|::
name|rename
expr_stmt|;
name|using
name|_C_legacy
operator|::
name|tmpnam
expr_stmt|;
name|using
name|_C_legacy
operator|::
name|printf
expr_stmt|;
name|using
name|_C_legacy
operator|::
name|scanf
expr_stmt|;
name|using
name|_C_legacy
operator|::
name|sprintf
expr_stmt|;
name|using
name|_C_legacy
operator|::
name|sscanf
expr_stmt|;
name|using
name|_C_legacy
operator|::
name|gets
expr_stmt|;
name|using
name|_C_legacy
operator|::
name|perror
expr_stmt|;
specifier|inline
name|FILE
modifier|*
name|_CPP_stderr
parameter_list|()
block|{
return|return
name|reinterpret_cast
operator|<
name|FILE
operator|*
operator|>
operator|(
name|_C_legacy
operator|::
name|_CPP_stderr_capture
argument_list|()
operator|)
return|;
block|}
specifier|inline
name|FILE
modifier|*
name|_CPP_stdin
parameter_list|()
block|{
return|return
name|reinterpret_cast
operator|<
name|FILE
operator|*
operator|>
operator|(
name|_C_legacy
operator|::
name|_CPP_stdin_capture
argument_list|()
operator|)
return|;
block|}
specifier|inline
name|FILE
modifier|*
name|_CPP_stdout
parameter_list|()
block|{
return|return
name|reinterpret_cast
operator|<
name|FILE
operator|*
operator|>
operator|(
name|_C_legacy
operator|::
name|_CPP_stdout_capture
argument_list|()
operator|)
return|;
block|}
specifier|inline
name|FILE
modifier|*
name|tmpfile
parameter_list|()
block|{
return|return
name|reinterpret_cast
operator|<
name|FILE
operator|*
operator|>
operator|(
name|_C_legacy
operator|::
name|tmpfile
argument_list|()
operator|)
return|;
block|}
specifier|inline
name|int
name|fclose
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|fclose
argument_list|(
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|int
name|fflush
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|fflush
argument_list|(
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|FILE
modifier|*
name|fopen
parameter_list|(
name|char
specifier|const
modifier|*
name|__name
parameter_list|,
name|char
specifier|const
modifier|*
name|__mode
parameter_list|)
block|{
return|return
name|reinterpret_cast
operator|<
name|FILE
operator|*
operator|>
operator|(
name|_C_legacy
operator|::
name|fopen
argument_list|(
name|__name
argument_list|,
name|__mode
argument_list|)
operator|)
return|;
block|}
specifier|inline
name|FILE
modifier|*
name|freopen
parameter_list|(
name|char
specifier|const
modifier|*
name|__name
parameter_list|,
name|char
specifier|const
modifier|*
name|__mode
parameter_list|,
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|reinterpret_cast
operator|<
name|FILE
operator|*
operator|>
operator|(
name|_C_legacy
operator|::
name|freopen
argument_list|(
name|__name
argument_list|,
name|__mode
argument_list|,
name|__f
argument_list|)
operator|)
return|;
block|}
specifier|inline
name|void
name|setbuf
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|,
name|char
modifier|*
name|__buf
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|setbuf
argument_list|(
name|__f
argument_list|,
name|__buf
argument_list|)
return|;
block|}
specifier|inline
name|int
name|setvbuf
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|,
name|char
modifier|*
name|__buf
parameter_list|,
name|int
name|__mode
parameter_list|,
name|size_t
name|__size
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|setvbuf
argument_list|(
name|__f
argument_list|,
name|__buf
argument_list|,
name|__mode
argument_list|,
name|__size
argument_list|)
return|;
block|}
specifier|inline
name|int
name|fprintf
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|,
name|char
specifier|const
modifier|*
name|__fmt
parameter_list|,
modifier|...
parameter_list|)
block|{
name|va_list
name|__v
decl_stmt|;
name|va_start
argument_list|(
name|__v
argument_list|,
name|__fmt
argument_list|)
expr_stmt|;
name|int
name|__i
init|=
name|_C_legacy
operator|::
name|vfprintf
argument_list|(
name|__f
argument_list|,
name|__fmt
argument_list|,
name|__v
argument_list|)
decl_stmt|;
name|va_end
argument_list|(
name|__v
argument_list|)
expr_stmt|;
return|return
name|__i
return|;
block|}
specifier|inline
name|int
name|fscanf
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|,
name|char
specifier|const
modifier|*
name|__fmt
parameter_list|,
modifier|...
parameter_list|)
block|{
name|va_list
name|__v
decl_stmt|;
name|va_start
argument_list|(
name|__v
argument_list|,
name|__fmt
argument_list|)
expr_stmt|;
name|int
name|__i
init|=
name|_C_legacy
operator|::
name|vfscanf
argument_list|(
name|__f
argument_list|,
name|__fmt
argument_list|,
name|__v
argument_list|)
decl_stmt|;
name|va_end
argument_list|(
name|__v
argument_list|)
expr_stmt|;
return|return
name|__i
return|;
block|}
specifier|inline
name|int
name|vfprintf
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|,
name|char
specifier|const
modifier|*
name|__fmt
parameter_list|,
name|va_list
name|__v
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|vfprintf
argument_list|(
name|__f
argument_list|,
name|__fmt
argument_list|,
name|__v
argument_list|)
return|;
block|}
specifier|inline
name|int
name|vprintf
parameter_list|(
name|char
specifier|const
modifier|*
name|__fmt
parameter_list|,
name|va_list
name|__v
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|vprintf
argument_list|(
name|__fmt
argument_list|,
name|__v
argument_list|)
return|;
block|}
specifier|inline
name|int
name|vsprintf
parameter_list|(
name|char
modifier|*
name|__buf
parameter_list|,
name|char
specifier|const
modifier|*
name|__fmt
parameter_list|,
name|va_list
name|__v
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|vsprintf
argument_list|(
name|__buf
argument_list|,
name|__fmt
argument_list|,
name|__v
argument_list|)
return|;
block|}
specifier|inline
name|int
name|fgetc
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|fgetc
argument_list|(
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|char
modifier|*
name|fgets
parameter_list|(
name|char
modifier|*
name|__buf
parameter_list|,
name|int
name|__n
parameter_list|,
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|fgets
argument_list|(
name|__buf
argument_list|,
name|__n
argument_list|,
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|int
name|fputc
parameter_list|(
name|int
name|__c
parameter_list|,
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|fputc
argument_list|(
name|__c
argument_list|,
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|int
name|fputs
parameter_list|(
name|char
specifier|const
modifier|*
name|__s
parameter_list|,
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|fputs
argument_list|(
name|__s
argument_list|,
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|int
name|getc
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_getc_capture
argument_list|(
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|int
name|getchar
parameter_list|()
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_getchar_capture
argument_list|()
return|;
block|}
specifier|inline
name|int
name|putc
parameter_list|(
name|int
name|__c
parameter_list|,
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_putc_capture
argument_list|(
name|__c
argument_list|,
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|int
name|putchar
parameter_list|(
name|int
name|__c
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_putchar_capture
argument_list|(
name|__c
argument_list|)
return|;
block|}
name|using
name|_C_legacy
operator|::
name|puts
expr_stmt|;
specifier|inline
name|int
name|ungetc
parameter_list|(
name|int
name|__c
parameter_list|,
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|ungetc
argument_list|(
name|__c
argument_list|,
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|size_t
name|fread
parameter_list|(
name|void
modifier|*
name|__p
parameter_list|,
name|size_t
name|__z
parameter_list|,
name|size_t
name|__n
parameter_list|,
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|fread
argument_list|(
name|__p
argument_list|,
name|__z
argument_list|,
name|__n
argument_list|,
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|size_t
name|fwrite
parameter_list|(
name|void
specifier|const
modifier|*
name|__p
parameter_list|,
name|size_t
name|__z
parameter_list|,
name|size_t
name|__n
parameter_list|,
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|fwrite
argument_list|(
name|__p
argument_list|,
name|__z
argument_list|,
name|__n
argument_list|,
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|int
name|fgetpos
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|,
name|fpos_t
modifier|*
name|__pos
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|fgetpos
argument_list|(
name|__f
argument_list|,
operator|&
name|__pos
operator|->
name|_M_dummy
argument_list|)
return|;
block|}
specifier|inline
name|int
name|fseek
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|,
name|long
name|__off
parameter_list|,
name|int
name|__how
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|fseek
argument_list|(
name|__f
argument_list|,
name|__off
argument_list|,
name|__how
argument_list|)
return|;
block|}
specifier|inline
name|int
name|fsetpos
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|,
name|fpos_t
specifier|const
modifier|*
name|__pos
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|fsetpos
argument_list|(
name|__f
argument_list|,
operator|&
name|__pos
operator|->
name|_M_dummy
argument_list|)
return|;
block|}
specifier|inline
name|long
name|ftell
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|ftell
argument_list|(
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|void
name|rewind
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|rewind
argument_list|(
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|void
name|clearerr
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|clearerr
argument_list|(
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|int
name|feof
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_feof_capture
argument_list|(
name|__f
argument_list|)
return|;
block|}
specifier|inline
name|int
name|ferror
parameter_list|(
name|FILE
modifier|*
name|__f
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|ferror
argument_list|(
name|__f
argument_list|)
return|;
block|}
block|}
end_decl_stmt

begin_comment
comment|// namespace std
end_comment

begin_undef
undef|#
directive|undef
name|_IN_C_LEGACY_
end_undef

begin_endif
endif|#
directive|endif
end_endif

end_unit

