begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C++ -*- header wrapper.
end_comment

begin_comment
comment|// Copyright (C) 1997-1999, 2000, 2002 Free Software Foundation, Inc.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is part of the GNU ISO C++ Library.  This library is free
end_comment

begin_comment
comment|// software; you can redistribute it and/or modify it under the
end_comment

begin_comment
comment|// terms of the GNU General Public License as published by the
end_comment

begin_comment
comment|// Free Software Foundation; either version 2, or (at your option)
end_comment

begin_comment
comment|// any later version.
end_comment

begin_comment
comment|// This library is distributed in the hope that it will be useful,
end_comment

begin_comment
comment|// but WITHOUT ANY WARRANTY; without even the implied warranty of
end_comment

begin_comment
comment|// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
end_comment

begin_comment
comment|// GNU General Public License for more details.
end_comment

begin_comment
comment|// You should have received a copy of the GNU General Public License along
end_comment

begin_comment
comment|// with this library; see the file COPYING.  If not, write to the Free
end_comment

begin_comment
comment|// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
end_comment

begin_comment
comment|// USA.
end_comment

begin_comment
comment|// As a special exception, you may use this file as part of a free software
end_comment

begin_comment
comment|// library without restriction.  Specifically, if other files instantiate
end_comment

begin_comment
comment|// templates or use macros or inline functions from this file, or you compile
end_comment

begin_comment
comment|// this file and link it with other files to produce an executable, this
end_comment

begin_comment
comment|// file does not by itself cause the resulting executable to be covered by
end_comment

begin_comment
comment|// the GNU General Public License.  This exception does not however
end_comment

begin_comment
comment|// invalidate any other reasons why the executable file might be covered by
end_comment

begin_comment
comment|// the GNU General Public License.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// ISO C++ 14882: 26.5  C library
end_comment

begin_comment
comment|//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_CPP_CMATH
end_ifndef

begin_define
define|#
directive|define
name|_CPP_CMATH
value|1
end_define

begin_include
include|#
directive|include
file|<bits/c++config.h>
end_include

begin_decl_stmt
name|namespace
name|_C_legacy
block|{
extern|extern
literal|"C"
block|{
define|#
directive|define
name|_IN_C_LEGACY_
pragma|#
directive|pragma
name|GCC
name|system_header
empty|#     include_next<math.h>
block|}
if|#
directive|if
name|_GLIBCPP_HAVE_ACOSF
specifier|inline
name|float
name|_CPP_acos_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|acosf
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_acos_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|acos
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_ASINF
specifier|inline
name|float
name|_CPP_asin_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|asinf
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_asin_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|asin
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_ATANF
specifier|inline
name|float
name|_CPP_atan_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|atanf
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_atan_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|atan
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_ATAN2F
specifier|inline
name|float
name|_CPP_atan2_capture
parameter_list|(
name|float
name|__y
parameter_list|,
name|float
name|__x
parameter_list|)
block|{
return|return
name|atan2f
argument_list|(
name|__y
argument_list|,
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_atan2_capture
parameter_list|(
name|float
name|__y
parameter_list|,
name|float
name|__x
parameter_list|)
block|{
return|return
name|atan2
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__y
operator|)
argument_list|,
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_CEILF
specifier|inline
name|float
name|_CPP_ceil_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|ceilf
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_ceil_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|ceil
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
specifier|inline
name|float
name|_CPP_cos_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|__builtin_cosf
argument_list|(
name|__x
argument_list|)
return|;
block|}
if|#
directive|if
name|_GLIBCPP_HAVE_COSHF
specifier|inline
name|float
name|_CPP_cosh_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|coshf
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_cosh_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|cosh
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_EXPF
specifier|inline
name|float
name|_CPP_exp_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|expf
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_exp_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|exp
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
specifier|inline
name|float
name|_CPP_fabs_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|__builtin_fabsf
argument_list|(
name|__x
argument_list|)
return|;
block|}
if|#
directive|if
name|_GLIBCPP_HAVE_FLOORF
specifier|inline
name|float
name|_CPP_floor_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|floorf
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_floor_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|floor
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_FMODFF
specifier|inline
name|float
name|_CPP_fmod_capture
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
name|fmodf
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_fmod_capture
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
name|fmod
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|,
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__y
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_FREXPF
specifier|inline
name|float
name|_CPP_frexp_capture
parameter_list|(
name|float
name|__x
parameter_list|,
name|int
modifier|*
name|__exp
parameter_list|)
block|{
return|return
name|frexpf
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_frexp_capture
parameter_list|(
name|float
name|__x
parameter_list|,
name|int
modifier|*
name|__exp
parameter_list|)
block|{
return|return
name|frexp
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_LDEXPF
specifier|inline
name|float
name|_CPP_ldexp_capture
parameter_list|(
name|float
name|__x
parameter_list|,
name|int
name|__exp
parameter_list|)
block|{
return|return
name|ldexpf
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_ldexp_capture
parameter_list|(
name|float
name|__x
parameter_list|,
name|int
name|__exp
parameter_list|)
block|{
return|return
name|ldexp
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|,
name|__exp
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_LOGF
specifier|inline
name|float
name|_CPP_log_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|logf
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_log_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|log
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_LOG10F
specifier|inline
name|float
name|_CPP_log10_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|log10f
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_log10_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|log10
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_MODFF
specifier|inline
name|float
name|_CPP_modf_capture
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
modifier|*
name|__iptr
parameter_list|)
block|{
return|return
name|modff
argument_list|(
name|__x
argument_list|,
name|__iptr
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_modf_capture
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
modifier|*
name|__iptr
parameter_list|)
block|{
name|double
name|__tmp
decl_stmt|;
name|double
name|__res
init|=
name|_C_legacy
operator|::
name|modf
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|,
operator|&
name|__tmp
argument_list|)
decl_stmt|;
operator|*
name|__iptr
operator|=
name|static_cast
operator|<
name|float
operator|>
operator|(
name|__tmp
operator|)
expr_stmt|;
return|return
name|__res
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_POWF
specifier|inline
name|float
name|_CPP_pow_capture
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
name|powf
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_pow_capture
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
name|pow
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|,
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__y
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
name|float
name|pow
parameter_list|(
name|float
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|inline
name|float
name|_CPP_sin_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|__builtin_sinf
argument_list|(
name|__x
argument_list|)
return|;
block|}
if|#
directive|if
name|_GLIBCPP_HAVE_SINHF
specifier|inline
name|float
name|_CPP_sinh_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|sinhf
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_sinh_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|sinh
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
specifier|inline
name|float
name|_CPP_sqrt_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|__builtin_sqrtf
argument_list|(
name|__x
argument_list|)
return|;
block|}
if|#
directive|if
name|_GLIBCPP_HAVE_TANF
specifier|inline
name|float
name|_CPP_tan_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|tanf
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_tan_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|tan
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_TANHF
specifier|inline
name|float
name|_CPP_tanh_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|tanhf
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|float
name|_CPP_tanh_capture
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|tanh
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
specifier|inline
name|double
name|_CPP_acos_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|acos
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_asin_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|asin
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_atan_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|atan
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_atan2_capture
parameter_list|(
name|double
name|__y
parameter_list|,
name|double
name|__x
parameter_list|)
block|{
return|return
name|atan2
argument_list|(
name|__y
argument_list|,
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_ceil_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|ceil
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_cos_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|__builtin_cos
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_cosh_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|cosh
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_exp_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|exp
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_fabs_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|__builtin_fabs
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_floor_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|floor
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_fmod_capture
parameter_list|(
name|double
name|__x
parameter_list|,
name|double
name|__y
parameter_list|)
block|{
return|return
name|fmod
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_frexp_capture
parameter_list|(
name|double
name|__x
parameter_list|,
name|int
modifier|*
name|__exp
parameter_list|)
block|{
return|return
name|frexp
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_ldexp_capture
parameter_list|(
name|double
name|__x
parameter_list|,
name|int
name|__exp
parameter_list|)
block|{
return|return
name|ldexp
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_log_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|log
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_log10_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|log10
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_modf_capture
parameter_list|(
name|double
name|__x
parameter_list|,
name|double
modifier|*
name|__iptr
parameter_list|)
block|{
return|return
name|modf
argument_list|(
name|__x
argument_list|,
name|__iptr
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_pow_capture
parameter_list|(
name|double
name|__x
parameter_list|,
name|double
name|__y
parameter_list|)
block|{
return|return
name|pow
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_sin_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|__builtin_sin
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_sinh_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|sinh
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_sqrt_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|__builtin_sqrt
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_tan_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|tan
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|_CPP_tanh_capture
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|tanh
argument_list|(
name|__x
argument_list|)
return|;
block|}
if|#
directive|if
name|_GLIBCPP_HAVE_ACOSL
specifier|inline
name|long
name|double
name|_CPP_acos_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|acosl
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_acos_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|acos
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_ASINL
specifier|inline
name|long
name|double
name|_CPP_asin_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|asinl
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_asin_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|asin
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_ATANL
specifier|inline
name|long
name|double
name|_CPP_atan_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|atanl
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_atan_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|atan
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_ATAN2L
specifier|inline
name|long
name|double
name|_CPP_atan2_capture
parameter_list|(
name|long
name|double
name|__y
parameter_list|,
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|atan2l
argument_list|(
name|__y
argument_list|,
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_atan2_capture
parameter_list|(
name|long
name|double
name|__y
parameter_list|,
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|atan2
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__y
operator|)
argument_list|,
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_CEILL
specifier|inline
name|long
name|double
name|_CPP_ceil_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|ceill
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_ceil_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|ceil
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
specifier|inline
name|long
name|double
name|_CPP_cos_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|__builtin_cosl
argument_list|(
name|__x
argument_list|)
return|;
block|}
if|#
directive|if
name|_GLIBCPP_HAVE_COSHL
specifier|inline
name|long
name|double
name|_CPP_cosh_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|coshl
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_cosh_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|cosh
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_EXPL
specifier|inline
name|long
name|double
name|_CPP_exp_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|expl
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_exp_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|exp
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
specifier|inline
name|long
name|double
name|_CPP_fabs_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|__builtin_fabsl
argument_list|(
name|__x
argument_list|)
return|;
block|}
if|#
directive|if
name|_GLIBCPP_HAVE_FLOORL
specifier|inline
name|long
name|double
name|_CPP_floor_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|floorl
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_floor_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|floor
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_FMODL
specifier|inline
name|long
name|double
name|_CPP_fmod_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|long
name|double
name|__y
parameter_list|)
block|{
return|return
name|fmodl
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_fmod_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|long
name|double
name|__y
parameter_list|)
block|{
return|return
name|fmod
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|,
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__y
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_FREXPL
specifier|inline
name|long
name|double
name|_CPP_frexp_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|int
modifier|*
name|__exp
parameter_list|)
block|{
return|return
name|frexpl
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_frexp_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|int
modifier|*
name|__exp
parameter_list|)
block|{
return|return
name|frexp
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|,
name|__exp
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_LDEXPL
specifier|inline
name|long
name|double
name|_CPP_ldexp_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|int
name|__exp
parameter_list|)
block|{
return|return
name|ldexpl
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_ldexp_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|int
name|__exp
parameter_list|)
block|{
return|return
name|ldexp
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|,
name|__exp
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_LOGL
specifier|inline
name|long
name|double
name|_CPP_log_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|logl
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_log_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|log
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_LOG10L
specifier|inline
name|long
name|double
name|_CPP_log10_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|log10l
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_log10_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|log10
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_MODFL
specifier|inline
name|long
name|double
name|_CPP_modf_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|long
name|double
modifier|*
name|__iptr
parameter_list|)
block|{
return|return
name|modfl
argument_list|(
name|__x
argument_list|,
name|__iptr
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_modf_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|long
name|double
modifier|*
name|__iptr
parameter_list|)
block|{
name|double
name|__tmp
decl_stmt|;
name|double
name|__res
init|=
name|_C_legacy
operator|::
name|modf
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|,
operator|&
name|__tmp
argument_list|)
decl_stmt|;
operator|*
name|__iptr
operator|=
name|static_cast
operator|<
name|long
name|double
operator|>
operator|(
name|__tmp
operator|)
expr_stmt|;
return|return
name|__res
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_POWL
specifier|inline
name|long
name|double
name|_CPP_pow_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|long
name|double
name|__y
parameter_list|)
block|{
return|return
name|powl
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_pow_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|long
name|double
name|__y
parameter_list|)
block|{
return|return
name|pow
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|,
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__y
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
specifier|inline
name|long
name|double
name|_CPP_sin_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|__builtin_sinl
argument_list|(
name|__x
argument_list|)
return|;
block|}
if|#
directive|if
name|_GLIBCPP_HAVE_SINHL
specifier|inline
name|long
name|double
name|_CPP_sinh_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|sinhl
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_sinh_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|sinh
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
specifier|inline
name|long
name|double
name|_CPP_sqrt_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|__builtin_sqrtl
argument_list|(
name|__x
argument_list|)
return|;
block|}
if|#
directive|if
name|_GLIBCPP_HAVE_TANL
specifier|inline
name|long
name|double
name|_CPP_tan_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|tanl
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_tan_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|tan
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
if|#
directive|if
name|_GLIBCPP_HAVE_TANHL
specifier|inline
name|long
name|double
name|_CPP_tanh_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|tanhl
argument_list|(
name|__x
argument_list|)
return|;
block|}
else|#
directive|else
specifier|inline
name|long
name|double
name|_CPP_tanh_capture
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|tanh
argument_list|(
name|static_cast
operator|<
name|double
operator|>
operator|(
name|__x
operator|)
argument_list|)
return|;
block|}
endif|#
directive|endif
block|}
end_decl_stmt

begin_comment
comment|// namespace _C_legacy
end_comment

begin_undef
undef|#
directive|undef
name|abs
end_undef

begin_undef
undef|#
directive|undef
name|acos
end_undef

begin_undef
undef|#
directive|undef
name|asin
end_undef

begin_undef
undef|#
directive|undef
name|atan
end_undef

begin_undef
undef|#
directive|undef
name|atan2
end_undef

begin_undef
undef|#
directive|undef
name|ceil
end_undef

begin_undef
undef|#
directive|undef
name|cos
end_undef

begin_undef
undef|#
directive|undef
name|cosh
end_undef

begin_undef
undef|#
directive|undef
name|exp
end_undef

begin_undef
undef|#
directive|undef
name|fabs
end_undef

begin_undef
undef|#
directive|undef
name|floor
end_undef

begin_undef
undef|#
directive|undef
name|fmod
end_undef

begin_undef
undef|#
directive|undef
name|frexp
end_undef

begin_undef
undef|#
directive|undef
name|ldexp
end_undef

begin_undef
undef|#
directive|undef
name|log
end_undef

begin_undef
undef|#
directive|undef
name|log10
end_undef

begin_undef
undef|#
directive|undef
name|modf
end_undef

begin_undef
undef|#
directive|undef
name|pow
end_undef

begin_undef
undef|#
directive|undef
name|sin
end_undef

begin_undef
undef|#
directive|undef
name|sinh
end_undef

begin_undef
undef|#
directive|undef
name|sqrt
end_undef

begin_undef
undef|#
directive|undef
name|tan
end_undef

begin_undef
undef|#
directive|undef
name|tanh
end_undef

begin_decl_stmt
name|namespace
name|std
block|{
specifier|inline
name|float
name|abs
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_fabs_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|acos
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_acos_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|asin
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_asin_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|atan
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_atan_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|atan2
parameter_list|(
name|float
name|__y
parameter_list|,
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_atan2_capture
argument_list|(
name|__y
argument_list|,
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|ceil
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_ceil_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|cos
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_cos_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|cosh
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_cosh_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|exp
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_exp_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|fabs
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_fabs_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|floor
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_floor_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|fmod
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_fmod_capture
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
specifier|inline
name|float
name|frexp
parameter_list|(
name|float
name|__x
parameter_list|,
name|int
modifier|*
name|__exp
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_frexp_capture
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
specifier|inline
name|float
name|ldexp
parameter_list|(
name|float
name|__x
parameter_list|,
name|int
name|__exp
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_ldexp_capture
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
specifier|inline
name|float
name|log
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_log_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|log10
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_log10_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|modf
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
modifier|*
name|__iptr
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_modf_capture
argument_list|(
name|__x
argument_list|,
name|__iptr
argument_list|)
return|;
block|}
specifier|inline
name|float
name|pow
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_pow_capture
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
name|float
name|pow
parameter_list|(
name|float
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|inline
name|float
name|sin
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_sin_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|sinh
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_sinh_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|sqrt
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_sqrt_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|tan
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_tan_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|float
name|tanh
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_tanh_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|abs
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_fabs_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|acos
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_acos_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|asin
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_asin_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|atan
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_atan_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|atan2
parameter_list|(
name|double
name|__y
parameter_list|,
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_atan2_capture
argument_list|(
name|__y
argument_list|,
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|ceil
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_ceil_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|cos
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_cos_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|cosh
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_cosh_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|exp
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_exp_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|fabs
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_fabs_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|floor
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_floor_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|fmod
parameter_list|(
name|double
name|__x
parameter_list|,
name|double
name|__y
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_fmod_capture
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
specifier|inline
name|double
name|frexp
parameter_list|(
name|double
name|__x
parameter_list|,
name|int
modifier|*
name|__exp
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_frexp_capture
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
specifier|inline
name|double
name|ldexp
parameter_list|(
name|double
name|__x
parameter_list|,
name|int
name|__exp
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_ldexp_capture
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
specifier|inline
name|double
name|log
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_log_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|log10
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_log10_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|modf
parameter_list|(
name|double
name|__x
parameter_list|,
name|double
modifier|*
name|__iptr
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_modf_capture
argument_list|(
name|__x
argument_list|,
name|__iptr
argument_list|)
return|;
block|}
specifier|inline
name|double
name|pow
parameter_list|(
name|double
name|__x
parameter_list|,
name|double
name|__y
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_pow_capture
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
name|double
name|pow
parameter_list|(
name|double
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|inline
name|double
name|sin
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_sin_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|sinh
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_sinh_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|sqrt
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_sqrt_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|tan
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_tan_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|double
name|tanh
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_tanh_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|abs
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_fabs_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|acos
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_acos_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|asin
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_asin_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|atan
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_atan_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|atan2
parameter_list|(
name|long
name|double
name|__y
parameter_list|,
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_atan2_capture
argument_list|(
name|__y
argument_list|,
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|ceil
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_ceil_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|cos
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_cos_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|cosh
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_cosh_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|exp
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_exp_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|fabs
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_fabs_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|floor
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_floor_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|fmod
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|long
name|double
name|__y
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_fmod_capture
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|frexp
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|int
modifier|*
name|__exp
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_frexp_capture
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|ldexp
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|int
name|__exp
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_ldexp_capture
argument_list|(
name|__x
argument_list|,
name|__exp
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|log
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_log_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|log10
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_log10_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|modf
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|long
name|double
modifier|*
name|__iptr
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_modf_capture
argument_list|(
name|__x
argument_list|,
name|__iptr
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|pow
parameter_list|(
name|long
name|double
name|__x
parameter_list|,
name|long
name|double
name|__y
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_pow_capture
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
name|long
name|double
name|pow
parameter_list|(
name|long
name|double
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|inline
name|long
name|double
name|sin
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_sin_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|sinh
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_sinh_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|sqrt
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_sqrt_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|tan
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_tan_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
specifier|inline
name|long
name|double
name|tanh
parameter_list|(
name|long
name|double
name|__x
parameter_list|)
block|{
return|return
name|_C_legacy
operator|::
name|_CPP_tanh_capture
argument_list|(
name|__x
argument_list|)
return|;
block|}
block|}
end_decl_stmt

begin_comment
comment|// namespace std
end_comment

begin_undef
undef|#
directive|undef
name|_IN_C_LEGACY_
end_undef

begin_endif
endif|#
directive|endif
end_endif

end_unit

