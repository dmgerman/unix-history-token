begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* xml.h -- xml output declarations.    $Id: xml.h,v 1.24 2004/11/26 00:48:35 karl Exp $     Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.     This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2, or (at your option)    any later version.     This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.     Originally written by Philippe Martin<feloy@free.fr>.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|XML_H
end_ifndef

begin_define
define|#
directive|define
name|XML_H
end_define

begin_comment
comment|/* Options. */
end_comment

begin_comment
comment|/* Separate index entries into divisions for each letters. */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|xml_index_divisions
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|xml_sort_index
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|xml_no_indent
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|xml_node_open
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|xml_no_para
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|xml_node_id
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|xml_last_section_output_position
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|xml_in_xref_token
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|xml_in_bookinfo
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|xml_in_book_title
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|xml_in_abstract
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Non-zero if we are handling an element that can appear between    @item and @itemx, @deffn and @deffnx.  */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|xml_dont_touch_items_defs
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Non-zero if whitespace in the source document should be kept as-is.  */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|xml_keep_space
decl_stmt|;
end_decl_stmt

begin_enum
enum|enum
name|xml_element
block|{
name|TEXINFO
init|=
literal|0
block|,
name|SETFILENAME
block|,
name|TITLEFONT
block|,
name|SETTITLE
block|,
name|DOCUMENTDESCRIPTION
block|,
comment|/* Node */
name|NODE
block|,
name|NODENEXT
block|,
name|NODEPREV
block|,
name|NODEUP
block|,
comment|/* Structuring */
name|CHAPTER
block|,
name|SECTION
block|,
name|SUBSECTION
block|,
name|SUBSUBSECTION
block|,
name|TOP
block|,
name|UNNUMBERED
block|,
name|UNNUMBEREDSEC
block|,
name|UNNUMBEREDSUBSEC
block|,
name|UNNUMBEREDSUBSUBSEC
block|,
name|APPENDIX
block|,
name|APPENDIXSEC
block|,
name|APPENDIXSUBSEC
block|,
name|APPENDIXSUBSUBSEC
block|,
name|MAJORHEADING
block|,
name|CHAPHEADING
block|,
name|HEADING
block|,
name|SUBHEADING
block|,
name|SUBSUBHEADING
block|,
comment|/* Titlepage */
name|TITLEPAGE
block|,
name|AUTHOR
block|,
name|BOOKTITLE
block|,
name|BOOKSUBTITLE
block|,
comment|/* Menu */
name|MENU
block|,
name|DETAILMENU
block|,
name|MENUENTRY
block|,
name|MENUTITLE
block|,
name|MENUCOMMENT
block|,
name|MENUNODE
block|,
name|NODENAME
block|,
comment|/* -- */
name|ACRONYM
block|,
name|ACRONYMWORD
block|,
name|ACRONYMDESC
block|,
name|ABBREV
block|,
name|ABBREVWORD
block|,
name|ABBREVDESC
block|,
name|TT
block|,
name|CODE
block|,
name|COMMAND_TAG
block|,
name|ENV
block|,
name|FILE_TAG
block|,
name|OPTION
block|,
name|SAMP
block|,
name|KBD
block|,
name|URL
block|,
name|KEY
block|,
name|VAR
block|,
name|SC
block|,
name|DFN
block|,
name|EMPH
block|,
name|STRONG
block|,
name|CITE
block|,
name|NOTFIXEDWIDTH
block|,
name|I
block|,
name|B
block|,
name|R
block|,
name|SLANTED
block|,
name|SANSSERIF
block|,
name|EXDENT
block|,
name|TITLE
block|,
name|IFINFO
block|,
name|SP
block|,
name|CENTER
block|,
name|DIRCATEGORY
block|,
name|QUOTATION
block|,
name|EXAMPLE
block|,
name|SMALLEXAMPLE
block|,
name|LISP
block|,
name|SMALLLISP
block|,
name|CARTOUCHE
block|,
name|COPYING
block|,
name|FORMAT
block|,
name|SMALLFORMAT
block|,
name|DISPLAY
block|,
name|SMALLDISPLAY
block|,
name|VERBATIM
block|,
name|FOOTNOTE
block|,
name|LINEANNOTATION
block|,
name|TIP
block|,
name|NOTE
block|,
name|IMPORTANT
block|,
name|WARNING
block|,
name|CAUTION
block|,
name|ITEMIZE
block|,
name|ITEMFUNCTION
block|,
name|ITEM
block|,
name|ENUMERATE
block|,
name|TABLE
block|,
name|TABLEITEM
block|,
name|TABLETERM
block|,
name|INDEXTERM
block|,
name|MATH
block|,
name|DIMENSION
block|,
name|XREF
block|,
name|XREFNODENAME
block|,
name|XREFINFONAME
block|,
name|XREFPRINTEDDESC
block|,
name|XREFINFOFILE
block|,
name|XREFPRINTEDNAME
block|,
name|INFOREF
block|,
name|INFOREFNODENAME
block|,
name|INFOREFREFNAME
block|,
name|INFOREFINFONAME
block|,
name|UREF
block|,
name|UREFURL
block|,
name|UREFDESC
block|,
name|UREFREPLACEMENT
block|,
name|EMAIL
block|,
name|EMAILADDRESS
block|,
name|EMAILNAME
block|,
name|GROUP
block|,
name|FLOAT
block|,
name|FLOATTYPE
block|,
name|FLOATPOS
block|,
name|CAPTION
block|,
name|SHORTCAPTION
block|,
name|FLOATTABLE
block|,
name|FLOATFIGURE
block|,
name|FLOATEXAMPLE
block|,
name|FLOATCARTOUCHE
block|,
name|PRINTINDEX
block|,
name|LISTOFFLOATS
block|,
name|ANCHOR
block|,
name|IMAGE
block|,
name|INLINEIMAGE
block|,
name|IMAGEALTTEXT
block|,
name|PRIMARY
block|,
name|SECONDARY
block|,
name|INFORMALFIGURE
block|,
name|MEDIAOBJECT
block|,
name|IMAGEOBJECT
block|,
name|IMAGEDATA
block|,
name|TEXTOBJECT
block|,
name|INDEXENTRY
block|,
name|PRIMARYIE
block|,
name|SECONDARYIE
block|,
name|INDEXDIV
block|,
name|MULTITABLE
block|,
name|TGROUP
block|,
name|COLSPEC
block|,
name|THEAD
block|,
name|TBODY
block|,
name|ENTRY
block|,
name|ROW
block|,
name|BOOKINFO
block|,
name|ABSTRACT
block|,
name|REPLACEABLE
block|,
name|ENVAR
block|,
name|COMMENT
block|,
name|FUNCTION
block|,
name|LEGALNOTICE
block|,
name|CONTENTS
block|,
name|SHORTCONTENTS
block|,
name|DOCUMENTLANGUAGE
block|,
name|SETVALUE
block|,
name|CLEARVALUE
block|,
name|DEFINITION
block|,
name|DEFINITIONTERM
block|,
name|DEFINITIONITEM
block|,
name|DEFCATEGORY
block|,
name|DEFFUNCTION
block|,
name|DEFVARIABLE
block|,
name|DEFPARAM
block|,
name|DEFDELIMITER
block|,
name|DEFTYPE
block|,
name|DEFPARAMTYPE
block|,
name|DEFDATATYPE
block|,
name|DEFCLASS
block|,
name|DEFCLASSVAR
block|,
name|DEFOPERATION
block|,
name|PARA
block|}
enum|;
end_enum

begin_decl_stmt
specifier|extern
name|void
name|xml_add_char
argument_list|(
name|int
name|character
argument_list|)
decl_stmt|,
name|xml_asterisk
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_insert_element
argument_list|(
name|int
name|elt
argument_list|,
name|int
name|arg
argument_list|)
decl_stmt|,
name|xml_insert_entity
argument_list|(
name|char
operator|*
name|entity_name
argument_list|)
decl_stmt|,
name|xml_insert_footnote
argument_list|(
name|char
operator|*
name|note
argument_list|)
decl_stmt|,
name|xml_insert_quotation
argument_list|(
name|char
operator|*
name|type
argument_list|,
name|int
name|arg
argument_list|)
decl_stmt|,
name|xml_insert_indexentry
argument_list|(
name|char
operator|*
name|entry
argument_list|,
name|char
operator|*
name|node
argument_list|)
decl_stmt|,
name|xml_insert_indexterm
argument_list|(
name|char
operator|*
name|indexterm
argument_list|,
name|char
operator|*
name|index
argument_list|)
decl_stmt|,
name|xml_insert_docbook_image
argument_list|(
name|char
operator|*
name|name_arg
argument_list|)
decl_stmt|,
name|xml_synindex
argument_list|(
name|char
operator|*
name|from
argument_list|,
name|char
operator|*
name|to
argument_list|)
decl_stmt|,
name|xml_start_para
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_end_para
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_begin_document
argument_list|(
name|char
operator|*
name|output_filename
argument_list|)
decl_stmt|,
name|xml_end_document
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_start_menu_entry
argument_list|(
name|char
operator|*
name|tem
argument_list|)
decl_stmt|,
name|xml_end_menu
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_end_current_element
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_open_section
argument_list|(
name|int
name|level
argument_list|,
name|char
operator|*
name|name
argument_list|)
decl_stmt|,
name|xml_close_sections
argument_list|(
name|int
name|level
argument_list|)
decl_stmt|,
name|xml_begin_node
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_begin_index
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_end_index
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_begin_multitable
argument_list|(
name|int
name|ncolumns
argument_list|,
name|int
operator|*
name|column_widths
argument_list|)
decl_stmt|,
name|xml_end_multitable
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_end_multitable_row
argument_list|(
name|int
name|first_row
argument_list|)
decl_stmt|,
name|xml_end_multitable_column
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_begin_table
argument_list|(
name|int
name|type
argument_list|,
name|char
operator|*
name|item_function
argument_list|)
decl_stmt|,
name|xml_end_table
argument_list|(
name|int
name|type
argument_list|)
decl_stmt|,
name|xml_begin_item
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_begin_table_item
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_continue_table_item
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_begin_enumerate
argument_list|(
name|char
operator|*
name|enum_arg
argument_list|)
decl_stmt|,
name|xml_end_enumerate
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_begin_docbook_float
argument_list|(
name|int
name|elt
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|char
modifier|*
name|xml_id
parameter_list|(
name|char
modifier|*
name|id
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|void
name|xml_begin_definition
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_end_definition
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_process_defun_args
argument_list|(
name|char
operator|*
operator|*
name|defun_args
argument_list|,
name|int
name|auto_var_p
argument_list|)
decl_stmt|,
name|xml_begin_def_term
argument_list|(
name|int
name|base_type
argument_list|,
specifier|const
name|char
operator|*
name|category
argument_list|,
name|char
operator|*
name|defined_name
argument_list|,
name|char
operator|*
name|type_name
argument_list|,
name|char
operator|*
name|type_name2
argument_list|)
decl_stmt|,
name|xml_end_def_term
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|xml_current_stack_index
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|xml_element
argument_list|(
name|char
operator|*
name|name
argument_list|)
decl_stmt|;
end_decl_stmt

begin_if
if|#
directive|if
name|defined
argument_list|(
name|VA_FPRINTF
argument_list|)
operator|&&
name|__STDC__
end_if

begin_function_decl
name|void
name|xml_insert_element_with_attribute
parameter_list|(
name|int
name|elt
parameter_list|,
name|int
name|arg
parameter_list|,
name|char
modifier|*
name|format
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_function_decl
name|void
name|xml_insert_element_with_attribute
parameter_list|()
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* XML_H */
end_comment

end_unit

