begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* cmds.h -- declarations for cmds.c.    $Id: cmds.h,v 1.9 2004/11/26 00:48:35 karl Exp $     Copyright (C) 1998, 1999, 2002, 2003, 2004 Free Software Foundation,    Inc.     This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2, or (at your option)    any later version.     This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License along    with this program; if not, write to the Free Software Foundation, Inc.,    59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|CMDS_H
end_ifndef

begin_define
define|#
directive|define
name|CMDS_H
end_define

begin_comment
comment|/* The three arguments a command can get are a flag saying whether it is    before argument parsing (START) or after (END), the starting position    of the arguments, and the ending position.  */
end_comment

begin_typedef
typedef|typedef
name|void
name|COMMAND_FUNCTION
parameter_list|()
function_decl|;
end_typedef

begin_comment
comment|/* So we can say COMMAND_FUNCTION *foo; */
end_comment

begin_comment
comment|/* Each command has an associated function.  When the command is    encountered in the text, the associated function is called with START    as the argument.  If the function expects arguments in braces, it    remembers itself on the stack.  When the corresponding close brace is    encountered, the function is called with END as the argument. */
end_comment

begin_define
define|#
directive|define
name|START
value|0
end_define

begin_define
define|#
directive|define
name|END
value|1
end_define

begin_comment
comment|/* Does the command expect braces?  */
end_comment

begin_define
define|#
directive|define
name|NO_BRACE_ARGS
value|0
end_define

begin_define
define|#
directive|define
name|BRACE_ARGS
value|1
end_define

begin_define
define|#
directive|define
name|MAYBE_BRACE_ARGS
value|2
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|COMMAND_FUNCTION
modifier|*
name|proc
decl_stmt|;
name|int
name|argument_in_braces
decl_stmt|;
block|}
name|COMMAND
typedef|;
end_typedef

begin_decl_stmt
specifier|extern
name|COMMAND
name|command_table
index|[]
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
struct|struct
name|acronym_desc
block|{
name|struct
name|acronym_desc
modifier|*
name|next
decl_stmt|;
name|char
modifier|*
name|acronym
decl_stmt|;
name|char
modifier|*
name|description
decl_stmt|;
block|}
name|ACRONYM_DESC
typedef|;
end_typedef

begin_comment
comment|/* Texinfo commands.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|insert_self
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|insert_space
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_ignore_line
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_ignore_arg
argument_list|(
name|int
name|arg
argument_list|,
name|int
name|start_pos
argument_list|,
name|int
name|end_pos
argument_list|)
decl_stmt|,
name|cm_comment
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_no_op
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Document structure and meta information.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_setfilename
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_settitle
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_documentdescription
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_node
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_menu
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_detailmenu
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_dircategory
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_direntry
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_bye
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* File inclusion.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_include
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_verbatiminclude
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Cross referencing commands.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_anchor
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_xref
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_pxref
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_ref
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_inforef
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_uref
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Special insertions.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_LaTeX
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_TeX
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_bullet
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_colon
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_comma
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_copyright
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_dots
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_enddots
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_equiv
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_error
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_expansion
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_image
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_insert_copying
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_minus
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_point
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_print
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_punct
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_registeredsymbol
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_result
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Emphasis and markup.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_acronym
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_abbr
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_b
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_cite
argument_list|(
name|int
name|arg
argument_list|,
name|int
name|position
argument_list|)
decl_stmt|,
name|cm_code
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_dfn
argument_list|(
name|int
name|arg
argument_list|,
name|int
name|position
argument_list|)
decl_stmt|,
name|cm_dmn
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_email
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_emph
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_i
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_kbd
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_key
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_math
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_not_fixed_width
argument_list|(
name|int
name|arg
argument_list|,
name|int
name|start
argument_list|,
name|int
name|end
argument_list|)
decl_stmt|,
name|cm_r
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_sansserif
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_sc
argument_list|(
name|int
name|arg
argument_list|,
name|int
name|start_pos
argument_list|,
name|int
name|end_pos
argument_list|)
decl_stmt|,
name|cm_slanted
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_strong
argument_list|(
name|int
name|arg
argument_list|,
name|int
name|start_pos
argument_list|,
name|int
name|end_pos
argument_list|)
decl_stmt|,
name|cm_tt
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_indicate_url
argument_list|(
name|int
name|arg
argument_list|,
name|int
name|start
argument_list|,
name|int
name|end
argument_list|)
decl_stmt|,
name|cm_var
argument_list|(
name|int
name|arg
argument_list|,
name|int
name|start_pos
argument_list|,
name|int
name|end_pos
argument_list|)
decl_stmt|,
name|cm_verb
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Block environments.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_cartouche
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_group
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_display
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_smalldisplay
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_example
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_smallexample
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_smalllisp
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_lisp
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_format
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_smallformat
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_quotation
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_copying
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_flushleft
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_flushright
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_verbatim
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_end
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Tables, lists, enumerations.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_table
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_ftable
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_vtable
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_itemize
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_enumerate
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_multitable
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_headitem
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_item
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_itemx
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_tab
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|cm_center
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_exdent
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_indent
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_noindent
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_noindent_cmd
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Line and page breaks.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_asterisk
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_sp
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_page
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Non breaking words.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_tie
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_w
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Title page creation.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_titlepage
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_author
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_titlepage_cmds
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_titlefont
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_today
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Floats.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_float
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_caption
argument_list|(
name|int
name|arg
argument_list|)
decl_stmt|,
name|cm_shortcaption
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_listoffloats
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Indices.  */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_kindex
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_cindex
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_findex
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_pindex
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_vindex
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_tindex
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_defindex
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_defcodeindex
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_synindex
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_printindex
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Conditionals. */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|cm_set
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_clear
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_ifset
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_ifclear
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_ifeq
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|cm_value
argument_list|(
name|int
name|arg
argument_list|,
name|int
name|start_pos
argument_list|,
name|int
name|end_pos
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !CMDS_H */
end_comment

end_unit

