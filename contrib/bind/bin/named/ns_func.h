begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1985, 1990  *    The Regents of the University of California.  All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  * 	This product includes software developed by the University of  * 	California, Berkeley and its contributors.  * 4. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*  * Portions Copyright (c) 1993 by Digital Equipment Corporation.  *   * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies, and that  * the name of Digital Equipment Corporation not be used in advertising or  * publicity pertaining to distribution of the document or software without  * specific, written prior permission.  *   * THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS ALL  * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL EQUIPMENT  * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL  * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR  * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS  * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS  * SOFTWARE.  */
end_comment

begin_comment
comment|/*  * Portions Copyright (c) 1996-2000 by Internet Software Consortium.  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM DISCLAIMS  * ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL INTERNET SOFTWARE  * CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL  * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR  * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS  * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS  * SOFTWARE.  */
end_comment

begin_comment
comment|/*  * Portions Copyright (c) 1999 by Check Point Software Technologies, Inc.  *   * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies, and that  * the name of Check Point Software Technologies Incorporated not be used   * in advertising or publicity pertaining to distribution of the document   * or software without specific, written prior permission.  *   * THE SOFTWARE IS PROVIDED "AS IS" AND CHECK POINT SOFTWARE TECHNOLOGIES   * INCORPORATED DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,   * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.     * IN NO EVENT SHALL CHECK POINT SOFTWARE TECHNOLOGIES INCORPRATED  * BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR   * ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER  * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  */
end_comment

begin_comment
comment|/* ns_func.h - declarations for ns_*.c's externally visible functions  *  * $Id: ns_func.h,v 8.96 2000/04/21 06:54:06 vixie Exp $  */
end_comment

begin_comment
comment|/* ++from ns_glue.c++ */
end_comment

begin_function_decl
specifier|extern
name|struct
name|in_addr
name|ina_get
parameter_list|(
specifier|const
name|u_char
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|sin_ntoa
parameter_list|(
name|struct
name|sockaddr_in
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ns_wouldlog
parameter_list|(
name|int
name|category
parameter_list|,
name|int
name|level
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|void
name|ns_debug
argument_list|(
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|char
operator|*
argument_list|,
operator|...
argument_list|)
decl_stmt|,
name|ns_info
argument_list|(
name|int
argument_list|,
specifier|const
name|char
operator|*
argument_list|,
operator|...
argument_list|)
decl_stmt|,
name|ns_notice
argument_list|(
name|int
argument_list|,
specifier|const
name|char
operator|*
argument_list|,
operator|...
argument_list|)
decl_stmt|,
name|ns_warning
argument_list|(
name|int
argument_list|,
specifier|const
name|char
operator|*
argument_list|,
operator|...
argument_list|)
decl_stmt|,
name|ns_error
argument_list|(
name|int
argument_list|,
specifier|const
name|char
operator|*
argument_list|,
operator|...
argument_list|)
decl_stmt|,
name|ns_panic
argument_list|(
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|char
operator|*
argument_list|,
operator|...
argument_list|)
decl_stmt|,
name|ns_assertion_failed
argument_list|(
name|char
operator|*
name|file
argument_list|,
name|int
name|line
argument_list|,
name|assertion_type
name|type
argument_list|,
name|char
operator|*
name|cond
argument_list|,
name|int
name|print_errno
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|panic
argument_list|(
specifier|const
name|char
operator|*
argument_list|,
specifier|const
name|void
operator|*
argument_list|)
decl_stmt|,
name|gettime
argument_list|(
expr|struct
name|timeval
operator|*
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|nlabels
argument_list|(
specifier|const
name|char
operator|*
argument_list|)
decl_stmt|,
name|my_close
argument_list|(
name|int
argument_list|)
decl_stmt|,
name|my_fclose
argument_list|(
name|FILE
operator|*
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|void
name|__freestr
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|__newstr
argument_list|(
name|size_t
argument_list|,
name|int
argument_list|)
decl_stmt|,
modifier|*
name|__savestr
argument_list|(
specifier|const
name|char
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
modifier|*
name|checked_ctime
argument_list|(
specifier|const
name|time_t
operator|*
name|t
argument_list|)
decl_stmt|,
modifier|*
name|ctimel
argument_list|(
name|long
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|void
name|__freestr_record
parameter_list|(
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|__newstr_record
parameter_list|(
name|size_t
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|__savestr_record
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|u_char
modifier|*
name|ina_put
argument_list|(
expr|struct
name|in_addr
name|ina
argument_list|,
name|u_char
operator|*
name|data
argument_list|)
decl_stmt|,
modifier|*
name|savebuf
argument_list|(
specifier|const
name|u_char
operator|*
argument_list|,
name|size_t
argument_list|,
name|int
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|void
name|dprintf
parameter_list|(
name|int
name|level
parameter_list|,
specifier|const
name|char
modifier|*
name|format
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|DEBUG_STRINGS
end_ifdef

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|debug_newstr
argument_list|(
name|size_t
argument_list|,
name|int
argument_list|,
specifier|const
name|char
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
modifier|*
name|debug_savestr
argument_list|(
specifier|const
name|char
operator|*
argument_list|,
name|int
argument_list|,
specifier|const
name|char
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|void
name|debug_freestr
parameter_list|(
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|newstr
parameter_list|(
name|l
parameter_list|,
name|n
parameter_list|)
value|debug_newstr((l), (n), __FILE__, __LINE__)
end_define

begin_define
define|#
directive|define
name|savestr
parameter_list|(
name|s
parameter_list|,
name|n
parameter_list|)
value|debug_savestr((s), (n), __FILE__, __LINE__)
end_define

begin_define
define|#
directive|define
name|freestr
parameter_list|(
name|s
parameter_list|)
value|debug_freestr((s), __FILE__, __LINE__)
end_define

begin_else
else|#
directive|else
end_else

begin_ifdef
ifdef|#
directive|ifdef
name|RECORD_STRINGS
end_ifdef

begin_define
define|#
directive|define
name|newstr
parameter_list|(
name|l
parameter_list|,
name|n
parameter_list|)
value|__newstr_record((l), (n), __FILE__, __LINE__)
end_define

begin_define
define|#
directive|define
name|savestr
parameter_list|(
name|s
parameter_list|,
name|n
parameter_list|)
value|__savestr_record((s), (n), __FILE__, __LINE__)
end_define

begin_define
define|#
directive|define
name|freestr
parameter_list|(
name|s
parameter_list|)
value|__freestr_record((s), __FILE__, __LINE__)
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|newstr
parameter_list|(
name|l
parameter_list|,
name|n
parameter_list|)
value|__newstr((l), (n))
end_define

begin_define
define|#
directive|define
name|savestr
parameter_list|(
name|s
parameter_list|,
name|n
parameter_list|)
value|__savestr((s), (n))
end_define

begin_define
define|#
directive|define
name|freestr
parameter_list|(
name|s
parameter_list|)
value|__freestr((s))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* DEBUG_STRINGS */
end_comment

begin_function_decl
name|int
name|movefile
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from ns_glue.c-- */
end_comment

begin_comment
comment|/* ++from ns_notify.c++ */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|BIND_NOTIFY
end_ifdef

begin_function_decl
name|void
name|ns_notify
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|ns_class
parameter_list|,
name|ns_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|notify_afterload
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ns_unnotify
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ns_stopnotify
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|ns_class
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* --from ns_notify.c-- */
end_comment

begin_comment
comment|/* ++from ns_resp.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|ns_resp
argument_list|(
name|u_char
operator|*
argument_list|,
name|int
argument_list|,
expr|struct
name|sockaddr_in
argument_list|,
expr|struct
name|qstream
operator|*
argument_list|)
decl_stmt|,
name|prime_cache
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|delete_all
argument_list|(
expr|struct
name|namebuf
operator|*
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|int
name|delete_stale
parameter_list|(
name|struct
name|namebuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|qinfo
modifier|*
name|sysquery
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|struct
name|in_addr
modifier|*
parameter_list|,
name|int
parameter_list|,
name|u_int16_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|int
name|doupdate
argument_list|(
name|u_char
operator|*
argument_list|,
name|u_char
operator|*
argument_list|,
expr|struct
name|databuf
operator|*
operator|*
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
name|u_int
argument_list|,
expr|struct
name|sockaddr_in
argument_list|)
decl_stmt|,
name|send_msg
argument_list|(
name|u_char
operator|*
argument_list|,
name|int
argument_list|,
expr|struct
name|qinfo
operator|*
argument_list|)
decl_stmt|,
name|findns
argument_list|(
expr|struct
name|namebuf
operator|*
operator|*
argument_list|,
name|int
argument_list|,
expr|struct
name|databuf
operator|*
operator|*
argument_list|,
name|int
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
name|finddata
argument_list|(
expr|struct
name|namebuf
operator|*
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
name|HEADER
operator|*
argument_list|,
name|char
operator|*
operator|*
argument_list|,
name|int
operator|*
argument_list|,
name|int
operator|*
argument_list|)
decl_stmt|,
name|add_data
argument_list|(
expr|struct
name|namebuf
operator|*
argument_list|,
expr|struct
name|databuf
operator|*
operator|*
argument_list|,
name|u_char
operator|*
argument_list|,
name|int
argument_list|,
name|int
operator|*
argument_list|)
decl_stmt|,
name|trunc_adjust
argument_list|(
name|u_char
operator|*
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* --from ns_resp.c-- */
end_comment

begin_comment
comment|/* ++from ns_req.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|ns_req
argument_list|(
name|u_char
operator|*
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
expr|struct
name|qstream
operator|*
argument_list|,
expr|struct
name|sockaddr_in
argument_list|,
name|int
argument_list|)
decl_stmt|,
name|free_addinfo
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|free_nsp
argument_list|(
expr|struct
name|databuf
operator|*
operator|*
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|stale
argument_list|(
expr|struct
name|databuf
operator|*
argument_list|)
decl_stmt|,
name|make_rr
argument_list|(
specifier|const
name|char
operator|*
argument_list|,
expr|struct
name|databuf
operator|*
argument_list|,
name|u_char
operator|*
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
name|u_char
operator|*
operator|*
argument_list|,
name|u_char
operator|*
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
name|doaddinfo
argument_list|(
name|HEADER
operator|*
argument_list|,
name|u_char
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
name|doaddauth
argument_list|(
name|HEADER
operator|*
argument_list|,
name|u_char
operator|*
argument_list|,
name|int
argument_list|,
expr|struct
name|namebuf
operator|*
argument_list|,
expr|struct
name|databuf
operator|*
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|BIND_NOTIFY
end_ifdef

begin_function_decl
specifier|extern
name|int
name|findZonePri
parameter_list|(
specifier|const
name|struct
name|zoneinfo
modifier|*
parameter_list|,
specifier|const
name|struct
name|sockaddr_in
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* --from ns_req.c-- */
end_comment

begin_comment
comment|/* ++from ns_xfr.c++ */
end_comment

begin_decl_stmt
name|void
name|ns_xfr
argument_list|(
expr|struct
name|qstream
operator|*
name|qsp
argument_list|,
expr|struct
name|namebuf
operator|*
name|znp
argument_list|,
name|int
name|zone
argument_list|,
name|int
name|class
argument_list|,
name|int
name|type
argument_list|,
name|int
name|id
argument_list|,
name|int
name|opcode
argument_list|,
name|u_int32_t
name|serial_ixfr
argument_list|,
expr|struct
name|tsig_record
operator|*
name|in_tsig
argument_list|)
decl_stmt|,
name|ns_stopxfrs
argument_list|(
expr|struct
name|zoneinfo
operator|*
argument_list|)
decl_stmt|,
name|ns_freexfr
argument_list|(
expr|struct
name|qstream
operator|*
argument_list|)
decl_stmt|,
name|sx_newmsg
argument_list|(
expr|struct
name|qstream
operator|*
name|qsp
argument_list|)
decl_stmt|,
name|sx_sendlev
argument_list|(
expr|struct
name|qstream
operator|*
name|qsp
argument_list|)
decl_stmt|,
name|sx_sendsoa
argument_list|(
expr|struct
name|qstream
operator|*
name|qsp
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* --from ns_xfr.c-- */
end_comment

begin_comment
comment|/* ++from ns_ctl.c++ */
end_comment

begin_function_decl
name|void
name|ns_ctl_initialize
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ns_ctl_shutdown
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ns_ctl_defaults
parameter_list|(
name|controls
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ns_ctl_add
parameter_list|(
name|controls
modifier|*
parameter_list|,
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|control
name|ns_ctl_new_inet
parameter_list|(
name|struct
name|in_addr
parameter_list|,
name|u_int
parameter_list|,
name|ip_match_list
parameter_list|)
function_decl|;
end_function_decl

begin_ifndef
ifndef|#
directive|ifndef
name|WINNT
end_ifndef

begin_function_decl
name|control
name|ns_ctl_new_unix
parameter_list|(
name|char
modifier|*
parameter_list|,
name|mode_t
parameter_list|,
name|uid_t
parameter_list|,
name|gid_t
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|ns_ctl_install
parameter_list|(
name|controls
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from ns_ctl.c-- */
end_comment

begin_comment
comment|/* ++from ns_ixfr.c++ */
end_comment

begin_function_decl
name|void
name|sx_send_ixfr
parameter_list|(
name|struct
name|qstream
modifier|*
name|qsp
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from ns_ixfr.c-- */
end_comment

begin_comment
comment|/* ++from ns_forw.c++ */
end_comment

begin_function_decl
specifier|extern
name|time_t
name|retrytime
parameter_list|(
name|struct
name|qinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|int
name|ns_forw
argument_list|(
expr|struct
name|databuf
operator|*
name|nsp
index|[]
argument_list|,
name|u_char
operator|*
name|msg
argument_list|,
name|int
name|msglen
argument_list|,
expr|struct
name|sockaddr_in
name|from
argument_list|,
expr|struct
name|qstream
operator|*
name|qsp
argument_list|,
name|int
name|dfd
argument_list|,
expr|struct
name|qinfo
operator|*
operator|*
name|qpp
argument_list|,
specifier|const
name|char
operator|*
name|dname
argument_list|,
name|int
name|class
argument_list|,
name|int
name|type
argument_list|,
expr|struct
name|namebuf
operator|*
name|np
argument_list|,
name|int
name|use_tcp
argument_list|,
expr|struct
name|tsig_record
operator|*
name|in_tsig
argument_list|)
decl_stmt|,
name|haveComplained
argument_list|(
name|u_long
argument_list|,
name|u_long
argument_list|)
decl_stmt|,
name|nslookup
argument_list|(
expr|struct
name|databuf
operator|*
name|nsp
index|[]
argument_list|,
expr|struct
name|qinfo
operator|*
name|qp
argument_list|,
specifier|const
name|char
operator|*
name|syslogdname
argument_list|,
specifier|const
name|char
operator|*
name|sysloginfo
argument_list|)
decl_stmt|,
name|qcomp
argument_list|(
expr|struct
name|qserv
operator|*
argument_list|,
expr|struct
name|qserv
operator|*
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|schedretry
argument_list|(
expr|struct
name|qinfo
operator|*
argument_list|,
name|time_t
argument_list|)
decl_stmt|,
name|unsched
argument_list|(
expr|struct
name|qinfo
operator|*
argument_list|)
decl_stmt|,
name|reset_retrytimer
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|retrytimer
argument_list|(
name|evContext
name|ctx
argument_list|,
name|void
operator|*
name|uap
argument_list|,
expr|struct
name|timespec
name|due
argument_list|,
expr|struct
name|timespec
name|ival
argument_list|)
decl_stmt|,
name|retry
argument_list|(
expr|struct
name|qinfo
operator|*
argument_list|)
decl_stmt|,
name|qflush
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|qremove
argument_list|(
expr|struct
name|qinfo
operator|*
argument_list|)
decl_stmt|,
name|ns_freeqns
argument_list|(
expr|struct
name|qinfo
operator|*
argument_list|,
name|char
operator|*
argument_list|)
decl_stmt|,
name|ns_freeqry
argument_list|(
expr|struct
name|qinfo
operator|*
argument_list|)
decl_stmt|,
name|freeComplaints
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|nsfwdadd
argument_list|(
expr|struct
name|qinfo
operator|*
argument_list|,
expr|struct
name|fwdinfo
operator|*
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|qinfo
modifier|*
name|qfindid
argument_list|(
name|u_int16_t
argument_list|)
decl_stmt|,
modifier|*
name|qnew
argument_list|(
specifier|const
name|char
operator|*
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* --from ns_forw.c-- */
end_comment

begin_comment
comment|/* ++from ns_main.c++ */
end_comment

begin_function_decl
specifier|extern
name|struct
name|in_addr
name|net_mask
parameter_list|(
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|void
name|sq_remove
argument_list|(
expr|struct
name|qstream
operator|*
argument_list|)
decl_stmt|,
name|sq_flushw
argument_list|(
expr|struct
name|qstream
operator|*
argument_list|)
decl_stmt|,
name|sq_flush
argument_list|(
expr|struct
name|qstream
operator|*
name|allbut
argument_list|)
decl_stmt|,
name|dq_remove_gen
argument_list|(
name|time_t
name|gen
argument_list|)
decl_stmt|,
name|dq_remove_all
argument_list|()
decl_stmt|,
name|sq_done
argument_list|(
expr|struct
name|qstream
operator|*
argument_list|)
decl_stmt|,
name|ns_setproctitle
argument_list|(
name|char
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
name|getnetconf
argument_list|(
name|int
argument_list|)
decl_stmt|,
name|nsid_init
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|ns_setoption
argument_list|(
name|int
name|option
argument_list|)
decl_stmt|,
name|writestream
argument_list|(
expr|struct
name|qstream
operator|*
argument_list|,
specifier|const
name|u_char
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
name|ns_need_unsafe
argument_list|(
expr|enum
name|need
argument_list|)
decl_stmt|,
name|ns_need
argument_list|(
expr|enum
name|need
argument_list|)
decl_stmt|,
name|opensocket_f
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|nsid_hash
argument_list|(
name|u_char
operator|*
argument_list|,
name|size_t
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|u_int16_t
name|nsid_next
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|int
name|sq_openw
argument_list|(
expr|struct
name|qstream
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
name|sq_writeh
argument_list|(
expr|struct
name|qstream
operator|*
argument_list|,
name|sq_closure
argument_list|)
decl_stmt|,
name|sq_write
argument_list|(
expr|struct
name|qstream
operator|*
argument_list|,
specifier|const
name|u_char
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
name|tcp_send
argument_list|(
expr|struct
name|qinfo
operator|*
argument_list|)
decl_stmt|,
name|aIsUs
argument_list|(
expr|struct
name|in_addr
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* --from ns_main.c-- */
end_comment

begin_comment
comment|/* ++from ns_maint.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|zone_maint
argument_list|(
expr|struct
name|zoneinfo
operator|*
argument_list|)
decl_stmt|,
name|sched_zone_maint
argument_list|(
expr|struct
name|zoneinfo
operator|*
argument_list|)
decl_stmt|,
name|ns_cleancache
argument_list|(
name|evContext
name|ctx
argument_list|,
name|void
operator|*
name|uap
argument_list|,
expr|struct
name|timespec
name|due
argument_list|,
expr|struct
name|timespec
name|inter
argument_list|)
decl_stmt|,
name|clean_cache_from
argument_list|(
name|char
operator|*
name|dname
argument_list|,
expr|struct
name|hashbuf
operator|*
name|htp
argument_list|)
decl_stmt|,
name|remove_zone
argument_list|(
expr|struct
name|zoneinfo
operator|*
argument_list|,
specifier|const
name|char
operator|*
argument_list|)
decl_stmt|,
name|purge_zone
argument_list|(
specifier|const
name|char
operator|*
argument_list|,
expr|struct
name|hashbuf
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
name|loadxfer
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|qserial_retrytime
argument_list|(
expr|struct
name|zoneinfo
operator|*
argument_list|,
name|time_t
argument_list|)
decl_stmt|,
name|qserial_query
argument_list|(
expr|struct
name|zoneinfo
operator|*
argument_list|)
decl_stmt|,
name|qserial_answer
argument_list|(
expr|struct
name|qinfo
operator|*
argument_list|)
decl_stmt|,
ifdef|#
directive|ifdef
name|DEBUG
name|printzoneinfo
argument_list|(
name|int
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
decl_stmt|,
endif|#
directive|endif
name|endxfer
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|addxfer
argument_list|(
expr|struct
name|zoneinfo
operator|*
argument_list|)
decl_stmt|,
name|ns_zreload
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|ns_reload
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|ns_reconfig
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|ns_noexpired
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_if
if|#
directive|if
literal|0
end_if

begin_endif
unit|extern int		reload_all_unsafe(void);
endif|#
directive|endif
end_endif

begin_function_decl
specifier|extern
name|int
name|zonefile_changed_p
parameter_list|(
name|struct
name|zoneinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|reload_master
parameter_list|(
name|struct
name|zoneinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|deferred_reload_unsafe
parameter_list|(
name|struct
name|zoneinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|namebuf
modifier|*
name|purge_node
parameter_list|(
name|struct
name|hashbuf
modifier|*
name|htp
parameter_list|,
name|struct
name|namebuf
modifier|*
name|np
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|clean_cache
parameter_list|(
name|struct
name|hashbuf
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|reapchild
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|zoneTypeString
parameter_list|(
name|unsigned
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ns_heartbeat
parameter_list|(
name|evContext
name|ctx
parameter_list|,
name|void
modifier|*
name|uap
parameter_list|,
name|struct
name|timespec
parameter_list|,
name|struct
name|timespec
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|make_new_zones
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|free_zone
parameter_list|(
name|struct
name|zoneinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|zoneinfo
modifier|*
name|find_auth_zone
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|ns_class
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|purge_nonglue
parameter_list|(
specifier|const
name|char
modifier|*
name|dname
parameter_list|,
name|struct
name|hashbuf
modifier|*
name|htp
parameter_list|,
name|int
name|class
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from ns_maint.c-- */
end_comment

begin_comment
comment|/* ++from ns_sort.c++ */
end_comment

begin_function_decl
specifier|extern
name|void
name|sort_response
parameter_list|(
name|u_char
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|sockaddr_in
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from ns_sort.c-- */
end_comment

begin_comment
comment|/* ++from ns_init.c++ */
end_comment

begin_function_decl
specifier|extern
name|void
name|ns_refreshtime
parameter_list|(
name|struct
name|zoneinfo
modifier|*
parameter_list|,
name|time_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ns_retrytime
parameter_list|(
name|struct
name|zoneinfo
modifier|*
parameter_list|,
name|time_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ns_init
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|purgeandload
parameter_list|(
name|struct
name|zoneinfo
modifier|*
name|zp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|enum
name|context
name|ns_ptrcontext
parameter_list|(
specifier|const
name|char
modifier|*
name|owner
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|enum
name|context
name|ns_ownercontext
parameter_list|(
name|int
name|type
parameter_list|,
name|enum
name|transport
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ns_nameok
parameter_list|(
specifier|const
name|struct
name|qinfo
modifier|*
name|qry
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
name|class
parameter_list|,
name|struct
name|zoneinfo
modifier|*
name|zp
parameter_list|,
name|enum
name|transport
parameter_list|,
name|enum
name|context
parameter_list|,
specifier|const
name|char
modifier|*
name|owner
parameter_list|,
name|struct
name|in_addr
name|source
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ns_wildcard
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|zoneinit
parameter_list|(
name|struct
name|zoneinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|do_reload
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ns_shutdown
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from ns_init.c-- */
end_comment

begin_comment
comment|/* ++from ns_ncache.c++ */
end_comment

begin_function_decl
specifier|extern
name|void
name|cache_n_resp
parameter_list|(
name|u_char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|sockaddr_in
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from ns_ncache.c-- */
end_comment

begin_comment
comment|/* ++from ns_udp.c++ */
end_comment

begin_function_decl
specifier|extern
name|void
name|ns_udp
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from ns_udp.c-- */
end_comment

begin_comment
comment|/* ++from ns_stats.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|ns_stats
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|ns_freestats
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|void
name|ns_logstats
parameter_list|(
name|evContext
name|ctx
parameter_list|,
name|void
modifier|*
name|uap
parameter_list|,
name|struct
name|timespec
parameter_list|,
name|struct
name|timespec
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|qtypeIncr
parameter_list|(
name|int
name|qtype
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|nameser
modifier|*
name|nameserFind
parameter_list|(
name|struct
name|in_addr
name|addr
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|NS_F_INSERT
value|0x0001
end_define

begin_define
define|#
directive|define
name|nameserIncr
parameter_list|(
name|a
parameter_list|,
name|w
parameter_list|)
value|NS_INCRSTAT(a,w)
end_define

begin_comment
comment|/* XXX should change name. */
end_comment

begin_comment
comment|/* --from ns_stats.c-- */
end_comment

begin_comment
comment|/* ++from ns_update.c++ */
end_comment

begin_function_decl
name|void
name|free_rrecp
parameter_list|(
name|ns_updque
modifier|*
parameter_list|,
name|int
name|rcode
parameter_list|,
name|struct
name|sockaddr_in
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|findzone
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u_char
modifier|*
name|findsoaserial
parameter_list|(
name|u_char
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u_int32_t
name|get_serial_unchecked
parameter_list|(
name|struct
name|zoneinfo
modifier|*
name|zp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u_int32_t
name|get_serial
parameter_list|(
name|struct
name|zoneinfo
modifier|*
name|zp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_serial
parameter_list|(
name|struct
name|zoneinfo
modifier|*
name|zp
parameter_list|,
name|u_int32_t
name|serial
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|schedule_soa_update
parameter_list|(
name|struct
name|zoneinfo
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|schedule_dump
parameter_list|(
name|struct
name|zoneinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|incr_serial
parameter_list|(
name|struct
name|zoneinfo
modifier|*
name|zp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|merge_logs
parameter_list|(
name|struct
name|zoneinfo
modifier|*
name|zp
parameter_list|,
name|char
modifier|*
name|logname
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|zonedump
parameter_list|(
name|struct
name|zoneinfo
modifier|*
name|zp
parameter_list|,
name|int
name|isixfr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dynamic_about_to_exit
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|enum
name|req_action
name|req_update
parameter_list|(
name|HEADER
modifier|*
name|hp
parameter_list|,
name|u_char
modifier|*
name|cp
parameter_list|,
name|u_char
modifier|*
name|eom
parameter_list|,
name|u_char
modifier|*
name|msg
parameter_list|,
name|struct
name|qstream
modifier|*
name|qsp
parameter_list|,
name|int
name|dfd
parameter_list|,
name|struct
name|sockaddr_in
name|from
parameter_list|,
name|struct
name|tsig_record
modifier|*
name|in_tsig
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rdata_dump
parameter_list|(
name|struct
name|databuf
modifier|*
name|dp
parameter_list|,
name|FILE
modifier|*
name|fp
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from ns_update.c-- */
end_comment

begin_comment
comment|/* ++from ns_config.c++ */
end_comment

begin_function_decl
name|void
name|free_zone_timerinfo
parameter_list|(
name|struct
name|zoneinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|free_zone_contents
parameter_list|(
name|struct
name|zoneinfo
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|zoneinfo
modifier|*
name|find_zone
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|zone_config
name|begin_zone
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|end_zone
parameter_list|(
name|zone_config
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|set_zone_type
parameter_list|(
name|zone_config
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|set_zone_filename
parameter_list|(
name|zone_config
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|set_zone_checknames
parameter_list|(
name|zone_config
parameter_list|,
name|enum
name|severity
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|BIND_NOTIFY
end_ifdef

begin_function_decl
name|int
name|set_zone_notify
parameter_list|(
name|zone_config
parameter_list|,
name|int
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|int
name|set_zone_maintain_ixfr_base
parameter_list|(
name|zone_config
parameter_list|,
name|int
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|set_zone_update_acl
parameter_list|(
name|zone_config
parameter_list|,
name|ip_match_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|set_zone_query_acl
parameter_list|(
name|zone_config
parameter_list|,
name|ip_match_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|set_zone_transfer_acl
parameter_list|(
name|zone_config
parameter_list|,
name|ip_match_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|set_zone_transfer_source
parameter_list|(
name|zone_config
parameter_list|,
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|set_zone_pubkey
parameter_list|(
name|zone_config
parameter_list|,
specifier|const
name|int
parameter_list|,
specifier|const
name|int
parameter_list|,
specifier|const
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|set_zone_transfer_time_in
parameter_list|(
name|zone_config
parameter_list|,
name|long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|add_zone_master
parameter_list|(
name|zone_config
parameter_list|,
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|BIND_NOTIFY
end_ifdef

begin_function_decl
name|int
name|add_zone_notify
parameter_list|(
name|zone_config
parameter_list|,
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|set_zone_forward
parameter_list|(
name|zone_config
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|add_zone_forwarder
parameter_list|(
name|zone_config
parameter_list|,
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_zone_boolean_option
parameter_list|(
name|zone_config
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|options
name|new_options
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|free_options
parameter_list|(
name|options
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|free_rrset_order_list
parameter_list|(
name|rrset_order_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_global_boolean_option
parameter_list|(
name|options
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|listen_info_list
name|new_listen_info_list
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|free_listen_info_list
parameter_list|(
name|listen_info_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|add_listen_on
parameter_list|(
name|options
parameter_list|,
name|u_short
parameter_list|,
name|ip_match_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|FILE
modifier|*
name|write_open
parameter_list|(
name|char
modifier|*
name|filename
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|update_pid_file
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_options
parameter_list|(
name|options
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|use_default_options
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|enum
name|ordering
name|lookup_ordering
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|rrset_order_list
name|new_rrset_order_list
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|rrset_order_element
name|new_rrset_order_element
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|enum
name|ordering
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ip_match_list
name|new_ip_match_list
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|free_ip_match_list
parameter_list|(
name|ip_match_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ip_match_element
name|new_ip_match_pattern
parameter_list|(
name|struct
name|in_addr
parameter_list|,
name|u_int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ip_match_element
name|new_ip_match_mask
parameter_list|(
name|struct
name|in_addr
parameter_list|,
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ip_match_element
name|new_ip_match_indirect
parameter_list|(
name|ip_match_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ip_match_element
name|new_ip_match_key
parameter_list|(
name|struct
name|dst_key
modifier|*
name|dst_key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ip_match_element
name|new_ip_match_localhost
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ip_match_element
name|new_ip_match_localnets
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ip_match_negate
parameter_list|(
name|ip_match_element
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|add_to_ip_match_list
parameter_list|(
name|ip_match_list
parameter_list|,
name|ip_match_element
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dprint_ip_match_list
parameter_list|(
name|int
parameter_list|,
name|ip_match_list
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ip_match_address
parameter_list|(
name|ip_match_list
parameter_list|,
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ip_match_addr_or_key
parameter_list|(
name|ip_match_list
parameter_list|,
name|struct
name|in_addr
parameter_list|,
name|struct
name|dst_key
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ip_address_allowed
parameter_list|(
name|ip_match_list
parameter_list|,
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ip_addr_or_key_allowed
parameter_list|(
name|ip_match_list
name|iml
parameter_list|,
name|struct
name|in_addr
parameter_list|,
name|struct
name|dst_key
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ip_match_network
parameter_list|(
name|ip_match_list
parameter_list|,
name|struct
name|in_addr
parameter_list|,
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ip_match_key_name
parameter_list|(
name|ip_match_list
name|iml
parameter_list|,
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|distance_of_address
parameter_list|(
name|ip_match_list
parameter_list|,
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ip_match_is_none
parameter_list|(
name|ip_match_list
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|BIND_NOTIFY
end_ifdef

begin_function_decl
name|void
name|free_also_notify
parameter_list|(
name|options
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|add_global_also_notify
parameter_list|(
name|options
parameter_list|,
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|add_global_forwarder
parameter_list|(
name|options
parameter_list|,
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|free_forwarders
parameter_list|(
name|struct
name|fwdinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|server_info
name|find_server
parameter_list|(
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|server_config
name|begin_server
parameter_list|(
name|struct
name|in_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|end_server
parameter_list|(
name|server_config
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_server_option
parameter_list|(
name|server_config
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_server_transfers
parameter_list|(
name|server_config
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_server_transfer_format
parameter_list|(
name|server_config
parameter_list|,
name|enum
name|axfr_format
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|add_server_key_info
parameter_list|(
name|server_config
parameter_list|,
name|struct
name|dst_key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|dst_key
modifier|*
name|new_key_info
parameter_list|(
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|free_key_info
parameter_list|(
name|struct
name|dst_key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|dst_key
modifier|*
name|find_key
parameter_list|(
name|char
modifier|*
name|name
parameter_list|,
name|char
modifier|*
name|algorithm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dprint_key_info
parameter_list|(
name|struct
name|dst_key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|key_info_list
name|new_key_info_list
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|free_key_info_list
parameter_list|(
name|key_info_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|add_to_key_info_list
parameter_list|(
name|key_info_list
parameter_list|,
name|struct
name|dst_key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dprint_key_info_list
parameter_list|(
name|key_info_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|log_config
name|begin_logging
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|add_log_channel
parameter_list|(
name|log_config
parameter_list|,
name|int
parameter_list|,
name|log_channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|open_special_channels
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_logging
parameter_list|(
name|log_config
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|end_logging
parameter_list|(
name|log_config
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|use_default_logging
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|init_logging
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|shutdown_logging
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|init_configuration
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|shutdown_configuration
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|load_configuration
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from ns_config.c-- */
end_comment

begin_comment
comment|/* ++from parser.y++ */
end_comment

begin_function_decl
name|ip_match_list
name|lookup_acl
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|define_acl
parameter_list|(
name|char
modifier|*
parameter_list|,
name|ip_match_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|dst_key
modifier|*
name|lookup_key
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|define_key
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|dst_key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|parse_configuration
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|parser_initialize
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|parser_shutdown
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from parser.y-- */
end_comment

begin_comment
comment|/* ++from ns_signal.c++ */
end_comment

begin_function_decl
name|void
name|init_signals
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|block_signals
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|unblock_signals
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from ns_signal.c-- */
end_comment

end_unit

