begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Copyright (c) 1985, 1990  *    The Regents of the University of California.  All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  * 	This product includes software developed by the University of  * 	California, Berkeley and its contributors.  * 4. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_comment
comment|/* Portions Copyright (c) 1993 by Digital Equipment Corporation.  *   * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies, and that  * the name of Digital Equipment Corporation not be used in advertising or  * publicity pertaining to distribution of the document or software without  * specific, written prior permission.  *   * THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS ALL  * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL EQUIPMENT  * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL  * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR  * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS  * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS  * SOFTWARE.  */
end_comment

begin_comment
comment|/* Portions Copyright (c) 1996, 1997 by Internet Software Consortium.  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM DISCLAIMS  * ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL INTERNET SOFTWARE  * CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL  * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR  * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS  * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS  * SOFTWARE.  */
end_comment

begin_comment
comment|/* db_proc.h - prototypes for functions in db_*.c  *  * $Id: db_func.h,v 8.22 1997/12/04 06:47:00 halley Exp $  */
end_comment

begin_comment
comment|/* ++from db_update.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|db_update
argument_list|(
specifier|const
name|char
operator|*
name|name
argument_list|,
expr|struct
name|databuf
operator|*
name|odp
argument_list|,
expr|struct
name|databuf
operator|*
name|newdp
argument_list|,
expr|struct
name|databuf
operator|*
operator|*
name|savedpp
argument_list|,
name|int
name|flags
argument_list|,
expr|struct
name|hashbuf
operator|*
name|htp
argument_list|,
expr|struct
name|sockaddr_in
name|from
argument_list|)
decl_stmt|,
name|db_cmp
argument_list|(
specifier|const
expr|struct
name|databuf
operator|*
argument_list|,
specifier|const
expr|struct
name|databuf
operator|*
argument_list|)
decl_stmt|,
name|findMyZone
argument_list|(
expr|struct
name|namebuf
operator|*
name|np
argument_list|,
name|int
name|class
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|fixttl
parameter_list|(
name|struct
name|databuf
modifier|*
name|dp
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from db_update.c-- */
end_comment

begin_comment
comment|/* ++from db_save.c++ */
end_comment

begin_function_decl
specifier|extern
name|struct
name|namebuf
modifier|*
name|savename
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|databuf
modifier|*
name|savedata
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|,
name|u_int32_t
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|hashbuf
modifier|*
name|savehash
parameter_list|(
name|struct
name|hashbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from db_save.c-- */
end_comment

begin_comment
comment|/* ++from db_dump.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|db_dump
argument_list|(
expr|struct
name|hashbuf
operator|*
argument_list|,
name|FILE
operator|*
argument_list|,
name|int
argument_list|,
name|char
operator|*
argument_list|)
decl_stmt|,
name|zt_dump
argument_list|(
name|FILE
operator|*
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|void
name|doadump
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from db_dump.c-- */
end_comment

begin_comment
comment|/* ++from db_load.c++ */
end_comment

begin_function_decl
specifier|extern
name|void
name|endline
parameter_list|(
name|FILE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|int
name|getword
argument_list|(
name|char
operator|*
argument_list|,
name|size_t
argument_list|,
name|FILE
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
name|getnum
argument_list|(
name|FILE
operator|*
argument_list|,
specifier|const
name|char
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
name|db_load
argument_list|(
specifier|const
name|char
operator|*
argument_list|,
specifier|const
name|char
operator|*
argument_list|,
expr|struct
name|zoneinfo
operator|*
argument_list|,
specifier|const
name|char
operator|*
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|getnonblank
argument_list|(
name|FILE
operator|*
argument_list|,
specifier|const
name|char
operator|*
argument_list|)
decl_stmt|,
name|getservices
argument_list|(
name|int
argument_list|,
name|char
operator|*
argument_list|,
name|FILE
operator|*
argument_list|,
specifier|const
name|char
operator|*
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|char
name|getprotocol
parameter_list|(
name|FILE
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|makename
parameter_list|(
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|BIND_NOTIFY
end_ifdef

begin_decl_stmt
specifier|extern
name|void
name|notify_after_load
argument_list|(
name|evContext
argument_list|,
name|void
operator|*
argument_list|,
specifier|const
name|void
operator|*
argument_list|)
decl_stmt|,
name|db_cancel_pending_notifies
argument_list|(
name|void
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* --from db_load.c-- */
end_comment

begin_comment
comment|/* ++from db_glue.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|buildservicelist
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|destroyservicelist
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|buildprotolist
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|destroyprotolist
argument_list|(
name|void
argument_list|)
decl_stmt|,
name|getname
argument_list|(
expr|struct
name|namebuf
operator|*
argument_list|,
name|char
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|servicenumber
argument_list|(
specifier|const
name|char
operator|*
argument_list|)
decl_stmt|,
name|protocolnumber
argument_list|(
specifier|const
name|char
operator|*
argument_list|)
decl_stmt|,
name|get_class
argument_list|(
specifier|const
name|char
operator|*
argument_list|)
decl_stmt|,
name|samedomain
argument_list|(
specifier|const
name|char
operator|*
argument_list|,
specifier|const
name|char
operator|*
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|u_int
name|dhash
argument_list|(
specifier|const
name|u_char
operator|*
argument_list|,
name|int
argument_list|)
decl_stmt|,
name|nhash
argument_list|(
specifier|const
name|char
operator|*
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|char
modifier|*
name|protocolname
argument_list|(
name|int
argument_list|)
decl_stmt|,
modifier|*
name|servicename
argument_list|(
name|u_int16_t
argument_list|,
specifier|const
name|char
operator|*
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|BSD
end_ifndef

begin_function_decl
specifier|extern
name|int
name|getdtablesize
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
specifier|extern
name|struct
name|databuf
modifier|*
name|rm_datum
parameter_list|(
name|struct
name|databuf
modifier|*
parameter_list|,
name|struct
name|namebuf
modifier|*
parameter_list|,
name|struct
name|databuf
modifier|*
parameter_list|,
name|struct
name|databuf
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|namebuf
modifier|*
name|rm_name
parameter_list|(
name|struct
name|namebuf
modifier|*
parameter_list|,
name|struct
name|namebuf
modifier|*
modifier|*
parameter_list|,
name|struct
name|namebuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|rm_hash
parameter_list|(
name|struct
name|hashbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|db_freedata
parameter_list|(
name|struct
name|databuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from db_glue.c-- */
end_comment

begin_comment
comment|/* ++from db_lookup.c++ */
end_comment

begin_function_decl
specifier|extern
name|struct
name|namebuf
modifier|*
name|nlookup
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|hashbuf
modifier|*
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|struct
name|namebuf
modifier|*
name|np_parent
name|__P
argument_list|(
operator|(
expr|struct
name|namebuf
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|int
name|match
parameter_list|(
name|struct
name|databuf
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from db_lookup.c-- */
end_comment

begin_comment
comment|/* ++from db_dict.c++ */
end_comment

begin_function_decl
name|int
name|dict_lookup
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* --from db_dict.c-- */
end_comment

end_unit

