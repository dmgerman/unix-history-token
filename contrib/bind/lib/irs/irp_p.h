begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1996 by Internet Software Consortium.  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM DISCLAIMS  * ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL INTERNET SOFTWARE  * CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL  * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR  * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS  * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS  * SOFTWARE.  */
end_comment

begin_comment
comment|/*  * $Id: irp_p.h,v 8.1 1999/01/18 07:46:54 vixie Exp $  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_IRP_P_H_INCLUDED
end_ifndef

begin_define
define|#
directive|define
name|_IRP_P_H_INCLUDED
end_define

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_struct
struct|struct
name|irp_p
block|{
name|char
name|inbuffer
index|[
literal|1024
index|]
decl_stmt|;
name|int
name|inlast
decl_stmt|;
comment|/* index of one past the last char in buffer */
name|int
name|incurr
decl_stmt|;
comment|/* index of the next char to be read from buffer */
name|int
name|fdCxn
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Externs.  */
end_comment

begin_decl_stmt
specifier|extern
name|struct
name|irs_acc
modifier|*
name|irs_irp_acc
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|irs_gr
modifier|*
name|irs_irp_gr
name|__P
argument_list|(
operator|(
expr|struct
name|irs_acc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|irs_pw
modifier|*
name|irs_irp_pw
name|__P
argument_list|(
operator|(
expr|struct
name|irs_acc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|irs_sv
modifier|*
name|irs_irp_sv
name|__P
argument_list|(
operator|(
expr|struct
name|irs_acc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|irs_pr
modifier|*
name|irs_irp_pr
name|__P
argument_list|(
operator|(
expr|struct
name|irs_acc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|irs_ho
modifier|*
name|irs_irp_ho
name|__P
argument_list|(
operator|(
expr|struct
name|irs_acc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|irs_nw
modifier|*
name|irs_irp_nw
name|__P
argument_list|(
operator|(
expr|struct
name|irs_acc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|irs_ng
modifier|*
name|irs_irp_ng
name|__P
argument_list|(
operator|(
expr|struct
name|irs_acc
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
name|int
name|irs_irp_connect
parameter_list|(
name|struct
name|irp_p
modifier|*
name|pvt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|irs_irp_is_connected
parameter_list|(
name|struct
name|irp_p
modifier|*
name|pvt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|irs_irp_disconnect
parameter_list|(
name|struct
name|irp_p
modifier|*
name|pvt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|irs_irp_read_response
parameter_list|(
name|struct
name|irp_p
modifier|*
name|pvt
parameter_list|,
name|char
modifier|*
name|text
parameter_list|,
name|size_t
name|textlen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|irs_irp_read_body
parameter_list|(
name|struct
name|irp_p
modifier|*
name|pvt
parameter_list|,
name|size_t
modifier|*
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|irs_irp_get_full_response
parameter_list|(
name|struct
name|irp_p
modifier|*
name|pvt
parameter_list|,
name|int
modifier|*
name|code
parameter_list|,
name|char
modifier|*
name|text
parameter_list|,
name|size_t
name|textlen
parameter_list|,
name|char
modifier|*
modifier|*
name|body
parameter_list|,
name|size_t
modifier|*
name|bodylen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|irs_irp_send_command
parameter_list|(
name|struct
name|irp_p
modifier|*
name|pvt
parameter_list|,
specifier|const
name|char
modifier|*
name|fmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|int
name|irp_log_errors
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

