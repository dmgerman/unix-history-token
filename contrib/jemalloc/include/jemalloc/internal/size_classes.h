begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* This file was automatically generated by size_classes.sh. */
end_comment

begin_comment
comment|/******************************************************************************/
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_H_TYPES
end_ifdef

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|3
operator|&&
name|LG_QUANTUM
operator|==
literal|3
operator|&&
name|LG_PAGE
operator|==
literal|12
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	8,	8)					\     SIZE_CLASS(1,	8,	16)					\     SIZE_CLASS(2,	8,	24)					\     SIZE_CLASS(3,	8,	32)					\     SIZE_CLASS(4,	8,	40)					\     SIZE_CLASS(5,	8,	48)					\     SIZE_CLASS(6,	8,	56)					\     SIZE_CLASS(7,	8,	64)					\     SIZE_CLASS(8,	16,	80)					\     SIZE_CLASS(9,	16,	96)					\     SIZE_CLASS(10,	16,	112)					\     SIZE_CLASS(11,	16,	128)					\     SIZE_CLASS(12,	32,	160)					\     SIZE_CLASS(13,	32,	192)					\     SIZE_CLASS(14,	32,	224)					\     SIZE_CLASS(15,	32,	256)					\     SIZE_CLASS(16,	64,	320)					\     SIZE_CLASS(17,	64,	384)					\     SIZE_CLASS(18,	64,	448)					\     SIZE_CLASS(19,	64,	512)					\     SIZE_CLASS(20,	128,	640)					\     SIZE_CLASS(21,	128,	768)					\     SIZE_CLASS(22,	128,	896)					\     SIZE_CLASS(23,	128,	1024)					\     SIZE_CLASS(24,	256,	1280)					\     SIZE_CLASS(25,	256,	1536)					\     SIZE_CLASS(26,	256,	1792)					\     SIZE_CLASS(27,	256,	2048)					\     SIZE_CLASS(28,	512,	2560)					\     SIZE_CLASS(29,	512,	3072)					\     SIZE_CLASS(30,	512,	3584)					\  #define	NBINS		31
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|3584
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|3
operator|&&
name|LG_QUANTUM
operator|==
literal|3
operator|&&
name|LG_PAGE
operator|==
literal|13
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	8,	8)					\     SIZE_CLASS(1,	8,	16)					\     SIZE_CLASS(2,	8,	24)					\     SIZE_CLASS(3,	8,	32)					\     SIZE_CLASS(4,	8,	40)					\     SIZE_CLASS(5,	8,	48)					\     SIZE_CLASS(6,	8,	56)					\     SIZE_CLASS(7,	8,	64)					\     SIZE_CLASS(8,	16,	80)					\     SIZE_CLASS(9,	16,	96)					\     SIZE_CLASS(10,	16,	112)					\     SIZE_CLASS(11,	16,	128)					\     SIZE_CLASS(12,	32,	160)					\     SIZE_CLASS(13,	32,	192)					\     SIZE_CLASS(14,	32,	224)					\     SIZE_CLASS(15,	32,	256)					\     SIZE_CLASS(16,	64,	320)					\     SIZE_CLASS(17,	64,	384)					\     SIZE_CLASS(18,	64,	448)					\     SIZE_CLASS(19,	64,	512)					\     SIZE_CLASS(20,	128,	640)					\     SIZE_CLASS(21,	128,	768)					\     SIZE_CLASS(22,	128,	896)					\     SIZE_CLASS(23,	128,	1024)					\     SIZE_CLASS(24,	256,	1280)					\     SIZE_CLASS(25,	256,	1536)					\     SIZE_CLASS(26,	256,	1792)					\     SIZE_CLASS(27,	256,	2048)					\     SIZE_CLASS(28,	512,	2560)					\     SIZE_CLASS(29,	512,	3072)					\     SIZE_CLASS(30,	512,	3584)					\     SIZE_CLASS(31,	512,	4096)					\     SIZE_CLASS(32,	1024,	5120)					\     SIZE_CLASS(33,	1024,	6144)					\     SIZE_CLASS(34,	1024,	7168)					\  #define	NBINS		35
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|7168
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|3
operator|&&
name|LG_QUANTUM
operator|==
literal|3
operator|&&
name|LG_PAGE
operator|==
literal|14
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	8,	8)					\     SIZE_CLASS(1,	8,	16)					\     SIZE_CLASS(2,	8,	24)					\     SIZE_CLASS(3,	8,	32)					\     SIZE_CLASS(4,	8,	40)					\     SIZE_CLASS(5,	8,	48)					\     SIZE_CLASS(6,	8,	56)					\     SIZE_CLASS(7,	8,	64)					\     SIZE_CLASS(8,	16,	80)					\     SIZE_CLASS(9,	16,	96)					\     SIZE_CLASS(10,	16,	112)					\     SIZE_CLASS(11,	16,	128)					\     SIZE_CLASS(12,	32,	160)					\     SIZE_CLASS(13,	32,	192)					\     SIZE_CLASS(14,	32,	224)					\     SIZE_CLASS(15,	32,	256)					\     SIZE_CLASS(16,	64,	320)					\     SIZE_CLASS(17,	64,	384)					\     SIZE_CLASS(18,	64,	448)					\     SIZE_CLASS(19,	64,	512)					\     SIZE_CLASS(20,	128,	640)					\     SIZE_CLASS(21,	128,	768)					\     SIZE_CLASS(22,	128,	896)					\     SIZE_CLASS(23,	128,	1024)					\     SIZE_CLASS(24,	256,	1280)					\     SIZE_CLASS(25,	256,	1536)					\     SIZE_CLASS(26,	256,	1792)					\     SIZE_CLASS(27,	256,	2048)					\     SIZE_CLASS(28,	512,	2560)					\     SIZE_CLASS(29,	512,	3072)					\     SIZE_CLASS(30,	512,	3584)					\     SIZE_CLASS(31,	512,	4096)					\     SIZE_CLASS(32,	1024,	5120)					\     SIZE_CLASS(33,	1024,	6144)					\     SIZE_CLASS(34,	1024,	7168)					\     SIZE_CLASS(35,	1024,	8192)					\     SIZE_CLASS(36,	2048,	10240)					\     SIZE_CLASS(37,	2048,	12288)					\     SIZE_CLASS(38,	2048,	14336)					\  #define	NBINS		39
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|14336
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|3
operator|&&
name|LG_QUANTUM
operator|==
literal|3
operator|&&
name|LG_PAGE
operator|==
literal|15
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	8,	8)					\     SIZE_CLASS(1,	8,	16)					\     SIZE_CLASS(2,	8,	24)					\     SIZE_CLASS(3,	8,	32)					\     SIZE_CLASS(4,	8,	40)					\     SIZE_CLASS(5,	8,	48)					\     SIZE_CLASS(6,	8,	56)					\     SIZE_CLASS(7,	8,	64)					\     SIZE_CLASS(8,	16,	80)					\     SIZE_CLASS(9,	16,	96)					\     SIZE_CLASS(10,	16,	112)					\     SIZE_CLASS(11,	16,	128)					\     SIZE_CLASS(12,	32,	160)					\     SIZE_CLASS(13,	32,	192)					\     SIZE_CLASS(14,	32,	224)					\     SIZE_CLASS(15,	32,	256)					\     SIZE_CLASS(16,	64,	320)					\     SIZE_CLASS(17,	64,	384)					\     SIZE_CLASS(18,	64,	448)					\     SIZE_CLASS(19,	64,	512)					\     SIZE_CLASS(20,	128,	640)					\     SIZE_CLASS(21,	128,	768)					\     SIZE_CLASS(22,	128,	896)					\     SIZE_CLASS(23,	128,	1024)					\     SIZE_CLASS(24,	256,	1280)					\     SIZE_CLASS(25,	256,	1536)					\     SIZE_CLASS(26,	256,	1792)					\     SIZE_CLASS(27,	256,	2048)					\     SIZE_CLASS(28,	512,	2560)					\     SIZE_CLASS(29,	512,	3072)					\     SIZE_CLASS(30,	512,	3584)					\     SIZE_CLASS(31,	512,	4096)					\     SIZE_CLASS(32,	1024,	5120)					\     SIZE_CLASS(33,	1024,	6144)					\     SIZE_CLASS(34,	1024,	7168)					\     SIZE_CLASS(35,	1024,	8192)					\     SIZE_CLASS(36,	2048,	10240)					\     SIZE_CLASS(37,	2048,	12288)					\     SIZE_CLASS(38,	2048,	14336)					\     SIZE_CLASS(39,	2048,	16384)					\     SIZE_CLASS(40,	4096,	20480)					\     SIZE_CLASS(41,	4096,	24576)					\     SIZE_CLASS(42,	4096,	28672)					\  #define	NBINS		43
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|28672
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|3
operator|&&
name|LG_QUANTUM
operator|==
literal|3
operator|&&
name|LG_PAGE
operator|==
literal|16
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	8,	8)					\     SIZE_CLASS(1,	8,	16)					\     SIZE_CLASS(2,	8,	24)					\     SIZE_CLASS(3,	8,	32)					\     SIZE_CLASS(4,	8,	40)					\     SIZE_CLASS(5,	8,	48)					\     SIZE_CLASS(6,	8,	56)					\     SIZE_CLASS(7,	8,	64)					\     SIZE_CLASS(8,	16,	80)					\     SIZE_CLASS(9,	16,	96)					\     SIZE_CLASS(10,	16,	112)					\     SIZE_CLASS(11,	16,	128)					\     SIZE_CLASS(12,	32,	160)					\     SIZE_CLASS(13,	32,	192)					\     SIZE_CLASS(14,	32,	224)					\     SIZE_CLASS(15,	32,	256)					\     SIZE_CLASS(16,	64,	320)					\     SIZE_CLASS(17,	64,	384)					\     SIZE_CLASS(18,	64,	448)					\     SIZE_CLASS(19,	64,	512)					\     SIZE_CLASS(20,	128,	640)					\     SIZE_CLASS(21,	128,	768)					\     SIZE_CLASS(22,	128,	896)					\     SIZE_CLASS(23,	128,	1024)					\     SIZE_CLASS(24,	256,	1280)					\     SIZE_CLASS(25,	256,	1536)					\     SIZE_CLASS(26,	256,	1792)					\     SIZE_CLASS(27,	256,	2048)					\     SIZE_CLASS(28,	512,	2560)					\     SIZE_CLASS(29,	512,	3072)					\     SIZE_CLASS(30,	512,	3584)					\     SIZE_CLASS(31,	512,	4096)					\     SIZE_CLASS(32,	1024,	5120)					\     SIZE_CLASS(33,	1024,	6144)					\     SIZE_CLASS(34,	1024,	7168)					\     SIZE_CLASS(35,	1024,	8192)					\     SIZE_CLASS(36,	2048,	10240)					\     SIZE_CLASS(37,	2048,	12288)					\     SIZE_CLASS(38,	2048,	14336)					\     SIZE_CLASS(39,	2048,	16384)					\     SIZE_CLASS(40,	4096,	20480)					\     SIZE_CLASS(41,	4096,	24576)					\     SIZE_CLASS(42,	4096,	28672)					\     SIZE_CLASS(43,	4096,	32768)					\     SIZE_CLASS(44,	8192,	40960)					\     SIZE_CLASS(45,	8192,	49152)					\     SIZE_CLASS(46,	8192,	57344)					\  #define	NBINS		47
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|57344
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|3
operator|&&
name|LG_QUANTUM
operator|==
literal|4
operator|&&
name|LG_PAGE
operator|==
literal|12
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	8,	8)					\     SIZE_CLASS(1,	8,	16)					\     SIZE_CLASS(2,	16,	32)					\     SIZE_CLASS(3,	16,	48)					\     SIZE_CLASS(4,	16,	64)					\     SIZE_CLASS(5,	16,	80)					\     SIZE_CLASS(6,	16,	96)					\     SIZE_CLASS(7,	16,	112)					\     SIZE_CLASS(8,	16,	128)					\     SIZE_CLASS(9,	32,	160)					\     SIZE_CLASS(10,	32,	192)					\     SIZE_CLASS(11,	32,	224)					\     SIZE_CLASS(12,	32,	256)					\     SIZE_CLASS(13,	64,	320)					\     SIZE_CLASS(14,	64,	384)					\     SIZE_CLASS(15,	64,	448)					\     SIZE_CLASS(16,	64,	512)					\     SIZE_CLASS(17,	128,	640)					\     SIZE_CLASS(18,	128,	768)					\     SIZE_CLASS(19,	128,	896)					\     SIZE_CLASS(20,	128,	1024)					\     SIZE_CLASS(21,	256,	1280)					\     SIZE_CLASS(22,	256,	1536)					\     SIZE_CLASS(23,	256,	1792)					\     SIZE_CLASS(24,	256,	2048)					\     SIZE_CLASS(25,	512,	2560)					\     SIZE_CLASS(26,	512,	3072)					\     SIZE_CLASS(27,	512,	3584)					\  #define	NBINS		28
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|3584
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|3
operator|&&
name|LG_QUANTUM
operator|==
literal|4
operator|&&
name|LG_PAGE
operator|==
literal|13
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	8,	8)					\     SIZE_CLASS(1,	8,	16)					\     SIZE_CLASS(2,	16,	32)					\     SIZE_CLASS(3,	16,	48)					\     SIZE_CLASS(4,	16,	64)					\     SIZE_CLASS(5,	16,	80)					\     SIZE_CLASS(6,	16,	96)					\     SIZE_CLASS(7,	16,	112)					\     SIZE_CLASS(8,	16,	128)					\     SIZE_CLASS(9,	32,	160)					\     SIZE_CLASS(10,	32,	192)					\     SIZE_CLASS(11,	32,	224)					\     SIZE_CLASS(12,	32,	256)					\     SIZE_CLASS(13,	64,	320)					\     SIZE_CLASS(14,	64,	384)					\     SIZE_CLASS(15,	64,	448)					\     SIZE_CLASS(16,	64,	512)					\     SIZE_CLASS(17,	128,	640)					\     SIZE_CLASS(18,	128,	768)					\     SIZE_CLASS(19,	128,	896)					\     SIZE_CLASS(20,	128,	1024)					\     SIZE_CLASS(21,	256,	1280)					\     SIZE_CLASS(22,	256,	1536)					\     SIZE_CLASS(23,	256,	1792)					\     SIZE_CLASS(24,	256,	2048)					\     SIZE_CLASS(25,	512,	2560)					\     SIZE_CLASS(26,	512,	3072)					\     SIZE_CLASS(27,	512,	3584)					\     SIZE_CLASS(28,	512,	4096)					\     SIZE_CLASS(29,	1024,	5120)					\     SIZE_CLASS(30,	1024,	6144)					\     SIZE_CLASS(31,	1024,	7168)					\  #define	NBINS		32
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|7168
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|3
operator|&&
name|LG_QUANTUM
operator|==
literal|4
operator|&&
name|LG_PAGE
operator|==
literal|14
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	8,	8)					\     SIZE_CLASS(1,	8,	16)					\     SIZE_CLASS(2,	16,	32)					\     SIZE_CLASS(3,	16,	48)					\     SIZE_CLASS(4,	16,	64)					\     SIZE_CLASS(5,	16,	80)					\     SIZE_CLASS(6,	16,	96)					\     SIZE_CLASS(7,	16,	112)					\     SIZE_CLASS(8,	16,	128)					\     SIZE_CLASS(9,	32,	160)					\     SIZE_CLASS(10,	32,	192)					\     SIZE_CLASS(11,	32,	224)					\     SIZE_CLASS(12,	32,	256)					\     SIZE_CLASS(13,	64,	320)					\     SIZE_CLASS(14,	64,	384)					\     SIZE_CLASS(15,	64,	448)					\     SIZE_CLASS(16,	64,	512)					\     SIZE_CLASS(17,	128,	640)					\     SIZE_CLASS(18,	128,	768)					\     SIZE_CLASS(19,	128,	896)					\     SIZE_CLASS(20,	128,	1024)					\     SIZE_CLASS(21,	256,	1280)					\     SIZE_CLASS(22,	256,	1536)					\     SIZE_CLASS(23,	256,	1792)					\     SIZE_CLASS(24,	256,	2048)					\     SIZE_CLASS(25,	512,	2560)					\     SIZE_CLASS(26,	512,	3072)					\     SIZE_CLASS(27,	512,	3584)					\     SIZE_CLASS(28,	512,	4096)					\     SIZE_CLASS(29,	1024,	5120)					\     SIZE_CLASS(30,	1024,	6144)					\     SIZE_CLASS(31,	1024,	7168)					\     SIZE_CLASS(32,	1024,	8192)					\     SIZE_CLASS(33,	2048,	10240)					\     SIZE_CLASS(34,	2048,	12288)					\     SIZE_CLASS(35,	2048,	14336)					\  #define	NBINS		36
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|14336
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|3
operator|&&
name|LG_QUANTUM
operator|==
literal|4
operator|&&
name|LG_PAGE
operator|==
literal|15
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	8,	8)					\     SIZE_CLASS(1,	8,	16)					\     SIZE_CLASS(2,	16,	32)					\     SIZE_CLASS(3,	16,	48)					\     SIZE_CLASS(4,	16,	64)					\     SIZE_CLASS(5,	16,	80)					\     SIZE_CLASS(6,	16,	96)					\     SIZE_CLASS(7,	16,	112)					\     SIZE_CLASS(8,	16,	128)					\     SIZE_CLASS(9,	32,	160)					\     SIZE_CLASS(10,	32,	192)					\     SIZE_CLASS(11,	32,	224)					\     SIZE_CLASS(12,	32,	256)					\     SIZE_CLASS(13,	64,	320)					\     SIZE_CLASS(14,	64,	384)					\     SIZE_CLASS(15,	64,	448)					\     SIZE_CLASS(16,	64,	512)					\     SIZE_CLASS(17,	128,	640)					\     SIZE_CLASS(18,	128,	768)					\     SIZE_CLASS(19,	128,	896)					\     SIZE_CLASS(20,	128,	1024)					\     SIZE_CLASS(21,	256,	1280)					\     SIZE_CLASS(22,	256,	1536)					\     SIZE_CLASS(23,	256,	1792)					\     SIZE_CLASS(24,	256,	2048)					\     SIZE_CLASS(25,	512,	2560)					\     SIZE_CLASS(26,	512,	3072)					\     SIZE_CLASS(27,	512,	3584)					\     SIZE_CLASS(28,	512,	4096)					\     SIZE_CLASS(29,	1024,	5120)					\     SIZE_CLASS(30,	1024,	6144)					\     SIZE_CLASS(31,	1024,	7168)					\     SIZE_CLASS(32,	1024,	8192)					\     SIZE_CLASS(33,	2048,	10240)					\     SIZE_CLASS(34,	2048,	12288)					\     SIZE_CLASS(35,	2048,	14336)					\     SIZE_CLASS(36,	2048,	16384)					\     SIZE_CLASS(37,	4096,	20480)					\     SIZE_CLASS(38,	4096,	24576)					\     SIZE_CLASS(39,	4096,	28672)					\  #define	NBINS		40
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|28672
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|3
operator|&&
name|LG_QUANTUM
operator|==
literal|4
operator|&&
name|LG_PAGE
operator|==
literal|16
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	8,	8)					\     SIZE_CLASS(1,	8,	16)					\     SIZE_CLASS(2,	16,	32)					\     SIZE_CLASS(3,	16,	48)					\     SIZE_CLASS(4,	16,	64)					\     SIZE_CLASS(5,	16,	80)					\     SIZE_CLASS(6,	16,	96)					\     SIZE_CLASS(7,	16,	112)					\     SIZE_CLASS(8,	16,	128)					\     SIZE_CLASS(9,	32,	160)					\     SIZE_CLASS(10,	32,	192)					\     SIZE_CLASS(11,	32,	224)					\     SIZE_CLASS(12,	32,	256)					\     SIZE_CLASS(13,	64,	320)					\     SIZE_CLASS(14,	64,	384)					\     SIZE_CLASS(15,	64,	448)					\     SIZE_CLASS(16,	64,	512)					\     SIZE_CLASS(17,	128,	640)					\     SIZE_CLASS(18,	128,	768)					\     SIZE_CLASS(19,	128,	896)					\     SIZE_CLASS(20,	128,	1024)					\     SIZE_CLASS(21,	256,	1280)					\     SIZE_CLASS(22,	256,	1536)					\     SIZE_CLASS(23,	256,	1792)					\     SIZE_CLASS(24,	256,	2048)					\     SIZE_CLASS(25,	512,	2560)					\     SIZE_CLASS(26,	512,	3072)					\     SIZE_CLASS(27,	512,	3584)					\     SIZE_CLASS(28,	512,	4096)					\     SIZE_CLASS(29,	1024,	5120)					\     SIZE_CLASS(30,	1024,	6144)					\     SIZE_CLASS(31,	1024,	7168)					\     SIZE_CLASS(32,	1024,	8192)					\     SIZE_CLASS(33,	2048,	10240)					\     SIZE_CLASS(34,	2048,	12288)					\     SIZE_CLASS(35,	2048,	14336)					\     SIZE_CLASS(36,	2048,	16384)					\     SIZE_CLASS(37,	4096,	20480)					\     SIZE_CLASS(38,	4096,	24576)					\     SIZE_CLASS(39,	4096,	28672)					\     SIZE_CLASS(40,	4096,	32768)					\     SIZE_CLASS(41,	8192,	40960)					\     SIZE_CLASS(42,	8192,	49152)					\     SIZE_CLASS(43,	8192,	57344)					\  #define	NBINS		44
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|57344
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|4
operator|&&
name|LG_QUANTUM
operator|==
literal|4
operator|&&
name|LG_PAGE
operator|==
literal|12
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	16,	16)					\     SIZE_CLASS(1,	16,	32)					\     SIZE_CLASS(2,	16,	48)					\     SIZE_CLASS(3,	16,	64)					\     SIZE_CLASS(4,	16,	80)					\     SIZE_CLASS(5,	16,	96)					\     SIZE_CLASS(6,	16,	112)					\     SIZE_CLASS(7,	16,	128)					\     SIZE_CLASS(8,	32,	160)					\     SIZE_CLASS(9,	32,	192)					\     SIZE_CLASS(10,	32,	224)					\     SIZE_CLASS(11,	32,	256)					\     SIZE_CLASS(12,	64,	320)					\     SIZE_CLASS(13,	64,	384)					\     SIZE_CLASS(14,	64,	448)					\     SIZE_CLASS(15,	64,	512)					\     SIZE_CLASS(16,	128,	640)					\     SIZE_CLASS(17,	128,	768)					\     SIZE_CLASS(18,	128,	896)					\     SIZE_CLASS(19,	128,	1024)					\     SIZE_CLASS(20,	256,	1280)					\     SIZE_CLASS(21,	256,	1536)					\     SIZE_CLASS(22,	256,	1792)					\     SIZE_CLASS(23,	256,	2048)					\     SIZE_CLASS(24,	512,	2560)					\     SIZE_CLASS(25,	512,	3072)					\     SIZE_CLASS(26,	512,	3584)					\  #define	NBINS		27
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|3584
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|4
operator|&&
name|LG_QUANTUM
operator|==
literal|4
operator|&&
name|LG_PAGE
operator|==
literal|13
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	16,	16)					\     SIZE_CLASS(1,	16,	32)					\     SIZE_CLASS(2,	16,	48)					\     SIZE_CLASS(3,	16,	64)					\     SIZE_CLASS(4,	16,	80)					\     SIZE_CLASS(5,	16,	96)					\     SIZE_CLASS(6,	16,	112)					\     SIZE_CLASS(7,	16,	128)					\     SIZE_CLASS(8,	32,	160)					\     SIZE_CLASS(9,	32,	192)					\     SIZE_CLASS(10,	32,	224)					\     SIZE_CLASS(11,	32,	256)					\     SIZE_CLASS(12,	64,	320)					\     SIZE_CLASS(13,	64,	384)					\     SIZE_CLASS(14,	64,	448)					\     SIZE_CLASS(15,	64,	512)					\     SIZE_CLASS(16,	128,	640)					\     SIZE_CLASS(17,	128,	768)					\     SIZE_CLASS(18,	128,	896)					\     SIZE_CLASS(19,	128,	1024)					\     SIZE_CLASS(20,	256,	1280)					\     SIZE_CLASS(21,	256,	1536)					\     SIZE_CLASS(22,	256,	1792)					\     SIZE_CLASS(23,	256,	2048)					\     SIZE_CLASS(24,	512,	2560)					\     SIZE_CLASS(25,	512,	3072)					\     SIZE_CLASS(26,	512,	3584)					\     SIZE_CLASS(27,	512,	4096)					\     SIZE_CLASS(28,	1024,	5120)					\     SIZE_CLASS(29,	1024,	6144)					\     SIZE_CLASS(30,	1024,	7168)					\  #define	NBINS		31
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|7168
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|4
operator|&&
name|LG_QUANTUM
operator|==
literal|4
operator|&&
name|LG_PAGE
operator|==
literal|14
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	16,	16)					\     SIZE_CLASS(1,	16,	32)					\     SIZE_CLASS(2,	16,	48)					\     SIZE_CLASS(3,	16,	64)					\     SIZE_CLASS(4,	16,	80)					\     SIZE_CLASS(5,	16,	96)					\     SIZE_CLASS(6,	16,	112)					\     SIZE_CLASS(7,	16,	128)					\     SIZE_CLASS(8,	32,	160)					\     SIZE_CLASS(9,	32,	192)					\     SIZE_CLASS(10,	32,	224)					\     SIZE_CLASS(11,	32,	256)					\     SIZE_CLASS(12,	64,	320)					\     SIZE_CLASS(13,	64,	384)					\     SIZE_CLASS(14,	64,	448)					\     SIZE_CLASS(15,	64,	512)					\     SIZE_CLASS(16,	128,	640)					\     SIZE_CLASS(17,	128,	768)					\     SIZE_CLASS(18,	128,	896)					\     SIZE_CLASS(19,	128,	1024)					\     SIZE_CLASS(20,	256,	1280)					\     SIZE_CLASS(21,	256,	1536)					\     SIZE_CLASS(22,	256,	1792)					\     SIZE_CLASS(23,	256,	2048)					\     SIZE_CLASS(24,	512,	2560)					\     SIZE_CLASS(25,	512,	3072)					\     SIZE_CLASS(26,	512,	3584)					\     SIZE_CLASS(27,	512,	4096)					\     SIZE_CLASS(28,	1024,	5120)					\     SIZE_CLASS(29,	1024,	6144)					\     SIZE_CLASS(30,	1024,	7168)					\     SIZE_CLASS(31,	1024,	8192)					\     SIZE_CLASS(32,	2048,	10240)					\     SIZE_CLASS(33,	2048,	12288)					\     SIZE_CLASS(34,	2048,	14336)					\  #define	NBINS		35
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|14336
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|4
operator|&&
name|LG_QUANTUM
operator|==
literal|4
operator|&&
name|LG_PAGE
operator|==
literal|15
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	16,	16)					\     SIZE_CLASS(1,	16,	32)					\     SIZE_CLASS(2,	16,	48)					\     SIZE_CLASS(3,	16,	64)					\     SIZE_CLASS(4,	16,	80)					\     SIZE_CLASS(5,	16,	96)					\     SIZE_CLASS(6,	16,	112)					\     SIZE_CLASS(7,	16,	128)					\     SIZE_CLASS(8,	32,	160)					\     SIZE_CLASS(9,	32,	192)					\     SIZE_CLASS(10,	32,	224)					\     SIZE_CLASS(11,	32,	256)					\     SIZE_CLASS(12,	64,	320)					\     SIZE_CLASS(13,	64,	384)					\     SIZE_CLASS(14,	64,	448)					\     SIZE_CLASS(15,	64,	512)					\     SIZE_CLASS(16,	128,	640)					\     SIZE_CLASS(17,	128,	768)					\     SIZE_CLASS(18,	128,	896)					\     SIZE_CLASS(19,	128,	1024)					\     SIZE_CLASS(20,	256,	1280)					\     SIZE_CLASS(21,	256,	1536)					\     SIZE_CLASS(22,	256,	1792)					\     SIZE_CLASS(23,	256,	2048)					\     SIZE_CLASS(24,	512,	2560)					\     SIZE_CLASS(25,	512,	3072)					\     SIZE_CLASS(26,	512,	3584)					\     SIZE_CLASS(27,	512,	4096)					\     SIZE_CLASS(28,	1024,	5120)					\     SIZE_CLASS(29,	1024,	6144)					\     SIZE_CLASS(30,	1024,	7168)					\     SIZE_CLASS(31,	1024,	8192)					\     SIZE_CLASS(32,	2048,	10240)					\     SIZE_CLASS(33,	2048,	12288)					\     SIZE_CLASS(34,	2048,	14336)					\     SIZE_CLASS(35,	2048,	16384)					\     SIZE_CLASS(36,	4096,	20480)					\     SIZE_CLASS(37,	4096,	24576)					\     SIZE_CLASS(38,	4096,	28672)					\  #define	NBINS		39
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|28672
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|LG_TINY_MIN
operator|==
literal|4
operator|&&
name|LG_QUANTUM
operator|==
literal|4
operator|&&
name|LG_PAGE
operator|==
literal|16
operator|)
end_if

begin_define
define|#
directive|define
name|SIZE_CLASSES_DEFINED
end_define

begin_comment
comment|/*  SIZE_CLASS(bin,	delta,	sz) */
end_comment

begin_define
define|#
directive|define
name|SIZE_CLASSES
define|\
value|SIZE_CLASS(0,	16,	16)					\     SIZE_CLASS(1,	16,	32)					\     SIZE_CLASS(2,	16,	48)					\     SIZE_CLASS(3,	16,	64)					\     SIZE_CLASS(4,	16,	80)					\     SIZE_CLASS(5,	16,	96)					\     SIZE_CLASS(6,	16,	112)					\     SIZE_CLASS(7,	16,	128)					\     SIZE_CLASS(8,	32,	160)					\     SIZE_CLASS(9,	32,	192)					\     SIZE_CLASS(10,	32,	224)					\     SIZE_CLASS(11,	32,	256)					\     SIZE_CLASS(12,	64,	320)					\     SIZE_CLASS(13,	64,	384)					\     SIZE_CLASS(14,	64,	448)					\     SIZE_CLASS(15,	64,	512)					\     SIZE_CLASS(16,	128,	640)					\     SIZE_CLASS(17,	128,	768)					\     SIZE_CLASS(18,	128,	896)					\     SIZE_CLASS(19,	128,	1024)					\     SIZE_CLASS(20,	256,	1280)					\     SIZE_CLASS(21,	256,	1536)					\     SIZE_CLASS(22,	256,	1792)					\     SIZE_CLASS(23,	256,	2048)					\     SIZE_CLASS(24,	512,	2560)					\     SIZE_CLASS(25,	512,	3072)					\     SIZE_CLASS(26,	512,	3584)					\     SIZE_CLASS(27,	512,	4096)					\     SIZE_CLASS(28,	1024,	5120)					\     SIZE_CLASS(29,	1024,	6144)					\     SIZE_CLASS(30,	1024,	7168)					\     SIZE_CLASS(31,	1024,	8192)					\     SIZE_CLASS(32,	2048,	10240)					\     SIZE_CLASS(33,	2048,	12288)					\     SIZE_CLASS(34,	2048,	14336)					\     SIZE_CLASS(35,	2048,	16384)					\     SIZE_CLASS(36,	4096,	20480)					\     SIZE_CLASS(37,	4096,	24576)					\     SIZE_CLASS(38,	4096,	28672)					\     SIZE_CLASS(39,	4096,	32768)					\     SIZE_CLASS(40,	8192,	40960)					\     SIZE_CLASS(41,	8192,	49152)					\     SIZE_CLASS(42,	8192,	57344)					\  #define	NBINS		43
end_define

begin_define
define|#
directive|define
name|SMALL_MAXCLASS
value|57344
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|SIZE_CLASSES_DEFINED
end_ifndef

begin_error
error|#
directive|error
literal|"No size class definitions match configuration"
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_undef
undef|#
directive|undef
name|SIZE_CLASSES_DEFINED
end_undef

begin_comment
comment|/*  * The small_size2bin lookup table uses uint8_t to encode each bin index, so we  * cannot support more than 256 small size classes.  Further constrain NBINS to  * 255 to support prof_promote, since all small size classes, plus a "not  * small" size class must be stored in 8 bits of arena_chunk_map_t's bits  * field.  */
end_comment

begin_if
if|#
directive|if
operator|(
name|NBINS
operator|>
literal|255
operator|)
end_if

begin_error
error|#
directive|error
literal|"Too many small size classes"
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* JEMALLOC_H_TYPES */
end_comment

begin_comment
comment|/******************************************************************************/
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_H_STRUCTS
end_ifdef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* JEMALLOC_H_STRUCTS */
end_comment

begin_comment
comment|/******************************************************************************/
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_H_EXTERNS
end_ifdef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* JEMALLOC_H_EXTERNS */
end_comment

begin_comment
comment|/******************************************************************************/
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_H_INLINES
end_ifdef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* JEMALLOC_H_INLINES */
end_comment

begin_comment
comment|/******************************************************************************/
end_comment

end_unit

