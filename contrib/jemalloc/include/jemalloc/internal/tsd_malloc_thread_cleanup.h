begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_INTERNAL_TSD_MALLOC_THREAD_CLEANUP_H
end_ifdef

begin_error
error|#
directive|error
error|This file should be included only once, by tsd.h.
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|JEMALLOC_INTERNAL_TSD_MALLOC_THREAD_CLEANUP_H
end_define

begin_decl_stmt
specifier|extern
name|__thread
name|tsd_t
name|tsd_tls
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|__thread
name|bool
name|tsd_initialized
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|bool
name|tsd_booted
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Initialization/cleanup. */
end_comment

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|bool
name|tsd_cleanup_wrapper
parameter_list|(
name|void
parameter_list|)
block|{
if|if
condition|(
name|tsd_initialized
condition|)
block|{
name|tsd_initialized
operator|=
name|false
expr_stmt|;
name|tsd_cleanup
argument_list|(
operator|&
name|tsd_tls
argument_list|)
expr_stmt|;
block|}
return|return
name|tsd_initialized
return|;
block|}
end_function

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|bool
name|tsd_boot0
parameter_list|(
name|void
parameter_list|)
block|{
name|malloc_tsd_cleanup_register
argument_list|(
operator|&
name|tsd_cleanup_wrapper
argument_list|)
expr_stmt|;
name|tsd_booted
operator|=
name|true
expr_stmt|;
return|return
name|false
return|;
block|}
end_function

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|void
name|tsd_boot1
parameter_list|(
name|void
parameter_list|)
block|{
comment|/* Do nothing. */
block|}
end_function

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|bool
name|tsd_boot
parameter_list|(
name|void
parameter_list|)
block|{
return|return
name|tsd_boot0
argument_list|()
return|;
block|}
end_function

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|bool
name|tsd_booted_get
parameter_list|(
name|void
parameter_list|)
block|{
return|return
name|tsd_booted
return|;
block|}
end_function

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|bool
name|tsd_get_allocates
parameter_list|(
name|void
parameter_list|)
block|{
return|return
name|false
return|;
block|}
end_function

begin_comment
comment|/* Get/set. */
end_comment

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|tsd_t
modifier|*
name|tsd_get
parameter_list|(
name|bool
name|init
parameter_list|)
block|{
name|assert
argument_list|(
name|tsd_booted
argument_list|)
expr_stmt|;
return|return
operator|&
name|tsd_tls
return|;
block|}
end_function

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|void
name|tsd_set
parameter_list|(
name|tsd_t
modifier|*
name|val
parameter_list|)
block|{
name|assert
argument_list|(
name|tsd_booted
argument_list|)
expr_stmt|;
if|if
condition|(
name|likely
argument_list|(
operator|&
name|tsd_tls
operator|!=
name|val
argument_list|)
condition|)
block|{
name|tsd_tls
operator|=
operator|(
operator|*
name|val
operator|)
expr_stmt|;
block|}
name|tsd_initialized
operator|=
name|true
expr_stmt|;
block|}
end_function

end_unit

