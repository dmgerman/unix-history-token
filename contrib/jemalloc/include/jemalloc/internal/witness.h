begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/******************************************************************************/
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_H_TYPES
end_ifdef

begin_typedef
typedef|typedef
name|struct
name|witness_s
name|witness_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|unsigned
name|witness_rank_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|ql_head
argument_list|(
argument|witness_t
argument_list|)
name|witness_list_t
expr_stmt|;
end_typedef

begin_typedef
typedef|typedef
name|int
name|witness_comp_t
parameter_list|(
specifier|const
name|witness_t
modifier|*
parameter_list|,
specifier|const
name|witness_t
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/*  * Lock ranks.  Witnesses with rank WITNESS_RANK_OMIT are completely ignored by  * the witness machinery.  */
end_comment

begin_define
define|#
directive|define
name|WITNESS_RANK_OMIT
value|0U
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_INIT
value|1U
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_CTL
value|1U
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_ARENAS
value|2U
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_PROF_DUMP
value|3U
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_PROF_BT2GCTX
value|4U
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_PROF_TDATAS
value|5U
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_PROF_TDATA
value|6U
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_PROF_GCTX
value|7U
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_ARENA
value|8U
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_ARENA_CHUNKS
value|9U
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_ARENA_NODE_CACHE
value|10
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_BASE
value|11U
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_LEAF
value|0xffffffffU
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_ARENA_BIN
value|WITNESS_RANK_LEAF
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_ARENA_HUGE
value|WITNESS_RANK_LEAF
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_DSS
value|WITNESS_RANK_LEAF
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_PROF_ACTIVE
value|WITNESS_RANK_LEAF
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_PROF_DUMP_SEQ
value|WITNESS_RANK_LEAF
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_PROF_GDUMP
value|WITNESS_RANK_LEAF
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_PROF_NEXT_THR_UID
value|WITNESS_RANK_LEAF
end_define

begin_define
define|#
directive|define
name|WITNESS_RANK_PROF_THREAD_ACTIVE_INIT
value|WITNESS_RANK_LEAF
end_define

begin_define
define|#
directive|define
name|WITNESS_INITIALIZER
parameter_list|(
name|rank
parameter_list|)
value|{"initializer", rank, NULL, {NULL, NULL}}
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* JEMALLOC_H_TYPES */
end_comment

begin_comment
comment|/******************************************************************************/
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_H_STRUCTS
end_ifdef

begin_struct
struct|struct
name|witness_s
block|{
comment|/* Name, used for printing lock order reversal messages. */
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
comment|/* 	 * Witness rank, where 0 is lowest and UINT_MAX is highest.  Witnesses 	 * must be acquired in order of increasing rank. 	 */
name|witness_rank_t
name|rank
decl_stmt|;
comment|/* 	 * If two witnesses are of equal rank and they have the samp comp 	 * function pointer, it is called as a last attempt to differentiate 	 * between witnesses of equal rank. 	 */
name|witness_comp_t
modifier|*
name|comp
decl_stmt|;
comment|/* Linkage for thread's currently owned locks. */
name|ql_elm
argument_list|(
argument|witness_t
argument_list|)
name|link
expr_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* JEMALLOC_H_STRUCTS */
end_comment

begin_comment
comment|/******************************************************************************/
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_H_EXTERNS
end_ifdef

begin_function_decl
name|void
name|witness_init
parameter_list|(
name|witness_t
modifier|*
name|witness
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|witness_rank_t
name|rank
parameter_list|,
name|witness_comp_t
modifier|*
name|comp
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_JET
end_ifdef

begin_typedef
typedef|typedef
name|void
function_decl|(
name|witness_lock_error_t
function_decl|)
parameter_list|(
specifier|const
name|witness_list_t
modifier|*
parameter_list|,
specifier|const
name|witness_t
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_decl_stmt
specifier|extern
name|witness_lock_error_t
modifier|*
name|witness_lock_error
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_function_decl
name|void
name|witness_lock_error
parameter_list|(
specifier|const
name|witness_list_t
modifier|*
name|witnesses
parameter_list|,
specifier|const
name|witness_t
modifier|*
name|witness
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_JET
end_ifdef

begin_typedef
typedef|typedef
name|void
function_decl|(
name|witness_owner_error_t
function_decl|)
parameter_list|(
specifier|const
name|witness_t
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_decl_stmt
specifier|extern
name|witness_owner_error_t
modifier|*
name|witness_owner_error
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_function_decl
name|void
name|witness_owner_error
parameter_list|(
specifier|const
name|witness_t
modifier|*
name|witness
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_JET
end_ifdef

begin_typedef
typedef|typedef
name|void
function_decl|(
name|witness_not_owner_error_t
function_decl|)
parameter_list|(
specifier|const
name|witness_t
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_decl_stmt
specifier|extern
name|witness_not_owner_error_t
modifier|*
name|witness_not_owner_error
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_function_decl
name|void
name|witness_not_owner_error
parameter_list|(
specifier|const
name|witness_t
modifier|*
name|witness
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_JET
end_ifdef

begin_typedef
typedef|typedef
name|void
function_decl|(
name|witness_lockless_error_t
function_decl|)
parameter_list|(
specifier|const
name|witness_list_t
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_decl_stmt
specifier|extern
name|witness_lockless_error_t
modifier|*
name|witness_lockless_error
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_function_decl
name|void
name|witness_lockless_error
parameter_list|(
specifier|const
name|witness_list_t
modifier|*
name|witnesses
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|witnesses_cleanup
parameter_list|(
name|tsd_t
modifier|*
name|tsd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|witness_fork_cleanup
parameter_list|(
name|tsd_t
modifier|*
name|tsd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|witness_prefork
parameter_list|(
name|tsd_t
modifier|*
name|tsd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|witness_postfork_parent
parameter_list|(
name|tsd_t
modifier|*
name|tsd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|witness_postfork_child
parameter_list|(
name|tsd_t
modifier|*
name|tsd
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* JEMALLOC_H_EXTERNS */
end_comment

begin_comment
comment|/******************************************************************************/
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|JEMALLOC_H_INLINES
end_ifdef

begin_ifndef
ifndef|#
directive|ifndef
name|JEMALLOC_ENABLE_INLINE
end_ifndef

begin_function_decl
name|void
name|witness_assert_owner
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|,
specifier|const
name|witness_t
modifier|*
name|witness
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|witness_assert_not_owner
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|,
specifier|const
name|witness_t
modifier|*
name|witness
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|witness_assert_lockless
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|witness_lock
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|,
name|witness_t
modifier|*
name|witness
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|witness_unlock
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|,
name|witness_t
modifier|*
name|witness
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|(
name|defined
argument_list|(
name|JEMALLOC_ENABLE_INLINE
argument_list|)
operator|||
name|defined
argument_list|(
name|JEMALLOC_MUTEX_C_
argument_list|)
operator|)
end_if

begin_function
name|JEMALLOC_INLINE
name|void
name|witness_assert_owner
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|,
specifier|const
name|witness_t
modifier|*
name|witness
parameter_list|)
block|{
name|tsd_t
modifier|*
name|tsd
decl_stmt|;
name|witness_list_t
modifier|*
name|witnesses
decl_stmt|;
name|witness_t
modifier|*
name|w
decl_stmt|;
if|if
condition|(
operator|!
name|config_debug
condition|)
return|return;
if|if
condition|(
name|tsdn_null
argument_list|(
name|tsdn
argument_list|)
condition|)
return|return;
name|tsd
operator|=
name|tsdn_tsd
argument_list|(
name|tsdn
argument_list|)
expr_stmt|;
if|if
condition|(
name|witness
operator|->
name|rank
operator|==
name|WITNESS_RANK_OMIT
condition|)
return|return;
name|witnesses
operator|=
name|tsd_witnessesp_get
argument_list|(
name|tsd
argument_list|)
expr_stmt|;
name|ql_foreach
argument_list|(
argument|w
argument_list|,
argument|witnesses
argument_list|,
argument|link
argument_list|)
block|{
if|if
condition|(
name|w
operator|==
name|witness
condition|)
return|return;
block|}
name|witness_owner_error
argument_list|(
name|witness
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
name|JEMALLOC_INLINE
name|void
name|witness_assert_not_owner
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|,
specifier|const
name|witness_t
modifier|*
name|witness
parameter_list|)
block|{
name|tsd_t
modifier|*
name|tsd
decl_stmt|;
name|witness_list_t
modifier|*
name|witnesses
decl_stmt|;
name|witness_t
modifier|*
name|w
decl_stmt|;
if|if
condition|(
operator|!
name|config_debug
condition|)
return|return;
if|if
condition|(
name|tsdn_null
argument_list|(
name|tsdn
argument_list|)
condition|)
return|return;
name|tsd
operator|=
name|tsdn_tsd
argument_list|(
name|tsdn
argument_list|)
expr_stmt|;
if|if
condition|(
name|witness
operator|->
name|rank
operator|==
name|WITNESS_RANK_OMIT
condition|)
return|return;
name|witnesses
operator|=
name|tsd_witnessesp_get
argument_list|(
name|tsd
argument_list|)
expr_stmt|;
name|ql_foreach
argument_list|(
argument|w
argument_list|,
argument|witnesses
argument_list|,
argument|link
argument_list|)
block|{
if|if
condition|(
name|w
operator|==
name|witness
condition|)
name|witness_not_owner_error
argument_list|(
name|witness
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
name|JEMALLOC_INLINE
name|void
name|witness_assert_lockless
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|)
block|{
name|tsd_t
modifier|*
name|tsd
decl_stmt|;
name|witness_list_t
modifier|*
name|witnesses
decl_stmt|;
name|witness_t
modifier|*
name|w
decl_stmt|;
if|if
condition|(
operator|!
name|config_debug
condition|)
return|return;
if|if
condition|(
name|tsdn_null
argument_list|(
name|tsdn
argument_list|)
condition|)
return|return;
name|tsd
operator|=
name|tsdn_tsd
argument_list|(
name|tsdn
argument_list|)
expr_stmt|;
name|witnesses
operator|=
name|tsd_witnessesp_get
argument_list|(
name|tsd
argument_list|)
expr_stmt|;
name|w
operator|=
name|ql_last
argument_list|(
name|witnesses
argument_list|,
name|link
argument_list|)
expr_stmt|;
if|if
condition|(
name|w
operator|!=
name|NULL
condition|)
name|witness_lockless_error
argument_list|(
name|witnesses
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
name|JEMALLOC_INLINE
name|void
name|witness_lock
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|,
name|witness_t
modifier|*
name|witness
parameter_list|)
block|{
name|tsd_t
modifier|*
name|tsd
decl_stmt|;
name|witness_list_t
modifier|*
name|witnesses
decl_stmt|;
name|witness_t
modifier|*
name|w
decl_stmt|;
if|if
condition|(
operator|!
name|config_debug
condition|)
return|return;
if|if
condition|(
name|tsdn_null
argument_list|(
name|tsdn
argument_list|)
condition|)
return|return;
name|tsd
operator|=
name|tsdn_tsd
argument_list|(
name|tsdn
argument_list|)
expr_stmt|;
if|if
condition|(
name|witness
operator|->
name|rank
operator|==
name|WITNESS_RANK_OMIT
condition|)
return|return;
name|witness_assert_not_owner
argument_list|(
name|tsdn
argument_list|,
name|witness
argument_list|)
expr_stmt|;
name|witnesses
operator|=
name|tsd_witnessesp_get
argument_list|(
name|tsd
argument_list|)
expr_stmt|;
name|w
operator|=
name|ql_last
argument_list|(
name|witnesses
argument_list|,
name|link
argument_list|)
expr_stmt|;
if|if
condition|(
name|w
operator|==
name|NULL
condition|)
block|{
comment|/* No other locks; do nothing. */
block|}
elseif|else
if|if
condition|(
name|tsd_witness_fork_get
argument_list|(
name|tsd
argument_list|)
operator|&&
name|w
operator|->
name|rank
operator|<=
name|witness
operator|->
name|rank
condition|)
block|{
comment|/* Forking, and relaxed ranking satisfied. */
block|}
elseif|else
if|if
condition|(
name|w
operator|->
name|rank
operator|>
name|witness
operator|->
name|rank
condition|)
block|{
comment|/* Not forking, rank order reversal. */
name|witness_lock_error
argument_list|(
name|witnesses
argument_list|,
name|witness
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|w
operator|->
name|rank
operator|==
name|witness
operator|->
name|rank
operator|&&
operator|(
name|w
operator|->
name|comp
operator|==
name|NULL
operator|||
name|w
operator|->
name|comp
operator|!=
name|witness
operator|->
name|comp
operator|||
name|w
operator|->
name|comp
argument_list|(
name|w
argument_list|,
name|witness
argument_list|)
operator|>
literal|0
operator|)
condition|)
block|{
comment|/* 		 * Missing/incompatible comparison function, or comparison 		 * function indicates rank order reversal. 		 */
name|witness_lock_error
argument_list|(
name|witnesses
argument_list|,
name|witness
argument_list|)
expr_stmt|;
block|}
name|ql_elm_new
argument_list|(
name|witness
argument_list|,
name|link
argument_list|)
expr_stmt|;
name|ql_tail_insert
argument_list|(
name|witnesses
argument_list|,
name|witness
argument_list|,
name|link
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
name|JEMALLOC_INLINE
name|void
name|witness_unlock
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|,
name|witness_t
modifier|*
name|witness
parameter_list|)
block|{
name|tsd_t
modifier|*
name|tsd
decl_stmt|;
name|witness_list_t
modifier|*
name|witnesses
decl_stmt|;
if|if
condition|(
operator|!
name|config_debug
condition|)
return|return;
if|if
condition|(
name|tsdn_null
argument_list|(
name|tsdn
argument_list|)
condition|)
return|return;
name|tsd
operator|=
name|tsdn_tsd
argument_list|(
name|tsdn
argument_list|)
expr_stmt|;
if|if
condition|(
name|witness
operator|->
name|rank
operator|==
name|WITNESS_RANK_OMIT
condition|)
return|return;
name|witness_assert_owner
argument_list|(
name|tsdn
argument_list|,
name|witness
argument_list|)
expr_stmt|;
name|witnesses
operator|=
name|tsd_witnessesp_get
argument_list|(
name|tsd
argument_list|)
expr_stmt|;
name|ql_remove
argument_list|(
name|witnesses
argument_list|,
name|witness
argument_list|,
name|link
argument_list|)
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* JEMALLOC_H_INLINES */
end_comment

begin_comment
comment|/******************************************************************************/
end_comment

end_unit

