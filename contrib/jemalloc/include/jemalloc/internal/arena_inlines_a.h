begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|JEMALLOC_INTERNAL_ARENA_INLINES_A_H
end_ifndef

begin_define
define|#
directive|define
name|JEMALLOC_INTERNAL_ARENA_INLINES_A_H
end_define

begin_function
specifier|static
specifier|inline
name|unsigned
name|arena_ind_get
parameter_list|(
specifier|const
name|arena_t
modifier|*
name|arena
parameter_list|)
block|{
return|return
name|base_ind_get
argument_list|(
name|arena
operator|->
name|base
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|arena_internal_add
parameter_list|(
name|arena_t
modifier|*
name|arena
parameter_list|,
name|size_t
name|size
parameter_list|)
block|{
name|atomic_fetch_add_zu
argument_list|(
operator|&
name|arena
operator|->
name|stats
operator|.
name|internal
argument_list|,
name|size
argument_list|,
name|ATOMIC_RELAXED
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|arena_internal_sub
parameter_list|(
name|arena_t
modifier|*
name|arena
parameter_list|,
name|size_t
name|size
parameter_list|)
block|{
name|atomic_fetch_sub_zu
argument_list|(
operator|&
name|arena
operator|->
name|stats
operator|.
name|internal
argument_list|,
name|size
argument_list|,
name|ATOMIC_RELAXED
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|size_t
name|arena_internal_get
parameter_list|(
name|arena_t
modifier|*
name|arena
parameter_list|)
block|{
return|return
name|atomic_load_zu
argument_list|(
operator|&
name|arena
operator|->
name|stats
operator|.
name|internal
argument_list|,
name|ATOMIC_RELAXED
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|bool
name|arena_prof_accum
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|,
name|arena_t
modifier|*
name|arena
parameter_list|,
name|uint64_t
name|accumbytes
parameter_list|)
block|{
name|cassert
argument_list|(
name|config_prof
argument_list|)
expr_stmt|;
if|if
condition|(
name|likely
argument_list|(
name|prof_interval
operator|==
literal|0
argument_list|)
condition|)
block|{
return|return
name|false
return|;
block|}
return|return
name|prof_accum_add
argument_list|(
name|tsdn
argument_list|,
operator|&
name|arena
operator|->
name|prof_accum
argument_list|,
name|accumbytes
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|percpu_arena_update
parameter_list|(
name|tsd_t
modifier|*
name|tsd
parameter_list|,
name|unsigned
name|cpu
parameter_list|)
block|{
name|assert
argument_list|(
name|have_percpu_arena
argument_list|)
expr_stmt|;
name|arena_t
modifier|*
name|oldarena
init|=
name|tsd_arena_get
argument_list|(
name|tsd
argument_list|)
decl_stmt|;
name|assert
argument_list|(
name|oldarena
operator|!=
name|NULL
argument_list|)
expr_stmt|;
name|unsigned
name|oldind
init|=
name|arena_ind_get
argument_list|(
name|oldarena
argument_list|)
decl_stmt|;
if|if
condition|(
name|oldind
operator|!=
name|cpu
condition|)
block|{
name|unsigned
name|newind
init|=
name|cpu
decl_stmt|;
name|arena_t
modifier|*
name|newarena
init|=
name|arena_get
argument_list|(
name|tsd_tsdn
argument_list|(
name|tsd
argument_list|)
argument_list|,
name|newind
argument_list|,
name|true
argument_list|)
decl_stmt|;
name|assert
argument_list|(
name|newarena
operator|!=
name|NULL
argument_list|)
expr_stmt|;
comment|/* Set new arena/tcache associations. */
name|arena_migrate
argument_list|(
name|tsd
argument_list|,
name|oldind
argument_list|,
name|newind
argument_list|)
expr_stmt|;
name|tcache_t
modifier|*
name|tcache
init|=
name|tcache_get
argument_list|(
name|tsd
argument_list|)
decl_stmt|;
if|if
condition|(
name|tcache
operator|!=
name|NULL
condition|)
block|{
name|tcache_arena_reassociate
argument_list|(
name|tsd_tsdn
argument_list|(
name|tsd
argument_list|)
argument_list|,
name|tcache
argument_list|,
name|newarena
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* JEMALLOC_INTERNAL_ARENA_INLINES_A_H */
end_comment

end_unit

