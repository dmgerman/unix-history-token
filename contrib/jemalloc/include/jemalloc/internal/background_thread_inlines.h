begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|JEMALLOC_INTERNAL_BACKGROUND_THREAD_INLINES_H
end_ifndef

begin_define
define|#
directive|define
name|JEMALLOC_INTERNAL_BACKGROUND_THREAD_INLINES_H
end_define

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|bool
name|background_thread_enabled
parameter_list|(
name|void
parameter_list|)
block|{
return|return
name|atomic_load_b
argument_list|(
operator|&
name|background_thread_enabled_state
argument_list|,
name|ATOMIC_RELAXED
argument_list|)
return|;
block|}
end_function

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|void
name|background_thread_enabled_set
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|,
name|bool
name|state
parameter_list|)
block|{
name|malloc_mutex_assert_owner
argument_list|(
name|tsdn
argument_list|,
operator|&
name|background_thread_lock
argument_list|)
expr_stmt|;
name|atomic_store_b
argument_list|(
operator|&
name|background_thread_enabled_state
argument_list|,
name|state
argument_list|,
name|ATOMIC_RELAXED
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|background_thread_info_t
modifier|*
name|arena_background_thread_info_get
parameter_list|(
name|arena_t
modifier|*
name|arena
parameter_list|)
block|{
name|unsigned
name|arena_ind
init|=
name|arena_ind_get
argument_list|(
name|arena
argument_list|)
decl_stmt|;
return|return
operator|&
name|background_thread_info
index|[
name|arena_ind
operator|%
name|ncpus
index|]
return|;
block|}
end_function

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|uint64_t
name|background_thread_wakeup_time_get
parameter_list|(
name|background_thread_info_t
modifier|*
name|info
parameter_list|)
block|{
name|uint64_t
name|next_wakeup
init|=
name|nstime_ns
argument_list|(
operator|&
name|info
operator|->
name|next_wakeup
argument_list|)
decl_stmt|;
name|assert
argument_list|(
name|atomic_load_b
argument_list|(
operator|&
name|info
operator|->
name|indefinite_sleep
argument_list|,
name|ATOMIC_ACQUIRE
argument_list|)
operator|==
operator|(
name|next_wakeup
operator|==
name|BACKGROUND_THREAD_INDEFINITE_SLEEP
operator|)
argument_list|)
expr_stmt|;
return|return
name|next_wakeup
return|;
block|}
end_function

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|void
name|background_thread_wakeup_time_set
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|,
name|background_thread_info_t
modifier|*
name|info
parameter_list|,
name|uint64_t
name|wakeup_time
parameter_list|)
block|{
name|malloc_mutex_assert_owner
argument_list|(
name|tsdn
argument_list|,
operator|&
name|info
operator|->
name|mtx
argument_list|)
expr_stmt|;
name|atomic_store_b
argument_list|(
operator|&
name|info
operator|->
name|indefinite_sleep
argument_list|,
name|wakeup_time
operator|==
name|BACKGROUND_THREAD_INDEFINITE_SLEEP
argument_list|,
name|ATOMIC_RELEASE
argument_list|)
expr_stmt|;
name|nstime_init
argument_list|(
operator|&
name|info
operator|->
name|next_wakeup
argument_list|,
name|wakeup_time
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|bool
name|background_thread_indefinite_sleep
parameter_list|(
name|background_thread_info_t
modifier|*
name|info
parameter_list|)
block|{
return|return
name|atomic_load_b
argument_list|(
operator|&
name|info
operator|->
name|indefinite_sleep
argument_list|,
name|ATOMIC_ACQUIRE
argument_list|)
return|;
block|}
end_function

begin_function
name|JEMALLOC_ALWAYS_INLINE
name|void
name|arena_background_thread_inactivity_check
parameter_list|(
name|tsdn_t
modifier|*
name|tsdn
parameter_list|,
name|arena_t
modifier|*
name|arena
parameter_list|,
name|bool
name|is_background_thread
parameter_list|)
block|{
if|if
condition|(
operator|!
name|background_thread_enabled
argument_list|()
operator|||
name|is_background_thread
condition|)
block|{
return|return;
block|}
name|background_thread_info_t
modifier|*
name|info
init|=
name|arena_background_thread_info_get
argument_list|(
name|arena
argument_list|)
decl_stmt|;
if|if
condition|(
name|background_thread_indefinite_sleep
argument_list|(
name|info
argument_list|)
condition|)
block|{
name|background_thread_interval_check
argument_list|(
name|tsdn
argument_list|,
name|arena
argument_list|,
operator|&
name|arena
operator|->
name|decay_dirty
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* JEMALLOC_INTERNAL_BACKGROUND_THREAD_INLINES_H */
end_comment

end_unit

