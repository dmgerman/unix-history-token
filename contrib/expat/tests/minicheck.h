begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Miniature re-implementation of the "check" library.  *  * This is intended to support just enough of check to run the Expat  * tests.  This interface is based entirely on the portion of the  * check library being used.  *  * This is *source* compatible, but not necessary *link* compatible.  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
define|#
directive|define
name|CK_NOFORK
value|0
define|#
directive|define
name|CK_FORK
value|1
define|#
directive|define
name|CK_SILENT
value|0
define|#
directive|define
name|CK_NORMAL
value|1
define|#
directive|define
name|CK_VERBOSE
value|2
comment|/* Workaround for Tru64 Unix systems where the C compiler has a working    __func__, but the C++ compiler only has a working __FUNCTION__.  This    could be fixed in configure.in, but it's not worth it right now. */
if|#
directive|if
name|defined
argument_list|(
name|__osf__
argument_list|)
operator|&&
name|defined
argument_list|(
name|__cplusplus
argument_list|)
define|#
directive|define
name|__func__
value|__FUNCTION__
endif|#
directive|endif
define|#
directive|define
name|START_TEST
parameter_list|(
name|testname
parameter_list|)
value|static void testname(void) { \     _check_set_test_info(__func__, __FILE__, __LINE__);   \     {
define|#
directive|define
name|END_TEST
value|} }
define|#
directive|define
name|fail
parameter_list|(
name|msg
parameter_list|)
value|_fail_unless(0, __FILE__, __LINE__, msg)
typedef|typedef
name|void
function_decl|(
modifier|*
name|tcase_setup_function
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
typedef|typedef
name|void
function_decl|(
modifier|*
name|tcase_teardown_function
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
typedef|typedef
name|void
function_decl|(
modifier|*
name|tcase_test_function
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
typedef|typedef
name|struct
name|SRunner
name|SRunner
typedef|;
typedef|typedef
name|struct
name|Suite
name|Suite
typedef|;
typedef|typedef
name|struct
name|TCase
name|TCase
typedef|;
struct|struct
name|SRunner
block|{
name|Suite
modifier|*
name|suite
decl_stmt|;
name|int
name|nchecks
decl_stmt|;
name|int
name|nfailures
decl_stmt|;
block|}
struct|;
struct|struct
name|Suite
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|TCase
modifier|*
name|tests
decl_stmt|;
block|}
struct|;
struct|struct
name|TCase
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|tcase_setup_function
name|setup
decl_stmt|;
name|tcase_teardown_function
name|teardown
decl_stmt|;
name|tcase_test_function
modifier|*
name|tests
decl_stmt|;
name|int
name|ntests
decl_stmt|;
name|int
name|allocated
decl_stmt|;
name|TCase
modifier|*
name|next_tcase
decl_stmt|;
block|}
struct|;
comment|/* Internal helper. */
name|void
name|_check_set_test_info
parameter_list|(
name|char
specifier|const
modifier|*
name|function
parameter_list|,
name|char
specifier|const
modifier|*
name|filename
parameter_list|,
name|int
name|lineno
parameter_list|)
function_decl|;
comment|/*  * Prototypes for the actual implementation.  */
name|void
name|_fail_unless
parameter_list|(
name|int
name|condition
parameter_list|,
specifier|const
name|char
modifier|*
name|file
parameter_list|,
name|int
name|line
parameter_list|,
name|char
modifier|*
name|msg
parameter_list|)
function_decl|;
name|Suite
modifier|*
name|suite_create
parameter_list|(
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|TCase
modifier|*
name|tcase_create
parameter_list|(
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|void
name|suite_add_tcase
parameter_list|(
name|Suite
modifier|*
name|suite
parameter_list|,
name|TCase
modifier|*
name|tc
parameter_list|)
function_decl|;
name|void
name|tcase_add_checked_fixture
parameter_list|(
name|TCase
modifier|*
parameter_list|,
name|tcase_setup_function
parameter_list|,
name|tcase_teardown_function
parameter_list|)
function_decl|;
name|void
name|tcase_add_test
parameter_list|(
name|TCase
modifier|*
name|tc
parameter_list|,
name|tcase_test_function
name|test
parameter_list|)
function_decl|;
name|SRunner
modifier|*
name|srunner_create
parameter_list|(
name|Suite
modifier|*
name|suite
parameter_list|)
function_decl|;
name|void
name|srunner_run_all
parameter_list|(
name|SRunner
modifier|*
name|runner
parameter_list|,
name|int
name|verbosity
parameter_list|)
function_decl|;
name|int
name|srunner_ntests_failed
parameter_list|(
name|SRunner
modifier|*
name|runner
parameter_list|)
function_decl|;
name|void
name|srunner_free
parameter_list|(
name|SRunner
modifier|*
name|runner
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

end_unit

