begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C++ -*-
end_comment

begin_comment
comment|//<groff_src_dir>/src/include/printer.h
end_comment

begin_comment
comment|/* Copyright (C) 1989, 1990, 1991, 1992, 2001, 2002, 2003    Free Software Foundation, Inc.     Written by James Clark (jjc@jclark.com)     Last update: 12 Apr 2002     This file is part of groff.     groff is free software; you can redistribute it and/or modify it    under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2, or (at your option)    any later version.     groff is distributed in the hope that it will be useful, but    WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    General Public License for more details.     You should have received a copy of the GNU General Public License    along with groff; see the file COPYING.  If not, write to the Free    Software Foundation, 59 Temple Place - Suite 330, Boston, MA    02111-1307, USA. */
end_comment

begin_comment
comment|/* Description     The class `printer' performs the postprocessing.  Each    postprocessor only needs to implement a derived class of `printer' and    a suitable function `make_printer' for the device-dependent tasks.    Then the methods of class `printer' are called automatically by    `do_file()' in `input.cpp'. */
end_comment

begin_include
include|#
directive|include
file|"color.h"
end_include

begin_struct
struct|struct
name|environment
block|{
name|int
name|fontno
decl_stmt|;
name|int
name|size
decl_stmt|;
name|int
name|hpos
decl_stmt|;
name|int
name|vpos
decl_stmt|;
name|int
name|height
decl_stmt|;
name|int
name|slant
decl_stmt|;
name|color
modifier|*
name|col
decl_stmt|;
name|color
modifier|*
name|fill
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|font
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|font_pointer_list
block|{
name|font
modifier|*
name|p
decl_stmt|;
name|font_pointer_list
modifier|*
name|next
decl_stmt|;
name|font_pointer_list
argument_list|(
name|font
operator|*
argument_list|,
name|font_pointer_list
operator|*
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
name|class
name|printer
block|{
name|public
label|:
name|printer
argument_list|()
expr_stmt|;
name|virtual
operator|~
name|printer
argument_list|()
expr_stmt|;
name|void
name|load_font
parameter_list|(
name|int
name|i
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|void
name|set_ascii_char
parameter_list|(
name|unsigned
name|char
name|c
parameter_list|,
specifier|const
name|environment
modifier|*
name|env
parameter_list|,
name|int
modifier|*
name|widthp
init|=
literal|0
parameter_list|)
function_decl|;
name|void
name|set_special_char
parameter_list|(
specifier|const
name|char
modifier|*
name|nm
parameter_list|,
specifier|const
name|environment
modifier|*
name|env
parameter_list|,
name|int
modifier|*
name|widthp
init|=
literal|0
parameter_list|)
function_decl|;
name|virtual
name|void
name|set_numbered_char
parameter_list|(
name|int
name|n
parameter_list|,
specifier|const
name|environment
modifier|*
name|env
parameter_list|,
name|int
modifier|*
name|widthp
init|=
literal|0
parameter_list|)
function_decl|;
name|int
name|set_char_and_width
parameter_list|(
specifier|const
name|char
modifier|*
name|nm
parameter_list|,
specifier|const
name|environment
modifier|*
name|env
parameter_list|,
name|int
modifier|*
name|widthp
parameter_list|,
name|font
modifier|*
modifier|*
name|f
parameter_list|)
function_decl|;
name|font
modifier|*
name|get_font_from_index
parameter_list|(
name|int
name|fontno
parameter_list|)
function_decl|;
name|virtual
name|void
name|draw
parameter_list|(
name|int
name|code
parameter_list|,
name|int
modifier|*
name|p
parameter_list|,
name|int
name|np
parameter_list|,
specifier|const
name|environment
modifier|*
name|env
parameter_list|)
function_decl|;
comment|// perform change of line color (text, outline) in the print-out
name|virtual
name|void
name|change_color
parameter_list|(
specifier|const
name|environment
modifier|*
specifier|const
name|env
parameter_list|)
function_decl|;
comment|// perform change of fill color in the print-out
name|virtual
name|void
name|change_fill_color
parameter_list|(
specifier|const
name|environment
modifier|*
specifier|const
name|env
parameter_list|)
function_decl|;
name|virtual
name|void
name|begin_page
parameter_list|(
name|int
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|end_page
parameter_list|(
name|int
name|page_length
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|font
modifier|*
name|make_font
parameter_list|(
specifier|const
name|char
modifier|*
name|nm
parameter_list|)
function_decl|;
name|virtual
name|void
name|end_of_line
parameter_list|()
function_decl|;
name|virtual
name|void
name|special
parameter_list|(
name|char
modifier|*
name|arg
parameter_list|,
specifier|const
name|environment
modifier|*
name|env
parameter_list|,
name|char
name|type
init|=
literal|'p'
parameter_list|)
function_decl|;
name|protected
label|:
name|font_pointer_list
modifier|*
name|font_list
decl_stmt|;
name|font
modifier|*
modifier|*
name|font_table
decl_stmt|;
name|int
name|nfonts
decl_stmt|;
comment|// information about named characters
name|int
name|is_char_named
decl_stmt|;
name|int
name|is_named_set
decl_stmt|;
name|char
name|named_command
decl_stmt|;
specifier|const
name|char
modifier|*
name|named_char_s
decl_stmt|;
name|int
name|named_char_n
decl_stmt|;
name|private
label|:
name|font
modifier|*
name|find_font
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|virtual
name|void
name|set_char
parameter_list|(
name|int
name|index
parameter_list|,
name|font
modifier|*
name|f
parameter_list|,
specifier|const
name|environment
modifier|*
name|env
parameter_list|,
name|int
name|w
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
init|=
literal|0
function_decl|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_function_decl
name|printer
modifier|*
name|make_printer
parameter_list|()
function_decl|;
end_function_decl

end_unit

