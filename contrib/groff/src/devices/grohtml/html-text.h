begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C++ -*-
end_comment

begin_comment
comment|/* Copyright (C) 2000, 2001 Free Software Foundation, Inc.  *  *  Gaius Mulley (gaius@glam.ac.uk) wrote html-text.cc  *  *  html-text.h  *  *  provides a state machine interface which generates html text.  */
end_comment

begin_comment
comment|/* This file is part of groff.  groff is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  groff is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with groff; see the file COPYING.  If not, write to the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. */
end_comment

begin_include
include|#
directive|include
file|"html.h"
end_include

begin_comment
comment|/*  *  html tags  */
end_comment

begin_typedef
typedef|typedef
enum|enum
block|{
name|I_TAG
block|,
name|B_TAG
block|,
name|P_TAG
block|,
name|SUB_TAG
block|,
name|SUP_TAG
block|,
name|TT_TAG
block|,
name|PRE_TAG
block|,
name|SMALL_TAG
block|,
name|BIG_TAG
block|,
name|BREAK_TAG
block|,
name|TABLE_TAG
block|}
name|HTML_TAG
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|tag_definition
block|{
name|HTML_TAG
name|type
decl_stmt|;
name|char
modifier|*
name|arg1
decl_stmt|;
name|int
name|text_emitted
decl_stmt|;
name|tag_definition
modifier|*
name|next
decl_stmt|;
block|}
name|tag_definition
typedef|;
end_typedef

begin_comment
comment|/*  *  the state of the current paragraph.  *  It allows post-html.cc to request font changes, paragraph start/end  *  and emits balanced tags with a small amount of peephole optimization.  */
end_comment

begin_decl_stmt
name|class
name|html_text
block|{
name|public
label|:
name|html_text
argument_list|(
name|simple_output
operator|*
name|op
argument_list|)
expr_stmt|;
operator|~
name|html_text
argument_list|(
name|void
argument_list|)
expr_stmt|;
name|void
name|flush_text
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_emittext
parameter_list|(
name|char
modifier|*
name|s
parameter_list|,
name|int
name|length
parameter_list|)
function_decl|;
name|void
name|do_italic
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_bold
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_roman
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_tt
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_pre
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_small
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_big
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_para
parameter_list|(
name|char
modifier|*
name|arg1
parameter_list|)
function_decl|;
name|void
name|do_sup
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_sub
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_space
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_break
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_newline
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_table
parameter_list|(
name|char
modifier|*
name|arg
parameter_list|)
function_decl|;
name|void
name|done_bold
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|done_italic
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|char
modifier|*
name|done_para
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|done_sup
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|done_sub
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|done_tt
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|done_pre
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|done_small
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|done_big
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|do_indent
parameter_list|(
name|char
modifier|*
name|arg
parameter_list|,
name|int
name|indent
parameter_list|,
name|int
name|pageoff
parameter_list|,
name|int
name|linelen
parameter_list|)
function_decl|;
name|int
name|emitted_text
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
name|emit_space
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
name|is_in_pre
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|remove_tag
parameter_list|(
name|HTML_TAG
name|tag
parameter_list|)
function_decl|;
name|void
name|remove_sub_sup
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|done_table
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
name|is_in_table
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|private
label|:
name|tag_definition
modifier|*
name|stackptr
decl_stmt|;
comment|/* the current paragraph state */
name|tag_definition
modifier|*
name|lastptr
decl_stmt|;
comment|/* the end of the stack        */
name|simple_output
modifier|*
name|out
decl_stmt|;
name|int
name|space_emitted
decl_stmt|;
name|int
name|current_indentation
decl_stmt|;
comment|/* current .in value */
name|int
name|pageoffset
decl_stmt|;
comment|/* .po value         */
name|int
name|linelength
decl_stmt|;
comment|/* current line length */
name|int
name|is_present
parameter_list|(
name|HTML_TAG
name|t
parameter_list|)
function_decl|;
name|void
name|end_tag
parameter_list|(
name|tag_definition
modifier|*
name|t
parameter_list|)
function_decl|;
name|void
name|start_tag
parameter_list|(
name|tag_definition
modifier|*
name|t
parameter_list|)
function_decl|;
name|void
name|push_para
parameter_list|(
name|HTML_TAG
name|t
parameter_list|,
name|char
modifier|*
name|arg
parameter_list|)
function_decl|;
name|char
modifier|*
name|shutdown
parameter_list|(
name|HTML_TAG
name|t
parameter_list|)
function_decl|;
name|void
name|check_emit_text
parameter_list|(
name|tag_definition
modifier|*
name|t
parameter_list|)
function_decl|;
name|int
name|remove_break
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|issue_tag
parameter_list|(
name|char
modifier|*
name|tagname
parameter_list|,
name|char
modifier|*
name|arg
parameter_list|)
function_decl|;
name|void
name|issue_table_begin
parameter_list|(
name|tag_definition
modifier|*
name|t
parameter_list|)
function_decl|;
name|void
name|issue_table_end
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
name|table_is_void
parameter_list|(
name|tag_definition
modifier|*
name|t
parameter_list|)
function_decl|;
name|void
name|remove_def
parameter_list|(
name|tag_definition
modifier|*
name|t
parameter_list|)
function_decl|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

end_unit

