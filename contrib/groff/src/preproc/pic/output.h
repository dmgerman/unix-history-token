begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C++ -*-
end_comment

begin_comment
comment|/* Copyright (C) 1989, 1990, 1991, 1992 Free Software Foundation, Inc.      Written by James Clark (jjc@jclark.com)  This file is part of groff.  groff is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  groff is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with groff; see the file COPYING.  If not, write to the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. */
end_comment

begin_struct
struct|struct
name|line_type
block|{
enum|enum
block|{
name|invisible
block|,
name|solid
block|,
name|dotted
block|,
name|dashed
block|}
name|type
enum|;
name|double
name|dash_width
decl_stmt|;
name|double
name|thickness
decl_stmt|;
comment|// the thickness is in points
name|line_type
argument_list|()
expr_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
name|class
name|output
block|{
name|protected
label|:
name|char
modifier|*
name|args
decl_stmt|;
name|double
name|desired_height
decl_stmt|;
comment|// zero if no height specified
name|double
name|desired_width
decl_stmt|;
comment|// zero if no depth specified
name|double
name|compute_scale
parameter_list|(
name|double
parameter_list|,
specifier|const
name|position
modifier|&
parameter_list|,
specifier|const
name|position
modifier|&
parameter_list|)
function_decl|;
name|public
label|:
name|output
argument_list|()
expr_stmt|;
name|virtual
operator|~
name|output
argument_list|()
expr_stmt|;
name|void
name|set_desired_width_height
parameter_list|(
name|double
name|wid
parameter_list|,
name|double
name|ht
parameter_list|)
function_decl|;
name|void
name|set_args
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|virtual
name|void
name|start_picture
parameter_list|(
name|double
name|sc
parameter_list|,
specifier|const
name|position
modifier|&
name|ll
parameter_list|,
specifier|const
name|position
modifier|&
name|ur
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|finish_picture
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|void
name|circle
parameter_list|(
specifier|const
name|position
modifier|&
parameter_list|,
name|double
name|rad
parameter_list|,
specifier|const
name|line_type
modifier|&
parameter_list|,
name|double
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|text
parameter_list|(
specifier|const
name|position
modifier|&
parameter_list|,
name|text_piece
modifier|*
parameter_list|,
name|int
parameter_list|,
name|double
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|line
parameter_list|(
specifier|const
name|position
modifier|&
parameter_list|,
specifier|const
name|position
modifier|*
parameter_list|,
name|int
name|n
parameter_list|,
specifier|const
name|line_type
modifier|&
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|polygon
parameter_list|(
specifier|const
name|position
modifier|*
parameter_list|,
name|int
name|n
parameter_list|,
specifier|const
name|line_type
modifier|&
parameter_list|,
name|double
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|spline
parameter_list|(
specifier|const
name|position
modifier|&
parameter_list|,
specifier|const
name|position
modifier|*
parameter_list|,
name|int
name|n
parameter_list|,
specifier|const
name|line_type
modifier|&
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|arc
parameter_list|(
specifier|const
name|position
modifier|&
parameter_list|,
specifier|const
name|position
modifier|&
parameter_list|,
specifier|const
name|position
modifier|&
parameter_list|,
specifier|const
name|line_type
modifier|&
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|ellipse
parameter_list|(
specifier|const
name|position
modifier|&
parameter_list|,
specifier|const
name|distance
modifier|&
parameter_list|,
specifier|const
name|line_type
modifier|&
parameter_list|,
name|double
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|rounded_box
parameter_list|(
specifier|const
name|position
modifier|&
parameter_list|,
specifier|const
name|distance
modifier|&
parameter_list|,
name|double
parameter_list|,
specifier|const
name|line_type
modifier|&
parameter_list|,
name|double
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|command
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|virtual
name|void
name|set_location
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|virtual
name|int
name|supports_filled_polygons
parameter_list|()
function_decl|;
name|virtual
name|void
name|begin_block
parameter_list|(
specifier|const
name|position
modifier|&
name|ll
parameter_list|,
specifier|const
name|position
modifier|&
name|ur
parameter_list|)
function_decl|;
name|virtual
name|void
name|end_block
parameter_list|()
function_decl|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_decl_stmt
specifier|extern
name|output
modifier|*
name|out
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* #define FIG_SUPPORT 1 */
end_comment

begin_define
define|#
directive|define
name|TEX_SUPPORT
value|1
end_define

begin_function_decl
name|output
modifier|*
name|make_troff_output
parameter_list|()
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|TEX_SUPPORT
end_ifdef

begin_function_decl
name|output
modifier|*
name|make_tex_output
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
name|output
modifier|*
name|make_tpic_output
parameter_list|()
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* TEX_SUPPORT */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|FIG_SUPPORT
end_ifdef

begin_function_decl
name|output
modifier|*
name|make_fig_output
parameter_list|()
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* FIG_SUPPORT */
end_comment

end_unit

