begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C -*-
end_comment

begin_comment
comment|/* Copyright (C) 2000, 2001 Free Software Foundation, Inc.      Written by Gaius Mulley (gaius@glam.ac.uk).  This file is part of groff.  groff is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  groff is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with groff; see the file COPYING.  If not, write to the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. */
end_comment

begin_define
define|#
directive|define
name|eof
value|(char)-1
end_define

begin_comment
comment|/*  *  defines the class and methods implemented within pushbackbuffer.cc  */
end_comment

begin_decl_stmt
name|class
name|pushBackBuffer
block|{
name|private
label|:
name|char
modifier|*
name|charStack
decl_stmt|;
name|int
name|stackPtr
decl_stmt|;
comment|/* index to push back stack        */
name|int
name|debug
decl_stmt|;
name|int
name|verbose
decl_stmt|;
name|int
name|eofFound
decl_stmt|;
name|char
modifier|*
name|fileName
decl_stmt|;
name|int
name|lineNo
decl_stmt|;
name|int
name|stdIn
decl_stmt|;
name|public
label|:
name|pushBackBuffer
argument_list|(
name|char
operator|*
argument_list|)
expr_stmt|;
operator|~
name|pushBackBuffer
argument_list|()
expr_stmt|;
name|char
name|getPB
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|char
name|putPB
parameter_list|(
name|char
name|ch
parameter_list|)
function_decl|;
name|void
name|skipUntilToken
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|skipToNewline
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|float
name|readNumber
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
name|readInt
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|char
modifier|*
name|readString
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
name|isString
parameter_list|(
name|char
modifier|*
name|string
parameter_list|)
function_decl|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

end_unit

