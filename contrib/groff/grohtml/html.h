begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C++ -*-
end_comment

begin_comment
comment|/* Copyright (C) 1989, 1990, 1991, 1992 Free Software Foundation, Inc.      Written by James Clark (jjc@jclark.com)  This file is part of groff.  groff is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  groff is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with groff; see the file COPYING.  If not, write to the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. */
end_comment

begin_decl_stmt
name|class
name|simple_output
block|{
name|public
label|:
name|simple_output
argument_list|(
argument|FILE *
argument_list|,
argument|int max_line_length
argument_list|)
empty_stmt|;
name|simple_output
modifier|&
name|put_string
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|put_string
parameter_list|(
specifier|const
name|char
modifier|*
name|s
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|html_write_string
parameter_list|(
specifier|const
name|char
modifier|*
name|s
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|put_translated_char
parameter_list|(
specifier|const
name|char
modifier|*
name|s
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|put_translated_string
parameter_list|(
specifier|const
name|char
modifier|*
name|s
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|put_number
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|put_float
parameter_list|(
name|double
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|put_symbol
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|put_literal_symbol
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|set_fixed_point
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|simple_comment
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|begin_comment
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|comment_arg
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|end_comment
parameter_list|()
function_decl|;
name|simple_output
modifier|&
name|set_file
parameter_list|(
name|FILE
modifier|*
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|include_file
parameter_list|(
name|FILE
modifier|*
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|copy_file
parameter_list|(
name|FILE
modifier|*
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|end_line
parameter_list|()
function_decl|;
name|simple_output
modifier|&
name|put_delimiter
parameter_list|(
name|char
parameter_list|)
function_decl|;
name|simple_output
modifier|&
name|special
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|FILE
modifier|*
name|get_file
parameter_list|()
function_decl|;
name|private
label|:
name|FILE
modifier|*
name|fp
decl_stmt|;
name|int
name|col
decl_stmt|;
name|int
name|max_line_length
decl_stmt|;
comment|// not including newline
name|int
name|need_space
decl_stmt|;
name|int
name|fixed_point
decl_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_expr_stmt
specifier|inline
name|FILE
operator|*
name|simple_output
operator|::
name|get_file
argument_list|()
block|{
return|return
name|fp
return|;
block|}
end_expr_stmt

end_unit

