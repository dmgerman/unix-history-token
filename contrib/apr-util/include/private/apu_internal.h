begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_include
include|#
directive|include
file|"apr.h"
end_include

begin_include
include|#
directive|include
file|"apr_dso.h"
end_include

begin_include
include|#
directive|include
file|"apu.h"
end_include

begin_ifndef
ifndef|#
directive|ifndef
name|APU_INTERNAL_H
end_ifndef

begin_define
define|#
directive|define
name|APU_INTERNAL_H
end_define

begin_if
if|#
directive|if
name|APU_DSO_BUILD
end_if

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* For modular dso loading, an internal interlock to allow us to  * continue to initialize modules by multiple threads, the caller  * of apu_dso_load must lock first, and not unlock until any init  * finalization is complete.  */
name|apr_status_t
name|apu_dso_init
parameter_list|(
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|apr_status_t
name|apu_dso_mutex_lock
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|apr_status_t
name|apu_dso_mutex_unlock
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|apr_status_t
name|apu_dso_load
parameter_list|(
name|apr_dso_handle_t
modifier|*
modifier|*
name|dso
parameter_list|,
name|apr_dso_handle_sym_t
modifier|*
name|dsoptr
parameter_list|,
specifier|const
name|char
modifier|*
name|module
parameter_list|,
specifier|const
name|char
modifier|*
name|modsym
parameter_list|,
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
if|#
directive|if
name|APR_HAS_LDAP
comment|/* For LDAP internal builds, wrap our LDAP namespace */
struct|struct
name|apr__ldap_dso_fntable
block|{
name|int
function_decl|(
modifier|*
name|info
function_decl|)
parameter_list|(
name|apr_pool_t
modifier|*
name|pool
parameter_list|,
name|apr_ldap_err_t
modifier|*
modifier|*
name|result_err
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|init
function_decl|)
parameter_list|(
name|apr_pool_t
modifier|*
name|pool
parameter_list|,
name|LDAP
modifier|*
modifier|*
name|ldap
parameter_list|,
specifier|const
name|char
modifier|*
name|hostname
parameter_list|,
name|int
name|portno
parameter_list|,
name|int
name|secure
parameter_list|,
name|apr_ldap_err_t
modifier|*
modifier|*
name|result_err
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|ssl_init
function_decl|)
parameter_list|(
name|apr_pool_t
modifier|*
name|pool
parameter_list|,
specifier|const
name|char
modifier|*
name|cert_auth_file
parameter_list|,
name|int
name|cert_file_type
parameter_list|,
name|apr_ldap_err_t
modifier|*
modifier|*
name|result_err
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|ssl_deinit
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_option
function_decl|)
parameter_list|(
name|apr_pool_t
modifier|*
name|pool
parameter_list|,
name|LDAP
modifier|*
name|ldap
parameter_list|,
name|int
name|option
parameter_list|,
name|void
modifier|*
name|outvalue
parameter_list|,
name|apr_ldap_err_t
modifier|*
modifier|*
name|result_err
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_option
function_decl|)
parameter_list|(
name|apr_pool_t
modifier|*
name|pool
parameter_list|,
name|LDAP
modifier|*
name|ldap
parameter_list|,
name|int
name|option
parameter_list|,
specifier|const
name|void
modifier|*
name|invalue
parameter_list|,
name|apr_ldap_err_t
modifier|*
modifier|*
name|result_err
parameter_list|)
function_decl|;
name|apr_status_t
function_decl|(
modifier|*
name|rebind_init
function_decl|)
parameter_list|(
name|apr_pool_t
modifier|*
name|pool
parameter_list|)
function_decl|;
name|apr_status_t
function_decl|(
modifier|*
name|rebind_add
function_decl|)
parameter_list|(
name|apr_pool_t
modifier|*
name|pool
parameter_list|,
name|LDAP
modifier|*
name|ld
parameter_list|,
specifier|const
name|char
modifier|*
name|bindDN
parameter_list|,
specifier|const
name|char
modifier|*
name|bindPW
parameter_list|)
function_decl|;
name|apr_status_t
function_decl|(
modifier|*
name|rebind_remove
function_decl|)
parameter_list|(
name|LDAP
modifier|*
name|ld
parameter_list|)
function_decl|;
block|}
struct|;
endif|#
directive|endif
comment|/* APR_HAS_LDAP */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* APU_DSO_BUILD */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* APU_INTERNAL_H */
end_comment

end_unit

