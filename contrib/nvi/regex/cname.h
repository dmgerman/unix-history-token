begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$NetBSD: cname.h,v 1.2 2008/12/05 22:51:42 christos Exp $ */
end_comment

begin_comment
comment|/*-  * Copyright (c) 1992, 1993, 1994 Henry Spencer.  * Copyright (c) 1992, 1993, 1994  *	The Regents of the University of California.  All rights reserved.  *  * This code is derived from software contributed to Berkeley by  * Henry Spencer of the University of Toronto.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by the University of  *	California, Berkeley and its contributors.  * 4. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	@(#)cname.h	8.2 (Berkeley) 3/16/94  */
end_comment

begin_comment
comment|/* character-name table */
end_comment

begin_struct
specifier|static
struct|struct
name|cname
block|{
specifier|const
name|RCHAR_T
modifier|*
name|name
decl_stmt|;
name|char
name|code
decl_stmt|;
block|}
name|cnames
index|[]
init|=
block|{
block|{
name|L
argument_list|(
literal|"NUL"
argument_list|)
block|,
literal|'\0'
block|}
block|,
block|{
name|L
argument_list|(
literal|"SOH"
argument_list|)
block|,
literal|'\001'
block|}
block|,
block|{
name|L
argument_list|(
literal|"STX"
argument_list|)
block|,
literal|'\002'
block|}
block|,
block|{
name|L
argument_list|(
literal|"ETX"
argument_list|)
block|,
literal|'\003'
block|}
block|,
block|{
name|L
argument_list|(
literal|"EOT"
argument_list|)
block|,
literal|'\004'
block|}
block|,
block|{
name|L
argument_list|(
literal|"ENQ"
argument_list|)
block|,
literal|'\005'
block|}
block|,
block|{
name|L
argument_list|(
literal|"ACK"
argument_list|)
block|,
literal|'\006'
block|}
block|,
block|{
name|L
argument_list|(
literal|"BEL"
argument_list|)
block|,
literal|'\007'
block|}
block|,
block|{
name|L
argument_list|(
literal|"alert"
argument_list|)
block|,
literal|'\007'
block|}
block|,
block|{
name|L
argument_list|(
literal|"BS"
argument_list|)
block|,
literal|'\010'
block|}
block|,
block|{
name|L
argument_list|(
literal|"backspace"
argument_list|)
block|,
literal|'\b'
block|}
block|,
block|{
name|L
argument_list|(
literal|"HT"
argument_list|)
block|,
literal|'\011'
block|}
block|,
block|{
name|L
argument_list|(
literal|"tab"
argument_list|)
block|,
literal|'\t'
block|}
block|,
block|{
name|L
argument_list|(
literal|"LF"
argument_list|)
block|,
literal|'\012'
block|}
block|,
block|{
name|L
argument_list|(
literal|"newline"
argument_list|)
block|,
literal|'\n'
block|}
block|,
block|{
name|L
argument_list|(
literal|"VT"
argument_list|)
block|,
literal|'\013'
block|}
block|,
block|{
name|L
argument_list|(
literal|"vertical-tab"
argument_list|)
block|,
literal|'\v'
block|}
block|,
block|{
name|L
argument_list|(
literal|"FF"
argument_list|)
block|,
literal|'\014'
block|}
block|,
block|{
name|L
argument_list|(
literal|"form-feed"
argument_list|)
block|,
literal|'\f'
block|}
block|,
block|{
name|L
argument_list|(
literal|"CR"
argument_list|)
block|,
literal|'\015'
block|}
block|,
block|{
name|L
argument_list|(
literal|"carriage-return"
argument_list|)
block|,
literal|'\r'
block|}
block|,
block|{
name|L
argument_list|(
literal|"SO"
argument_list|)
block|,
literal|'\016'
block|}
block|,
block|{
name|L
argument_list|(
literal|"SI"
argument_list|)
block|,
literal|'\017'
block|}
block|,
block|{
name|L
argument_list|(
literal|"DLE"
argument_list|)
block|,
literal|'\020'
block|}
block|,
block|{
name|L
argument_list|(
literal|"DC1"
argument_list|)
block|,
literal|'\021'
block|}
block|,
block|{
name|L
argument_list|(
literal|"DC2"
argument_list|)
block|,
literal|'\022'
block|}
block|,
block|{
name|L
argument_list|(
literal|"DC3"
argument_list|)
block|,
literal|'\023'
block|}
block|,
block|{
name|L
argument_list|(
literal|"DC4"
argument_list|)
block|,
literal|'\024'
block|}
block|,
block|{
name|L
argument_list|(
literal|"NAK"
argument_list|)
block|,
literal|'\025'
block|}
block|,
block|{
name|L
argument_list|(
literal|"SYN"
argument_list|)
block|,
literal|'\026'
block|}
block|,
block|{
name|L
argument_list|(
literal|"ETB"
argument_list|)
block|,
literal|'\027'
block|}
block|,
block|{
name|L
argument_list|(
literal|"CAN"
argument_list|)
block|,
literal|'\030'
block|}
block|,
block|{
name|L
argument_list|(
literal|"EM"
argument_list|)
block|,
literal|'\031'
block|}
block|,
block|{
name|L
argument_list|(
literal|"SUB"
argument_list|)
block|,
literal|'\032'
block|}
block|,
block|{
name|L
argument_list|(
literal|"ESC"
argument_list|)
block|,
literal|'\033'
block|}
block|,
block|{
name|L
argument_list|(
literal|"IS4"
argument_list|)
block|,
literal|'\034'
block|}
block|,
block|{
name|L
argument_list|(
literal|"FS"
argument_list|)
block|,
literal|'\034'
block|}
block|,
block|{
name|L
argument_list|(
literal|"IS3"
argument_list|)
block|,
literal|'\035'
block|}
block|,
block|{
name|L
argument_list|(
literal|"GS"
argument_list|)
block|,
literal|'\035'
block|}
block|,
block|{
name|L
argument_list|(
literal|"IS2"
argument_list|)
block|,
literal|'\036'
block|}
block|,
block|{
name|L
argument_list|(
literal|"RS"
argument_list|)
block|,
literal|'\036'
block|}
block|,
block|{
name|L
argument_list|(
literal|"IS1"
argument_list|)
block|,
literal|'\037'
block|}
block|,
block|{
name|L
argument_list|(
literal|"US"
argument_list|)
block|,
literal|'\037'
block|}
block|,
block|{
name|L
argument_list|(
literal|"space"
argument_list|)
block|,
literal|' '
block|}
block|,
block|{
name|L
argument_list|(
literal|"exclamation-mark"
argument_list|)
block|,
literal|'!'
block|}
block|,
block|{
name|L
argument_list|(
literal|"quotation-mark"
argument_list|)
block|,
literal|'"'
block|}
block|,
block|{
name|L
argument_list|(
literal|"number-sign"
argument_list|)
block|,
literal|'#'
block|}
block|,
block|{
name|L
argument_list|(
literal|"dollar-sign"
argument_list|)
block|,
literal|'$'
block|}
block|,
block|{
name|L
argument_list|(
literal|"percent-sign"
argument_list|)
block|,
literal|'%'
block|}
block|,
block|{
name|L
argument_list|(
literal|"ampersand"
argument_list|)
block|,
literal|'&'
block|}
block|,
block|{
name|L
argument_list|(
literal|"apostrophe"
argument_list|)
block|,
literal|'\''
block|}
block|,
block|{
name|L
argument_list|(
literal|"left-parenthesis"
argument_list|)
block|,
literal|'('
block|}
block|,
block|{
name|L
argument_list|(
literal|"right-parenthesis"
argument_list|)
block|,
literal|')'
block|}
block|,
block|{
name|L
argument_list|(
literal|"asterisk"
argument_list|)
block|,
literal|'*'
block|}
block|,
block|{
name|L
argument_list|(
literal|"plus-sign"
argument_list|)
block|,
literal|'+'
block|}
block|,
block|{
name|L
argument_list|(
literal|"comma"
argument_list|)
block|,
literal|','
block|}
block|,
block|{
name|L
argument_list|(
literal|"hyphen"
argument_list|)
block|,
literal|'-'
block|}
block|,
block|{
name|L
argument_list|(
literal|"hyphen-minus"
argument_list|)
block|,
literal|'-'
block|}
block|,
block|{
name|L
argument_list|(
literal|"period"
argument_list|)
block|,
literal|'.'
block|}
block|,
block|{
name|L
argument_list|(
literal|"full-stop"
argument_list|)
block|,
literal|'.'
block|}
block|,
block|{
name|L
argument_list|(
literal|"slash"
argument_list|)
block|,
literal|'/'
block|}
block|,
block|{
name|L
argument_list|(
literal|"solidus"
argument_list|)
block|,
literal|'/'
block|}
block|,
block|{
name|L
argument_list|(
literal|"zero"
argument_list|)
block|,
literal|'0'
block|}
block|,
block|{
name|L
argument_list|(
literal|"one"
argument_list|)
block|,
literal|'1'
block|}
block|,
block|{
name|L
argument_list|(
literal|"two"
argument_list|)
block|,
literal|'2'
block|}
block|,
block|{
name|L
argument_list|(
literal|"three"
argument_list|)
block|,
literal|'3'
block|}
block|,
block|{
name|L
argument_list|(
literal|"four"
argument_list|)
block|,
literal|'4'
block|}
block|,
block|{
name|L
argument_list|(
literal|"five"
argument_list|)
block|,
literal|'5'
block|}
block|,
block|{
name|L
argument_list|(
literal|"six"
argument_list|)
block|,
literal|'6'
block|}
block|,
block|{
name|L
argument_list|(
literal|"seven"
argument_list|)
block|,
literal|'7'
block|}
block|,
block|{
name|L
argument_list|(
literal|"eight"
argument_list|)
block|,
literal|'8'
block|}
block|,
block|{
name|L
argument_list|(
literal|"nine"
argument_list|)
block|,
literal|'9'
block|}
block|,
block|{
name|L
argument_list|(
literal|"colon"
argument_list|)
block|,
literal|':'
block|}
block|,
block|{
name|L
argument_list|(
literal|"semicolon"
argument_list|)
block|,
literal|';'
block|}
block|,
block|{
name|L
argument_list|(
literal|"less-than-sign"
argument_list|)
block|,
literal|'<'
block|}
block|,
block|{
name|L
argument_list|(
literal|"equals-sign"
argument_list|)
block|,
literal|'='
block|}
block|,
block|{
name|L
argument_list|(
literal|"greater-than-sign"
argument_list|)
block|,
literal|'>'
block|}
block|,
block|{
name|L
argument_list|(
literal|"question-mark"
argument_list|)
block|,
literal|'?'
block|}
block|,
block|{
name|L
argument_list|(
literal|"commercial-at"
argument_list|)
block|,
literal|'@'
block|}
block|,
block|{
name|L
argument_list|(
literal|"left-square-bracket"
argument_list|)
block|,
literal|'['
block|}
block|,
block|{
name|L
argument_list|(
literal|"backslash"
argument_list|)
block|,
literal|'\\'
block|}
block|,
block|{
name|L
argument_list|(
literal|"reverse-solidus"
argument_list|)
block|,
literal|'\\'
block|}
block|,
block|{
name|L
argument_list|(
literal|"right-square-bracket"
argument_list|)
block|,
literal|']'
block|}
block|,
block|{
name|L
argument_list|(
literal|"circumflex"
argument_list|)
block|,
literal|'^'
block|}
block|,
block|{
name|L
argument_list|(
literal|"circumflex-accent"
argument_list|)
block|,
literal|'^'
block|}
block|,
block|{
name|L
argument_list|(
literal|"underscore"
argument_list|)
block|,
literal|'_'
block|}
block|,
block|{
name|L
argument_list|(
literal|"low-line"
argument_list|)
block|,
literal|'_'
block|}
block|,
block|{
name|L
argument_list|(
literal|"grave-accent"
argument_list|)
block|,
literal|'`'
block|}
block|,
block|{
name|L
argument_list|(
literal|"left-brace"
argument_list|)
block|,
literal|'{'
block|}
block|,
block|{
name|L
argument_list|(
literal|"left-curly-bracket"
argument_list|)
block|,
literal|'{'
block|}
block|,
block|{
name|L
argument_list|(
literal|"vertical-line"
argument_list|)
block|,
literal|'|'
block|}
block|,
block|{
name|L
argument_list|(
literal|"right-brace"
argument_list|)
block|,
literal|'}'
block|}
block|,
block|{
name|L
argument_list|(
literal|"right-curly-bracket"
argument_list|)
block|,
literal|'}'
block|}
block|,
block|{
name|L
argument_list|(
literal|"tilde"
argument_list|)
block|,
literal|'~'
block|}
block|,
block|{
name|L
argument_list|(
literal|"DEL"
argument_list|)
block|,
literal|'\177'
block|}
block|,
block|{
name|NULL
block|,
literal|0
block|}
block|, }
struct|;
end_struct

end_unit

