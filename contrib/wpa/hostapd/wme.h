begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * hostapd / WMM (Wi-Fi Multimedia)  * Copyright 2002-2003, Instant802 Networks, Inc.  * Copyright 2005-2006, Devicescape Software, Inc.  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License version 2 as  * published by the Free Software Foundation.  *  * Alternatively, this software may be distributed under the terms of BSD  * license.  *  * See README and COPYING for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|WME_H
end_ifndef

begin_define
define|#
directive|define
name|WME_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__linux__
end_ifdef

begin_include
include|#
directive|include
file|<endian.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __linux__ */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|||
name|defined
argument_list|(
name|__NetBSD__
argument_list|)
operator|||
name|defined
argument_list|(
name|__DragonFly__
argument_list|)
end_if

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<sys/endian.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* defined(__FreeBSD__) || defined(__NetBSD__) || 	* defined(__DragonFly__) */
end_comment

begin_function
specifier|static
specifier|inline
name|u16
name|tsinfo
parameter_list|(
name|int
name|tag1d
parameter_list|,
name|int
name|contention_based
parameter_list|,
name|int
name|direction
parameter_list|)
block|{
return|return
operator|(
name|tag1d
operator|<<
literal|11
operator|)
operator||
operator|(
name|contention_based
operator|<<
literal|7
operator|)
operator||
operator|(
name|direction
operator|<<
literal|5
operator|)
operator||
operator|(
name|tag1d
operator|<<
literal|1
operator|)
return|;
block|}
end_function

begin_struct
struct|struct
name|wme_information_element
block|{
comment|/* required fields for WME version 1 */
name|u8
name|oui
index|[
literal|3
index|]
decl_stmt|;
name|u8
name|oui_type
decl_stmt|;
name|u8
name|oui_subtype
decl_stmt|;
name|u8
name|version
decl_stmt|;
name|u8
name|acInfo
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_struct
struct|struct
name|wme_ac_parameter
block|{
if|#
directive|if
name|__BYTE_ORDER
operator|==
name|__LITTLE_ENDIAN
comment|/* byte 1 */
name|u8
name|aifsn
range|:
literal|4
decl_stmt|,
name|acm
range|:
literal|1
decl_stmt|,
name|aci
range|:
literal|2
decl_stmt|,
name|reserved
range|:
literal|1
decl_stmt|;
comment|/* byte 2 */
name|u8
name|eCWmin
range|:
literal|4
decl_stmt|,
name|eCWmax
range|:
literal|4
decl_stmt|;
elif|#
directive|elif
name|__BYTE_ORDER
operator|==
name|__BIG_ENDIAN
comment|/* byte 1 */
name|u8
name|reserved
range|:
literal|1
decl_stmt|,
name|aci
range|:
literal|2
decl_stmt|,
name|acm
range|:
literal|1
decl_stmt|,
name|aifsn
range|:
literal|4
decl_stmt|;
comment|/* byte 2 */
name|u8
name|eCWmax
range|:
literal|4
decl_stmt|,
name|eCWmin
range|:
literal|4
decl_stmt|;
else|#
directive|else
error|#
directive|error
literal|"Please fix<endian.h>"
endif|#
directive|endif
comment|/* bytes 3& 4 */
name|le16
name|txopLimit
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_struct
struct|struct
name|wme_parameter_element
block|{
comment|/* required fields for WME version 1 */
name|u8
name|oui
index|[
literal|3
index|]
decl_stmt|;
name|u8
name|oui_type
decl_stmt|;
name|u8
name|oui_subtype
decl_stmt|;
name|u8
name|version
decl_stmt|;
name|u8
name|acInfo
decl_stmt|;
name|u8
name|reserved
decl_stmt|;
name|struct
name|wme_ac_parameter
name|ac
index|[
literal|4
index|]
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_struct
struct|struct
name|wme_tspec_info_element
block|{
name|u8
name|eid
decl_stmt|;
name|u8
name|length
decl_stmt|;
name|u8
name|oui
index|[
literal|3
index|]
decl_stmt|;
name|u8
name|oui_type
decl_stmt|;
name|u8
name|oui_subtype
decl_stmt|;
name|u8
name|version
decl_stmt|;
name|u16
name|ts_info
decl_stmt|;
name|u16
name|nominal_msdu_size
decl_stmt|;
name|u16
name|maximum_msdu_size
decl_stmt|;
name|u32
name|minimum_service_interval
decl_stmt|;
name|u32
name|maximum_service_interval
decl_stmt|;
name|u32
name|inactivity_interval
decl_stmt|;
name|u32
name|start_time
decl_stmt|;
name|u32
name|minimum_data_rate
decl_stmt|;
name|u32
name|mean_data_rate
decl_stmt|;
name|u32
name|maximum_burst_size
decl_stmt|;
name|u32
name|minimum_phy_rate
decl_stmt|;
name|u32
name|peak_data_rate
decl_stmt|;
name|u32
name|delay_bound
decl_stmt|;
name|u16
name|surplus_bandwidth_allowance
decl_stmt|;
name|u16
name|medium_time
decl_stmt|;
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_comment
comment|/* Access Categories */
end_comment

begin_enum
enum|enum
block|{
name|WME_AC_BK
init|=
literal|1
block|,
name|WME_AC_BE
init|=
literal|0
block|,
name|WME_AC_VI
init|=
literal|2
block|,
name|WME_AC_VO
init|=
literal|3
block|}
enum|;
end_enum

begin_struct_decl
struct_decl|struct
name|ieee80211_mgmt
struct_decl|;
end_struct_decl

begin_function_decl
name|u8
modifier|*
name|hostapd_eid_wme
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|eid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_eid_wme_valid
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|eid
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_wme_sta_config
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|hostapd_wme_action
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|ieee80211_mgmt
modifier|*
name|mgmt
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WME_H */
end_comment

end_unit

