begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * wpa_supplicant - Internal driver interface wrappers  * Copyright (c) 2003-2009, Jouni Malinen<j@w1.fi>  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License version 2 as  * published by the Free Software Foundation.  *  * Alternatively, this software may be distributed under the terms of BSD  * license.  *  * See README and COPYING for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|DRIVER_I_H
end_ifndef

begin_define
define|#
directive|define
name|DRIVER_I_H
end_define

begin_include
include|#
directive|include
file|"drivers/driver.h"
end_include

begin_comment
comment|/* driver_ops */
end_comment

begin_function
specifier|static
specifier|inline
name|void
modifier|*
name|wpa_drv_init
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|init2
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|init2
argument_list|(
name|wpa_s
argument_list|,
name|ifname
argument_list|,
name|wpa_s
operator|->
name|global_drv_priv
argument_list|)
return|;
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|init
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|init
argument_list|(
name|wpa_s
argument_list|,
name|ifname
argument_list|)
return|;
block|}
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_drv_deinit
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|deinit
condition|)
name|wpa_s
operator|->
name|driver
operator|->
name|deinit
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_param
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|char
modifier|*
name|param
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_param
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_param
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|param
argument_list|)
return|;
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_countermeasures
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_countermeasures
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_countermeasures
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|enabled
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_authenticate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_auth_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|authenticate
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|authenticate
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_associate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_associate_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|associate
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|associate
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_scan
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_scan_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|scan2
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|scan2
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|wpa_scan_results
modifier|*
name|wpa_drv_get_scan_results2
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_scan_results2
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_scan_results2
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_bssid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
modifier|*
name|bssid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_bssid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_bssid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|bssid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_ssid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
modifier|*
name|ssid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_ssid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_ssid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|ssid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_key
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|enum
name|wpa_alg
name|alg
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|key_idx
parameter_list|,
name|int
name|set_tx
parameter_list|,
specifier|const
name|u8
modifier|*
name|seq
parameter_list|,
name|size_t
name|seq_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_key
condition|)
block|{
name|wpa_s
operator|->
name|keys_cleared
operator|=
literal|0
expr_stmt|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_key
argument_list|(
name|wpa_s
operator|->
name|ifname
argument_list|,
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|alg
argument_list|,
name|addr
argument_list|,
name|key_idx
argument_list|,
name|set_tx
argument_list|,
name|seq
argument_list|,
name|seq_len
argument_list|,
name|key
argument_list|,
name|key_len
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_deauthenticate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reason_code
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|deauthenticate
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|deauthenticate
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|reason_code
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_disassociate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reason_code
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|disassociate
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|disassociate
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|reason_code
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_add_pmkid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
specifier|const
name|u8
modifier|*
name|pmkid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|add_pmkid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|add_pmkid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|bssid
argument_list|,
name|pmkid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_remove_pmkid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
specifier|const
name|u8
modifier|*
name|pmkid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|remove_pmkid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|remove_pmkid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|bssid
argument_list|,
name|pmkid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_flush_pmkid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|flush_pmkid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|flush_pmkid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_capa
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_capa
modifier|*
name|capa
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_capa
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_capa
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|capa
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_drv_poll
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|poll
condition|)
block|{
name|wpa_s
operator|->
name|driver
operator|->
name|poll
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
specifier|inline
specifier|const
name|char
modifier|*
name|wpa_drv_get_ifname
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_ifname
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_ifname
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
block|}
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
specifier|const
name|u8
modifier|*
name|wpa_drv_get_mac_addr
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_mac_addr
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_mac_addr
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
block|}
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_send_eapol
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|dst
parameter_list|,
name|u16
name|proto
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|send_eapol
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|send_eapol
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|dst
argument_list|,
name|proto
argument_list|,
name|data
argument_list|,
name|data_len
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_operstate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|state
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_operstate
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_operstate
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|state
argument_list|)
return|;
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_mlme_setprotection
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|protect_type
parameter_list|,
name|int
name|key_type
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|mlme_setprotection
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|mlme_setprotection
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|protect_type
argument_list|,
name|key_type
argument_list|)
return|;
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|hostapd_hw_modes
modifier|*
name|wpa_drv_get_hw_feature_data
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u16
modifier|*
name|num_modes
parameter_list|,
name|u16
modifier|*
name|flags
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_hw_feature_data
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_hw_feature_data
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|num_modes
argument_list|,
name|flags
argument_list|)
return|;
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_channel
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|enum
name|hostapd_hw_mode
name|phymode
parameter_list|,
name|int
name|chan
parameter_list|,
name|int
name|freq
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_channel
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_channel
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|phymode
argument_list|,
name|chan
argument_list|,
name|freq
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_ssid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|ssid
parameter_list|,
name|size_t
name|ssid_len
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_ssid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_ssid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|ssid
argument_list|,
name|ssid_len
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_bssid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_bssid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_bssid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|bssid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_country
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|char
modifier|*
name|alpha2
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_country
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_country
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|alpha2
argument_list|)
return|;
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_send_mlme
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|send_mlme
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|send_mlme
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|data
argument_list|,
name|data_len
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_mlme_add_sta
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
specifier|const
name|u8
modifier|*
name|supp_rates
parameter_list|,
name|size_t
name|supp_rates_len
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|mlme_add_sta
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|mlme_add_sta
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|supp_rates
argument_list|,
name|supp_rates_len
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_mlme_remove_sta
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|mlme_remove_sta
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|mlme_remove_sta
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_update_ft_ies
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|md
parameter_list|,
specifier|const
name|u8
modifier|*
name|ies
parameter_list|,
name|size_t
name|ies_len
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|update_ft_ies
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|update_ft_ies
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|md
argument_list|,
name|ies
argument_list|,
name|ies_len
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_send_ft_action
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
name|action
parameter_list|,
specifier|const
name|u8
modifier|*
name|target_ap
parameter_list|,
specifier|const
name|u8
modifier|*
name|ies
parameter_list|,
name|size_t
name|ies_len
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|send_ft_action
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|send_ft_action
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|action
argument_list|,
name|target_ap
argument_list|,
name|ies
argument_list|,
name|ies_len
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_beacon
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|head
parameter_list|,
name|size_t
name|head_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|tail
parameter_list|,
name|size_t
name|tail_len
parameter_list|,
name|int
name|dtim_period
parameter_list|,
name|int
name|beacon_int
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_beacon
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_beacon
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|head
argument_list|,
name|head_len
argument_list|,
name|tail
argument_list|,
name|tail_len
argument_list|,
name|dtim_period
argument_list|,
name|beacon_int
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_sta_add
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|hostapd_sta_add_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|sta_add
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|sta_add
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_sta_remove
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|sta_remove
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|sta_remove
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_hapd_send_eapol
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|int
name|encrypt
parameter_list|,
specifier|const
name|u8
modifier|*
name|own_addr
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|hapd_send_eapol
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|hapd_send_eapol
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|data
argument_list|,
name|data_len
argument_list|,
name|encrypt
argument_list|,
name|own_addr
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_sta_set_flags
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|total_flags
parameter_list|,
name|int
name|flags_or
parameter_list|,
name|int
name|flags_and
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|sta_set_flags
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|sta_set_flags
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|total_flags
argument_list|,
name|flags_or
argument_list|,
name|flags_and
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_supp_port
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|authorized
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_supp_port
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_supp_port
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|authorized
argument_list|)
return|;
block|}
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_send_action
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|unsigned
name|int
name|freq
parameter_list|,
specifier|const
name|u8
modifier|*
name|dst
parameter_list|,
specifier|const
name|u8
modifier|*
name|src
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|send_action
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|send_action
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|freq
argument_list|,
name|dst
argument_list|,
name|src
argument_list|,
name|bssid
argument_list|,
name|data
argument_list|,
name|data_len
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_if_add
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|enum
name|wpa_driver_if_type
name|type
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|void
modifier|*
name|bss_ctx
parameter_list|,
name|char
modifier|*
name|force_ifname
parameter_list|,
name|u8
modifier|*
name|if_addr
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|if_add
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|if_add
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|type
argument_list|,
name|ifname
argument_list|,
name|addr
argument_list|,
name|bss_ctx
argument_list|,
name|NULL
argument_list|,
name|force_ifname
argument_list|,
name|if_addr
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_if_remove
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|enum
name|wpa_driver_if_type
name|type
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|if_remove
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|if_remove
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|type
argument_list|,
name|ifname
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_remain_on_channel
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|unsigned
name|int
name|freq
parameter_list|,
name|unsigned
name|int
name|duration
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|remain_on_channel
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|remain_on_channel
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|freq
argument_list|,
name|duration
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_cancel_remain_on_channel
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|cancel_remain_on_channel
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|cancel_remain_on_channel
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_probe_req_report
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|report
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|probe_req_report
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|probe_req_report
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|report
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_disable_11b_rates
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|disabled
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|disable_11b_rates
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|disable_11b_rates
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|disabled
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_deinit_ap
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|deinit_ap
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|deinit_ap
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_drv_suspend
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|suspend
condition|)
name|wpa_s
operator|->
name|driver
operator|->
name|suspend
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_drv_resume
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|resume
condition|)
name|wpa_s
operator|->
name|driver
operator|->
name|resume
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_signal_monitor
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|threshold
parameter_list|,
name|int
name|hysteresis
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|signal_monitor
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|signal_monitor
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|threshold
argument_list|,
name|hysteresis
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_ap_wps_ie
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|struct
name|wpabuf
modifier|*
name|beacon
parameter_list|,
specifier|const
name|struct
name|wpabuf
modifier|*
name|proberesp
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|set_ap_wps_ie
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_ap_wps_ie
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|beacon
argument_list|,
name|proberesp
argument_list|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* DRIVER_I_H */
end_comment

end_unit

