begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * wpa_supplicant - Internal driver interface wrappers  * Copyright (c) 2003-2015, Jouni Malinen<j@w1.fi>  *  * This software may be distributed under the terms of the BSD license.  * See README for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|DRIVER_I_H
end_ifndef

begin_define
define|#
directive|define
name|DRIVER_I_H
end_define

begin_include
include|#
directive|include
file|"drivers/driver.h"
end_include

begin_comment
comment|/* driver_ops */
end_comment

begin_function
specifier|static
specifier|inline
name|void
modifier|*
name|wpa_drv_init
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|init2
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|init2
argument_list|(
name|wpa_s
argument_list|,
name|ifname
argument_list|,
name|wpa_s
operator|->
name|global_drv_priv
argument_list|)
return|;
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|init
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|init
argument_list|(
name|wpa_s
argument_list|,
name|ifname
argument_list|)
return|;
block|}
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_drv_deinit
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|deinit
condition|)
name|wpa_s
operator|->
name|driver
operator|->
name|deinit
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_param
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|char
modifier|*
name|param
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_param
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_param
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|param
argument_list|)
return|;
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_countermeasures
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_countermeasures
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_countermeasures
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|enabled
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_authenticate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_auth_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|authenticate
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|authenticate
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_associate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_associate_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|associate
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|associate
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_init_mesh
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|init_mesh
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|init_mesh
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_join_mesh
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_mesh_join_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|join_mesh
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|join_mesh
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_leave_mesh
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|leave_mesh
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|leave_mesh
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_scan
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_scan_params
modifier|*
name|params
parameter_list|)
block|{
ifdef|#
directive|ifdef
name|CONFIG_TESTING_OPTIONS
if|if
condition|(
name|wpa_s
operator|->
name|test_failure
operator|==
name|WPAS_TEST_FAILURE_SCAN_TRIGGER
condition|)
return|return
operator|-
name|EBUSY
return|;
endif|#
directive|endif
comment|/* CONFIG_TESTING_OPTIONS */
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|scan2
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|scan2
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_sched_scan
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_scan_params
modifier|*
name|params
parameter_list|,
name|u32
name|interval
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|sched_scan
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|sched_scan
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|,
name|interval
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_stop_sched_scan
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|stop_sched_scan
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|stop_sched_scan
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|wpa_scan_results
modifier|*
name|wpa_drv_get_scan_results2
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_scan_results2
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_scan_results2
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_bssid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
modifier|*
name|bssid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_bssid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_bssid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|bssid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_ssid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
modifier|*
name|ssid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_ssid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_ssid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|ssid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_key
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|enum
name|wpa_alg
name|alg
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|key_idx
parameter_list|,
name|int
name|set_tx
parameter_list|,
specifier|const
name|u8
modifier|*
name|seq
parameter_list|,
name|size_t
name|seq_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|)
block|{
if|if
condition|(
name|alg
operator|!=
name|WPA_ALG_NONE
condition|)
block|{
if|if
condition|(
name|key_idx
operator|>=
literal|0
operator|&&
name|key_idx
operator|<=
literal|6
condition|)
name|wpa_s
operator|->
name|keys_cleared
operator|&=
operator|~
name|BIT
argument_list|(
name|key_idx
argument_list|)
expr_stmt|;
else|else
name|wpa_s
operator|->
name|keys_cleared
operator|=
literal|0
expr_stmt|;
block|}
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_key
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_key
argument_list|(
name|wpa_s
operator|->
name|ifname
argument_list|,
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|alg
argument_list|,
name|addr
argument_list|,
name|key_idx
argument_list|,
name|set_tx
argument_list|,
name|seq
argument_list|,
name|seq_len
argument_list|,
name|key
argument_list|,
name|key_len
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_sta_deauth
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reason_code
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|sta_deauth
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|sta_deauth
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|wpa_s
operator|->
name|own_addr
argument_list|,
name|addr
argument_list|,
name|reason_code
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_deauthenticate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reason_code
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|deauthenticate
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|deauthenticate
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|reason_code
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_add_pmkid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
specifier|const
name|u8
modifier|*
name|pmkid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|add_pmkid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|add_pmkid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|bssid
argument_list|,
name|pmkid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_remove_pmkid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
specifier|const
name|u8
modifier|*
name|pmkid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|remove_pmkid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|remove_pmkid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|bssid
argument_list|,
name|pmkid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_flush_pmkid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|flush_pmkid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|flush_pmkid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_capa
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_capa
modifier|*
name|capa
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_capa
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_capa
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|capa
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_drv_poll
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|poll
condition|)
block|{
name|wpa_s
operator|->
name|driver
operator|->
name|poll
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
specifier|inline
specifier|const
name|char
modifier|*
name|wpa_drv_get_ifname
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_ifname
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_ifname
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
block|}
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
specifier|const
name|char
modifier|*
name|wpa_driver_get_radio_name
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_radio_name
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_radio_name
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
specifier|const
name|u8
modifier|*
name|wpa_drv_get_mac_addr
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_mac_addr
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_mac_addr
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
block|}
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_operstate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|state
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_operstate
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_operstate
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|state
argument_list|)
return|;
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_mlme_setprotection
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|protect_type
parameter_list|,
name|int
name|key_type
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|mlme_setprotection
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|mlme_setprotection
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|protect_type
argument_list|,
name|key_type
argument_list|)
return|;
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|hostapd_hw_modes
modifier|*
name|wpa_drv_get_hw_feature_data
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u16
modifier|*
name|num_modes
parameter_list|,
name|u16
modifier|*
name|flags
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_hw_feature_data
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_hw_feature_data
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|num_modes
argument_list|,
name|flags
argument_list|)
return|;
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_country
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|char
modifier|*
name|alpha2
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_country
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_country
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|alpha2
argument_list|)
return|;
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_send_mlme
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|int
name|noack
parameter_list|,
name|unsigned
name|int
name|freq
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|send_mlme
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|send_mlme
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|data
argument_list|,
name|data_len
argument_list|,
name|noack
argument_list|,
name|freq
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_update_ft_ies
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|md
parameter_list|,
specifier|const
name|u8
modifier|*
name|ies
parameter_list|,
name|size_t
name|ies_len
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|update_ft_ies
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|update_ft_ies
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|md
argument_list|,
name|ies
argument_list|,
name|ies_len
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_ap
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_ap_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_ap
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_ap
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_sta_add
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|hostapd_sta_add_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|sta_add
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|sta_add
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_sta_remove
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|sta_remove
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|sta_remove
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_hapd_send_eapol
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|int
name|encrypt
parameter_list|,
specifier|const
name|u8
modifier|*
name|own_addr
parameter_list|,
name|u32
name|flags
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|hapd_send_eapol
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|hapd_send_eapol
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|data
argument_list|,
name|data_len
argument_list|,
name|encrypt
argument_list|,
name|own_addr
argument_list|,
name|flags
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_sta_set_flags
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|total_flags
parameter_list|,
name|int
name|flags_or
parameter_list|,
name|int
name|flags_and
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|sta_set_flags
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|sta_set_flags
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|total_flags
argument_list|,
name|flags_or
argument_list|,
name|flags_and
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_supp_port
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|authorized
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_supp_port
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_supp_port
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|authorized
argument_list|)
return|;
block|}
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_send_action
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|unsigned
name|int
name|freq
parameter_list|,
name|unsigned
name|int
name|wait
parameter_list|,
specifier|const
name|u8
modifier|*
name|dst
parameter_list|,
specifier|const
name|u8
modifier|*
name|src
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|int
name|no_cck
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|send_action
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|send_action
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|freq
argument_list|,
name|wait
argument_list|,
name|dst
argument_list|,
name|src
argument_list|,
name|bssid
argument_list|,
name|data
argument_list|,
name|data_len
argument_list|,
name|no_cck
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_drv_send_action_cancel_wait
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|send_action_cancel_wait
condition|)
name|wpa_s
operator|->
name|driver
operator|->
name|send_action_cancel_wait
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_freq
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|hostapd_freq_params
modifier|*
name|freq
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_freq
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_freq
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|freq
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_if_add
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|enum
name|wpa_driver_if_type
name|type
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|void
modifier|*
name|bss_ctx
parameter_list|,
name|char
modifier|*
name|force_ifname
parameter_list|,
name|u8
modifier|*
name|if_addr
parameter_list|,
specifier|const
name|char
modifier|*
name|bridge
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|if_add
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|if_add
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|type
argument_list|,
name|ifname
argument_list|,
name|addr
argument_list|,
name|bss_ctx
argument_list|,
name|NULL
argument_list|,
name|force_ifname
argument_list|,
name|if_addr
argument_list|,
name|bridge
argument_list|,
literal|0
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_if_remove
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|enum
name|wpa_driver_if_type
name|type
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|if_remove
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|if_remove
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|type
argument_list|,
name|ifname
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_remain_on_channel
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|unsigned
name|int
name|freq
parameter_list|,
name|unsigned
name|int
name|duration
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|remain_on_channel
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|remain_on_channel
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|freq
argument_list|,
name|duration
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_cancel_remain_on_channel
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|cancel_remain_on_channel
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|cancel_remain_on_channel
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_probe_req_report
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|report
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|probe_req_report
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|probe_req_report
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|report
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_deinit_ap
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|deinit_ap
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|deinit_ap
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_deinit_p2p_cli
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|deinit_p2p_cli
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|deinit_p2p_cli
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
return|return
literal|0
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_drv_suspend
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|suspend
condition|)
name|wpa_s
operator|->
name|driver
operator|->
name|suspend
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_drv_resume
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|resume
condition|)
name|wpa_s
operator|->
name|driver
operator|->
name|resume
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_signal_monitor
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|threshold
parameter_list|,
name|int
name|hysteresis
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|signal_monitor
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|signal_monitor
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|threshold
argument_list|,
name|hysteresis
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_signal_poll
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_signal_info
modifier|*
name|si
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|signal_poll
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|signal_poll
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|si
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_pktcnt_poll
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|hostap_sta_driver_data
modifier|*
name|sta
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|read_sta_data
condition|)
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|read_sta_data
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|sta
argument_list|,
name|wpa_s
operator|->
name|bssid
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_ap_wps_ie
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|struct
name|wpabuf
modifier|*
name|beacon
parameter_list|,
specifier|const
name|struct
name|wpabuf
modifier|*
name|proberesp
parameter_list|,
specifier|const
name|struct
name|wpabuf
modifier|*
name|assocresp
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|set_ap_wps_ie
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_ap_wps_ie
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|beacon
argument_list|,
name|proberesp
argument_list|,
name|assocresp
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_noa
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|buf_len
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|get_noa
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_noa
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|buf
argument_list|,
name|buf_len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_p2p_powersave
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|legacy_ps
parameter_list|,
name|int
name|opp_ps
parameter_list|,
name|int
name|ctwindow
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|set_p2p_powersave
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_p2p_powersave
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|legacy_ps
argument_list|,
name|opp_ps
argument_list|,
name|ctwindow
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_ampdu
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|ampdu
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|ampdu
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|ampdu
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|ampdu
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_send_tdls_mgmt
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|dst
parameter_list|,
name|u8
name|action_code
parameter_list|,
name|u8
name|dialog_token
parameter_list|,
name|u16
name|status_code
parameter_list|,
name|u32
name|peer_capab
parameter_list|,
name|int
name|initiator
parameter_list|,
specifier|const
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|send_tdls_mgmt
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|send_tdls_mgmt
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|dst
argument_list|,
name|action_code
argument_list|,
name|dialog_token
argument_list|,
name|status_code
argument_list|,
name|peer_capab
argument_list|,
name|initiator
argument_list|,
name|buf
argument_list|,
name|len
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_tdls_oper
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|enum
name|tdls_oper
name|oper
parameter_list|,
specifier|const
name|u8
modifier|*
name|peer
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|tdls_oper
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|tdls_oper
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|oper
argument_list|,
name|peer
argument_list|)
return|;
block|}
end_function

begin_ifdef
ifdef|#
directive|ifdef
name|ANDROID
end_ifdef

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_driver_cmd
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|char
modifier|*
name|cmd
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|buf_len
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|driver_cmd
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|driver_cmd
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|cmd
argument_list|,
name|buf
argument_list|,
name|buf_len
argument_list|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* ANDROID */
end_comment

begin_function
specifier|static
specifier|inline
name|void
name|wpa_drv_set_rekey_info
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|kek
parameter_list|,
name|size_t
name|kek_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|kck
parameter_list|,
name|size_t
name|kck_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|replay_ctr
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|set_rekey_info
condition|)
return|return;
name|wpa_s
operator|->
name|driver
operator|->
name|set_rekey_info
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|kek
argument_list|,
name|kek_len
argument_list|,
name|kck
argument_list|,
name|kck_len
argument_list|,
name|replay_ctr
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_radio_disable
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|disabled
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|radio_disable
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|radio_disable
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|disabled
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_switch_channel
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|csa_settings
modifier|*
name|settings
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|switch_channel
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|switch_channel
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|settings
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_add_ts
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
name|tsid
parameter_list|,
specifier|const
name|u8
modifier|*
name|address
parameter_list|,
name|u8
name|user_priority
parameter_list|,
name|u16
name|admitted_time
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|add_tx_ts
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|add_tx_ts
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|tsid
argument_list|,
name|address
argument_list|,
name|user_priority
argument_list|,
name|admitted_time
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_del_ts
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
name|tid
parameter_list|,
specifier|const
name|u8
modifier|*
name|address
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|del_tx_ts
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|del_tx_ts
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|tid
argument_list|,
name|address
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_tdls_enable_channel_switch
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|u8
name|oper_class
parameter_list|,
specifier|const
name|struct
name|hostapd_freq_params
modifier|*
name|freq_params
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|tdls_enable_channel_switch
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|tdls_enable_channel_switch
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|oper_class
argument_list|,
name|freq_params
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_tdls_disable_channel_switch
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|tdls_disable_channel_switch
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|tdls_disable_channel_switch
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_wnm_oper
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|enum
name|wnm_oper
name|oper
parameter_list|,
specifier|const
name|u8
modifier|*
name|peer
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|u16
modifier|*
name|buf_len
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|wnm_oper
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|wnm_oper
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|oper
argument_list|,
name|peer
argument_list|,
name|buf
argument_list|,
name|buf_len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_status
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|buflen
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|status
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|status
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|buf
argument_list|,
name|buflen
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_qos_map
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|qos_map_set
parameter_list|,
name|u8
name|qos_map_set_len
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|set_qos_map
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_qos_map
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|qos_map_set
argument_list|,
name|qos_map_set_len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_wowlan
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|struct
name|wowlan_triggers
modifier|*
name|triggers
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|set_wowlan
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_wowlan
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|triggers
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_vendor_cmd
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|vendor_id
parameter_list|,
name|int
name|subcmd
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|vendor_cmd
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|vendor_cmd
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|vendor_id
argument_list|,
name|subcmd
argument_list|,
name|data
argument_list|,
name|data_len
argument_list|,
name|buf
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_roaming
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|allowed
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|roaming
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|roaming
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|allowed
argument_list|,
name|bssid
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_mac_addr
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|set_mac_addr
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_mac_addr
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|)
return|;
block|}
end_function

begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_MACSEC
end_ifdef

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_macsec_init
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|macsec_init_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|macsec_init
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|macsec_init
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_macsec_deinit
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|macsec_deinit
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|macsec_deinit
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_enable_protect_frames
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|Boolean
name|enabled
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|enable_protect_frames
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|enable_protect_frames
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|enabled
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_replay_protect
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|Boolean
name|enabled
parameter_list|,
name|u32
name|window
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|set_replay_protect
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_replay_protect
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|enabled
argument_list|,
name|window
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_current_cipher_suite
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|cs
parameter_list|,
name|size_t
name|cs_len
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|set_current_cipher_suite
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_current_cipher_suite
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|cs
argument_list|,
name|cs_len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_enable_controlled_port
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|Boolean
name|enabled
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|enable_controlled_port
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|enable_controlled_port
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|enabled
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_receive_lowest_pn
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|,
name|u32
modifier|*
name|lowest_pn
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|get_receive_lowest_pn
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_receive_lowest_pn
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|,
name|an
argument_list|,
name|lowest_pn
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_transmit_next_pn
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|,
name|u32
modifier|*
name|next_pn
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|get_transmit_next_pn
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_transmit_next_pn
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|,
name|an
argument_list|,
name|next_pn
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_transmit_next_pn
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|,
name|u32
name|next_pn
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|set_transmit_next_pn
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_transmit_next_pn
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|,
name|an
argument_list|,
name|next_pn
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_available_receive_sc
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
modifier|*
name|channel
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|get_available_receive_sc
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_available_receive_sc
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_create_receive_sc
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|,
specifier|const
name|u8
modifier|*
name|sci_addr
parameter_list|,
name|u16
name|sci_port
parameter_list|,
name|unsigned
name|int
name|conf_offset
parameter_list|,
name|int
name|validation
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|create_receive_sc
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|create_receive_sc
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|,
name|sci_addr
argument_list|,
name|sci_port
argument_list|,
name|conf_offset
argument_list|,
name|validation
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_delete_receive_sc
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|delete_receive_sc
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|delete_receive_sc
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_create_receive_sa
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|,
name|u32
name|lowest_pn
parameter_list|,
specifier|const
name|u8
modifier|*
name|sak
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|create_receive_sa
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|create_receive_sa
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|,
name|an
argument_list|,
name|lowest_pn
argument_list|,
name|sak
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_enable_receive_sa
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|enable_receive_sa
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|enable_receive_sa
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|,
name|an
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_disable_receive_sa
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|disable_receive_sa
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|disable_receive_sa
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|,
name|an
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_available_transmit_sc
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
modifier|*
name|channel
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|get_available_transmit_sc
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_available_transmit_sc
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_create_transmit_sc
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|,
specifier|const
name|u8
modifier|*
name|sci_addr
parameter_list|,
name|u16
name|sci_port
parameter_list|,
name|unsigned
name|int
name|conf_offset
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|create_transmit_sc
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|create_transmit_sc
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|,
name|sci_addr
argument_list|,
name|sci_port
argument_list|,
name|conf_offset
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_delete_transmit_sc
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|delete_transmit_sc
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|delete_transmit_sc
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_create_transmit_sa
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|,
name|u32
name|next_pn
parameter_list|,
name|Boolean
name|confidentiality
parameter_list|,
specifier|const
name|u8
modifier|*
name|sak
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|create_transmit_sa
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|create_transmit_sa
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|,
name|an
argument_list|,
name|next_pn
argument_list|,
name|confidentiality
argument_list|,
name|sak
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_enable_transmit_sa
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|enable_transmit_sa
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|enable_transmit_sa
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|,
name|an
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_disable_transmit_sa
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|disable_transmit_sa
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|disable_transmit_sa
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|channel
argument_list|,
name|an
argument_list|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* CONFIG_MACSEC */
end_comment

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_setband
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|enum
name|set_band
name|band
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|set_band
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_band
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|band
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_pref_freq_list
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|enum
name|wpa_driver_if_type
name|if_type
parameter_list|,
name|unsigned
name|int
modifier|*
name|num
parameter_list|,
name|unsigned
name|int
modifier|*
name|freq_list
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|get_pref_freq_list
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_pref_freq_list
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|if_type
argument_list|,
name|num
argument_list|,
name|freq_list
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_prob_oper_freq
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|unsigned
name|int
name|freq
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wpa_s
operator|->
name|driver
operator|->
name|set_prob_oper_freq
condition|)
return|return
literal|0
return|;
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_prob_oper_freq
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|freq
argument_list|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* DRIVER_I_H */
end_comment

end_unit

