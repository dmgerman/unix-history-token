begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * BSS table  * Copyright (c) 2009-2010, Jouni Malinen<j@w1.fi>  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License version 2 as  * published by the Free Software Foundation.  *  * Alternatively, this software may be distributed under the terms of BSD  * license.  *  * See README and COPYING for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|BSS_H
end_ifndef

begin_define
define|#
directive|define
name|BSS_H
end_define

begin_struct_decl
struct_decl|struct
name|wpa_scan_res
struct_decl|;
end_struct_decl

begin_define
define|#
directive|define
name|WPA_BSS_QUAL_INVALID
value|BIT(0)
end_define

begin_define
define|#
directive|define
name|WPA_BSS_NOISE_INVALID
value|BIT(1)
end_define

begin_define
define|#
directive|define
name|WPA_BSS_LEVEL_INVALID
value|BIT(2)
end_define

begin_define
define|#
directive|define
name|WPA_BSS_LEVEL_DBM
value|BIT(3)
end_define

begin_define
define|#
directive|define
name|WPA_BSS_AUTHENTICATED
value|BIT(4)
end_define

begin_define
define|#
directive|define
name|WPA_BSS_ASSOCIATED
value|BIT(5)
end_define

begin_comment
comment|/**  * struct wpa_bss - BSS table  * @list: List entry for struct wpa_supplicant::bss  * @list_id: List entry for struct wpa_supplicant::bss_id  * @id: Unique identifier for this BSS entry  * @scan_miss_count: Number of counts without seeing this BSS  * @flags: information flags about the BSS/IBSS (WPA_BSS_*)  * @last_update_idx: Index of the last scan update  * @bssid: BSSID  * @freq: frequency of the channel in MHz (e.g., 2412 = channel 1)  * @beacon_int: beacon interval in TUs (host byte order)  * @caps: capability information field in host byte order  * @qual: signal quality  * @noise: noise level  * @level: signal level  * @tsf: Timestamp of last Beacon/Probe Response frame  * @last_update: Time of the last update (i.e., Beacon or Probe Response RX)  * @ie_len: length of the following IE field in octets (from Probe Response)  * @beacon_ie_len: length of the following Beacon IE field in octets  *  * This structure is used to store information about neighboring BSSes in  * generic format. It is mainly updated based on scan results from the driver.  */
end_comment

begin_struct
struct|struct
name|wpa_bss
block|{
name|struct
name|dl_list
name|list
decl_stmt|;
name|struct
name|dl_list
name|list_id
decl_stmt|;
name|unsigned
name|int
name|id
decl_stmt|;
name|unsigned
name|int
name|scan_miss_count
decl_stmt|;
name|unsigned
name|int
name|last_update_idx
decl_stmt|;
name|unsigned
name|int
name|flags
decl_stmt|;
name|u8
name|bssid
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|u8
name|ssid
index|[
literal|32
index|]
decl_stmt|;
name|size_t
name|ssid_len
decl_stmt|;
name|int
name|freq
decl_stmt|;
name|u16
name|beacon_int
decl_stmt|;
name|u16
name|caps
decl_stmt|;
name|int
name|qual
decl_stmt|;
name|int
name|noise
decl_stmt|;
name|int
name|level
decl_stmt|;
name|u64
name|tsf
decl_stmt|;
name|struct
name|os_time
name|last_update
decl_stmt|;
name|size_t
name|ie_len
decl_stmt|;
name|size_t
name|beacon_ie_len
decl_stmt|;
comment|/* followed by ie_len octets of IEs */
comment|/* followed by beacon_ie_len octets of IEs */
block|}
struct|;
end_struct

begin_function_decl
name|void
name|wpa_bss_update_start
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_bss_update_scan_res
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_scan_res
modifier|*
name|res
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_bss_update_end
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|scan_info
modifier|*
name|info
parameter_list|,
name|int
name|new_scan
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_bss_init
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_bss_deinit
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpa_bss
modifier|*
name|wpa_bss_get
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
specifier|const
name|u8
modifier|*
name|ssid
parameter_list|,
name|size_t
name|ssid_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpa_bss
modifier|*
name|wpa_bss_get_bssid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpa_bss
modifier|*
name|wpa_bss_get_id
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|unsigned
name|int
name|id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|u8
modifier|*
name|wpa_bss_get_ie
parameter_list|(
specifier|const
name|struct
name|wpa_bss
modifier|*
name|bss
parameter_list|,
name|u8
name|ie
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|u8
modifier|*
name|wpa_bss_get_vendor_ie
parameter_list|(
specifier|const
name|struct
name|wpa_bss
modifier|*
name|bss
parameter_list|,
name|u32
name|vendor_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpabuf
modifier|*
name|wpa_bss_get_vendor_ie_multi
parameter_list|(
specifier|const
name|struct
name|wpa_bss
modifier|*
name|bss
parameter_list|,
name|u32
name|vendor_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_bss_get_max_rate
parameter_list|(
specifier|const
name|struct
name|wpa_bss
modifier|*
name|bss
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_bss_get_bit_rates
parameter_list|(
specifier|const
name|struct
name|wpa_bss
modifier|*
name|bss
parameter_list|,
name|u8
modifier|*
modifier|*
name|rates
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* BSS_H */
end_comment

end_unit

