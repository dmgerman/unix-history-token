begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * P2P - Internal definitions for P2P module  * Copyright (c) 2009-2010, Atheros Communications  *  * This software may be distributed under the terms of the BSD license.  * See README for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|P2P_I_H
end_ifndef

begin_define
define|#
directive|define
name|P2P_I_H
end_define

begin_include
include|#
directive|include
file|"utils/list.h"
end_include

begin_include
include|#
directive|include
file|"p2p.h"
end_include

begin_define
define|#
directive|define
name|P2P_GO_NEG_CNF_MAX_RETRY_COUNT
value|1
end_define

begin_enum_decl
enum_decl|enum
name|p2p_role_indication
enum_decl|;
end_enum_decl

begin_comment
comment|/*  * To force Service Instances to fit within a single P2P Tag, MAX_SVC_ADV_LEN  * must equal 248 or less. Must have a minimum size of 19.  */
end_comment

begin_define
define|#
directive|define
name|MAX_SVC_ADV_LEN
value|600
end_define

begin_define
define|#
directive|define
name|MAX_SVC_ADV_IE_LEN
value|(9 + MAX_SVC_ADV_LEN + (5 * (MAX_SVC_ADV_LEN / 240)))
end_define

begin_enum
enum|enum
name|p2p_go_state
block|{
name|UNKNOWN_GO
block|,
name|LOCAL_GO
block|,
name|REMOTE_GO
block|}
enum|;
end_enum

begin_comment
comment|/**  * struct p2p_device - P2P Device data (internal to P2P module)  */
end_comment

begin_struct
struct|struct
name|p2p_device
block|{
name|struct
name|dl_list
name|list
decl_stmt|;
name|struct
name|os_reltime
name|last_seen
decl_stmt|;
name|int
name|listen_freq
decl_stmt|;
name|int
name|oob_go_neg_freq
decl_stmt|;
name|enum
name|p2p_wps_method
name|wps_method
decl_stmt|;
name|u16
name|oob_pw_id
decl_stmt|;
name|struct
name|p2p_peer_info
name|info
decl_stmt|;
comment|/* 	 * If the peer was discovered based on an interface address (e.g., GO 	 * from Beacon/Probe Response), the interface address is stored here. 	 * p2p_device_addr must still be set in such a case to the unique 	 * identifier for the P2P Device. 	 */
name|u8
name|interface_addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
comment|/* 	 * P2P Device Address of the GO in whose group this P2P Device is a 	 * client. 	 */
name|u8
name|member_in_go_dev
index|[
name|ETH_ALEN
index|]
decl_stmt|;
comment|/* 	 * P2P Interface Address of the GO in whose group this P2P Device is a 	 * client. 	 */
name|u8
name|member_in_go_iface
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|int
name|go_neg_req_sent
decl_stmt|;
name|enum
name|p2p_go_state
name|go_state
decl_stmt|;
name|u8
name|dialog_token
decl_stmt|;
name|u8
name|tie_breaker
decl_stmt|;
name|u8
name|intended_addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|char
name|country
index|[
literal|3
index|]
decl_stmt|;
name|struct
name|p2p_channels
name|channels
decl_stmt|;
name|int
name|oper_freq
decl_stmt|;
name|u8
name|oper_ssid
index|[
literal|32
index|]
decl_stmt|;
name|size_t
name|oper_ssid_len
decl_stmt|;
comment|/** 	 * req_config_methods - Pending provision discovery methods 	 */
name|u16
name|req_config_methods
decl_stmt|;
comment|/** 	 * wps_prov_info - Stored provisioning WPS config method 	 * 	 * This is used to store pending WPS config method between Provisioning 	 * Discovery and connection to a running group. 	 */
name|u16
name|wps_prov_info
decl_stmt|;
define|#
directive|define
name|P2P_DEV_PROBE_REQ_ONLY
value|BIT(0)
define|#
directive|define
name|P2P_DEV_REPORTED
value|BIT(1)
define|#
directive|define
name|P2P_DEV_NOT_YET_READY
value|BIT(2)
define|#
directive|define
name|P2P_DEV_PD_PEER_DISPLAY
value|BIT(5)
define|#
directive|define
name|P2P_DEV_PD_PEER_KEYPAD
value|BIT(6)
define|#
directive|define
name|P2P_DEV_USER_REJECTED
value|BIT(7)
define|#
directive|define
name|P2P_DEV_PEER_WAITING_RESPONSE
value|BIT(8)
define|#
directive|define
name|P2P_DEV_PREFER_PERSISTENT_GROUP
value|BIT(9)
define|#
directive|define
name|P2P_DEV_WAIT_GO_NEG_RESPONSE
value|BIT(10)
define|#
directive|define
name|P2P_DEV_WAIT_GO_NEG_CONFIRM
value|BIT(11)
define|#
directive|define
name|P2P_DEV_GROUP_CLIENT_ONLY
value|BIT(12)
define|#
directive|define
name|P2P_DEV_FORCE_FREQ
value|BIT(13)
define|#
directive|define
name|P2P_DEV_PD_FOR_JOIN
value|BIT(14)
define|#
directive|define
name|P2P_DEV_REPORTED_ONCE
value|BIT(15)
define|#
directive|define
name|P2P_DEV_PREFER_PERSISTENT_RECONN
value|BIT(16)
define|#
directive|define
name|P2P_DEV_PD_BEFORE_GO_NEG
value|BIT(17)
define|#
directive|define
name|P2P_DEV_NO_PREF_CHAN
value|BIT(18)
define|#
directive|define
name|P2P_DEV_WAIT_INV_REQ_ACK
value|BIT(19)
define|#
directive|define
name|P2P_DEV_P2PS_REPORTED
value|BIT(20)
define|#
directive|define
name|P2P_DEV_PD_PEER_P2PS
value|BIT(21)
name|unsigned
name|int
name|flags
decl_stmt|;
name|int
name|status
decl_stmt|;
comment|/* enum p2p_status_code */
name|unsigned
name|int
name|wait_count
decl_stmt|;
name|unsigned
name|int
name|connect_reqs
decl_stmt|;
name|unsigned
name|int
name|invitation_reqs
decl_stmt|;
name|unsigned
name|int
name|sd_reqs
decl_stmt|;
name|u16
name|ext_listen_period
decl_stmt|;
name|u16
name|ext_listen_interval
decl_stmt|;
name|u8
name|go_timeout
decl_stmt|;
name|u8
name|client_timeout
decl_stmt|;
comment|/** 	 * go_neg_conf_sent - Number of GO Negotiation Confirmation retries 	 */
name|u8
name|go_neg_conf_sent
decl_stmt|;
comment|/** 	 * freq - Frquency on which the GO Negotiation Confirmation is sent 	 */
name|int
name|go_neg_conf_freq
decl_stmt|;
comment|/** 	 * go_neg_conf - GO Negotiation Confirmation frame 	 */
name|struct
name|wpabuf
modifier|*
name|go_neg_conf
decl_stmt|;
name|int
name|sd_pending_bcast_queries
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|p2p_sd_query
block|{
name|struct
name|p2p_sd_query
modifier|*
name|next
decl_stmt|;
name|u8
name|peer
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|int
name|for_all_peers
decl_stmt|;
name|int
name|wsd
decl_stmt|;
comment|/* Wi-Fi Display Service Discovery Request */
name|struct
name|wpabuf
modifier|*
name|tlvs
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|p2p_pending_action_tx
block|{
name|unsigned
name|int
name|freq
decl_stmt|;
name|u8
name|dst
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|u8
name|src
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|u8
name|bssid
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|size_t
name|len
decl_stmt|;
name|unsigned
name|int
name|wait_time
decl_stmt|;
comment|/* Followed by len octets of the frame */
block|}
struct|;
end_struct

begin_comment
comment|/**  * struct p2p_data - P2P module data (internal to P2P module)  */
end_comment

begin_struct
struct|struct
name|p2p_data
block|{
comment|/** 	 * cfg - P2P module configuration 	 * 	 * This is included in the same memory allocation with the 	 * struct p2p_data and as such, must not be freed separately. 	 */
name|struct
name|p2p_config
modifier|*
name|cfg
decl_stmt|;
comment|/** 	 * state - The current P2P state 	 */
enum|enum
name|p2p_state
block|{
comment|/** 		 * P2P_IDLE - Idle 		 */
name|P2P_IDLE
block|,
comment|/** 		 * P2P_SEARCH - Search (Device Discovery) 		 */
name|P2P_SEARCH
block|,
comment|/** 		 * P2P_CONNECT - Trying to start GO Negotiation 		 */
name|P2P_CONNECT
block|,
comment|/** 		 * P2P_CONNECT_LISTEN - Listen during GO Negotiation start 		 */
name|P2P_CONNECT_LISTEN
block|,
comment|/** 		 * P2P_GO_NEG - In GO Negotiation 		 */
name|P2P_GO_NEG
block|,
comment|/** 		 * P2P_LISTEN_ONLY - Listen only 		 */
name|P2P_LISTEN_ONLY
block|,
comment|/** 		 * P2P_WAIT_PEER_CONNECT - Waiting peer in List for GO Neg 		 */
name|P2P_WAIT_PEER_CONNECT
block|,
comment|/** 		 * P2P_WAIT_PEER_IDLE - Waiting peer idle for GO Neg 		 */
name|P2P_WAIT_PEER_IDLE
block|,
comment|/** 		 * P2P_SD_DURING_FIND - Service Discovery during find 		 */
name|P2P_SD_DURING_FIND
block|,
comment|/** 		 * P2P_PROVISIONING - Provisioning (during group formation) 		 */
name|P2P_PROVISIONING
block|,
comment|/** 		 * P2P_PD_DURING_FIND - Provision Discovery during find 		 */
name|P2P_PD_DURING_FIND
block|,
comment|/** 		 * P2P_INVITE - Trying to start Invite 		 */
name|P2P_INVITE
block|,
comment|/** 		 * P2P_INVITE_LISTEN - Listen during Invite 		 */
name|P2P_INVITE_LISTEN
block|, 	}
name|state
enum|;
comment|/** 	 * min_disc_int - minDiscoverableInterval 	 */
name|int
name|min_disc_int
decl_stmt|;
comment|/** 	 * max_disc_int - maxDiscoverableInterval 	 */
name|int
name|max_disc_int
decl_stmt|;
comment|/** 	 * max_disc_tu - Maximum number of TUs for discoverable interval 	 */
name|int
name|max_disc_tu
decl_stmt|;
comment|/** 	 * devices - List of known P2P Device peers 	 */
name|struct
name|dl_list
name|devices
decl_stmt|;
comment|/** 	 * go_neg_peer - Pointer to GO Negotiation peer 	 */
name|struct
name|p2p_device
modifier|*
name|go_neg_peer
decl_stmt|;
comment|/** 	 * invite_peer - Pointer to Invite peer 	 */
name|struct
name|p2p_device
modifier|*
name|invite_peer
decl_stmt|;
comment|/** 	 * last_p2p_find_oper - Pointer to last pre-find operation peer 	 */
name|struct
name|p2p_device
modifier|*
name|last_p2p_find_oper
decl_stmt|;
specifier|const
name|u8
modifier|*
name|invite_go_dev_addr
decl_stmt|;
name|u8
name|invite_go_dev_addr_buf
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|int
name|invite_dev_pw_id
decl_stmt|;
name|unsigned
name|int
name|retry_invite_req
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|retry_invite_req_sent
range|:
literal|1
decl_stmt|;
comment|/** 	 * sd_peer - Pointer to Service Discovery peer 	 */
name|struct
name|p2p_device
modifier|*
name|sd_peer
decl_stmt|;
comment|/** 	 * sd_query - Pointer to Service Discovery query 	 */
name|struct
name|p2p_sd_query
modifier|*
name|sd_query
decl_stmt|;
comment|/** 	 * num_p2p_sd_queries - Total number of broadcast SD queries present in 	 * the list 	 */
name|int
name|num_p2p_sd_queries
decl_stmt|;
comment|/* GO Negotiation data */
comment|/** 	 * intended_addr - Local Intended P2P Interface Address 	 * 	 * This address is used during group owner negotiation as the Intended 	 * P2P Interface Address and the group interface will be created with 	 * address as the local address in case of successfully completed 	 * negotiation. 	 */
name|u8
name|intended_addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
comment|/** 	 * go_intent - Local GO Intent to be used during GO Negotiation 	 */
name|u8
name|go_intent
decl_stmt|;
comment|/** 	 * next_tie_breaker - Next tie-breaker value to use in GO Negotiation 	 */
name|u8
name|next_tie_breaker
decl_stmt|;
comment|/** 	 * ssid - Selected SSID for GO Negotiation (if local end will be GO) 	 */
name|u8
name|ssid
index|[
literal|32
index|]
decl_stmt|;
comment|/** 	 * ssid_len - ssid length in octets 	 */
name|size_t
name|ssid_len
decl_stmt|;
comment|/** 	 * ssid_set - Whether SSID is already set for GO Negotiation 	 */
name|int
name|ssid_set
decl_stmt|;
comment|/** 	 * Regulatory class for own operational channel 	 */
name|u8
name|op_reg_class
decl_stmt|;
comment|/** 	 * op_channel - Own operational channel 	 */
name|u8
name|op_channel
decl_stmt|;
comment|/** 	 * channels - Own supported regulatory classes and channels 	 * 	 * List of supposerted channels per regulatory class. The regulatory 	 * classes are defined in IEEE Std 802.11-2007 Annex J and the 	 * numbering of the clases depends on the configured country code. 	 */
name|struct
name|p2p_channels
name|channels
decl_stmt|;
name|struct
name|wpa_freq_range_list
name|no_go_freq
decl_stmt|;
enum|enum
name|p2p_pending_action_state
block|{
name|P2P_NO_PENDING_ACTION
block|,
name|P2P_PENDING_GO_NEG_REQUEST
block|,
name|P2P_PENDING_GO_NEG_RESPONSE
block|,
name|P2P_PENDING_GO_NEG_RESPONSE_FAILURE
block|,
name|P2P_PENDING_GO_NEG_CONFIRM
block|,
name|P2P_PENDING_SD
block|,
name|P2P_PENDING_PD
block|,
name|P2P_PENDING_PD_RESPONSE
block|,
name|P2P_PENDING_INVITATION_REQUEST
block|,
name|P2P_PENDING_INVITATION_RESPONSE
block|,
name|P2P_PENDING_DEV_DISC_REQUEST
block|,
name|P2P_PENDING_DEV_DISC_RESPONSE
block|,
name|P2P_PENDING_GO_DISC_REQ
block|}
name|pending_action_state
enum|;
name|unsigned
name|int
name|pending_listen_freq
decl_stmt|;
name|unsigned
name|int
name|pending_listen_sec
decl_stmt|;
name|unsigned
name|int
name|pending_listen_usec
decl_stmt|;
name|u8
name|dev_capab
decl_stmt|;
name|int
name|in_listen
decl_stmt|;
name|int
name|drv_in_listen
decl_stmt|;
comment|/** 	 * sd_queries - Pending service discovery queries 	 */
name|struct
name|p2p_sd_query
modifier|*
name|sd_queries
decl_stmt|;
comment|/** 	 * srv_update_indic - Service Update Indicator for local services 	 */
name|u16
name|srv_update_indic
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|sd_resp
decl_stmt|;
comment|/* Fragmented SD response */
name|u8
name|sd_resp_addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|u8
name|sd_resp_dialog_token
decl_stmt|;
name|size_t
name|sd_resp_pos
decl_stmt|;
comment|/* Offset in sd_resp */
name|u8
name|sd_frag_id
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|sd_rx_resp
decl_stmt|;
comment|/* Reassembled SD response */
name|u16
name|sd_rx_update_indic
decl_stmt|;
comment|/* P2P Invitation data */
name|enum
name|p2p_invite_role
name|inv_role
decl_stmt|;
name|u8
name|inv_bssid
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|int
name|inv_bssid_set
decl_stmt|;
name|u8
name|inv_ssid
index|[
literal|32
index|]
decl_stmt|;
name|size_t
name|inv_ssid_len
decl_stmt|;
name|u8
name|inv_sa
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|u8
name|inv_group_bssid
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|u8
modifier|*
name|inv_group_bssid_ptr
decl_stmt|;
name|u8
name|inv_go_dev_addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|u8
name|inv_status
decl_stmt|;
name|int
name|inv_op_freq
decl_stmt|;
name|int
name|inv_persistent
decl_stmt|;
name|enum
name|p2p_discovery_type
name|find_type
decl_stmt|;
name|unsigned
name|int
name|last_p2p_find_timeout
decl_stmt|;
name|u8
name|last_prog_scan_class
decl_stmt|;
name|u8
name|last_prog_scan_chan
decl_stmt|;
name|int
name|p2p_scan_running
decl_stmt|;
enum|enum
name|p2p_after_scan
block|{
name|P2P_AFTER_SCAN_NOTHING
block|,
name|P2P_AFTER_SCAN_LISTEN
block|,
name|P2P_AFTER_SCAN_CONNECT
block|}
name|start_after_scan
enum|;
name|u8
name|after_scan_peer
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|struct
name|p2p_pending_action_tx
modifier|*
name|after_scan_tx
decl_stmt|;
name|unsigned
name|int
name|after_scan_tx_in_progress
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|send_action_in_progress
range|:
literal|1
decl_stmt|;
comment|/* Requested device types for find/search */
name|unsigned
name|int
name|num_req_dev_types
decl_stmt|;
name|u8
modifier|*
name|req_dev_types
decl_stmt|;
name|u8
modifier|*
name|find_dev_id
decl_stmt|;
name|u8
name|find_dev_id_buf
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|struct
name|os_reltime
name|find_start
decl_stmt|;
comment|/* time of last p2p_find start */
name|struct
name|p2p_group
modifier|*
modifier|*
name|groups
decl_stmt|;
name|size_t
name|num_groups
decl_stmt|;
name|struct
name|p2p_device
modifier|*
name|pending_client_disc_go
decl_stmt|;
name|u8
name|pending_client_disc_addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|u8
name|pending_dev_disc_dialog_token
decl_stmt|;
name|u8
name|pending_dev_disc_addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|int
name|pending_dev_disc_freq
decl_stmt|;
name|unsigned
name|int
name|pending_client_disc_freq
decl_stmt|;
name|int
name|ext_listen_only
decl_stmt|;
name|unsigned
name|int
name|ext_listen_period
decl_stmt|;
name|unsigned
name|int
name|ext_listen_interval
decl_stmt|;
name|unsigned
name|int
name|ext_listen_interval_sec
decl_stmt|;
name|unsigned
name|int
name|ext_listen_interval_usec
decl_stmt|;
name|u8
name|peer_filter
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|int
name|cross_connect
decl_stmt|;
name|int
name|best_freq_24
decl_stmt|;
name|int
name|best_freq_5
decl_stmt|;
name|int
name|best_freq_overall
decl_stmt|;
name|int
name|own_freq_preference
decl_stmt|;
comment|/** 	 * wps_vendor_ext - WPS Vendor Extensions to add 	 */
name|struct
name|wpabuf
modifier|*
name|wps_vendor_ext
index|[
name|P2P_MAX_WPS_VENDOR_EXT
index|]
decl_stmt|;
comment|/* 	 * user_initiated_pd - Whether a PD request is user initiated or not. 	 */
name|u8
name|user_initiated_pd
decl_stmt|;
comment|/* 	 * Keep track of which peer a given PD request was sent to. 	 * Used to raise a timeout alert in case there is no response. 	 */
name|u8
name|pending_pd_devaddr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
comment|/* 	 * Retry counter for provision discovery requests when issued 	 * in IDLE state. 	 */
name|int
name|pd_retries
decl_stmt|;
comment|/** 	 * pd_force_freq - Forced frequency for PD retries or 0 to auto-select 	 * 	 * This is is used during PD retries for join-a-group case to use the 	 * correct operating frequency determined from a BSS entry for the GO. 	 */
name|int
name|pd_force_freq
decl_stmt|;
name|u8
name|go_timeout
decl_stmt|;
name|u8
name|client_timeout
decl_stmt|;
comment|/* Extra delay in milliseconds between search iterations */
name|unsigned
name|int
name|search_delay
decl_stmt|;
name|int
name|in_search_delay
decl_stmt|;
name|u8
name|pending_reg_class
decl_stmt|;
name|u8
name|pending_channel
decl_stmt|;
name|u8
name|pending_channel_forced
decl_stmt|;
comment|/* ASP Support */
name|struct
name|p2ps_advertisement
modifier|*
name|p2ps_adv_list
decl_stmt|;
name|struct
name|p2ps_provision
modifier|*
name|p2ps_prov
decl_stmt|;
name|u8
name|wild_card_hash
index|[
name|P2PS_HASH_LEN
index|]
decl_stmt|;
name|u8
name|query_hash
index|[
name|P2P_MAX_QUERY_HASH
operator|*
name|P2PS_HASH_LEN
index|]
decl_stmt|;
name|u8
name|query_count
decl_stmt|;
name|u8
name|p2ps_seek
decl_stmt|;
name|u8
name|p2ps_seek_count
decl_stmt|;
name|u8
name|p2ps_svc_found
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_WIFI_DISPLAY
name|struct
name|wpabuf
modifier|*
name|wfd_ie_beacon
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|wfd_ie_probe_req
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|wfd_ie_probe_resp
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|wfd_ie_assoc_req
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|wfd_ie_invitation
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|wfd_ie_prov_disc_req
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|wfd_ie_prov_disc_resp
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|wfd_ie_go_neg
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|wfd_dev_info
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|wfd_assoc_bssid
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|wfd_coupled_sink_info
decl_stmt|;
endif|#
directive|endif
comment|/* CONFIG_WIFI_DISPLAY */
name|u16
name|authorized_oob_dev_pw_id
decl_stmt|;
name|struct
name|wpabuf
modifier|*
modifier|*
name|vendor_elem
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/**  * struct p2p_message - Parsed P2P message (or P2P IE)  */
end_comment

begin_struct
struct|struct
name|p2p_message
block|{
name|struct
name|wpabuf
modifier|*
name|p2p_attributes
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|wps_attributes
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|wfd_subelems
decl_stmt|;
name|u8
name|dialog_token
decl_stmt|;
specifier|const
name|u8
modifier|*
name|capability
decl_stmt|;
specifier|const
name|u8
modifier|*
name|go_intent
decl_stmt|;
specifier|const
name|u8
modifier|*
name|status
decl_stmt|;
specifier|const
name|u8
modifier|*
name|listen_channel
decl_stmt|;
specifier|const
name|u8
modifier|*
name|operating_channel
decl_stmt|;
specifier|const
name|u8
modifier|*
name|channel_list
decl_stmt|;
name|u8
name|channel_list_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|config_timeout
decl_stmt|;
specifier|const
name|u8
modifier|*
name|intended_addr
decl_stmt|;
specifier|const
name|u8
modifier|*
name|group_bssid
decl_stmt|;
specifier|const
name|u8
modifier|*
name|invitation_flags
decl_stmt|;
specifier|const
name|u8
modifier|*
name|group_info
decl_stmt|;
name|size_t
name|group_info_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|group_id
decl_stmt|;
name|size_t
name|group_id_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|device_id
decl_stmt|;
specifier|const
name|u8
modifier|*
name|manageability
decl_stmt|;
specifier|const
name|u8
modifier|*
name|noa
decl_stmt|;
name|size_t
name|noa_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|ext_listen_timing
decl_stmt|;
specifier|const
name|u8
modifier|*
name|minor_reason_code
decl_stmt|;
specifier|const
name|u8
modifier|*
name|oob_go_neg_channel
decl_stmt|;
comment|/* P2P Device Info */
specifier|const
name|u8
modifier|*
name|p2p_device_info
decl_stmt|;
name|size_t
name|p2p_device_info_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|p2p_device_addr
decl_stmt|;
specifier|const
name|u8
modifier|*
name|pri_dev_type
decl_stmt|;
name|u8
name|num_sec_dev_types
decl_stmt|;
name|char
name|device_name
index|[
literal|33
index|]
decl_stmt|;
name|u16
name|config_methods
decl_stmt|;
comment|/* WPS IE */
name|u16
name|dev_password_id
decl_stmt|;
name|int
name|dev_password_id_present
decl_stmt|;
name|u16
name|wps_config_methods
decl_stmt|;
specifier|const
name|u8
modifier|*
name|wps_pri_dev_type
decl_stmt|;
specifier|const
name|u8
modifier|*
name|wps_sec_dev_type_list
decl_stmt|;
name|size_t
name|wps_sec_dev_type_list_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|wps_vendor_ext
index|[
name|P2P_MAX_WPS_VENDOR_EXT
index|]
decl_stmt|;
name|size_t
name|wps_vendor_ext_len
index|[
name|P2P_MAX_WPS_VENDOR_EXT
index|]
decl_stmt|;
specifier|const
name|u8
modifier|*
name|manufacturer
decl_stmt|;
name|size_t
name|manufacturer_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|model_name
decl_stmt|;
name|size_t
name|model_name_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|model_number
decl_stmt|;
name|size_t
name|model_number_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|serial_number
decl_stmt|;
name|size_t
name|serial_number_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|oob_dev_password
decl_stmt|;
name|size_t
name|oob_dev_password_len
decl_stmt|;
comment|/* DS Parameter Set IE */
specifier|const
name|u8
modifier|*
name|ds_params
decl_stmt|;
comment|/* SSID IE */
specifier|const
name|u8
modifier|*
name|ssid
decl_stmt|;
comment|/* P2PS */
name|u8
name|service_hash_count
decl_stmt|;
specifier|const
name|u8
modifier|*
name|service_hash
decl_stmt|;
specifier|const
name|u8
modifier|*
name|session_info
decl_stmt|;
name|size_t
name|session_info_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|conn_cap
decl_stmt|;
specifier|const
name|u8
modifier|*
name|adv_id
decl_stmt|;
specifier|const
name|u8
modifier|*
name|adv_mac
decl_stmt|;
specifier|const
name|u8
modifier|*
name|adv_service_instance
decl_stmt|;
name|size_t
name|adv_service_instance_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|session_id
decl_stmt|;
specifier|const
name|u8
modifier|*
name|session_mac
decl_stmt|;
specifier|const
name|u8
modifier|*
name|feature_cap
decl_stmt|;
name|size_t
name|feature_cap_len
decl_stmt|;
specifier|const
name|u8
modifier|*
name|persistent_dev
decl_stmt|;
specifier|const
name|u8
modifier|*
name|persistent_ssid
decl_stmt|;
name|size_t
name|persistent_ssid_len
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|P2P_MAX_GROUP_ENTRIES
value|50
end_define

begin_struct
struct|struct
name|p2p_group_info
block|{
name|unsigned
name|int
name|num_clients
decl_stmt|;
struct|struct
name|p2p_client_info
block|{
specifier|const
name|u8
modifier|*
name|p2p_device_addr
decl_stmt|;
specifier|const
name|u8
modifier|*
name|p2p_interface_addr
decl_stmt|;
name|u8
name|dev_capab
decl_stmt|;
name|u16
name|config_methods
decl_stmt|;
specifier|const
name|u8
modifier|*
name|pri_dev_type
decl_stmt|;
name|u8
name|num_sec_dev_types
decl_stmt|;
specifier|const
name|u8
modifier|*
name|sec_dev_types
decl_stmt|;
specifier|const
name|char
modifier|*
name|dev_name
decl_stmt|;
name|size_t
name|dev_name_len
decl_stmt|;
block|}
name|client
index|[
name|P2P_MAX_GROUP_ENTRIES
index|]
struct|;
block|}
struct|;
end_struct

begin_comment
comment|/* p2p_utils.c */
end_comment

begin_function_decl
name|int
name|p2p_random
parameter_list|(
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_channel_to_freq
parameter_list|(
name|int
name|op_class
parameter_list|,
name|int
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_freq_to_channel
parameter_list|(
name|unsigned
name|int
name|freq
parameter_list|,
name|u8
modifier|*
name|op_class
parameter_list|,
name|u8
modifier|*
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_channels_intersect
parameter_list|(
specifier|const
name|struct
name|p2p_channels
modifier|*
name|a
parameter_list|,
specifier|const
name|struct
name|p2p_channels
modifier|*
name|b
parameter_list|,
name|struct
name|p2p_channels
modifier|*
name|res
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_channels_union_inplace
parameter_list|(
name|struct
name|p2p_channels
modifier|*
name|res
parameter_list|,
specifier|const
name|struct
name|p2p_channels
modifier|*
name|b
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_channels_union
parameter_list|(
specifier|const
name|struct
name|p2p_channels
modifier|*
name|a
parameter_list|,
specifier|const
name|struct
name|p2p_channels
modifier|*
name|b
parameter_list|,
name|struct
name|p2p_channels
modifier|*
name|res
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_channels_remove_freqs
parameter_list|(
name|struct
name|p2p_channels
modifier|*
name|chan
parameter_list|,
specifier|const
name|struct
name|wpa_freq_range_list
modifier|*
name|list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_channels_includes
parameter_list|(
specifier|const
name|struct
name|p2p_channels
modifier|*
name|channels
parameter_list|,
name|u8
name|reg_class
parameter_list|,
name|u8
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_channels_dump
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|char
modifier|*
name|title
parameter_list|,
specifier|const
name|struct
name|p2p_channels
modifier|*
name|chan
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_channel_select
parameter_list|(
name|struct
name|p2p_channels
modifier|*
name|chans
parameter_list|,
specifier|const
name|int
modifier|*
name|classes
parameter_list|,
name|u8
modifier|*
name|op_class
parameter_list|,
name|u8
modifier|*
name|op_channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_channel_random_social
parameter_list|(
name|struct
name|p2p_channels
modifier|*
name|chans
parameter_list|,
name|u8
modifier|*
name|op_class
parameter_list|,
name|u8
modifier|*
name|op_channel
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* p2p_parse.c */
end_comment

begin_function_decl
name|int
name|p2p_parse_p2p_ie
parameter_list|(
specifier|const
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|struct
name|p2p_message
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_parse_ies
parameter_list|(
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|,
name|struct
name|p2p_message
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_parse
parameter_list|(
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|,
name|struct
name|p2p_message
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_parse_ies_separate
parameter_list|(
specifier|const
name|u8
modifier|*
name|wsc
parameter_list|,
name|size_t
name|wsc_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|p2p
parameter_list|,
name|size_t
name|p2p_len
parameter_list|,
name|struct
name|p2p_message
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_parse_free
parameter_list|(
name|struct
name|p2p_message
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_attr_text
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|data
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|char
modifier|*
name|end
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_group_info_parse
parameter_list|(
specifier|const
name|u8
modifier|*
name|gi
parameter_list|,
name|size_t
name|gi_len
parameter_list|,
name|struct
name|p2p_group_info
modifier|*
name|info
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* p2p_build.c */
end_comment

begin_struct
struct|struct
name|p2p_noa_desc
block|{
name|u8
name|count_type
decl_stmt|;
name|u32
name|duration
decl_stmt|;
name|u32
name|interval
decl_stmt|;
name|u32
name|start_time
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* p2p_group.c */
end_comment

begin_function_decl
specifier|const
name|u8
modifier|*
name|p2p_group_get_interface_addr
parameter_list|(
name|struct
name|p2p_group
modifier|*
name|group
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
name|p2p_group_presence_req
parameter_list|(
name|struct
name|p2p_group
modifier|*
name|group
parameter_list|,
specifier|const
name|u8
modifier|*
name|client_interface_addr
parameter_list|,
specifier|const
name|u8
modifier|*
name|noa
parameter_list|,
name|size_t
name|noa_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_group_is_group_id_match
parameter_list|(
name|struct
name|p2p_group
modifier|*
name|group
parameter_list|,
specifier|const
name|u8
modifier|*
name|group_id
parameter_list|,
name|size_t
name|group_id_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_group_update_ies
parameter_list|(
name|struct
name|p2p_group
modifier|*
name|group
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_group_force_beacon_update_ies
parameter_list|(
name|struct
name|p2p_group
modifier|*
name|group
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpabuf
modifier|*
name|p2p_group_get_wfd_ie
parameter_list|(
name|struct
name|p2p_group
modifier|*
name|g
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_group_info
parameter_list|(
name|struct
name|p2p_group
modifier|*
name|group
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|int
name|max_clients
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_group_buf_add_id
parameter_list|(
name|struct
name|p2p_group
modifier|*
name|group
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_group_get_freq
parameter_list|(
name|struct
name|p2p_group
modifier|*
name|group
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_action_hdr
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u8
name|subtype
parameter_list|,
name|u8
name|dialog_token
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_public_action_hdr
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u8
name|subtype
parameter_list|,
name|u8
name|dialog_token
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
modifier|*
name|p2p_buf_add_ie_hdr
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_status
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u8
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_device_info
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|p2p_device
modifier|*
name|peer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_device_id
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
specifier|const
name|u8
modifier|*
name|dev_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_update_ie_hdr
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u8
modifier|*
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_capability
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u8
name|dev_capab
parameter_list|,
name|u8
name|group_capab
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_go_intent
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u8
name|go_intent
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_listen_channel
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
specifier|const
name|char
modifier|*
name|country
parameter_list|,
name|u8
name|reg_class
parameter_list|,
name|u8
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_operating_channel
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
specifier|const
name|char
modifier|*
name|country
parameter_list|,
name|u8
name|reg_class
parameter_list|,
name|u8
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_channel_list
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
specifier|const
name|char
modifier|*
name|country
parameter_list|,
name|struct
name|p2p_channels
modifier|*
name|chan
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_config_timeout
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u8
name|go_timeout
parameter_list|,
name|u8
name|client_timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_intended_addr
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
specifier|const
name|u8
modifier|*
name|interface_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_group_bssid
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_group_id
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
specifier|const
name|u8
modifier|*
name|dev_addr
parameter_list|,
specifier|const
name|u8
modifier|*
name|ssid
parameter_list|,
name|size_t
name|ssid_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_invitation_flags
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u8
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_noa
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u8
name|noa_index
parameter_list|,
name|u8
name|opp_ps
parameter_list|,
name|u8
name|ctwindow
parameter_list|,
name|struct
name|p2p_noa_desc
modifier|*
name|desc1
parameter_list|,
name|struct
name|p2p_noa_desc
modifier|*
name|desc2
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_ext_listen_timing
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u16
name|period
parameter_list|,
name|u16
name|interval
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_p2p_interface
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_oob_go_neg_channel
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
specifier|const
name|char
modifier|*
name|country
parameter_list|,
name|u8
name|oper_class
parameter_list|,
name|u8
name|channel
parameter_list|,
name|enum
name|p2p_role_indication
name|role
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_service_hash
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_session_info
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
specifier|const
name|char
modifier|*
name|info
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_connection_capability
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u8
name|connection_cap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_advertisement_id
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u32
name|id
parameter_list|,
specifier|const
name|u8
modifier|*
name|mac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_service_instance
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|u8
name|count
parameter_list|,
specifier|const
name|u8
modifier|*
name|hash
parameter_list|,
name|struct
name|p2ps_advertisement
modifier|*
name|adv_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_session_id
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u32
name|id
parameter_list|,
specifier|const
name|u8
modifier|*
name|mac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_feature_capability
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|u16
name|len
parameter_list|,
specifier|const
name|u8
modifier|*
name|mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_buf_add_persistent_group_info
parameter_list|(
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
specifier|const
name|u8
modifier|*
name|dev_addr
parameter_list|,
specifier|const
name|u8
modifier|*
name|ssid
parameter_list|,
name|size_t
name|ssid_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_build_wps_ie
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|,
name|int
name|pw_id
parameter_list|,
name|int
name|all_attr
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* p2p_sd.c */
end_comment

begin_function_decl
name|struct
name|p2p_sd_query
modifier|*
name|p2p_pending_sd_req
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|p2p_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_free_sd_queries
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_rx_gas_initial_req
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|rx_freq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_rx_gas_initial_resp
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|rx_freq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_rx_gas_comeback_req
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|rx_freq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_rx_gas_comeback_resp
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|rx_freq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_start_sd
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|p2p_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* p2p_go_neg.c */
end_comment

begin_function_decl
name|int
name|p2p_peer_channels_check
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|p2p_channels
modifier|*
name|own
parameter_list|,
name|struct
name|p2p_device
modifier|*
name|dev
parameter_list|,
specifier|const
name|u8
modifier|*
name|channel_list
parameter_list|,
name|size_t
name|channel_list_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_process_go_neg_req
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|rx_freq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_process_go_neg_resp
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|rx_freq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_process_go_neg_conf
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_connect_send
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|p2p_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u16
name|p2p_wps_method_pw_id
parameter_list|(
name|enum
name|p2p_wps_method
name|wps_method
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_reselect_channel
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|p2p_channels
modifier|*
name|intersection
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* p2p_pd.c */
end_comment

begin_function_decl
name|void
name|p2p_process_prov_disc_req
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|rx_freq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_process_prov_disc_resp
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_send_prov_disc_req
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|p2p_device
modifier|*
name|dev
parameter_list|,
name|int
name|join
parameter_list|,
name|int
name|force_freq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_reset_pending_pd
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* p2p_invitation.c */
end_comment

begin_function_decl
name|void
name|p2p_process_invitation_req
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|rx_freq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_process_invitation_resp
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_invite_send
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|p2p_device
modifier|*
name|dev
parameter_list|,
specifier|const
name|u8
modifier|*
name|go_dev_addr
parameter_list|,
name|int
name|dev_pw_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_invitation_req_cb
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|int
name|success
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_invitation_resp_cb
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|int
name|success
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* p2p_dev_disc.c */
end_comment

begin_function_decl
name|void
name|p2p_process_dev_disc_req
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|rx_freq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_dev_disc_req_cb
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|int
name|success
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_send_dev_disc_req
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|p2p_device
modifier|*
name|dev
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_dev_disc_resp_cb
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|int
name|success
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_process_dev_disc_resp
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_go_disc_req_cb
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|int
name|success
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_process_go_disc_req
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|da
parameter_list|,
specifier|const
name|u8
modifier|*
name|sa
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|rx_freq
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* p2p.c */
end_comment

begin_function_decl
name|void
name|p2p_set_state
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|int
name|new_state
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_set_timeout
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|unsigned
name|int
name|sec
parameter_list|,
name|unsigned
name|int
name|usec
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_clear_timeout
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_continue_find
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|p2p_device
modifier|*
name|p2p_add_dev_from_go_neg_req
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|struct
name|p2p_message
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_add_dev_info
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|struct
name|p2p_device
modifier|*
name|dev
parameter_list|,
name|struct
name|p2p_message
modifier|*
name|msg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_add_device
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|freq
parameter_list|,
name|struct
name|os_reltime
modifier|*
name|rx_time
parameter_list|,
name|int
name|level
parameter_list|,
specifier|const
name|u8
modifier|*
name|ies
parameter_list|,
name|size_t
name|ies_len
parameter_list|,
name|int
name|scan_res
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|p2p_device
modifier|*
name|p2p_get_device
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|p2p_device
modifier|*
name|p2p_get_device_interface
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_go_neg_failed
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|int
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_go_complete
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|p2p_device
modifier|*
name|peer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_match_dev_type
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|wps
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|dev_type_list_match
parameter_list|(
specifier|const
name|u8
modifier|*
name|dev_type
parameter_list|,
specifier|const
name|u8
modifier|*
name|req_dev_type
index|[]
parameter_list|,
name|size_t
name|num_req_dev_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpabuf
modifier|*
name|p2p_build_probe_resp_ies
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_build_ssid
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|u8
modifier|*
name|ssid
parameter_list|,
name|size_t
modifier|*
name|ssid_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_send_action
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|unsigned
name|int
name|freq
parameter_list|,
specifier|const
name|u8
modifier|*
name|dst
parameter_list|,
specifier|const
name|u8
modifier|*
name|src
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
specifier|const
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|,
name|unsigned
name|int
name|wait_time
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_stop_listen_for_freq
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|int
name|freq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_prepare_channel
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|p2p_device
modifier|*
name|dev
parameter_list|,
name|unsigned
name|int
name|force_freq
parameter_list|,
name|unsigned
name|int
name|pref_freq
parameter_list|,
name|int
name|go
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_go_neg_wait_timeout
parameter_list|(
name|void
modifier|*
name|eloop_ctx
parameter_list|,
name|void
modifier|*
name|timeout_ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|p2p_go_select_channel
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
name|struct
name|p2p_device
modifier|*
name|dev
parameter_list|,
name|u8
modifier|*
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|p2p_dbg
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|char
modifier|*
name|fmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|PRINTF_FORMAT
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|void
name|p2p_info
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|char
modifier|*
name|fmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|PRINTF_FORMAT
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|void
name|p2p_err
parameter_list|(
name|struct
name|p2p_data
modifier|*
name|p2p
parameter_list|,
specifier|const
name|char
modifier|*
name|fmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|PRINTF_FORMAT
parameter_list|(
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* P2P_I_H */
end_comment

end_unit

