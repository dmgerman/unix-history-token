begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * hostapd - IEEE 802.11i-2004 / WPA Authenticator: Internal definitions  * Copyright (c) 2004-2015, Jouni Malinen<j@w1.fi>  *  * This software may be distributed under the terms of the BSD license.  * See README for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|WPA_AUTH_I_H
end_ifndef

begin_define
define|#
directive|define
name|WPA_AUTH_I_H
end_define

begin_comment
comment|/* max(dot11RSNAConfigGroupUpdateCount,dot11RSNAConfigPairwiseUpdateCount) */
end_comment

begin_define
define|#
directive|define
name|RSNA_MAX_EAPOL_RETRIES
value|4
end_define

begin_struct_decl
struct_decl|struct
name|wpa_group
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|wpa_stsl_negotiation
block|{
name|struct
name|wpa_stsl_negotiation
modifier|*
name|next
decl_stmt|;
name|u8
name|initiator
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|u8
name|peer
index|[
name|ETH_ALEN
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|wpa_state_machine
block|{
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
decl_stmt|;
name|struct
name|wpa_group
modifier|*
name|group
decl_stmt|;
name|u8
name|addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|u8
name|p2p_dev_addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
enum|enum
block|{
name|WPA_PTK_INITIALIZE
block|,
name|WPA_PTK_DISCONNECT
block|,
name|WPA_PTK_DISCONNECTED
block|,
name|WPA_PTK_AUTHENTICATION
block|,
name|WPA_PTK_AUTHENTICATION2
block|,
name|WPA_PTK_INITPMK
block|,
name|WPA_PTK_INITPSK
block|,
name|WPA_PTK_PTKSTART
block|,
name|WPA_PTK_PTKCALCNEGOTIATING
block|,
name|WPA_PTK_PTKCALCNEGOTIATING2
block|,
name|WPA_PTK_PTKINITNEGOTIATING
block|,
name|WPA_PTK_PTKINITDONE
block|}
name|wpa_ptk_state
enum|;
enum|enum
block|{
name|WPA_PTK_GROUP_IDLE
init|=
literal|0
block|,
name|WPA_PTK_GROUP_REKEYNEGOTIATING
block|,
name|WPA_PTK_GROUP_REKEYESTABLISHED
block|,
name|WPA_PTK_GROUP_KEYERROR
block|}
name|wpa_ptk_group_state
enum|;
name|Boolean
name|Init
decl_stmt|;
name|Boolean
name|DeauthenticationRequest
decl_stmt|;
name|Boolean
name|AuthenticationRequest
decl_stmt|;
name|Boolean
name|ReAuthenticationRequest
decl_stmt|;
name|Boolean
name|Disconnect
decl_stmt|;
name|int
name|TimeoutCtr
decl_stmt|;
name|int
name|GTimeoutCtr
decl_stmt|;
name|Boolean
name|TimeoutEvt
decl_stmt|;
name|Boolean
name|EAPOLKeyReceived
decl_stmt|;
name|Boolean
name|EAPOLKeyPairwise
decl_stmt|;
name|Boolean
name|EAPOLKeyRequest
decl_stmt|;
name|Boolean
name|MICVerified
decl_stmt|;
name|Boolean
name|GUpdateStationKeys
decl_stmt|;
name|u8
name|ANonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|SNonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|alt_SNonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|alt_replay_counter
index|[
name|WPA_REPLAY_COUNTER_LEN
index|]
decl_stmt|;
name|u8
name|PMK
index|[
name|PMK_LEN
index|]
decl_stmt|;
name|struct
name|wpa_ptk
name|PTK
decl_stmt|;
name|Boolean
name|PTK_valid
decl_stmt|;
name|Boolean
name|pairwise_set
decl_stmt|;
name|int
name|keycount
decl_stmt|;
name|Boolean
name|Pair
decl_stmt|;
struct|struct
name|wpa_key_replay_counter
block|{
name|u8
name|counter
index|[
name|WPA_REPLAY_COUNTER_LEN
index|]
decl_stmt|;
name|Boolean
name|valid
decl_stmt|;
block|}
name|key_replay
index|[
name|RSNA_MAX_EAPOL_RETRIES
index|]
struct|,
name|prev_key_replay
index|[
name|RSNA_MAX_EAPOL_RETRIES
index|]
struct|;
name|Boolean
name|PInitAKeys
decl_stmt|;
comment|/* WPA only, not in IEEE 802.11i */
name|Boolean
name|PTKRequest
decl_stmt|;
comment|/* not in IEEE 802.11i state machine */
name|Boolean
name|has_GTK
decl_stmt|;
name|Boolean
name|PtkGroupInit
decl_stmt|;
comment|/* init request for PTK Group state machine */
name|u8
modifier|*
name|last_rx_eapol_key
decl_stmt|;
comment|/* starting from IEEE 802.1X header */
name|size_t
name|last_rx_eapol_key_len
decl_stmt|;
name|unsigned
name|int
name|changed
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|in_step_loop
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|pending_deinit
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|started
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|mgmt_frame_prot
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|rx_eapol_key_secure
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|update_snonce
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|alt_snonce_valid
range|:
literal|1
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_IEEE80211R
name|unsigned
name|int
name|ft_completed
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|pmk_r1_name_valid
range|:
literal|1
decl_stmt|;
endif|#
directive|endif
comment|/* CONFIG_IEEE80211R */
name|unsigned
name|int
name|is_wnmsleep
range|:
literal|1
decl_stmt|;
name|u8
name|req_replay_counter
index|[
name|WPA_REPLAY_COUNTER_LEN
index|]
decl_stmt|;
name|int
name|req_replay_counter_used
decl_stmt|;
name|u8
modifier|*
name|wpa_ie
decl_stmt|;
name|size_t
name|wpa_ie_len
decl_stmt|;
enum|enum
block|{
name|WPA_VERSION_NO_WPA
init|=
literal|0
comment|/* WPA not used */
block|,
name|WPA_VERSION_WPA
init|=
literal|1
comment|/* WPA / IEEE 802.11i/D3.0 */
block|,
name|WPA_VERSION_WPA2
init|=
literal|2
comment|/* WPA2 / IEEE 802.11i */
block|}
name|wpa
enum|;
name|int
name|pairwise
decl_stmt|;
comment|/* Pairwise cipher suite, WPA_CIPHER_* */
name|int
name|wpa_key_mgmt
decl_stmt|;
comment|/* the selected WPA_KEY_MGMT_* */
name|struct
name|rsn_pmksa_cache_entry
modifier|*
name|pmksa
decl_stmt|;
name|u32
name|dot11RSNAStatsTKIPLocalMICFailures
decl_stmt|;
name|u32
name|dot11RSNAStatsTKIPRemoteMICFailures
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_IEEE80211R
name|u8
name|xxkey
index|[
name|PMK_LEN
index|]
decl_stmt|;
comment|/* PSK or the second 256 bits of MSK */
name|size_t
name|xxkey_len
decl_stmt|;
name|u8
name|pmk_r1_name
index|[
name|WPA_PMK_NAME_LEN
index|]
decl_stmt|;
comment|/* PMKR1Name derived from FT Auth 					   * Request */
name|u8
name|r0kh_id
index|[
name|FT_R0KH_ID_MAX_LEN
index|]
decl_stmt|;
comment|/* R0KH-ID from FT Auth Request */
name|size_t
name|r0kh_id_len
decl_stmt|;
name|u8
name|sup_pmk_r1_name
index|[
name|WPA_PMK_NAME_LEN
index|]
decl_stmt|;
comment|/* PMKR1Name from EAPOL-Key 					       * message 2/4 */
name|u8
modifier|*
name|assoc_resp_ftie
decl_stmt|;
name|void
function_decl|(
modifier|*
name|ft_pending_cb
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|dst
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
name|u16
name|auth_transaction
parameter_list|,
name|u16
name|status
parameter_list|,
specifier|const
name|u8
modifier|*
name|ies
parameter_list|,
name|size_t
name|ies_len
parameter_list|)
function_decl|;
name|void
modifier|*
name|ft_pending_cb_ctx
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|ft_pending_req_ies
decl_stmt|;
name|u8
name|ft_pending_pull_nonce
index|[
name|FT_R0KH_R1KH_PULL_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|ft_pending_auth_transaction
decl_stmt|;
name|u8
name|ft_pending_current_ap
index|[
name|ETH_ALEN
index|]
decl_stmt|;
endif|#
directive|endif
comment|/* CONFIG_IEEE80211R */
name|int
name|pending_1_of_4_timeout
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_P2P
name|u8
name|ip_addr
index|[
literal|4
index|]
decl_stmt|;
endif|#
directive|endif
comment|/* CONFIG_P2P */
block|}
struct|;
end_struct

begin_comment
comment|/* per group key state machine data */
end_comment

begin_struct
struct|struct
name|wpa_group
block|{
name|struct
name|wpa_group
modifier|*
name|next
decl_stmt|;
name|int
name|vlan_id
decl_stmt|;
name|Boolean
name|GInit
decl_stmt|;
name|int
name|GKeyDoneStations
decl_stmt|;
name|Boolean
name|GTKReKey
decl_stmt|;
name|int
name|GTK_len
decl_stmt|;
name|int
name|GN
decl_stmt|,
name|GM
decl_stmt|;
name|Boolean
name|GTKAuthenticator
decl_stmt|;
name|u8
name|Counter
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
enum|enum
block|{
name|WPA_GROUP_GTK_INIT
init|=
literal|0
block|,
name|WPA_GROUP_SETKEYS
block|,
name|WPA_GROUP_SETKEYSDONE
block|,
name|WPA_GROUP_FATAL_FAILURE
block|}
name|wpa_group_state
enum|;
name|u8
name|GMK
index|[
name|WPA_GMK_LEN
index|]
decl_stmt|;
name|u8
name|GTK
index|[
literal|2
index|]
index|[
name|WPA_GTK_MAX_LEN
index|]
decl_stmt|;
name|u8
name|GNonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
name|Boolean
name|changed
decl_stmt|;
name|Boolean
name|first_sta_seen
decl_stmt|;
name|Boolean
name|reject_4way_hs_for_entropy
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_IEEE80211W
name|u8
name|IGTK
index|[
literal|2
index|]
index|[
name|WPA_IGTK_MAX_LEN
index|]
decl_stmt|;
name|int
name|GN_igtk
decl_stmt|,
name|GM_igtk
decl_stmt|;
endif|#
directive|endif
comment|/* CONFIG_IEEE80211W */
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|wpa_ft_pmk_cache
struct_decl|;
end_struct_decl

begin_comment
comment|/* per authenticator data */
end_comment

begin_struct
struct|struct
name|wpa_authenticator
block|{
name|struct
name|wpa_group
modifier|*
name|group
decl_stmt|;
name|unsigned
name|int
name|dot11RSNAStatsTKIPRemoteMICFailures
decl_stmt|;
name|u32
name|dot11RSNAAuthenticationSuiteSelected
decl_stmt|;
name|u32
name|dot11RSNAPairwiseCipherSelected
decl_stmt|;
name|u32
name|dot11RSNAGroupCipherSelected
decl_stmt|;
name|u8
name|dot11RSNAPMKIDUsed
index|[
name|PMKID_LEN
index|]
decl_stmt|;
name|u32
name|dot11RSNAAuthenticationSuiteRequested
decl_stmt|;
comment|/* FIX: update */
name|u32
name|dot11RSNAPairwiseCipherRequested
decl_stmt|;
comment|/* FIX: update */
name|u32
name|dot11RSNAGroupCipherRequested
decl_stmt|;
comment|/* FIX: update */
name|unsigned
name|int
name|dot11RSNATKIPCounterMeasuresInvoked
decl_stmt|;
name|unsigned
name|int
name|dot11RSNA4WayHandshakeFailures
decl_stmt|;
name|struct
name|wpa_stsl_negotiation
modifier|*
name|stsl_negotiations
decl_stmt|;
name|struct
name|wpa_auth_config
name|conf
decl_stmt|;
name|struct
name|wpa_auth_callbacks
name|cb
decl_stmt|;
name|u8
modifier|*
name|wpa_ie
decl_stmt|;
name|size_t
name|wpa_ie_len
decl_stmt|;
name|u8
name|addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|struct
name|rsn_pmksa_cache
modifier|*
name|pmksa
decl_stmt|;
name|struct
name|wpa_ft_pmk_cache
modifier|*
name|ft_pmk_cache
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_P2P
name|struct
name|bitfield
modifier|*
name|ip_pool
decl_stmt|;
endif|#
directive|endif
comment|/* CONFIG_P2P */
block|}
struct|;
end_struct

begin_function_decl
name|int
name|wpa_write_rsn_ie
parameter_list|(
name|struct
name|wpa_auth_config
modifier|*
name|conf
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|,
specifier|const
name|u8
modifier|*
name|pmkid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_auth_logger
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|logger_level
name|level
parameter_list|,
specifier|const
name|char
modifier|*
name|txt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_auth_vlogger
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|logger_level
name|level
parameter_list|,
specifier|const
name|char
modifier|*
name|fmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|__wpa_send_eapol
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
name|int
name|key_info
parameter_list|,
specifier|const
name|u8
modifier|*
name|key_rsc
parameter_list|,
specifier|const
name|u8
modifier|*
name|nonce
parameter_list|,
specifier|const
name|u8
modifier|*
name|kde
parameter_list|,
name|size_t
name|kde_len
parameter_list|,
name|int
name|keyidx
parameter_list|,
name|int
name|encr
parameter_list|,
name|int
name|force_version
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_auth_for_each_sta
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|int
function_decl|(
modifier|*
name|cb
function_decl|)
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
name|void
modifier|*
name|ctx
parameter_list|)
parameter_list|,
name|void
modifier|*
name|cb_ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_auth_for_each_auth
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|int
function_decl|(
modifier|*
name|cb
function_decl|)
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|a
parameter_list|,
name|void
modifier|*
name|ctx
parameter_list|)
parameter_list|,
name|void
modifier|*
name|cb_ctx
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_PEERKEY
end_ifdef

begin_function_decl
name|int
name|wpa_stsl_remove
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|struct
name|wpa_stsl_negotiation
modifier|*
name|neg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_smk_error
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|key_data
parameter_list|,
name|size_t
name|key_data_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_smk_m1
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
name|struct
name|wpa_eapol_key
modifier|*
name|key
parameter_list|,
specifier|const
name|u8
modifier|*
name|key_data
parameter_list|,
name|size_t
name|key_data_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_smk_m3
parameter_list|(
name|struct
name|wpa_authenticator
modifier|*
name|wpa_auth
parameter_list|,
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
name|struct
name|wpa_eapol_key
modifier|*
name|key
parameter_list|,
specifier|const
name|u8
modifier|*
name|key_data
parameter_list|,
name|size_t
name|key_data_len
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* CONFIG_PEERKEY */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_IEEE80211R
end_ifdef

begin_function_decl
name|int
name|wpa_write_mdie
parameter_list|(
name|struct
name|wpa_auth_config
modifier|*
name|conf
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_write_ftie
parameter_list|(
name|struct
name|wpa_auth_config
modifier|*
name|conf
parameter_list|,
specifier|const
name|u8
modifier|*
name|r0kh_id
parameter_list|,
name|size_t
name|r0kh_id_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|anonce
parameter_list|,
specifier|const
name|u8
modifier|*
name|snonce
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|,
specifier|const
name|u8
modifier|*
name|subelem
parameter_list|,
name|size_t
name|subelem_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_auth_derive_ptk_ft
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|,
specifier|const
name|u8
modifier|*
name|pmk
parameter_list|,
name|struct
name|wpa_ptk
modifier|*
name|ptk
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpa_ft_pmk_cache
modifier|*
name|wpa_ft_pmk_cache_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_ft_pmk_cache_deinit
parameter_list|(
name|struct
name|wpa_ft_pmk_cache
modifier|*
name|cache
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_ft_install_ptk
parameter_list|(
name|struct
name|wpa_state_machine
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* CONFIG_IEEE80211R */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WPA_AUTH_I_H */
end_comment

end_unit

