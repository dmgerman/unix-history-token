begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * hostapd - Driver operations  * Copyright (c) 2009-2014, Jouni Malinen<j@w1.fi>  *  * This software may be distributed under the terms of the BSD license.  * See README for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|AP_DRV_OPS
end_ifndef

begin_define
define|#
directive|define
name|AP_DRV_OPS
end_define

begin_enum_decl
enum_decl|enum
name|wpa_driver_if_type
enum_decl|;
end_enum_decl

begin_struct_decl
struct_decl|struct
name|wpa_bss_params
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|wpa_driver_scan_params
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ieee80211_ht_capabilities
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ieee80211_vht_capabilities
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|hostapd_freq_params
struct_decl|;
end_struct_decl

begin_function_decl
name|u32
name|hostapd_sta_flags_to_drv
parameter_list|(
name|u32
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_build_ap_extra_ies
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|wpabuf
modifier|*
modifier|*
name|beacon
parameter_list|,
name|struct
name|wpabuf
modifier|*
modifier|*
name|proberesp
parameter_list|,
name|struct
name|wpabuf
modifier|*
modifier|*
name|assocresp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|hostapd_free_ap_extra_ies
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|beacon
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|proberesp
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|assocresp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_ap_wps_ie
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_authorized
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|,
name|int
name|authorized
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_sta_flags
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|sta_info
modifier|*
name|sta
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_drv_ieee8021x
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|,
name|int
name|enabled
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_vlan_if_add
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_vlan_if_remove
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_wds_sta
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|char
modifier|*
name|ifname_wds
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|aid
parameter_list|,
name|int
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_sta_add
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|u16
name|aid
parameter_list|,
name|u16
name|capability
parameter_list|,
specifier|const
name|u8
modifier|*
name|supp_rates
parameter_list|,
name|size_t
name|supp_rates_len
parameter_list|,
name|u16
name|listen_interval
parameter_list|,
specifier|const
name|struct
name|ieee80211_ht_capabilities
modifier|*
name|ht_capab
parameter_list|,
specifier|const
name|struct
name|ieee80211_vht_capabilities
modifier|*
name|vht_capab
parameter_list|,
name|u32
name|flags
parameter_list|,
name|u8
name|qosinfo
parameter_list|,
name|u8
name|vht_opmode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_privacy
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|int
name|enabled
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_generic_elem
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|elem
parameter_list|,
name|size_t
name|elem_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_get_ssid
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_ssid
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_if_add
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|enum
name|wpa_driver_if_type
name|type
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|void
modifier|*
name|bss_ctx
parameter_list|,
name|void
modifier|*
modifier|*
name|drv_priv
parameter_list|,
name|char
modifier|*
name|force_ifname
parameter_list|,
name|u8
modifier|*
name|if_addr
parameter_list|,
specifier|const
name|char
modifier|*
name|bridge
parameter_list|,
name|int
name|use_existing
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_if_remove
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|enum
name|wpa_driver_if_type
name|type
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_ieee8021x
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|wpa_bss_params
modifier|*
name|params
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_get_seqnum
parameter_list|(
specifier|const
name|char
modifier|*
name|ifname
parameter_list|,
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|idx
parameter_list|,
name|u8
modifier|*
name|seq
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_flush
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_freq
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|enum
name|hostapd_hw_mode
name|mode
parameter_list|,
name|int
name|freq
parameter_list|,
name|int
name|channel
parameter_list|,
name|int
name|ht_enabled
parameter_list|,
name|int
name|vht_enabled
parameter_list|,
name|int
name|sec_channel_offset
parameter_list|,
name|int
name|vht_oper_chwidth
parameter_list|,
name|int
name|center_segment0
parameter_list|,
name|int
name|center_segment1
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_rts
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|int
name|rts
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_frag
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|int
name|frag
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_sta_set_flags
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|total_flags
parameter_list|,
name|int
name|flags_or
parameter_list|,
name|int
name|flags_and
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_country
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|char
modifier|*
name|country
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_set_tx_queue_params
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|int
name|queue
parameter_list|,
name|int
name|aifs
parameter_list|,
name|int
name|cw_min
parameter_list|,
name|int
name|cw_max
parameter_list|,
name|int
name|burst_time
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|hostapd_hw_modes
modifier|*
name|hostapd_get_hw_feature_data
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u16
modifier|*
name|num_modes
parameter_list|,
name|u16
modifier|*
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_driver_commit
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_drv_none
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_driver_scan
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|wpa_driver_scan_params
modifier|*
name|params
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpa_scan_results
modifier|*
name|hostapd_driver_get_scan_results
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_driver_set_noa
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
name|count
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|duration
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_drv_set_key
parameter_list|(
specifier|const
name|char
modifier|*
name|ifname
parameter_list|,
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|enum
name|wpa_alg
name|alg
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|key_idx
parameter_list|,
name|int
name|set_tx
parameter_list|,
specifier|const
name|u8
modifier|*
name|seq
parameter_list|,
name|size_t
name|seq_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_drv_send_mlme
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|void
modifier|*
name|msg
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|noack
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_drv_sta_deauth
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reason
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_drv_sta_disassoc
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reason
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_drv_send_action
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|unsigned
name|int
name|freq
parameter_list|,
name|unsigned
name|int
name|wait
parameter_list|,
specifier|const
name|u8
modifier|*
name|dst
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_add_sta_node
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|u16
name|auth_alg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_sta_auth
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|u16
name|seq
parameter_list|,
name|u16
name|status
parameter_list|,
specifier|const
name|u8
modifier|*
name|ie
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_sta_assoc
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reassoc
parameter_list|,
name|u16
name|status
parameter_list|,
specifier|const
name|u8
modifier|*
name|ie
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_add_tspec
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|u8
modifier|*
name|tspec_ie
parameter_list|,
name|size_t
name|tspec_ielen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_start_dfs_cac
parameter_list|(
name|struct
name|hostapd_iface
modifier|*
name|iface
parameter_list|,
name|enum
name|hostapd_hw_mode
name|mode
parameter_list|,
name|int
name|freq
parameter_list|,
name|int
name|channel
parameter_list|,
name|int
name|ht_enabled
parameter_list|,
name|int
name|vht_enabled
parameter_list|,
name|int
name|sec_channel_offset
parameter_list|,
name|int
name|vht_oper_chwidth
parameter_list|,
name|int
name|center_segment0
parameter_list|,
name|int
name|center_segment1
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_drv_do_acs
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
function_decl|;
end_function_decl

begin_include
include|#
directive|include
file|"drivers/driver.h"
end_include

begin_function_decl
name|int
name|hostapd_drv_wnm_oper
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|enum
name|wnm_oper
name|oper
parameter_list|,
specifier|const
name|u8
modifier|*
name|peer
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|u16
modifier|*
name|buf_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostapd_drv_set_qos_map
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|qos_map_set
parameter_list|,
name|u8
name|qos_map_set_len
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_set_countermeasures
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|int
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|hapd_set_countermeasures
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|hapd_set_countermeasures
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|enabled
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_set_sta_vlan
parameter_list|(
specifier|const
name|char
modifier|*
name|ifname
parameter_list|,
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|vlan_id
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_sta_vlan
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_sta_vlan
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|ifname
argument_list|,
name|vlan_id
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_get_inact_sec
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|get_inact_sec
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|get_inact_sec
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_sta_remove
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|sta_remove
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|sta_remove
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_hapd_send_eapol
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|int
name|encrypt
parameter_list|,
name|u32
name|flags
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|hapd_send_eapol
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|hapd_send_eapol
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|data
argument_list|,
name|data_len
argument_list|,
name|encrypt
argument_list|,
name|hapd
operator|->
name|own_addr
argument_list|,
name|flags
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_read_sta_data
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|hostap_sta_driver_data
modifier|*
name|data
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|read_sta_data
operator|==
name|NULL
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|read_sta_data
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|data
argument_list|,
name|addr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_sta_clear_stats
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|sta_clear_stats
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|sta_clear_stats
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_set_acl
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|hostapd_acl_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_acl
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_acl
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_set_ap
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|wpa_driver_ap_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_ap
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_ap
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_set_radius_acl_auth
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|mac
parameter_list|,
name|int
name|accepted
parameter_list|,
name|u32
name|session_timeout
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_radius_acl_auth
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_radius_acl_auth
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|mac
argument_list|,
name|accepted
argument_list|,
name|session_timeout
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_set_radius_acl_expire
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|mac
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_radius_acl_expire
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_radius_acl_expire
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|mac
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_set_authmode
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|int
name|auth_algs
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_authmode
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_authmode
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|auth_algs
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|hostapd_drv_poll_client
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|own_addr
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|qos
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|poll_client
operator|==
name|NULL
condition|)
return|return;
name|hapd
operator|->
name|driver
operator|->
name|poll_client
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|own_addr
argument_list|,
name|addr
argument_list|,
name|qos
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_get_survey
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|unsigned
name|int
name|freq
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
condition|)
return|return
operator|-
literal|1
return|;
if|if
condition|(
operator|!
name|hapd
operator|->
name|driver
operator|->
name|get_survey
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|get_survey
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|freq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_get_country
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|char
modifier|*
name|alpha2
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|get_country
operator|==
name|NULL
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|get_country
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|alpha2
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
specifier|const
name|char
modifier|*
name|hostapd_drv_get_radio_name
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|drv_priv
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|get_radio_name
operator|==
name|NULL
condition|)
return|return
name|NULL
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|get_radio_name
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_switch_channel
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|csa_settings
modifier|*
name|settings
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|switch_channel
operator|==
name|NULL
condition|)
return|return
operator|-
name|ENOTSUP
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|switch_channel
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|settings
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_status
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|buflen
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|status
operator|==
name|NULL
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|status
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|buf
argument_list|,
name|buflen
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_br_add_ip_neigh
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|int
name|version
parameter_list|,
specifier|const
name|u8
modifier|*
name|ipaddr
parameter_list|,
name|int
name|prefixlen
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|drv_priv
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|br_add_ip_neigh
operator|==
name|NULL
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|br_add_ip_neigh
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|version
argument_list|,
name|ipaddr
argument_list|,
name|prefixlen
argument_list|,
name|addr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_br_delete_ip_neigh
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
name|version
parameter_list|,
specifier|const
name|u8
modifier|*
name|ipaddr
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|drv_priv
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|br_delete_ip_neigh
operator|==
name|NULL
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|br_delete_ip_neigh
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|version
argument_list|,
name|ipaddr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_br_port_set_attr
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|enum
name|drv_br_port_attr
name|attr
parameter_list|,
name|unsigned
name|int
name|val
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|drv_priv
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|br_port_set_attr
operator|==
name|NULL
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|br_port_set_attr
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|attr
argument_list|,
name|val
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_br_set_net_param
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|enum
name|drv_br_net_param
name|param
parameter_list|,
name|unsigned
name|int
name|val
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|drv_priv
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|br_set_net_param
operator|==
name|NULL
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|br_set_net_param
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|param
argument_list|,
name|val
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_vendor_cmd
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|int
name|vendor_id
parameter_list|,
name|int
name|subcmd
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|struct
name|wpabuf
modifier|*
name|buf
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|vendor_cmd
operator|==
name|NULL
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|vendor_cmd
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|,
name|vendor_id
argument_list|,
name|subcmd
argument_list|,
name|data
argument_list|,
name|data_len
argument_list|,
name|buf
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_drv_stop_ap
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|stop_ap
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|stop_ap
argument_list|(
name|hapd
operator|->
name|drv_priv
argument_list|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* AP_DRV_OPS */
end_comment

end_unit

