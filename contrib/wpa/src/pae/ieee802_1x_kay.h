begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * IEEE 802.1X-2010 Key Agree Protocol of PAE state machine  * Copyright (c) 2013, Qualcomm Atheros, Inc.  *  * This software may be distributed under the terms of the BSD license.  * See README for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|IEEE802_1X_KAY_H
end_ifndef

begin_define
define|#
directive|define
name|IEEE802_1X_KAY_H
end_define

begin_include
include|#
directive|include
file|"utils/list.h"
end_include

begin_include
include|#
directive|include
file|"common/defs.h"
end_include

begin_include
include|#
directive|include
file|"common/ieee802_1x_defs.h"
end_include

begin_struct_decl
struct_decl|struct
name|macsec_init_params
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ieee802_1x_cp_conf
struct_decl|;
end_struct_decl

begin_define
define|#
directive|define
name|MI_LEN
value|12
end_define

begin_define
define|#
directive|define
name|MAX_KEY_LEN
value|32
end_define

begin_comment
comment|/* 32 bytes, 256 bits */
end_comment

begin_define
define|#
directive|define
name|MAX_CKN_LEN
value|32
end_define

begin_comment
comment|/* 32 bytes, 256 bits */
end_comment

begin_comment
comment|/* MKA timer, unit: millisecond */
end_comment

begin_define
define|#
directive|define
name|MKA_HELLO_TIME
value|2000
end_define

begin_define
define|#
directive|define
name|MKA_LIFE_TIME
value|6000
end_define

begin_define
define|#
directive|define
name|MKA_SAK_RETIRE_TIME
value|3000
end_define

begin_struct
struct|struct
name|ieee802_1x_mka_ki
block|{
name|u8
name|mi
index|[
name|MI_LEN
index|]
decl_stmt|;
name|u32
name|kn
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ieee802_1x_mka_sci
block|{
name|u8
name|addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|u16
name|port
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mka_key
block|{
name|u8
name|key
index|[
name|MAX_KEY_LEN
index|]
decl_stmt|;
name|size_t
name|len
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|mka_key_name
block|{
name|u8
name|name
index|[
name|MAX_CKN_LEN
index|]
decl_stmt|;
name|size_t
name|len
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|mka_created_mode
block|{
name|PSK
block|,
name|EAP_EXCHANGE
block|,
name|DISTRIBUTED
block|,
name|CACHED
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|ieee802_1x_kay_ctx
block|{
comment|/* pointer to arbitrary upper level context */
name|void
modifier|*
name|ctx
decl_stmt|;
comment|/* abstract wpa driver interface */
name|int
function_decl|(
modifier|*
name|macsec_init
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|struct
name|macsec_init_params
modifier|*
name|params
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|macsec_deinit
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|enable_protect_frames
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|Boolean
name|enabled
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_replay_protect
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|Boolean
name|enabled
parameter_list|,
name|u32
name|window
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_current_cipher_suite
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|cs
parameter_list|,
name|size_t
name|cs_len
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|enable_controlled_port
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|Boolean
name|enabled
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_receive_lowest_pn
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|,
name|u32
modifier|*
name|lowest_pn
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_transmit_next_pn
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|,
name|u32
modifier|*
name|next_pn
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_transmit_next_pn
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|,
name|u32
name|next_pn
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_available_receive_sc
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
modifier|*
name|channel
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|create_receive_sc
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|,
name|struct
name|ieee802_1x_mka_sci
modifier|*
name|sci
parameter_list|,
name|enum
name|validate_frames
name|vf
parameter_list|,
name|enum
name|confidentiality_offset
name|co
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|delete_receive_sc
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|create_receive_sa
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|,
name|u32
name|lowest_pn
parameter_list|,
specifier|const
name|u8
modifier|*
name|sak
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|enable_receive_sa
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|disable_receive_sa
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_available_transmit_sc
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
modifier|*
name|channel
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|create_transmit_sc
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|,
specifier|const
name|struct
name|ieee802_1x_mka_sci
modifier|*
name|sci
parameter_list|,
name|enum
name|confidentiality_offset
name|co
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|delete_transmit_sc
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|create_transmit_sa
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|,
name|u32
name|next_pn
parameter_list|,
name|Boolean
name|confidentiality
parameter_list|,
specifier|const
name|u8
modifier|*
name|sak
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|enable_transmit_sa
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|disable_transmit_sa
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u32
name|channel
parameter_list|,
name|u8
name|an
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ieee802_1x_kay
block|{
name|Boolean
name|enable
decl_stmt|;
name|Boolean
name|active
decl_stmt|;
name|Boolean
name|authenticated
decl_stmt|;
name|Boolean
name|secured
decl_stmt|;
name|Boolean
name|failed
decl_stmt|;
name|struct
name|ieee802_1x_mka_sci
name|actor_sci
decl_stmt|;
name|u8
name|actor_priority
decl_stmt|;
name|struct
name|ieee802_1x_mka_sci
name|key_server_sci
decl_stmt|;
name|u8
name|key_server_priority
decl_stmt|;
name|enum
name|macsec_cap
name|macsec_capable
decl_stmt|;
name|Boolean
name|macsec_desired
decl_stmt|;
name|Boolean
name|macsec_protect
decl_stmt|;
name|Boolean
name|macsec_replay_protect
decl_stmt|;
name|u32
name|macsec_replay_window
decl_stmt|;
name|enum
name|validate_frames
name|macsec_validate
decl_stmt|;
name|enum
name|confidentiality_offset
name|macsec_confidentiality
decl_stmt|;
name|u32
name|ltx_kn
decl_stmt|;
name|u8
name|ltx_an
decl_stmt|;
name|u32
name|lrx_kn
decl_stmt|;
name|u8
name|lrx_an
decl_stmt|;
name|u32
name|otx_kn
decl_stmt|;
name|u8
name|otx_an
decl_stmt|;
name|u32
name|orx_kn
decl_stmt|;
name|u8
name|orx_an
decl_stmt|;
comment|/* not defined in IEEE802.1X */
name|struct
name|ieee802_1x_kay_ctx
modifier|*
name|ctx
decl_stmt|;
name|Boolean
name|is_key_server
decl_stmt|;
name|Boolean
name|is_obliged_key_server
decl_stmt|;
name|char
name|if_name
index|[
name|IFNAMSIZ
index|]
decl_stmt|;
name|int
name|macsec_csindex
decl_stmt|;
comment|/*  MACsec cipher suite table index */
name|int
name|mka_algindex
decl_stmt|;
comment|/* MKA alg table index */
name|u32
name|dist_kn
decl_stmt|;
name|u8
name|dist_an
decl_stmt|;
name|time_t
name|dist_time
decl_stmt|;
name|u8
name|mka_version
decl_stmt|;
name|u8
name|algo_agility
index|[
literal|4
index|]
decl_stmt|;
name|u32
name|sc_ch
decl_stmt|;
name|u32
name|pn_exhaustion
decl_stmt|;
name|Boolean
name|port_enable
decl_stmt|;
name|Boolean
name|rx_enable
decl_stmt|;
name|Boolean
name|tx_enable
decl_stmt|;
name|struct
name|dl_list
name|participant_list
decl_stmt|;
name|enum
name|macsec_policy
name|policy
decl_stmt|;
name|struct
name|ieee802_1x_cp_sm
modifier|*
name|cp
decl_stmt|;
name|struct
name|l2_packet_data
modifier|*
name|l2_mka
decl_stmt|;
name|enum
name|validate_frames
name|vf
decl_stmt|;
name|enum
name|confidentiality_offset
name|co
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|struct
name|ieee802_1x_kay
modifier|*
name|ieee802_1x_kay_init
parameter_list|(
name|struct
name|ieee802_1x_kay_ctx
modifier|*
name|ctx
parameter_list|,
name|enum
name|macsec_policy
name|policy
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ieee802_1x_kay_deinit
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ieee802_1x_mka_participant
modifier|*
name|ieee802_1x_kay_create_mka
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|,
name|struct
name|mka_key_name
modifier|*
name|ckn
parameter_list|,
name|struct
name|mka_key
modifier|*
name|cak
parameter_list|,
name|u32
name|life
parameter_list|,
name|enum
name|mka_created_mode
name|mode
parameter_list|,
name|Boolean
name|is_authenticator
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ieee802_1x_kay_delete_mka
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|,
name|struct
name|mka_key_name
modifier|*
name|ckn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ieee802_1x_kay_mka_participate
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|,
name|struct
name|mka_key_name
modifier|*
name|ckn
parameter_list|,
name|Boolean
name|status
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ieee802_1x_kay_new_sak
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ieee802_1x_kay_change_cipher_suite
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|,
name|int
name|cs_index
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ieee802_1x_kay_set_latest_sa_attr
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|,
name|struct
name|ieee802_1x_mka_ki
modifier|*
name|lki
parameter_list|,
name|u8
name|lan
parameter_list|,
name|Boolean
name|ltx
parameter_list|,
name|Boolean
name|lrx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ieee802_1x_kay_set_old_sa_attr
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|,
name|struct
name|ieee802_1x_mka_ki
modifier|*
name|oki
parameter_list|,
name|u8
name|oan
parameter_list|,
name|Boolean
name|otx
parameter_list|,
name|Boolean
name|orx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ieee802_1x_kay_create_sas
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|,
name|struct
name|ieee802_1x_mka_ki
modifier|*
name|lki
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ieee802_1x_kay_delete_sas
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|,
name|struct
name|ieee802_1x_mka_ki
modifier|*
name|ki
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ieee802_1x_kay_enable_tx_sas
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|,
name|struct
name|ieee802_1x_mka_ki
modifier|*
name|lki
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ieee802_1x_kay_enable_rx_sas
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|,
name|struct
name|ieee802_1x_mka_ki
modifier|*
name|lki
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ieee802_1x_kay_enable_new_info
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ieee802_1x_kay_cp_conf
parameter_list|(
name|struct
name|ieee802_1x_kay
modifier|*
name|kay
parameter_list|,
name|struct
name|ieee802_1x_cp_conf
modifier|*
name|pconf
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* IEEE802_1X_KAY_H */
end_comment

end_unit

