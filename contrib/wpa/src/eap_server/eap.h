begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * hostapd / EAP Full Authenticator state machine (RFC 4137)  * Copyright (c) 2004-2007, Jouni Malinen<j@w1.fi>  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License version 2 as  * published by the Free Software Foundation.  *  * Alternatively, this software may be distributed under the terms of BSD  * license.  *  * See README and COPYING for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|EAP_H
end_ifndef

begin_define
define|#
directive|define
name|EAP_H
end_define

begin_include
include|#
directive|include
file|"common/defs.h"
end_include

begin_include
include|#
directive|include
file|"eap_common/eap_defs.h"
end_include

begin_include
include|#
directive|include
file|"eap_server/eap_methods.h"
end_include

begin_include
include|#
directive|include
file|"wpabuf.h"
end_include

begin_struct_decl
struct_decl|struct
name|eap_sm
struct_decl|;
end_struct_decl

begin_define
define|#
directive|define
name|EAP_MAX_METHODS
value|8
end_define

begin_define
define|#
directive|define
name|EAP_TTLS_AUTH_PAP
value|1
end_define

begin_define
define|#
directive|define
name|EAP_TTLS_AUTH_CHAP
value|2
end_define

begin_define
define|#
directive|define
name|EAP_TTLS_AUTH_MSCHAP
value|4
end_define

begin_define
define|#
directive|define
name|EAP_TTLS_AUTH_MSCHAPV2
value|8
end_define

begin_struct
struct|struct
name|eap_user
block|{
struct|struct
block|{
name|int
name|vendor
decl_stmt|;
name|u32
name|method
decl_stmt|;
block|}
name|methods
index|[
name|EAP_MAX_METHODS
index|]
struct|;
name|u8
modifier|*
name|password
decl_stmt|;
name|size_t
name|password_len
decl_stmt|;
name|int
name|password_hash
decl_stmt|;
comment|/* whether password is hashed with 			    * nt_password_hash() */
name|int
name|phase2
decl_stmt|;
name|int
name|force_version
decl_stmt|;
name|int
name|ttls_auth
decl_stmt|;
comment|/* bitfield of 			* EAP_TTLS_AUTH_{PAP,CHAP,MSCHAP,MSCHAPV2} */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|eap_eapol_interface
block|{
comment|/* Lower layer to full authenticator variables */
name|Boolean
name|eapResp
decl_stmt|;
comment|/* shared with EAPOL Backend Authentication */
name|struct
name|wpabuf
modifier|*
name|eapRespData
decl_stmt|;
name|Boolean
name|portEnabled
decl_stmt|;
name|int
name|retransWhile
decl_stmt|;
name|Boolean
name|eapRestart
decl_stmt|;
comment|/* shared with EAPOL Authenticator PAE */
name|int
name|eapSRTT
decl_stmt|;
name|int
name|eapRTTVAR
decl_stmt|;
comment|/* Full authenticator to lower layer variables */
name|Boolean
name|eapReq
decl_stmt|;
comment|/* shared with EAPOL Backend Authentication */
name|Boolean
name|eapNoReq
decl_stmt|;
comment|/* shared with EAPOL Backend Authentication */
name|Boolean
name|eapSuccess
decl_stmt|;
name|Boolean
name|eapFail
decl_stmt|;
name|Boolean
name|eapTimeout
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|eapReqData
decl_stmt|;
name|u8
modifier|*
name|eapKeyData
decl_stmt|;
name|size_t
name|eapKeyDataLen
decl_stmt|;
name|Boolean
name|eapKeyAvailable
decl_stmt|;
comment|/* called keyAvailable in IEEE 802.1X-2004 */
comment|/* AAA interface to full authenticator variables */
name|Boolean
name|aaaEapReq
decl_stmt|;
name|Boolean
name|aaaEapNoReq
decl_stmt|;
name|Boolean
name|aaaSuccess
decl_stmt|;
name|Boolean
name|aaaFail
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|aaaEapReqData
decl_stmt|;
name|u8
modifier|*
name|aaaEapKeyData
decl_stmt|;
name|size_t
name|aaaEapKeyDataLen
decl_stmt|;
name|Boolean
name|aaaEapKeyAvailable
decl_stmt|;
name|int
name|aaaMethodTimeout
decl_stmt|;
comment|/* Full authenticator to AAA interface variables */
name|Boolean
name|aaaEapResp
decl_stmt|;
name|struct
name|wpabuf
modifier|*
name|aaaEapRespData
decl_stmt|;
comment|/* aaaIdentity -> eap_get_identity() */
name|Boolean
name|aaaTimeout
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|eapol_callbacks
block|{
name|int
function_decl|(
modifier|*
name|get_eap_user
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
specifier|const
name|u8
modifier|*
name|identity
parameter_list|,
name|size_t
name|identity_len
parameter_list|,
name|int
name|phase2
parameter_list|,
name|struct
name|eap_user
modifier|*
name|user
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|get_eap_req_id_text
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|size_t
modifier|*
name|len
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|eap_config
block|{
name|void
modifier|*
name|ssl_ctx
decl_stmt|;
name|void
modifier|*
name|msg_ctx
decl_stmt|;
name|void
modifier|*
name|eap_sim_db_priv
decl_stmt|;
name|Boolean
name|backend_auth
decl_stmt|;
name|int
name|eap_server
decl_stmt|;
name|u8
modifier|*
name|pac_opaque_encr_key
decl_stmt|;
name|u8
modifier|*
name|eap_fast_a_id
decl_stmt|;
name|size_t
name|eap_fast_a_id_len
decl_stmt|;
name|char
modifier|*
name|eap_fast_a_id_info
decl_stmt|;
name|int
name|eap_fast_prov
decl_stmt|;
name|int
name|pac_key_lifetime
decl_stmt|;
name|int
name|pac_key_refresh_time
decl_stmt|;
name|int
name|eap_sim_aka_result_ind
decl_stmt|;
name|int
name|tnc
decl_stmt|;
name|struct
name|wps_context
modifier|*
name|wps
decl_stmt|;
specifier|const
name|struct
name|wpabuf
modifier|*
name|assoc_wps_ie
decl_stmt|;
specifier|const
name|u8
modifier|*
name|peer_addr
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|struct
name|eap_sm
modifier|*
name|eap_server_sm_init
parameter_list|(
name|void
modifier|*
name|eapol_ctx
parameter_list|,
name|struct
name|eapol_callbacks
modifier|*
name|eapol_cb
parameter_list|,
name|struct
name|eap_config
modifier|*
name|eap_conf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|eap_server_sm_deinit
parameter_list|(
name|struct
name|eap_sm
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|eap_server_sm_step
parameter_list|(
name|struct
name|eap_sm
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|eap_sm_notify_cached
parameter_list|(
name|struct
name|eap_sm
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|eap_sm_pending_cb
parameter_list|(
name|struct
name|eap_sm
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|eap_sm_method_pending
parameter_list|(
name|struct
name|eap_sm
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|u8
modifier|*
name|eap_get_identity
parameter_list|(
name|struct
name|eap_sm
modifier|*
name|sm
parameter_list|,
name|size_t
modifier|*
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|eap_eapol_interface
modifier|*
name|eap_get_interface
parameter_list|(
name|struct
name|eap_sm
modifier|*
name|sm
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* EAP_H */
end_comment

end_unit

