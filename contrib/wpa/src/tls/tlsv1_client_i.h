begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * TLSv1 client - internal structures  * Copyright (c) 2006-2007, Jouni Malinen<j@w1.fi>  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License version 2 as  * published by the Free Software Foundation.  *  * Alternatively, this software may be distributed under the terms of BSD  * license.  *  * See README and COPYING for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|TLSV1_CLIENT_I_H
end_ifndef

begin_define
define|#
directive|define
name|TLSV1_CLIENT_I_H
end_define

begin_struct
struct|struct
name|tlsv1_client
block|{
enum|enum
block|{
name|CLIENT_HELLO
block|,
name|SERVER_HELLO
block|,
name|SERVER_CERTIFICATE
block|,
name|SERVER_KEY_EXCHANGE
block|,
name|SERVER_CERTIFICATE_REQUEST
block|,
name|SERVER_HELLO_DONE
block|,
name|CLIENT_KEY_EXCHANGE
block|,
name|CHANGE_CIPHER_SPEC
block|,
name|SERVER_CHANGE_CIPHER_SPEC
block|,
name|SERVER_FINISHED
block|,
name|ACK_FINISHED
block|,
name|ESTABLISHED
block|,
name|FAILED
block|}
name|state
enum|;
name|struct
name|tlsv1_record_layer
name|rl
decl_stmt|;
name|u8
name|session_id
index|[
name|TLS_SESSION_ID_MAX_LEN
index|]
decl_stmt|;
name|size_t
name|session_id_len
decl_stmt|;
name|u8
name|client_random
index|[
name|TLS_RANDOM_LEN
index|]
decl_stmt|;
name|u8
name|server_random
index|[
name|TLS_RANDOM_LEN
index|]
decl_stmt|;
name|u8
name|master_secret
index|[
name|TLS_MASTER_SECRET_LEN
index|]
decl_stmt|;
name|u8
name|alert_level
decl_stmt|;
name|u8
name|alert_description
decl_stmt|;
name|unsigned
name|int
name|certificate_requested
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|session_resumed
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|session_ticket_included
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|use_session_ticket
range|:
literal|1
decl_stmt|;
name|struct
name|crypto_public_key
modifier|*
name|server_rsa_key
decl_stmt|;
name|struct
name|tls_verify_hash
name|verify
decl_stmt|;
define|#
directive|define
name|MAX_CIPHER_COUNT
value|30
name|u16
name|cipher_suites
index|[
name|MAX_CIPHER_COUNT
index|]
decl_stmt|;
name|size_t
name|num_cipher_suites
decl_stmt|;
name|u16
name|prev_cipher_suite
decl_stmt|;
name|u8
modifier|*
name|client_hello_ext
decl_stmt|;
name|size_t
name|client_hello_ext_len
decl_stmt|;
comment|/* The prime modulus used for Diffie-Hellman */
name|u8
modifier|*
name|dh_p
decl_stmt|;
name|size_t
name|dh_p_len
decl_stmt|;
comment|/* The generator used for Diffie-Hellman */
name|u8
modifier|*
name|dh_g
decl_stmt|;
name|size_t
name|dh_g_len
decl_stmt|;
comment|/* The server's Diffie-Hellman public value */
name|u8
modifier|*
name|dh_ys
decl_stmt|;
name|size_t
name|dh_ys_len
decl_stmt|;
name|struct
name|tlsv1_credentials
modifier|*
name|cred
decl_stmt|;
name|tlsv1_client_session_ticket_cb
name|session_ticket_cb
decl_stmt|;
name|void
modifier|*
name|session_ticket_cb_ctx
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|void
name|tls_alert
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
name|u8
name|level
parameter_list|,
name|u8
name|description
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|tlsv1_client_free_dh
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tls_derive_pre_master_secret
parameter_list|(
name|u8
modifier|*
name|pre_master_secret
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tls_derive_keys
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
specifier|const
name|u8
modifier|*
name|pre_master_secret
parameter_list|,
name|size_t
name|pre_master_secret_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
modifier|*
name|tls_send_client_hello
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
name|size_t
modifier|*
name|out_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
modifier|*
name|tlsv1_client_send_alert
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
name|u8
name|level
parameter_list|,
name|u8
name|description
parameter_list|,
name|size_t
modifier|*
name|out_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
modifier|*
name|tlsv1_client_handshake_write
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
name|size_t
modifier|*
name|out_len
parameter_list|,
name|int
name|no_appl_data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tlsv1_client_process_handshake
parameter_list|(
name|struct
name|tlsv1_client
modifier|*
name|conn
parameter_list|,
name|u8
name|ct
parameter_list|,
specifier|const
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
modifier|*
name|len
parameter_list|,
name|u8
modifier|*
modifier|*
name|out_data
parameter_list|,
name|size_t
modifier|*
name|out_len
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* TLSV1_CLIENT_I_H */
end_comment

end_unit

