begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * FST module - FST group object definitions  * Copyright (c) 2014, Qualcomm Atheros, Inc.  *  * This software may be distributed under the terms of the BSD license.  * See README for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|FST_GROUP_H
end_ifndef

begin_define
define|#
directive|define
name|FST_GROUP_H
end_define

begin_struct
struct|struct
name|fst_group
block|{
name|char
name|group_id
index|[
name|IFNAMSIZ
operator|+
literal|1
index|]
decl_stmt|;
name|struct
name|dl_list
name|ifaces
decl_stmt|;
name|u8
name|dialog_token
decl_stmt|;
name|u32
name|fsts_id
decl_stmt|;
name|struct
name|dl_list
name|global_groups_lentry
decl_stmt|;
block|}
struct|;
end_struct

begin_struct_decl
struct_decl|struct
name|session_transition_ie
struct_decl|;
end_struct_decl

begin_define
define|#
directive|define
name|foreach_fst_group_iface
parameter_list|(
name|g
parameter_list|,
name|i
parameter_list|)
define|\
value|dl_list_for_each((i),&(g)->ifaces, struct fst_iface, group_lentry)
end_define

begin_function_decl
name|struct
name|fst_group
modifier|*
name|fst_group_create
parameter_list|(
specifier|const
name|char
modifier|*
name|group_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fst_group_attach_iface
parameter_list|(
name|struct
name|fst_group
modifier|*
name|g
parameter_list|,
name|struct
name|fst_iface
modifier|*
name|i
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fst_group_detach_iface
parameter_list|(
name|struct
name|fst_group
modifier|*
name|g
parameter_list|,
name|struct
name|fst_iface
modifier|*
name|i
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fst_group_delete
parameter_list|(
name|struct
name|fst_group
modifier|*
name|g
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fst_group_update_ie
parameter_list|(
name|struct
name|fst_group
modifier|*
name|g
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|Boolean
name|fst_group_has_ifaces
parameter_list|(
name|struct
name|fst_group
modifier|*
name|g
parameter_list|)
block|{
return|return
operator|!
name|dl_list_empty
argument_list|(
operator|&
name|g
operator|->
name|ifaces
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|struct
name|fst_iface
modifier|*
name|fst_group_first_iface
parameter_list|(
name|struct
name|fst_group
modifier|*
name|g
parameter_list|)
block|{
return|return
name|dl_list_first
argument_list|(
operator|&
name|g
operator|->
name|ifaces
argument_list|,
expr|struct
name|fst_iface
argument_list|,
name|group_lentry
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
specifier|const
name|char
modifier|*
name|fst_group_get_id
parameter_list|(
name|struct
name|fst_group
modifier|*
name|g
parameter_list|)
block|{
return|return
name|g
operator|->
name|group_id
return|;
block|}
end_function

begin_function_decl
name|Boolean
name|fst_group_delete_if_empty
parameter_list|(
name|struct
name|fst_group
modifier|*
name|group
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|fst_iface
modifier|*
name|fst_group_get_iface_by_name
parameter_list|(
name|struct
name|fst_group
modifier|*
name|g
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|fst_iface
modifier|*
name|fst_group_find_new_iface_by_stie
parameter_list|(
name|struct
name|fst_group
modifier|*
name|g
parameter_list|,
name|struct
name|fst_iface
modifier|*
name|iface
parameter_list|,
specifier|const
name|u8
modifier|*
name|peer_addr
parameter_list|,
specifier|const
name|struct
name|session_transition_ie
modifier|*
name|stie
parameter_list|,
name|u8
modifier|*
name|iface_peer_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|fst_iface
modifier|*
name|fst_group_get_new_iface_by_stie_and_mbie
parameter_list|(
name|struct
name|fst_group
modifier|*
name|g
parameter_list|,
specifier|const
name|u8
modifier|*
name|mb_ies_buff
parameter_list|,
name|size_t
name|mb_ies_size
parameter_list|,
specifier|const
name|struct
name|session_transition_ie
modifier|*
name|stie
parameter_list|,
name|u8
modifier|*
name|iface_peer_addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u8
name|fst_group_assign_dialog_token
parameter_list|(
name|struct
name|fst_group
modifier|*
name|g
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u32
name|fst_group_assign_fsts_id
parameter_list|(
name|struct
name|fst_group
modifier|*
name|g
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|struct
name|dl_list
name|fst_global_groups_list
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|foreach_fst_group
parameter_list|(
name|g
parameter_list|)
define|\
value|dl_list_for_each((g),&fst_global_groups_list, \ 			 struct fst_group, global_groups_lentry)
end_define

begin_function
specifier|static
specifier|inline
name|struct
name|fst_group
modifier|*
name|fst_first_group
parameter_list|(
name|void
parameter_list|)
block|{
return|return
name|dl_list_first
argument_list|(
operator|&
name|fst_global_groups_list
argument_list|,
expr|struct
name|fst_group
argument_list|,
name|global_groups_lentry
argument_list|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* FST_GROUP_H */
end_comment

end_unit

