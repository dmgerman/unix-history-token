begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Wi-Fi Protected Setup - message definitions  * Copyright (c) 2008, Jouni Malinen<j@w1.fi>  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License version 2 as  * published by the Free Software Foundation.  *  * Alternatively, this software may be distributed under the terms of BSD  * license.  *  * See README and COPYING for more details.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|WPS_DEFS_H
end_ifndef

begin_define
define|#
directive|define
name|WPS_DEFS_H
end_define

begin_define
define|#
directive|define
name|WPS_VERSION
value|0x10
end_define

begin_comment
comment|/* Diffie-Hellman 1536-bit MODP Group; RFC 3526, Group 5 */
end_comment

begin_define
define|#
directive|define
name|WPS_DH_GROUP
value|5
end_define

begin_define
define|#
directive|define
name|WPS_UUID_LEN
value|16
end_define

begin_define
define|#
directive|define
name|WPS_NONCE_LEN
value|16
end_define

begin_define
define|#
directive|define
name|WPS_AUTHENTICATOR_LEN
value|8
end_define

begin_define
define|#
directive|define
name|WPS_AUTHKEY_LEN
value|32
end_define

begin_define
define|#
directive|define
name|WPS_KEYWRAPKEY_LEN
value|16
end_define

begin_define
define|#
directive|define
name|WPS_EMSK_LEN
value|32
end_define

begin_define
define|#
directive|define
name|WPS_PSK_LEN
value|16
end_define

begin_define
define|#
directive|define
name|WPS_SECRET_NONCE_LEN
value|16
end_define

begin_define
define|#
directive|define
name|WPS_HASH_LEN
value|32
end_define

begin_define
define|#
directive|define
name|WPS_KWA_LEN
value|8
end_define

begin_define
define|#
directive|define
name|WPS_MGMTAUTHKEY_LEN
value|32
end_define

begin_define
define|#
directive|define
name|WPS_MGMTENCKEY_LEN
value|16
end_define

begin_define
define|#
directive|define
name|WPS_MGMT_KEY_ID_LEN
value|16
end_define

begin_comment
comment|/* Attribute Types */
end_comment

begin_enum
enum|enum
name|wps_attribute
block|{
name|ATTR_AP_CHANNEL
init|=
literal|0x1001
block|,
name|ATTR_ASSOC_STATE
init|=
literal|0x1002
block|,
name|ATTR_AUTH_TYPE
init|=
literal|0x1003
block|,
name|ATTR_AUTH_TYPE_FLAGS
init|=
literal|0x1004
block|,
name|ATTR_AUTHENTICATOR
init|=
literal|0x1005
block|,
name|ATTR_CONFIG_METHODS
init|=
literal|0x1008
block|,
name|ATTR_CONFIG_ERROR
init|=
literal|0x1009
block|,
name|ATTR_CONFIRM_URL4
init|=
literal|0x100a
block|,
name|ATTR_CONFIRM_URL6
init|=
literal|0x100b
block|,
name|ATTR_CONN_TYPE
init|=
literal|0x100c
block|,
name|ATTR_CONN_TYPE_FLAGS
init|=
literal|0x100d
block|,
name|ATTR_CRED
init|=
literal|0x100e
block|,
name|ATTR_ENCR_TYPE
init|=
literal|0x100f
block|,
name|ATTR_ENCR_TYPE_FLAGS
init|=
literal|0x1010
block|,
name|ATTR_DEV_NAME
init|=
literal|0x1011
block|,
name|ATTR_DEV_PASSWORD_ID
init|=
literal|0x1012
block|,
name|ATTR_E_HASH1
init|=
literal|0x1014
block|,
name|ATTR_E_HASH2
init|=
literal|0x1015
block|,
name|ATTR_E_SNONCE1
init|=
literal|0x1016
block|,
name|ATTR_E_SNONCE2
init|=
literal|0x1017
block|,
name|ATTR_ENCR_SETTINGS
init|=
literal|0x1018
block|,
name|ATTR_ENROLLEE_NONCE
init|=
literal|0x101a
block|,
name|ATTR_FEATURE_ID
init|=
literal|0x101b
block|,
name|ATTR_IDENTITY
init|=
literal|0x101c
block|,
name|ATTR_IDENTITY_PROOF
init|=
literal|0x101d
block|,
name|ATTR_KEY_WRAP_AUTH
init|=
literal|0x101e
block|,
name|ATTR_KEY_ID
init|=
literal|0x101f
block|,
name|ATTR_MAC_ADDR
init|=
literal|0x1020
block|,
name|ATTR_MANUFACTURER
init|=
literal|0x1021
block|,
name|ATTR_MSG_TYPE
init|=
literal|0x1022
block|,
name|ATTR_MODEL_NAME
init|=
literal|0x1023
block|,
name|ATTR_MODEL_NUMBER
init|=
literal|0x1024
block|,
name|ATTR_NETWORK_INDEX
init|=
literal|0x1026
block|,
name|ATTR_NETWORK_KEY
init|=
literal|0x1027
block|,
name|ATTR_NETWORK_KEY_INDEX
init|=
literal|0x1028
block|,
name|ATTR_NEW_DEVICE_NAME
init|=
literal|0x1029
block|,
name|ATTR_NEW_PASSWORD
init|=
literal|0x102a
block|,
name|ATTR_OOB_DEVICE_PASSWORD
init|=
literal|0x102c
block|,
name|ATTR_OS_VERSION
init|=
literal|0x102d
block|,
name|ATTR_POWER_LEVEL
init|=
literal|0x102f
block|,
name|ATTR_PSK_CURRENT
init|=
literal|0x1030
block|,
name|ATTR_PSK_MAX
init|=
literal|0x1031
block|,
name|ATTR_PUBLIC_KEY
init|=
literal|0x1032
block|,
name|ATTR_RADIO_ENABLE
init|=
literal|0x1033
block|,
name|ATTR_REBOOT
init|=
literal|0x1034
block|,
name|ATTR_REGISTRAR_CURRENT
init|=
literal|0x1035
block|,
name|ATTR_REGISTRAR_ESTABLISHED
init|=
literal|0x1036
block|,
name|ATTR_REGISTRAR_LIST
init|=
literal|0x1037
block|,
name|ATTR_REGISTRAR_MAX
init|=
literal|0x1038
block|,
name|ATTR_REGISTRAR_NONCE
init|=
literal|0x1039
block|,
name|ATTR_REQUEST_TYPE
init|=
literal|0x103a
block|,
name|ATTR_RESPONSE_TYPE
init|=
literal|0x103b
block|,
name|ATTR_RF_BANDS
init|=
literal|0x103c
block|,
name|ATTR_R_HASH1
init|=
literal|0x103d
block|,
name|ATTR_R_HASH2
init|=
literal|0x103e
block|,
name|ATTR_R_SNONCE1
init|=
literal|0x103f
block|,
name|ATTR_R_SNONCE2
init|=
literal|0x1040
block|,
name|ATTR_SELECTED_REGISTRAR
init|=
literal|0x1041
block|,
name|ATTR_SERIAL_NUMBER
init|=
literal|0x1042
block|,
name|ATTR_WPS_STATE
init|=
literal|0x1044
block|,
name|ATTR_SSID
init|=
literal|0x1045
block|,
name|ATTR_TOTAL_NETWORKS
init|=
literal|0x1046
block|,
name|ATTR_UUID_E
init|=
literal|0x1047
block|,
name|ATTR_UUID_R
init|=
literal|0x1048
block|,
name|ATTR_VENDOR_EXT
init|=
literal|0x1049
block|,
name|ATTR_VERSION
init|=
literal|0x104a
block|,
name|ATTR_X509_CERT_REQ
init|=
literal|0x104b
block|,
name|ATTR_X509_CERT
init|=
literal|0x104c
block|,
name|ATTR_EAP_IDENTITY
init|=
literal|0x104d
block|,
name|ATTR_MSG_COUNTER
init|=
literal|0x104e
block|,
name|ATTR_PUBKEY_HASH
init|=
literal|0x104f
block|,
name|ATTR_REKEY_KEY
init|=
literal|0x1050
block|,
name|ATTR_KEY_LIFETIME
init|=
literal|0x1051
block|,
name|ATTR_PERMITTED_CFG_METHODS
init|=
literal|0x1052
block|,
name|ATTR_SELECTED_REGISTRAR_CONFIG_METHODS
init|=
literal|0x1053
block|,
name|ATTR_PRIMARY_DEV_TYPE
init|=
literal|0x1054
block|,
name|ATTR_SECONDARY_DEV_TYP_ELIST
init|=
literal|0x1055
block|,
name|ATTR_PORTABLE_DEV
init|=
literal|0x1056
block|,
name|ATTR_AP_SETUP_LOCKED
init|=
literal|0x1057
block|,
name|ATTR_APPLICATION_EXT
init|=
literal|0x1058
block|,
name|ATTR_EAP_TYPE
init|=
literal|0x1059
block|,
name|ATTR_IV
init|=
literal|0x1060
block|,
name|ATTR_KEY_PROVIDED_AUTO
init|=
literal|0x1061
block|,
name|ATTR_802_1X_ENABLED
init|=
literal|0x1062
block|,
name|ATTR_APPSESSIONKEY
init|=
literal|0x1063
block|,
name|ATTR_WEPTRANSMITKEY
init|=
literal|0x1064
block|}
enum|;
end_enum

begin_comment
comment|/* Device Password ID */
end_comment

begin_enum
enum|enum
name|wps_dev_password_id
block|{
name|DEV_PW_DEFAULT
init|=
literal|0x0000
block|,
name|DEV_PW_USER_SPECIFIED
init|=
literal|0x0001
block|,
name|DEV_PW_MACHINE_SPECIFIED
init|=
literal|0x0002
block|,
name|DEV_PW_REKEY
init|=
literal|0x0003
block|,
name|DEV_PW_PUSHBUTTON
init|=
literal|0x0004
block|,
name|DEV_PW_REGISTRAR_SPECIFIED
init|=
literal|0x0005
block|}
enum|;
end_enum

begin_comment
comment|/* Message Type */
end_comment

begin_enum
enum|enum
name|wps_msg_type
block|{
name|WPS_Beacon
init|=
literal|0x01
block|,
name|WPS_ProbeRequest
init|=
literal|0x02
block|,
name|WPS_ProbeResponse
init|=
literal|0x03
block|,
name|WPS_M1
init|=
literal|0x04
block|,
name|WPS_M2
init|=
literal|0x05
block|,
name|WPS_M2D
init|=
literal|0x06
block|,
name|WPS_M3
init|=
literal|0x07
block|,
name|WPS_M4
init|=
literal|0x08
block|,
name|WPS_M5
init|=
literal|0x09
block|,
name|WPS_M6
init|=
literal|0x0a
block|,
name|WPS_M7
init|=
literal|0x0b
block|,
name|WPS_M8
init|=
literal|0x0c
block|,
name|WPS_WSC_ACK
init|=
literal|0x0d
block|,
name|WPS_WSC_NACK
init|=
literal|0x0e
block|,
name|WPS_WSC_DONE
init|=
literal|0x0f
block|}
enum|;
end_enum

begin_comment
comment|/* Authentication Type Flags */
end_comment

begin_define
define|#
directive|define
name|WPS_AUTH_OPEN
value|0x0001
end_define

begin_define
define|#
directive|define
name|WPS_AUTH_WPAPSK
value|0x0002
end_define

begin_define
define|#
directive|define
name|WPS_AUTH_SHARED
value|0x0004
end_define

begin_define
define|#
directive|define
name|WPS_AUTH_WPA
value|0x0008
end_define

begin_define
define|#
directive|define
name|WPS_AUTH_WPA2
value|0x0010
end_define

begin_define
define|#
directive|define
name|WPS_AUTH_WPA2PSK
value|0x0020
end_define

begin_define
define|#
directive|define
name|WPS_AUTH_TYPES
value|(WPS_AUTH_OPEN | WPS_AUTH_WPAPSK | WPS_AUTH_SHARED | \ 			WPS_AUTH_WPA | WPS_AUTH_WPA2 | WPS_AUTH_WPA2PSK)
end_define

begin_comment
comment|/* Encryption Type Flags */
end_comment

begin_define
define|#
directive|define
name|WPS_ENCR_NONE
value|0x0001
end_define

begin_define
define|#
directive|define
name|WPS_ENCR_WEP
value|0x0002
end_define

begin_define
define|#
directive|define
name|WPS_ENCR_TKIP
value|0x0004
end_define

begin_define
define|#
directive|define
name|WPS_ENCR_AES
value|0x0008
end_define

begin_define
define|#
directive|define
name|WPS_ENCR_TYPES
value|(WPS_ENCR_NONE | WPS_ENCR_WEP | WPS_ENCR_TKIP | \ 			WPS_ENCR_AES)
end_define

begin_comment
comment|/* Configuration Error */
end_comment

begin_enum
enum|enum
name|wps_config_error
block|{
name|WPS_CFG_NO_ERROR
init|=
literal|0
block|,
name|WPS_CFG_OOB_IFACE_READ_ERROR
init|=
literal|1
block|,
name|WPS_CFG_DECRYPTION_CRC_FAILURE
init|=
literal|2
block|,
name|WPS_CFG_24_CHAN_NOT_SUPPORTED
init|=
literal|3
block|,
name|WPS_CFG_50_CHAN_NOT_SUPPORTED
init|=
literal|4
block|,
name|WPS_CFG_SIGNAL_TOO_WEAK
init|=
literal|5
block|,
name|WPS_CFG_NETWORK_AUTH_FAILURE
init|=
literal|6
block|,
name|WPS_CFG_NETWORK_ASSOC_FAILURE
init|=
literal|7
block|,
name|WPS_CFG_NO_DHCP_RESPONSE
init|=
literal|8
block|,
name|WPS_CFG_FAILED_DHCP_CONFIG
init|=
literal|9
block|,
name|WPS_CFG_IP_ADDR_CONFLICT
init|=
literal|10
block|,
name|WPS_CFG_NO_CONN_TO_REGISTRAR
init|=
literal|11
block|,
name|WPS_CFG_MULTIPLE_PBC_DETECTED
init|=
literal|12
block|,
name|WPS_CFG_ROGUE_SUSPECTED
init|=
literal|13
block|,
name|WPS_CFG_DEVICE_BUSY
init|=
literal|14
block|,
name|WPS_CFG_SETUP_LOCKED
init|=
literal|15
block|,
name|WPS_CFG_MSG_TIMEOUT
init|=
literal|16
block|,
name|WPS_CFG_REG_SESS_TIMEOUT
init|=
literal|17
block|,
name|WPS_CFG_DEV_PASSWORD_AUTH_FAILURE
init|=
literal|18
block|}
enum|;
end_enum

begin_comment
comment|/* RF Bands */
end_comment

begin_define
define|#
directive|define
name|WPS_RF_24GHZ
value|0x01
end_define

begin_define
define|#
directive|define
name|WPS_RF_50GHZ
value|0x02
end_define

begin_comment
comment|/* Config Methods */
end_comment

begin_define
define|#
directive|define
name|WPS_CONFIG_USBA
value|0x0001
end_define

begin_define
define|#
directive|define
name|WPS_CONFIG_ETHERNET
value|0x0002
end_define

begin_define
define|#
directive|define
name|WPS_CONFIG_LABEL
value|0x0004
end_define

begin_define
define|#
directive|define
name|WPS_CONFIG_DISPLAY
value|0x0008
end_define

begin_define
define|#
directive|define
name|WPS_CONFIG_EXT_NFC_TOKEN
value|0x0010
end_define

begin_define
define|#
directive|define
name|WPS_CONFIG_INT_NFC_TOKEN
value|0x0020
end_define

begin_define
define|#
directive|define
name|WPS_CONFIG_NFC_INTERFACE
value|0x0040
end_define

begin_define
define|#
directive|define
name|WPS_CONFIG_PUSHBUTTON
value|0x0080
end_define

begin_define
define|#
directive|define
name|WPS_CONFIG_KEYPAD
value|0x0100
end_define

begin_comment
comment|/* Connection Type Flags */
end_comment

begin_define
define|#
directive|define
name|WPS_CONN_ESS
value|0x01
end_define

begin_define
define|#
directive|define
name|WPS_CONN_IBSS
value|0x02
end_define

begin_comment
comment|/* Wi-Fi Protected Setup State */
end_comment

begin_enum
enum|enum
name|wps_state
block|{
name|WPS_STATE_NOT_CONFIGURED
init|=
literal|1
block|,
name|WPS_STATE_CONFIGURED
init|=
literal|2
block|}
enum|;
end_enum

begin_comment
comment|/* Association State */
end_comment

begin_enum
enum|enum
name|wps_assoc_state
block|{
name|WPS_ASSOC_NOT_ASSOC
init|=
literal|0
block|,
name|WPS_ASSOC_CONN_SUCCESS
init|=
literal|1
block|,
name|WPS_ASSOC_CFG_FAILURE
init|=
literal|2
block|,
name|WPS_ASSOC_FAILURE
init|=
literal|3
block|,
name|WPS_ASSOC_IP_FAILURE
init|=
literal|4
block|}
enum|;
end_enum

begin_comment
comment|/* Primary Device Type */
end_comment

begin_struct
struct|struct
name|wps_dev_type
block|{
name|u8
name|categ_id
index|[
literal|2
index|]
decl_stmt|;
name|u8
name|oui
index|[
literal|4
index|]
decl_stmt|;
name|u8
name|sub_categ_id
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|WPS_DEV_OUI_WFA
value|0x0050f204
end_define

begin_enum
enum|enum
name|wps_dev_categ
block|{
name|WPS_DEV_COMPUTER
init|=
literal|1
block|,
name|WPS_DEV_INPUT
init|=
literal|2
block|,
name|WPS_DEV_PRINTER
init|=
literal|3
block|,
name|WPS_DEV_CAMERA
init|=
literal|4
block|,
name|WPS_DEV_STORAGE
init|=
literal|5
block|,
name|WPS_DEV_NETWORK_INFRA
init|=
literal|6
block|,
name|WPS_DEV_DISPLAY
init|=
literal|7
block|,
name|WPS_DEV_MULTIMEDIA
init|=
literal|8
block|,
name|WPS_DEV_GAMING
init|=
literal|9
block|,
name|WPS_DEV_PHONE
init|=
literal|10
block|}
enum|;
end_enum

begin_enum
enum|enum
name|wps_dev_subcateg
block|{
name|WPS_DEV_COMPUTER_PC
init|=
literal|1
block|,
name|WPS_DEV_COMPUTER_SERVER
init|=
literal|2
block|,
name|WPS_DEV_COMPUTER_MEDIA_CENTER
init|=
literal|3
block|,
name|WPS_DEV_PRINTER_PRINTER
init|=
literal|1
block|,
name|WPS_DEV_PRINTER_SCANNER
init|=
literal|2
block|,
name|WPS_DEV_CAMERA_DIGITAL_STILL_CAMERA
init|=
literal|1
block|,
name|WPS_DEV_STORAGE_NAS
init|=
literal|1
block|,
name|WPS_DEV_NETWORK_INFRA_AP
init|=
literal|1
block|,
name|WPS_DEV_NETWORK_INFRA_ROUTER
init|=
literal|2
block|,
name|WPS_DEV_NETWORK_INFRA_SWITCH
init|=
literal|3
block|,
name|WPS_DEV_DISPLAY_TV
init|=
literal|1
block|,
name|WPS_DEV_DISPLAY_PICTURE_FRAME
init|=
literal|2
block|,
name|WPS_DEV_DISPLAY_PROJECTOR
init|=
literal|3
block|,
name|WPS_DEV_MULTIMEDIA_DAR
init|=
literal|1
block|,
name|WPS_DEV_MULTIMEDIA_PVR
init|=
literal|2
block|,
name|WPS_DEV_MULTIMEDIA_MCX
init|=
literal|3
block|,
name|WPS_DEV_GAMING_XBOX
init|=
literal|1
block|,
name|WPS_DEV_GAMING_XBOX360
init|=
literal|2
block|,
name|WPS_DEV_GAMING_PLAYSTATION
init|=
literal|3
block|,
name|WPS_DEV_PHONE_WINDOWS_MOBILE
init|=
literal|1
block|}
enum|;
end_enum

begin_comment
comment|/* Request Type */
end_comment

begin_enum
enum|enum
name|wps_request_type
block|{
name|WPS_REQ_ENROLLEE_INFO
init|=
literal|0
block|,
name|WPS_REQ_ENROLLEE
init|=
literal|1
block|,
name|WPS_REQ_REGISTRAR
init|=
literal|2
block|,
name|WPS_REQ_WLAN_MANAGER_REGISTRAR
init|=
literal|3
block|}
enum|;
end_enum

begin_comment
comment|/* Response Type */
end_comment

begin_enum
enum|enum
name|wps_response_type
block|{
name|WPS_RESP_ENROLLEE_INFO
init|=
literal|0
block|,
name|WPS_RESP_ENROLLEE
init|=
literal|1
block|,
name|WPS_RESP_REGISTRAR
init|=
literal|2
block|,
name|WPS_RESP_AP
init|=
literal|3
block|}
enum|;
end_enum

begin_comment
comment|/* Walk Time for push button configuration (in seconds) */
end_comment

begin_define
define|#
directive|define
name|WPS_PBC_WALK_TIME
value|120
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WPS_DEFS_H */
end_comment

end_unit

