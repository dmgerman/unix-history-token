begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License, Version 1.0 only  * (the "License").  You may not use this file except in compliance  * with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2005 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_comment
comment|/* Libintl is a library of advanced internationalization functions. */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_LIBINTL_H
end_ifndef

begin_define
define|#
directive|define
name|_LIBINTL_H
end_define

begin_pragma
pragma|#
directive|pragma
name|ident
literal|"%Z%%M%	%I%	%E% SMI"
end_pragma

begin_include
include|#
directive|include
file|<sys/isa_defs.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/*  * wchar_t is a built-in type in standard C++ and as such is not  * defined here when using standard C++. However, the GNU compiler  * fixincludes utility nonetheless creates its own version of this  * header for use by gcc and g++. In that version it adds a redundant  * guard for __cplusplus. To avoid the creation of a gcc/g++ specific  * header we need to include the following magic comment:  *  * we must use the C++ compiler's type  *  * The above comment should not be removed or changed until GNU  * gcc/fixinc/inclhack.def is updated to bypass this header.  */
if|#
directive|if
operator|!
name|defined
argument_list|(
name|__cplusplus
argument_list|)
operator|||
operator|(
name|__cplusplus
operator|<
literal|199711L
operator|&&
operator|!
name|defined
argument_list|(
name|__GNUG__
argument_list|)
operator|)
ifndef|#
directive|ifndef
name|_WCHAR_T
define|#
directive|define
name|_WCHAR_T
if|#
directive|if
name|defined
argument_list|(
name|_LP64
argument_list|)
typedef|typedef
name|int
name|wchar_t
typedef|;
else|#
directive|else
typedef|typedef
name|long
name|wchar_t
typedef|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* !_WCHAR_T */
endif|#
directive|endif
comment|/* !defined(__cplusplus) ... */
define|#
directive|define
name|TEXTDOMAINMAX
value|256
ifdef|#
directive|ifdef
name|__STDC__
specifier|extern
name|char
modifier|*
name|dcgettext
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|int
parameter_list|)
function_decl|;
specifier|extern
name|char
modifier|*
name|dgettext
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|char
modifier|*
name|gettext
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|char
modifier|*
name|textdomain
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|char
modifier|*
name|bindtextdomain
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
comment|/*  * LI18NUX 2000 Globalization Specification Version 1.0  * with Amendment 2  */
specifier|extern
name|char
modifier|*
name|dcngettext
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|unsigned
name|long
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|char
modifier|*
name|dngettext
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|unsigned
name|long
name|int
parameter_list|)
function_decl|;
specifier|extern
name|char
modifier|*
name|ngettext
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|unsigned
name|long
name|int
parameter_list|)
function_decl|;
specifier|extern
name|char
modifier|*
name|bind_textdomain_codeset
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
comment|/* Word handling functions --- requires dynamic linking */
comment|/* Warning: these are experimental and subject to change. */
specifier|extern
name|int
name|wdinit
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|int
name|wdchkind
parameter_list|(
name|wchar_t
parameter_list|)
function_decl|;
specifier|extern
name|int
name|wdbindf
parameter_list|(
name|wchar_t
parameter_list|,
name|wchar_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|wchar_t
modifier|*
name|wddelim
parameter_list|(
name|wchar_t
parameter_list|,
name|wchar_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|wchar_t
name|mcfiller
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|int
name|mcwrap
parameter_list|(
name|void
parameter_list|)
function_decl|;
else|#
directive|else
specifier|extern
name|char
modifier|*
name|dcgettext
parameter_list|()
function_decl|;
specifier|extern
name|char
modifier|*
name|dgettext
parameter_list|()
function_decl|;
specifier|extern
name|char
modifier|*
name|gettext
parameter_list|()
function_decl|;
specifier|extern
name|char
modifier|*
name|textdomain
parameter_list|()
function_decl|;
specifier|extern
name|char
modifier|*
name|bindtextdomain
parameter_list|()
function_decl|;
comment|/*  * LI18NUX 2000 Globalization Specification Version 1.0  * with Amendment 2  */
specifier|extern
name|char
modifier|*
name|dcngettext
parameter_list|()
function_decl|;
specifier|extern
name|char
modifier|*
name|dngettext
parameter_list|()
function_decl|;
specifier|extern
name|char
modifier|*
name|ngettext
parameter_list|()
function_decl|;
specifier|extern
name|char
modifier|*
name|bind_textdomain_codeset
parameter_list|()
function_decl|;
comment|/* Word handling functions --- requires dynamic linking */
comment|/* Warning: these are experimental and subject to change. */
specifier|extern
name|int
name|wdinit
parameter_list|()
function_decl|;
specifier|extern
name|int
name|wdchkind
parameter_list|()
function_decl|;
specifier|extern
name|int
name|wdbindf
parameter_list|()
function_decl|;
specifier|extern
name|wchar_t
modifier|*
name|wddelim
parameter_list|()
function_decl|;
specifier|extern
name|wchar_t
name|mcfiller
parameter_list|()
function_decl|;
specifier|extern
name|int
name|mcwrap
parameter_list|()
function_decl|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _LIBINTL_H */
end_comment

end_unit

