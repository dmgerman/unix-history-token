begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  **************************************************************************  *                       DHRYSTONE 2.1 BENCHMARK PC VERSION  **************************************************************************  *  *                   "DHRYSTONE" Benchmark Program  *                   -----------------------------  *                                                                              *  Version:    C, Version 2.1  *                                                                              *  File:       dhry.h (part 1 of 3)  *  *  Date:       May 25, 1988  *  *  Author:     Reinhold P. Weicker  *                      Siemens AG, AUT E 51  *                      Postfach 3220  *                      8520 Erlangen  *                      Germany (West)  *                              Phone:  [+49]-9131-7-20330  *                                      (8-17 Central European Time)  *                              Usenet: ..!mcsun!unido!estevax!weicker  *  *            Original Version (in Ada) published in  *            "Communications of the ACM" vol. 27., no. 10 (Oct. 1984),  *            pp. 1013 - 1030, together with the statistics  *            on which the distribution of statements etc. is based.  *  *            In this C version, the following C library functions are used:  *            - strcpy, strcmp (inside the measurement loop)  *            - printf, scanf (outside the measurement loop)  *            In addition, Berkeley UNIX system calls "times ()" or "time ()"  *            are used for execution time measurement. For measurements  *            on other systems, these calls have to be changed.  *  *  Collection of Results:  *              Reinhold Weicker (address see above) and  *                *              Rick Richardson  *              PC Research. Inc.  *              94 Apple Orchard Drive  *              Tinton Falls, NJ 07724  *                      Phone:  (201) 389-8963 (9-17 EST)                 *                      Usenet: ...!uunet!pcrat!rick  *  *      Please send results to Rick Richardson and/or Reinhold Weicker.  *      Complete information should be given on hardware and software used.  *      Hardware information includes: Machine type, CPU, type and size  *      of caches; for microprocessors: clock frequency, memory speed  *      (number of wait states).  *      Software information includes: Compiler (and runtime library)  *      manufacturer and version, compilation switches, OS version.  *      The Operating System version may give an indication about the  *      compiler; Dhrystone itself performs no OS calls in the measurement  *      loop.  *  *      The complete output generated by the program should be mailed  *      such that at least some checks for correctness can be made.  *  **************************************************************************  *  *  This version has changes made by Roy Longbottom to conform to a common  *  format for a series of standard benchmarks for PCs:  *  *  Running time greater than 5 seconds due to inaccuracy of the PC clock.  *  *  Automatic adjustment of run time, no manually inserted parameters.  *  *  Initial display of calibration times to confirm linearity.  *  *  Display of results within one screen (or at a slow speed as the test  *  progresses) so that it can be seen to have run successfully.   *  *  Facilities to type in details of system used etc.  *  *  All results and details appended to a results file.  *  *  *  Roy Longbottom  *  101323.2241@compuserve.com  *  **************************************************************************  *  *  For details of history, changes, other defines, benchmark construction  *  statistics see official versions from ftp.nosc.mil/pub/aburto where  *  the latest table of results (dhry.tbl) are available. See also  *  netlib@ornl.gov  *  **************************************************************************  *  * Defines:     The following "Defines" are possible:  *              -DREG=register          (default: Not defined)  *                      As an approximation to what an average C programmer  *                      might do, the "register" storage class is applied  *                      (if enabled by -DREG=register)  *                      - for local variables, if they are used (dynamically)  *                        five or more times  *                      - for parameters if they are used (dynamically)  *                        six or more times  *                      Note that an optimal "register" strategy is  *                      compiler-dependent, and that "register" declarations  *                      do not necessarily lead to faster execution.  *              -DNOSTRUCTASSIGN        (default: Not defined)  *                      Define if the C compiler does not support  *                      assignment of structures.  *              -DNOENUMS               (default: Not defined)  *                      Define if the C compiler does not support  *                      enumeration types.  ***************************************************************************  *  *  Compilation model and measurement (IMPORTANT):  *  *  This C version of Dhrystone consists of three files:  *  - dhry.h (this file, containing global definitions and comments)  *  - dhry_1.c (containing the code corresponding to Ada package Pack_1)  *  - dhry_2.c (containing the code corresponding to Ada package Pack_2)  *  *  The following "ground rules" apply for measurements:  *  - Separate compilation  *  - No procedure merging  *  - Otherwise, compiler optimizations are allowed but should be indicated  *  - Default results are those without register declarations  *  See the companion paper "Rationale for Dhrystone Version 2" for a more  *  detailed discussion of these ground rules.  *  *  For 16-Bit processors (e.g. 80186, 80286), times for all compilation  *  models ("small", "medium", "large" etc.) should be given if possible,  *  together with a definition of these models for the compiler system used.  *  **************************************************************************  *                Examples of Pentium Results  *  * Dhrystone Benchmark  Version 2.1 (Language: C)  *  * Month run            4/1996  * PC model             Escom  * CPU                  Pentium  * Clock MHz            100  * Cache                256K  * Options              Neptune chipset  * OS/DOS               Windows 95  * Compiler             Watcom C/ C++ 10.5 Win386   * OptLevel             -otexan -zp8 -fp5 -5r  * Run by               Roy Longbottom  * From                 UK  * Mail                 101323.2241@compuserve.com  *   * Final values         (* implementation-dependent):  *  * Int_Glob:      O.K.  5  * Bool_Glob:     O.K.  1  * Ch_1_Glob:     O.K.  A  * Ch_2_Glob:     O.K.  B  * Arr_1_Glob[8]: O.K.  7  * Arr_2_Glob8/7: O.K.     1600010  * Ptr_Glob->    *   Ptr_Comp:       *  98008  *   Discr:       O.K.  0  *   Enum_Comp:   O.K.  2  *   Int_Comp:    O.K.  17  *   Str_Comp:    O.K.  DHRYSTONE PROGRAM, SOME STRING  * Next_Ptr_Glob->   *   Ptr_Comp:       *  98008 same as above  *   Discr:       O.K.  0  *   Enum_Comp:   O.K.  1  *   Int_Comp:    O.K.  18  *   Str_Comp:    O.K.  DHRYSTONE PROGRAM, SOME STRING  * Int_1_Loc:     O.K.  5  * Int_2_Loc:     O.K.  13  * Int_3_Loc:     O.K.  7  * Enum_Loc:      O.K.  1  * Str_1_Loc:     O.K.  DHRYSTONE PROGRAM, 1'ST STRING  * Str_2_Loc:     O.K.  DHRYSTONE PROGRAM, 2'ND STRING  *  * Register option      Selected.  *   * Microseconds 1 loop:          4.53  * Dhrystones / second:      220690  * VAX MIPS rating:            125.61  *  *  * Dhrystone Benchmark  Version 2.1 (Language: C)  *  * Month run            4/1996  * PC model             Escom  * CPU                  Pentium  * Clock MHz            100  * Cache                256K  * Options              Neptune chipset  * OS/DOS               Windows 95  * Compiler             Watcom C/ C++ 10.5 Win386   * OptLevel                 No optimisation  * Run by               Roy Longbottom  * From                 UK  * Mail                 101323.2241@compuserve.com  *   * Final values         (* implementation-dependent):  *  * Int_Glob:      O.K.  5  * Bool_Glob:     O.K.  1  * Ch_1_Glob:     O.K.  A  * Ch_2_Glob:     O.K.  B  * Arr_1_Glob[8]: O.K.  7  * Arr_2_Glob8/7: O.K.      320010  * Ptr_Glob->    *   Ptr_Comp:       *  98004  *   Discr:       O.K.  0  *   Enum_Comp:   O.K.  2  *   Int_Comp:    O.K.  17  *   Str_Comp:    O.K.  DHRYSTONE PROGRAM, SOME STRING  * Next_Ptr_Glob->   *   Ptr_Comp:       *  98004 same as above  *   Discr:       O.K.  0  *   Enum_Comp:   O.K.  1  *   Int_Comp:    O.K.  18  *   Str_Comp:    O.K.  DHRYSTONE PROGRAM, SOME STRING  * Int_1_Loc:     O.K.  5  * Int_2_Loc:     O.K.  13  * Int_3_Loc:     O.K.  7  * Enum_Loc:      O.K.  1  * Str_1_Loc:     O.K.  DHRYSTONE PROGRAM, 1'ST STRING  * Str_2_Loc:     O.K.  DHRYSTONE PROGRAM, 2'ND STRING  *  * Register option      Not selected.  *  * Microseconds 1 loop:         20.06  * Dhrystones / second:       49844  * VAX MIPS rating:             28.37  *  **************************************************************************  */
end_comment

begin_comment
comment|/* Compiler and system dependent definitions: */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|TIME
end_ifndef

begin_define
define|#
directive|define
name|TIMES
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Use times(2) time function unless    */
end_comment

begin_comment
comment|/* explicitly defined otherwise         */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|TIMES
end_ifdef

begin_comment
comment|/* #include<sys/types.h>     #include<sys/times.h> */
end_comment

begin_comment
comment|/* for "times" */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|Mic_secs_Per_Second
value|1000000.0
end_define

begin_comment
comment|/* Berkeley UNIX C returns process times in seconds/HZ */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|NOSTRUCTASSIGN
end_ifdef

begin_define
define|#
directive|define
name|structassign
parameter_list|(
name|d
parameter_list|,
name|s
parameter_list|)
value|memcpy(&(d),&(s), sizeof(d))
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|structassign
parameter_list|(
name|d
parameter_list|,
name|s
parameter_list|)
value|d = s
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|NOENUM
end_ifdef

begin_define
define|#
directive|define
name|Ident_1
value|0
end_define

begin_define
define|#
directive|define
name|Ident_2
value|1
end_define

begin_define
define|#
directive|define
name|Ident_3
value|2
end_define

begin_define
define|#
directive|define
name|Ident_4
value|3
end_define

begin_define
define|#
directive|define
name|Ident_5
value|4
end_define

begin_typedef
typedef|typedef
name|int
name|Enumeration
typedef|;
end_typedef

begin_else
else|#
directive|else
end_else

begin_typedef
typedef|typedef
enum|enum
block|{
name|Ident_1
block|,
name|Ident_2
block|,
name|Ident_3
block|,
name|Ident_4
block|,
name|Ident_5
block|}
name|Enumeration
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* for boolean and enumeration types in Ada, Pascal */
end_comment

begin_comment
comment|/* General definitions: */
end_comment

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_include
include|#
directive|include
file|<string.h>
end_include

begin_comment
comment|/* for strcpy, strcmp */
end_comment

begin_define
define|#
directive|define
name|Null
value|0
end_define

begin_comment
comment|/* Value of a Null pointer */
end_comment

begin_define
define|#
directive|define
name|true
value|1
end_define

begin_define
define|#
directive|define
name|false
value|0
end_define

begin_typedef
typedef|typedef
name|int
name|One_Thirty
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|int
name|One_Fifty
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|char
name|Capital_Letter
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|int
name|Boolean
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|char
name|Str_30
index|[
literal|31
index|]
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|int
name|Arr_1_Dim
index|[
literal|50
index|]
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|int
name|Arr_2_Dim
index|[
literal|50
index|]
index|[
literal|50
index|]
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|record
block|{
name|struct
name|record
modifier|*
name|Ptr_Comp
decl_stmt|;
name|Enumeration
name|Discr
decl_stmt|;
union|union
block|{
struct|struct
block|{
name|Enumeration
name|Enum_Comp
decl_stmt|;
name|int
name|Int_Comp
decl_stmt|;
name|char
name|Str_Comp
index|[
literal|31
index|]
decl_stmt|;
block|}
name|var_1
struct|;
struct|struct
block|{
name|Enumeration
name|E_Comp_2
decl_stmt|;
name|char
name|Str_2_Comp
index|[
literal|31
index|]
decl_stmt|;
block|}
name|var_2
struct|;
struct|struct
block|{
name|char
name|Ch_1_Comp
decl_stmt|;
name|char
name|Ch_2_Comp
decl_stmt|;
block|}
name|var_3
struct|;
block|}
name|variant
union|;
block|}
name|Rec_Type
operator|,
typedef|*
name|Rec_Pointer
typedef|;
end_typedef

end_unit

