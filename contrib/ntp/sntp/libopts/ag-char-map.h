begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  *  29 bits for 46 character classifications  *  generated by char-mapper on 04/25/15 at 09:53:03  *  *  This file contains the character classifications  *  used by AutoGen and AutoOpts for identifying tokens.  *  The table is static scope, so %guard is empty.  *  *  This file is part of AutoOpts, a companion to AutoGen.  *  AutoOpts is free software.  *  AutoOpts is Copyright (C) 1992-2015 by Bruce Korb - all rights reserved  *  *  AutoOpts is available under any one of two licenses.  The license  *  in use must be one of these two and the choice is under the control  *  of the user of the license.  *  *  The GNU Lesser General Public License, version 3 or later  *  See the files "COPYING.lgplv3" and "COPYING.gplv3"  *  *  The Modified Berkeley Software Distribution License  *  See the file "COPYING.mbsd"  *  *  These files have the following sha256 sums:  *  *  8584710e9b04216a394078dc156b781d0b47e1729104d666658aecef8ee32e95  COPYING.gplv3  *  4379e7444a0e2ce2b12dd6f5a52a27a4d02d39d247901d3285c88cf0d37f477b  COPYING.lgplv3  *  13aa749a5b0a454917a944ed8fffc530b784f5ead522b1aacaf4ec8aa55a6239  COPYING.mbsd  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|AG_CHAR_MAP_H_GUARD
end_ifndef

begin_define
define|#
directive|define
name|AG_CHAR_MAP_H_GUARD
value|1
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|HAVE_CONFIG_H
end_ifdef

begin_if
if|#
directive|if
name|defined
argument_list|(
name|HAVE_INTTYPES_H
argument_list|)
end_if

begin_include
include|#
directive|include
file|<inttypes.h>
end_include

begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|HAVE_STDINT_H
argument_list|)
end_elif

begin_include
include|#
directive|include
file|<stdint.h>
end_include

begin_elif
elif|#
directive|elif
operator|!
name|defined
argument_list|(
name|HAVE_UINT32_T
argument_list|)
end_elif

begin_if
if|#
directive|if
name|SIZEOF_INT
operator|==
literal|4
end_if

begin_typedef
typedef|typedef
name|unsigned
name|int
name|uint32_t
typedef|;
end_typedef

begin_elif
elif|#
directive|elif
name|SIZEOF_LONG
operator|==
literal|4
end_elif

begin_typedef
typedef|typedef
name|unsigned
name|long
name|uint32_t
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* HAVE_*INT*_H header */
end_comment

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* not HAVE_CONFIG_H -- */
end_comment

begin_include
include|#
directive|include
file|<inttypes.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* HAVE_CONFIG_H */
end_comment

begin_if
if|#
directive|if
literal|0
end_if

begin_comment
comment|/* mapping specification source (from autogen.map) */
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// %guard
end_comment

begin_comment
comment|// %file           ag-char-map.h
end_comment

begin_comment
comment|// %backup
end_comment

begin_comment
comment|// %optimize
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// %comment -- see above
end_comment

begin_comment
comment|// %
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// newline         "\n"
end_comment

begin_comment
comment|// nul-byte        "\x00"
end_comment

begin_comment
comment|// dir-sep         "/\\"
end_comment

begin_comment
comment|// percent         "%"
end_comment

begin_comment
comment|// comma           ","
end_comment

begin_comment
comment|// colon           ":"
end_comment

begin_comment
comment|// underscore      "_"
end_comment

begin_comment
comment|// plus            "+"
end_comment

begin_comment
comment|// dollar          "$"
end_comment

begin_comment
comment|// option-marker   "-"
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// horiz-white     "\t "
end_comment

begin_comment
comment|// alt-white       "\v\f\r\b"
end_comment

begin_comment
comment|// whitespace      +horiz-white  +newline +alt-white
end_comment

begin_comment
comment|// non-nl-white    +horiz-white  +alt-white
end_comment

begin_comment
comment|// quote           "'\""
end_comment

begin_comment
comment|// parentheses     "()"
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// graphic         "!-~"
end_comment

begin_comment
comment|// inversion       "~-"
end_comment

begin_comment
comment|// oct-digit       "0-7"
end_comment

begin_comment
comment|// dec-digit       "89"          +oct-digit
end_comment

begin_comment
comment|// hex-digit       "a-fA-F"      +dec-digit
end_comment

begin_comment
comment|// lower-case      "a-z"
end_comment

begin_comment
comment|// upper-case      "A-Z"
end_comment

begin_comment
comment|// alphabetic      +lower-case   +upper-case
end_comment

begin_comment
comment|// alphanumeric    +alphabetic   +dec-digit
end_comment

begin_comment
comment|// var-first       +underscore   +alphabetic
end_comment

begin_comment
comment|// variable-name   +var-first    +dec-digit
end_comment

begin_comment
comment|// option-name     "^-"          +variable-name
end_comment

begin_comment
comment|// value-name      +colon        +option-name
end_comment

begin_comment
comment|// name-sep        "[.]"
end_comment

begin_comment
comment|// compound-name   +value-name   +name-sep +horiz-white
end_comment

begin_comment
comment|// scheme-note     +parentheses  +quote
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// unquotable      "!-~"         -"#,;<=>[\\]`{}?*" -quote -parentheses
end_comment

begin_comment
comment|// end-xml-token   "/>"          +whitespace
end_comment

begin_comment
comment|// plus-n-space    +plus         +whitespace
end_comment

begin_comment
comment|// punctuation     "!-~"         -alphanumeric -"_"
end_comment

begin_comment
comment|// suffix          "-._"         +alphanumeric
end_comment

begin_comment
comment|// suffix-fmt      +percent      +suffix +dir-sep
end_comment

begin_comment
comment|// false-type      "nNfF0"       +nul-byte
end_comment

begin_comment
comment|// file-name       +dir-sep      +suffix
end_comment

begin_comment
comment|// end-token       +nul-byte     +whitespace
end_comment

begin_comment
comment|// end-list-entry  +comma        +end-token
end_comment

begin_comment
comment|// set-separator   "|+-!"        +end-list-entry
end_comment

begin_comment
comment|// signed-number   +inversion    +dec-digit
end_comment

begin_comment
comment|// make-script     +dollar       +newline
end_comment

begin_comment
comment|// load-line-skip  +horiz-white  +option-marker
end_comment

begin_comment
comment|//
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* 0 -- mapping spec. source */
end_comment

begin_typedef
typedef|typedef
name|uint32_t
name|ag_char_map_mask_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|IS_NEWLINE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000001)
end_define

begin_define
define|#
directive|define
name|SPN_NEWLINE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 0)
end_define

begin_define
define|#
directive|define
name|BRK_NEWLINE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 0)
end_define

begin_define
define|#
directive|define
name|SPN_NEWLINE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 0)
end_define

begin_define
define|#
directive|define
name|BRK_NEWLINE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 0)
end_define

begin_define
define|#
directive|define
name|IS_NUL_BYTE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000002)
end_define

begin_define
define|#
directive|define
name|SPN_NUL_BYTE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 1)
end_define

begin_define
define|#
directive|define
name|BRK_NUL_BYTE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 1)
end_define

begin_define
define|#
directive|define
name|SPN_NUL_BYTE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 1)
end_define

begin_define
define|#
directive|define
name|BRK_NUL_BYTE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 1)
end_define

begin_define
define|#
directive|define
name|IS_DIR_SEP_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000004)
end_define

begin_define
define|#
directive|define
name|SPN_DIR_SEP_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 2)
end_define

begin_define
define|#
directive|define
name|BRK_DIR_SEP_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 2)
end_define

begin_define
define|#
directive|define
name|SPN_DIR_SEP_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 2)
end_define

begin_define
define|#
directive|define
name|BRK_DIR_SEP_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 2)
end_define

begin_define
define|#
directive|define
name|IS_PERCENT_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000008)
end_define

begin_define
define|#
directive|define
name|SPN_PERCENT_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 3)
end_define

begin_define
define|#
directive|define
name|BRK_PERCENT_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 3)
end_define

begin_define
define|#
directive|define
name|SPN_PERCENT_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 3)
end_define

begin_define
define|#
directive|define
name|BRK_PERCENT_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 3)
end_define

begin_define
define|#
directive|define
name|IS_COMMA_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000010)
end_define

begin_define
define|#
directive|define
name|SPN_COMMA_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 4)
end_define

begin_define
define|#
directive|define
name|BRK_COMMA_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 4)
end_define

begin_define
define|#
directive|define
name|SPN_COMMA_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 4)
end_define

begin_define
define|#
directive|define
name|BRK_COMMA_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 4)
end_define

begin_define
define|#
directive|define
name|IS_COLON_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000020)
end_define

begin_define
define|#
directive|define
name|SPN_COLON_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 5)
end_define

begin_define
define|#
directive|define
name|BRK_COLON_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 5)
end_define

begin_define
define|#
directive|define
name|SPN_COLON_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 5)
end_define

begin_define
define|#
directive|define
name|BRK_COLON_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 5)
end_define

begin_define
define|#
directive|define
name|IS_UNDERSCORE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000040)
end_define

begin_define
define|#
directive|define
name|SPN_UNDERSCORE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 6)
end_define

begin_define
define|#
directive|define
name|BRK_UNDERSCORE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 6)
end_define

begin_define
define|#
directive|define
name|SPN_UNDERSCORE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 6)
end_define

begin_define
define|#
directive|define
name|BRK_UNDERSCORE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 6)
end_define

begin_define
define|#
directive|define
name|IS_PLUS_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000080)
end_define

begin_define
define|#
directive|define
name|SPN_PLUS_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 7)
end_define

begin_define
define|#
directive|define
name|BRK_PLUS_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 7)
end_define

begin_define
define|#
directive|define
name|SPN_PLUS_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 7)
end_define

begin_define
define|#
directive|define
name|BRK_PLUS_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 7)
end_define

begin_define
define|#
directive|define
name|IS_DOLLAR_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000100)
end_define

begin_define
define|#
directive|define
name|SPN_DOLLAR_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 8)
end_define

begin_define
define|#
directive|define
name|BRK_DOLLAR_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 8)
end_define

begin_define
define|#
directive|define
name|SPN_DOLLAR_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 8)
end_define

begin_define
define|#
directive|define
name|BRK_DOLLAR_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 8)
end_define

begin_define
define|#
directive|define
name|IS_OPTION_MARKER_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000200)
end_define

begin_define
define|#
directive|define
name|SPN_OPTION_MARKER_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 9)
end_define

begin_define
define|#
directive|define
name|BRK_OPTION_MARKER_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 9)
end_define

begin_define
define|#
directive|define
name|SPN_OPTION_MARKER_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 9)
end_define

begin_define
define|#
directive|define
name|BRK_OPTION_MARKER_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 9)
end_define

begin_define
define|#
directive|define
name|IS_HORIZ_WHITE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000400)
end_define

begin_define
define|#
directive|define
name|SPN_HORIZ_WHITE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 10)
end_define

begin_define
define|#
directive|define
name|BRK_HORIZ_WHITE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 10)
end_define

begin_define
define|#
directive|define
name|SPN_HORIZ_WHITE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 10)
end_define

begin_define
define|#
directive|define
name|BRK_HORIZ_WHITE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 10)
end_define

begin_define
define|#
directive|define
name|IS_ALT_WHITE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000800)
end_define

begin_define
define|#
directive|define
name|SPN_ALT_WHITE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 11)
end_define

begin_define
define|#
directive|define
name|BRK_ALT_WHITE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 11)
end_define

begin_define
define|#
directive|define
name|SPN_ALT_WHITE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 11)
end_define

begin_define
define|#
directive|define
name|BRK_ALT_WHITE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 11)
end_define

begin_define
define|#
directive|define
name|IS_WHITESPACE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000C01)
end_define

begin_define
define|#
directive|define
name|SPN_WHITESPACE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 12)
end_define

begin_define
define|#
directive|define
name|BRK_WHITESPACE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 12)
end_define

begin_define
define|#
directive|define
name|SPN_WHITESPACE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 12)
end_define

begin_define
define|#
directive|define
name|BRK_WHITESPACE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 12)
end_define

begin_define
define|#
directive|define
name|IS_NON_NL_WHITE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000C00)
end_define

begin_define
define|#
directive|define
name|SPN_NON_NL_WHITE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 13)
end_define

begin_define
define|#
directive|define
name|BRK_NON_NL_WHITE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 13)
end_define

begin_define
define|#
directive|define
name|SPN_NON_NL_WHITE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 13)
end_define

begin_define
define|#
directive|define
name|BRK_NON_NL_WHITE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 13)
end_define

begin_define
define|#
directive|define
name|IS_QUOTE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00001000)
end_define

begin_define
define|#
directive|define
name|SPN_QUOTE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 14)
end_define

begin_define
define|#
directive|define
name|BRK_QUOTE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 14)
end_define

begin_define
define|#
directive|define
name|SPN_QUOTE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 14)
end_define

begin_define
define|#
directive|define
name|BRK_QUOTE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 14)
end_define

begin_define
define|#
directive|define
name|IS_PARENTHESES_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00002000)
end_define

begin_define
define|#
directive|define
name|SPN_PARENTHESES_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 15)
end_define

begin_define
define|#
directive|define
name|BRK_PARENTHESES_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 15)
end_define

begin_define
define|#
directive|define
name|SPN_PARENTHESES_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 15)
end_define

begin_define
define|#
directive|define
name|BRK_PARENTHESES_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 15)
end_define

begin_define
define|#
directive|define
name|IS_GRAPHIC_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00004000)
end_define

begin_define
define|#
directive|define
name|SPN_GRAPHIC_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 16)
end_define

begin_define
define|#
directive|define
name|BRK_GRAPHIC_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 16)
end_define

begin_define
define|#
directive|define
name|SPN_GRAPHIC_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 16)
end_define

begin_define
define|#
directive|define
name|BRK_GRAPHIC_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 16)
end_define

begin_define
define|#
directive|define
name|IS_INVERSION_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00008000)
end_define

begin_define
define|#
directive|define
name|SPN_INVERSION_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 17)
end_define

begin_define
define|#
directive|define
name|BRK_INVERSION_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 17)
end_define

begin_define
define|#
directive|define
name|SPN_INVERSION_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 17)
end_define

begin_define
define|#
directive|define
name|BRK_INVERSION_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 17)
end_define

begin_define
define|#
directive|define
name|IS_OCT_DIGIT_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00010000)
end_define

begin_define
define|#
directive|define
name|SPN_OCT_DIGIT_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 18)
end_define

begin_define
define|#
directive|define
name|BRK_OCT_DIGIT_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 18)
end_define

begin_define
define|#
directive|define
name|SPN_OCT_DIGIT_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 18)
end_define

begin_define
define|#
directive|define
name|BRK_OCT_DIGIT_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 18)
end_define

begin_define
define|#
directive|define
name|IS_DEC_DIGIT_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00030000)
end_define

begin_define
define|#
directive|define
name|SPN_DEC_DIGIT_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 19)
end_define

begin_define
define|#
directive|define
name|BRK_DEC_DIGIT_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 19)
end_define

begin_define
define|#
directive|define
name|SPN_DEC_DIGIT_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 19)
end_define

begin_define
define|#
directive|define
name|BRK_DEC_DIGIT_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 19)
end_define

begin_define
define|#
directive|define
name|IS_HEX_DIGIT_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00070000)
end_define

begin_define
define|#
directive|define
name|SPN_HEX_DIGIT_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 20)
end_define

begin_define
define|#
directive|define
name|BRK_HEX_DIGIT_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 20)
end_define

begin_define
define|#
directive|define
name|SPN_HEX_DIGIT_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 20)
end_define

begin_define
define|#
directive|define
name|BRK_HEX_DIGIT_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 20)
end_define

begin_define
define|#
directive|define
name|IS_LOWER_CASE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00080000)
end_define

begin_define
define|#
directive|define
name|SPN_LOWER_CASE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 21)
end_define

begin_define
define|#
directive|define
name|BRK_LOWER_CASE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 21)
end_define

begin_define
define|#
directive|define
name|SPN_LOWER_CASE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 21)
end_define

begin_define
define|#
directive|define
name|BRK_LOWER_CASE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 21)
end_define

begin_define
define|#
directive|define
name|IS_UPPER_CASE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00100000)
end_define

begin_define
define|#
directive|define
name|SPN_UPPER_CASE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 22)
end_define

begin_define
define|#
directive|define
name|BRK_UPPER_CASE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 22)
end_define

begin_define
define|#
directive|define
name|SPN_UPPER_CASE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 22)
end_define

begin_define
define|#
directive|define
name|BRK_UPPER_CASE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 22)
end_define

begin_define
define|#
directive|define
name|IS_ALPHABETIC_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00180000)
end_define

begin_define
define|#
directive|define
name|SPN_ALPHABETIC_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 23)
end_define

begin_define
define|#
directive|define
name|BRK_ALPHABETIC_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 23)
end_define

begin_define
define|#
directive|define
name|SPN_ALPHABETIC_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 23)
end_define

begin_define
define|#
directive|define
name|BRK_ALPHABETIC_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 23)
end_define

begin_define
define|#
directive|define
name|IS_ALPHANUMERIC_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x001B0000)
end_define

begin_define
define|#
directive|define
name|SPN_ALPHANUMERIC_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 24)
end_define

begin_define
define|#
directive|define
name|BRK_ALPHANUMERIC_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 24)
end_define

begin_define
define|#
directive|define
name|SPN_ALPHANUMERIC_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 24)
end_define

begin_define
define|#
directive|define
name|BRK_ALPHANUMERIC_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 24)
end_define

begin_define
define|#
directive|define
name|IS_VAR_FIRST_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00180040)
end_define

begin_define
define|#
directive|define
name|SPN_VAR_FIRST_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 25)
end_define

begin_define
define|#
directive|define
name|BRK_VAR_FIRST_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 25)
end_define

begin_define
define|#
directive|define
name|SPN_VAR_FIRST_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 25)
end_define

begin_define
define|#
directive|define
name|BRK_VAR_FIRST_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 25)
end_define

begin_define
define|#
directive|define
name|IS_VARIABLE_NAME_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x001B0040)
end_define

begin_define
define|#
directive|define
name|SPN_VARIABLE_NAME_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 26)
end_define

begin_define
define|#
directive|define
name|BRK_VARIABLE_NAME_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 26)
end_define

begin_define
define|#
directive|define
name|SPN_VARIABLE_NAME_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 26)
end_define

begin_define
define|#
directive|define
name|BRK_VARIABLE_NAME_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 26)
end_define

begin_define
define|#
directive|define
name|IS_OPTION_NAME_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x003B0040)
end_define

begin_define
define|#
directive|define
name|SPN_OPTION_NAME_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 27)
end_define

begin_define
define|#
directive|define
name|BRK_OPTION_NAME_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 27)
end_define

begin_define
define|#
directive|define
name|SPN_OPTION_NAME_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 27)
end_define

begin_define
define|#
directive|define
name|BRK_OPTION_NAME_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 27)
end_define

begin_define
define|#
directive|define
name|IS_VALUE_NAME_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x003B0060)
end_define

begin_define
define|#
directive|define
name|SPN_VALUE_NAME_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 28)
end_define

begin_define
define|#
directive|define
name|BRK_VALUE_NAME_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 28)
end_define

begin_define
define|#
directive|define
name|SPN_VALUE_NAME_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 28)
end_define

begin_define
define|#
directive|define
name|BRK_VALUE_NAME_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 28)
end_define

begin_define
define|#
directive|define
name|IS_NAME_SEP_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00400000)
end_define

begin_define
define|#
directive|define
name|SPN_NAME_SEP_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 29)
end_define

begin_define
define|#
directive|define
name|BRK_NAME_SEP_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 29)
end_define

begin_define
define|#
directive|define
name|SPN_NAME_SEP_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 29)
end_define

begin_define
define|#
directive|define
name|BRK_NAME_SEP_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 29)
end_define

begin_define
define|#
directive|define
name|IS_COMPOUND_NAME_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x007B0460)
end_define

begin_define
define|#
directive|define
name|SPN_COMPOUND_NAME_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 30)
end_define

begin_define
define|#
directive|define
name|BRK_COMPOUND_NAME_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 30)
end_define

begin_define
define|#
directive|define
name|SPN_COMPOUND_NAME_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 30)
end_define

begin_define
define|#
directive|define
name|BRK_COMPOUND_NAME_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 30)
end_define

begin_define
define|#
directive|define
name|IS_SCHEME_NOTE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00003000)
end_define

begin_define
define|#
directive|define
name|SPN_SCHEME_NOTE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 31)
end_define

begin_define
define|#
directive|define
name|BRK_SCHEME_NOTE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 31)
end_define

begin_define
define|#
directive|define
name|SPN_SCHEME_NOTE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 31)
end_define

begin_define
define|#
directive|define
name|BRK_SCHEME_NOTE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 31)
end_define

begin_define
define|#
directive|define
name|IS_UNQUOTABLE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00800000)
end_define

begin_define
define|#
directive|define
name|SPN_UNQUOTABLE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 32)
end_define

begin_define
define|#
directive|define
name|BRK_UNQUOTABLE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 32)
end_define

begin_define
define|#
directive|define
name|SPN_UNQUOTABLE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 32)
end_define

begin_define
define|#
directive|define
name|BRK_UNQUOTABLE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 32)
end_define

begin_define
define|#
directive|define
name|IS_END_XML_TOKEN_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x01000C01)
end_define

begin_define
define|#
directive|define
name|SPN_END_XML_TOKEN_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 33)
end_define

begin_define
define|#
directive|define
name|BRK_END_XML_TOKEN_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 33)
end_define

begin_define
define|#
directive|define
name|SPN_END_XML_TOKEN_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 33)
end_define

begin_define
define|#
directive|define
name|BRK_END_XML_TOKEN_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 33)
end_define

begin_define
define|#
directive|define
name|IS_PLUS_N_SPACE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000C81)
end_define

begin_define
define|#
directive|define
name|SPN_PLUS_N_SPACE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 34)
end_define

begin_define
define|#
directive|define
name|BRK_PLUS_N_SPACE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 34)
end_define

begin_define
define|#
directive|define
name|SPN_PLUS_N_SPACE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 34)
end_define

begin_define
define|#
directive|define
name|BRK_PLUS_N_SPACE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 34)
end_define

begin_define
define|#
directive|define
name|IS_PUNCTUATION_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x02000000)
end_define

begin_define
define|#
directive|define
name|SPN_PUNCTUATION_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 35)
end_define

begin_define
define|#
directive|define
name|BRK_PUNCTUATION_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 35)
end_define

begin_define
define|#
directive|define
name|SPN_PUNCTUATION_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 35)
end_define

begin_define
define|#
directive|define
name|BRK_PUNCTUATION_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 35)
end_define

begin_define
define|#
directive|define
name|IS_SUFFIX_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x041B0000)
end_define

begin_define
define|#
directive|define
name|SPN_SUFFIX_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 36)
end_define

begin_define
define|#
directive|define
name|BRK_SUFFIX_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 36)
end_define

begin_define
define|#
directive|define
name|SPN_SUFFIX_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 36)
end_define

begin_define
define|#
directive|define
name|BRK_SUFFIX_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 36)
end_define

begin_define
define|#
directive|define
name|IS_SUFFIX_FMT_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x041B000C)
end_define

begin_define
define|#
directive|define
name|SPN_SUFFIX_FMT_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 37)
end_define

begin_define
define|#
directive|define
name|BRK_SUFFIX_FMT_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 37)
end_define

begin_define
define|#
directive|define
name|SPN_SUFFIX_FMT_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 37)
end_define

begin_define
define|#
directive|define
name|BRK_SUFFIX_FMT_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 37)
end_define

begin_define
define|#
directive|define
name|IS_FALSE_TYPE_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x08000002)
end_define

begin_define
define|#
directive|define
name|SPN_FALSE_TYPE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 38)
end_define

begin_define
define|#
directive|define
name|BRK_FALSE_TYPE_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 38)
end_define

begin_define
define|#
directive|define
name|SPN_FALSE_TYPE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 38)
end_define

begin_define
define|#
directive|define
name|BRK_FALSE_TYPE_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 38)
end_define

begin_define
define|#
directive|define
name|IS_FILE_NAME_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x041B0004)
end_define

begin_define
define|#
directive|define
name|SPN_FILE_NAME_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 39)
end_define

begin_define
define|#
directive|define
name|BRK_FILE_NAME_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 39)
end_define

begin_define
define|#
directive|define
name|SPN_FILE_NAME_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 39)
end_define

begin_define
define|#
directive|define
name|BRK_FILE_NAME_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 39)
end_define

begin_define
define|#
directive|define
name|IS_END_TOKEN_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000C03)
end_define

begin_define
define|#
directive|define
name|SPN_END_TOKEN_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 40)
end_define

begin_define
define|#
directive|define
name|BRK_END_TOKEN_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 40)
end_define

begin_define
define|#
directive|define
name|SPN_END_TOKEN_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 40)
end_define

begin_define
define|#
directive|define
name|BRK_END_TOKEN_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 40)
end_define

begin_define
define|#
directive|define
name|IS_END_LIST_ENTRY_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000C13)
end_define

begin_define
define|#
directive|define
name|SPN_END_LIST_ENTRY_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 41)
end_define

begin_define
define|#
directive|define
name|BRK_END_LIST_ENTRY_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 41)
end_define

begin_define
define|#
directive|define
name|SPN_END_LIST_ENTRY_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 41)
end_define

begin_define
define|#
directive|define
name|BRK_END_LIST_ENTRY_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 41)
end_define

begin_define
define|#
directive|define
name|IS_SET_SEPARATOR_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x10000C13)
end_define

begin_define
define|#
directive|define
name|SPN_SET_SEPARATOR_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 42)
end_define

begin_define
define|#
directive|define
name|BRK_SET_SEPARATOR_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 42)
end_define

begin_define
define|#
directive|define
name|SPN_SET_SEPARATOR_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 42)
end_define

begin_define
define|#
directive|define
name|BRK_SET_SEPARATOR_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 42)
end_define

begin_define
define|#
directive|define
name|IS_SIGNED_NUMBER_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00038000)
end_define

begin_define
define|#
directive|define
name|SPN_SIGNED_NUMBER_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 43)
end_define

begin_define
define|#
directive|define
name|BRK_SIGNED_NUMBER_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 43)
end_define

begin_define
define|#
directive|define
name|SPN_SIGNED_NUMBER_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 43)
end_define

begin_define
define|#
directive|define
name|BRK_SIGNED_NUMBER_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 43)
end_define

begin_define
define|#
directive|define
name|IS_MAKE_SCRIPT_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000101)
end_define

begin_define
define|#
directive|define
name|SPN_MAKE_SCRIPT_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 44)
end_define

begin_define
define|#
directive|define
name|BRK_MAKE_SCRIPT_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 44)
end_define

begin_define
define|#
directive|define
name|SPN_MAKE_SCRIPT_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 44)
end_define

begin_define
define|#
directive|define
name|BRK_MAKE_SCRIPT_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 44)
end_define

begin_define
define|#
directive|define
name|IS_LOAD_LINE_SKIP_CHAR
parameter_list|(
name|_c
parameter_list|)
value|is_ag_char_map_char((char)(_c), 0x00000600)
end_define

begin_define
define|#
directive|define
name|SPN_LOAD_LINE_SKIP_CHARS
parameter_list|(
name|_s
parameter_list|)
value|spn_ag_char_map_chars(_s, 45)
end_define

begin_define
define|#
directive|define
name|BRK_LOAD_LINE_SKIP_CHARS
parameter_list|(
name|_s
parameter_list|)
value|brk_ag_char_map_chars(_s, 45)
end_define

begin_define
define|#
directive|define
name|SPN_LOAD_LINE_SKIP_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|spn_ag_char_map_back(s, e, 45)
end_define

begin_define
define|#
directive|define
name|BRK_LOAD_LINE_SKIP_BACK
parameter_list|(
name|s
parameter_list|,
name|e
parameter_list|)
value|brk_ag_char_map_back(s, e, 45)
end_define

begin_decl_stmt
specifier|static
name|ag_char_map_mask_t
specifier|const
name|ag_char_map_table
index|[
literal|128
index|]
init|=
block|{
comment|/*NUL*/
literal|0x00000002
block|,
comment|/*x01*/
literal|0x00000000
block|,
comment|/*x02*/
literal|0x00000000
block|,
comment|/*x03*/
literal|0x00000000
block|,
comment|/*x04*/
literal|0x00000000
block|,
comment|/*x05*/
literal|0x00000000
block|,
comment|/*x06*/
literal|0x00000000
block|,
comment|/*BEL*/
literal|0x00000000
block|,
comment|/* BS*/
literal|0x00000800
block|,
comment|/* HT*/
literal|0x00000400
block|,
comment|/* NL*/
literal|0x00000001
block|,
comment|/* VT*/
literal|0x00000800
block|,
comment|/* FF*/
literal|0x00000800
block|,
comment|/* CR*/
literal|0x00000800
block|,
comment|/*x0E*/
literal|0x00000000
block|,
comment|/*x0F*/
literal|0x00000000
block|,
comment|/*x10*/
literal|0x00000000
block|,
comment|/*x11*/
literal|0x00000000
block|,
comment|/*x12*/
literal|0x00000000
block|,
comment|/*x13*/
literal|0x00000000
block|,
comment|/*x14*/
literal|0x00000000
block|,
comment|/*x15*/
literal|0x00000000
block|,
comment|/*x16*/
literal|0x00000000
block|,
comment|/*x17*/
literal|0x00000000
block|,
comment|/*x18*/
literal|0x00000000
block|,
comment|/*x19*/
literal|0x00000000
block|,
comment|/*x1A*/
literal|0x00000000
block|,
comment|/*ESC*/
literal|0x00000000
block|,
comment|/*x1C*/
literal|0x00000000
block|,
comment|/*x1D*/
literal|0x00000000
block|,
comment|/*x1E*/
literal|0x00000000
block|,
comment|/*x1F*/
literal|0x00000000
block|,
comment|/*   */
literal|0x00000400
block|,
comment|/* ! */
literal|0x02804000
block|,
comment|/* " */
literal|0x02005000
block|,
comment|/* # */
literal|0x02004000
block|,
comment|/* $ */
literal|0x02804100
block|,
comment|/* % */
literal|0x02804008
block|,
comment|/*& */
literal|0x02804000
block|,
comment|/* ' */
literal|0x02005000
block|,
comment|/* ( */
literal|0x02006000
block|,
comment|/* ) */
literal|0x02006000
block|,
comment|/* * */
literal|0x02004000
block|,
comment|/* + */
literal|0x12804080
block|,
comment|/* , */
literal|0x02004010
block|,
comment|/* - */
literal|0x06A0C200
block|,
comment|/* . */
literal|0x06C04000
block|,
comment|/* / */
literal|0x03804004
block|,
comment|/* 0 */
literal|0x08814000
block|,
comment|/* 1 */
literal|0x00814000
block|,
comment|/* 2 */
literal|0x00814000
block|,
comment|/* 3 */
literal|0x00814000
block|,
comment|/* 4 */
literal|0x00814000
block|,
comment|/* 5 */
literal|0x00814000
block|,
comment|/* 6 */
literal|0x00814000
block|,
comment|/* 7 */
literal|0x00814000
block|,
comment|/* 8 */
literal|0x00824000
block|,
comment|/* 9 */
literal|0x00824000
block|,
comment|/* : */
literal|0x02804020
block|,
comment|/* ; */
literal|0x02004000
block|,
comment|/*< */
literal|0x02004000
block|,
comment|/* = */
literal|0x02004000
block|,
comment|/*> */
literal|0x03004000
block|,
comment|/* ? */
literal|0x02004000
block|,
comment|/* @ */
literal|0x02804000
block|,
comment|/* A */
literal|0x00944000
block|,
comment|/* B */
literal|0x00944000
block|,
comment|/* C */
literal|0x00944000
block|,
comment|/* D */
literal|0x00944000
block|,
comment|/* E */
literal|0x00944000
block|,
comment|/* F */
literal|0x08944000
block|,
comment|/* G */
literal|0x00904000
block|,
comment|/* H */
literal|0x00904000
block|,
comment|/* I */
literal|0x00904000
block|,
comment|/* J */
literal|0x00904000
block|,
comment|/* K */
literal|0x00904000
block|,
comment|/* L */
literal|0x00904000
block|,
comment|/* M */
literal|0x00904000
block|,
comment|/* N */
literal|0x08904000
block|,
comment|/* O */
literal|0x00904000
block|,
comment|/* P */
literal|0x00904000
block|,
comment|/* Q */
literal|0x00904000
block|,
comment|/* R */
literal|0x00904000
block|,
comment|/* S */
literal|0x00904000
block|,
comment|/* T */
literal|0x00904000
block|,
comment|/* U */
literal|0x00904000
block|,
comment|/* V */
literal|0x00904000
block|,
comment|/* W */
literal|0x00904000
block|,
comment|/* X */
literal|0x00904000
block|,
comment|/* Y */
literal|0x00904000
block|,
comment|/* Z */
literal|0x00904000
block|,
comment|/* [ */
literal|0x02404000
block|,
comment|/* \ */
literal|0x02004004
block|,
comment|/* ] */
literal|0x02404000
block|,
comment|/* ^ */
literal|0x02A04000
block|,
comment|/* _ */
literal|0x04804040
block|,
comment|/* ` */
literal|0x02004000
block|,
comment|/* a */
literal|0x008C4000
block|,
comment|/* b */
literal|0x008C4000
block|,
comment|/* c */
literal|0x008C4000
block|,
comment|/* d */
literal|0x008C4000
block|,
comment|/* e */
literal|0x008C4000
block|,
comment|/* f */
literal|0x088C4000
block|,
comment|/* g */
literal|0x00884000
block|,
comment|/* h */
literal|0x00884000
block|,
comment|/* i */
literal|0x00884000
block|,
comment|/* j */
literal|0x00884000
block|,
comment|/* k */
literal|0x00884000
block|,
comment|/* l */
literal|0x00884000
block|,
comment|/* m */
literal|0x00884000
block|,
comment|/* n */
literal|0x08884000
block|,
comment|/* o */
literal|0x00884000
block|,
comment|/* p */
literal|0x00884000
block|,
comment|/* q */
literal|0x00884000
block|,
comment|/* r */
literal|0x00884000
block|,
comment|/* s */
literal|0x00884000
block|,
comment|/* t */
literal|0x00884000
block|,
comment|/* u */
literal|0x00884000
block|,
comment|/* v */
literal|0x00884000
block|,
comment|/* w */
literal|0x00884000
block|,
comment|/* x */
literal|0x00884000
block|,
comment|/* y */
literal|0x00884000
block|,
comment|/* z */
literal|0x00884000
block|,
comment|/* { */
literal|0x02004000
block|,
comment|/* | */
literal|0x12804000
block|,
comment|/* } */
literal|0x02004000
block|,
comment|/* ~ */
literal|0x0280C000
block|,
comment|/*x7F*/
literal|0x00000000
block|}
decl_stmt|;
end_decl_stmt

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_include
include|#
directive|include
file|<stdlib.h>
end_include

begin_include
include|#
directive|include
file|<string.h>
end_include

begin_ifndef
ifndef|#
directive|ifndef
name|_
end_ifndef

begin_define
define|#
directive|define
name|_
parameter_list|(
name|_s
parameter_list|)
value|_s
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|static
name|unsigned
name|char
specifier|const
modifier|*
name|ag_char_map_spanners
index|[
literal|46
index|]
decl_stmt|;
end_decl_stmt

begin_comment
comment|/**  *  Character category masks.  Some categories may have multiple bits,  *  if their definition incorporates other character categories.  *  This mask array is only used by calc_ag_char_map_spanners().  */
end_comment

begin_decl_stmt
specifier|static
name|ag_char_map_mask_t
specifier|const
name|ag_char_map_masks
index|[
literal|46
index|]
init|=
block|{
literal|0x00000001
block|,
comment|/* NEWLINE         */
literal|0x00000002
block|,
comment|/* NUL_BYTE        */
literal|0x00000004
block|,
comment|/* DIR_SEP         */
literal|0x00000008
block|,
comment|/* PERCENT         */
literal|0x00000010
block|,
comment|/* COMMA           */
literal|0x00000020
block|,
comment|/* COLON           */
literal|0x00000040
block|,
comment|/* UNDERSCORE      */
literal|0x00000080
block|,
comment|/* PLUS            */
literal|0x00000100
block|,
comment|/* DOLLAR          */
literal|0x00000200
block|,
comment|/* OPTION_MARKER   */
literal|0x00000400
block|,
comment|/* HORIZ_WHITE     */
literal|0x00000800
block|,
comment|/* ALT_WHITE       */
literal|0x00000C01
block|,
comment|/* WHITESPACE      */
literal|0x00000C00
block|,
comment|/* NON_NL_WHITE    */
literal|0x00001000
block|,
comment|/* QUOTE           */
literal|0x00002000
block|,
comment|/* PARENTHESES     */
literal|0x00004000
block|,
comment|/* GRAPHIC         */
literal|0x00008000
block|,
comment|/* INVERSION       */
literal|0x00010000
block|,
comment|/* OCT_DIGIT       */
literal|0x00030000
block|,
comment|/* DEC_DIGIT       */
literal|0x00070000
block|,
comment|/* HEX_DIGIT       */
literal|0x00080000
block|,
comment|/* LOWER_CASE      */
literal|0x00100000
block|,
comment|/* UPPER_CASE      */
literal|0x00180000
block|,
comment|/* ALPHABETIC      */
literal|0x001B0000
block|,
comment|/* ALPHANUMERIC    */
literal|0x00180040
block|,
comment|/* VAR_FIRST       */
literal|0x001B0040
block|,
comment|/* VARIABLE_NAME   */
literal|0x003B0040
block|,
comment|/* OPTION_NAME     */
literal|0x003B0060
block|,
comment|/* VALUE_NAME      */
literal|0x00400000
block|,
comment|/* NAME_SEP        */
literal|0x007B0460
block|,
comment|/* COMPOUND_NAME   */
literal|0x00003000
block|,
comment|/* SCHEME_NOTE     */
literal|0x00800000
block|,
comment|/* UNQUOTABLE      */
literal|0x01000C01
block|,
comment|/* END_XML_TOKEN   */
literal|0x00000C81
block|,
comment|/* PLUS_N_SPACE    */
literal|0x02000000
block|,
comment|/* PUNCTUATION     */
literal|0x041B0000
block|,
comment|/* SUFFIX          */
literal|0x041B000C
block|,
comment|/* SUFFIX_FMT      */
literal|0x08000002
block|,
comment|/* FALSE_TYPE      */
literal|0x041B0004
block|,
comment|/* FILE_NAME       */
literal|0x00000C03
block|,
comment|/* END_TOKEN       */
literal|0x00000C13
block|,
comment|/* END_LIST_ENTRY  */
literal|0x10000C13
block|,
comment|/* SET_SEPARATOR   */
literal|0x00038000
block|,
comment|/* SIGNED_NUMBER   */
literal|0x00000101
block|,
comment|/* MAKE_SCRIPT     */
literal|0x00000600
block|,
comment|/* LOAD_LINE_SKIP  */
block|}
decl_stmt|;
end_decl_stmt

begin_undef
undef|#
directive|undef
name|LOCK_SPANNER_TABLES
end_undef

begin_function
specifier|static
name|unsigned
name|char
specifier|const
modifier|*
name|calc_ag_char_map_spanners
parameter_list|(
name|unsigned
name|int
name|mask_ix
parameter_list|)
block|{
ifdef|#
directive|ifdef
name|LOCK_SPANNER_TABLES
if|if
condition|(
name|ag_char_map_spanners
index|[
name|mask_ix
index|]
operator|!=
name|NULL
condition|)
return|return
name|ag_char_map_spanners
index|[
name|mask_ix
index|]
return|;
name|pthread_mutex_lock
argument_list|(
operator|&
name|ag_char_map_mutex
argument_list|)
expr_stmt|;
if|if
condition|(
name|ag_char_map_spanners
index|[
name|mask_ix
index|]
operator|==
name|NULL
condition|)
endif|#
directive|endif
block|{
name|int
name|ix
init|=
literal|1
decl_stmt|;
name|ag_char_map_mask_t
name|mask
init|=
name|ag_char_map_masks
index|[
name|mask_ix
index|]
decl_stmt|;
name|unsigned
name|char
modifier|*
name|res
init|=
name|malloc
argument_list|(
literal|256
comment|/* 1<< NBBY */
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|==
name|NULL
condition|)
block|{
name|fputs
argument_list|(
name|_
argument_list|(
literal|"no memory for char-mapper span map\n"
argument_list|)
argument_list|,
name|stderr
argument_list|)
expr_stmt|;
name|exit
argument_list|(
name|EXIT_FAILURE
argument_list|)
expr_stmt|;
block|}
name|memset
argument_list|(
name|res
argument_list|,
literal|0
argument_list|,
literal|256
argument_list|)
expr_stmt|;
for|for
control|(
init|;
name|ix
operator|<
literal|128
condition|;
name|ix
operator|++
control|)
if|if
condition|(
name|ag_char_map_table
index|[
name|ix
index|]
operator|&
name|mask
condition|)
name|res
index|[
name|ix
index|]
operator|=
literal|1
expr_stmt|;
name|ag_char_map_spanners
index|[
name|mask_ix
index|]
operator|=
name|res
expr_stmt|;
block|}
ifdef|#
directive|ifdef
name|LOCK_SPANNER_TABLES
name|pthread_mutex_unlock
argument_list|(
operator|&
name|ag_char_map_mutex
argument_list|)
expr_stmt|;
endif|#
directive|endif
return|return
name|ag_char_map_spanners
index|[
name|mask_ix
index|]
return|;
block|}
end_function

begin_define
define|#
directive|define
name|ag_char_map_masks
value|POISONED_ag_char_map_masks
end_define

begin_function
specifier|static
specifier|inline
name|int
name|is_ag_char_map_char
parameter_list|(
name|char
name|ch
parameter_list|,
name|ag_char_map_mask_t
name|mask
parameter_list|)
block|{
name|unsigned
name|int
name|ix
init|=
operator|(
name|unsigned
name|char
operator|)
name|ch
decl_stmt|;
return|return
operator|(
operator|(
name|ix
operator|<
literal|128
operator|)
operator|&&
operator|(
operator|(
name|ag_char_map_table
index|[
name|ix
index|]
operator|&
name|mask
operator|)
operator|!=
literal|0
operator|)
operator|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|char
modifier|*
name|spn_ag_char_map_chars
parameter_list|(
name|char
specifier|const
modifier|*
name|p
parameter_list|,
name|unsigned
name|int
name|mask_ix
parameter_list|)
block|{
name|unsigned
name|char
specifier|const
modifier|*
name|v
init|=
name|ag_char_map_spanners
index|[
name|mask_ix
index|]
decl_stmt|;
if|if
condition|(
name|v
operator|==
name|NULL
condition|)
name|v
operator|=
name|calc_ag_char_map_spanners
argument_list|(
name|mask_ix
argument_list|)
expr_stmt|;
while|while
condition|(
name|v
index|[
operator|(
name|unsigned
name|char
operator|)
operator|*
name|p
index|]
condition|)
name|p
operator|++
expr_stmt|;
return|return
operator|(
name|char
operator|*
operator|)
operator|(
name|uintptr_t
operator|)
name|p
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|char
modifier|*
name|brk_ag_char_map_chars
parameter_list|(
name|char
specifier|const
modifier|*
name|p
parameter_list|,
name|unsigned
name|int
name|mask_ix
parameter_list|)
block|{
name|unsigned
name|char
specifier|const
modifier|*
name|v
init|=
name|ag_char_map_spanners
index|[
name|mask_ix
index|]
decl_stmt|;
if|if
condition|(
name|v
operator|==
name|NULL
condition|)
name|v
operator|=
name|calc_ag_char_map_spanners
argument_list|(
name|mask_ix
argument_list|)
expr_stmt|;
while|while
condition|(
operator|(
operator|*
name|p
operator|!=
literal|'\0'
operator|)
operator|&&
operator|(
operator|!
name|v
index|[
operator|(
name|unsigned
name|char
operator|)
operator|*
name|p
index|]
operator|)
condition|)
name|p
operator|++
expr_stmt|;
return|return
operator|(
name|char
operator|*
operator|)
operator|(
name|uintptr_t
operator|)
name|p
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|char
modifier|*
name|spn_ag_char_map_back
parameter_list|(
name|char
specifier|const
modifier|*
name|s
parameter_list|,
name|char
specifier|const
modifier|*
name|e
parameter_list|,
name|unsigned
name|int
name|mask_ix
parameter_list|)
block|{
name|unsigned
name|char
specifier|const
modifier|*
name|v
init|=
name|ag_char_map_spanners
index|[
name|mask_ix
index|]
decl_stmt|;
if|if
condition|(
name|v
operator|==
name|NULL
condition|)
name|v
operator|=
name|calc_ag_char_map_spanners
argument_list|(
name|mask_ix
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|>=
name|e
condition|)
name|e
operator|=
name|s
operator|+
name|strlen
argument_list|(
name|s
argument_list|)
expr_stmt|;
while|while
condition|(
operator|(
name|e
operator|>
name|s
operator|)
operator|&&
name|v
index|[
operator|(
name|unsigned
name|char
operator|)
name|e
index|[
operator|-
literal|1
index|]
index|]
condition|)
name|e
operator|--
expr_stmt|;
return|return
operator|(
name|char
operator|*
operator|)
operator|(
name|uintptr_t
operator|)
name|e
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|char
modifier|*
name|brk_ag_char_map_back
parameter_list|(
name|char
specifier|const
modifier|*
name|s
parameter_list|,
name|char
specifier|const
modifier|*
name|e
parameter_list|,
name|unsigned
name|int
name|mask_ix
parameter_list|)
block|{
name|unsigned
name|char
specifier|const
modifier|*
name|v
init|=
name|ag_char_map_spanners
index|[
name|mask_ix
index|]
decl_stmt|;
if|if
condition|(
name|v
operator|==
name|NULL
condition|)
name|v
operator|=
name|calc_ag_char_map_spanners
argument_list|(
name|mask_ix
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|==
name|e
condition|)
name|e
operator|+=
name|strlen
argument_list|(
name|e
argument_list|)
expr_stmt|;
while|while
condition|(
operator|(
name|e
operator|>
name|s
operator|)
operator|&&
operator|(
operator|!
name|v
index|[
operator|(
name|unsigned
name|char
operator|)
name|e
index|[
operator|-
literal|1
index|]
index|]
operator|)
condition|)
name|e
operator|--
expr_stmt|;
return|return
operator|(
name|char
operator|*
operator|)
operator|(
name|uintptr_t
operator|)
name|e
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* AG_CHAR_MAP_H_GUARD */
end_comment

end_unit

