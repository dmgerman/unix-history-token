begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$FreeBSD$	*/
end_comment

begin_comment
comment|/*  * Copyright (C) 2012 by Darren Reed.  *  * See the IPFILTER.LICENCE file for details on licencing.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__RADIX_IPF_H__
end_ifndef

begin_define
define|#
directive|define
name|__RADIX_IPF_H__
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|U_32_T
end_ifndef

begin_typedef
typedef|typedef
name|unsigned
name|int
name|u_32_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|U_32_T
value|1
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_typedef
typedef|typedef
struct|struct
name|ipf_rdx_mask
block|{
name|struct
name|ipf_rdx_mask
modifier|*
name|next
decl_stmt|;
name|struct
name|ipf_rdx_node
modifier|*
name|node
decl_stmt|;
name|u_32_t
modifier|*
name|mask
decl_stmt|;
name|int
name|maskbitcount
decl_stmt|;
block|}
name|ipf_rdx_mask_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|ipf_rdx_node
block|{
name|struct
name|ipf_rdx_node
modifier|*
name|left
decl_stmt|;
name|struct
name|ipf_rdx_node
modifier|*
name|right
decl_stmt|;
name|struct
name|ipf_rdx_node
modifier|*
name|parent
decl_stmt|;
name|struct
name|ipf_rdx_node
modifier|*
name|dupkey
decl_stmt|;
name|struct
name|ipf_rdx_mask
modifier|*
name|masks
decl_stmt|;
name|struct
name|ipf_rdx_mask
modifier|*
name|mymask
decl_stmt|;
name|u_32_t
modifier|*
name|addrkey
decl_stmt|;
name|u_32_t
modifier|*
name|maskkey
decl_stmt|;
name|u_32_t
modifier|*
name|addroff
decl_stmt|;
name|u_32_t
modifier|*
name|maskoff
decl_stmt|;
name|u_32_t
name|lastmask
decl_stmt|;
name|u_32_t
name|bitmask
decl_stmt|;
name|int
name|offset
decl_stmt|;
name|int
name|index
decl_stmt|;
name|int
name|maskbitcount
decl_stmt|;
name|int
name|root
decl_stmt|;
ifdef|#
directive|ifdef
name|RDX_DEBUG
name|char
name|name
index|[
literal|40
index|]
decl_stmt|;
endif|#
directive|endif
block|}
name|ipf_rdx_node_t
typedef|;
end_typedef

begin_struct_decl
struct_decl|struct
name|ipf_rdx_head
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|radix_walk_func_t
function_decl|)
parameter_list|(
name|ipf_rdx_node_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|ipf_rdx_node_t
modifier|*
function_decl|(
modifier|*
name|idx_hamn_func_t
function_decl|)
parameter_list|(
name|struct
name|ipf_rdx_head
modifier|*
parameter_list|,
name|addrfamily_t
modifier|*
parameter_list|,
name|addrfamily_t
modifier|*
parameter_list|,
name|ipf_rdx_node_t
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|ipf_rdx_node_t
modifier|*
function_decl|(
modifier|*
name|idx_ham_func_t
function_decl|)
parameter_list|(
name|struct
name|ipf_rdx_head
modifier|*
parameter_list|,
name|addrfamily_t
modifier|*
parameter_list|,
name|addrfamily_t
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|ipf_rdx_node_t
modifier|*
function_decl|(
modifier|*
name|idx_ha_func_t
function_decl|)
parameter_list|(
name|struct
name|ipf_rdx_head
modifier|*
parameter_list|,
name|addrfamily_t
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|idx_walk_func_t
function_decl|)
parameter_list|(
name|struct
name|ipf_rdx_head
modifier|*
parameter_list|,
name|radix_walk_func_t
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|ipf_rdx_head
block|{
name|ipf_rdx_node_t
modifier|*
name|root
decl_stmt|;
name|ipf_rdx_node_t
name|nodes
index|[
literal|3
index|]
decl_stmt|;
name|ipfmutex_t
name|lock
decl_stmt|;
name|idx_hamn_func_t
name|addaddr
decl_stmt|;
comment|/* add addr/mask to tree */
name|idx_ham_func_t
name|deladdr
decl_stmt|;
comment|/* delete addr/mask from tree */
name|idx_ham_func_t
name|lookup
decl_stmt|;
comment|/* look for specific addr/mask */
name|idx_ha_func_t
name|matchaddr
decl_stmt|;
comment|/* search tree for address match */
name|idx_walk_func_t
name|walktree
decl_stmt|;
comment|/* walk entire tree */
block|}
name|ipf_rdx_head_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|radix_softc
block|{
name|u_char
modifier|*
name|zeros
decl_stmt|;
name|u_char
modifier|*
name|ones
decl_stmt|;
block|}
name|radix_softc_t
typedef|;
end_typedef

begin_undef
undef|#
directive|undef
name|RADIX_NODE_HEAD_LOCK
end_undef

begin_undef
undef|#
directive|undef
name|RADIX_NODE_HEAD_UNLOCK
end_undef

begin_ifdef
ifdef|#
directive|ifdef
name|_KERNEL
end_ifdef

begin_define
define|#
directive|define
name|RADIX_NODE_HEAD_LOCK
parameter_list|(
name|x
parameter_list|)
value|MUTEX_ENTER(&(x)->lock)
end_define

begin_define
define|#
directive|define
name|RADIX_NODE_HEAD_UNLOCK
parameter_list|(
name|x
parameter_list|)
value|MUTEX_UNLOCK(&(x)->lock)
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|RADIX_NODE_HEAD_LOCK
parameter_list|(
name|x
parameter_list|)
end_define

begin_define
define|#
directive|define
name|RADIX_NODE_HEAD_UNLOCK
parameter_list|(
name|x
parameter_list|)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|extern
name|void
modifier|*
name|ipf_rx_create
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ipf_rx_init
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|ipf_rx_destroy
name|__P
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ipf_rx_inithead
name|__P
argument_list|(
operator|(
name|radix_softc_t
operator|*
operator|,
name|ipf_rdx_head_t
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|ipf_rx_freehead
name|__P
argument_list|(
operator|(
name|ipf_rdx_head_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|ipf_rdx_node_t
modifier|*
name|ipf_rx_addroute
name|__P
argument_list|(
operator|(
name|ipf_rdx_head_t
operator|*
operator|,
name|addrfamily_t
operator|*
operator|,
name|addrfamily_t
operator|*
operator|,
name|ipf_rdx_node_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|ipf_rdx_node_t
modifier|*
name|ipf_rx_delete
name|__P
argument_list|(
operator|(
name|ipf_rdx_head_t
operator|*
operator|,
name|addrfamily_t
operator|*
operator|,
name|addrfamily_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|ipf_rx_walktree
name|__P
argument_list|(
operator|(
name|ipf_rdx_head_t
operator|*
operator|,
name|radix_walk_func_t
operator|,
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __RADIX_IPF_H__ */
end_comment

end_unit

