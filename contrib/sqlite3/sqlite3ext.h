begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* ** 2006 June 7 ** ** The author disclaims copyright to this source code.  In place of ** a legal notice, here is a blessing: ** **    May you do good and not evil. **    May you find forgiveness for yourself and forgive others. **    May you share freely, never taking more than you give. ** ************************************************************************* ** This header file defines the SQLite interface for use by ** shared libraries that want to be imported as extensions into ** an SQLite instance.  Shared libraries that intend to be loaded ** as extensions by SQLite should #include this file instead of  ** sqlite3.h. */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SQLITE3EXT_H
end_ifndef

begin_define
define|#
directive|define
name|SQLITE3EXT_H
end_define

begin_include
include|#
directive|include
file|"sqlite3.h"
end_include

begin_comment
comment|/* ** The following structure holds pointers to all of the SQLite API ** routines. ** ** WARNING:  In order to maintain backwards compatibility, add new ** interfaces to the end of this structure only.  If you insert new ** interfaces in the middle of this structure, then older different ** versions of SQLite will not be able to load each other's shared ** libraries! */
end_comment

begin_struct
struct|struct
name|sqlite3_api_routines
block|{
name|void
modifier|*
function_decl|(
modifier|*
name|aggregate_context
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|int
name|nBytes
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|aggregate_count
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_blob
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
name|n
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_double
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_int
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_int64
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|,
name|sqlite_int64
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_null
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_parameter_count
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_parameter_index
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
name|zName
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|bind_parameter_name
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_text
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
name|n
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_text16
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_value
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|busy_handler
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|int
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|busy_timeout
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|int
name|ms
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|changes
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|close
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|collation_needed
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|sqlite3
modifier|*
parameter_list|,
name|int
name|eTextRep
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|collation_needed16
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|sqlite3
modifier|*
parameter_list|,
name|int
name|eTextRep
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
specifier|const
name|void
modifier|*
function_decl|(
modifier|*
name|column_blob
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
name|iCol
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|column_bytes
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
name|iCol
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|column_bytes16
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
name|iCol
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|column_count
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
name|pStmt
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|column_database_name
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|const
name|void
modifier|*
function_decl|(
modifier|*
name|column_database_name16
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|column_decltype
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
name|i
parameter_list|)
function_decl|;
specifier|const
name|void
modifier|*
function_decl|(
modifier|*
name|column_decltype16
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|double
function_decl|(
modifier|*
name|column_double
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
name|iCol
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|column_int
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
name|iCol
parameter_list|)
function_decl|;
name|sqlite_int64
function_decl|(
modifier|*
name|column_int64
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
name|iCol
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|column_name
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|const
name|void
modifier|*
function_decl|(
modifier|*
name|column_name16
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|column_origin_name
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|const
name|void
modifier|*
function_decl|(
modifier|*
name|column_origin_name16
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|column_table_name
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|const
name|void
modifier|*
function_decl|(
modifier|*
name|column_table_name16
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|const
name|unsigned
name|char
modifier|*
function_decl|(
modifier|*
name|column_text
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
name|iCol
parameter_list|)
function_decl|;
specifier|const
name|void
modifier|*
function_decl|(
modifier|*
name|column_text16
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
name|iCol
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|column_type
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
name|iCol
parameter_list|)
function_decl|;
name|sqlite3_value
modifier|*
function_decl|(
modifier|*
name|column_value
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
name|iCol
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|commit_hook
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|int
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|complete
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
name|sql
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|complete16
function_decl|)
parameter_list|(
specifier|const
name|void
modifier|*
name|sql
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|create_collation
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|create_collation16
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|create_function
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
name|xFunc
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|int
parameter_list|,
name|sqlite3_value
modifier|*
modifier|*
parameter_list|)
parameter_list|,
name|void
function_decl|(
modifier|*
name|xStep
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|int
parameter_list|,
name|sqlite3_value
modifier|*
modifier|*
parameter_list|)
parameter_list|,
name|void
function_decl|(
modifier|*
name|xFinal
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|create_function16
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
name|xFunc
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|int
parameter_list|,
name|sqlite3_value
modifier|*
modifier|*
parameter_list|)
parameter_list|,
name|void
function_decl|(
modifier|*
name|xStep
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|int
parameter_list|,
name|sqlite3_value
modifier|*
modifier|*
parameter_list|)
parameter_list|,
name|void
function_decl|(
modifier|*
name|xFinal
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|create_module
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|sqlite3_module
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|data_count
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
name|pStmt
parameter_list|)
function_decl|;
name|sqlite3
modifier|*
function_decl|(
modifier|*
name|db_handle
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|declare_vtab
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|enable_shared_cache
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|errcode
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
name|db
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|errmsg
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
specifier|const
name|void
modifier|*
function_decl|(
modifier|*
name|errmsg16
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|exec
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|sqlite3_callback
parameter_list|,
name|void
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|expired
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|finalize
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
name|pStmt
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|free
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|free_table
function_decl|)
parameter_list|(
name|char
modifier|*
modifier|*
name|result
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_autocommit
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|get_auxdata
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_table
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|global_recover
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|interruptx
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
name|sqlite_int64
function_decl|(
modifier|*
name|last_insert_rowid
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|libversion
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|libversion_number
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|malloc
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|char
modifier|*
function_decl|(
modifier|*
name|mprintf
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|open
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|sqlite3
modifier|*
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|open16
function_decl|)
parameter_list|(
specifier|const
name|void
modifier|*
parameter_list|,
name|sqlite3
modifier|*
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|prepare
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|sqlite3_stmt
modifier|*
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|prepare16
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|sqlite3_stmt
modifier|*
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|profile
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|sqlite_uint64
parameter_list|)
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|progress_handler
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|realloc
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|reset
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
name|pStmt
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_blob
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_double
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|double
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_error
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_error16
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_int
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_int64
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|sqlite_int64
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_null
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_text
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_text16
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_text16be
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_text16le
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_value
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|rollback_hook
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_authorizer
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|int
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|set_auxdata
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|char
modifier|*
function_decl|(
modifier|*
name|snprintf
function_decl|)
parameter_list|(
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|step
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|table_column_metadata
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|char
specifier|const
modifier|*
modifier|*
parameter_list|,
name|char
specifier|const
modifier|*
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|thread_cleanup
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|total_changes
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|trace
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
name|xTrace
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|transfer_bindings
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|sqlite3_stmt
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|update_hook
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
specifier|const
modifier|*
parameter_list|,
name|char
specifier|const
modifier|*
parameter_list|,
name|sqlite_int64
parameter_list|)
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|user_data
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|)
function_decl|;
specifier|const
name|void
modifier|*
function_decl|(
modifier|*
name|value_blob
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|value_bytes
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|value_bytes16
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|double
function_decl|(
modifier|*
name|value_double
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|value_int
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|sqlite_int64
function_decl|(
modifier|*
name|value_int64
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|value_numeric_type
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
specifier|const
name|unsigned
name|char
modifier|*
function_decl|(
modifier|*
name|value_text
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
specifier|const
name|void
modifier|*
function_decl|(
modifier|*
name|value_text16
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
specifier|const
name|void
modifier|*
function_decl|(
modifier|*
name|value_text16be
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
specifier|const
name|void
modifier|*
function_decl|(
modifier|*
name|value_text16le
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|value_type
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|char
modifier|*
function_decl|(
modifier|*
name|vmprintf
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
comment|/* Added ??? */
name|int
function_decl|(
modifier|*
name|overload_function
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
name|zFuncName
parameter_list|,
name|int
name|nArg
parameter_list|)
function_decl|;
comment|/* Added by 3.3.13 */
name|int
function_decl|(
modifier|*
name|prepare_v2
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|sqlite3_stmt
modifier|*
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|prepare16_v2
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|sqlite3_stmt
modifier|*
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|clear_bindings
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|)
function_decl|;
comment|/* Added by 3.4.1 */
name|int
function_decl|(
modifier|*
name|create_module_v2
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|sqlite3_module
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
name|xDestroy
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
comment|/* Added by 3.5.0 */
name|int
function_decl|(
modifier|*
name|bind_zeroblob
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|blob_bytes
function_decl|)
parameter_list|(
name|sqlite3_blob
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|blob_close
function_decl|)
parameter_list|(
name|sqlite3_blob
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|blob_open
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|sqlite3_int64
parameter_list|,
name|int
parameter_list|,
name|sqlite3_blob
modifier|*
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|blob_read
function_decl|)
parameter_list|(
name|sqlite3_blob
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|blob_write
function_decl|)
parameter_list|(
name|sqlite3_blob
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|create_collation_v2
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|)
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|file_control
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|sqlite3_int64
function_decl|(
modifier|*
name|memory_highwater
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|sqlite3_int64
function_decl|(
modifier|*
name|memory_used
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|sqlite3_mutex
modifier|*
function_decl|(
modifier|*
name|mutex_alloc
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|mutex_enter
function_decl|)
parameter_list|(
name|sqlite3_mutex
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|mutex_free
function_decl|)
parameter_list|(
name|sqlite3_mutex
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|mutex_leave
function_decl|)
parameter_list|(
name|sqlite3_mutex
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|mutex_try
function_decl|)
parameter_list|(
name|sqlite3_mutex
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|open_v2
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|sqlite3
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|release_memory
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_error_nomem
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_error_toobig
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sleep
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|soft_heap_limit
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|sqlite3_vfs
modifier|*
function_decl|(
modifier|*
name|vfs_find
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|vfs_register
function_decl|)
parameter_list|(
name|sqlite3_vfs
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|vfs_unregister
function_decl|)
parameter_list|(
name|sqlite3_vfs
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|xthreadsafe
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_zeroblob
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_error_code
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|test_control
function_decl|)
parameter_list|(
name|int
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|randomness
function_decl|)
parameter_list|(
name|int
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|sqlite3
modifier|*
function_decl|(
modifier|*
name|context_db_handle
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|extended_result_codes
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|limit
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|sqlite3_stmt
modifier|*
function_decl|(
modifier|*
name|next_stmt
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|sqlite3_stmt
modifier|*
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|sql
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|status
function_decl|)
parameter_list|(
name|int
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|backup_finish
function_decl|)
parameter_list|(
name|sqlite3_backup
modifier|*
parameter_list|)
function_decl|;
name|sqlite3_backup
modifier|*
function_decl|(
modifier|*
name|backup_init
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|backup_pagecount
function_decl|)
parameter_list|(
name|sqlite3_backup
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|backup_remaining
function_decl|)
parameter_list|(
name|sqlite3_backup
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|backup_step
function_decl|)
parameter_list|(
name|sqlite3_backup
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|compileoption_get
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|compileoption_used
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|create_function_v2
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
name|xFunc
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|int
parameter_list|,
name|sqlite3_value
modifier|*
modifier|*
parameter_list|)
parameter_list|,
name|void
function_decl|(
modifier|*
name|xStep
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|int
parameter_list|,
name|sqlite3_value
modifier|*
modifier|*
parameter_list|)
parameter_list|,
name|void
function_decl|(
modifier|*
name|xFinal
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|)
parameter_list|,
name|void
function_decl|(
modifier|*
name|xDestroy
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|db_config
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|int
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
name|sqlite3_mutex
modifier|*
function_decl|(
modifier|*
name|db_mutex
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|db_status
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|extended_errcode
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|log
function_decl|)
parameter_list|(
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
name|sqlite3_int64
function_decl|(
modifier|*
name|soft_heap_limit64
function_decl|)
parameter_list|(
name|sqlite3_int64
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|sourceid
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|stmt_status
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|strnicmp
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|unlock_notify
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|)
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|wal_autocheckpoint
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|wal_checkpoint
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|wal_hook
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|int
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|blob_reopen
function_decl|)
parameter_list|(
name|sqlite3_blob
modifier|*
parameter_list|,
name|sqlite3_int64
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|vtab_config
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|int
name|op
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|vtab_on_conflict
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
comment|/* Version 3.7.16 and later */
name|int
function_decl|(
modifier|*
name|close_v2
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|db_filename
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|db_readonly
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|db_release_memory
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|errstr
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|stmt_busy
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|stmt_readonly
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|stricmp
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|uri_boolean
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|sqlite3_int64
function_decl|(
modifier|*
name|uri_int64
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|sqlite3_int64
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|uri_parameter
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|char
modifier|*
function_decl|(
modifier|*
name|vsnprintf
function_decl|)
parameter_list|(
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|wal_checkpoint_v2
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
comment|/* Version 3.8.7 and later */
name|int
function_decl|(
modifier|*
name|auto_extension
function_decl|)
parameter_list|(
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_blob64
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|sqlite3_uint64
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_text64
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|sqlite3_uint64
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|,
name|unsigned
name|char
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|cancel_auto_extension
function_decl|)
parameter_list|(
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
parameter_list|)
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|load_extension
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|malloc64
function_decl|)
parameter_list|(
name|sqlite3_uint64
parameter_list|)
function_decl|;
name|sqlite3_uint64
function_decl|(
modifier|*
name|msize
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
function_decl|(
modifier|*
name|realloc64
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|sqlite3_uint64
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|reset_auto_extension
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_blob64
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|sqlite3_uint64
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_text64
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|sqlite3_uint64
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
parameter_list|,
name|unsigned
name|char
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|strglob
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
comment|/* Version 3.8.11 and later */
name|sqlite3_value
modifier|*
function_decl|(
modifier|*
name|value_dup
function_decl|)
parameter_list|(
specifier|const
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|value_free
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|result_zeroblob64
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|sqlite3_uint64
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bind_zeroblob64
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|,
name|int
parameter_list|,
name|sqlite3_uint64
parameter_list|)
function_decl|;
comment|/* Version 3.9.0 and later */
name|unsigned
name|int
function_decl|(
modifier|*
name|value_subtype
function_decl|)
parameter_list|(
name|sqlite3_value
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|result_subtype
function_decl|)
parameter_list|(
name|sqlite3_context
modifier|*
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
comment|/* Version 3.10.0 and later */
name|int
function_decl|(
modifier|*
name|status64
function_decl|)
parameter_list|(
name|int
parameter_list|,
name|sqlite3_int64
modifier|*
parameter_list|,
name|sqlite3_int64
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|strlike
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|unsigned
name|int
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|db_cacheflush
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
comment|/* Version 3.12.0 and later */
name|int
function_decl|(
modifier|*
name|system_errno
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|)
function_decl|;
comment|/* Version 3.14.0 and later */
name|int
function_decl|(
modifier|*
name|trace_v2
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
parameter_list|,
name|unsigned
parameter_list|,
name|int
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|unsigned
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|char
modifier|*
function_decl|(
modifier|*
name|expanded_sql
function_decl|)
parameter_list|(
name|sqlite3_stmt
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_comment
comment|/* ** This is the function signature used for all extension entry points.  It ** is also defined in the file "loadext.c". */
end_comment

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|sqlite3_loadext_entry
function_decl|)
parameter_list|(
name|sqlite3
modifier|*
name|db
parameter_list|,
comment|/* Handle to the database. */
name|char
modifier|*
modifier|*
name|pzErrMsg
parameter_list|,
comment|/* Used to set error string on failure. */
specifier|const
name|sqlite3_api_routines
modifier|*
name|pThunk
comment|/* Extension API function pointers. */
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/* ** The following macros redefine the API routines so that they are ** redirected through the global sqlite3_api structure. ** ** This header file is also used by the loadext.c source file ** (part of the main SQLite library - not an extension) so that ** it can get access to the sqlite3_api_routines structure ** definition.  But the main library does not want to redefine ** the API.  So the redefinition macros are only valid if the ** SQLITE_CORE macros is undefined. */
end_comment

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|SQLITE_CORE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|SQLITE_OMIT_LOAD_EXTENSION
argument_list|)
end_if

begin_define
define|#
directive|define
name|sqlite3_aggregate_context
value|sqlite3_api->aggregate_context
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|SQLITE_OMIT_DEPRECATED
end_ifndef

begin_define
define|#
directive|define
name|sqlite3_aggregate_count
value|sqlite3_api->aggregate_count
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|sqlite3_bind_blob
value|sqlite3_api->bind_blob
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_double
value|sqlite3_api->bind_double
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_int
value|sqlite3_api->bind_int
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_int64
value|sqlite3_api->bind_int64
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_null
value|sqlite3_api->bind_null
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_parameter_count
value|sqlite3_api->bind_parameter_count
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_parameter_index
value|sqlite3_api->bind_parameter_index
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_parameter_name
value|sqlite3_api->bind_parameter_name
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_text
value|sqlite3_api->bind_text
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_text16
value|sqlite3_api->bind_text16
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_value
value|sqlite3_api->bind_value
end_define

begin_define
define|#
directive|define
name|sqlite3_busy_handler
value|sqlite3_api->busy_handler
end_define

begin_define
define|#
directive|define
name|sqlite3_busy_timeout
value|sqlite3_api->busy_timeout
end_define

begin_define
define|#
directive|define
name|sqlite3_changes
value|sqlite3_api->changes
end_define

begin_define
define|#
directive|define
name|sqlite3_close
value|sqlite3_api->close
end_define

begin_define
define|#
directive|define
name|sqlite3_collation_needed
value|sqlite3_api->collation_needed
end_define

begin_define
define|#
directive|define
name|sqlite3_collation_needed16
value|sqlite3_api->collation_needed16
end_define

begin_define
define|#
directive|define
name|sqlite3_column_blob
value|sqlite3_api->column_blob
end_define

begin_define
define|#
directive|define
name|sqlite3_column_bytes
value|sqlite3_api->column_bytes
end_define

begin_define
define|#
directive|define
name|sqlite3_column_bytes16
value|sqlite3_api->column_bytes16
end_define

begin_define
define|#
directive|define
name|sqlite3_column_count
value|sqlite3_api->column_count
end_define

begin_define
define|#
directive|define
name|sqlite3_column_database_name
value|sqlite3_api->column_database_name
end_define

begin_define
define|#
directive|define
name|sqlite3_column_database_name16
value|sqlite3_api->column_database_name16
end_define

begin_define
define|#
directive|define
name|sqlite3_column_decltype
value|sqlite3_api->column_decltype
end_define

begin_define
define|#
directive|define
name|sqlite3_column_decltype16
value|sqlite3_api->column_decltype16
end_define

begin_define
define|#
directive|define
name|sqlite3_column_double
value|sqlite3_api->column_double
end_define

begin_define
define|#
directive|define
name|sqlite3_column_int
value|sqlite3_api->column_int
end_define

begin_define
define|#
directive|define
name|sqlite3_column_int64
value|sqlite3_api->column_int64
end_define

begin_define
define|#
directive|define
name|sqlite3_column_name
value|sqlite3_api->column_name
end_define

begin_define
define|#
directive|define
name|sqlite3_column_name16
value|sqlite3_api->column_name16
end_define

begin_define
define|#
directive|define
name|sqlite3_column_origin_name
value|sqlite3_api->column_origin_name
end_define

begin_define
define|#
directive|define
name|sqlite3_column_origin_name16
value|sqlite3_api->column_origin_name16
end_define

begin_define
define|#
directive|define
name|sqlite3_column_table_name
value|sqlite3_api->column_table_name
end_define

begin_define
define|#
directive|define
name|sqlite3_column_table_name16
value|sqlite3_api->column_table_name16
end_define

begin_define
define|#
directive|define
name|sqlite3_column_text
value|sqlite3_api->column_text
end_define

begin_define
define|#
directive|define
name|sqlite3_column_text16
value|sqlite3_api->column_text16
end_define

begin_define
define|#
directive|define
name|sqlite3_column_type
value|sqlite3_api->column_type
end_define

begin_define
define|#
directive|define
name|sqlite3_column_value
value|sqlite3_api->column_value
end_define

begin_define
define|#
directive|define
name|sqlite3_commit_hook
value|sqlite3_api->commit_hook
end_define

begin_define
define|#
directive|define
name|sqlite3_complete
value|sqlite3_api->complete
end_define

begin_define
define|#
directive|define
name|sqlite3_complete16
value|sqlite3_api->complete16
end_define

begin_define
define|#
directive|define
name|sqlite3_create_collation
value|sqlite3_api->create_collation
end_define

begin_define
define|#
directive|define
name|sqlite3_create_collation16
value|sqlite3_api->create_collation16
end_define

begin_define
define|#
directive|define
name|sqlite3_create_function
value|sqlite3_api->create_function
end_define

begin_define
define|#
directive|define
name|sqlite3_create_function16
value|sqlite3_api->create_function16
end_define

begin_define
define|#
directive|define
name|sqlite3_create_module
value|sqlite3_api->create_module
end_define

begin_define
define|#
directive|define
name|sqlite3_create_module_v2
value|sqlite3_api->create_module_v2
end_define

begin_define
define|#
directive|define
name|sqlite3_data_count
value|sqlite3_api->data_count
end_define

begin_define
define|#
directive|define
name|sqlite3_db_handle
value|sqlite3_api->db_handle
end_define

begin_define
define|#
directive|define
name|sqlite3_declare_vtab
value|sqlite3_api->declare_vtab
end_define

begin_define
define|#
directive|define
name|sqlite3_enable_shared_cache
value|sqlite3_api->enable_shared_cache
end_define

begin_define
define|#
directive|define
name|sqlite3_errcode
value|sqlite3_api->errcode
end_define

begin_define
define|#
directive|define
name|sqlite3_errmsg
value|sqlite3_api->errmsg
end_define

begin_define
define|#
directive|define
name|sqlite3_errmsg16
value|sqlite3_api->errmsg16
end_define

begin_define
define|#
directive|define
name|sqlite3_exec
value|sqlite3_api->exec
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|SQLITE_OMIT_DEPRECATED
end_ifndef

begin_define
define|#
directive|define
name|sqlite3_expired
value|sqlite3_api->expired
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|sqlite3_finalize
value|sqlite3_api->finalize
end_define

begin_define
define|#
directive|define
name|sqlite3_free
value|sqlite3_api->free
end_define

begin_define
define|#
directive|define
name|sqlite3_free_table
value|sqlite3_api->free_table
end_define

begin_define
define|#
directive|define
name|sqlite3_get_autocommit
value|sqlite3_api->get_autocommit
end_define

begin_define
define|#
directive|define
name|sqlite3_get_auxdata
value|sqlite3_api->get_auxdata
end_define

begin_define
define|#
directive|define
name|sqlite3_get_table
value|sqlite3_api->get_table
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|SQLITE_OMIT_DEPRECATED
end_ifndef

begin_define
define|#
directive|define
name|sqlite3_global_recover
value|sqlite3_api->global_recover
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|sqlite3_interrupt
value|sqlite3_api->interruptx
end_define

begin_define
define|#
directive|define
name|sqlite3_last_insert_rowid
value|sqlite3_api->last_insert_rowid
end_define

begin_define
define|#
directive|define
name|sqlite3_libversion
value|sqlite3_api->libversion
end_define

begin_define
define|#
directive|define
name|sqlite3_libversion_number
value|sqlite3_api->libversion_number
end_define

begin_define
define|#
directive|define
name|sqlite3_malloc
value|sqlite3_api->malloc
end_define

begin_define
define|#
directive|define
name|sqlite3_mprintf
value|sqlite3_api->mprintf
end_define

begin_define
define|#
directive|define
name|sqlite3_open
value|sqlite3_api->open
end_define

begin_define
define|#
directive|define
name|sqlite3_open16
value|sqlite3_api->open16
end_define

begin_define
define|#
directive|define
name|sqlite3_prepare
value|sqlite3_api->prepare
end_define

begin_define
define|#
directive|define
name|sqlite3_prepare16
value|sqlite3_api->prepare16
end_define

begin_define
define|#
directive|define
name|sqlite3_prepare_v2
value|sqlite3_api->prepare_v2
end_define

begin_define
define|#
directive|define
name|sqlite3_prepare16_v2
value|sqlite3_api->prepare16_v2
end_define

begin_define
define|#
directive|define
name|sqlite3_profile
value|sqlite3_api->profile
end_define

begin_define
define|#
directive|define
name|sqlite3_progress_handler
value|sqlite3_api->progress_handler
end_define

begin_define
define|#
directive|define
name|sqlite3_realloc
value|sqlite3_api->realloc
end_define

begin_define
define|#
directive|define
name|sqlite3_reset
value|sqlite3_api->reset
end_define

begin_define
define|#
directive|define
name|sqlite3_result_blob
value|sqlite3_api->result_blob
end_define

begin_define
define|#
directive|define
name|sqlite3_result_double
value|sqlite3_api->result_double
end_define

begin_define
define|#
directive|define
name|sqlite3_result_error
value|sqlite3_api->result_error
end_define

begin_define
define|#
directive|define
name|sqlite3_result_error16
value|sqlite3_api->result_error16
end_define

begin_define
define|#
directive|define
name|sqlite3_result_int
value|sqlite3_api->result_int
end_define

begin_define
define|#
directive|define
name|sqlite3_result_int64
value|sqlite3_api->result_int64
end_define

begin_define
define|#
directive|define
name|sqlite3_result_null
value|sqlite3_api->result_null
end_define

begin_define
define|#
directive|define
name|sqlite3_result_text
value|sqlite3_api->result_text
end_define

begin_define
define|#
directive|define
name|sqlite3_result_text16
value|sqlite3_api->result_text16
end_define

begin_define
define|#
directive|define
name|sqlite3_result_text16be
value|sqlite3_api->result_text16be
end_define

begin_define
define|#
directive|define
name|sqlite3_result_text16le
value|sqlite3_api->result_text16le
end_define

begin_define
define|#
directive|define
name|sqlite3_result_value
value|sqlite3_api->result_value
end_define

begin_define
define|#
directive|define
name|sqlite3_rollback_hook
value|sqlite3_api->rollback_hook
end_define

begin_define
define|#
directive|define
name|sqlite3_set_authorizer
value|sqlite3_api->set_authorizer
end_define

begin_define
define|#
directive|define
name|sqlite3_set_auxdata
value|sqlite3_api->set_auxdata
end_define

begin_define
define|#
directive|define
name|sqlite3_snprintf
value|sqlite3_api->snprintf
end_define

begin_define
define|#
directive|define
name|sqlite3_step
value|sqlite3_api->step
end_define

begin_define
define|#
directive|define
name|sqlite3_table_column_metadata
value|sqlite3_api->table_column_metadata
end_define

begin_define
define|#
directive|define
name|sqlite3_thread_cleanup
value|sqlite3_api->thread_cleanup
end_define

begin_define
define|#
directive|define
name|sqlite3_total_changes
value|sqlite3_api->total_changes
end_define

begin_define
define|#
directive|define
name|sqlite3_trace
value|sqlite3_api->trace
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|SQLITE_OMIT_DEPRECATED
end_ifndef

begin_define
define|#
directive|define
name|sqlite3_transfer_bindings
value|sqlite3_api->transfer_bindings
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|sqlite3_update_hook
value|sqlite3_api->update_hook
end_define

begin_define
define|#
directive|define
name|sqlite3_user_data
value|sqlite3_api->user_data
end_define

begin_define
define|#
directive|define
name|sqlite3_value_blob
value|sqlite3_api->value_blob
end_define

begin_define
define|#
directive|define
name|sqlite3_value_bytes
value|sqlite3_api->value_bytes
end_define

begin_define
define|#
directive|define
name|sqlite3_value_bytes16
value|sqlite3_api->value_bytes16
end_define

begin_define
define|#
directive|define
name|sqlite3_value_double
value|sqlite3_api->value_double
end_define

begin_define
define|#
directive|define
name|sqlite3_value_int
value|sqlite3_api->value_int
end_define

begin_define
define|#
directive|define
name|sqlite3_value_int64
value|sqlite3_api->value_int64
end_define

begin_define
define|#
directive|define
name|sqlite3_value_numeric_type
value|sqlite3_api->value_numeric_type
end_define

begin_define
define|#
directive|define
name|sqlite3_value_text
value|sqlite3_api->value_text
end_define

begin_define
define|#
directive|define
name|sqlite3_value_text16
value|sqlite3_api->value_text16
end_define

begin_define
define|#
directive|define
name|sqlite3_value_text16be
value|sqlite3_api->value_text16be
end_define

begin_define
define|#
directive|define
name|sqlite3_value_text16le
value|sqlite3_api->value_text16le
end_define

begin_define
define|#
directive|define
name|sqlite3_value_type
value|sqlite3_api->value_type
end_define

begin_define
define|#
directive|define
name|sqlite3_vmprintf
value|sqlite3_api->vmprintf
end_define

begin_define
define|#
directive|define
name|sqlite3_vsnprintf
value|sqlite3_api->vsnprintf
end_define

begin_define
define|#
directive|define
name|sqlite3_overload_function
value|sqlite3_api->overload_function
end_define

begin_define
define|#
directive|define
name|sqlite3_prepare_v2
value|sqlite3_api->prepare_v2
end_define

begin_define
define|#
directive|define
name|sqlite3_prepare16_v2
value|sqlite3_api->prepare16_v2
end_define

begin_define
define|#
directive|define
name|sqlite3_clear_bindings
value|sqlite3_api->clear_bindings
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_zeroblob
value|sqlite3_api->bind_zeroblob
end_define

begin_define
define|#
directive|define
name|sqlite3_blob_bytes
value|sqlite3_api->blob_bytes
end_define

begin_define
define|#
directive|define
name|sqlite3_blob_close
value|sqlite3_api->blob_close
end_define

begin_define
define|#
directive|define
name|sqlite3_blob_open
value|sqlite3_api->blob_open
end_define

begin_define
define|#
directive|define
name|sqlite3_blob_read
value|sqlite3_api->blob_read
end_define

begin_define
define|#
directive|define
name|sqlite3_blob_write
value|sqlite3_api->blob_write
end_define

begin_define
define|#
directive|define
name|sqlite3_create_collation_v2
value|sqlite3_api->create_collation_v2
end_define

begin_define
define|#
directive|define
name|sqlite3_file_control
value|sqlite3_api->file_control
end_define

begin_define
define|#
directive|define
name|sqlite3_memory_highwater
value|sqlite3_api->memory_highwater
end_define

begin_define
define|#
directive|define
name|sqlite3_memory_used
value|sqlite3_api->memory_used
end_define

begin_define
define|#
directive|define
name|sqlite3_mutex_alloc
value|sqlite3_api->mutex_alloc
end_define

begin_define
define|#
directive|define
name|sqlite3_mutex_enter
value|sqlite3_api->mutex_enter
end_define

begin_define
define|#
directive|define
name|sqlite3_mutex_free
value|sqlite3_api->mutex_free
end_define

begin_define
define|#
directive|define
name|sqlite3_mutex_leave
value|sqlite3_api->mutex_leave
end_define

begin_define
define|#
directive|define
name|sqlite3_mutex_try
value|sqlite3_api->mutex_try
end_define

begin_define
define|#
directive|define
name|sqlite3_open_v2
value|sqlite3_api->open_v2
end_define

begin_define
define|#
directive|define
name|sqlite3_release_memory
value|sqlite3_api->release_memory
end_define

begin_define
define|#
directive|define
name|sqlite3_result_error_nomem
value|sqlite3_api->result_error_nomem
end_define

begin_define
define|#
directive|define
name|sqlite3_result_error_toobig
value|sqlite3_api->result_error_toobig
end_define

begin_define
define|#
directive|define
name|sqlite3_sleep
value|sqlite3_api->sleep
end_define

begin_define
define|#
directive|define
name|sqlite3_soft_heap_limit
value|sqlite3_api->soft_heap_limit
end_define

begin_define
define|#
directive|define
name|sqlite3_vfs_find
value|sqlite3_api->vfs_find
end_define

begin_define
define|#
directive|define
name|sqlite3_vfs_register
value|sqlite3_api->vfs_register
end_define

begin_define
define|#
directive|define
name|sqlite3_vfs_unregister
value|sqlite3_api->vfs_unregister
end_define

begin_define
define|#
directive|define
name|sqlite3_threadsafe
value|sqlite3_api->xthreadsafe
end_define

begin_define
define|#
directive|define
name|sqlite3_result_zeroblob
value|sqlite3_api->result_zeroblob
end_define

begin_define
define|#
directive|define
name|sqlite3_result_error_code
value|sqlite3_api->result_error_code
end_define

begin_define
define|#
directive|define
name|sqlite3_test_control
value|sqlite3_api->test_control
end_define

begin_define
define|#
directive|define
name|sqlite3_randomness
value|sqlite3_api->randomness
end_define

begin_define
define|#
directive|define
name|sqlite3_context_db_handle
value|sqlite3_api->context_db_handle
end_define

begin_define
define|#
directive|define
name|sqlite3_extended_result_codes
value|sqlite3_api->extended_result_codes
end_define

begin_define
define|#
directive|define
name|sqlite3_limit
value|sqlite3_api->limit
end_define

begin_define
define|#
directive|define
name|sqlite3_next_stmt
value|sqlite3_api->next_stmt
end_define

begin_define
define|#
directive|define
name|sqlite3_sql
value|sqlite3_api->sql
end_define

begin_define
define|#
directive|define
name|sqlite3_status
value|sqlite3_api->status
end_define

begin_define
define|#
directive|define
name|sqlite3_backup_finish
value|sqlite3_api->backup_finish
end_define

begin_define
define|#
directive|define
name|sqlite3_backup_init
value|sqlite3_api->backup_init
end_define

begin_define
define|#
directive|define
name|sqlite3_backup_pagecount
value|sqlite3_api->backup_pagecount
end_define

begin_define
define|#
directive|define
name|sqlite3_backup_remaining
value|sqlite3_api->backup_remaining
end_define

begin_define
define|#
directive|define
name|sqlite3_backup_step
value|sqlite3_api->backup_step
end_define

begin_define
define|#
directive|define
name|sqlite3_compileoption_get
value|sqlite3_api->compileoption_get
end_define

begin_define
define|#
directive|define
name|sqlite3_compileoption_used
value|sqlite3_api->compileoption_used
end_define

begin_define
define|#
directive|define
name|sqlite3_create_function_v2
value|sqlite3_api->create_function_v2
end_define

begin_define
define|#
directive|define
name|sqlite3_db_config
value|sqlite3_api->db_config
end_define

begin_define
define|#
directive|define
name|sqlite3_db_mutex
value|sqlite3_api->db_mutex
end_define

begin_define
define|#
directive|define
name|sqlite3_db_status
value|sqlite3_api->db_status
end_define

begin_define
define|#
directive|define
name|sqlite3_extended_errcode
value|sqlite3_api->extended_errcode
end_define

begin_define
define|#
directive|define
name|sqlite3_log
value|sqlite3_api->log
end_define

begin_define
define|#
directive|define
name|sqlite3_soft_heap_limit64
value|sqlite3_api->soft_heap_limit64
end_define

begin_define
define|#
directive|define
name|sqlite3_sourceid
value|sqlite3_api->sourceid
end_define

begin_define
define|#
directive|define
name|sqlite3_stmt_status
value|sqlite3_api->stmt_status
end_define

begin_define
define|#
directive|define
name|sqlite3_strnicmp
value|sqlite3_api->strnicmp
end_define

begin_define
define|#
directive|define
name|sqlite3_unlock_notify
value|sqlite3_api->unlock_notify
end_define

begin_define
define|#
directive|define
name|sqlite3_wal_autocheckpoint
value|sqlite3_api->wal_autocheckpoint
end_define

begin_define
define|#
directive|define
name|sqlite3_wal_checkpoint
value|sqlite3_api->wal_checkpoint
end_define

begin_define
define|#
directive|define
name|sqlite3_wal_hook
value|sqlite3_api->wal_hook
end_define

begin_define
define|#
directive|define
name|sqlite3_blob_reopen
value|sqlite3_api->blob_reopen
end_define

begin_define
define|#
directive|define
name|sqlite3_vtab_config
value|sqlite3_api->vtab_config
end_define

begin_define
define|#
directive|define
name|sqlite3_vtab_on_conflict
value|sqlite3_api->vtab_on_conflict
end_define

begin_comment
comment|/* Version 3.7.16 and later */
end_comment

begin_define
define|#
directive|define
name|sqlite3_close_v2
value|sqlite3_api->close_v2
end_define

begin_define
define|#
directive|define
name|sqlite3_db_filename
value|sqlite3_api->db_filename
end_define

begin_define
define|#
directive|define
name|sqlite3_db_readonly
value|sqlite3_api->db_readonly
end_define

begin_define
define|#
directive|define
name|sqlite3_db_release_memory
value|sqlite3_api->db_release_memory
end_define

begin_define
define|#
directive|define
name|sqlite3_errstr
value|sqlite3_api->errstr
end_define

begin_define
define|#
directive|define
name|sqlite3_stmt_busy
value|sqlite3_api->stmt_busy
end_define

begin_define
define|#
directive|define
name|sqlite3_stmt_readonly
value|sqlite3_api->stmt_readonly
end_define

begin_define
define|#
directive|define
name|sqlite3_stricmp
value|sqlite3_api->stricmp
end_define

begin_define
define|#
directive|define
name|sqlite3_uri_boolean
value|sqlite3_api->uri_boolean
end_define

begin_define
define|#
directive|define
name|sqlite3_uri_int64
value|sqlite3_api->uri_int64
end_define

begin_define
define|#
directive|define
name|sqlite3_uri_parameter
value|sqlite3_api->uri_parameter
end_define

begin_define
define|#
directive|define
name|sqlite3_uri_vsnprintf
value|sqlite3_api->vsnprintf
end_define

begin_define
define|#
directive|define
name|sqlite3_wal_checkpoint_v2
value|sqlite3_api->wal_checkpoint_v2
end_define

begin_comment
comment|/* Version 3.8.7 and later */
end_comment

begin_define
define|#
directive|define
name|sqlite3_auto_extension
value|sqlite3_api->auto_extension
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_blob64
value|sqlite3_api->bind_blob64
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_text64
value|sqlite3_api->bind_text64
end_define

begin_define
define|#
directive|define
name|sqlite3_cancel_auto_extension
value|sqlite3_api->cancel_auto_extension
end_define

begin_define
define|#
directive|define
name|sqlite3_load_extension
value|sqlite3_api->load_extension
end_define

begin_define
define|#
directive|define
name|sqlite3_malloc64
value|sqlite3_api->malloc64
end_define

begin_define
define|#
directive|define
name|sqlite3_msize
value|sqlite3_api->msize
end_define

begin_define
define|#
directive|define
name|sqlite3_realloc64
value|sqlite3_api->realloc64
end_define

begin_define
define|#
directive|define
name|sqlite3_reset_auto_extension
value|sqlite3_api->reset_auto_extension
end_define

begin_define
define|#
directive|define
name|sqlite3_result_blob64
value|sqlite3_api->result_blob64
end_define

begin_define
define|#
directive|define
name|sqlite3_result_text64
value|sqlite3_api->result_text64
end_define

begin_define
define|#
directive|define
name|sqlite3_strglob
value|sqlite3_api->strglob
end_define

begin_comment
comment|/* Version 3.8.11 and later */
end_comment

begin_define
define|#
directive|define
name|sqlite3_value_dup
value|sqlite3_api->value_dup
end_define

begin_define
define|#
directive|define
name|sqlite3_value_free
value|sqlite3_api->value_free
end_define

begin_define
define|#
directive|define
name|sqlite3_result_zeroblob64
value|sqlite3_api->result_zeroblob64
end_define

begin_define
define|#
directive|define
name|sqlite3_bind_zeroblob64
value|sqlite3_api->bind_zeroblob64
end_define

begin_comment
comment|/* Version 3.9.0 and later */
end_comment

begin_define
define|#
directive|define
name|sqlite3_value_subtype
value|sqlite3_api->value_subtype
end_define

begin_define
define|#
directive|define
name|sqlite3_result_subtype
value|sqlite3_api->result_subtype
end_define

begin_comment
comment|/* Version 3.10.0 and later */
end_comment

begin_define
define|#
directive|define
name|sqlite3_status64
value|sqlite3_api->status64
end_define

begin_define
define|#
directive|define
name|sqlite3_strlike
value|sqlite3_api->strlike
end_define

begin_define
define|#
directive|define
name|sqlite3_db_cacheflush
value|sqlite3_api->db_cacheflush
end_define

begin_comment
comment|/* Version 3.12.0 and later */
end_comment

begin_define
define|#
directive|define
name|sqlite3_system_errno
value|sqlite3_api->system_errno
end_define

begin_comment
comment|/* Version 3.14.0 and later */
end_comment

begin_define
define|#
directive|define
name|sqlite3_trace_v2
value|sqlite3_api->trace_v2
end_define

begin_define
define|#
directive|define
name|sqlite3_expanded_sql
value|sqlite3_api->expanded_sql
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !defined(SQLITE_CORE)&& !defined(SQLITE_OMIT_LOAD_EXTENSION) */
end_comment

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|SQLITE_CORE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|SQLITE_OMIT_LOAD_EXTENSION
argument_list|)
end_if

begin_comment
comment|/* This case when the file really is being compiled as a loadable    ** extension */
end_comment

begin_define
define|#
directive|define
name|SQLITE_EXTENSION_INIT1
value|const sqlite3_api_routines *sqlite3_api=0;
end_define

begin_define
define|#
directive|define
name|SQLITE_EXTENSION_INIT2
parameter_list|(
name|v
parameter_list|)
value|sqlite3_api=v;
end_define

begin_define
define|#
directive|define
name|SQLITE_EXTENSION_INIT3
define|\
value|extern const sqlite3_api_routines *sqlite3_api;
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* This case when the file is being statically linked into the    ** application */
end_comment

begin_define
define|#
directive|define
name|SQLITE_EXTENSION_INIT1
end_define

begin_comment
comment|/*no-op*/
end_comment

begin_define
define|#
directive|define
name|SQLITE_EXTENSION_INIT2
parameter_list|(
name|v
parameter_list|)
value|(void)v;
end_define

begin_comment
comment|/* unused parameter */
end_comment

begin_define
define|#
directive|define
name|SQLITE_EXTENSION_INIT3
end_define

begin_comment
comment|/*no-op*/
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* SQLITE3EXT_H */
end_comment

end_unit

