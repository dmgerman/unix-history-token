begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* NLM (NetWare Loadable Module) swapping routines for BFD.    Copyright (C) 1993 Free Software Foundation, Inc.     Written by Fred Fish @ Cygnus Support, using ELF support as the    template.  This file is part of BFD, the Binary File Descriptor library.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_comment
comment|/* Although this is a header file, it defines functions.  It is    included by NLM backends to define swapping functions that vary    from one NLM to another.  The backend code must arrange for    Nlm_External_xxxx to be defined appropriately, and can then include    this file to get the swapping routines.     At the moment this is only needed for one structure, the fixed NLM    file header.  */
end_comment

begin_decl_stmt
specifier|static
name|void
name|nlm_swap_fixed_header_in
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|PTR
operator|,
name|Nlm_Internal_Fixed_Header
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|void
name|nlm_swap_fixed_header_out
name|PARAMS
argument_list|(
operator|(
name|bfd
operator|*
operator|,
name|Nlm_Internal_Fixed_Header
operator|*
operator|,
name|PTR
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Translate an NLM fixed length file header in external format into an NLM    file header in internal format. */
end_comment

begin_function
specifier|static
name|void
name|nlm_swap_fixed_header_in
parameter_list|(
name|abfd
parameter_list|,
name|realsrc
parameter_list|,
name|dst
parameter_list|)
name|bfd
modifier|*
name|abfd
decl_stmt|;
name|PTR
name|realsrc
decl_stmt|;
name|Nlm_Internal_Fixed_Header
modifier|*
name|dst
decl_stmt|;
block|{
name|Nlm_External_Fixed_Header
modifier|*
name|src
init|=
operator|(
name|Nlm_External_Fixed_Header
operator|*
operator|)
name|realsrc
decl_stmt|;
name|memcpy
argument_list|(
name|dst
operator|->
name|signature
argument_list|,
name|src
operator|->
name|signature
argument_list|,
name|NLM_SIGNATURE_SIZE
argument_list|)
expr_stmt|;
name|memcpy
argument_list|(
name|dst
operator|->
name|moduleName
argument_list|,
name|src
operator|->
name|moduleName
argument_list|,
name|NLM_MODULE_NAME_SIZE
argument_list|)
expr_stmt|;
name|dst
operator|->
name|version
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|version
argument_list|)
expr_stmt|;
name|dst
operator|->
name|codeImageOffset
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|codeImageOffset
argument_list|)
expr_stmt|;
name|dst
operator|->
name|codeImageSize
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|codeImageSize
argument_list|)
expr_stmt|;
name|dst
operator|->
name|dataImageOffset
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|dataImageOffset
argument_list|)
expr_stmt|;
name|dst
operator|->
name|dataImageSize
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|dataImageSize
argument_list|)
expr_stmt|;
name|dst
operator|->
name|uninitializedDataSize
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|uninitializedDataSize
argument_list|)
expr_stmt|;
name|dst
operator|->
name|customDataOffset
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|customDataOffset
argument_list|)
expr_stmt|;
name|dst
operator|->
name|customDataSize
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|customDataSize
argument_list|)
expr_stmt|;
name|dst
operator|->
name|moduleDependencyOffset
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|moduleDependencyOffset
argument_list|)
expr_stmt|;
name|dst
operator|->
name|numberOfModuleDependencies
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|numberOfModuleDependencies
argument_list|)
expr_stmt|;
name|dst
operator|->
name|relocationFixupOffset
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|relocationFixupOffset
argument_list|)
expr_stmt|;
name|dst
operator|->
name|numberOfRelocationFixups
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|numberOfRelocationFixups
argument_list|)
expr_stmt|;
name|dst
operator|->
name|externalReferencesOffset
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|externalReferencesOffset
argument_list|)
expr_stmt|;
name|dst
operator|->
name|numberOfExternalReferences
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|numberOfExternalReferences
argument_list|)
expr_stmt|;
name|dst
operator|->
name|publicsOffset
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|publicsOffset
argument_list|)
expr_stmt|;
name|dst
operator|->
name|numberOfPublics
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|numberOfPublics
argument_list|)
expr_stmt|;
name|dst
operator|->
name|debugInfoOffset
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|debugInfoOffset
argument_list|)
expr_stmt|;
name|dst
operator|->
name|numberOfDebugRecords
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|numberOfDebugRecords
argument_list|)
expr_stmt|;
name|dst
operator|->
name|codeStartOffset
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|codeStartOffset
argument_list|)
expr_stmt|;
name|dst
operator|->
name|exitProcedureOffset
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|exitProcedureOffset
argument_list|)
expr_stmt|;
name|dst
operator|->
name|checkUnloadProcedureOffset
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|checkUnloadProcedureOffset
argument_list|)
expr_stmt|;
name|dst
operator|->
name|moduleType
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|moduleType
argument_list|)
expr_stmt|;
name|dst
operator|->
name|flags
operator|=
name|bfd_h_get_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|src
operator|->
name|flags
argument_list|)
expr_stmt|;
block|}
end_function

begin_comment
comment|/* Translate an NLM fixed length file header in internal format into    an NLM file header in external format. */
end_comment

begin_function
specifier|static
name|void
name|nlm_swap_fixed_header_out
parameter_list|(
name|abfd
parameter_list|,
name|src
parameter_list|,
name|realdst
parameter_list|)
name|bfd
modifier|*
name|abfd
decl_stmt|;
name|Nlm_Internal_Fixed_Header
modifier|*
name|src
decl_stmt|;
name|PTR
name|realdst
decl_stmt|;
block|{
name|Nlm_External_Fixed_Header
modifier|*
name|dst
init|=
operator|(
name|Nlm_External_Fixed_Header
operator|*
operator|)
name|realdst
decl_stmt|;
name|memset
argument_list|(
name|dst
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
expr|*
name|dst
argument_list|)
expr_stmt|;
name|memcpy
argument_list|(
name|dst
operator|->
name|signature
argument_list|,
name|src
operator|->
name|signature
argument_list|,
name|NLM_SIGNATURE_SIZE
argument_list|)
expr_stmt|;
name|memcpy
argument_list|(
name|dst
operator|->
name|moduleName
argument_list|,
name|src
operator|->
name|moduleName
argument_list|,
name|NLM_MODULE_NAME_SIZE
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|version
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|version
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|codeImageOffset
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|codeImageOffset
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|codeImageSize
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|codeImageSize
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|dataImageOffset
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|dataImageOffset
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|dataImageSize
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|dataImageSize
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|uninitializedDataSize
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|uninitializedDataSize
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|customDataOffset
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|customDataOffset
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|customDataSize
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|customDataSize
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|moduleDependencyOffset
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|moduleDependencyOffset
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|numberOfModuleDependencies
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|numberOfModuleDependencies
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|relocationFixupOffset
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|relocationFixupOffset
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|numberOfRelocationFixups
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|numberOfRelocationFixups
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|externalReferencesOffset
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|externalReferencesOffset
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|numberOfExternalReferences
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|numberOfExternalReferences
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|publicsOffset
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|publicsOffset
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|numberOfPublics
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|numberOfPublics
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|debugInfoOffset
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|debugInfoOffset
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|numberOfDebugRecords
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|numberOfDebugRecords
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|codeStartOffset
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|codeStartOffset
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|exitProcedureOffset
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|exitProcedureOffset
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|checkUnloadProcedureOffset
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|checkUnloadProcedureOffset
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|moduleType
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|moduleType
argument_list|)
expr_stmt|;
name|bfd_h_put_32
argument_list|(
name|abfd
argument_list|,
operator|(
name|bfd_vma
operator|)
name|src
operator|->
name|flags
argument_list|,
operator|(
name|bfd_byte
operator|*
operator|)
name|dst
operator|->
name|flags
argument_list|)
expr_stmt|;
block|}
end_function

end_unit

