begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Definitions to target GDB to GNU/Linux on PowerPC.     Copyright 1992, 1993, 2000, 2002 Free Software Foundation, Inc.  This file is part of GDB.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|TM_LINUX_H
end_ifndef

begin_define
define|#
directive|define
name|TM_LINUX_H
end_define

begin_include
include|#
directive|include
file|"powerpc/tm-ppc-eabi.h"
end_include

begin_comment
comment|/* Avoid warning from redefinition in tm-sysv4.h (included from tm-linux.h) */
end_comment

begin_undef
undef|#
directive|undef
name|SKIP_TRAMPOLINE_CODE
end_undef

begin_include
include|#
directive|include
file|"tm-linux.h"
end_include

begin_comment
comment|/* We can single step on linux */
end_comment

begin_undef
undef|#
directive|undef
name|SOFTWARE_SINGLE_STEP
end_undef

begin_define
define|#
directive|define
name|SOFTWARE_SINGLE_STEP
parameter_list|(
name|p
parameter_list|,
name|q
parameter_list|)
value|internal_error (__FILE__, __LINE__, "Will never execute!")
end_define

begin_undef
undef|#
directive|undef
name|SOFTWARE_SINGLE_STEP_P
end_undef

begin_define
define|#
directive|define
name|SOFTWARE_SINGLE_STEP_P
parameter_list|()
value|0
end_define

begin_comment
comment|/* Make sure nexti gets the help it needs for debugging assembly code    without symbols */
end_comment

begin_define
define|#
directive|define
name|AT_SUBROUTINE_CALL_INSTRUCTION_TARGET
parameter_list|(
name|prevpc
parameter_list|,
name|stoppc
parameter_list|)
define|\
value|at_subroutine_call_instruction_target(prevpc,stoppc)
end_define

begin_function_decl
specifier|extern
name|int
name|at_subroutine_call_instruction_target
parameter_list|()
function_decl|;
end_function_decl

begin_comment
comment|/* We _want_ the SVR4 section offset calculations (see syms_from_objfile()    in symfile.c) */
end_comment

begin_undef
undef|#
directive|undef
name|IBM6000_TARGET
end_undef

begin_function_decl
specifier|extern
name|CORE_ADDR
name|ppc_linux_skip_trampoline_code
parameter_list|(
name|CORE_ADDR
name|pc
parameter_list|)
function_decl|;
end_function_decl

begin_undef
undef|#
directive|undef
name|SKIP_TRAMPOLINE_CODE
end_undef

begin_define
define|#
directive|define
name|SKIP_TRAMPOLINE_CODE
parameter_list|(
name|pc
parameter_list|)
value|ppc_linux_skip_trampoline_code (pc)
end_define

begin_function_decl
specifier|extern
name|int
name|ppc_linux_in_sigtramp
parameter_list|(
name|CORE_ADDR
name|pc
parameter_list|,
name|char
modifier|*
name|func_name
parameter_list|)
function_decl|;
end_function_decl

begin_undef
undef|#
directive|undef
name|IN_SIGTRAMP
end_undef

begin_define
define|#
directive|define
name|IN_SIGTRAMP
parameter_list|(
name|pc
parameter_list|,
name|func_name
parameter_list|)
value|ppc_linux_in_sigtramp (pc,func_name)
end_define

begin_if
if|#
directive|if
literal|0
end_if

begin_define
define|#
directive|define
name|CANNOT_FETCH_REGISTER
parameter_list|(
name|regno
parameter_list|)
value|((regno)>= MQ_REGNUM)
end_define

begin_define
define|#
directive|define
name|CANNOT_STORE_REGISTER
parameter_list|(
name|regno
parameter_list|)
value|((regno)>= MQ_REGNUM)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
literal|0
end_if

begin_comment
comment|/* If skip_prologue() isn't too greedy, we don't need this */
end_comment

begin_comment
comment|/* There is some problem with the debugging symbols generated by the    compiler such that the debugging symbol for the first line of a    function overlap with the function prologue.  */
end_comment

begin_define
define|#
directive|define
name|PROLOGUE_FIRSTLINE_OVERLAP
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* N_FUN symbols in shared libaries have 0 for their values and need    to be relocated. */
end_comment

begin_define
define|#
directive|define
name|SOFUN_ADDRESS_MAYBE_MISSING
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* #ifndef TM_LINUX_H */
end_comment

end_unit

