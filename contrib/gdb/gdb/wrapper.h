begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Longjump free calls to gdb internal routines.    Copyright 1999, 2000 Free Software Foundation, Inc.     This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2 of the License, or    (at your option) any later version.     This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 59 Temple Place - Suite 330,    Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|WRAPPER_H
end_ifndef

begin_define
define|#
directive|define
name|WRAPPER_H
value|1
end_define

begin_include
include|#
directive|include
file|"gdb.h"
end_include

begin_struct_decl
struct_decl|struct
name|value
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|expression
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|block
struct_decl|;
end_struct_decl

begin_comment
comment|/* Use this struct to pass arguments to wrapper routines. */
end_comment

begin_struct_decl
struct_decl|struct
name|gdb_wrapper_arguments
struct_decl|;
end_struct_decl

begin_function_decl
specifier|extern
name|int
name|gdb_parse_exp_1
parameter_list|(
name|char
modifier|*
modifier|*
parameter_list|,
name|struct
name|block
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|expression
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|gdb_evaluate_expression
parameter_list|(
name|struct
name|expression
modifier|*
parameter_list|,
name|struct
name|value
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|gdb_value_fetch_lazy
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|gdb_value_equal
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|,
name|struct
name|value
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|gdb_value_assign
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|,
name|struct
name|value
modifier|*
parameter_list|,
name|struct
name|value
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|gdb_value_subscript
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|,
name|struct
name|value
modifier|*
parameter_list|,
name|struct
name|value
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|enum
name|gdb_rc
name|gdb_value_struct_elt
parameter_list|(
name|struct
name|ui_out
modifier|*
name|uiout
parameter_list|,
name|struct
name|value
modifier|*
modifier|*
name|result_ptr
parameter_list|,
name|struct
name|value
modifier|*
modifier|*
name|argp
parameter_list|,
name|struct
name|value
modifier|*
modifier|*
name|args
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
modifier|*
name|static_memfuncp
parameter_list|,
name|char
modifier|*
name|err
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|gdb_value_ind
parameter_list|(
name|struct
name|value
modifier|*
name|val
parameter_list|,
name|struct
name|value
modifier|*
modifier|*
name|rval
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|gdb_parse_and_eval_type
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|type
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WRAPPER_H */
end_comment

end_unit

