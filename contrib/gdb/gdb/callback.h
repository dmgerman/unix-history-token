begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|CALLBACK_H
end_ifndef

begin_define
define|#
directive|define
name|CALLBACK_H
end_define

begin_typedef
typedef|typedef
name|struct
name|host_callback_struct
name|host_callback
typedef|;
end_typedef

begin_define
define|#
directive|define
name|MAX_CALLBACK_FDS
value|10
end_define

begin_struct
struct|struct
name|host_callback_struct
block|{
name|int
argument_list|(
argument|*close
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
name|int
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*get_errno
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*isatty
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
name|int
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*lseek
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
name|int
operator|,
name|long
operator|,
name|int
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*open
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
name|int
name|mode
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*read
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
name|int
operator|,
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*read_stdin
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*rename
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*system
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
expr_stmt|;
name|long
argument_list|(
argument|*time
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
name|long
operator|*
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*unlink
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*write
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
name|int
operator|,
specifier|const
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*write_stdout
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
expr_stmt|;
comment|/* Used when the target has gone away, so we can close open      handles and free memory etc etc. */
name|int
argument_list|(
argument|*shutdown
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|)
argument_list|)
expr_stmt|;
name|int
argument_list|(
argument|*init
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|)
argument_list|)
expr_stmt|;
comment|/* Talk to the user on a console. */
name|void
argument_list|(
argument|*printf_filtered
argument_list|)
name|PARAMS
argument_list|(
operator|(
name|host_callback
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
operator|...
operator|)
argument_list|)
expr_stmt|;
name|int
name|last_errno
decl_stmt|;
comment|/* host format */
name|int
name|fdmap
index|[
name|MAX_CALLBACK_FDS
index|]
decl_stmt|;
name|char
name|fdopen
index|[
name|MAX_CALLBACK_FDS
index|]
decl_stmt|;
name|char
name|alwaysopen
index|[
name|MAX_CALLBACK_FDS
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|extern
name|host_callback
name|default_callback
decl_stmt|;
end_decl_stmt

end_unit

