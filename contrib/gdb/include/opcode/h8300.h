begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Opcode table for the H8-300    Copyright (C) 1991,1992 Free Software Foundation.    Written by Steve Chamberlain, sac@cygnus.com.        This file is part of GDB, the GNU Debugger and GAS, the GNU Assembler.        This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2 of the License, or    (at your option) any later version.        This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.        You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_comment
comment|/* Instructions are stored as a sequence of nibbles.    If the nibble has value 15 or less then the representation is complete.    Otherwise, we record what it contains with several flags.  */
end_comment

begin_typedef
typedef|typedef
name|int
name|op_type
typedef|;
end_typedef

begin_define
define|#
directive|define
name|Hex0
value|0
end_define

begin_define
define|#
directive|define
name|Hex1
value|1
end_define

begin_define
define|#
directive|define
name|Hex2
value|2
end_define

begin_define
define|#
directive|define
name|Hex3
value|3
end_define

begin_define
define|#
directive|define
name|Hex4
value|4
end_define

begin_define
define|#
directive|define
name|Hex5
value|5
end_define

begin_define
define|#
directive|define
name|Hex6
value|6
end_define

begin_define
define|#
directive|define
name|Hex7
value|7
end_define

begin_define
define|#
directive|define
name|Hex8
value|8
end_define

begin_define
define|#
directive|define
name|Hex9
value|9
end_define

begin_define
define|#
directive|define
name|HexA
value|10
end_define

begin_define
define|#
directive|define
name|HexB
value|11
end_define

begin_define
define|#
directive|define
name|HexC
value|12
end_define

begin_define
define|#
directive|define
name|HexD
value|13
end_define

begin_define
define|#
directive|define
name|HexE
value|14
end_define

begin_define
define|#
directive|define
name|HexF
value|15
end_define

begin_define
define|#
directive|define
name|START
value|0x20
end_define

begin_define
define|#
directive|define
name|SRC
value|0x40
end_define

begin_define
define|#
directive|define
name|DST
value|0x80
end_define

begin_define
define|#
directive|define
name|L_8
value|0x01
end_define

begin_define
define|#
directive|define
name|L_16
value|0x02
end_define

begin_define
define|#
directive|define
name|L_32
value|0x04
end_define

begin_define
define|#
directive|define
name|L_P
value|0x08
end_define

begin_define
define|#
directive|define
name|L_24
value|0x10
end_define

begin_define
define|#
directive|define
name|REG
value|0x100
end_define

begin_define
define|#
directive|define
name|IMM
value|0x1000
end_define

begin_define
define|#
directive|define
name|DISP
value|0x2000
end_define

begin_define
define|#
directive|define
name|IND
value|0x4000
end_define

begin_define
define|#
directive|define
name|INC
value|0x8000
end_define

begin_define
define|#
directive|define
name|DEC
value|0x10000
end_define

begin_define
define|#
directive|define
name|L_3
value|0x20000
end_define

begin_define
define|#
directive|define
name|KBIT
value|0x40000
end_define

begin_define
define|#
directive|define
name|DBIT
value|0x80000
end_define

begin_define
define|#
directive|define
name|DISPREG
value|0x100000
end_define

begin_define
define|#
directive|define
name|IGNORE
value|0x200000
end_define

begin_define
define|#
directive|define
name|E
value|0x400000
end_define

begin_comment
comment|/* FIXME: end of nibble sequence? */
end_comment

begin_define
define|#
directive|define
name|L_2
value|0x800000
end_define

begin_define
define|#
directive|define
name|CCR
value|0x4000000
end_define

begin_define
define|#
directive|define
name|ABS
value|0x8000000
end_define

begin_define
define|#
directive|define
name|B30
value|0x1000000
end_define

begin_comment
comment|/* bit 3 must be low */
end_comment

begin_define
define|#
directive|define
name|B31
value|0x2000000
end_define

begin_comment
comment|/* bit 3 must be high */
end_comment

begin_define
define|#
directive|define
name|ABSJMP
value|0x10000000
end_define

begin_define
define|#
directive|define
name|ABSMOV
value|0x20000000
end_define

begin_define
define|#
directive|define
name|PCREL
value|0x40000000
end_define

begin_define
define|#
directive|define
name|MEMIND
value|0x80000000
end_define

begin_define
define|#
directive|define
name|IMM3
value|IMM|L_3
end_define

begin_define
define|#
directive|define
name|IMM2
value|IMM|L_2
end_define

begin_define
define|#
directive|define
name|SIZE
value|(L_2|L_3|L_8|L_16|L_32|L_P|L_24)
end_define

begin_define
define|#
directive|define
name|MODE
value|(REG|IMM|DISP|IND|INC|DEC|CCR|ABS|MEMIND)
end_define

begin_define
define|#
directive|define
name|RD8
value|(DST|L_8|REG)
end_define

begin_define
define|#
directive|define
name|RD16
value|(DST|L_16|REG)
end_define

begin_define
define|#
directive|define
name|RD32
value|(DST|L_32|REG)
end_define

begin_define
define|#
directive|define
name|RS8
value|(SRC|L_8|REG)
end_define

begin_define
define|#
directive|define
name|RS16
value|(SRC|L_16|REG)
end_define

begin_define
define|#
directive|define
name|RS32
value|(SRC|L_32|REG)
end_define

begin_define
define|#
directive|define
name|RSP
value|(SRC|L_P|REG)
end_define

begin_define
define|#
directive|define
name|RDP
value|(DST|L_P|REG)
end_define

begin_define
define|#
directive|define
name|IMM8
value|(IMM|SRC|L_8)
end_define

begin_define
define|#
directive|define
name|IMM16
value|(IMM|SRC|L_16)
end_define

begin_define
define|#
directive|define
name|IMM32
value|(IMM|SRC|L_32)
end_define

begin_define
define|#
directive|define
name|ABS8SRC
value|(SRC|ABS|L_8)
end_define

begin_define
define|#
directive|define
name|ABS8DST
value|(DST|ABS|L_8)
end_define

begin_define
define|#
directive|define
name|DISP8
value|(PCREL|L_8)
end_define

begin_define
define|#
directive|define
name|DISP16
value|(PCREL|L_16)
end_define

begin_define
define|#
directive|define
name|DISP8SRC
value|(DISP|L_8|SRC)
end_define

begin_define
define|#
directive|define
name|DISP16SRC
value|(DISP|L_16|SRC)
end_define

begin_define
define|#
directive|define
name|DISP8DST
value|(DISP|L_8|DST)
end_define

begin_define
define|#
directive|define
name|DISP16DST
value|(DISP|L_16|DST)
end_define

begin_define
define|#
directive|define
name|ABS16SRC
value|(SRC|ABS|L_16)
end_define

begin_define
define|#
directive|define
name|ABS16DST
value|(DST|ABS|L_16)
end_define

begin_define
define|#
directive|define
name|ABS24SRC
value|(SRC|ABS|L_24)
end_define

begin_define
define|#
directive|define
name|ABS24DST
value|(DST|ABS|L_24)
end_define

begin_define
define|#
directive|define
name|RDDEC
value|(DST|DEC)
end_define

begin_define
define|#
directive|define
name|RSINC
value|(SRC|INC)
end_define

begin_define
define|#
directive|define
name|RDIND
value|(DST|IND)
end_define

begin_define
define|#
directive|define
name|RSIND
value|(SRC|IND)
end_define

begin_if
if|#
directive|if
literal|1
end_if

begin_define
define|#
directive|define
name|OR8
value|RS8
end_define

begin_comment
comment|/* ??? OR as in One Register? */
end_comment

begin_define
define|#
directive|define
name|OR16
value|RS16
end_define

begin_define
define|#
directive|define
name|OR32
value|RS32
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|OR8
value|RD8
end_define

begin_define
define|#
directive|define
name|OR16
value|RD16
end_define

begin_define
define|#
directive|define
name|OR32
value|RD32
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_struct
struct|struct
name|code
block|{
name|op_type
name|nib
index|[
literal|30
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|arg
block|{
name|op_type
name|nib
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|h8_opcode
block|{
name|int
name|how
decl_stmt|;
name|int
name|inbase
decl_stmt|;
name|int
name|time
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
name|struct
name|arg
name|args
decl_stmt|;
name|struct
name|code
name|data
decl_stmt|;
name|int
name|length
decl_stmt|;
name|int
name|noperands
decl_stmt|;
name|int
name|idx
decl_stmt|;
name|int
name|size
decl_stmt|;
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|DEFINE_TABLE
end_ifdef

begin_define
define|#
directive|define
name|BITOP
parameter_list|(
name|code
parameter_list|,
name|imm
parameter_list|,
name|name
parameter_list|,
name|op00
parameter_list|,
name|op01
parameter_list|,
name|op10
parameter_list|,
name|op11
parameter_list|,
name|op20
parameter_list|,
name|op21
parameter_list|)
define|\
value|{ code, 1, 2, name,	{imm,RD8,E},	{op00, op01, imm, RD8, E, 0, 0, 0, 0}, 0, 0, 0, 0},\ { code, 1, 6, name,	{imm,RDIND,E},	{op10, op11, B30|RDIND, 0, op00,op01, imm, 0, E}, 0, 0, 0, 0},\ { code, 1, 6, name,	{imm,ABS8DST,E},{op20, op21, ABS8DST, IGNORE, op00,op01, imm, 0,E}, 0, 0, 0, 0}
end_define

begin_define
define|#
directive|define
name|EBITOP
parameter_list|(
name|code
parameter_list|,
name|imm
parameter_list|,
name|name
parameter_list|,
name|op00
parameter_list|,
name|op01
parameter_list|,
name|op10
parameter_list|,
name|op11
parameter_list|,
name|op20
parameter_list|,
name|op21
parameter_list|)
define|\
value|BITOP(code,imm, name, op00+1, op01, op10,op11, op20,op21),\    BITOP(code,RS8,  name, op00, op01, op10,op11, op20,op21)
end_define

begin_define
define|#
directive|define
name|WTWOP
parameter_list|(
name|code
parameter_list|,
name|name
parameter_list|,
name|op1
parameter_list|,
name|op2
parameter_list|)
define|\
value|{ code, 1, 2, name, {RS16, RD16, E}, { op1, op2, RS16, RD16, E, 0, 0, 0, 0}, 0, 0, 0, 0}
end_define

begin_define
define|#
directive|define
name|BRANCH
parameter_list|(
name|code
parameter_list|,
name|name
parameter_list|,
name|op
parameter_list|)
define|\
value|{ code, 1, 4,name,{DISP8,E,0}, { 0x4, op, DISP8, IGNORE, E, 0, 0, 0, 0}, 0, 0, 0, 0}, \ { code, 0, 6,name,{DISP16,E,0}, { 0x5, 0x8, op, 0x0, DISP16, IGNORE, IGNORE, IGNORE, E,0}, 0, 0, 0, 0}
end_define

begin_define
define|#
directive|define
name|SOP
parameter_list|(
name|code
parameter_list|,
name|x
parameter_list|,
name|name
parameter_list|)
define|\
value|{code, 1, x,  name
end_define

begin_define
define|#
directive|define
name|NEW_SOP
parameter_list|(
name|code
parameter_list|,
name|in
parameter_list|,
name|x
parameter_list|,
name|name
parameter_list|)
define|\
value|{code, in, x,  name
end_define

begin_define
define|#
directive|define
name|EOP
value|,0,0,0 }
end_define

begin_define
define|#
directive|define
name|TWOOP
parameter_list|(
name|code
parameter_list|,
name|name
parameter_list|,
name|op1
parameter_list|,
name|op2
parameter_list|,
name|op3
parameter_list|)
define|\
value|{ code,1, 2,name, {IMM8, RD8, E},	{ op1, RD8, IMM8, IGNORE, E, 0, 0, 0, 0}, 0, 0, 0, 0},\ { code, 1, 2,name, {RS8, RD8, E},	{ op2, op3, RS8, RD8, E, 0, 0, 0, 0}, 0, 0, 0, 0}
end_define

begin_define
define|#
directive|define
name|UNOP
parameter_list|(
name|code
parameter_list|,
name|name
parameter_list|,
name|op1
parameter_list|,
name|op2
parameter_list|)
define|\
value|{ code, 1, 2, name, {OR8, E, 0}, { op1, op2, 0, OR8, E, 0, 0, 0, 0}, 0, 0, 0, 0}
end_define

begin_define
define|#
directive|define
name|UNOP3
parameter_list|(
name|code
parameter_list|,
name|name
parameter_list|,
name|op1
parameter_list|,
name|op2
parameter_list|,
name|op3
parameter_list|)
define|\
value|{ O(code,SB), 1, 2, name, {OR8,  E, 0}, {op1, op2, op3+0, OR8,  E, 0, 0, 0, 0}, 0, 0, 0, 0}, \ { O(code,SW), 0, 2, name, {OR16, E, 0}, {op1, op2, op3+1, OR16, E, 0, 0, 0, 0}, 0, 0, 0, 0}, \ { O(code,SL), 0, 2, name, {OR32, E, 0}, {op1, op2, op3+3, OR32|B30, E, 0, 0, 0, 0}, 0, 0, 0, 0}
end_define

begin_define
define|#
directive|define
name|IMM32LIST
value|IMM32,IGNORE,IGNORE,IGNORE,IGNORE,IGNORE,IGNORE,IGNORE
end_define

begin_define
define|#
directive|define
name|IMM24LIST
value|IMM24,IGNORE,IGNORE,IGNORE,IGNORE,IGNORE
end_define

begin_define
define|#
directive|define
name|IMM16LIST
value|IMM16,IGNORE,IGNORE,IGNORE
end_define

begin_define
define|#
directive|define
name|A16LIST
value|L_16,IGNORE,IGNORE,IGNORE
end_define

begin_define
define|#
directive|define
name|DISP24LIST
value|DISP|L_24,IGNORE,IGNORE,IGNORE,IGNORE,IGNORE
end_define

begin_define
define|#
directive|define
name|ABS24LIST
value|ABS|L_24,IGNORE,IGNORE,IGNORE,IGNORE,IGNORE
end_define

begin_define
define|#
directive|define
name|A24LIST
value|L_24,IGNORE,IGNORE,IGNORE,IGNORE,IGNORE
end_define

begin_define
define|#
directive|define
name|PREFIX32
value|0x0,0x1,0x0,0x0
end_define

begin_define
define|#
directive|define
name|PREFIXLDC
value|0x0,0x1,0x4,0x0
end_define

begin_define
define|#
directive|define
name|O
parameter_list|(
name|op
parameter_list|,
name|size
parameter_list|)
value|(op*4+size)
end_define

begin_define
define|#
directive|define
name|O_RECOMPILE
value|0
end_define

begin_define
define|#
directive|define
name|O_ADD
value|1
end_define

begin_define
define|#
directive|define
name|O_ADDX
value|2
end_define

begin_define
define|#
directive|define
name|O_AND
value|3
end_define

begin_define
define|#
directive|define
name|O_BAND
value|4
end_define

begin_define
define|#
directive|define
name|O_BRA
value|5
end_define

begin_define
define|#
directive|define
name|O_BRN
value|6
end_define

begin_define
define|#
directive|define
name|O_BHI
value|7
end_define

begin_define
define|#
directive|define
name|O_BLS
value|8
end_define

begin_define
define|#
directive|define
name|O_BCC
value|9
end_define

begin_define
define|#
directive|define
name|O_BCS
value|10
end_define

begin_define
define|#
directive|define
name|O_BNE
value|11
end_define

begin_define
define|#
directive|define
name|O_BVC
value|12
end_define

begin_define
define|#
directive|define
name|O_BVS
value|13
end_define

begin_define
define|#
directive|define
name|O_BPL
value|14
end_define

begin_define
define|#
directive|define
name|O_BMI
value|15
end_define

begin_define
define|#
directive|define
name|O_BGE
value|16
end_define

begin_define
define|#
directive|define
name|O_BLT
value|17
end_define

begin_define
define|#
directive|define
name|O_BGT
value|18
end_define

begin_define
define|#
directive|define
name|O_BLE
value|19
end_define

begin_define
define|#
directive|define
name|O_ANDC
value|20
end_define

begin_define
define|#
directive|define
name|O_BEQ
value|21
end_define

begin_define
define|#
directive|define
name|O_BCLR
value|22
end_define

begin_define
define|#
directive|define
name|O_BIAND
value|23
end_define

begin_define
define|#
directive|define
name|O_BILD
value|24
end_define

begin_define
define|#
directive|define
name|O_BIOR
value|25
end_define

begin_define
define|#
directive|define
name|O_BIXOR
value|26
end_define

begin_define
define|#
directive|define
name|O_BIST
value|27
end_define

begin_define
define|#
directive|define
name|O_BLD
value|28
end_define

begin_define
define|#
directive|define
name|O_BNOT
value|29
end_define

begin_define
define|#
directive|define
name|O_BSET
value|30
end_define

begin_define
define|#
directive|define
name|O_BSR
value|31
end_define

begin_define
define|#
directive|define
name|O_BXOR
value|32
end_define

begin_define
define|#
directive|define
name|O_CMP
value|33
end_define

begin_define
define|#
directive|define
name|O_DAA
value|34
end_define

begin_define
define|#
directive|define
name|O_DAS
value|35
end_define

begin_define
define|#
directive|define
name|O_DEC
value|36
end_define

begin_define
define|#
directive|define
name|O_DIVU
value|37
end_define

begin_define
define|#
directive|define
name|O_DIVS
value|38
end_define

begin_define
define|#
directive|define
name|O_INC
value|39
end_define

begin_define
define|#
directive|define
name|O_LDC
value|40
end_define

begin_define
define|#
directive|define
name|O_MOV_TO_MEM
value|41
end_define

begin_define
define|#
directive|define
name|O_OR
value|42
end_define

begin_define
define|#
directive|define
name|O_ROTL
value|43
end_define

begin_define
define|#
directive|define
name|O_ROTR
value|44
end_define

begin_define
define|#
directive|define
name|O_ROTXL
value|45
end_define

begin_define
define|#
directive|define
name|O_ROTXR
value|46
end_define

begin_define
define|#
directive|define
name|O_BPT
value|47
end_define

begin_define
define|#
directive|define
name|O_SHAL
value|48
end_define

begin_define
define|#
directive|define
name|O_SHAR
value|49
end_define

begin_define
define|#
directive|define
name|O_SHLL
value|50
end_define

begin_define
define|#
directive|define
name|O_SHLR
value|51
end_define

begin_define
define|#
directive|define
name|O_SUB
value|52
end_define

begin_define
define|#
directive|define
name|O_SUBS
value|53
end_define

begin_define
define|#
directive|define
name|O_TRAPA
value|54
end_define

begin_define
define|#
directive|define
name|O_XOR
value|55
end_define

begin_define
define|#
directive|define
name|O_XORC
value|56
end_define

begin_define
define|#
directive|define
name|O_BOR
value|57
end_define

begin_define
define|#
directive|define
name|O_BST
value|58
end_define

begin_define
define|#
directive|define
name|O_BTST
value|59
end_define

begin_define
define|#
directive|define
name|O_EEPMOV
value|60
end_define

begin_define
define|#
directive|define
name|O_EXTS
value|61
end_define

begin_define
define|#
directive|define
name|O_EXTU
value|62
end_define

begin_define
define|#
directive|define
name|O_JMP
value|63
end_define

begin_define
define|#
directive|define
name|O_JSR
value|64
end_define

begin_define
define|#
directive|define
name|O_MULU
value|65
end_define

begin_define
define|#
directive|define
name|O_MULS
value|66
end_define

begin_define
define|#
directive|define
name|O_NOP
value|67
end_define

begin_define
define|#
directive|define
name|O_NOT
value|68
end_define

begin_define
define|#
directive|define
name|O_ORC
value|69
end_define

begin_define
define|#
directive|define
name|O_RTE
value|70
end_define

begin_define
define|#
directive|define
name|O_STC
value|71
end_define

begin_define
define|#
directive|define
name|O_SUBX
value|72
end_define

begin_define
define|#
directive|define
name|O_NEG
value|73
end_define

begin_define
define|#
directive|define
name|O_RTS
value|74
end_define

begin_define
define|#
directive|define
name|O_SLEEP
value|75
end_define

begin_define
define|#
directive|define
name|O_ILL
value|76
end_define

begin_define
define|#
directive|define
name|O_ADDS
value|77
end_define

begin_define
define|#
directive|define
name|O_SYSCALL
value|78
end_define

begin_define
define|#
directive|define
name|O_MOV_TO_REG
value|79
end_define

begin_define
define|#
directive|define
name|O_LAST
value|80
end_define

begin_define
define|#
directive|define
name|SB
value|0
end_define

begin_define
define|#
directive|define
name|SW
value|1
end_define

begin_define
define|#
directive|define
name|SL
value|2
end_define

begin_comment
comment|/* FIXME: Lots of insns have "E, 0, 0, 0, 0" in the nibble code sequences.    Methinks the zeroes aren't necessary.  Once confirmed, nuke 'em.  */
end_comment

begin_decl_stmt
name|struct
name|h8_opcode
name|h8_opcodes
index|[]
init|=
block|{
name|TWOOP
argument_list|(
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"add.b"
argument_list|,
literal|0x8
argument_list|,
literal|0x0
argument_list|,
literal|0x8
argument_list|)
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"add.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x9
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|"add.w"
argument_list|)
block|,
block|{
name|IMM16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0x9
block|,
literal|0x1
block|,
name|RD16
block|,
name|IMM16
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"add.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0xA
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|,
literal|"add.l"
argument_list|)
block|,
block|{
name|IMM32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0x1
block|,
name|B30
operator||
name|RD32
block|,
name|IMM32LIST
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_ADDS
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"adds"
argument_list|)
block|,
block|{
name|KBIT
block|,
name|RDP
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0xB
block|,
name|KBIT
block|,
name|RDP
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|TWOOP
argument_list|(
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"addx"
argument_list|,
literal|0x9
argument_list|,
literal|0x0
argument_list|,
literal|0xE
argument_list|)
block|,
name|TWOOP
argument_list|(
name|O
argument_list|(
name|O_AND
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"and.b"
argument_list|,
literal|0xE
argument_list|,
literal|0x1
argument_list|,
literal|0x6
argument_list|)
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_AND
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"and.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0x6
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_AND
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|"and.w"
argument_list|)
block|,
block|{
name|IMM16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0x9
block|,
literal|0x6
block|,
name|RD16
block|,
name|IMM16
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_AND
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|,
literal|"and.l"
argument_list|)
block|,
block|{
name|IMM32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0x6
block|,
name|B30
operator||
name|RD32
block|,
name|IMM32LIST
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_AND
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"and.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xF
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0x6
block|,
name|B30
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_ANDC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"andc"
argument_list|)
block|,
block|{
name|IMM8
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x6
block|,
name|IMM8
block|,
name|IGNORE
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BAND
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
argument_list|,
literal|"band"
argument_list|,
literal|0x7
argument_list|,
literal|0x6
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BRA
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bra"
argument_list|,
literal|0x0
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BRA
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bt"
argument_list|,
literal|0x0
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BRN
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"brn"
argument_list|,
literal|0x1
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BRN
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bf"
argument_list|,
literal|0x1
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BHI
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bhi"
argument_list|,
literal|0x2
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BLS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bls"
argument_list|,
literal|0x3
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BCC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bcc"
argument_list|,
literal|0x4
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BCC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bhs"
argument_list|,
literal|0x4
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BCS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bcs"
argument_list|,
literal|0x5
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BCS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"blo"
argument_list|,
literal|0x5
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BNE
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bne"
argument_list|,
literal|0x6
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BEQ
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"beq"
argument_list|,
literal|0x7
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BVC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bvc"
argument_list|,
literal|0x8
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BVS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bvs"
argument_list|,
literal|0x9
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BPL
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bpl"
argument_list|,
literal|0xA
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BMI
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bmi"
argument_list|,
literal|0xB
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BGE
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bge"
argument_list|,
literal|0xC
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BLT
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"blt"
argument_list|,
literal|0xD
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BGT
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bgt"
argument_list|,
literal|0xE
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BLE
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"ble"
argument_list|,
literal|0xF
argument_list|)
block|,
name|EBITOP
argument_list|(
name|O
argument_list|(
name|O_BCLR
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
argument_list|,
literal|"bclr"
argument_list|,
literal|0x6
argument_list|,
literal|0x2
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BIAND
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B31
argument_list|,
literal|"biand"
argument_list|,
literal|0x7
argument_list|,
literal|0x6
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BILD
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B31
argument_list|,
literal|"bild"
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BIOR
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B31
argument_list|,
literal|"bior"
argument_list|,
literal|0x7
argument_list|,
literal|0x4
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BIST
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B31
argument_list|,
literal|"bist"
argument_list|,
literal|0x6
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BIXOR
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B31
argument_list|,
literal|"bixor"
argument_list|,
literal|0x7
argument_list|,
literal|0x5
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BLD
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bld"
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|)
block|,
name|EBITOP
argument_list|(
name|O
argument_list|(
name|O_BNOT
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bnot"
argument_list|,
literal|0x6
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BOR
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bor"
argument_list|,
literal|0x7
argument_list|,
literal|0x4
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|)
block|,
name|EBITOP
argument_list|(
name|O
argument_list|(
name|O_BSET
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bset"
argument_list|,
literal|0x6
argument_list|,
literal|0x0
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|)
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_BSR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"bsr"
argument_list|)
block|,
block|{
name|DISP8
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x5
block|,
literal|0x5
block|,
name|DISP8
block|,
name|IGNORE
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_BSR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"bsr"
argument_list|)
block|,
block|{
name|DISP16
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x5
block|,
literal|0xC
block|,
literal|0x0
block|,
literal|0x0
block|,
name|DISP16
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BST
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bst"
argument_list|,
literal|0x6
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|)
block|,
name|EBITOP
argument_list|(
name|O
argument_list|(
name|O_BTST
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"btst"
argument_list|,
literal|0x6
argument_list|,
literal|0x3
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BXOR
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bxor"
argument_list|,
literal|0x7
argument_list|,
literal|0x5
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|)
block|,
name|TWOOP
argument_list|(
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"cmp.b"
argument_list|,
literal|0xA
argument_list|,
literal|0x1
argument_list|,
literal|0xC
argument_list|)
block|,
name|WTWOP
argument_list|(
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"cmp.w"
argument_list|,
literal|0x1
argument_list|,
literal|0xD
argument_list|)
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"cmp.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x1
block|,
literal|0xD
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|"cmp.w"
argument_list|)
block|,
block|{
name|IMM16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0x9
block|,
literal|0x2
block|,
name|RD16
block|,
name|IMM16
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|,
literal|"cmp.l"
argument_list|)
block|,
block|{
name|IMM32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0x2
block|,
name|B30
operator||
name|RD32
block|,
name|IMM32LIST
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"cmp.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x1
block|,
literal|0xF
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
name|EOP
block|,
name|UNOP
argument_list|(
name|O
argument_list|(
name|O_DAA
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"daa"
argument_list|,
literal|0x0
argument_list|,
literal|0xF
argument_list|)
block|,
name|UNOP
argument_list|(
name|O
argument_list|(
name|O_DAS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"das"
argument_list|,
literal|0x1
argument_list|,
literal|0xF
argument_list|)
block|,
name|UNOP
argument_list|(
name|O
argument_list|(
name|O_DEC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"dec.b"
argument_list|,
literal|0x1
argument_list|,
literal|0xA
argument_list|)
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_DEC
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"dec.w"
argument_list|)
block|,
block|{
name|DBIT
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x1
block|,
literal|0xB
block|,
literal|0x5
operator||
name|DBIT
block|,
name|RD16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_DEC
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"dec.l"
argument_list|)
block|,
block|{
name|DBIT
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x1
block|,
literal|0xB
block|,
literal|0x7
operator||
name|DBIT
block|,
name|RD32
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_DIVU
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|6
argument_list|,
literal|"divxu.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x5
block|,
literal|0x1
block|,
name|RS8
block|,
name|RD16
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_DIVU
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|"divxu.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x5
block|,
literal|0x3
block|,
name|RS16
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_DIVS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|"divxs.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xD
block|,
literal|0x0
block|,
literal|0x5
block|,
literal|0x1
block|,
name|RS8
block|,
name|RD16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_DIVS
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|02
argument_list|,
literal|"divxs.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xD
block|,
literal|0x0
block|,
literal|0x5
block|,
literal|0x3
block|,
name|RS16
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_EEPMOV
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|50
argument_list|,
literal|"eepmov"
argument_list|)
block|,
block|{
name|E
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x7
block|,
literal|0xB
block|,
literal|0x5
block|,
literal|0xC
block|,
literal|0x5
block|,
literal|0x9
block|,
literal|0x8
block|,
literal|0xF
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_EEPMOV
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|"eepmovw"
argument_list|)
block|,
block|{
name|E
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x7
block|,
literal|0xB
block|,
literal|0xD
block|,
literal|0x4
block|,
literal|0x5
block|,
literal|0x9
block|,
literal|0x8
block|,
literal|0xF
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_EXTS
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"exts.w"
argument_list|)
block|,
block|{
name|OR16
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x1
block|,
literal|0x7
block|,
literal|0xD
block|,
name|OR16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_EXTS
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"exts.l"
argument_list|)
block|,
block|{
name|OR32
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x1
block|,
literal|0x7
block|,
literal|0xF
block|,
name|OR32
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_EXTU
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"extu.w"
argument_list|)
block|,
block|{
name|OR16
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x1
block|,
literal|0x7
block|,
literal|0x5
block|,
name|OR16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_EXTU
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"extu.l"
argument_list|)
block|,
block|{
name|OR32
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x1
block|,
literal|0x7
block|,
literal|0x7
block|,
name|OR32
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|UNOP
argument_list|(
name|O
argument_list|(
name|O_INC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"inc"
argument_list|,
literal|0x0
argument_list|,
literal|0xA
argument_list|)
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_INC
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"inc.w"
argument_list|)
block|,
block|{
name|DBIT
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0xB
block|,
literal|0x5
operator||
name|DBIT
block|,
name|RD16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_INC
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"inc.l"
argument_list|)
block|,
block|{
name|DBIT
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0xB
block|,
literal|0x7
operator||
name|DBIT
block|,
name|RD32
operator||
name|B30
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_JMP
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|"jmp"
argument_list|)
block|,
block|{
name|RSIND
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x5
block|,
literal|0x9
block|,
name|B30
operator||
name|RSIND
block|,
literal|0x0
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_JMP
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"jmp"
argument_list|)
block|,
block|{
name|SRC
operator||
name|ABSJMP
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x5
block|,
literal|0xA
block|,
name|SRC
operator||
name|ABSJMP
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_JMP
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|8
argument_list|,
literal|"jmp"
argument_list|)
block|,
block|{
name|SRC
operator||
name|MEMIND
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x5
block|,
literal|0xB
block|,
name|SRC
operator||
name|MEMIND
block|,
name|IGNORE
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_JSR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"jsr"
argument_list|)
block|,
block|{
name|SRC
operator||
name|RSIND
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x5
block|,
literal|0xD
block|,
name|B30
operator||
name|RSIND
block|,
literal|0x0
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_JSR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|8
argument_list|,
literal|"jsr"
argument_list|)
block|,
block|{
name|SRC
operator||
name|ABSJMP
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x5
block|,
literal|0xE
block|,
name|SRC
operator||
name|ABSJMP
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_JSR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|8
argument_list|,
literal|"jsr"
argument_list|)
block|,
block|{
name|SRC
operator||
name|MEMIND
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x5
block|,
literal|0xF
block|,
name|SRC
operator||
name|MEMIND
block|,
name|IGNORE
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"ldc"
argument_list|)
block|,
block|{
name|IMM8
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x7
block|,
name|IMM8
block|,
name|IGNORE
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"ldc"
argument_list|)
block|,
block|{
name|OR8
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x3
block|,
literal|0x0
block|,
name|OR8
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"ldc"
argument_list|)
block|,
block|{
name|ABS16SRC
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x0
block|,
literal|0x0
block|,
name|ABS16SRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"ldc"
argument_list|)
block|,
block|{
name|ABS24SRC
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x2
block|,
literal|0x0
block|,
literal|0x0
block|,
literal|0x0
block|,
name|SRC
operator||
name|ABS24LIST
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"ldc"
argument_list|)
block|,
block|{
name|DISP
operator||
name|SRC
operator||
name|L_16
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|DISPREG
block|,
literal|0
block|,
name|DISP
operator||
name|L_16
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"ldc"
argument_list|)
block|,
block|{
name|DISP
operator||
name|SRC
operator||
name|L_24
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
name|PREFIXLDC
block|,
literal|0x7
block|,
literal|0x8
block|,
name|B30
operator||
name|DISPREG
block|,
literal|0
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x2
block|,
literal|0x0
block|,
literal|0x0
block|,
literal|0x0
block|,
name|SRC
operator||
name|DISP24LIST
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"ldc"
argument_list|)
block|,
block|{
name|RSINC
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xD
block|,
name|B30
operator||
name|RSINC
block|,
literal|0x0
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"ldc"
argument_list|)
block|,
block|{
name|RSIND
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RDIND
block|,
literal|0x0
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|ABSMOV
operator||
name|ABS
operator||
name|SRC
operator||
name|L_16
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x0
block|,
name|RD8
block|,
name|ABSMOV
operator||
name|SRC
operator||
name|ABS
operator||
name|A16LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|ABSMOV
operator||
name|ABS
operator||
name|SRC
operator||
name|L_24
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x2
block|,
name|RD8
block|,
literal|0x0
block|,
literal|0x0
block|,
name|SRC
operator||
name|ABSMOV
operator||
name|ABS
operator||
name|A24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|ABSMOV
operator||
name|ABS
operator||
name|L_16
operator||
name|DST
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x8
block|,
name|RS8
block|,
name|ABSMOV
operator||
name|DST
operator||
name|ABS
operator||
name|A16LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|ABSMOV
operator||
name|ABS
operator||
name|DST
operator||
name|L_24
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0xA
block|,
name|RS8
block|,
literal|0x0
block|,
literal|0x0
block|,
name|DST
operator||
name|ABSMOV
operator||
name|ABS
operator||
name|A24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|DISP
operator||
name|L_24
operator||
name|SRC
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0x8
block|,
name|B30
operator||
name|DISPREG
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xA
block|,
literal|0x2
block|,
name|RD8
block|,
literal|0x0
block|,
literal|0x0
block|,
name|SRC
operator||
name|DISP24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|DISP
operator||
name|L_24
operator||
name|DST
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0x8
block|,
name|B30
operator||
name|DISPREG
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xA
block|,
literal|0xA
block|,
name|RS8
block|,
literal|0x0
block|,
literal|0x0
block|,
name|DST
operator||
name|DISP24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0xC
block|,
name|RS8
block|,
name|RD8
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|IMM8
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
literal|0xF
block|,
name|RD8
block|,
name|IMM8
block|,
name|IGNORE
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|RSIND
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0x8
block|,
name|B30
operator||
name|RSIND
block|,
name|RD8
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|DISP16SRC
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xE
block|,
name|B30
operator||
name|DISPREG
block|,
name|RD8
block|,
name|DISP16SRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|RSINC
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xC
block|,
name|B30
operator||
name|RSINC
block|,
name|RD8
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|ABS8SRC
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
literal|0x2
block|,
name|RD8
block|,
name|ABS8SRC
block|,
name|IGNORE
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RDIND
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0x8
block|,
name|RDIND
operator||
name|B31
block|,
name|RS8
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|DISP16DST
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xE
block|,
name|DISPREG
operator||
name|B31
block|,
name|RS8
block|,
name|DISP16DST
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RDDEC
operator||
name|B31
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xC
block|,
name|RDDEC
operator||
name|B31
block|,
name|RS8
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|"mov.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|ABS8DST
block|,
name|E
block|}
block|,
block|{
literal|0x3
block|,
name|RS8
block|,
name|ABS8DST
block|,
name|IGNORE
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RDIND
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0x9
block|,
name|RDIND
operator||
name|B31
block|,
name|RS16
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|DISP
operator||
name|L_24
operator||
name|SRC
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0x8
block|,
name|B30
operator||
name|DISPREG
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x2
block|,
name|RD16
block|,
literal|0x0
block|,
literal|0x0
block|,
name|SRC
operator||
name|DISP24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|DISP
operator||
name|L_24
operator||
name|DST
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0x8
block|,
name|B30
operator||
name|DISPREG
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0xA
block|,
name|RS16
block|,
literal|0x0
block|,
literal|0x0
block|,
name|DST
operator||
name|DISP24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|ABS
operator||
name|L_24
operator||
name|SRC
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xB
block|,
literal|0x2
block|,
name|RD16
block|,
literal|0x0
block|,
literal|0x0
block|,
name|SRC
operator||
name|ABS24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|ABS
operator||
name|L_24
operator||
name|DST
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xB
block|,
literal|0xA
block|,
name|RS16
block|,
literal|0x0
block|,
literal|0x0
block|,
name|DST
operator||
name|ABS24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0xD
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|IMM16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0x9
block|,
literal|0x0
block|,
name|RD16
block|,
name|IMM16
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|RSIND
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RSIND
block|,
name|RD16
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|DISP16SRC
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xF
block|,
name|B30
operator||
name|DISPREG
block|,
name|RD16
block|,
name|DISP16SRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|RSINC
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xD
block|,
name|B30
operator||
name|RSINC
block|,
name|RD16
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|ABS16SRC
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xB
block|,
literal|0x0
block|,
name|RD16
block|,
name|ABS16SRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|DISP16DST
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xF
block|,
name|DISPREG
operator||
name|B31
block|,
name|RS16
block|,
name|DISP16DST
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RDDEC
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xD
block|,
name|RDDEC
operator||
name|B31
block|,
name|RS16
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|ABS16DST
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xB
block|,
literal|0x8
block|,
name|RS16
block|,
name|ABS16DST
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|IMM32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0x0
block|,
name|B30
operator||
name|RD32
block|,
name|IMM32LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0xF
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|RSIND
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x6
block|,
literal|0x9
block|,
name|RSIND
operator||
name|B30
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|DISP16SRC
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x6
block|,
literal|0xF
block|,
name|DISPREG
operator||
name|B30
block|,
name|B30
operator||
name|RD32
block|,
name|DISP16SRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|DISP
operator||
name|L_24
operator||
name|SRC
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x7
block|,
literal|0x8
block|,
name|B30
operator||
name|DISPREG
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x2
block|,
name|B30
operator||
name|RD32
block|,
literal|0x0
block|,
literal|0x0
block|,
name|SRC
operator||
name|DISP24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|RSINC
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x6
block|,
literal|0xD
block|,
name|B30
operator||
name|RSINC
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|ABS16SRC
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x0
block|,
name|B30
operator||
name|RD32
block|,
name|ABS16SRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|ABS24SRC
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x2
block|,
name|B30
operator||
name|RD32
block|,
literal|0x0
block|,
literal|0x0
block|,
name|SRC
operator||
name|ABS24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|RDIND
block|,
name|E
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x6
block|,
literal|0x9
block|,
name|RDIND
operator||
name|B31
block|,
name|B30
operator||
name|RS32
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|DISP16DST
block|,
name|E
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x6
block|,
literal|0xF
block|,
name|DISPREG
operator||
name|B31
block|,
name|B30
operator||
name|RS32
block|,
name|DISP16DST
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|DISP
operator||
name|L_24
operator||
name|DST
block|,
name|E
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x7
block|,
literal|0x8
block|,
name|B31
operator||
name|DISPREG
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0xA
block|,
name|B30
operator||
name|RS32
block|,
literal|0x0
block|,
literal|0x0
block|,
name|DST
operator||
name|DISP24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|RDDEC
block|,
name|E
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x6
block|,
literal|0xD
block|,
name|RDDEC
operator||
name|B31
block|,
name|B30
operator||
name|RS32
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|ABS16DST
block|,
name|E
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x8
block|,
name|B30
operator||
name|RS32
block|,
name|ABS16DST
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|"mov.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|ABS24DST
block|,
name|E
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0xA
block|,
name|B30
operator||
name|RS32
block|,
literal|0x0
block|,
literal|0x0
block|,
name|DST
operator||
name|ABS24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|"movfpe"
argument_list|)
block|,
block|{
name|ABS16SRC
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x4
block|,
name|RD8
block|,
name|ABS16SRC
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|"movtpe"
argument_list|)
block|,
block|{
name|RS8
block|,
name|ABS16DST
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0xC
block|,
name|RS8
block|,
name|ABS16DST
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_MULU
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|14
argument_list|,
literal|"mulxu.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x5
block|,
literal|0x0
block|,
name|RS8
block|,
name|RD16
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_MULU
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|14
argument_list|,
literal|"mulxu.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x5
block|,
literal|0x2
block|,
name|RS16
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_MULS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|"mulxs.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0x0
block|,
literal|0x5
block|,
literal|0x0
block|,
name|RS8
block|,
name|RD16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_MULS
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|"mulxs.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0x0
block|,
literal|0x5
block|,
literal|0x2
block|,
name|RS16
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
name|EOP
block|,
comment|/* ??? This can use UNOP3.  */
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_NEG
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"neg.b"
argument_list|)
block|,
block|{
name|OR8
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x1
block|,
literal|0x7
block|,
literal|0x8
block|,
name|OR8
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_NEG
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"neg.w"
argument_list|)
block|,
block|{
name|OR16
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x1
block|,
literal|0x7
block|,
literal|0x9
block|,
name|OR16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_NEG
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"neg.l"
argument_list|)
block|,
block|{
name|OR32
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x1
block|,
literal|0x7
block|,
literal|0xB
block|,
name|B30
operator||
name|OR32
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_NOP
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"nop"
argument_list|)
block|,
block|{
name|E
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x0
block|,
literal|0x0
block|,
literal|0x0
block|,
literal|0x0
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
comment|/* ??? This can use UNOP3.  */
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_NOT
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"not.b"
argument_list|)
block|,
block|{
name|OR8
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x1
block|,
literal|0x7
block|,
literal|0x0
block|,
name|OR8
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_NOT
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"not.w"
argument_list|)
block|,
block|{
name|OR16
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x1
block|,
literal|0x7
block|,
literal|0x1
block|,
name|OR16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_NOT
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"not.l"
argument_list|)
block|,
block|{
name|OR32
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x1
block|,
literal|0x7
block|,
literal|0x3
block|,
name|B30
operator||
name|OR32
block|,
name|E
block|}
name|EOP
block|,
name|TWOOP
argument_list|(
name|O
argument_list|(
name|O_OR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"or.b"
argument_list|,
literal|0xC
argument_list|,
literal|0x1
argument_list|,
literal|0x4
argument_list|)
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_OR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|"or.w"
argument_list|)
block|,
block|{
name|IMM16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0x9
block|,
literal|0x4
block|,
name|RD16
block|,
name|IMM16
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_OR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"or.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0x4
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_OR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|,
literal|"or.l"
argument_list|)
block|,
block|{
name|IMM32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0x4
block|,
name|B30
operator||
name|RD32
block|,
name|IMM32LIST
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_OR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"or.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xF
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0x4
block|,
name|B30
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_ORC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"orc"
argument_list|)
block|,
block|{
name|IMM8
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x4
block|,
name|IMM8
block|,
name|IGNORE
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|6
argument_list|,
literal|"pop.w"
argument_list|)
block|,
block|{
name|OR16
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x6
block|,
literal|0xD
block|,
literal|0x7
block|,
name|OR16
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_REG
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|,
literal|"pop.l"
argument_list|)
block|,
block|{
name|OR32
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x6
block|,
literal|0xD
block|,
literal|0x7
block|,
name|OR32
operator||
name|B30
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|6
argument_list|,
literal|"push.w"
argument_list|)
block|,
block|{
name|OR16
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
literal|0x6
block|,
literal|0xD
block|,
literal|0xF
block|,
name|OR16
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_MOV_TO_MEM
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|,
literal|"push.l"
argument_list|)
block|,
block|{
name|OR32
block|,
name|E
block|,
literal|0
block|}
block|,
block|{
name|PREFIX32
block|,
literal|0x6
block|,
literal|0xD
block|,
literal|0xF
block|,
name|OR32
operator||
name|B30
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|UNOP3
argument_list|(
name|O_ROTL
argument_list|,
literal|"rotl"
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0x8
argument_list|)
block|,
name|UNOP3
argument_list|(
name|O_ROTR
argument_list|,
literal|"rotr"
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0x8
argument_list|)
block|,
name|UNOP3
argument_list|(
name|O_ROTXL
argument_list|,
literal|"rotxl"
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0x0
argument_list|)
block|,
name|UNOP3
argument_list|(
name|O_ROTXR
argument_list|,
literal|"rotxr"
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0x0
argument_list|)
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_BPT
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|"bpt"
argument_list|)
block|,
block|{
name|E
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0xF
block|,
literal|0xF
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_RTE
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|"rte"
argument_list|)
block|,
block|{
name|E
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x5
block|,
literal|0x6
block|,
literal|0x7
block|,
literal|0x0
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_RTS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|8
argument_list|,
literal|"rts"
argument_list|)
block|,
block|{
name|E
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x5
block|,
literal|0x4
block|,
literal|0x7
block|,
literal|0x0
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|UNOP3
argument_list|(
name|O_SHAL
argument_list|,
literal|"shal"
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x8
argument_list|)
block|,
name|UNOP3
argument_list|(
name|O_SHAR
argument_list|,
literal|"shar"
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x8
argument_list|)
block|,
name|UNOP3
argument_list|(
name|O_SHLL
argument_list|,
literal|"shll"
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x0
argument_list|)
block|,
name|UNOP3
argument_list|(
name|O_SHLR
argument_list|,
literal|"shlr"
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|)
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_SLEEP
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|"sleep"
argument_list|)
block|,
block|{
name|E
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0x8
block|,
literal|0x0
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_STC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"stc"
argument_list|)
block|,
block|{
name|CCR
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x2
block|,
literal|0x0
block|,
name|RD8
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_STC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"stc"
argument_list|)
block|,
block|{
name|CCR
block|,
name|RSIND
block|,
name|E
block|}
block|,
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B31
operator||
name|RDIND
block|,
literal|0x0
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_STC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"stc"
argument_list|)
block|,
block|{
name|CCR
block|,
name|DISP
operator||
name|DST
operator||
name|L_16
block|,
name|E
block|}
block|,
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B31
operator||
name|DISPREG
block|,
literal|0
block|,
name|DST
operator||
name|DISP
operator||
name|L_16
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_STC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"stc"
argument_list|)
block|,
block|{
name|CCR
block|,
name|DISP
operator||
name|DST
operator||
name|L_24
block|,
name|E
block|}
block|,
block|{
name|PREFIXLDC
block|,
literal|0x7
block|,
literal|0x8
block|,
name|B31
operator||
name|DISPREG
block|,
literal|0
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x2
block|,
literal|0x0
block|,
literal|0x0
block|,
literal|0x0
block|,
name|DST
operator||
name|DISP24LIST
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_STC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"stc"
argument_list|)
block|,
block|{
name|CCR
block|,
name|RDDEC
block|,
name|E
block|}
block|,
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xD
block|,
name|B31
operator||
name|RDDEC
block|,
literal|0x0
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_STC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"stc"
argument_list|)
block|,
block|{
name|CCR
block|,
name|ABS16SRC
block|,
name|E
block|}
block|,
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x8
block|,
literal|0x0
block|,
name|ABS16DST
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_STC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"stc"
argument_list|)
block|,
block|{
name|CCR
block|,
name|ABS24SRC
block|,
name|E
block|}
block|,
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0xA
block|,
literal|0x0
block|,
literal|0x0
block|,
literal|0x0
block|,
name|DST
operator||
name|ABS24LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|"sub.b"
argument_list|)
block|,
block|{
name|RS8
block|,
name|RD8
block|,
name|E
block|}
block|,
block|{
literal|0x1
block|,
literal|0x8
block|,
name|RS8
block|,
name|RD8
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"sub.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x1
block|,
literal|0x9
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|"sub.w"
argument_list|)
block|,
block|{
name|IMM16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0x9
block|,
literal|0x3
block|,
name|RD16
block|,
name|IMM16
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"sub.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x1
block|,
literal|0xA
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|,
literal|"sub.l"
argument_list|)
block|,
block|{
name|IMM32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0x3
block|,
name|B30
operator||
name|RD32
block|,
name|IMM32LIST
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_SUBS
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|"subs"
argument_list|)
block|,
block|{
name|KBIT
block|,
name|RDP
block|,
name|E
block|}
block|,
block|{
literal|0x1
block|,
literal|0xB
block|,
name|KBIT
block|,
name|RDP
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
name|TWOOP
argument_list|(
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"subx"
argument_list|,
literal|0xB
argument_list|,
literal|0x1
argument_list|,
literal|0xE
argument_list|)
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_TRAPA
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"trapa"
argument_list|)
block|,
block|{
name|IMM2
block|,
name|E
block|}
block|,
block|{
literal|0x5
block|,
literal|0x7
block|,
name|IMM2
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|TWOOP
argument_list|(
name|O
argument_list|(
name|O_XOR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"xor"
argument_list|,
literal|0xD
argument_list|,
literal|0x1
argument_list|,
literal|0x5
argument_list|)
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_XOR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|"xor.w"
argument_list|)
block|,
block|{
name|IMM16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0x9
block|,
literal|0x5
block|,
name|RD16
block|,
name|IMM16
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|IGNORE
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_XOR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"xor.w"
argument_list|)
block|,
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|,
block|{
literal|0x6
block|,
literal|0x5
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_XOR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|,
literal|"xor.l"
argument_list|)
block|,
block|{
name|IMM32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0x5
block|,
name|B30
operator||
name|RD32
block|,
name|IMM32LIST
block|,
name|E
block|}
name|EOP
block|,
name|NEW_SOP
argument_list|(
name|O
argument_list|(
name|O_XOR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|"xor.l"
argument_list|)
block|,
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xF
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0x5
block|,
name|B30
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
name|EOP
block|,
name|SOP
argument_list|(
name|O
argument_list|(
name|O_XORC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|"xorc"
argument_list|)
block|,
block|{
name|IMM8
block|,
name|CCR
block|,
name|E
block|}
block|,
block|{
literal|0x0
block|,
literal|0x5
block|,
name|IMM8
block|,
name|IGNORE
block|,
name|E
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
name|EOP
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
specifier|extern
name|struct
name|h8_opcode
name|h8_opcodes
index|[]
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

