begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Table of opcodes for the PA-RISC.    Copyright (C) 1990, 1991, 1993, 1995 Free Software Foundation, Inc.     Contributed by the Center for Software Science at the    University of Utah (pa-gdb-bugs@cs.utah.edu).  This file is part of GAS, the GNU Assembler, and GDB, the GNU disassembler.  GAS/GDB is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 1, or (at your option) any later version.  GAS/GDB is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with GAS or GDB; see the file COPYING.  If not, write to the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|__STDC__
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
specifier|const
argument_list|)
end_if

begin_define
define|#
directive|define
name|const
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * Structure of an opcode table entry.  */
end_comment

begin_comment
comment|/* There are two kinds of delay slot nullification: normal which is  * controled by the nullification bit, and conditional, which depends  * on the direction of the branch and its success or failure.  *  * NONE is unfortunately #defined in the hiux system include files.    * #undef it away.  */
end_comment

begin_undef
undef|#
directive|undef
name|NONE
end_undef

begin_struct
struct|struct
name|pa_opcode
block|{
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|unsigned
name|long
name|int
name|match
decl_stmt|;
comment|/* Bits that must be set...  */
name|unsigned
name|long
name|int
name|mask
decl_stmt|;
comment|/* ... in these bits. */
name|char
modifier|*
name|args
decl_stmt|;
name|enum
name|pa_arch
name|arch
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*    All hppa opcodes are 32 bits.     The match component is a mask saying which bits must match a    particular opcode in order for an instruction to be an instance    of that opcode.     The args component is a string containing one character    for each operand of the instruction.     Bit positions in this description follow HP usage of lsb = 31,    "at" is lsb of field.     In the args field, the following characters must match exactly:  	'+,() '     In the args field, the following characters are unused:  	'  "#$%    *+- ./   3      :; =   ' 	' B         L              [\] _' 	'    e gh   lm   qr        { } '     Here are all the characters:  	' !"#$%&'()*+-,./0123456789:;<=>?@' 	'ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_' 	'abcdefghijklmnopqrstuvwxyz{|}~'  Kinds of operands:    x    integer register field at 15.    b    integer register field at 10.    t    integer register field at 31.    y    floating point register field at 31    5    5 bit immediate at 15.    s    2 bit space specifier at 17.    S    3 bit space specifier at 18.    c    indexed load completer.    C    short load and store completer.    Y	Store Bytes Short completer<    non-negated compare/subtract conditions.    a	compare/subtract conditions    d    non-negated add conditions&    logical instruction conditions    U    unit instruction conditions>    shift/extract/deposit conditions.    ~    bvb,bb conditions    V    5 bit immediate value at 31    i    11 bit immediate value at 31    j    14 bit immediate value at 31    k    21 bit immediate value at 31    n	nullification for branch instructions    N	nullification for spop and copr instructions    w    12 bit branch displacement    W    17 bit branch displacement (PC relative)    z    17 bit branch displacement (just a number, not an address)  Also these:     p    5 bit shift count at 26 (to support the SHD instruction) encoded as         31-p    P    5 bit bit position at 26    T    5 bit field length at 31 (encoded as 32-T)    A    13 bit immediate at 18 (to support the BREAK instruction)    ^	like b, but describes a control register    Z    System Control Completer (to support LPA, LHA, etc.)    D    26 bit immediate at 31 (to support the DIAG instruction)     f    3 bit Special Function Unit identifier at 25    O    20 bit Special Function Unit operation split between 15 bits at 20         and 5 bits at 31    o    15 bit Special Function Unit operation at 20    2    22 bit Special Function Unit operation split between 17 bits at 20         and 5 bits at 31    1    15 bit Special Function Unit operation split between 10 bits at 20         and 5 bits at 31    0    10 bit Special Function Unit operation split between 5 bits at 20         and 5 bits at 31    u    3 bit coprocessor unit identifier at 25    F    Source Floating Point Operand Format Completer encoded 2 bits at 20    I    Source Floating Point Operand Format Completer encoded 1 bits at 20 	(for 0xe format FP instructions)    G    Destination Floating Point Operand Format Completer encoded 2 bits at 18    M    Floating-Point Compare Conditions (encoded as 5 bits at 31)    ?    non-negated/negated compare/subtract conditions.    @    non-negated/negated add conditions.    !    non-negated add conditions.     s    2 bit space specifier at 17.    b    register field at 10.    r	5 bit immediate value at 31 (for the break instruction) 	(very similar to V above, except the value is unsigned instead of 	low_sign_ext)    R	5 bit immediate value at 15 (for the ssm, rsm, probei instructions) 	(same as r above, except the value is in a different location)    Q	5 bit immediate value at 10 (a bit position specified in 	the bb instruction. It's the same as r above, except the         value is in a different location)    |	shift/extract/deposit conditions when used in a conditional branch  And these (PJH) for PA-89 F.P. registers and instructions:     v    a 't' operand type extended to handle L/R register halves.    E    a 'b' operand type extended to handle L/R register halves.    X    an 'x' operand type extended to handle L/R register halves.    J    a 'b' operand type further extended to handle extra 1.1 registers    K    a 'x' operand type further extended to handle extra 1.1 registers    4    a variation of the 'b' operand type for 'fmpyadd' and 'fmpysub'    6    a variation of the 'x' operand type for 'fmpyadd' and 'fmpysub'    7    a variation of the 't' operand type for 'fmpyadd' and 'fmpysub'    8    5 bit register field at 20 (used in 'fmpyadd' and 'fmpysub')    9    5 bit register field at 25 (used in 'fmpyadd' and 'fmpysub')    H    Floating Point Operand Format at 26 for 'fmpyadd' and 'fmpysub'         (very similar to 'F') */
end_comment

begin_comment
comment|/* The order of the opcodes in this table is significant:     * The assembler requires that all instances of the same mnemonic must be    consecutive.  If they aren't, the assembler will bomb at runtime.     * The disassembler should not care about the order of the opcodes.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|struct
name|pa_opcode
name|pa_opcodes
index|[]
init|=
block|{
comment|/* pseudo-instructions */
block|{
literal|"b"
block|,
literal|0xe8000000
block|,
literal|0xffe0e000
block|,
literal|"nW"
block|,
name|pa10
block|}
block|,
comment|/* bl foo,r0 */
block|{
literal|"ldi"
block|,
literal|0x34000000
block|,
literal|0xffe0c000
block|,
literal|"j,x"
block|,
name|pa10
block|}
block|,
comment|/* ldo val(r0),r */
block|{
literal|"comib"
block|,
literal|0x84000000
block|,
literal|0xfc000000
block|,
literal|"?n5,b,w"
block|,
name|pa10
block|}
block|,
comment|/* comib{tf}*/
block|{
literal|"comb"
block|,
literal|0x80000000
block|,
literal|0xfc000000
block|,
literal|"?nx,b,w"
block|,
name|pa10
block|}
block|,
comment|/* comb{tf} */
block|{
literal|"addb"
block|,
literal|0xa0000000
block|,
literal|0xfc000000
block|,
literal|"@nx,b,w"
block|,
name|pa10
block|}
block|,
comment|/* addb{tf} */
block|{
literal|"addib"
block|,
literal|0xa4000000
block|,
literal|0xfc000000
block|,
literal|"@n5,b,w"
block|,
name|pa10
block|}
block|,
comment|/* addib{tf}*/
block|{
literal|"nop"
block|,
literal|0x08000240
block|,
literal|0xffffffff
block|,
literal|""
block|,
name|pa10
block|}
block|,
comment|/* or 0,0,0 */
block|{
literal|"copy"
block|,
literal|0x08000240
block|,
literal|0xffe0ffe0
block|,
literal|"x,t"
block|,
name|pa10
block|}
block|,
comment|/* or r,0,t */
block|{
literal|"mtsar"
block|,
literal|0x01601840
block|,
literal|0xffe0ffff
block|,
literal|"x"
block|,
name|pa10
block|}
block|,
comment|/* mtctl r,cr11 */
comment|/* Loads and Stores for integer registers.  */
block|{
literal|"ldw"
block|,
literal|0x48000000
block|,
literal|0xfc000000
block|,
literal|"j(s,b),x"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldw"
block|,
literal|0x48000000
block|,
literal|0xfc000000
block|,
literal|"j(b),x"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldh"
block|,
literal|0x44000000
block|,
literal|0xfc000000
block|,
literal|"j(s,b),x"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldh"
block|,
literal|0x44000000
block|,
literal|0xfc000000
block|,
literal|"j(b),x"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldb"
block|,
literal|0x40000000
block|,
literal|0xfc000000
block|,
literal|"j(s,b),x"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldb"
block|,
literal|0x40000000
block|,
literal|0xfc000000
block|,
literal|"j(b),x"
block|,
name|pa10
block|}
block|,
block|{
literal|"stw"
block|,
literal|0x68000000
block|,
literal|0xfc000000
block|,
literal|"x,j(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"stw"
block|,
literal|0x68000000
block|,
literal|0xfc000000
block|,
literal|"x,j(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"sth"
block|,
literal|0x64000000
block|,
literal|0xfc000000
block|,
literal|"x,j(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"sth"
block|,
literal|0x64000000
block|,
literal|0xfc000000
block|,
literal|"x,j(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"stb"
block|,
literal|0x60000000
block|,
literal|0xfc000000
block|,
literal|"x,j(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"stb"
block|,
literal|0x60000000
block|,
literal|0xfc000000
block|,
literal|"x,j(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldwm"
block|,
literal|0x4c000000
block|,
literal|0xfc000000
block|,
literal|"j(s,b),x"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldwm"
block|,
literal|0x4c000000
block|,
literal|0xfc000000
block|,
literal|"j(b),x"
block|,
name|pa10
block|}
block|,
block|{
literal|"stwm"
block|,
literal|0x6c000000
block|,
literal|0xfc000000
block|,
literal|"x,j(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"stwm"
block|,
literal|0x6c000000
block|,
literal|0xfc000000
block|,
literal|"x,j(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldwx"
block|,
literal|0x0c000080
block|,
literal|0xfc001fc0
block|,
literal|"cx(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldwx"
block|,
literal|0x0c000080
block|,
literal|0xfc001fc0
block|,
literal|"cx(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldhx"
block|,
literal|0x0c000040
block|,
literal|0xfc001fc0
block|,
literal|"cx(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldhx"
block|,
literal|0x0c000040
block|,
literal|0xfc001fc0
block|,
literal|"cx(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldbx"
block|,
literal|0x0c000000
block|,
literal|0xfc001fc0
block|,
literal|"cx(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldbx"
block|,
literal|0x0c000000
block|,
literal|0xfc001fc0
block|,
literal|"cx(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldwax"
block|,
literal|0x0c000180
block|,
literal|0xfc00dfc0
block|,
literal|"cx(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldcwx"
block|,
literal|0x0c0001c0
block|,
literal|0xfc001fc0
block|,
literal|"cx(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldcwx"
block|,
literal|0x0c0001c0
block|,
literal|0xfc001fc0
block|,
literal|"cx(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldws"
block|,
literal|0x0c001080
block|,
literal|0xfc001fc0
block|,
literal|"C5(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldws"
block|,
literal|0x0c001080
block|,
literal|0xfc001fc0
block|,
literal|"C5(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldhs"
block|,
literal|0x0c001040
block|,
literal|0xfc001fc0
block|,
literal|"C5(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldhs"
block|,
literal|0x0c001040
block|,
literal|0xfc001fc0
block|,
literal|"C5(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldbs"
block|,
literal|0x0c001000
block|,
literal|0xfc001fc0
block|,
literal|"C5(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldbs"
block|,
literal|0x0c001000
block|,
literal|0xfc001fc0
block|,
literal|"C5(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldwas"
block|,
literal|0x0c001180
block|,
literal|0xfc00dfc0
block|,
literal|"C5(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldcws"
block|,
literal|0x0c0011c0
block|,
literal|0xfc001fc0
block|,
literal|"C5(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldcws"
block|,
literal|0x0c0011c0
block|,
literal|0xfc001fc0
block|,
literal|"C5(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"stws"
block|,
literal|0x0c001280
block|,
literal|0xfc001fc0
block|,
literal|"Cx,V(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"stws"
block|,
literal|0x0c001280
block|,
literal|0xfc001fc0
block|,
literal|"Cx,V(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"sths"
block|,
literal|0x0c001240
block|,
literal|0xfc001fc0
block|,
literal|"Cx,V(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"sths"
block|,
literal|0x0c001240
block|,
literal|0xfc001fc0
block|,
literal|"Cx,V(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"stbs"
block|,
literal|0x0c001200
block|,
literal|0xfc001fc0
block|,
literal|"Cx,V(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"stbs"
block|,
literal|0x0c001200
block|,
literal|0xfc001fc0
block|,
literal|"Cx,V(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"stwas"
block|,
literal|0x0c001380
block|,
literal|0xfc00dfc0
block|,
literal|"Cx,V(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"stbys"
block|,
literal|0x0c001300
block|,
literal|0xfc001fc0
block|,
literal|"Yx,V(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"stbys"
block|,
literal|0x0c001300
block|,
literal|0xfc001fc0
block|,
literal|"Yx,V(b)"
block|,
name|pa10
block|}
block|,
comment|/* Immediate instructions.  */
block|{
literal|"ldo"
block|,
literal|0x34000000
block|,
literal|0xfc00c000
block|,
literal|"j(b),x"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldil"
block|,
literal|0x20000000
block|,
literal|0xfc000000
block|,
literal|"k,b"
block|,
name|pa10
block|}
block|,
block|{
literal|"addil"
block|,
literal|0x28000000
block|,
literal|0xfc000000
block|,
literal|"k,b"
block|,
name|pa10
block|}
block|,
comment|/* Branching instructions. */
block|{
literal|"bl"
block|,
literal|0xe8000000
block|,
literal|0xfc00e000
block|,
literal|"nW,b"
block|,
name|pa10
block|}
block|,
block|{
literal|"gate"
block|,
literal|0xe8002000
block|,
literal|0xfc00e000
block|,
literal|"nW,b"
block|,
name|pa10
block|}
block|,
block|{
literal|"blr"
block|,
literal|0xe8004000
block|,
literal|0xfc00e001
block|,
literal|"nx,b"
block|,
name|pa10
block|}
block|,
block|{
literal|"bv"
block|,
literal|0xe800c000
block|,
literal|0xfc00e001
block|,
literal|"nx(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"bv"
block|,
literal|0xe800c000
block|,
literal|0xfc00e001
block|,
literal|"n(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"be"
block|,
literal|0xe0000000
block|,
literal|0xfc000000
block|,
literal|"nz(S,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"ble"
block|,
literal|0xe4000000
block|,
literal|0xfc000000
block|,
literal|"nz(S,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"movb"
block|,
literal|0xc8000000
block|,
literal|0xfc000000
block|,
literal|"|nx,b,w"
block|,
name|pa10
block|}
block|,
block|{
literal|"movib"
block|,
literal|0xcc000000
block|,
literal|0xfc000000
block|,
literal|"|n5,b,w"
block|,
name|pa10
block|}
block|,
block|{
literal|"combt"
block|,
literal|0x80000000
block|,
literal|0xfc000000
block|,
literal|"<nx,b,w"
block|,
name|pa10
block|}
block|,
block|{
literal|"combf"
block|,
literal|0x88000000
block|,
literal|0xfc000000
block|,
literal|"<nx,b,w"
block|,
name|pa10
block|}
block|,
block|{
literal|"comibt"
block|,
literal|0x84000000
block|,
literal|0xfc000000
block|,
literal|"<n5,b,w"
block|,
name|pa10
block|}
block|,
block|{
literal|"comibf"
block|,
literal|0x8c000000
block|,
literal|0xfc000000
block|,
literal|"<n5,b,w"
block|,
name|pa10
block|}
block|,
block|{
literal|"addbt"
block|,
literal|0xa0000000
block|,
literal|0xfc000000
block|,
literal|"!nx,b,w"
block|,
name|pa10
block|}
block|,
block|{
literal|"addbf"
block|,
literal|0xa8000000
block|,
literal|0xfc000000
block|,
literal|"!nx,b,w"
block|,
name|pa10
block|}
block|,
block|{
literal|"addibt"
block|,
literal|0xa4000000
block|,
literal|0xfc000000
block|,
literal|"!n5,b,w"
block|,
name|pa10
block|}
block|,
block|{
literal|"addibf"
block|,
literal|0xac000000
block|,
literal|0xfc000000
block|,
literal|"!n5,b,w"
block|,
name|pa10
block|}
block|,
block|{
literal|"bvb"
block|,
literal|0xc0000000
block|,
literal|0xffe00000
block|,
literal|"~nx,w"
block|,
name|pa10
block|}
block|,
block|{
literal|"bb"
block|,
literal|0xc4000000
block|,
literal|0xfc000000
block|,
literal|"~nx,Q,w"
block|,
name|pa10
block|}
block|,
comment|/* Computation Instructions */
block|{
literal|"add"
block|,
literal|0x08000600
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"addl"
block|,
literal|0x08000a00
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"addo"
block|,
literal|0x08000e00
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"addc"
block|,
literal|0x08000700
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"addco"
block|,
literal|0x08000f00
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"sh1add"
block|,
literal|0x08000640
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"sh1addl"
block|,
literal|0x08000a40
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"sh1addo"
block|,
literal|0x08000e40
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"sh2add"
block|,
literal|0x08000680
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"sh2addl"
block|,
literal|0x08000a80
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"sh2addo"
block|,
literal|0x08000e80
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"sh3add"
block|,
literal|0x080006c0
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"sh3addl"
block|,
literal|0x08000ac0
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"sh3addo"
block|,
literal|0x08000ec0
block|,
literal|0xfc000fe0
block|,
literal|"dx,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"sub"
block|,
literal|0x08000400
block|,
literal|0xfc000fe0
block|,
literal|"ax,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"subo"
block|,
literal|0x08000c00
block|,
literal|0xfc000fe0
block|,
literal|"ax,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"subb"
block|,
literal|0x08000500
block|,
literal|0xfc000fe0
block|,
literal|"ax,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"subbo"
block|,
literal|0x08000d00
block|,
literal|0xfc000fe0
block|,
literal|"ax,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"subt"
block|,
literal|0x080004c0
block|,
literal|0xfc000fe0
block|,
literal|"ax,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"subto"
block|,
literal|0x08000cc0
block|,
literal|0xfc000fe0
block|,
literal|"ax,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ds"
block|,
literal|0x08000440
block|,
literal|0xfc000fe0
block|,
literal|"ax,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"comclr"
block|,
literal|0x08000880
block|,
literal|0xfc000fe0
block|,
literal|"ax,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"or"
block|,
literal|0x08000240
block|,
literal|0xfc000fe0
block|,
literal|"&x,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"xor"
block|,
literal|0x08000280
block|,
literal|0xfc000fe0
block|,
literal|"&x,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"and"
block|,
literal|0x08000200
block|,
literal|0xfc000fe0
block|,
literal|"&x,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"andcm"
block|,
literal|0x08000000
block|,
literal|0xfc000fe0
block|,
literal|"&x,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"uxor"
block|,
literal|0x08000380
block|,
literal|0xfc000fe0
block|,
literal|"Ux,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"uaddcm"
block|,
literal|0x08000980
block|,
literal|0xfc000fe0
block|,
literal|"Ux,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"uaddcmt"
block|,
literal|0x080009c0
block|,
literal|0xfc000fe0
block|,
literal|"Ux,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"dcor"
block|,
literal|0x08000b80
block|,
literal|0xfc1f0fe0
block|,
literal|"Ub,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"idcor"
block|,
literal|0x08000bc0
block|,
literal|0xfc1f0fe0
block|,
literal|"Ub,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"addi"
block|,
literal|0xb4000000
block|,
literal|0xfc000800
block|,
literal|"di,b,x"
block|,
name|pa10
block|}
block|,
block|{
literal|"addio"
block|,
literal|0xb4000800
block|,
literal|0xfc000800
block|,
literal|"di,b,x"
block|,
name|pa10
block|}
block|,
block|{
literal|"addit"
block|,
literal|0xb0000000
block|,
literal|0xfc000800
block|,
literal|"di,b,x"
block|,
name|pa10
block|}
block|,
block|{
literal|"addito"
block|,
literal|0xb0000800
block|,
literal|0xfc000800
block|,
literal|"di,b,x"
block|,
name|pa10
block|}
block|,
block|{
literal|"subi"
block|,
literal|0x94000000
block|,
literal|0xfc000800
block|,
literal|"ai,b,x"
block|,
name|pa10
block|}
block|,
block|{
literal|"subio"
block|,
literal|0x94000800
block|,
literal|0xfc000800
block|,
literal|"ai,b,x"
block|,
name|pa10
block|}
block|,
block|{
literal|"comiclr"
block|,
literal|0x90000000
block|,
literal|0xfc000800
block|,
literal|"ai,b,x"
block|,
name|pa10
block|}
block|,
comment|/* Extract and Deposit Instructions */
block|{
literal|"vshd"
block|,
literal|0xd0000000
block|,
literal|0xfc001fe0
block|,
literal|">x,b,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"shd"
block|,
literal|0xd0000800
block|,
literal|0xfc001c00
block|,
literal|">x,b,p,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"vextru"
block|,
literal|0xd0001000
block|,
literal|0xfc001fe0
block|,
literal|">b,T,x"
block|,
name|pa10
block|}
block|,
block|{
literal|"vextrs"
block|,
literal|0xd0001400
block|,
literal|0xfc001fe0
block|,
literal|">b,T,x"
block|,
name|pa10
block|}
block|,
block|{
literal|"extru"
block|,
literal|0xd0001800
block|,
literal|0xfc001c00
block|,
literal|">b,P,T,x"
block|,
name|pa10
block|}
block|,
block|{
literal|"extrs"
block|,
literal|0xd0001c00
block|,
literal|0xfc001c00
block|,
literal|">b,P,T,x"
block|,
name|pa10
block|}
block|,
block|{
literal|"zvdep"
block|,
literal|0xd4000000
block|,
literal|0xfc001fe0
block|,
literal|">x,T,b"
block|,
name|pa10
block|}
block|,
block|{
literal|"vdep"
block|,
literal|0xd4000400
block|,
literal|0xfc001fe0
block|,
literal|">x,T,b"
block|,
name|pa10
block|}
block|,
block|{
literal|"zdep"
block|,
literal|0xd4000800
block|,
literal|0xfc001c00
block|,
literal|">x,p,T,b"
block|,
name|pa10
block|}
block|,
block|{
literal|"dep"
block|,
literal|0xd4000c00
block|,
literal|0xfc001c00
block|,
literal|">x,p,T,b"
block|,
name|pa10
block|}
block|,
block|{
literal|"zvdepi"
block|,
literal|0xd4001000
block|,
literal|0xfc001fe0
block|,
literal|">5,T,b"
block|,
name|pa10
block|}
block|,
block|{
literal|"vdepi"
block|,
literal|0xd4001400
block|,
literal|0xfc001fe0
block|,
literal|">5,T,b"
block|,
name|pa10
block|}
block|,
block|{
literal|"zdepi"
block|,
literal|0xd4001800
block|,
literal|0xfc001c00
block|,
literal|">5,p,T,b"
block|,
name|pa10
block|}
block|,
block|{
literal|"depi"
block|,
literal|0xd4001c00
block|,
literal|0xfc001c00
block|,
literal|">5,p,T,b"
block|,
name|pa10
block|}
block|,
comment|/* System Control Instructions */
block|{
literal|"break"
block|,
literal|0x00000000
block|,
literal|0xfc001fe0
block|,
literal|"r,A"
block|,
name|pa10
block|}
block|,
block|{
literal|"rfi"
block|,
literal|0x00000c00
block|,
literal|0xffffffff
block|,
literal|""
block|,
name|pa10
block|}
block|,
block|{
literal|"rfir"
block|,
literal|0x00000ca0
block|,
literal|0xffffffff
block|,
literal|""
block|,
name|pa11
block|}
block|,
block|{
literal|"ssm"
block|,
literal|0x00000d60
block|,
literal|0xffe0ffe0
block|,
literal|"R,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"rsm"
block|,
literal|0x00000e60
block|,
literal|0xffe0ffe0
block|,
literal|"R,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"mtsm"
block|,
literal|0x00001860
block|,
literal|0xffe0ffff
block|,
literal|"x"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldsid"
block|,
literal|0x000010a0
block|,
literal|0xfc1f3fe0
block|,
literal|"(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"ldsid"
block|,
literal|0x000010a0
block|,
literal|0xfc1f3fe0
block|,
literal|"(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"mtsp"
block|,
literal|0x00001820
block|,
literal|0xffe01fff
block|,
literal|"x,S"
block|,
name|pa10
block|}
block|,
block|{
literal|"mtctl"
block|,
literal|0x00001840
block|,
literal|0xfc00ffff
block|,
literal|"x,^"
block|,
name|pa10
block|}
block|,
block|{
literal|"mfsp"
block|,
literal|0x000004a0
block|,
literal|0xffff1fe0
block|,
literal|"S,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"mfctl"
block|,
literal|0x000008a0
block|,
literal|0xfc1fffe0
block|,
literal|"^,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"sync"
block|,
literal|0x00000400
block|,
literal|0xffffffff
block|,
literal|""
block|,
name|pa10
block|}
block|,
block|{
literal|"syncdma"
block|,
literal|0x00100400
block|,
literal|0xffffffff
block|,
literal|""
block|,
name|pa10
block|}
block|,
block|{
literal|"prober"
block|,
literal|0x04001180
block|,
literal|0xfc003fe0
block|,
literal|"(s,b),x,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"prober"
block|,
literal|0x04001180
block|,
literal|0xfc003fe0
block|,
literal|"(b),x,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"proberi"
block|,
literal|0x04003180
block|,
literal|0xfc003fe0
block|,
literal|"(s,b),R,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"proberi"
block|,
literal|0x04003180
block|,
literal|0xfc003fe0
block|,
literal|"(b),R,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"probew"
block|,
literal|0x040011c0
block|,
literal|0xfc003fe0
block|,
literal|"(s,b),x,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"probew"
block|,
literal|0x040011c0
block|,
literal|0xfc003fe0
block|,
literal|"(b),x,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"probewi"
block|,
literal|0x040031c0
block|,
literal|0xfc003fe0
block|,
literal|"(s,b),R,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"probewi"
block|,
literal|0x040031c0
block|,
literal|0xfc003fe0
block|,
literal|"(b),R,t"
block|,
name|pa10
block|}
block|,
block|{
literal|"lpa"
block|,
literal|0x04001340
block|,
literal|0xfc003fc0
block|,
literal|"Zx(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"lpa"
block|,
literal|0x04001340
block|,
literal|0xfc003fc0
block|,
literal|"Zx(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"lha"
block|,
literal|0x04001300
block|,
literal|0xfc003fc0
block|,
literal|"Zx(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"lha"
block|,
literal|0x04001300
block|,
literal|0xfc003fc0
block|,
literal|"Zx(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"lci"
block|,
literal|0x04001300
block|,
literal|0xfc003fe0
block|,
literal|"x(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"lci"
block|,
literal|0x04001300
block|,
literal|0xfc003fe0
block|,
literal|"x(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"pdtlb"
block|,
literal|0x04001200
block|,
literal|0xfc003fdf
block|,
literal|"Zx(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"pdtlb"
block|,
literal|0x04001200
block|,
literal|0xfc003fdf
block|,
literal|"Zx(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"pitlb"
block|,
literal|0x04000200
block|,
literal|0xfc003fdf
block|,
literal|"Zx(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"pitlb"
block|,
literal|0x04000200
block|,
literal|0xfc003fdf
block|,
literal|"Zx(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"pdtlbe"
block|,
literal|0x04001240
block|,
literal|0xfc003fdf
block|,
literal|"Zx(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"pdtlbe"
block|,
literal|0x04001240
block|,
literal|0xfc003fdf
block|,
literal|"Zx(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"pitlbe"
block|,
literal|0x04000240
block|,
literal|0xfc003fdf
block|,
literal|"Zx(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"pitlbe"
block|,
literal|0x04000240
block|,
literal|0xfc003fdf
block|,
literal|"Zx(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"idtlba"
block|,
literal|0x04001040
block|,
literal|0xfc003fff
block|,
literal|"x,(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"idtlba"
block|,
literal|0x04001040
block|,
literal|0xfc003fff
block|,
literal|"x,(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"iitlba"
block|,
literal|0x04000040
block|,
literal|0xfc003fff
block|,
literal|"x,(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"iitlba"
block|,
literal|0x04000040
block|,
literal|0xfc003fff
block|,
literal|"x,(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"idtlbp"
block|,
literal|0x04001000
block|,
literal|0xfc003fff
block|,
literal|"x,(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"idtlbp"
block|,
literal|0x04001000
block|,
literal|0xfc003fff
block|,
literal|"x,(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"iitlbp"
block|,
literal|0x04000000
block|,
literal|0xfc003fff
block|,
literal|"x,(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"iitlbp"
block|,
literal|0x04000000
block|,
literal|0xfc003fff
block|,
literal|"x,(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"pdc"
block|,
literal|0x04001380
block|,
literal|0xfc003fdf
block|,
literal|"Zx(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"pdc"
block|,
literal|0x04001380
block|,
literal|0xfc003fdf
block|,
literal|"Zx(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fdc"
block|,
literal|0x04001280
block|,
literal|0xfc003fdf
block|,
literal|"Zx(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fdc"
block|,
literal|0x04001280
block|,
literal|0xfc003fdf
block|,
literal|"Zx(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fic"
block|,
literal|0x04000280
block|,
literal|0xfc003fdf
block|,
literal|"Zx(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fic"
block|,
literal|0x04000280
block|,
literal|0xfc003fdf
block|,
literal|"Zx(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fdce"
block|,
literal|0x040012c0
block|,
literal|0xfc003fdf
block|,
literal|"Zx(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fdce"
block|,
literal|0x040012c0
block|,
literal|0xfc003fdf
block|,
literal|"Zx(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fice"
block|,
literal|0x040002c0
block|,
literal|0xfc003fdf
block|,
literal|"Zx(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fice"
block|,
literal|0x040002c0
block|,
literal|0xfc003fdf
block|,
literal|"Zx(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"diag"
block|,
literal|0x14000000
block|,
literal|0xfc000000
block|,
literal|"D"
block|,
name|pa10
block|}
block|,
comment|/* gfw and gfr are not in the HP PA 1.1 manual, but they are in either    the Timex FPU or the Mustang ERS (not sure which) manual.  */
block|{
literal|"gfw"
block|,
literal|0x04001680
block|,
literal|0xfc003fdf
block|,
literal|"Zx(s,b)"
block|,
name|pa11
block|}
block|,
block|{
literal|"gfw"
block|,
literal|0x04001680
block|,
literal|0xfc003fdf
block|,
literal|"Zx(b)"
block|,
name|pa11
block|}
block|,
block|{
literal|"gfr"
block|,
literal|0x04001a80
block|,
literal|0xfc003fdf
block|,
literal|"Zx(s,b)"
block|,
name|pa11
block|}
block|,
block|{
literal|"gfr"
block|,
literal|0x04001a80
block|,
literal|0xfc003fdf
block|,
literal|"Zx(b)"
block|,
name|pa11
block|}
block|,
comment|/* Floating Point Coprocessor Instructions */
block|{
literal|"fldwx"
block|,
literal|0x24000000
block|,
literal|0xfc001f80
block|,
literal|"cx(s,b),v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fldwx"
block|,
literal|0x24000000
block|,
literal|0xfc001f80
block|,
literal|"cx(b),v"
block|,
name|pa10
block|}
block|,
block|{
literal|"flddx"
block|,
literal|0x2c000000
block|,
literal|0xfc001fc0
block|,
literal|"cx(s,b),y"
block|,
name|pa10
block|}
block|,
block|{
literal|"flddx"
block|,
literal|0x2c000000
block|,
literal|0xfc001fc0
block|,
literal|"cx(b),y"
block|,
name|pa10
block|}
block|,
block|{
literal|"fstwx"
block|,
literal|0x24000200
block|,
literal|0xfc001f80
block|,
literal|"cv,x(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fstwx"
block|,
literal|0x24000200
block|,
literal|0xfc001f80
block|,
literal|"cv,x(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fstdx"
block|,
literal|0x2c000200
block|,
literal|0xfc001fc0
block|,
literal|"cy,x(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fstdx"
block|,
literal|0x2c000200
block|,
literal|0xfc001fc0
block|,
literal|"cy,x(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fstqx"
block|,
literal|0x3c000200
block|,
literal|0xfc001fc0
block|,
literal|"cy,x(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fstqx"
block|,
literal|0x3c000200
block|,
literal|0xfc001fc0
block|,
literal|"cy,x(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fldws"
block|,
literal|0x24001000
block|,
literal|0xfc001f80
block|,
literal|"C5(s,b),v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fldws"
block|,
literal|0x24001000
block|,
literal|0xfc001f80
block|,
literal|"C5(b),v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fldds"
block|,
literal|0x2c001000
block|,
literal|0xfc001fc0
block|,
literal|"C5(s,b),y"
block|,
name|pa10
block|}
block|,
block|{
literal|"fldds"
block|,
literal|0x2c001000
block|,
literal|0xfc001fc0
block|,
literal|"C5(b),y"
block|,
name|pa10
block|}
block|,
block|{
literal|"fstws"
block|,
literal|0x24001200
block|,
literal|0xfc001f80
block|,
literal|"Cv,5(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fstws"
block|,
literal|0x24001200
block|,
literal|0xfc001f80
block|,
literal|"Cv,5(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fstds"
block|,
literal|0x2c001200
block|,
literal|0xfc001fc0
block|,
literal|"Cy,5(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fstds"
block|,
literal|0x2c001200
block|,
literal|0xfc001fc0
block|,
literal|"Cy,5(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fstqs"
block|,
literal|0x3c001200
block|,
literal|0xfc001fc0
block|,
literal|"Cy,5(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fstqs"
block|,
literal|0x3c001200
block|,
literal|0xfc001fc0
block|,
literal|"Cy,5(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"fadd"
block|,
literal|0x30000600
block|,
literal|0xfc00e7e0
block|,
literal|"FE,X,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fadd"
block|,
literal|0x38000600
block|,
literal|0xfc00e720
block|,
literal|"IJ,K,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fsub"
block|,
literal|0x30002600
block|,
literal|0xfc00e7e0
block|,
literal|"FE,X,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fsub"
block|,
literal|0x38002600
block|,
literal|0xfc00e720
block|,
literal|"IJ,K,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fmpy"
block|,
literal|0x30004600
block|,
literal|0xfc00e7e0
block|,
literal|"FE,X,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fmpy"
block|,
literal|0x38004600
block|,
literal|0xfc00e720
block|,
literal|"IJ,K,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fdiv"
block|,
literal|0x30006600
block|,
literal|0xfc00e7e0
block|,
literal|"FE,X,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fdiv"
block|,
literal|0x38006600
block|,
literal|0xfc00e720
block|,
literal|"IJ,K,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fsqrt"
block|,
literal|0x30008000
block|,
literal|0xfc1fe7e0
block|,
literal|"FE,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fsqrt"
block|,
literal|0x38008000
block|,
literal|0xfc1fe720
block|,
literal|"FJ,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fabs"
block|,
literal|0x30006000
block|,
literal|0xfc1fe7e0
block|,
literal|"FE,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fabs"
block|,
literal|0x38006000
block|,
literal|0xfc1fe720
block|,
literal|"FJ,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"frem"
block|,
literal|0x30008600
block|,
literal|0xfc00e7e0
block|,
literal|"FE,X,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"frem"
block|,
literal|0x38008600
block|,
literal|0xfc00e720
block|,
literal|"FJ,K,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"frnd"
block|,
literal|0x3000a000
block|,
literal|0xfc1fe7e0
block|,
literal|"FE,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"frnd"
block|,
literal|0x3800a000
block|,
literal|0xfc1fe720
block|,
literal|"FJ,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fcpy"
block|,
literal|0x30004000
block|,
literal|0xfc1fe7e0
block|,
literal|"FE,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fcpy"
block|,
literal|0x38004000
block|,
literal|0xfc1fe720
block|,
literal|"FJ,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fcnvff"
block|,
literal|0x30000200
block|,
literal|0xfc1f87e0
block|,
literal|"FGE,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fcnvff"
block|,
literal|0x38000200
block|,
literal|0xfc1f8720
block|,
literal|"FGJ,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fcnvxf"
block|,
literal|0x30008200
block|,
literal|0xfc1f87e0
block|,
literal|"FGE,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fcnvxf"
block|,
literal|0x38008200
block|,
literal|0xfc1f8720
block|,
literal|"FGJ,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fcnvfx"
block|,
literal|0x30010200
block|,
literal|0xfc1f87e0
block|,
literal|"FGE,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fcnvfx"
block|,
literal|0x38010200
block|,
literal|0xfc1f8720
block|,
literal|"FGJ,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fcnvfxt"
block|,
literal|0x30018200
block|,
literal|0xfc1f87e0
block|,
literal|"FGE,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fcnvfxt"
block|,
literal|0x38018200
block|,
literal|0xfc1f8720
block|,
literal|"FGJ,v"
block|,
name|pa10
block|}
block|,
block|{
literal|"fcmp"
block|,
literal|0x30000400
block|,
literal|0xfc00e7e0
block|,
literal|"FME,X"
block|,
name|pa10
block|}
block|,
block|{
literal|"fcmp"
block|,
literal|0x38000400
block|,
literal|0xfc00e720
block|,
literal|"IMJ,K"
block|,
name|pa10
block|}
block|,
block|{
literal|"xmpyu"
block|,
literal|0x38004700
block|,
literal|0xfc00e720
block|,
literal|"E,X,v"
block|,
name|pa11
block|}
block|,
block|{
literal|"fmpyadd"
block|,
literal|0x18000000
block|,
literal|0xfc000000
block|,
literal|"H4,6,7,9,8"
block|,
name|pa11
block|}
block|,
block|{
literal|"fmpysub"
block|,
literal|0x98000000
block|,
literal|0xfc000000
block|,
literal|"H4,6,7,9,8"
block|,
name|pa11
block|}
block|,
block|{
literal|"ftest"
block|,
literal|0x30002420
block|,
literal|0xffffffff
block|,
literal|""
block|,
name|pa10
block|}
block|,
comment|/* Assist Instructions */
block|{
literal|"spop0"
block|,
literal|0x10000000
block|,
literal|0xfc000600
block|,
literal|"f,ON"
block|,
name|pa10
block|}
block|,
block|{
literal|"spop1"
block|,
literal|0x10000200
block|,
literal|0xfc000600
block|,
literal|"f,oNt"
block|,
name|pa10
block|}
block|,
block|{
literal|"spop2"
block|,
literal|0x10000400
block|,
literal|0xfc000600
block|,
literal|"f,1Nb"
block|,
name|pa10
block|}
block|,
block|{
literal|"spop3"
block|,
literal|0x10000600
block|,
literal|0xfc000600
block|,
literal|"f,0Nx,b"
block|,
name|pa10
block|}
block|,
block|{
literal|"copr"
block|,
literal|0x30000000
block|,
literal|0xfc000000
block|,
literal|"u,2N"
block|,
name|pa10
block|}
block|,
block|{
literal|"cldwx"
block|,
literal|0x24000000
block|,
literal|0xfc001e00
block|,
literal|"ucx(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"cldwx"
block|,
literal|0x24000000
block|,
literal|0xfc001e00
block|,
literal|"ucx(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"clddx"
block|,
literal|0x2c000000
block|,
literal|0xfc001e00
block|,
literal|"ucx(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"clddx"
block|,
literal|0x2c000000
block|,
literal|0xfc001e00
block|,
literal|"ucx(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"cstwx"
block|,
literal|0x24000200
block|,
literal|0xfc001e00
block|,
literal|"uct,x(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"cstwx"
block|,
literal|0x24000200
block|,
literal|0xfc001e00
block|,
literal|"uct,x(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"cstdx"
block|,
literal|0x2c000200
block|,
literal|0xfc001e00
block|,
literal|"uct,x(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"cstdx"
block|,
literal|0x2c000200
block|,
literal|0xfc001e00
block|,
literal|"uct,x(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"cldws"
block|,
literal|0x24001000
block|,
literal|0xfc001e00
block|,
literal|"uC5(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"cldws"
block|,
literal|0x24001000
block|,
literal|0xfc001e00
block|,
literal|"uC5(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"cldds"
block|,
literal|0x2c001000
block|,
literal|0xfc001e00
block|,
literal|"uC5(s,b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"cldds"
block|,
literal|0x2c001000
block|,
literal|0xfc001e00
block|,
literal|"uC5(b),t"
block|,
name|pa10
block|}
block|,
block|{
literal|"cstws"
block|,
literal|0x24001200
block|,
literal|0xfc001e00
block|,
literal|"uCt,5(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"cstws"
block|,
literal|0x24001200
block|,
literal|0xfc001e00
block|,
literal|"uCt,5(b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"cstds"
block|,
literal|0x2c001200
block|,
literal|0xfc001e00
block|,
literal|"uCt,5(s,b)"
block|,
name|pa10
block|}
block|,
block|{
literal|"cstds"
block|,
literal|0x2c001200
block|,
literal|0xfc001e00
block|,
literal|"uCt,5(b)"
block|,
name|pa10
block|}
block|, }
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|NUMOPCODES
value|((sizeof pa_opcodes)/(sizeof pa_opcodes[0]))
end_define

begin_comment
comment|/* SKV 12/18/92. Added some denotations for various operands. */
end_comment

begin_define
define|#
directive|define
name|PA_IMM11_AT_31
value|'i'
end_define

begin_define
define|#
directive|define
name|PA_IMM14_AT_31
value|'j'
end_define

begin_define
define|#
directive|define
name|PA_IMM21_AT_31
value|'k'
end_define

begin_define
define|#
directive|define
name|PA_DISP12
value|'w'
end_define

begin_define
define|#
directive|define
name|PA_DISP17
value|'W'
end_define

begin_define
define|#
directive|define
name|N_HPPA_OPERAND_FORMATS
value|5
end_define

end_unit

