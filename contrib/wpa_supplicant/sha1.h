begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|SHA1_H
end_ifndef

begin_define
define|#
directive|define
name|SHA1_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|EAP_TLS_FUNCS
end_ifdef

begin_include
include|#
directive|include
file|<openssl/sha.h>
end_include

begin_define
define|#
directive|define
name|SHA1_CTX
value|SHA_CTX
end_define

begin_define
define|#
directive|define
name|SHA1Init
value|SHA1_Init
end_define

begin_define
define|#
directive|define
name|SHA1Update
value|SHA1_Update
end_define

begin_define
define|#
directive|define
name|SHA1Final
value|SHA1_Final
end_define

begin_define
define|#
directive|define
name|SHA1Transform
value|SHA1_Transform
end_define

begin_define
define|#
directive|define
name|SHA1_MAC_LEN
value|SHA_DIGEST_LENGTH
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* EAP_TLS_FUNCS */
end_comment

begin_define
define|#
directive|define
name|SHA1_MAC_LEN
value|20
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|u32
name|state
index|[
literal|5
index|]
decl_stmt|;
name|u32
name|count
index|[
literal|2
index|]
decl_stmt|;
name|unsigned
name|char
name|buffer
index|[
literal|64
index|]
decl_stmt|;
block|}
name|SHA1_CTX
typedef|;
end_typedef

begin_function_decl
name|void
name|SHA1Init
parameter_list|(
name|SHA1_CTX
modifier|*
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|SHA1Update
parameter_list|(
name|SHA1_CTX
modifier|*
name|context
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|u32
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|SHA1Final
parameter_list|(
name|unsigned
name|char
name|digest
index|[
literal|20
index|]
parameter_list|,
name|SHA1_CTX
modifier|*
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|SHA1Transform
parameter_list|(
name|u32
name|state
index|[
literal|5
index|]
parameter_list|,
specifier|const
name|unsigned
name|char
name|buffer
index|[
literal|64
index|]
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* EAP_TLS_FUNCS */
end_comment

begin_function_decl
name|void
name|sha1_mac
parameter_list|(
specifier|const
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|u8
modifier|*
name|mac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|hmac_sha1_vector
parameter_list|(
specifier|const
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|,
name|size_t
name|num_elem
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
index|[]
parameter_list|,
specifier|const
name|size_t
modifier|*
name|len
parameter_list|,
name|u8
modifier|*
name|mac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|hmac_sha1
parameter_list|(
specifier|const
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|u8
modifier|*
name|mac
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sha1_prf
parameter_list|(
specifier|const
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|,
specifier|const
name|char
modifier|*
name|label
parameter_list|,
specifier|const
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|buf_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sha1_t_prf
parameter_list|(
specifier|const
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|,
specifier|const
name|char
modifier|*
name|label
parameter_list|,
specifier|const
name|u8
modifier|*
name|seed
parameter_list|,
name|size_t
name|seed_len
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|buf_len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|tls_prf
parameter_list|(
specifier|const
name|u8
modifier|*
name|secret
parameter_list|,
name|size_t
name|secret_len
parameter_list|,
specifier|const
name|char
modifier|*
name|label
parameter_list|,
specifier|const
name|u8
modifier|*
name|seed
parameter_list|,
name|size_t
name|seed_len
parameter_list|,
name|u8
modifier|*
name|out
parameter_list|,
name|size_t
name|outlen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|pbkdf2_sha1
parameter_list|(
specifier|const
name|char
modifier|*
name|passphrase
parameter_list|,
specifier|const
name|char
modifier|*
name|ssid
parameter_list|,
name|size_t
name|ssid_len
parameter_list|,
name|int
name|iterations
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|buflen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sha1_transform
parameter_list|(
name|u8
modifier|*
name|state
parameter_list|,
name|u8
name|data
index|[
literal|64
index|]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sha1_vector
parameter_list|(
name|size_t
name|num_elem
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
index|[]
parameter_list|,
specifier|const
name|size_t
modifier|*
name|len
parameter_list|,
name|u8
modifier|*
name|mac
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* SHA1_H */
end_comment

end_unit

