begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|WPA_SUPPLICANT_I_H
end_ifndef

begin_define
define|#
directive|define
name|WPA_SUPPLICANT_I_H
end_define

begin_include
include|#
directive|include
file|"driver.h"
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|EAPOL_TEST
end_ifdef

begin_include
include|#
directive|include
file|<netinet/in.h>
end_include

begin_struct
struct|struct
name|hostapd_radius_server
block|{
name|struct
name|in_addr
name|addr
decl_stmt|;
name|int
name|port
decl_stmt|;
name|u8
modifier|*
name|shared_secret
decl_stmt|;
name|size_t
name|shared_secret_len
decl_stmt|;
block|}
struct|;
end_struct

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* EAPOL_TEST */
end_comment

begin_define
define|#
directive|define
name|PMKID_LEN
value|16
end_define

begin_struct
struct|struct
name|rsn_pmksa_cache
block|{
name|struct
name|rsn_pmksa_cache
modifier|*
name|next
decl_stmt|;
name|u8
name|pmkid
index|[
name|PMKID_LEN
index|]
decl_stmt|;
name|u8
name|pmk
index|[
name|PMK_LEN
index|]
decl_stmt|;
name|size_t
name|pmk_len
decl_stmt|;
name|time_t
name|expiration
decl_stmt|;
name|int
name|akmp
decl_stmt|;
comment|/* WPA_KEY_MGMT_* */
name|u8
name|aa
index|[
name|ETH_ALEN
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rsn_pmksa_candidate
block|{
name|struct
name|rsn_pmksa_candidate
modifier|*
name|next
decl_stmt|;
name|u8
name|bssid
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|int
name|priority
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|wpa_ptk
block|{
name|u8
name|mic_key
index|[
literal|16
index|]
decl_stmt|;
comment|/* EAPOL-Key MIC Key (MK) */
name|u8
name|encr_key
index|[
literal|16
index|]
decl_stmt|;
comment|/* EAPOL-Key Encryption Key (EK) */
name|u8
name|tk1
index|[
literal|16
index|]
decl_stmt|;
comment|/* Temporal Key 1 (TK1) */
union|union
block|{
name|u8
name|tk2
index|[
literal|16
index|]
decl_stmt|;
comment|/* Temporal Key 2 (TK2) */
struct|struct
block|{
name|u8
name|tx_mic_key
index|[
literal|8
index|]
decl_stmt|;
name|u8
name|rx_mic_key
index|[
literal|8
index|]
decl_stmt|;
block|}
name|auth
struct|;
block|}
name|u
union|;
block|}
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
struct|;
end_struct

begin_struct
struct|struct
name|wpa_blacklist
block|{
name|struct
name|wpa_blacklist
modifier|*
name|next
decl_stmt|;
name|u8
name|bssid
index|[
name|ETH_ALEN
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|wpa_supplicant
block|{
name|struct
name|wpa_supplicant
modifier|*
name|head
decl_stmt|;
name|struct
name|wpa_supplicant
modifier|*
name|next
decl_stmt|;
name|struct
name|l2_packet_data
modifier|*
name|l2
decl_stmt|;
name|unsigned
name|char
name|own_addr
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|char
name|ifname
index|[
literal|100
index|]
decl_stmt|;
ifdef|#
directive|ifdef
name|CONFIG_XSUPPLICANT_IFACE
name|int
name|dot1x_s
decl_stmt|;
comment|/* socket for connection to Xsupplicant */
name|int
name|ext_pmk_received
decl_stmt|;
comment|/* 1 = PMK was received from Xsupplicant */
endif|#
directive|endif
comment|/* CONFIG_XSUPPLICANT_IFACE */
name|u8
name|pmk
index|[
name|PMK_LEN
index|]
decl_stmt|;
name|size_t
name|pmk_len
decl_stmt|;
name|u8
name|snonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
name|u8
name|anonce
index|[
name|WPA_NONCE_LEN
index|]
decl_stmt|;
comment|/* ANonce from the last 1/4 msg */
name|struct
name|wpa_ptk
name|ptk
decl_stmt|,
name|tptk
decl_stmt|;
name|int
name|ptk_set
decl_stmt|,
name|tptk_set
decl_stmt|;
name|int
name|renew_snonce
decl_stmt|;
name|char
modifier|*
name|confname
decl_stmt|;
name|struct
name|wpa_config
modifier|*
name|conf
decl_stmt|;
name|u8
name|request_counter
index|[
name|WPA_REPLAY_COUNTER_LEN
index|]
decl_stmt|;
name|int
name|countermeasures
decl_stmt|;
name|time_t
name|last_michael_mic_error
decl_stmt|;
name|u8
name|rx_replay_counter
index|[
name|WPA_REPLAY_COUNTER_LEN
index|]
decl_stmt|;
name|int
name|rx_replay_counter_set
decl_stmt|;
name|u8
name|bssid
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|int
name|reassociate
decl_stmt|;
comment|/* reassociation requested */
name|struct
name|wpa_ssid
modifier|*
name|current_ssid
decl_stmt|;
name|u8
modifier|*
name|ap_wpa_ie
decl_stmt|,
modifier|*
name|ap_rsn_ie
decl_stmt|;
name|size_t
name|ap_wpa_ie_len
decl_stmt|,
name|ap_rsn_ie_len
decl_stmt|;
name|u8
modifier|*
name|assoc_wpa_ie
decl_stmt|;
name|size_t
name|assoc_wpa_ie_len
decl_stmt|;
comment|/* Selected configuration (based on Beacon/ProbeResp WPA IE) */
name|int
name|proto
decl_stmt|;
name|int
name|pairwise_cipher
decl_stmt|;
name|int
name|group_cipher
decl_stmt|;
name|int
name|key_mgmt
decl_stmt|;
name|void
modifier|*
name|drv_priv
decl_stmt|;
comment|/* private data used by driver_ops */
name|struct
name|wpa_ssid
modifier|*
name|prev_scan_ssid
decl_stmt|;
comment|/* previously scanned SSID; 					  * NULL = not yet initialized (start 					  * with broadcast SSID) 					  * BROADCAST_SSID_SCAN = broadcast 					  * SSID was used in the previous scan 					  */
define|#
directive|define
name|BROADCAST_SSID_SCAN
value|((struct wpa_ssid *) 1)
name|struct
name|wpa_scan_result
modifier|*
name|scan_results
decl_stmt|;
name|int
name|num_scan_results
decl_stmt|;
name|struct
name|wpa_driver_ops
modifier|*
name|driver
decl_stmt|;
name|int
name|interface_removed
decl_stmt|;
comment|/* whether the network interface has been 				* removed */
name|struct
name|eapol_sm
modifier|*
name|eapol
decl_stmt|;
name|int
name|ctrl_sock
decl_stmt|;
comment|/* UNIX domain socket for control interface or -1 if 			* not used */
name|struct
name|wpa_ctrl_dst
modifier|*
name|ctrl_dst
decl_stmt|;
enum|enum
block|{
name|WPA_DISCONNECTED
block|,
name|WPA_SCANNING
block|,
name|WPA_ASSOCIATING
block|,
name|WPA_ASSOCIATED
block|,
name|WPA_4WAY_HANDSHAKE
block|,
name|WPA_GROUP_HANDSHAKE
block|,
name|WPA_COMPLETED
block|}
name|wpa_state
enum|;
name|struct
name|rsn_pmksa_cache
modifier|*
name|pmksa
decl_stmt|;
comment|/* PMKSA cache */
name|int
name|pmksa_count
decl_stmt|;
comment|/* number of entries in PMKSA cache */
name|struct
name|rsn_pmksa_cache
modifier|*
name|cur_pmksa
decl_stmt|;
comment|/* current PMKSA entry */
name|struct
name|rsn_pmksa_candidate
modifier|*
name|pmksa_candidates
decl_stmt|;
name|struct
name|l2_packet_data
modifier|*
name|l2_preauth
decl_stmt|;
name|u8
name|preauth_bssid
index|[
name|ETH_ALEN
index|]
decl_stmt|;
comment|/* current RSN pre-auth peer or 				     * 00:00:00:00:00:00 if no pre-auth is 				     * in progress */
name|struct
name|eapol_sm
modifier|*
name|preauth_eapol
decl_stmt|;
name|int
name|eapol_received
decl_stmt|;
comment|/* number of EAPOL packets received after the 			     * previous association event */
name|u8
modifier|*
name|imsi
decl_stmt|;
name|size_t
name|imsi_len
decl_stmt|;
name|struct
name|scard_data
modifier|*
name|scard
decl_stmt|;
name|unsigned
name|char
name|last_eapol_src
index|[
name|ETH_ALEN
index|]
decl_stmt|;
name|int
name|keys_cleared
decl_stmt|;
name|struct
name|wpa_blacklist
modifier|*
name|blacklist
decl_stmt|;
ifdef|#
directive|ifdef
name|EAPOL_TEST
name|u8
name|radius_identifier
decl_stmt|;
name|struct
name|radius_msg
modifier|*
name|last_recv_radius
decl_stmt|;
name|struct
name|in_addr
name|own_ip_addr
decl_stmt|;
name|struct
name|radius_client_data
modifier|*
name|radius
decl_stmt|;
comment|/* RADIUS Authentication and Accounting servers in priority order */
name|struct
name|hostapd_radius_server
modifier|*
name|auth_servers
decl_stmt|,
modifier|*
name|auth_server
decl_stmt|;
name|int
name|num_auth_servers
decl_stmt|;
name|struct
name|hostapd_radius_server
modifier|*
name|acct_servers
decl_stmt|,
modifier|*
name|acct_server
decl_stmt|;
name|int
name|num_acct_servers
decl_stmt|;
name|int
name|radius_retry_primary_interval
decl_stmt|;
name|int
name|radius_acct_interim_interval
decl_stmt|;
name|u8
modifier|*
name|last_eap_radius
decl_stmt|;
comment|/* last received EAP Response from Authentication 			      * Server */
name|size_t
name|last_eap_radius_len
decl_stmt|;
name|u8
name|authenticator_pmk
index|[
name|PMK_LEN
index|]
decl_stmt|;
name|size_t
name|authenticator_pmk_len
decl_stmt|;
name|int
name|radius_access_accept_received
decl_stmt|;
name|int
name|radius_access_reject_received
decl_stmt|;
name|int
name|auth_timed_out
decl_stmt|;
name|u8
modifier|*
name|eap_identity
decl_stmt|;
name|size_t
name|eap_identity_len
decl_stmt|;
endif|#
directive|endif
comment|/* EAPOL_TEST */
block|}
struct|;
end_struct

begin_comment
comment|/* wpa_supplicant.c */
end_comment

begin_function_decl
name|void
name|wpa_supplicant_scan
parameter_list|(
name|void
modifier|*
name|eloop_ctx
parameter_list|,
name|void
modifier|*
name|timeout_ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_supplicant_req_scan
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|sec
parameter_list|,
name|int
name|usec
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_supplicant_cancel_scan
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_supplicant_disassociate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|reason_code
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_supplicant_deauthenticate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|reason_code
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_supplicant_req_auth_timeout
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|sec
parameter_list|,
name|int
name|usec
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_supplicant_cancel_auth_timeout
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_supplicant_reload_configuration
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_supplicant_get_beacon_ie
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* wpa.c */
end_comment

begin_function_decl
name|void
name|wpa_supplicant_key_request
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|error
parameter_list|,
name|int
name|pairwise
parameter_list|)
function_decl|;
end_function_decl

begin_struct
struct|struct
name|wpa_ie_data
block|{
name|int
name|proto
decl_stmt|;
name|int
name|pairwise_cipher
decl_stmt|;
name|int
name|group_cipher
decl_stmt|;
name|int
name|key_mgmt
decl_stmt|;
name|int
name|capabilities
decl_stmt|;
name|int
name|num_pmkid
decl_stmt|;
name|u8
modifier|*
name|pmkid
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|wpa_parse_wpa_ie
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
modifier|*
name|wpa_ie
parameter_list|,
name|size_t
name|wpa_ie_len
parameter_list|,
name|struct
name|wpa_ie_data
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_gen_wpa_ie
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
modifier|*
name|wpa_ie
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|wpa_supplicant_rx_eapol
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|unsigned
name|char
modifier|*
name|src_addr
parameter_list|,
name|unsigned
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|wpa_ssid
modifier|*
name|wpa_supplicant_get_ssid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|pmksa_cache_free
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|rsn_pmksa_cache
modifier|*
name|pmksa_cache_get
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
modifier|*
name|aa
parameter_list|,
name|u8
modifier|*
name|pmkid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|pmksa_cache_list
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|pmksa_candidate_free
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_get_mib
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|size_t
name|buflen
parameter_list|)
function_decl|;
end_function_decl

begin_struct_decl
struct_decl|struct
name|wpa_scan_result
struct_decl|;
end_struct_decl

begin_ifdef
ifdef|#
directive|ifdef
name|IEEE8021X_EAPOL
end_ifdef

begin_function_decl
name|int
name|rsn_preauth_init
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
modifier|*
name|dst
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rsn_preauth_deinit
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rsn_preauth_scan_results
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_scan_result
modifier|*
name|results
parameter_list|,
name|int
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|pmksa_candidate_add
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
name|int
name|prio
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* IEEE8021X_EAPOL */
end_comment

begin_function
specifier|static
specifier|inline
name|int
name|rsn_preauth_init
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
modifier|*
name|dst
parameter_list|)
block|{
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|rsn_preauth_deinit
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{ }
end_function

begin_function
specifier|static
specifier|inline
name|void
name|rsn_preauth_scan_results
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_scan_result
modifier|*
name|results
parameter_list|,
name|int
name|count
parameter_list|)
block|{ }
end_function

begin_function
specifier|static
specifier|inline
name|void
name|pmksa_candidate_add
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
name|int
name|prio
parameter_list|)
block|{ }
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* IEEE8021X_EAPOL */
end_comment

begin_function_decl
name|void
name|wpa_supplicant_notify_eapol_done
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/**  * wpa_eapol_send - send IEEE 802.1X EAPOL packet to the Authenticator  * @ctx: pointer to wpa_supplicant data  * @type: IEEE 802.1X packet type (IEEE802_1X_TYPE_*)  * @buf: EAPOL payload (after IEEE 802.1X header)  * @len: EAPOL payload length  *  * This function adds Ethernet and IEEE 802.1X header and sends the EAPOL frame  * to the current Authenticator or in case of pre-authentication, to the peer  * of the authentication.  */
end_comment

begin_function_decl
name|int
name|wpa_eapol_send
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|int
name|type
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wpa_eapol_send_preauth
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|int
name|type
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* driver_ops */
end_comment

begin_function
specifier|static
specifier|inline
name|void
modifier|*
name|wpa_drv_init
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|char
modifier|*
name|ifname
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|init
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|init
argument_list|(
name|wpa_s
argument_list|,
name|ifname
argument_list|)
return|;
block|}
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_drv_deinit
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|deinit
condition|)
name|wpa_s
operator|->
name|driver
operator|->
name|deinit
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_drop_unencrypted
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_drop_unencrypted
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_drop_unencrypted
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|enabled
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_countermeasures
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_countermeasures
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_countermeasures
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|enabled
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_auth_alg
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|auth_alg
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_auth_alg
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_auth_alg
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|auth_alg
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_wpa
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|int
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_wpa
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_wpa
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|enabled
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_associate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_associate_params
modifier|*
name|params
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|associate
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|associate
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|params
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_scan
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|ssid
parameter_list|,
name|size_t
name|ssid_len
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|scan
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|scan
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|ssid
argument_list|,
name|ssid_len
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_scan_results
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_scan_result
modifier|*
name|results
parameter_list|,
name|size_t
name|max_size
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_scan_results
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_scan_results
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|results
argument_list|,
name|max_size
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_bssid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
modifier|*
name|bssid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_bssid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_bssid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|bssid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_ssid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|u8
modifier|*
name|ssid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_ssid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_ssid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|ssid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_set_key
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|wpa_alg
name|alg
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|key_idx
parameter_list|,
name|int
name|set_tx
parameter_list|,
specifier|const
name|u8
modifier|*
name|seq
parameter_list|,
name|size_t
name|seq_len
parameter_list|,
specifier|const
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|set_key
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|set_key
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|alg
argument_list|,
name|addr
argument_list|,
name|key_idx
argument_list|,
name|set_tx
argument_list|,
name|seq
argument_list|,
name|seq_len
argument_list|,
name|key
argument_list|,
name|key_len
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_deauthenticate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reason_code
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|deauthenticate
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|deauthenticate
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|reason_code
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_disassociate
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reason_code
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|disassociate
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|disassociate
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|addr
argument_list|,
name|reason_code
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_add_pmkid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
specifier|const
name|u8
modifier|*
name|pmkid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|add_pmkid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|add_pmkid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|bssid
argument_list|,
name|pmkid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_remove_pmkid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
specifier|const
name|u8
modifier|*
name|bssid
parameter_list|,
specifier|const
name|u8
modifier|*
name|pmkid
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|remove_pmkid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|remove_pmkid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|bssid
argument_list|,
name|pmkid
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_flush_pmkid
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|flush_pmkid
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|flush_pmkid
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|wpa_drv_get_capa
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|,
name|struct
name|wpa_driver_capa
modifier|*
name|capa
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_capa
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_capa
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|,
name|capa
argument_list|)
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|wpa_drv_poll
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|poll
condition|)
block|{
name|wpa_s
operator|->
name|driver
operator|->
name|poll
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
specifier|static
specifier|inline
specifier|const
name|char
modifier|*
name|wpa_drv_get_ifname
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_ifname
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_ifname
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
block|}
return|return
name|NULL
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
specifier|const
name|u8
modifier|*
name|wpa_drv_get_mac_addr
parameter_list|(
name|struct
name|wpa_supplicant
modifier|*
name|wpa_s
parameter_list|)
block|{
if|if
condition|(
name|wpa_s
operator|->
name|driver
operator|->
name|get_mac_addr
condition|)
block|{
return|return
name|wpa_s
operator|->
name|driver
operator|->
name|get_mac_addr
argument_list|(
name|wpa_s
operator|->
name|drv_priv
argument_list|)
return|;
block|}
return|return
name|NULL
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WPA_SUPPLICANT_I_H */
end_comment

end_unit

