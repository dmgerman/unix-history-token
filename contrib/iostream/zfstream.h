begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|zfstream_h
end_ifndef

begin_define
define|#
directive|define
name|zfstream_h
end_define

begin_include
include|#
directive|include
file|<fstream.h>
end_include

begin_include
include|#
directive|include
file|"zlib.h"
end_include

begin_decl_stmt
name|class
name|gzfilebuf
range|:
name|public
name|streambuf
block|{
name|public
operator|:
name|gzfilebuf
argument_list|( )
block|;
name|virtual
operator|~
name|gzfilebuf
argument_list|()
block|;
name|gzfilebuf
operator|*
name|open
argument_list|(
argument|const char *name
argument_list|,
argument|int io_mode
argument_list|)
block|;
name|gzfilebuf
operator|*
name|attach
argument_list|(
argument|int file_descriptor
argument_list|,
argument|int io_mode
argument_list|)
block|;
name|gzfilebuf
operator|*
name|close
argument_list|()
block|;
name|int
name|setcompressionlevel
argument_list|(
argument|int comp_level
argument_list|)
block|;
name|int
name|setcompressionstrategy
argument_list|(
argument|int comp_strategy
argument_list|)
block|;
specifier|inline
name|int
name|is_open
argument_list|()
specifier|const
block|{
return|return
operator|(
name|file
operator|!=
name|NULL
operator|)
return|;
block|}
name|virtual
name|streampos
name|seekoff
argument_list|(
name|streamoff
argument_list|,
name|ios
operator|::
name|seek_dir
argument_list|,
name|int
argument_list|)
block|;
name|virtual
name|int
name|sync
argument_list|()
block|;
name|protected
operator|:
name|virtual
name|int
name|underflow
argument_list|()
block|;
name|virtual
name|int
name|overflow
argument_list|(
name|int
operator|=
name|EOF
argument_list|)
block|;
name|private
operator|:
name|gzFile
name|file
block|;
name|short
name|mode
block|;
name|short
name|own_file_descriptor
block|;
name|int
name|flushbuf
argument_list|()
block|;
name|int
name|fillbuf
argument_list|()
block|;  }
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|gzfilestream_common
range|:
name|virtual
name|public
name|ios
block|{
name|friend
name|class
name|gzifstream
block|;
name|friend
name|class
name|gzofstream
block|;
name|friend
name|gzofstream
operator|&
name|setcompressionlevel
argument_list|(
name|gzofstream
operator|&
argument_list|,
name|int
argument_list|)
block|;
name|friend
name|gzofstream
operator|&
name|setcompressionstrategy
argument_list|(
name|gzofstream
operator|&
argument_list|,
name|int
argument_list|)
block|;
name|public
operator|:
name|virtual
operator|~
name|gzfilestream_common
argument_list|()
block|;
name|void
name|attach
argument_list|(
argument|int fd
argument_list|,
argument|int io_mode
argument_list|)
block|;
name|void
name|open
argument_list|(
argument|const char *name
argument_list|,
argument|int io_mode
argument_list|)
block|;
name|void
name|close
argument_list|()
block|;
name|protected
operator|:
name|gzfilestream_common
argument_list|()
block|;
name|private
operator|:
name|gzfilebuf
operator|*
name|rdbuf
argument_list|()
block|;
name|gzfilebuf
name|buffer
block|;  }
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|gzifstream
range|:
name|public
name|gzfilestream_common
decl_stmt|,
name|public
name|istream
block|{
name|public
label|:
name|gzifstream
argument_list|()
expr_stmt|;
name|gzifstream
argument_list|(
argument|const char *name
argument_list|,
argument|int io_mode = ios::in
argument_list|)
empty_stmt|;
name|gzifstream
argument_list|(
argument|int fd
argument_list|,
argument|int io_mode = ios::in
argument_list|)
empty_stmt|;
name|virtual
operator|~
name|gzifstream
argument_list|()
expr_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_decl_stmt
name|class
name|gzofstream
range|:
name|public
name|gzfilestream_common
decl_stmt|,
name|public
name|ostream
block|{
name|public
label|:
name|gzofstream
argument_list|()
expr_stmt|;
name|gzofstream
argument_list|(
argument|const char *name
argument_list|,
argument|int io_mode = ios::out
argument_list|)
empty_stmt|;
name|gzofstream
argument_list|(
argument|int fd
argument_list|,
argument|int io_mode = ios::out
argument_list|)
empty_stmt|;
name|virtual
operator|~
name|gzofstream
argument_list|()
expr_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|template
operator|<
name|class
name|T
operator|>
name|class
name|gzomanip
block|{
name|friend
name|gzofstream
operator|&
name|operator
operator|<<
operator|(
name|gzofstream
operator|&
operator|,
specifier|const
name|gzomanip
operator|<
name|T
operator|>
operator|&
operator|)
block|;
name|public
operator|:
name|gzomanip
argument_list|(
argument|gzofstream&(*f)(gzofstream&, T)
argument_list|,
argument|T v
argument_list|)
operator|:
name|func
argument_list|(
name|f
argument_list|)
block|,
name|val
argument_list|(
argument|v
argument_list|)
block|{ }
name|private
operator|:
name|gzofstream
operator|&
call|(
modifier|*
name|func
call|)
argument_list|(
name|gzofstream
operator|&
argument_list|,
name|T
argument_list|)
block|;
name|T
name|val
block|; }
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|template
operator|<
name|class
name|T
operator|>
name|gzofstream
operator|&
name|operator
operator|<<
operator|(
name|gzofstream
operator|&
name|s
operator|,
specifier|const
name|gzomanip
operator|<
name|T
operator|>
operator|&
name|m
operator|)
block|{
return|return
call|(
modifier|*
name|m
operator|.
name|func
call|)
argument_list|(
name|s
argument_list|,
name|m
operator|.
name|val
argument_list|)
return|;
block|}
end_expr_stmt

begin_function
specifier|inline
name|gzofstream
modifier|&
name|setcompressionlevel
parameter_list|(
name|gzofstream
modifier|&
name|s
parameter_list|,
name|int
name|l
parameter_list|)
block|{
operator|(
name|s
operator|.
name|rdbuf
argument_list|()
operator|)
operator|->
name|setcompressionlevel
argument_list|(
name|l
argument_list|)
expr_stmt|;
return|return
name|s
return|;
block|}
end_function

begin_function
specifier|inline
name|gzofstream
modifier|&
name|setcompressionstrategy
parameter_list|(
name|gzofstream
modifier|&
name|s
parameter_list|,
name|int
name|l
parameter_list|)
block|{
operator|(
name|s
operator|.
name|rdbuf
argument_list|()
operator|)
operator|->
name|setcompressionstrategy
argument_list|(
name|l
argument_list|)
expr_stmt|;
return|return
name|s
return|;
block|}
end_function

begin_expr_stmt
specifier|inline
name|gzomanip
operator|<
name|int
operator|>
name|setcompressionlevel
argument_list|(
argument|int l
argument_list|)
block|{
return|return
name|gzomanip
operator|<
name|int
operator|>
operator|(
operator|&
name|setcompressionlevel
operator|,
name|l
operator|)
return|;
block|}
end_expr_stmt

begin_expr_stmt
specifier|inline
name|gzomanip
operator|<
name|int
operator|>
name|setcompressionstrategy
argument_list|(
argument|int l
argument_list|)
block|{
return|return
name|gzomanip
operator|<
name|int
operator|>
operator|(
operator|&
name|setcompressionstrategy
operator|,
name|l
operator|)
return|;
block|}
end_expr_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

