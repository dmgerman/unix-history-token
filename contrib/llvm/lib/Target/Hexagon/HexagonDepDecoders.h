begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===--- HexagonDepDecoders.h ---------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_function
specifier|static
name|DecodeStatus
name|s4_0ImmDecoder
parameter_list|(
name|MCInst
modifier|&
name|MI
parameter_list|,
name|unsigned
name|tmp
parameter_list|,
name|uint64_t
parameter_list|,
specifier|const
name|void
modifier|*
name|Decoder
parameter_list|)
block|{
name|signedDecoder
operator|<
literal|4
operator|>
operator|(
name|MI
operator|,
name|tmp
operator|,
name|Decoder
operator|)
expr_stmt|;
return|return
name|MCDisassembler
operator|::
name|Success
return|;
block|}
end_function

begin_function
specifier|static
name|DecodeStatus
name|s29_3ImmDecoder
parameter_list|(
name|MCInst
modifier|&
name|MI
parameter_list|,
name|unsigned
name|tmp
parameter_list|,
name|uint64_t
parameter_list|,
specifier|const
name|void
modifier|*
name|Decoder
parameter_list|)
block|{
name|signedDecoder
operator|<
literal|14
operator|>
operator|(
name|MI
operator|,
name|tmp
operator|,
name|Decoder
operator|)
expr_stmt|;
return|return
name|MCDisassembler
operator|::
name|Success
return|;
block|}
end_function

begin_function
specifier|static
name|DecodeStatus
name|s8_0ImmDecoder
parameter_list|(
name|MCInst
modifier|&
name|MI
parameter_list|,
name|unsigned
name|tmp
parameter_list|,
name|uint64_t
parameter_list|,
specifier|const
name|void
modifier|*
name|Decoder
parameter_list|)
block|{
name|signedDecoder
operator|<
literal|8
operator|>
operator|(
name|MI
operator|,
name|tmp
operator|,
name|Decoder
operator|)
expr_stmt|;
return|return
name|MCDisassembler
operator|::
name|Success
return|;
block|}
end_function

begin_function
specifier|static
name|DecodeStatus
name|s4_3ImmDecoder
parameter_list|(
name|MCInst
modifier|&
name|MI
parameter_list|,
name|unsigned
name|tmp
parameter_list|,
name|uint64_t
parameter_list|,
specifier|const
name|void
modifier|*
name|Decoder
parameter_list|)
block|{
name|signedDecoder
operator|<
literal|7
operator|>
operator|(
name|MI
operator|,
name|tmp
operator|,
name|Decoder
operator|)
expr_stmt|;
return|return
name|MCDisassembler
operator|::
name|Success
return|;
block|}
end_function

begin_function
specifier|static
name|DecodeStatus
name|s31_1ImmDecoder
parameter_list|(
name|MCInst
modifier|&
name|MI
parameter_list|,
name|unsigned
name|tmp
parameter_list|,
name|uint64_t
parameter_list|,
specifier|const
name|void
modifier|*
name|Decoder
parameter_list|)
block|{
name|signedDecoder
operator|<
literal|12
operator|>
operator|(
name|MI
operator|,
name|tmp
operator|,
name|Decoder
operator|)
expr_stmt|;
return|return
name|MCDisassembler
operator|::
name|Success
return|;
block|}
end_function

begin_function
specifier|static
name|DecodeStatus
name|s3_0ImmDecoder
parameter_list|(
name|MCInst
modifier|&
name|MI
parameter_list|,
name|unsigned
name|tmp
parameter_list|,
name|uint64_t
parameter_list|,
specifier|const
name|void
modifier|*
name|Decoder
parameter_list|)
block|{
name|signedDecoder
operator|<
literal|3
operator|>
operator|(
name|MI
operator|,
name|tmp
operator|,
name|Decoder
operator|)
expr_stmt|;
return|return
name|MCDisassembler
operator|::
name|Success
return|;
block|}
end_function

begin_function
specifier|static
name|DecodeStatus
name|s30_2ImmDecoder
parameter_list|(
name|MCInst
modifier|&
name|MI
parameter_list|,
name|unsigned
name|tmp
parameter_list|,
name|uint64_t
parameter_list|,
specifier|const
name|void
modifier|*
name|Decoder
parameter_list|)
block|{
name|signedDecoder
operator|<
literal|13
operator|>
operator|(
name|MI
operator|,
name|tmp
operator|,
name|Decoder
operator|)
expr_stmt|;
return|return
name|MCDisassembler
operator|::
name|Success
return|;
block|}
end_function

begin_function
specifier|static
name|DecodeStatus
name|s6_0ImmDecoder
parameter_list|(
name|MCInst
modifier|&
name|MI
parameter_list|,
name|unsigned
name|tmp
parameter_list|,
name|uint64_t
parameter_list|,
specifier|const
name|void
modifier|*
name|Decoder
parameter_list|)
block|{
name|signedDecoder
operator|<
literal|6
operator|>
operator|(
name|MI
operator|,
name|tmp
operator|,
name|Decoder
operator|)
expr_stmt|;
return|return
name|MCDisassembler
operator|::
name|Success
return|;
block|}
end_function

begin_function
specifier|static
name|DecodeStatus
name|s6_3ImmDecoder
parameter_list|(
name|MCInst
modifier|&
name|MI
parameter_list|,
name|unsigned
name|tmp
parameter_list|,
name|uint64_t
parameter_list|,
specifier|const
name|void
modifier|*
name|Decoder
parameter_list|)
block|{
name|signedDecoder
operator|<
literal|9
operator|>
operator|(
name|MI
operator|,
name|tmp
operator|,
name|Decoder
operator|)
expr_stmt|;
return|return
name|MCDisassembler
operator|::
name|Success
return|;
block|}
end_function

begin_function
specifier|static
name|DecodeStatus
name|s4_1ImmDecoder
parameter_list|(
name|MCInst
modifier|&
name|MI
parameter_list|,
name|unsigned
name|tmp
parameter_list|,
name|uint64_t
parameter_list|,
specifier|const
name|void
modifier|*
name|Decoder
parameter_list|)
block|{
name|signedDecoder
operator|<
literal|5
operator|>
operator|(
name|MI
operator|,
name|tmp
operator|,
name|Decoder
operator|)
expr_stmt|;
return|return
name|MCDisassembler
operator|::
name|Success
return|;
block|}
end_function

begin_function
specifier|static
name|DecodeStatus
name|s4_2ImmDecoder
parameter_list|(
name|MCInst
modifier|&
name|MI
parameter_list|,
name|unsigned
name|tmp
parameter_list|,
name|uint64_t
parameter_list|,
specifier|const
name|void
modifier|*
name|Decoder
parameter_list|)
block|{
name|signedDecoder
operator|<
literal|6
operator|>
operator|(
name|MI
operator|,
name|tmp
operator|,
name|Decoder
operator|)
expr_stmt|;
return|return
name|MCDisassembler
operator|::
name|Success
return|;
block|}
end_function

end_unit

