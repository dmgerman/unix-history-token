begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- MipsBaseInfo.h - Top level definitions for ARM ------- --*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file contains small standalone helper functions and enum definitions for
end_comment

begin_comment
comment|// the Mips target useful for the compiler back-end and the MC libraries.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|MIPSBASEINFO_H
end_ifndef

begin_define
define|#
directive|define
name|MIPSBASEINFO_H
end_define

begin_include
include|#
directive|include
file|"MipsMCTargetDesc.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/DataTypes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/ErrorHandling.h"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
comment|/// getMipsRegisterNumbering - Given the enum value for some register,
comment|/// return the number that it corresponds to.
specifier|inline
specifier|static
name|unsigned
name|getMipsRegisterNumbering
parameter_list|(
name|unsigned
name|RegEnum
parameter_list|)
block|{
switch|switch
condition|(
name|RegEnum
condition|)
block|{
case|case
name|Mips
operator|::
name|ZERO
case|:
case|case
name|Mips
operator|::
name|ZERO_64
case|:
case|case
name|Mips
operator|::
name|F0
case|:
case|case
name|Mips
operator|::
name|D0_64
case|:
case|case
name|Mips
operator|::
name|D0
case|:
return|return
literal|0
return|;
case|case
name|Mips
operator|::
name|AT
case|:
case|case
name|Mips
operator|::
name|AT_64
case|:
case|case
name|Mips
operator|::
name|F1
case|:
case|case
name|Mips
operator|::
name|D1_64
case|:
return|return
literal|1
return|;
case|case
name|Mips
operator|::
name|V0
case|:
case|case
name|Mips
operator|::
name|V0_64
case|:
case|case
name|Mips
operator|::
name|F2
case|:
case|case
name|Mips
operator|::
name|D2_64
case|:
case|case
name|Mips
operator|::
name|D1
case|:
return|return
literal|2
return|;
case|case
name|Mips
operator|::
name|V1
case|:
case|case
name|Mips
operator|::
name|V1_64
case|:
case|case
name|Mips
operator|::
name|F3
case|:
case|case
name|Mips
operator|::
name|D3_64
case|:
return|return
literal|3
return|;
case|case
name|Mips
operator|::
name|A0
case|:
case|case
name|Mips
operator|::
name|A0_64
case|:
case|case
name|Mips
operator|::
name|F4
case|:
case|case
name|Mips
operator|::
name|D4_64
case|:
case|case
name|Mips
operator|::
name|D2
case|:
return|return
literal|4
return|;
case|case
name|Mips
operator|::
name|A1
case|:
case|case
name|Mips
operator|::
name|A1_64
case|:
case|case
name|Mips
operator|::
name|F5
case|:
case|case
name|Mips
operator|::
name|D5_64
case|:
return|return
literal|5
return|;
case|case
name|Mips
operator|::
name|A2
case|:
case|case
name|Mips
operator|::
name|A2_64
case|:
case|case
name|Mips
operator|::
name|F6
case|:
case|case
name|Mips
operator|::
name|D6_64
case|:
case|case
name|Mips
operator|::
name|D3
case|:
return|return
literal|6
return|;
case|case
name|Mips
operator|::
name|A3
case|:
case|case
name|Mips
operator|::
name|A3_64
case|:
case|case
name|Mips
operator|::
name|F7
case|:
case|case
name|Mips
operator|::
name|D7_64
case|:
return|return
literal|7
return|;
case|case
name|Mips
operator|::
name|T0
case|:
case|case
name|Mips
operator|::
name|T0_64
case|:
case|case
name|Mips
operator|::
name|F8
case|:
case|case
name|Mips
operator|::
name|D8_64
case|:
case|case
name|Mips
operator|::
name|D4
case|:
return|return
literal|8
return|;
case|case
name|Mips
operator|::
name|T1
case|:
case|case
name|Mips
operator|::
name|T1_64
case|:
case|case
name|Mips
operator|::
name|F9
case|:
case|case
name|Mips
operator|::
name|D9_64
case|:
return|return
literal|9
return|;
case|case
name|Mips
operator|::
name|T2
case|:
case|case
name|Mips
operator|::
name|T2_64
case|:
case|case
name|Mips
operator|::
name|F10
case|:
case|case
name|Mips
operator|::
name|D10_64
case|:
case|case
name|Mips
operator|::
name|D5
case|:
return|return
literal|10
return|;
case|case
name|Mips
operator|::
name|T3
case|:
case|case
name|Mips
operator|::
name|T3_64
case|:
case|case
name|Mips
operator|::
name|F11
case|:
case|case
name|Mips
operator|::
name|D11_64
case|:
return|return
literal|11
return|;
case|case
name|Mips
operator|::
name|T4
case|:
case|case
name|Mips
operator|::
name|T4_64
case|:
case|case
name|Mips
operator|::
name|F12
case|:
case|case
name|Mips
operator|::
name|D12_64
case|:
case|case
name|Mips
operator|::
name|D6
case|:
return|return
literal|12
return|;
case|case
name|Mips
operator|::
name|T5
case|:
case|case
name|Mips
operator|::
name|T5_64
case|:
case|case
name|Mips
operator|::
name|F13
case|:
case|case
name|Mips
operator|::
name|D13_64
case|:
return|return
literal|13
return|;
case|case
name|Mips
operator|::
name|T6
case|:
case|case
name|Mips
operator|::
name|T6_64
case|:
case|case
name|Mips
operator|::
name|F14
case|:
case|case
name|Mips
operator|::
name|D14_64
case|:
case|case
name|Mips
operator|::
name|D7
case|:
return|return
literal|14
return|;
case|case
name|Mips
operator|::
name|T7
case|:
case|case
name|Mips
operator|::
name|T7_64
case|:
case|case
name|Mips
operator|::
name|F15
case|:
case|case
name|Mips
operator|::
name|D15_64
case|:
return|return
literal|15
return|;
case|case
name|Mips
operator|::
name|S0
case|:
case|case
name|Mips
operator|::
name|S0_64
case|:
case|case
name|Mips
operator|::
name|F16
case|:
case|case
name|Mips
operator|::
name|D16_64
case|:
case|case
name|Mips
operator|::
name|D8
case|:
return|return
literal|16
return|;
case|case
name|Mips
operator|::
name|S1
case|:
case|case
name|Mips
operator|::
name|S1_64
case|:
case|case
name|Mips
operator|::
name|F17
case|:
case|case
name|Mips
operator|::
name|D17_64
case|:
return|return
literal|17
return|;
case|case
name|Mips
operator|::
name|S2
case|:
case|case
name|Mips
operator|::
name|S2_64
case|:
case|case
name|Mips
operator|::
name|F18
case|:
case|case
name|Mips
operator|::
name|D18_64
case|:
case|case
name|Mips
operator|::
name|D9
case|:
return|return
literal|18
return|;
case|case
name|Mips
operator|::
name|S3
case|:
case|case
name|Mips
operator|::
name|S3_64
case|:
case|case
name|Mips
operator|::
name|F19
case|:
case|case
name|Mips
operator|::
name|D19_64
case|:
return|return
literal|19
return|;
case|case
name|Mips
operator|::
name|S4
case|:
case|case
name|Mips
operator|::
name|S4_64
case|:
case|case
name|Mips
operator|::
name|F20
case|:
case|case
name|Mips
operator|::
name|D20_64
case|:
case|case
name|Mips
operator|::
name|D10
case|:
return|return
literal|20
return|;
case|case
name|Mips
operator|::
name|S5
case|:
case|case
name|Mips
operator|::
name|S5_64
case|:
case|case
name|Mips
operator|::
name|F21
case|:
case|case
name|Mips
operator|::
name|D21_64
case|:
return|return
literal|21
return|;
case|case
name|Mips
operator|::
name|S6
case|:
case|case
name|Mips
operator|::
name|S6_64
case|:
case|case
name|Mips
operator|::
name|F22
case|:
case|case
name|Mips
operator|::
name|D22_64
case|:
case|case
name|Mips
operator|::
name|D11
case|:
return|return
literal|22
return|;
case|case
name|Mips
operator|::
name|S7
case|:
case|case
name|Mips
operator|::
name|S7_64
case|:
case|case
name|Mips
operator|::
name|F23
case|:
case|case
name|Mips
operator|::
name|D23_64
case|:
return|return
literal|23
return|;
case|case
name|Mips
operator|::
name|T8
case|:
case|case
name|Mips
operator|::
name|T8_64
case|:
case|case
name|Mips
operator|::
name|F24
case|:
case|case
name|Mips
operator|::
name|D24_64
case|:
case|case
name|Mips
operator|::
name|D12
case|:
return|return
literal|24
return|;
case|case
name|Mips
operator|::
name|T9
case|:
case|case
name|Mips
operator|::
name|T9_64
case|:
case|case
name|Mips
operator|::
name|F25
case|:
case|case
name|Mips
operator|::
name|D25_64
case|:
return|return
literal|25
return|;
case|case
name|Mips
operator|::
name|K0
case|:
case|case
name|Mips
operator|::
name|K0_64
case|:
case|case
name|Mips
operator|::
name|F26
case|:
case|case
name|Mips
operator|::
name|D26_64
case|:
case|case
name|Mips
operator|::
name|D13
case|:
return|return
literal|26
return|;
case|case
name|Mips
operator|::
name|K1
case|:
case|case
name|Mips
operator|::
name|K1_64
case|:
case|case
name|Mips
operator|::
name|F27
case|:
case|case
name|Mips
operator|::
name|D27_64
case|:
return|return
literal|27
return|;
case|case
name|Mips
operator|::
name|GP
case|:
case|case
name|Mips
operator|::
name|GP_64
case|:
case|case
name|Mips
operator|::
name|F28
case|:
case|case
name|Mips
operator|::
name|D28_64
case|:
case|case
name|Mips
operator|::
name|D14
case|:
return|return
literal|28
return|;
case|case
name|Mips
operator|::
name|SP
case|:
case|case
name|Mips
operator|::
name|SP_64
case|:
case|case
name|Mips
operator|::
name|F29
case|:
case|case
name|Mips
operator|::
name|D29_64
case|:
return|return
literal|29
return|;
case|case
name|Mips
operator|::
name|FP
case|:
case|case
name|Mips
operator|::
name|FP_64
case|:
case|case
name|Mips
operator|::
name|F30
case|:
case|case
name|Mips
operator|::
name|D30_64
case|:
case|case
name|Mips
operator|::
name|D15
case|:
return|return
literal|30
return|;
case|case
name|Mips
operator|::
name|RA
case|:
case|case
name|Mips
operator|::
name|RA_64
case|:
case|case
name|Mips
operator|::
name|F31
case|:
case|case
name|Mips
operator|::
name|D31_64
case|:
return|return
literal|31
return|;
default|default:
name|llvm_unreachable
argument_list|(
literal|"Unknown register number!"
argument_list|)
expr_stmt|;
block|}
return|return
literal|0
return|;
comment|// Not reached
block|}
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

