begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- X86LegalizerInfo.h ------------------------------------------*- C++
end_comment

begin_comment
comment|//-*-==//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|/// \file
end_comment

begin_comment
comment|/// This file declares the targeting of the Machinelegalizer class for X86.
end_comment

begin_comment
comment|/// \todo This should be generated by TableGen.
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_LIB_TARGET_X86_X86MACHINELEGALIZER_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_LIB_TARGET_X86_X86MACHINELEGALIZER_H
end_define

begin_include
include|#
directive|include
file|"llvm/CodeGen/GlobalISel/LegalizerInfo.h"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|class
name|X86Subtarget
decl_stmt|;
name|class
name|X86TargetMachine
decl_stmt|;
comment|/// This class provides the information for the target register banks.
name|class
name|X86LegalizerInfo
range|:
name|public
name|LegalizerInfo
block|{
name|private
operator|:
comment|/// Keep a reference to the X86Subtarget around so that we can
comment|/// make the right decision when generating code for different targets.
specifier|const
name|X86Subtarget
operator|&
name|Subtarget
block|;
specifier|const
name|X86TargetMachine
operator|&
name|TM
block|;
name|public
operator|:
name|X86LegalizerInfo
argument_list|(
specifier|const
name|X86Subtarget
operator|&
name|STI
argument_list|,
specifier|const
name|X86TargetMachine
operator|&
name|TM
argument_list|)
block|;
name|private
operator|:
name|void
name|setLegalizerInfo32bit
argument_list|()
block|;
name|void
name|setLegalizerInfo64bit
argument_list|()
block|;
name|void
name|setLegalizerInfoSSE1
argument_list|()
block|;
name|void
name|setLegalizerInfoSSE2
argument_list|()
block|; }
decl_stmt|;
block|}
end_decl_stmt

begin_comment
comment|// namespace llvm
end_comment

begin_endif
endif|#
directive|endif
end_endif

end_unit

