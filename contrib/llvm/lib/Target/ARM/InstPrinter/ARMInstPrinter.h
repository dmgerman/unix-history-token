begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- ARMInstPrinter.h - Convert ARM MCInst to assembly syntax ----------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This class prints an ARM MCInst to a .s file.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|ARMINSTPRINTER_H
end_ifndef

begin_define
define|#
directive|define
name|ARMINSTPRINTER_H
end_define

begin_include
include|#
directive|include
file|"llvm/MC/MCInstPrinter.h"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|class
name|MCOperand
decl_stmt|;
name|class
name|ARMInstPrinter
range|:
name|public
name|MCInstPrinter
block|{
name|public
operator|:
name|ARMInstPrinter
argument_list|(
specifier|const
name|MCAsmInfo
operator|&
name|MAI
argument_list|)
operator|:
name|MCInstPrinter
argument_list|(
argument|MAI
argument_list|)
block|{}
name|virtual
name|void
name|printInst
argument_list|(
specifier|const
name|MCInst
operator|*
name|MI
argument_list|,
name|raw_ostream
operator|&
name|O
argument_list|)
block|;
name|virtual
name|StringRef
name|getOpcodeName
argument_list|(
argument|unsigned Opcode
argument_list|)
specifier|const
block|;
name|virtual
name|void
name|printRegName
argument_list|(
argument|raw_ostream&OS
argument_list|,
argument|unsigned RegNo
argument_list|)
specifier|const
block|;
specifier|static
specifier|const
name|char
operator|*
name|getInstructionName
argument_list|(
argument|unsigned Opcode
argument_list|)
block|;
comment|// Autogenerated by tblgen.
name|void
name|printInstruction
argument_list|(
specifier|const
name|MCInst
operator|*
name|MI
argument_list|,
name|raw_ostream
operator|&
name|O
argument_list|)
block|;
specifier|static
specifier|const
name|char
operator|*
name|getRegisterName
argument_list|(
argument|unsigned RegNo
argument_list|)
block|;
name|void
name|printOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNo
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printSORegOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAddrMode2Operand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAM2PostIndexOp
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAM2PreOrOffsetIndexOp
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAddrMode2OffsetOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAddrMode3Operand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAM3PostIndexOp
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAM3PreOrOffsetIndexOp
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAddrMode3OffsetOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printLdStmModeOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAddrMode5Operand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAddrMode6Operand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAddrMode7Operand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAddrMode6OffsetOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printBitfieldInvMaskImmOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printMemBOption
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printShiftImmOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printThumbS4ImmOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printThumbITMask
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printThumbAddrModeRROperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printThumbAddrModeImm5SOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|,
argument|unsigned Scale
argument_list|)
block|;
name|void
name|printThumbAddrModeImm5S1Operand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printThumbAddrModeImm5S2Operand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printThumbAddrModeImm5S4Operand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printThumbAddrModeSPOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printT2SOOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printAddrModeImm12Operand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printT2AddrModeImm8Operand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printT2AddrModeImm8s4Operand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printT2AddrModeImm8OffsetOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printT2AddrModeImm8s4OffsetOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printT2AddrModeSoRegOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printSetendOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printCPSIMod
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printCPSIFlag
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printMSRMaskOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printPredicateOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printMandatoryPredicateOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printSBitModifierOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printRegisterList
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printNoHashImmediate
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printPImmediate
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printCImmediate
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printVFPf32ImmOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printVFPf64ImmOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printNEONModImmOperand
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|;
name|void
name|printPCLabel
argument_list|(
argument|const MCInst *MI
argument_list|,
argument|unsigned OpNum
argument_list|,
argument|raw_ostream&O
argument_list|)
block|; }
decl_stmt|;
block|}
end_decl_stmt

begin_comment
comment|// end namespace llvm
end_comment

begin_endif
endif|#
directive|endif
end_endif

end_unit

