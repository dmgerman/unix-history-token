begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- ARMFeatures.h - Checks for ARM instruction features -----*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file contains the code shared between ARM CodeGen and ARM MC
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|TARGET_ARM_FEATURES_H
end_ifndef

begin_define
define|#
directive|define
name|TARGET_ARM_FEATURES_H
end_define

begin_include
include|#
directive|include
file|"MCTargetDesc/ARMMCTargetDesc.h"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|template
operator|<
name|typename
name|InstrType
operator|>
comment|// could be MachineInstr or MCInst
name|bool
name|IsCPSRDead
argument_list|(
name|InstrType
operator|*
name|Instr
argument_list|)
expr_stmt|;
name|template
operator|<
name|typename
name|InstrType
operator|>
comment|// could be MachineInstr or MCInst
specifier|inline
name|bool
name|isV8EligibleForIT
argument_list|(
argument|InstrType *Instr
argument_list|)
block|{
switch|switch
condition|(
name|Instr
operator|->
name|getOpcode
argument_list|()
condition|)
block|{
default|default:
return|return
name|false
return|;
case|case
name|ARM
operator|::
name|tADC
case|:
case|case
name|ARM
operator|::
name|tADDi3
case|:
case|case
name|ARM
operator|::
name|tADDi8
case|:
case|case
name|ARM
operator|::
name|tADDrr
case|:
case|case
name|ARM
operator|::
name|tAND
case|:
case|case
name|ARM
operator|::
name|tASRri
case|:
case|case
name|ARM
operator|::
name|tASRrr
case|:
case|case
name|ARM
operator|::
name|tBIC
case|:
case|case
name|ARM
operator|::
name|tEOR
case|:
case|case
name|ARM
operator|::
name|tLSLri
case|:
case|case
name|ARM
operator|::
name|tLSLrr
case|:
case|case
name|ARM
operator|::
name|tLSRri
case|:
case|case
name|ARM
operator|::
name|tLSRrr
case|:
case|case
name|ARM
operator|::
name|tMOVi8
case|:
case|case
name|ARM
operator|::
name|tMUL
case|:
case|case
name|ARM
operator|::
name|tMVN
case|:
case|case
name|ARM
operator|::
name|tORR
case|:
case|case
name|ARM
operator|::
name|tROR
case|:
case|case
name|ARM
operator|::
name|tRSB
case|:
case|case
name|ARM
operator|::
name|tSBC
case|:
case|case
name|ARM
operator|::
name|tSUBi3
case|:
case|case
name|ARM
operator|::
name|tSUBi8
case|:
case|case
name|ARM
operator|::
name|tSUBrr
case|:
comment|// Outside of an IT block, these set CPSR.
return|return
name|IsCPSRDead
argument_list|(
name|Instr
argument_list|)
return|;
case|case
name|ARM
operator|::
name|tADDrSPi
case|:
case|case
name|ARM
operator|::
name|tCMNz
case|:
case|case
name|ARM
operator|::
name|tCMPi8
case|:
case|case
name|ARM
operator|::
name|tCMPr
case|:
case|case
name|ARM
operator|::
name|tLDRBi
case|:
case|case
name|ARM
operator|::
name|tLDRBr
case|:
case|case
name|ARM
operator|::
name|tLDRHi
case|:
case|case
name|ARM
operator|::
name|tLDRHr
case|:
case|case
name|ARM
operator|::
name|tLDRSB
case|:
case|case
name|ARM
operator|::
name|tLDRSH
case|:
case|case
name|ARM
operator|::
name|tLDRi
case|:
case|case
name|ARM
operator|::
name|tLDRr
case|:
case|case
name|ARM
operator|::
name|tLDRspi
case|:
case|case
name|ARM
operator|::
name|tSTRBi
case|:
case|case
name|ARM
operator|::
name|tSTRBr
case|:
case|case
name|ARM
operator|::
name|tSTRHi
case|:
case|case
name|ARM
operator|::
name|tSTRHr
case|:
case|case
name|ARM
operator|::
name|tSTRi
case|:
case|case
name|ARM
operator|::
name|tSTRr
case|:
case|case
name|ARM
operator|::
name|tSTRspi
case|:
case|case
name|ARM
operator|::
name|tTST
case|:
return|return
name|true
return|;
comment|// there are some "conditionally deprecated" opcodes
case|case
name|ARM
operator|::
name|tADDspr
case|:
case|case
name|ARM
operator|::
name|tBLXr
case|:
return|return
name|Instr
operator|->
name|getOperand
argument_list|(
literal|2
argument_list|)
operator|.
name|getReg
argument_list|()
operator|!=
name|ARM
operator|::
name|PC
return|;
comment|// ADD PC, SP and BLX PC were always unpredictable,
comment|// now on top of it they're deprecated
case|case
name|ARM
operator|::
name|tADDrSP
case|:
case|case
name|ARM
operator|::
name|tBX
case|:
return|return
name|Instr
operator|->
name|getOperand
argument_list|(
literal|0
argument_list|)
operator|.
name|getReg
argument_list|()
operator|!=
name|ARM
operator|::
name|PC
return|;
case|case
name|ARM
operator|::
name|tADDhirr
case|:
return|return
name|Instr
operator|->
name|getOperand
argument_list|(
literal|0
argument_list|)
operator|.
name|getReg
argument_list|()
operator|!=
name|ARM
operator|::
name|PC
operator|&&
name|Instr
operator|->
name|getOperand
argument_list|(
literal|2
argument_list|)
operator|.
name|getReg
argument_list|()
operator|!=
name|ARM
operator|::
name|PC
return|;
case|case
name|ARM
operator|::
name|tCMPhir
case|:
case|case
name|ARM
operator|::
name|tMOVr
case|:
return|return
name|Instr
operator|->
name|getOperand
argument_list|(
literal|0
argument_list|)
operator|.
name|getReg
argument_list|()
operator|!=
name|ARM
operator|::
name|PC
operator|&&
name|Instr
operator|->
name|getOperand
argument_list|(
literal|1
argument_list|)
operator|.
name|getReg
argument_list|()
operator|!=
name|ARM
operator|::
name|PC
return|;
block|}
block|}
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

