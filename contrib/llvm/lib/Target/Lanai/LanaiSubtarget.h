begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//=====-- LanaiSubtarget.h - Define Subtarget for the Lanai -----*- C++ -*--==//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file declares the Lanai specific subclass of TargetSubtarget.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_LIB_TARGET_LANAI_LANAISUBTARGET_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_LIB_TARGET_LANAI_LANAISUBTARGET_H
end_define

begin_include
include|#
directive|include
file|"LanaiFrameLowering.h"
end_include

begin_include
include|#
directive|include
file|"LanaiISelLowering.h"
end_include

begin_include
include|#
directive|include
file|"LanaiInstrInfo.h"
end_include

begin_include
include|#
directive|include
file|"LanaiSelectionDAGInfo.h"
end_include

begin_include
include|#
directive|include
file|"llvm/IR/DataLayout.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Target/TargetFrameLowering.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Target/TargetMachine.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Target/TargetSubtargetInfo.h"
end_include

begin_define
define|#
directive|define
name|GET_SUBTARGETINFO_HEADER
end_define

begin_include
include|#
directive|include
file|"LanaiGenSubtargetInfo.inc"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|class
name|LanaiSubtarget
range|:
name|public
name|LanaiGenSubtargetInfo
block|{
name|public
operator|:
comment|// This constructor initializes the data members to match that
comment|// of the specified triple.
name|LanaiSubtarget
argument_list|(
argument|const Triple&TargetTriple
argument_list|,
argument|StringRef Cpu
argument_list|,
argument|StringRef FeatureString
argument_list|,
argument|const TargetMachine&TM
argument_list|,
argument|const TargetOptions&Options
argument_list|,
argument|CodeModel::Model CodeModel
argument_list|,
argument|CodeGenOpt::Level OptLevel
argument_list|)
block|;
comment|// ParseSubtargetFeatures - Parses features string setting specified
comment|// subtarget options.  Definition of function is auto generated by tblgen.
name|void
name|ParseSubtargetFeatures
argument_list|(
argument|StringRef CPU
argument_list|,
argument|StringRef FS
argument_list|)
block|;
name|LanaiSubtarget
operator|&
name|initializeSubtargetDependencies
argument_list|(
argument|StringRef CPU
argument_list|,
argument|StringRef FS
argument_list|)
block|;
name|void
name|initSubtargetFeatures
argument_list|(
argument|StringRef CPU
argument_list|,
argument|StringRef FS
argument_list|)
block|;
name|bool
name|enableMachineScheduler
argument_list|()
specifier|const
name|override
block|{
return|return
name|true
return|;
block|}
specifier|const
name|LanaiInstrInfo
operator|*
name|getInstrInfo
argument_list|()
specifier|const
name|override
block|{
return|return
operator|&
name|InstrInfo
return|;
block|}
specifier|const
name|TargetFrameLowering
operator|*
name|getFrameLowering
argument_list|()
specifier|const
name|override
block|{
return|return
operator|&
name|FrameLowering
return|;
block|}
specifier|const
name|LanaiRegisterInfo
operator|*
name|getRegisterInfo
argument_list|()
specifier|const
name|override
block|{
return|return
operator|&
name|InstrInfo
operator|.
name|getRegisterInfo
argument_list|()
return|;
block|}
specifier|const
name|LanaiTargetLowering
operator|*
name|getTargetLowering
argument_list|()
specifier|const
name|override
block|{
return|return
operator|&
name|TLInfo
return|;
block|}
specifier|const
name|LanaiSelectionDAGInfo
operator|*
name|getSelectionDAGInfo
argument_list|()
specifier|const
name|override
block|{
return|return
operator|&
name|TSInfo
return|;
block|}
name|private
operator|:
name|LanaiFrameLowering
name|FrameLowering
block|;
name|LanaiInstrInfo
name|InstrInfo
block|;
name|LanaiTargetLowering
name|TLInfo
block|;
name|LanaiSelectionDAGInfo
name|TSInfo
block|; }
decl_stmt|;
block|}
end_decl_stmt

begin_comment
comment|// namespace llvm
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// LLVM_LIB_TARGET_LANAI_LANAISUBTARGET_H
end_comment

end_unit

