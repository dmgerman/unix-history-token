begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- DbiStream.h - PDB Dbi Stream (Stream 3) Access -----------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_DEBUGINFO_PDB_RAW_PDBDBISTREAM_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_DEBUGINFO_PDB_RAW_PDBDBISTREAM_H
end_define

begin_include
include|#
directive|include
file|"llvm/DebugInfo/CodeView/ModuleSubstream.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/CodeView/StreamArray.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/CodeView/StreamRef.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/PDBTypes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Raw/MappedBlockStream.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Raw/ModInfo.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Raw/NameHashTable.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Raw/RawConstants.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Raw/RawTypes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Endian.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Error.h"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|namespace
name|object
block|{
struct_decl|struct
name|FpoData
struct_decl|;
struct_decl|struct
name|coff_section
struct_decl|;
block|}
name|namespace
name|pdb
block|{
name|class
name|DbiStreamBuilder
decl_stmt|;
name|class
name|PDBFile
decl_stmt|;
name|class
name|ISectionContribVisitor
decl_stmt|;
name|class
name|DbiStream
block|{
name|friend
name|class
name|DbiStreamBuilder
decl_stmt|;
struct|struct
name|HeaderInfo
block|{
name|support
operator|::
name|little32_t
name|VersionSignature
expr_stmt|;
name|support
operator|::
name|ulittle32_t
name|VersionHeader
expr_stmt|;
name|support
operator|::
name|ulittle32_t
name|Age
expr_stmt|;
comment|// Should match InfoStream.
name|support
operator|::
name|ulittle16_t
name|GlobalSymbolStreamIndex
expr_stmt|;
comment|// Global symbol stream #
name|support
operator|::
name|ulittle16_t
name|BuildNumber
expr_stmt|;
comment|// See DbiBuildNo structure.
name|support
operator|::
name|ulittle16_t
name|PublicSymbolStreamIndex
expr_stmt|;
comment|// Public symbols stream #
name|support
operator|::
name|ulittle16_t
name|PdbDllVersion
expr_stmt|;
comment|// version of mspdbNNN.dll
name|support
operator|::
name|ulittle16_t
name|SymRecordStreamIndex
expr_stmt|;
comment|// Symbol records stream #
name|support
operator|::
name|ulittle16_t
name|PdbDllRbld
expr_stmt|;
comment|// rbld number of mspdbNNN.dll
name|support
operator|::
name|little32_t
name|ModiSubstreamSize
expr_stmt|;
comment|// Size of module info stream
name|support
operator|::
name|little32_t
name|SecContrSubstreamSize
expr_stmt|;
comment|// Size of sec. contrib stream
name|support
operator|::
name|little32_t
name|SectionMapSize
expr_stmt|;
comment|// Size of sec. map substream
name|support
operator|::
name|little32_t
name|FileInfoSize
expr_stmt|;
comment|// Size of file info substream
name|support
operator|::
name|little32_t
name|TypeServerSize
expr_stmt|;
comment|// Size of type server map
name|support
operator|::
name|ulittle32_t
name|MFCTypeServerIndex
expr_stmt|;
comment|// Index of MFC Type Server
name|support
operator|::
name|little32_t
name|OptionalDbgHdrSize
expr_stmt|;
comment|// Size of DbgHeader info
name|support
operator|::
name|little32_t
name|ECSubstreamSize
expr_stmt|;
comment|// Size of EC stream (what is EC?)
name|support
operator|::
name|ulittle16_t
name|Flags
expr_stmt|;
comment|// See DbiFlags enum.
name|support
operator|::
name|ulittle16_t
name|MachineType
expr_stmt|;
comment|// See PDB_MachineType enum.
name|support
operator|::
name|ulittle32_t
name|Reserved
expr_stmt|;
comment|// Pad to 64 bytes
block|}
struct|;
name|public
label|:
name|DbiStream
argument_list|(
name|PDBFile
operator|&
name|File
argument_list|,
name|std
operator|::
name|unique_ptr
operator|<
name|MappedBlockStream
operator|>
name|Stream
argument_list|)
expr_stmt|;
operator|~
name|DbiStream
argument_list|()
expr_stmt|;
name|Error
name|reload
parameter_list|()
function_decl|;
name|PdbRaw_DbiVer
name|getDbiVersion
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|getAge
argument_list|()
specifier|const
expr_stmt|;
name|uint16_t
name|getPublicSymbolStreamIndex
argument_list|()
specifier|const
expr_stmt|;
name|uint16_t
name|getGlobalSymbolStreamIndex
argument_list|()
specifier|const
expr_stmt|;
name|uint16_t
name|getFlags
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isIncrementallyLinked
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|hasCTypes
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isStripped
argument_list|()
specifier|const
expr_stmt|;
name|uint16_t
name|getBuildNumber
argument_list|()
specifier|const
expr_stmt|;
name|uint16_t
name|getBuildMajorVersion
argument_list|()
specifier|const
expr_stmt|;
name|uint16_t
name|getBuildMinorVersion
argument_list|()
specifier|const
expr_stmt|;
name|uint16_t
name|getPdbDllRbld
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|getPdbDllVersion
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|getSymRecordStreamIndex
argument_list|()
specifier|const
expr_stmt|;
name|PDB_Machine
name|getMachineType
argument_list|()
specifier|const
expr_stmt|;
enum|enum
block|{
name|InvalidStreamIndex
init|=
literal|0xffff
block|}
enum|;
comment|/// If the given stream type is present, returns its stream index. If it is
comment|/// not present, returns InvalidStreamIndex.
name|uint32_t
name|getDebugStreamIndex
argument_list|(
name|DbgHeaderType
name|Type
argument_list|)
decl|const
decl_stmt|;
name|ArrayRef
operator|<
name|ModuleInfoEx
operator|>
name|modules
argument_list|()
specifier|const
expr_stmt|;
name|Expected
operator|<
name|StringRef
operator|>
name|getFileNameForIndex
argument_list|(
argument|uint32_t Index
argument_list|)
specifier|const
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|object
operator|::
name|coff_section
operator|>
name|getSectionHeaders
argument_list|()
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|object
operator|::
name|FpoData
operator|>
name|getFpoRecords
argument_list|()
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|SecMapEntry
operator|>
name|getSectionMap
argument_list|()
specifier|const
expr_stmt|;
name|void
name|visitSectionContributions
argument_list|(
name|ISectionContribVisitor
operator|&
name|Visitor
argument_list|)
decl|const
decl_stmt|;
name|Error
name|commit
parameter_list|()
function_decl|;
name|private
label|:
name|Error
name|initializeSectionContributionData
parameter_list|()
function_decl|;
name|Error
name|initializeSectionHeadersData
parameter_list|()
function_decl|;
name|Error
name|initializeSectionMapData
parameter_list|()
function_decl|;
name|Error
name|initializeFileInfo
parameter_list|()
function_decl|;
name|Error
name|initializeFpoRecords
parameter_list|()
function_decl|;
name|PDBFile
modifier|&
name|Pdb
decl_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|MappedBlockStream
operator|>
name|Stream
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|ModuleInfoEx
operator|>
name|ModuleInfos
expr_stmt|;
name|NameHashTable
name|ECNames
decl_stmt|;
name|codeview
operator|::
name|StreamRef
name|ModInfoSubstream
expr_stmt|;
name|codeview
operator|::
name|StreamRef
name|SecContrSubstream
expr_stmt|;
name|codeview
operator|::
name|StreamRef
name|SecMapSubstream
expr_stmt|;
name|codeview
operator|::
name|StreamRef
name|FileInfoSubstream
expr_stmt|;
name|codeview
operator|::
name|StreamRef
name|TypeServerMapSubstream
expr_stmt|;
name|codeview
operator|::
name|StreamRef
name|ECSubstream
expr_stmt|;
name|codeview
operator|::
name|StreamRef
name|NamesBuffer
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|support
operator|::
name|ulittle16_t
operator|>
name|DbgStreams
expr_stmt|;
name|PdbRaw_DbiSecContribVer
name|SectionContribVersion
decl_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|SectionContrib
operator|>
name|SectionContribs
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|SectionContrib2
operator|>
name|SectionContribs2
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|SecMapEntry
operator|>
name|SectionMap
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|support
operator|::
name|little32_t
operator|>
name|FileNameOffsets
expr_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|MappedBlockStream
operator|>
name|SectionHeaderStream
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|object
operator|::
name|coff_section
operator|>
name|SectionHeaders
expr_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|MappedBlockStream
operator|>
name|FpoStream
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|object
operator|::
name|FpoData
operator|>
name|FpoRecords
expr_stmt|;
specifier|const
name|HeaderInfo
modifier|*
name|Header
decl_stmt|;
block|}
empty_stmt|;
block|}
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

