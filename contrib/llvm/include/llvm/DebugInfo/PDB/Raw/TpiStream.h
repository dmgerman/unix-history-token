begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- TpiStream.cpp - PDB Type Info (TPI) Stream 2 Access ------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_DEBUGINFO_PDB_RAW_PDBTPISTREAM_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_DEBUGINFO_PDB_RAW_PDBTPISTREAM_H
end_define

begin_include
include|#
directive|include
file|"llvm/DebugInfo/CodeView/StreamArray.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/CodeView/StreamRef.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/CodeView/TypeRecord.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/PDBTypes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Raw/MappedBlockStream.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Raw/RawConstants.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Raw/RawTypes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/raw_ostream.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Error.h"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|namespace
name|pdb
block|{
name|class
name|PDBFile
decl_stmt|;
name|class
name|TpiStream
block|{
struct_decl|struct
name|HeaderInfo
struct_decl|;
name|public
label|:
name|TpiStream
argument_list|(
specifier|const
name|PDBFile
operator|&
name|File
argument_list|,
name|std
operator|::
name|unique_ptr
operator|<
name|MappedBlockStream
operator|>
name|Stream
argument_list|)
expr_stmt|;
operator|~
name|TpiStream
argument_list|()
expr_stmt|;
name|Error
name|reload
parameter_list|()
function_decl|;
name|PdbRaw_TpiVer
name|getTpiVersion
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|TypeIndexBegin
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|TypeIndexEnd
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|NumTypeRecords
argument_list|()
specifier|const
expr_stmt|;
name|uint16_t
name|getTypeHashStreamIndex
argument_list|()
specifier|const
expr_stmt|;
name|uint16_t
name|getTypeHashStreamAuxIndex
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|getHashKeySize
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|NumHashBuckets
argument_list|()
specifier|const
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|support
operator|::
name|ulittle32_t
operator|>
name|getHashValues
argument_list|()
specifier|const
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|TypeIndexOffset
operator|>
name|getTypeIndexOffsets
argument_list|()
specifier|const
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|TypeIndexOffset
operator|>
name|getHashAdjustments
argument_list|()
specifier|const
expr_stmt|;
name|iterator_range
operator|<
name|codeview
operator|::
name|CVTypeArray
operator|::
name|Iterator
operator|>
name|types
argument_list|(
argument|bool *HadError
argument_list|)
specifier|const
expr_stmt|;
name|Error
name|commit
parameter_list|()
function_decl|;
name|private
label|:
name|Error
name|verifyHashValues
parameter_list|()
function_decl|;
specifier|const
name|PDBFile
modifier|&
name|Pdb
decl_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|MappedBlockStream
operator|>
name|Stream
expr_stmt|;
name|codeview
operator|::
name|CVTypeArray
name|TypeRecords
expr_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|MappedBlockStream
operator|>
name|HashStream
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|support
operator|::
name|ulittle32_t
operator|>
name|HashValues
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|TypeIndexOffset
operator|>
name|TypeIndexOffsets
expr_stmt|;
name|codeview
operator|::
name|FixedStreamArray
operator|<
name|TypeIndexOffset
operator|>
name|HashAdjustments
expr_stmt|;
specifier|const
name|HeaderInfo
modifier|*
name|Header
decl_stmt|;
block|}
empty_stmt|;
block|}
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

