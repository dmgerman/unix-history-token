begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- PDBFile.h - Low level interface to a PDB file ------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_DEBUGINFO_PDB_RAW_PDBFILE_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_DEBUGINFO_PDB_RAW_PDBFILE_H
end_define

begin_include
include|#
directive|include
file|"llvm/ADT/DenseMap.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/MSF/IMSFFile.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/MSF/MSFCommon.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Allocator.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/BinaryStreamRef.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Endian.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Error.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/MathExtras.h"
end_include

begin_include
include|#
directive|include
file|<memory>
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|class
name|BinaryStream
decl_stmt|;
name|namespace
name|msf
block|{
name|class
name|MappedBlockStream
decl_stmt|;
block|}
name|namespace
name|pdb
block|{
name|class
name|DbiStream
decl_stmt|;
name|class
name|GlobalsStream
decl_stmt|;
name|class
name|InfoStream
decl_stmt|;
name|class
name|PDBStringTable
decl_stmt|;
name|class
name|PDBFileBuilder
decl_stmt|;
name|class
name|PublicsStream
decl_stmt|;
name|class
name|SymbolStream
decl_stmt|;
name|class
name|TpiStream
decl_stmt|;
name|class
name|PDBFile
range|:
name|public
name|msf
operator|::
name|IMSFFile
block|{
name|friend
name|PDBFileBuilder
block|;
name|public
operator|:
name|PDBFile
argument_list|(
argument|StringRef Path
argument_list|,
argument|std::unique_ptr<BinaryStream> PdbFileBuffer
argument_list|,
argument|BumpPtrAllocator&Allocator
argument_list|)
block|;
operator|~
name|PDBFile
argument_list|()
name|override
block|;
name|StringRef
name|getFileDirectory
argument_list|()
specifier|const
block|;
name|StringRef
name|getFilePath
argument_list|()
specifier|const
block|;
name|uint32_t
name|getFreeBlockMapBlock
argument_list|()
specifier|const
block|;
name|uint32_t
name|getUnknown1
argument_list|()
specifier|const
block|;
name|uint32_t
name|getBlockSize
argument_list|()
specifier|const
name|override
block|;
name|uint32_t
name|getBlockCount
argument_list|()
specifier|const
name|override
block|;
name|uint32_t
name|getNumDirectoryBytes
argument_list|()
specifier|const
block|;
name|uint32_t
name|getBlockMapIndex
argument_list|()
specifier|const
block|;
name|uint32_t
name|getNumDirectoryBlocks
argument_list|()
specifier|const
block|;
name|uint64_t
name|getBlockMapOffset
argument_list|()
specifier|const
block|;
name|uint32_t
name|getNumStreams
argument_list|()
specifier|const
name|override
block|;
name|uint32_t
name|getStreamByteSize
argument_list|(
argument|uint32_t StreamIndex
argument_list|)
specifier|const
name|override
block|;
name|ArrayRef
operator|<
name|support
operator|::
name|ulittle32_t
operator|>
name|getStreamBlockList
argument_list|(
argument|uint32_t StreamIndex
argument_list|)
specifier|const
name|override
block|;
name|uint32_t
name|getFileSize
argument_list|()
specifier|const
block|;
name|Expected
operator|<
name|ArrayRef
operator|<
name|uint8_t
operator|>>
name|getBlockData
argument_list|(
argument|uint32_t BlockIndex
argument_list|,
argument|uint32_t NumBytes
argument_list|)
specifier|const
name|override
block|;
name|Error
name|setBlockData
argument_list|(
argument|uint32_t BlockIndex
argument_list|,
argument|uint32_t Offset
argument_list|,
argument|ArrayRef<uint8_t> Data
argument_list|)
specifier|const
name|override
block|;
name|ArrayRef
operator|<
name|uint32_t
operator|>
name|getFpmPages
argument_list|()
specifier|const
block|{
return|return
name|FpmPages
return|;
block|}
name|ArrayRef
operator|<
name|support
operator|::
name|ulittle32_t
operator|>
name|getStreamSizes
argument_list|()
specifier|const
block|{
return|return
name|ContainerLayout
operator|.
name|StreamSizes
return|;
block|}
name|ArrayRef
operator|<
name|ArrayRef
operator|<
name|support
operator|::
name|ulittle32_t
operator|>>
name|getStreamMap
argument_list|()
specifier|const
block|{
return|return
name|ContainerLayout
operator|.
name|StreamMap
return|;
block|}
specifier|const
name|msf
operator|::
name|MSFLayout
operator|&
name|getMsfLayout
argument_list|()
specifier|const
block|{
return|return
name|ContainerLayout
return|;
block|}
name|BinaryStreamRef
name|getMsfBuffer
argument_list|()
specifier|const
block|{
return|return
operator|*
name|Buffer
return|;
block|}
name|ArrayRef
operator|<
name|support
operator|::
name|ulittle32_t
operator|>
name|getDirectoryBlockArray
argument_list|()
specifier|const
block|;
name|Error
name|parseFileHeaders
argument_list|()
block|;
name|Error
name|parseStreamData
argument_list|()
block|;
name|Expected
operator|<
name|InfoStream
operator|&
operator|>
name|getPDBInfoStream
argument_list|()
block|;
name|Expected
operator|<
name|DbiStream
operator|&
operator|>
name|getPDBDbiStream
argument_list|()
block|;
name|Expected
operator|<
name|GlobalsStream
operator|&
operator|>
name|getPDBGlobalsStream
argument_list|()
block|;
name|Expected
operator|<
name|TpiStream
operator|&
operator|>
name|getPDBTpiStream
argument_list|()
block|;
name|Expected
operator|<
name|TpiStream
operator|&
operator|>
name|getPDBIpiStream
argument_list|()
block|;
name|Expected
operator|<
name|PublicsStream
operator|&
operator|>
name|getPDBPublicsStream
argument_list|()
block|;
name|Expected
operator|<
name|SymbolStream
operator|&
operator|>
name|getPDBSymbolStream
argument_list|()
block|;
name|Expected
operator|<
name|PDBStringTable
operator|&
operator|>
name|getStringTable
argument_list|()
block|;
name|BumpPtrAllocator
operator|&
name|getAllocator
argument_list|()
block|{
return|return
name|Allocator
return|;
block|}
name|bool
name|hasPDBDbiStream
argument_list|()
specifier|const
block|;
name|bool
name|hasPDBGlobalsStream
argument_list|()
block|;
name|bool
name|hasPDBInfoStream
argument_list|()
block|;
name|bool
name|hasPDBIpiStream
argument_list|()
specifier|const
block|;
name|bool
name|hasPDBPublicsStream
argument_list|()
block|;
name|bool
name|hasPDBSymbolStream
argument_list|()
block|;
name|bool
name|hasPDBTpiStream
argument_list|()
specifier|const
block|;
name|bool
name|hasPDBStringTable
argument_list|()
block|;
name|private
operator|:
name|Expected
operator|<
name|std
operator|::
name|unique_ptr
operator|<
name|msf
operator|::
name|MappedBlockStream
operator|>>
name|safelyCreateIndexedStream
argument_list|(
argument|const msf::MSFLayout&Layout
argument_list|,
argument|BinaryStreamRef MsfData
argument_list|,
argument|uint32_t StreamIndex
argument_list|)
specifier|const
block|;
name|std
operator|::
name|string
name|FilePath
block|;
name|BumpPtrAllocator
operator|&
name|Allocator
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|BinaryStream
operator|>
name|Buffer
block|;
name|std
operator|::
name|vector
operator|<
name|uint32_t
operator|>
name|FpmPages
block|;
name|msf
operator|::
name|MSFLayout
name|ContainerLayout
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|GlobalsStream
operator|>
name|Globals
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|InfoStream
operator|>
name|Info
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|DbiStream
operator|>
name|Dbi
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|TpiStream
operator|>
name|Tpi
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|TpiStream
operator|>
name|Ipi
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|PublicsStream
operator|>
name|Publics
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|SymbolStream
operator|>
name|Symbols
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|msf
operator|::
name|MappedBlockStream
operator|>
name|DirectoryStream
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|msf
operator|::
name|MappedBlockStream
operator|>
name|StringTableStream
block|;
name|std
operator|::
name|unique_ptr
operator|<
name|PDBStringTable
operator|>
name|Strings
block|; }
decl_stmt|;
block|}
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

