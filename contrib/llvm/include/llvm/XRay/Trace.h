begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- Trace.h - XRay Trace Abstraction -----------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Defines the XRay Trace class representing records in an XRay trace file.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_XRAY_TRACE_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_XRAY_TRACE_H
end_define

begin_include
include|#
directive|include
file|<cstdint>
end_include

begin_include
include|#
directive|include
file|<vector>
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/StringRef.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Error.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/FileSystem.h"
end_include

begin_include
include|#
directive|include
file|"llvm/XRay/XRayRecord.h"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|namespace
name|xray
block|{
comment|/// A Trace object represents the records that have been loaded from XRay
comment|/// log files generated by instrumented binaries. We encapsulate the logic of
comment|/// reading the traces in factory functions that populate the Trace object
comment|/// appropriately.
comment|///
comment|/// Trace objects provide an accessor to an XRayFileHeader which says more about
comment|/// details of the file from which the XRay trace was loaded from.
comment|///
comment|/// Usage:
comment|///
comment|///   if (auto TraceOrErr = loadTraceFile("xray-log.something.xray")) {
comment|///     auto& T = *TraceOrErr;
comment|///     // T.getFileHeader() will provide information from the trace header.
comment|///     for (const XRayRecord&R : T) {
comment|///       // ... do something with R here.
comment|///     }
comment|///   } else {
comment|///     // Handle the error here.
comment|///   }
comment|///
name|class
name|Trace
block|{
name|XRayFileHeader
name|FileHeader
decl_stmt|;
name|std
operator|::
name|vector
operator|<
name|XRayRecord
operator|>
name|Records
expr_stmt|;
typedef|typedef
name|std
operator|::
name|vector
operator|<
name|XRayRecord
operator|>
operator|::
name|const_iterator
name|citerator
expr_stmt|;
name|friend
name|Expected
operator|<
name|Trace
operator|>
name|loadTraceFile
argument_list|(
name|StringRef
argument_list|,
name|bool
argument_list|)
expr_stmt|;
name|public
label|:
comment|/// Provides access to the loaded XRay trace file header.
specifier|const
name|XRayFileHeader
operator|&
name|getFileHeader
argument_list|()
specifier|const
block|{
return|return
name|FileHeader
return|;
block|}
name|citerator
name|begin
argument_list|()
specifier|const
block|{
return|return
name|Records
operator|.
name|begin
argument_list|()
return|;
block|}
name|citerator
name|end
argument_list|()
specifier|const
block|{
return|return
name|Records
operator|.
name|end
argument_list|()
return|;
block|}
name|size_t
name|size
argument_list|()
specifier|const
block|{
return|return
name|Records
operator|.
name|size
argument_list|()
return|;
block|}
block|}
empty_stmt|;
comment|/// This function will attempt to load XRay trace records from the provided
comment|/// |Filename|.
name|Expected
operator|<
name|Trace
operator|>
name|loadTraceFile
argument_list|(
argument|StringRef Filename
argument_list|,
argument|bool Sort = false
argument_list|)
expr_stmt|;
block|}
comment|// namespace xray
block|}
end_decl_stmt

begin_comment
comment|// namespace llvm
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// LLVM_XRAY_TRACE_H
end_comment

end_unit

