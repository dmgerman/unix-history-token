begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- NativeFormatting.h - Low level formatting helpers ---------*- C++-*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_SUPPORT_NATIVE_FORMATTING_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_SUPPORT_NATIVE_FORMATTING_H
end_define

begin_include
include|#
directive|include
file|"llvm/ADT/Optional.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/raw_ostream.h"
end_include

begin_include
include|#
directive|include
file|<cstdint>
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|enum
name|class
name|FloatStyle
block|{
name|Exponent
operator|,
name|ExponentUpper
operator|,
name|Fixed
operator|,
name|Percent
block|}
empty_stmt|;
name|enum
name|class
name|IntegerStyle
block|{
name|Integer
operator|,
name|Number
operator|,
block|}
empty_stmt|;
name|enum
name|class
name|HexPrintStyle
block|{
name|Upper
operator|,
name|Lower
operator|,
name|PrefixUpper
operator|,
name|PrefixLower
block|}
empty_stmt|;
name|size_t
name|getDefaultPrecision
parameter_list|(
name|FloatStyle
name|Style
parameter_list|)
function_decl|;
name|bool
name|isPrefixedHexStyle
parameter_list|(
name|HexPrintStyle
name|S
parameter_list|)
function_decl|;
name|void
name|write_integer
parameter_list|(
name|raw_ostream
modifier|&
name|S
parameter_list|,
name|unsigned
name|int
name|N
parameter_list|,
name|size_t
name|MinDigits
parameter_list|,
name|IntegerStyle
name|Style
parameter_list|)
function_decl|;
name|void
name|write_integer
parameter_list|(
name|raw_ostream
modifier|&
name|S
parameter_list|,
name|int
name|N
parameter_list|,
name|size_t
name|MinDigits
parameter_list|,
name|IntegerStyle
name|Style
parameter_list|)
function_decl|;
name|void
name|write_integer
parameter_list|(
name|raw_ostream
modifier|&
name|S
parameter_list|,
name|unsigned
name|long
name|N
parameter_list|,
name|size_t
name|MinDigits
parameter_list|,
name|IntegerStyle
name|Style
parameter_list|)
function_decl|;
name|void
name|write_integer
parameter_list|(
name|raw_ostream
modifier|&
name|S
parameter_list|,
name|long
name|N
parameter_list|,
name|size_t
name|MinDigits
parameter_list|,
name|IntegerStyle
name|Style
parameter_list|)
function_decl|;
name|void
name|write_integer
parameter_list|(
name|raw_ostream
modifier|&
name|S
parameter_list|,
name|unsigned
name|long
name|long
name|N
parameter_list|,
name|size_t
name|MinDigits
parameter_list|,
name|IntegerStyle
name|Style
parameter_list|)
function_decl|;
name|void
name|write_integer
parameter_list|(
name|raw_ostream
modifier|&
name|S
parameter_list|,
name|long
name|long
name|N
parameter_list|,
name|size_t
name|MinDigits
parameter_list|,
name|IntegerStyle
name|Style
parameter_list|)
function_decl|;
name|void
name|write_hex
argument_list|(
name|raw_ostream
operator|&
name|S
argument_list|,
name|uint64_t
name|N
argument_list|,
name|HexPrintStyle
name|Style
argument_list|,
name|Optional
operator|<
name|size_t
operator|>
name|Width
operator|=
name|None
argument_list|)
decl_stmt|;
name|void
name|write_double
argument_list|(
name|raw_ostream
operator|&
name|S
argument_list|,
name|double
name|D
argument_list|,
name|FloatStyle
name|Style
argument_list|,
name|Optional
operator|<
name|size_t
operator|>
name|Precision
operator|=
name|None
argument_list|)
decl_stmt|;
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

