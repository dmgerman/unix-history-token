begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- llvm/LinkAllPasses.h ------------ Reference All Passes ---*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                      The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This header file pulls in all transformation and analysis passes for tools
end_comment

begin_comment
comment|// like opt and bugpoint that need this functionality.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_LINKALLPASSES_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_LINKALLPASSES_H
end_define

begin_include
include|#
directive|include
file|"llvm/ADT/Statistic.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/AliasAnalysisEvaluator.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/AliasSetTracker.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/BasicAliasAnalysis.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/CFLAndersAliasAnalysis.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/CFLSteensAliasAnalysis.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/CallPrinter.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/DomPrinter.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/GlobalsModRef.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/IntervalPartition.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/Lint.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/Passes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/PostDominators.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/RegionPass.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/RegionPrinter.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/ScalarEvolution.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/ScalarEvolutionAliasAnalysis.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/ScopedNoAliasAA.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/TargetLibraryInfo.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/TypeBasedAliasAnalysis.h"
end_include

begin_include
include|#
directive|include
file|"llvm/CodeGen/Passes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/IR/Function.h"
end_include

begin_include
include|#
directive|include
file|"llvm/IR/IRPrintingPasses.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Valgrind.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/IPO.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/IPO/AlwaysInliner.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/IPO/FunctionAttrs.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/Instrumentation.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/ObjCARC.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/Scalar.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/Scalar/GVN.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/Utils/SymbolRewriter.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/Utils/UnifyFunctionExitNodes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/Vectorize.h"
end_include

begin_include
include|#
directive|include
file|<cstdlib>
end_include

begin_macro
name|namespace
end_macro

begin_block
block|{
struct|struct
name|ForcePassLinking
block|{
name|ForcePassLinking
argument_list|()
block|{
comment|// We must reference the passes in such a way that compilers will not
comment|// delete it all as dead code, even with whole program optimization,
comment|// yet is effectively a NO-OP. As the compiler isn't smart enough
comment|// to know that getenv() never returns -1, this will do the job.
if|if
condition|(
name|std
operator|::
name|getenv
argument_list|(
literal|"bar"
argument_list|)
operator|!=
operator|(
name|char
operator|*
operator|)
operator|-
literal|1
condition|)
return|return;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createAAEvalPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createAggressiveDCEPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createBitTrackingDCEPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createArgumentPromotionPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createAlignmentFromAssumptionsPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createBasicAAWrapperPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSCEVAAWrapperPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createTypeBasedAAWrapperPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createScopedNoAliasAAWrapperPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createBoundsCheckingPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createBreakCriticalEdgesPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createCallGraphDOTPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createCallGraphViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createCFGSimplificationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLateCFGSimplificationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createCFLAndersAAWrapperPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createCFLSteensAAWrapperPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createStructurizeCFGPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLibCallsShrinkWrapPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createConstantMergePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createConstantPropagationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createCostModelAnalysisPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDeadArgEliminationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDeadCodeEliminationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDeadInstEliminationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDeadStoreEliminationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDependenceAnalysisWrapperPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDivergenceAnalysisPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDomOnlyPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDomPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDomOnlyViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDomViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createGCOVProfilerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPGOInstrumentationGenLegacyPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPGOInstrumentationUseLegacyPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPGOIndirectCallPromotionLegacyPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPGOMemOPSizeOptLegacyPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createInstrProfilingLegacyPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createFunctionImportPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createFunctionInliningPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createAlwaysInlinerLegacyPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createGlobalDCEPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createGlobalOptimizerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createGlobalsAAWrapperPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createGuardWideningPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createIPConstantPropagationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createIPSCCPPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createInductiveRangeCheckEliminationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createIndVarSimplifyPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createInstructionCombiningPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createInternalizePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLCSSAPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLICMPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopSinkPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLazyValueInfoPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopExtractorPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopInterchangePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopPredicationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopSimplifyPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopSimplifyCFGPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopStrengthReducePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopRerollPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopUnrollPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopUnswitchPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopVersioningLICMPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopIdiomPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopRotatePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLowerExpectIntrinsicPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLowerInvokePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLowerSwitchPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createNaryReassociatePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createObjCARCAAWrapperPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createObjCARCAPElimPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createObjCARCExpandPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createObjCARCContractPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createObjCARCOptPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPAEvalPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPromoteMemoryToRegisterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDemoteRegisterToMemoryPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPruneEHPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPostDomOnlyPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPostDomPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPostDomOnlyViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPostDomViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createReassociatePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createRegionInfoPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createRegionOnlyPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createRegionOnlyViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createRegionPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createRegionViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSCCPPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSafeStackPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSROAPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSingleLoopExtractorPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createStripSymbolsPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createStripNonDebugSymbolsPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createStripDeadDebugInfoPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createStripDeadPrototypesPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createTailCallEliminationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createJumpThreadingPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createUnifyFunctionExitNodesPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createInstCountPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createConstantHoistingPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createCodeGenPreparePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createCountingFunctionInserterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createEarlyCSEPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createGVNHoistPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createMergedLoadStoreMotionPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createGVNPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createNewGVNPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createMemCpyOptPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopDeletionPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPostDomTree
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createInstructionNamerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createMetaRenamerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPostOrderFunctionAttrsLegacyPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createReversePostOrderFunctionAttrsPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createMergeFunctionsPass
argument_list|()
expr_stmt|;
name|std
operator|::
name|string
name|buf
expr_stmt|;
name|llvm
operator|::
name|raw_string_ostream
name|os
argument_list|(
name|buf
argument_list|)
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPrintModulePass
argument_list|(
name|os
argument_list|)
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPrintFunctionPass
argument_list|(
name|os
argument_list|)
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPrintBasicBlockPass
argument_list|(
name|os
argument_list|)
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createModuleDebugInfoPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPartialInliningPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLintPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSinkingPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLowerAtomicPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createCorrelatedValuePropagationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createMemDepPrinter
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createInstructionSimplifierPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopVectorizePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSLPVectorizerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoadStoreVectorizerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPartiallyInlineLibCallsPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createScalarizerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSeparateConstOffsetFromGEPPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSpeculativeExecutionPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSpeculativeExecutionIfHasBranchDivergencePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createRewriteSymbolsPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createStraightLineStrengthReducePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createMemDerefPrinter
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createFloat2IntPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createEliminateAvailableExternallyPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createScalarizeMaskedMemIntrinPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|new
name|llvm
operator|::
name|IntervalPartition
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|new
name|llvm
operator|::
name|ScalarEvolutionWrapperPass
argument_list|()
expr_stmt|;
name|llvm
operator|::
name|Function
operator|::
name|Create
argument_list|(
name|nullptr
argument_list|,
name|llvm
operator|::
name|GlobalValue
operator|::
name|ExternalLinkage
argument_list|)
operator|->
name|viewCFGOnly
argument_list|()
expr_stmt|;
name|llvm
operator|::
name|RGPassManager
name|RGM
expr_stmt|;
name|llvm
operator|::
name|TargetLibraryInfoImpl
name|TLII
expr_stmt|;
name|llvm
operator|::
name|TargetLibraryInfo
name|TLI
argument_list|(
name|TLII
argument_list|)
expr_stmt|;
name|llvm
operator|::
name|AliasAnalysis
name|AA
argument_list|(
name|TLI
argument_list|)
expr_stmt|;
name|llvm
operator|::
name|AliasSetTracker
name|X
argument_list|(
name|AA
argument_list|)
expr_stmt|;
name|X
operator|.
name|add
argument_list|(
name|nullptr
argument_list|,
literal|0
argument_list|,
name|llvm
operator|::
name|AAMDNodes
argument_list|()
argument_list|)
expr_stmt|;
comment|// for -print-alias-sets
operator|(
name|void
operator|)
name|llvm
operator|::
name|AreStatisticsEnabled
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|sys
operator|::
name|RunningOnValgrind
argument_list|()
expr_stmt|;
block|}
block|}
name|ForcePassLinking
struct|;
comment|// Force link by creating a global definition.
block|}
end_block

begin_endif
endif|#
directive|endif
end_endif

end_unit

