begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*===-- llvm-c/Initialization.h - Initialization C Interface ------*- C -*-===*\ |*                                                                            *| |*                     The LLVM Compiler Infrastructure                       *| |*                                                                            *| |* This file is distributed under the University of Illinois Open Source      *| |* License. See LICENSE.TXT for details.                                      *| |*                                                                            *| |*===----------------------------------------------------------------------===*| |*                                                                            *| |* This header declares the C interface to LLVM initialization routines,      *| |* which must be called before you can use the functionality provided by      *| |* the corresponding LLVM library.                                            *| |*                                                                            *| \*===----------------------------------------------------------------------===*/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_C_INITIALIZEPASSES_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_C_INITIALIZEPASSES_H
end_define

begin_include
include|#
directive|include
file|"llvm-c/Core.h"
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/**  * @defgroup LLVMCInitialization Initialization Routines  * @ingroup LLVMC  *  * This module contains routines used to initialize the LLVM system.  *  * @{  */
name|void
name|LLVMInitializeCore
parameter_list|(
name|LLVMPassRegistryRef
name|R
parameter_list|)
function_decl|;
name|void
name|LLVMInitializeTransformUtils
parameter_list|(
name|LLVMPassRegistryRef
name|R
parameter_list|)
function_decl|;
name|void
name|LLVMInitializeScalarOpts
parameter_list|(
name|LLVMPassRegistryRef
name|R
parameter_list|)
function_decl|;
name|void
name|LLVMInitializeVectorization
parameter_list|(
name|LLVMPassRegistryRef
name|R
parameter_list|)
function_decl|;
name|void
name|LLVMInitializeInstCombine
parameter_list|(
name|LLVMPassRegistryRef
name|R
parameter_list|)
function_decl|;
name|void
name|LLVMInitializeIPO
parameter_list|(
name|LLVMPassRegistryRef
name|R
parameter_list|)
function_decl|;
name|void
name|LLVMInitializeInstrumentation
parameter_list|(
name|LLVMPassRegistryRef
name|R
parameter_list|)
function_decl|;
name|void
name|LLVMInitializeAnalysis
parameter_list|(
name|LLVMPassRegistryRef
name|R
parameter_list|)
function_decl|;
name|void
name|LLVMInitializeIPA
parameter_list|(
name|LLVMPassRegistryRef
name|R
parameter_list|)
function_decl|;
name|void
name|LLVMInitializeCodeGen
parameter_list|(
name|LLVMPassRegistryRef
name|R
parameter_list|)
function_decl|;
name|void
name|LLVMInitializeTarget
parameter_list|(
name|LLVMPassRegistryRef
name|R
parameter_list|)
function_decl|;
comment|/**  * @}  */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

