begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- PdbYAML.h ---------------------------------------------- *- C++ --*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_TOOLS_LLVMPDBDUMP_PDBYAML_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_TOOLS_LLVMPDBDUMP_PDBYAML_H
end_define

begin_include
include|#
directive|include
file|"OutputStyle.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/Optional.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/PDBTypes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Raw/MsfCommon.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Raw/PDBFile.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Raw/RawConstants.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Endian.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/YAMLTraits.h"
end_include

begin_include
include|#
directive|include
file|<vector>
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|namespace
name|pdb
block|{
name|namespace
name|yaml
block|{
struct|struct
name|MsfHeaders
block|{
name|msf
operator|::
name|SuperBlock
name|SuperBlock
expr_stmt|;
name|uint32_t
name|NumDirectoryBlocks
decl_stmt|;
name|std
operator|::
name|vector
operator|<
name|uint32_t
operator|>
name|DirectoryBlocks
expr_stmt|;
name|uint32_t
name|NumStreams
decl_stmt|;
name|uint32_t
name|FileSize
decl_stmt|;
block|}
struct|;
struct|struct
name|StreamBlockList
block|{
name|std
operator|::
name|vector
operator|<
name|uint32_t
operator|>
name|Blocks
expr_stmt|;
block|}
struct|;
struct|struct
name|NamedStreamMapping
block|{
name|StringRef
name|StreamName
decl_stmt|;
name|uint32_t
name|StreamNumber
decl_stmt|;
block|}
struct|;
struct|struct
name|PdbInfoStream
block|{
name|PdbRaw_ImplVer
name|Version
decl_stmt|;
name|uint32_t
name|Signature
decl_stmt|;
name|uint32_t
name|Age
decl_stmt|;
name|PDB_UniqueId
name|Guid
decl_stmt|;
name|std
operator|::
name|vector
operator|<
name|NamedStreamMapping
operator|>
name|NamedStreams
expr_stmt|;
block|}
struct|;
struct|struct
name|PdbDbiStream
block|{
name|PdbRaw_DbiVer
name|VerHeader
decl_stmt|;
name|uint32_t
name|Age
decl_stmt|;
name|uint16_t
name|BuildNumber
decl_stmt|;
name|uint32_t
name|PdbDllVersion
decl_stmt|;
name|uint16_t
name|PdbDllRbld
decl_stmt|;
name|uint16_t
name|Flags
decl_stmt|;
name|PDB_Machine
name|MachineType
decl_stmt|;
block|}
struct|;
struct|struct
name|PdbObject
block|{
name|Optional
operator|<
name|MsfHeaders
operator|>
name|Headers
expr_stmt|;
name|Optional
operator|<
name|std
operator|::
name|vector
operator|<
name|uint32_t
operator|>>
name|StreamSizes
expr_stmt|;
name|Optional
operator|<
name|std
operator|::
name|vector
operator|<
name|StreamBlockList
operator|>>
name|StreamMap
expr_stmt|;
name|Optional
operator|<
name|PdbInfoStream
operator|>
name|PdbStream
expr_stmt|;
name|Optional
operator|<
name|PdbDbiStream
operator|>
name|DbiStream
expr_stmt|;
block|}
struct|;
block|}
block|}
block|}
end_decl_stmt

begin_decl_stmt
name|namespace
name|llvm
block|{
name|namespace
name|yaml
block|{
name|template
operator|<
operator|>
expr|struct
name|MappingTraits
operator|<
name|pdb
operator|::
name|yaml
operator|::
name|PdbObject
operator|>
block|{
specifier|static
name|void
name|mapping
argument_list|(
name|IO
operator|&
name|IO
argument_list|,
name|pdb
operator|::
name|yaml
operator|::
name|PdbObject
operator|&
name|Obj
argument_list|)
block|; }
expr_stmt|;
name|template
operator|<
operator|>
expr|struct
name|MappingTraits
operator|<
name|pdb
operator|::
name|yaml
operator|::
name|MsfHeaders
operator|>
block|{
specifier|static
name|void
name|mapping
argument_list|(
name|IO
operator|&
name|IO
argument_list|,
name|pdb
operator|::
name|yaml
operator|::
name|MsfHeaders
operator|&
name|Obj
argument_list|)
block|; }
expr_stmt|;
name|template
operator|<
operator|>
expr|struct
name|MappingTraits
operator|<
name|pdb
operator|::
name|msf
operator|::
name|SuperBlock
operator|>
block|{
specifier|static
name|void
name|mapping
argument_list|(
name|IO
operator|&
name|IO
argument_list|,
name|pdb
operator|::
name|msf
operator|::
name|SuperBlock
operator|&
name|SB
argument_list|)
block|; }
expr_stmt|;
name|template
operator|<
operator|>
expr|struct
name|MappingTraits
operator|<
name|pdb
operator|::
name|yaml
operator|::
name|StreamBlockList
operator|>
block|{
specifier|static
name|void
name|mapping
argument_list|(
name|IO
operator|&
name|IO
argument_list|,
name|pdb
operator|::
name|yaml
operator|::
name|StreamBlockList
operator|&
name|SB
argument_list|)
block|; }
expr_stmt|;
name|template
operator|<
operator|>
expr|struct
name|MappingTraits
operator|<
name|pdb
operator|::
name|yaml
operator|::
name|PdbInfoStream
operator|>
block|{
specifier|static
name|void
name|mapping
argument_list|(
name|IO
operator|&
name|IO
argument_list|,
name|pdb
operator|::
name|yaml
operator|::
name|PdbInfoStream
operator|&
name|Obj
argument_list|)
block|; }
expr_stmt|;
name|template
operator|<
operator|>
expr|struct
name|MappingTraits
operator|<
name|pdb
operator|::
name|yaml
operator|::
name|PdbDbiStream
operator|>
block|{
specifier|static
name|void
name|mapping
argument_list|(
name|IO
operator|&
name|IO
argument_list|,
name|pdb
operator|::
name|yaml
operator|::
name|PdbDbiStream
operator|&
name|Obj
argument_list|)
block|; }
expr_stmt|;
name|template
operator|<
operator|>
expr|struct
name|MappingTraits
operator|<
name|pdb
operator|::
name|yaml
operator|::
name|NamedStreamMapping
operator|>
block|{
specifier|static
name|void
name|mapping
argument_list|(
name|IO
operator|&
name|IO
argument_list|,
name|pdb
operator|::
name|yaml
operator|::
name|NamedStreamMapping
operator|&
name|Obj
argument_list|)
block|; }
expr_stmt|;
block|}
block|}
end_decl_stmt

begin_macro
name|LLVM_YAML_IS_SEQUENCE_VECTOR
argument_list|(
argument|uint32_t
argument_list|)
end_macro

begin_macro
name|LLVM_YAML_IS_SEQUENCE_VECTOR
argument_list|(
argument|llvm::pdb::yaml::NamedStreamMapping
argument_list|)
end_macro

begin_macro
name|LLVM_YAML_IS_SEQUENCE_VECTOR
argument_list|(
argument|llvm::pdb::yaml::StreamBlockList
argument_list|)
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// LLVM_TOOLS_LLVMPDBDUMP_PDBYAML_H
end_comment

end_unit

