begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- EmulateInstructionMIPS.h ------------------------------------*- C++
end_comment

begin_comment
comment|//-*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|EmulateInstructionMIPS_h_
end_ifndef

begin_define
define|#
directive|define
name|EmulateInstructionMIPS_h_
end_define

begin_decl_stmt
name|namespace
name|llvm
block|{
name|class
name|MCDisassembler
decl_stmt|;
name|class
name|MCSubtargetInfo
decl_stmt|;
name|class
name|MCRegisterInfo
decl_stmt|;
name|class
name|MCAsmInfo
decl_stmt|;
name|class
name|MCContext
decl_stmt|;
name|class
name|MCInstrInfo
decl_stmt|;
name|class
name|MCInst
decl_stmt|;
block|}
end_decl_stmt

begin_include
include|#
directive|include
file|"lldb/Core/EmulateInstruction.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Interpreter/OptionValue.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Utility/Status.h"
end_include

begin_decl_stmt
name|class
name|EmulateInstructionMIPS
range|:
name|public
name|lldb_private
operator|::
name|EmulateInstruction
block|{
name|public
operator|:
specifier|static
name|void
name|Initialize
argument_list|()
block|;
specifier|static
name|void
name|Terminate
argument_list|()
block|;
specifier|static
name|lldb_private
operator|::
name|ConstString
name|GetPluginNameStatic
argument_list|()
block|;
specifier|static
specifier|const
name|char
operator|*
name|GetPluginDescriptionStatic
argument_list|()
block|;
specifier|static
name|lldb_private
operator|::
name|EmulateInstruction
operator|*
name|CreateInstance
argument_list|(
argument|const lldb_private::ArchSpec&arch
argument_list|,
argument|lldb_private::InstructionType inst_type
argument_list|)
block|;
specifier|static
name|bool
name|SupportsEmulatingInstructionsOfTypeStatic
argument_list|(
argument|lldb_private::InstructionType inst_type
argument_list|)
block|{
switch|switch
condition|(
name|inst_type
condition|)
block|{
case|case
name|lldb_private
operator|::
name|eInstructionTypeAny
case|:
case|case
name|lldb_private
operator|::
name|eInstructionTypePrologueEpilogue
case|:
case|case
name|lldb_private
operator|::
name|eInstructionTypePCModifying
case|:
return|return
name|true
return|;
case|case
name|lldb_private
operator|::
name|eInstructionTypeAll
case|:
return|return
name|false
return|;
block|}
return|return
name|false
return|;
block|}
name|lldb_private
operator|::
name|ConstString
name|GetPluginName
argument_list|()
name|override
block|;
name|uint32_t
name|GetPluginVersion
argument_list|()
name|override
block|{
return|return
literal|1
return|;
block|}
name|bool
name|SetTargetTriple
argument_list|(
argument|const lldb_private::ArchSpec&arch
argument_list|)
name|override
block|;
name|EmulateInstructionMIPS
argument_list|(
specifier|const
name|lldb_private
operator|::
name|ArchSpec
operator|&
name|arch
argument_list|)
block|;
name|bool
name|SupportsEmulatingInstructionsOfType
argument_list|(
argument|lldb_private::InstructionType inst_type
argument_list|)
name|override
block|{
return|return
name|SupportsEmulatingInstructionsOfTypeStatic
argument_list|(
name|inst_type
argument_list|)
return|;
block|}
name|bool
name|ReadInstruction
argument_list|()
name|override
block|;
name|bool
name|EvaluateInstruction
argument_list|(
argument|uint32_t evaluate_options
argument_list|)
name|override
block|;
name|bool
name|SetInstruction
argument_list|(
argument|const lldb_private::Opcode&insn_opcode
argument_list|,
argument|const lldb_private::Address&inst_addr
argument_list|,
argument|lldb_private::Target *target
argument_list|)
name|override
block|;
name|bool
name|TestEmulation
argument_list|(
argument|lldb_private::Stream *out_stream
argument_list|,
argument|lldb_private::ArchSpec&arch
argument_list|,
argument|lldb_private::OptionValueDictionary *test_data
argument_list|)
name|override
block|{
return|return
name|false
return|;
block|}
name|bool
name|GetRegisterInfo
argument_list|(
argument|lldb::RegisterKind reg_kind
argument_list|,
argument|uint32_t reg_num
argument_list|,
argument|lldb_private::RegisterInfo&reg_info
argument_list|)
name|override
block|;
name|bool
name|CreateFunctionEntryUnwind
argument_list|(
argument|lldb_private::UnwindPlan&unwind_plan
argument_list|)
name|override
block|;
name|protected
operator|:
typedef|typedef
struct|struct
block|{
specifier|const
name|char
modifier|*
name|op_name
decl_stmt|;
name|bool
argument_list|(
name|EmulateInstructionMIPS
operator|::
operator|*
name|callback
argument_list|)
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
name|insn_name
decl_stmt|;
block|}
name|MipsOpcode
expr_stmt|;
specifier|static
name|MipsOpcode
operator|*
name|GetOpcodeForInstruction
argument_list|(
specifier|const
name|char
operator|*
name|op_name
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|uint32_t
name|GetSizeOfInstruction
argument_list|(
name|lldb_private
operator|::
name|DataExtractor
operator|&
name|data
argument_list|,
name|uint64_t
name|inst_addr
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_ADDiu
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_SUBU_ADDU
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_LUI
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_SW
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_LW
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_ADDIUSP
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_ADDIUS5
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_SWSP
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_SWM16_32
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_LWSP
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_LWM16_32
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_JRADDIUSP
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_LDST_Imm
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_LDST_Reg
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BXX_3ops
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BXX_3ops_C
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BXX_2ops
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BXX_2ops_C
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_Bcond_Link_C
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_Bcond_Link
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_FP_branch
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_3D_branch
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BAL
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BALC
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BC
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_J
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_JAL
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_JALR
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_JIALC
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_JIC
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_JR
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BC1EQZ
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BC1NEZ
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BNZB
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BNZH
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BNZW
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BNZD
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BZB
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BZH
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BZW
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BZD
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_MSA_Branch_DF
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|,
name|int
name|element_byte_size
argument_list|,
name|bool
name|bnz
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BNZV
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_BZV
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_MSA_Branch_V
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|,
name|bool
name|bnz
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_B16_MM
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_Branch_MM
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_JALRx16_MM
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_JALx
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|Emulate_JALRS
argument_list|(
name|llvm
operator|::
name|MCInst
operator|&
name|insn
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
name|bool
name|nonvolatile_reg_p
parameter_list|(
name|uint32_t
name|regnum
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|GetRegisterName
parameter_list|(
name|unsigned
name|reg_num
parameter_list|,
name|bool
name|altnernate_name
parameter_list|)
function_decl|;
end_function_decl

begin_label
name|private
label|:
end_label

begin_expr_stmt
name|std
operator|::
name|unique_ptr
operator|<
name|llvm
operator|::
name|MCDisassembler
operator|>
name|m_disasm
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|std
operator|::
name|unique_ptr
operator|<
name|llvm
operator|::
name|MCDisassembler
operator|>
name|m_alt_disasm
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|std
operator|::
name|unique_ptr
operator|<
name|llvm
operator|::
name|MCSubtargetInfo
operator|>
name|m_subtype_info
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|std
operator|::
name|unique_ptr
operator|<
name|llvm
operator|::
name|MCSubtargetInfo
operator|>
name|m_alt_subtype_info
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|std
operator|::
name|unique_ptr
operator|<
name|llvm
operator|::
name|MCRegisterInfo
operator|>
name|m_reg_info
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|std
operator|::
name|unique_ptr
operator|<
name|llvm
operator|::
name|MCAsmInfo
operator|>
name|m_asm_info
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|std
operator|::
name|unique_ptr
operator|<
name|llvm
operator|::
name|MCContext
operator|>
name|m_context
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|std
operator|::
name|unique_ptr
operator|<
name|llvm
operator|::
name|MCInstrInfo
operator|>
name|m_insn_info
expr_stmt|;
end_expr_stmt

begin_decl_stmt
name|uint32_t
name|m_next_inst_size
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|m_use_alt_disaasm
decl_stmt|;
end_decl_stmt

begin_endif
unit|};
endif|#
directive|endif
end_endif

begin_comment
comment|// EmulateInstructionMIPS_h_
end_comment

end_unit

