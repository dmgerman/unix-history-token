begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- LibCxx.h ---------------------------------------------------*- C++
end_comment

begin_comment
comment|//-*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|liblldb_LibCxx_h_
end_ifndef

begin_define
define|#
directive|define
name|liblldb_LibCxx_h_
end_define

begin_include
include|#
directive|include
file|"lldb/Core/Stream.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Core/ValueObject.h"
end_include

begin_include
include|#
directive|include
file|"lldb/DataFormatters/TypeSummary.h"
end_include

begin_include
include|#
directive|include
file|"lldb/DataFormatters/TypeSynthetic.h"
end_include

begin_decl_stmt
name|namespace
name|lldb_private
block|{
name|namespace
name|formatters
block|{
name|bool
name|LibcxxStringSummaryProvider
parameter_list|(
name|ValueObject
modifier|&
name|valobj
parameter_list|,
name|Stream
modifier|&
name|stream
parameter_list|,
specifier|const
name|TypeSummaryOptions
modifier|&
name|options
parameter_list|)
function_decl|;
comment|// libc++ std::string
name|bool
name|LibcxxWStringSummaryProvider
parameter_list|(
name|ValueObject
modifier|&
name|valobj
parameter_list|,
name|Stream
modifier|&
name|stream
parameter_list|,
specifier|const
name|TypeSummaryOptions
modifier|&
name|options
parameter_list|)
function_decl|;
comment|// libc++ std::wstring
name|bool
name|LibcxxSmartPointerSummaryProvider
parameter_list|(
name|ValueObject
modifier|&
name|valobj
parameter_list|,
name|Stream
modifier|&
name|stream
parameter_list|,
specifier|const
name|TypeSummaryOptions
modifier|&
name|options
parameter_list|)
function_decl|;
comment|// libc++ std::shared_ptr<> and std::weak_ptr<>
name|class
name|LibcxxVectorBoolSyntheticFrontEnd
range|:
name|public
name|SyntheticChildrenFrontEnd
block|{
name|public
operator|:
name|LibcxxVectorBoolSyntheticFrontEnd
argument_list|(
argument|lldb::ValueObjectSP valobj_sp
argument_list|)
block|;
name|size_t
name|CalculateNumChildren
argument_list|()
name|override
block|;
name|lldb
operator|::
name|ValueObjectSP
name|GetChildAtIndex
argument_list|(
argument|size_t idx
argument_list|)
name|override
block|;
name|bool
name|Update
argument_list|()
name|override
block|;
name|bool
name|MightHaveChildren
argument_list|()
name|override
block|;
name|size_t
name|GetIndexOfChildWithName
argument_list|(
argument|const ConstString&name
argument_list|)
name|override
block|;
operator|~
name|LibcxxVectorBoolSyntheticFrontEnd
argument_list|()
name|override
block|;
name|private
operator|:
name|CompilerType
name|m_bool_type
block|;
name|ExecutionContextRef
name|m_exe_ctx_ref
block|;
name|uint64_t
name|m_count
block|;
name|lldb
operator|::
name|addr_t
name|m_base_data_address
block|;
name|std
operator|::
name|map
operator|<
name|size_t
block|,
name|lldb
operator|::
name|ValueObjectSP
operator|>
name|m_children
block|; }
decl_stmt|;
name|SyntheticChildrenFrontEnd
modifier|*
name|LibcxxVectorBoolSyntheticFrontEndCreator
argument_list|(
name|CXXSyntheticChildren
operator|*
argument_list|,
name|lldb
operator|::
name|ValueObjectSP
argument_list|)
decl_stmt|;
name|bool
name|LibcxxContainerSummaryProvider
parameter_list|(
name|ValueObject
modifier|&
name|valobj
parameter_list|,
name|Stream
modifier|&
name|stream
parameter_list|,
specifier|const
name|TypeSummaryOptions
modifier|&
name|options
parameter_list|)
function_decl|;
name|class
name|LibCxxMapIteratorSyntheticFrontEnd
range|:
name|public
name|SyntheticChildrenFrontEnd
block|{
name|public
operator|:
name|LibCxxMapIteratorSyntheticFrontEnd
argument_list|(
argument|lldb::ValueObjectSP valobj_sp
argument_list|)
block|;
name|size_t
name|CalculateNumChildren
argument_list|()
name|override
block|;
name|lldb
operator|::
name|ValueObjectSP
name|GetChildAtIndex
argument_list|(
argument|size_t idx
argument_list|)
name|override
block|;
name|bool
name|Update
argument_list|()
name|override
block|;
name|bool
name|MightHaveChildren
argument_list|()
name|override
block|;
name|size_t
name|GetIndexOfChildWithName
argument_list|(
argument|const ConstString&name
argument_list|)
name|override
block|;
operator|~
name|LibCxxMapIteratorSyntheticFrontEnd
argument_list|()
name|override
block|;
name|private
operator|:
name|ValueObject
operator|*
name|m_pair_ptr
block|;
name|lldb
operator|::
name|ValueObjectSP
name|m_pair_sp
block|; }
decl_stmt|;
name|SyntheticChildrenFrontEnd
modifier|*
name|LibCxxMapIteratorSyntheticFrontEndCreator
argument_list|(
name|CXXSyntheticChildren
operator|*
argument_list|,
name|lldb
operator|::
name|ValueObjectSP
argument_list|)
decl_stmt|;
name|SyntheticChildrenFrontEnd
modifier|*
name|LibCxxVectorIteratorSyntheticFrontEndCreator
argument_list|(
name|CXXSyntheticChildren
operator|*
argument_list|,
name|lldb
operator|::
name|ValueObjectSP
argument_list|)
decl_stmt|;
name|class
name|LibcxxSharedPtrSyntheticFrontEnd
range|:
name|public
name|SyntheticChildrenFrontEnd
block|{
name|public
operator|:
name|LibcxxSharedPtrSyntheticFrontEnd
argument_list|(
argument|lldb::ValueObjectSP valobj_sp
argument_list|)
block|;
name|size_t
name|CalculateNumChildren
argument_list|()
name|override
block|;
name|lldb
operator|::
name|ValueObjectSP
name|GetChildAtIndex
argument_list|(
argument|size_t idx
argument_list|)
name|override
block|;
name|bool
name|Update
argument_list|()
name|override
block|;
name|bool
name|MightHaveChildren
argument_list|()
name|override
block|;
name|size_t
name|GetIndexOfChildWithName
argument_list|(
argument|const ConstString&name
argument_list|)
name|override
block|;
operator|~
name|LibcxxSharedPtrSyntheticFrontEnd
argument_list|()
name|override
block|;
name|private
operator|:
name|ValueObject
operator|*
name|m_cntrl
block|;
name|lldb
operator|::
name|ValueObjectSP
name|m_count_sp
block|;
name|lldb
operator|::
name|ValueObjectSP
name|m_weak_count_sp
block|;
name|uint8_t
name|m_ptr_size
block|;
name|lldb
operator|::
name|ByteOrder
name|m_byte_order
block|; }
decl_stmt|;
name|SyntheticChildrenFrontEnd
modifier|*
name|LibcxxSharedPtrSyntheticFrontEndCreator
argument_list|(
name|CXXSyntheticChildren
operator|*
argument_list|,
name|lldb
operator|::
name|ValueObjectSP
argument_list|)
decl_stmt|;
name|SyntheticChildrenFrontEnd
modifier|*
name|LibcxxStdVectorSyntheticFrontEndCreator
argument_list|(
name|CXXSyntheticChildren
operator|*
argument_list|,
name|lldb
operator|::
name|ValueObjectSP
argument_list|)
decl_stmt|;
name|SyntheticChildrenFrontEnd
modifier|*
name|LibcxxStdListSyntheticFrontEndCreator
argument_list|(
name|CXXSyntheticChildren
operator|*
argument_list|,
name|lldb
operator|::
name|ValueObjectSP
argument_list|)
decl_stmt|;
name|SyntheticChildrenFrontEnd
modifier|*
name|LibcxxStdMapSyntheticFrontEndCreator
argument_list|(
name|CXXSyntheticChildren
operator|*
argument_list|,
name|lldb
operator|::
name|ValueObjectSP
argument_list|)
decl_stmt|;
name|SyntheticChildrenFrontEnd
modifier|*
name|LibcxxStdUnorderedMapSyntheticFrontEndCreator
argument_list|(
name|CXXSyntheticChildren
operator|*
argument_list|,
name|lldb
operator|::
name|ValueObjectSP
argument_list|)
decl_stmt|;
name|SyntheticChildrenFrontEnd
modifier|*
name|LibcxxInitializerListSyntheticFrontEndCreator
argument_list|(
name|CXXSyntheticChildren
operator|*
argument_list|,
name|lldb
operator|::
name|ValueObjectSP
argument_list|)
decl_stmt|;
name|SyntheticChildrenFrontEnd
modifier|*
name|LibcxxFunctionFrontEndCreator
argument_list|(
name|CXXSyntheticChildren
operator|*
argument_list|,
name|lldb
operator|::
name|ValueObjectSP
argument_list|)
decl_stmt|;
block|}
comment|// namespace formatters
block|}
end_decl_stmt

begin_comment
comment|// namespace lldb_private
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// liblldb_LibCxx_h_
end_comment

end_unit

