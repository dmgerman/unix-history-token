begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- AppleObjCTrampolineHandler.h ----------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|lldb_AppleObjCTrampolineHandler_h_
end_ifndef

begin_define
define|#
directive|define
name|lldb_AppleObjCTrampolineHandler_h_
end_define

begin_comment
comment|// C Includes
end_comment

begin_comment
comment|// C++ Includes
end_comment

begin_include
include|#
directive|include
file|<map>
end_include

begin_include
include|#
directive|include
file|<mutex>
end_include

begin_include
include|#
directive|include
file|<vector>
end_include

begin_comment
comment|// Other libraries and framework includes
end_comment

begin_comment
comment|// Project includes
end_comment

begin_include
include|#
directive|include
file|"lldb/Expression/UtilityFunction.h"
end_include

begin_include
include|#
directive|include
file|"lldb/lldb-public.h"
end_include

begin_decl_stmt
name|namespace
name|lldb_private
block|{
name|class
name|AppleObjCTrampolineHandler
block|{
name|public
label|:
name|AppleObjCTrampolineHandler
argument_list|(
specifier|const
name|lldb
operator|::
name|ProcessSP
operator|&
name|process_sp
argument_list|,
specifier|const
name|lldb
operator|::
name|ModuleSP
operator|&
name|objc_module_sp
argument_list|)
expr_stmt|;
operator|~
name|AppleObjCTrampolineHandler
argument_list|()
expr_stmt|;
name|lldb
operator|::
name|ThreadPlanSP
name|GetStepThroughDispatchPlan
argument_list|(
argument|Thread&thread
argument_list|,
argument|bool stop_others
argument_list|)
expr_stmt|;
name|FunctionCaller
modifier|*
name|GetLookupImplementationFunctionCaller
parameter_list|()
function_decl|;
name|bool
name|AddrIsMsgForward
argument_list|(
name|lldb
operator|::
name|addr_t
name|addr
argument_list|)
decl|const
block|{
return|return
operator|(
name|addr
operator|==
name|m_msg_forward_addr
operator|||
name|addr
operator|==
name|m_msg_forward_stret_addr
operator|)
return|;
block|}
struct|struct
name|DispatchFunction
block|{
name|public
label|:
typedef|typedef
enum|enum
block|{
name|eFixUpNone
block|,
name|eFixUpFixed
block|,
name|eFixUpToFix
block|}
name|FixUpState
typedef|;
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|bool
name|stret_return
decl_stmt|;
name|bool
name|is_super
decl_stmt|;
name|bool
name|is_super2
decl_stmt|;
name|FixUpState
name|fixedup
decl_stmt|;
block|}
struct|;
name|lldb
operator|::
name|addr_t
name|SetupDispatchFunction
argument_list|(
name|Thread
operator|&
name|thread
argument_list|,
name|ValueList
operator|&
name|dispatch_values
argument_list|)
expr_stmt|;
name|private
label|:
specifier|static
specifier|const
name|char
modifier|*
name|g_lookup_implementation_function_name
decl_stmt|;
specifier|static
specifier|const
name|char
modifier|*
name|g_lookup_implementation_with_stret_function_code
decl_stmt|;
specifier|static
specifier|const
name|char
modifier|*
name|g_lookup_implementation_no_stret_function_code
decl_stmt|;
name|class
name|AppleObjCVTables
block|{
name|public
label|:
comment|// These come from objc-gdb.h.
enum|enum
name|VTableFlags
block|{
name|eOBJC_TRAMPOLINE_MESSAGE
init|=
operator|(
literal|1
operator|<<
literal|0
operator|)
block|,
comment|// trampoline acts like objc_msgSend
name|eOBJC_TRAMPOLINE_STRET
init|=
operator|(
literal|1
operator|<<
literal|1
operator|)
block|,
comment|// trampoline is struct-returning
name|eOBJC_TRAMPOLINE_VTABLE
init|=
operator|(
literal|1
operator|<<
literal|2
operator|)
comment|// trampoline is vtable dispatcher
block|}
enum|;
name|private
label|:
struct|struct
name|VTableDescriptor
block|{
name|VTableDescriptor
argument_list|(
argument|uint32_t in_flags
argument_list|,
argument|lldb::addr_t in_code_start
argument_list|)
block|:
name|flags
argument_list|(
name|in_flags
argument_list|)
operator|,
name|code_start
argument_list|(
argument|in_code_start
argument_list|)
block|{}
name|uint32_t
name|flags
expr_stmt|;
name|lldb
operator|::
name|addr_t
name|code_start
expr_stmt|;
block|}
struct|;
name|class
name|VTableRegion
block|{
name|public
label|:
name|VTableRegion
argument_list|()
operator|:
name|m_valid
argument_list|(
name|false
argument_list|)
operator|,
name|m_owner
argument_list|(
name|NULL
argument_list|)
operator|,
name|m_header_addr
argument_list|(
name|LLDB_INVALID_ADDRESS
argument_list|)
operator|,
name|m_code_start_addr
argument_list|(
literal|0
argument_list|)
operator|,
name|m_code_end_addr
argument_list|(
literal|0
argument_list|)
operator|,
name|m_next_region
argument_list|(
literal|0
argument_list|)
block|{}
name|VTableRegion
argument_list|(
argument|AppleObjCVTables *owner
argument_list|,
argument|lldb::addr_t header_addr
argument_list|)
expr_stmt|;
name|void
name|SetUpRegion
parameter_list|()
function_decl|;
name|lldb
operator|::
name|addr_t
name|GetNextRegionAddr
argument_list|()
block|{
return|return
name|m_next_region
return|;
block|}
name|lldb
operator|::
name|addr_t
name|GetCodeStart
argument_list|()
block|{
return|return
name|m_code_start_addr
return|;
block|}
name|lldb
operator|::
name|addr_t
name|GetCodeEnd
argument_list|()
block|{
return|return
name|m_code_end_addr
return|;
block|}
name|uint32_t
name|GetFlagsForVTableAtAddress
argument_list|(
name|lldb
operator|::
name|addr_t
name|address
argument_list|)
block|{
return|return
literal|0
return|;
block|}
name|bool
name|IsValid
parameter_list|()
block|{
return|return
name|m_valid
return|;
block|}
name|bool
name|AddressInRegion
argument_list|(
name|lldb
operator|::
name|addr_t
name|addr
argument_list|,
name|uint32_t
operator|&
name|flags
argument_list|)
decl_stmt|;
name|void
name|Dump
parameter_list|(
name|Stream
modifier|&
name|s
parameter_list|)
function_decl|;
name|public
label|:
name|bool
name|m_valid
decl_stmt|;
name|AppleObjCVTables
modifier|*
name|m_owner
decl_stmt|;
name|lldb
operator|::
name|addr_t
name|m_header_addr
expr_stmt|;
name|lldb
operator|::
name|addr_t
name|m_code_start_addr
expr_stmt|;
name|lldb
operator|::
name|addr_t
name|m_code_end_addr
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|VTableDescriptor
operator|>
name|m_descriptors
expr_stmt|;
name|lldb
operator|::
name|addr_t
name|m_next_region
expr_stmt|;
block|}
empty_stmt|;
name|public
label|:
name|AppleObjCVTables
argument_list|(
specifier|const
name|lldb
operator|::
name|ProcessSP
operator|&
name|process_sp
argument_list|,
specifier|const
name|lldb
operator|::
name|ModuleSP
operator|&
name|objc_module_sp
argument_list|)
expr_stmt|;
operator|~
name|AppleObjCVTables
argument_list|()
expr_stmt|;
name|bool
name|InitializeVTableSymbols
parameter_list|()
function_decl|;
specifier|static
name|bool
name|RefreshTrampolines
argument_list|(
name|void
operator|*
name|baton
argument_list|,
name|StoppointCallbackContext
operator|*
name|context
argument_list|,
name|lldb
operator|::
name|user_id_t
name|break_id
argument_list|,
name|lldb
operator|::
name|user_id_t
name|break_loc_id
argument_list|)
decl_stmt|;
name|bool
name|ReadRegions
parameter_list|()
function_decl|;
name|bool
name|ReadRegions
argument_list|(
name|lldb
operator|::
name|addr_t
name|region_addr
argument_list|)
decl_stmt|;
name|bool
name|IsAddressInVTables
argument_list|(
name|lldb
operator|::
name|addr_t
name|addr
argument_list|,
name|uint32_t
operator|&
name|flags
argument_list|)
decl_stmt|;
name|lldb
operator|::
name|ProcessSP
name|GetProcessSP
argument_list|()
block|{
return|return
name|m_process_wp
operator|.
name|lock
argument_list|()
return|;
block|}
name|private
label|:
name|lldb
operator|::
name|ProcessWP
name|m_process_wp
expr_stmt|;
typedef|typedef
name|std
operator|::
name|vector
operator|<
name|VTableRegion
operator|>
name|region_collection
expr_stmt|;
name|lldb
operator|::
name|addr_t
name|m_trampoline_header
expr_stmt|;
name|lldb
operator|::
name|break_id_t
name|m_trampolines_changed_bp_id
expr_stmt|;
name|region_collection
name|m_regions
decl_stmt|;
name|lldb
operator|::
name|ModuleSP
name|m_objc_module_sp
expr_stmt|;
block|}
empty_stmt|;
specifier|static
specifier|const
name|DispatchFunction
name|g_dispatch_functions
index|[]
decl_stmt|;
typedef|typedef
name|std
operator|::
name|map
operator|<
name|lldb
operator|::
name|addr_t
operator|,
name|int
operator|>
name|MsgsendMap
expr_stmt|;
comment|// This table maps an dispatch
comment|// fn address to the index in
comment|// g_dispatch_functions
name|MsgsendMap
name|m_msgSend_map
decl_stmt|;
name|lldb
operator|::
name|ProcessWP
name|m_process_wp
expr_stmt|;
name|lldb
operator|::
name|ModuleSP
name|m_objc_module_sp
expr_stmt|;
specifier|const
name|char
modifier|*
name|m_lookup_implementation_function_code
decl_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|UtilityFunction
operator|>
name|m_impl_code
expr_stmt|;
name|std
operator|::
name|mutex
name|m_impl_function_mutex
expr_stmt|;
name|lldb
operator|::
name|addr_t
name|m_impl_fn_addr
expr_stmt|;
name|lldb
operator|::
name|addr_t
name|m_impl_stret_fn_addr
expr_stmt|;
name|lldb
operator|::
name|addr_t
name|m_msg_forward_addr
expr_stmt|;
name|lldb
operator|::
name|addr_t
name|m_msg_forward_stret_addr
expr_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|AppleObjCVTables
operator|>
name|m_vtables_ap
expr_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt

begin_comment
comment|// namespace lldb_private
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// lldb_AppleObjCTrampolineHandler_h_
end_comment

end_unit

