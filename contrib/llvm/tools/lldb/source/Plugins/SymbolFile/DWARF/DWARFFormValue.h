begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- DWARFFormValue.h ----------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SymbolFileDWARF_DWARFFormValue_h_
end_ifndef

begin_define
define|#
directive|define
name|SymbolFileDWARF_DWARFFormValue_h_
end_define

begin_include
include|#
directive|include
file|<stddef.h>
end_include

begin_comment
comment|// for NULL
end_comment

begin_include
include|#
directive|include
file|"DWARFDataExtractor.h"
end_include

begin_decl_stmt
name|class
name|DWARFCompileUnit
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFFormValue
block|{
name|public
label|:
typedef|typedef
struct|struct
name|ValueTypeTag
block|{
name|ValueTypeTag
argument_list|()
operator|:
name|value
argument_list|()
operator|,
name|data
argument_list|(
argument|NULL
argument_list|)
block|{
name|value
operator|.
name|uval
operator|=
literal|0
block|;         }
expr|union
block|{
name|uint64_t
name|uval
block|;
name|int64_t
name|sval
block|;
specifier|const
name|char
operator|*
name|cstr
block|;         }
name|value
expr_stmt|;
specifier|const
name|uint8_t
modifier|*
name|data
decl_stmt|;
block|}
name|ValueType
typedef|;
name|class
name|FixedFormSizes
block|{
name|public
label|:
name|FixedFormSizes
argument_list|()
operator|:
name|m_fix_sizes
argument_list|(
name|nullptr
argument_list|)
operator|,
name|m_size
argument_list|(
literal|0
argument_list|)
block|{}
name|FixedFormSizes
argument_list|(
argument|const uint8_t* fix_sizes
argument_list|,
argument|size_t size
argument_list|)
operator|:
name|m_fix_sizes
argument_list|(
name|fix_sizes
argument_list|)
operator|,
name|m_size
argument_list|(
argument|size
argument_list|)
block|{}
name|uint8_t
name|GetSize
argument_list|(
argument|uint32_t index
argument_list|)
specifier|const
block|{
return|return
name|index
operator|<
name|m_size
operator|?
name|m_fix_sizes
index|[
name|index
index|]
operator|:
literal|0
return|;
block|}
name|bool
name|Empty
argument_list|()
specifier|const
block|{
return|return
name|m_size
operator|==
literal|0
return|;
block|}
name|private
label|:
specifier|const
name|uint8_t
modifier|*
name|m_fix_sizes
decl_stmt|;
name|size_t
name|m_size
decl_stmt|;
block|}
empty_stmt|;
enum|enum
block|{
name|eValueTypeInvalid
init|=
literal|0
block|,
name|eValueTypeUnsigned
block|,
name|eValueTypeSigned
block|,
name|eValueTypeCStr
block|,
name|eValueTypeBlock
block|}
enum|;
name|DWARFFormValue
argument_list|()
expr_stmt|;
name|DWARFFormValue
argument_list|(
argument|const DWARFCompileUnit* cu
argument_list|,
argument|dw_form_t form
argument_list|)
empty_stmt|;
specifier|const
name|DWARFCompileUnit
operator|*
name|GetCompileUnit
argument_list|()
specifier|const
block|{
return|return
name|m_cu
return|;
block|}
name|void
name|SetCompileUnit
parameter_list|(
specifier|const
name|DWARFCompileUnit
modifier|*
name|cu
parameter_list|)
block|{
name|m_cu
operator|=
name|cu
expr_stmt|;
block|}
name|dw_form_t
name|Form
argument_list|()
specifier|const
block|{
return|return
name|m_form
return|;
block|}
name|void
name|SetForm
parameter_list|(
name|dw_form_t
name|form
parameter_list|)
block|{
name|m_form
operator|=
name|form
expr_stmt|;
block|}
specifier|const
name|ValueType
operator|&
name|Value
argument_list|()
specifier|const
block|{
return|return
name|m_value
return|;
block|}
name|void
name|Dump
argument_list|(
name|lldb_private
operator|::
name|Stream
operator|&
name|s
argument_list|)
decl|const
decl_stmt|;
name|bool
name|ExtractValue
argument_list|(
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|data
argument_list|,
name|lldb
operator|::
name|offset_t
operator|*
name|offset_ptr
argument_list|)
decl_stmt|;
specifier|const
name|uint8_t
operator|*
name|BlockData
argument_list|()
specifier|const
expr_stmt|;
name|uint64_t
name|Reference
argument_list|()
specifier|const
expr_stmt|;
name|uint64_t
name|Reference
argument_list|(
name|dw_offset_t
name|offset
argument_list|)
decl|const
decl_stmt|;
name|bool
name|Boolean
argument_list|()
specifier|const
block|{
return|return
name|m_value
operator|.
name|value
operator|.
name|uval
operator|!=
literal|0
return|;
block|}
name|uint64_t
name|Unsigned
argument_list|()
specifier|const
block|{
return|return
name|m_value
operator|.
name|value
operator|.
name|uval
return|;
block|}
name|void
name|SetUnsigned
parameter_list|(
name|uint64_t
name|uval
parameter_list|)
block|{
name|m_value
operator|.
name|value
operator|.
name|uval
operator|=
name|uval
expr_stmt|;
block|}
name|int64_t
name|Signed
argument_list|()
specifier|const
block|{
return|return
name|m_value
operator|.
name|value
operator|.
name|sval
return|;
block|}
name|void
name|SetSigned
parameter_list|(
name|int64_t
name|sval
parameter_list|)
block|{
name|m_value
operator|.
name|value
operator|.
name|sval
operator|=
name|sval
expr_stmt|;
block|}
specifier|const
name|char
operator|*
name|AsCString
argument_list|()
specifier|const
expr_stmt|;
name|dw_addr_t
name|Address
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|IsValid
argument_list|()
specifier|const
block|{
return|return
name|m_form
operator|!=
literal|0
return|;
block|}
name|bool
name|SkipValue
argument_list|(
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|debug_info_data
argument_list|,
name|lldb
operator|::
name|offset_t
operator|*
name|offset_ptr
argument_list|)
decl|const
decl_stmt|;
specifier|static
name|bool
name|SkipValue
argument_list|(
specifier|const
name|dw_form_t
name|form
argument_list|,
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|debug_info_data
argument_list|,
name|lldb
operator|::
name|offset_t
operator|*
name|offset_ptr
argument_list|,
specifier|const
name|DWARFCompileUnit
operator|*
name|cu
argument_list|)
decl_stmt|;
specifier|static
name|bool
name|IsBlockForm
parameter_list|(
specifier|const
name|dw_form_t
name|form
parameter_list|)
function_decl|;
specifier|static
name|bool
name|IsDataForm
parameter_list|(
specifier|const
name|dw_form_t
name|form
parameter_list|)
function_decl|;
specifier|static
name|FixedFormSizes
name|GetFixedFormSizesForAddressSize
parameter_list|(
name|uint8_t
name|addr_size
parameter_list|,
name|bool
name|is_dwarf64
parameter_list|)
function_decl|;
specifier|static
name|int
name|Compare
parameter_list|(
specifier|const
name|DWARFFormValue
modifier|&
name|a
parameter_list|,
specifier|const
name|DWARFFormValue
modifier|&
name|b
parameter_list|)
function_decl|;
name|protected
label|:
specifier|const
name|DWARFCompileUnit
modifier|*
name|m_cu
decl_stmt|;
comment|// Compile unit for this form
name|dw_form_t
name|m_form
decl_stmt|;
comment|// Form for this value
name|ValueType
name|m_value
decl_stmt|;
comment|// Contains all data for the form
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// SymbolFileDWARF_DWARFFormValue_h_
end_comment

end_unit

