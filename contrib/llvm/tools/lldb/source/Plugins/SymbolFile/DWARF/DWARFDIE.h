begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- DWARFDIE.h ----------------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SymbolFileDWARF_DWARFDIE_h_
end_ifndef

begin_define
define|#
directive|define
name|SymbolFileDWARF_DWARFDIE_h_
end_define

begin_include
include|#
directive|include
file|"lldb/lldb-types.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Core/dwarf.h"
end_include

begin_struct_decl
struct_decl|struct
name|DIERef
struct_decl|;
end_struct_decl

begin_decl_stmt
name|class
name|DWARFASTParser
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFAttributes
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFCompileUnit
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDebugInfoEntry
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDeclContext
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDIECollection
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|SymbolFileDWARF
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDIE
block|{
name|public
label|:
name|DWARFDIE
argument_list|()
operator|:
name|m_cu
argument_list|(
name|nullptr
argument_list|)
operator|,
name|m_die
argument_list|(
argument|nullptr
argument_list|)
block|{     }
name|DWARFDIE
argument_list|(
name|DWARFCompileUnit
operator|*
name|cu
argument_list|,
name|DWARFDebugInfoEntry
operator|*
name|die
argument_list|)
operator|:
name|m_cu
argument_list|(
name|cu
argument_list|)
operator|,
name|m_die
argument_list|(
argument|die
argument_list|)
block|{     }
name|DWARFDIE
argument_list|(
specifier|const
name|DWARFCompileUnit
operator|*
name|cu
argument_list|,
name|DWARFDebugInfoEntry
operator|*
name|die
argument_list|)
operator|:
name|m_cu
argument_list|(
name|const_cast
operator|<
name|DWARFCompileUnit
operator|*
operator|>
operator|(
name|cu
operator|)
argument_list|)
operator|,
name|m_die
argument_list|(
argument|die
argument_list|)
block|{     }
name|DWARFDIE
argument_list|(
name|DWARFCompileUnit
operator|*
name|cu
argument_list|,
specifier|const
name|DWARFDebugInfoEntry
operator|*
name|die
argument_list|)
operator|:
name|m_cu
argument_list|(
name|cu
argument_list|)
operator|,
name|m_die
argument_list|(
argument|const_cast<DWARFDebugInfoEntry *>(die)
argument_list|)
block|{     }
name|DWARFDIE
argument_list|(
specifier|const
name|DWARFCompileUnit
operator|*
name|cu
argument_list|,
specifier|const
name|DWARFDebugInfoEntry
operator|*
name|die
argument_list|)
operator|:
name|m_cu
argument_list|(
name|const_cast
operator|<
name|DWARFCompileUnit
operator|*
operator|>
operator|(
name|cu
operator|)
argument_list|)
operator|,
name|m_die
argument_list|(
argument|const_cast<DWARFDebugInfoEntry *>(die)
argument_list|)
block|{     }
comment|//----------------------------------------------------------------------
comment|// Tests
comment|//----------------------------------------------------------------------
name|operator
name|bool
argument_list|()
specifier|const
block|{
return|return
name|IsValid
argument_list|()
return|;
block|}
name|bool
name|IsValid
argument_list|()
specifier|const
block|{
return|return
name|m_cu
operator|&&
name|m_die
return|;
block|}
name|bool
name|IsStructOrClass
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|HasChildren
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|Supports_DW_AT_APPLE_objc_complete_type
argument_list|()
specifier|const
expr_stmt|;
comment|//----------------------------------------------------------------------
comment|// Accessors
comment|//----------------------------------------------------------------------
name|SymbolFileDWARF
operator|*
name|GetDWARF
argument_list|()
specifier|const
expr_stmt|;
name|DWARFCompileUnit
operator|*
name|GetCU
argument_list|()
specifier|const
block|{
return|return
name|m_cu
return|;
block|}
name|DWARFDebugInfoEntry
operator|*
name|GetDIE
argument_list|()
specifier|const
block|{
return|return
name|m_die
return|;
block|}
name|DIERef
name|GetDIERef
argument_list|()
specifier|const
expr_stmt|;
name|lldb_private
operator|::
name|TypeSystem
operator|*
name|GetTypeSystem
argument_list|()
specifier|const
expr_stmt|;
name|DWARFASTParser
operator|*
name|GetDWARFParser
argument_list|()
specifier|const
expr_stmt|;
name|void
name|Set
parameter_list|(
name|DWARFCompileUnit
modifier|*
name|cu
parameter_list|,
name|DWARFDebugInfoEntry
modifier|*
name|die
parameter_list|)
block|{
if|if
condition|(
name|cu
operator|&&
name|die
condition|)
block|{
name|m_cu
operator|=
name|cu
expr_stmt|;
name|m_die
operator|=
name|die
expr_stmt|;
block|}
else|else
block|{
name|Clear
argument_list|()
expr_stmt|;
block|}
block|}
name|void
name|Clear
parameter_list|()
block|{
name|m_cu
operator|=
name|nullptr
expr_stmt|;
name|m_die
operator|=
name|nullptr
expr_stmt|;
block|}
name|lldb
operator|::
name|ModuleSP
name|GetContainingDWOModule
argument_list|()
specifier|const
expr_stmt|;
name|DWARFDIE
name|GetContainingDWOModuleDIE
argument_list|()
specifier|const
expr_stmt|;
comment|//----------------------------------------------------------------------
comment|// Accessing information about a DIE
comment|//----------------------------------------------------------------------
name|dw_tag_t
name|Tag
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|char
operator|*
name|GetTagAsCString
argument_list|()
specifier|const
expr_stmt|;
name|dw_offset_t
name|GetOffset
argument_list|()
specifier|const
expr_stmt|;
name|dw_offset_t
name|GetCompileUnitRelativeOffset
argument_list|()
specifier|const
expr_stmt|;
comment|//----------------------------------------------------------------------
comment|// Get the LLDB user ID for this DIE. This is often just the DIE offset,
comment|// but it might have a SymbolFileDWARF::GetID() in the high 32 bits if
comment|// we are doing Darwin DWARF in .o file, or DWARF stand alone debug
comment|// info.
comment|//----------------------------------------------------------------------
name|lldb
operator|::
name|user_id_t
name|GetID
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|char
operator|*
name|GetName
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|char
operator|*
name|GetMangledName
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|char
operator|*
name|GetPubname
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|char
modifier|*
name|GetQualifiedName
argument_list|(
name|std
operator|::
name|string
operator|&
name|storage
argument_list|)
decl|const
decl_stmt|;
name|lldb
operator|::
name|LanguageType
name|GetLanguage
argument_list|()
specifier|const
expr_stmt|;
name|lldb
operator|::
name|ModuleSP
name|GetModule
argument_list|()
specifier|const
expr_stmt|;
name|lldb_private
operator|::
name|CompileUnit
operator|*
name|GetLLDBCompileUnit
argument_list|()
specifier|const
expr_stmt|;
name|lldb_private
operator|::
name|Type
operator|*
name|ResolveType
argument_list|()
specifier|const
expr_stmt|;
comment|// Resolve a type by UID using this DIE's DWARF file
name|lldb_private
operator|::
name|Type
operator|*
name|ResolveTypeUID
argument_list|(
argument|lldb::user_id_t uid
argument_list|)
specifier|const
expr_stmt|;
comment|//----------------------------------------------------------------------
comment|// Functions for obtaining DIE relations and references
comment|//----------------------------------------------------------------------
name|DWARFDIE
name|GetParent
argument_list|()
specifier|const
expr_stmt|;
name|DWARFDIE
name|GetFirstChild
argument_list|()
specifier|const
expr_stmt|;
name|DWARFDIE
name|GetSibling
argument_list|()
specifier|const
expr_stmt|;
name|DWARFDIE
name|GetReferencedDIE
argument_list|(
specifier|const
name|dw_attr_t
name|attr
argument_list|)
decl|const
decl_stmt|;
comment|//----------------------------------------------------------------------
comment|// Get a another DIE from the same DWARF file as this DIE. This will
comment|// check the current DIE's compile unit first to see if "die_offset" is
comment|// in the same compile unit, and fall back to checking the DWARF file.
comment|//----------------------------------------------------------------------
name|DWARFDIE
name|GetDIE
argument_list|(
name|dw_offset_t
name|die_offset
argument_list|)
decl|const
decl_stmt|;
name|DWARFDIE
name|LookupDeepestBlock
argument_list|(
name|lldb
operator|::
name|addr_t
name|file_addr
argument_list|)
decl|const
decl_stmt|;
name|DWARFDIE
name|GetParentDeclContextDIE
argument_list|()
specifier|const
expr_stmt|;
comment|//----------------------------------------------------------------------
comment|// DeclContext related functions
comment|//----------------------------------------------------------------------
name|void
name|GetDeclContextDIEs
argument_list|(
name|DWARFDIECollection
operator|&
name|decl_context_dies
argument_list|)
decl|const
decl_stmt|;
name|void
name|GetDWARFDeclContext
argument_list|(
name|DWARFDeclContext
operator|&
name|dwarf_decl_ctx
argument_list|)
decl|const
decl_stmt|;
name|void
name|GetDWOContext
argument_list|(
name|std
operator|::
name|vector
operator|<
name|lldb_private
operator|::
name|CompilerContext
operator|>
operator|&
name|context
argument_list|)
decl|const
decl_stmt|;
comment|//----------------------------------------------------------------------
comment|// Getting attribute values from the DIE.
comment|//
comment|// GetAttributeValueAsXXX() functions should only be used if you are
comment|// looking for one or two attributes on a DIE. If you are trying to
comment|// parse all attributes, use GetAttributes (...) instead
comment|//----------------------------------------------------------------------
specifier|const
name|char
modifier|*
name|GetAttributeValueAsString
argument_list|(
specifier|const
name|dw_attr_t
name|attr
argument_list|,
specifier|const
name|char
operator|*
name|fail_value
argument_list|)
decl|const
decl_stmt|;
name|uint64_t
name|GetAttributeValueAsUnsigned
argument_list|(
specifier|const
name|dw_attr_t
name|attr
argument_list|,
name|uint64_t
name|fail_value
argument_list|)
decl|const
decl_stmt|;
name|int64_t
name|GetAttributeValueAsSigned
argument_list|(
specifier|const
name|dw_attr_t
name|attr
argument_list|,
name|int64_t
name|fail_value
argument_list|)
decl|const
decl_stmt|;
name|uint64_t
name|GetAttributeValueAsReference
argument_list|(
specifier|const
name|dw_attr_t
name|attr
argument_list|,
name|uint64_t
name|fail_value
argument_list|)
decl|const
decl_stmt|;
name|uint64_t
name|GetAttributeValueAsAddress
argument_list|(
specifier|const
name|dw_attr_t
name|attr
argument_list|,
name|uint64_t
name|fail_value
argument_list|)
decl|const
decl_stmt|;
name|size_t
name|GetAttributes
argument_list|(
name|DWARFAttributes
operator|&
name|attributes
argument_list|,
name|uint32_t
name|depth
operator|=
literal|0
argument_list|)
decl|const
decl_stmt|;
name|bool
name|GetDIENamesAndRanges
argument_list|(
specifier|const
name|char
operator|*
operator|&
name|name
argument_list|,
specifier|const
name|char
operator|*
operator|&
name|mangled
argument_list|,
name|DWARFRangeList
operator|&
name|ranges
argument_list|,
name|int
operator|&
name|decl_file
argument_list|,
name|int
operator|&
name|decl_line
argument_list|,
name|int
operator|&
name|decl_column
argument_list|,
name|int
operator|&
name|call_file
argument_list|,
name|int
operator|&
name|call_line
argument_list|,
name|int
operator|&
name|call_column
argument_list|,
name|lldb_private
operator|::
name|DWARFExpression
operator|*
name|frame_base
argument_list|)
decl|const
decl_stmt|;
comment|//----------------------------------------------------------------------
comment|// Pretty printing
comment|//----------------------------------------------------------------------
name|void
name|Dump
argument_list|(
name|lldb_private
operator|::
name|Stream
operator|*
name|s
argument_list|,
specifier|const
name|uint32_t
name|recurse_depth
argument_list|)
decl|const
decl_stmt|;
name|protected
label|:
name|DWARFCompileUnit
modifier|*
name|m_cu
decl_stmt|;
name|DWARFDebugInfoEntry
modifier|*
name|m_die
decl_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|bool
name|operator
operator|==
operator|(
specifier|const
name|DWARFDIE
operator|&
name|lhs
operator|,
specifier|const
name|DWARFDIE
operator|&
name|rhs
operator|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|bool
name|operator
operator|!=
operator|(
specifier|const
name|DWARFDIE
operator|&
name|lhs
operator|,
specifier|const
name|DWARFDIE
operator|&
name|rhs
operator|)
expr_stmt|;
end_expr_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// SymbolFileDWARF_DWARFDIE_h_
end_comment

end_unit

