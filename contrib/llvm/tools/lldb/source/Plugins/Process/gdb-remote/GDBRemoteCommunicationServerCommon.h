begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- GDBRemoteCommunicationServerCommon.h --------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|liblldb_GDBRemoteCommunicationServerCommon_h_
end_ifndef

begin_define
define|#
directive|define
name|liblldb_GDBRemoteCommunicationServerCommon_h_
end_define

begin_comment
comment|// C Includes
end_comment

begin_comment
comment|// C++ Includes
end_comment

begin_include
include|#
directive|include
file|<string>
end_include

begin_comment
comment|// Other libraries and framework includes
end_comment

begin_comment
comment|// Project includes
end_comment

begin_include
include|#
directive|include
file|"lldb/Target/Process.h"
end_include

begin_include
include|#
directive|include
file|"lldb/lldb-private-forward.h"
end_include

begin_include
include|#
directive|include
file|"GDBRemoteCommunicationServer.h"
end_include

begin_include
include|#
directive|include
file|"GDBRemoteCommunicationServerCommon.h"
end_include

begin_decl_stmt
name|class
name|StringExtractorGDBRemote
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|namespace
name|lldb_private
block|{
name|namespace
name|process_gdb_remote
block|{
name|class
name|ProcessGDBRemote
decl_stmt|;
name|class
name|GDBRemoteCommunicationServerCommon
range|:
name|public
name|GDBRemoteCommunicationServer
block|{
name|public
operator|:
name|GDBRemoteCommunicationServerCommon
argument_list|(
specifier|const
name|char
operator|*
name|comm_name
argument_list|,
specifier|const
name|char
operator|*
name|listener_name
argument_list|)
block|;
operator|~
name|GDBRemoteCommunicationServerCommon
argument_list|()
name|override
block|;
name|protected
operator|:
name|ProcessLaunchInfo
name|m_process_launch_info
block|;
name|Status
name|m_process_launch_error
block|;
name|ProcessInstanceInfoList
name|m_proc_infos
block|;
name|uint32_t
name|m_proc_infos_index
block|;
name|bool
name|m_thread_suffix_supported
block|;
name|bool
name|m_list_threads_in_stop_reply
block|;
name|PacketResult
name|Handle_A
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qHostInfo
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qProcessInfoPID
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qfProcessInfo
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qsProcessInfo
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qUserName
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qGroupName
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qSpeedTest
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_vFile_Open
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_vFile_Close
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_vFile_pRead
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_vFile_pWrite
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_vFile_Size
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_vFile_Mode
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_vFile_Exists
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_vFile_symlink
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_vFile_unlink
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_vFile_Stat
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_vFile_MD5
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qEcho
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qModuleInfo
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_jModulesInfo
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qPlatform_shell
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qPlatform_mkdir
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qPlatform_chmod
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qSupported
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_QThreadSuffixSupported
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_QListThreadsInStopReply
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_QSetDetachOnError
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_QStartNoAckMode
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_QSetSTDIN
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_QSetSTDOUT
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_QSetSTDERR
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_qLaunchSuccess
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_QEnvironment
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_QEnvironmentHexEncoded
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
name|PacketResult
name|Handle_QLaunchArch
argument_list|(
name|StringExtractorGDBRemote
operator|&
name|packet
argument_list|)
block|;
specifier|static
name|void
name|CreateProcessInfoResponse
argument_list|(
specifier|const
name|ProcessInstanceInfo
operator|&
name|proc_info
argument_list|,
name|StreamString
operator|&
name|response
argument_list|)
block|;
specifier|static
name|void
name|CreateProcessInfoResponse_DebugServerStyle
argument_list|(
specifier|const
name|ProcessInstanceInfo
operator|&
name|proc_info
argument_list|,
name|StreamString
operator|&
name|response
argument_list|)
block|;
name|template
operator|<
name|typename
name|T
operator|>
name|void
name|RegisterMemberFunctionHandler
argument_list|(
argument|StringExtractorGDBRemote::ServerPacketType packet_type
argument_list|,
argument|PacketResult (T::*handler)(StringExtractorGDBRemote&packet)
argument_list|)
block|{
name|RegisterPacketHandler
argument_list|(
name|packet_type
argument_list|,
index|[
name|this
operator|,
name|handler
index|]
operator|(
name|StringExtractorGDBRemote
name|packet
expr|,
name|Status
operator|&
name|error
expr|,
name|bool
operator|&
name|interrupt
expr|,
name|bool
operator|&
name|quit
operator|)
block|{
return|return
operator|(
name|static_cast
operator|<
name|T
operator|*
operator|>
operator|(
name|this
operator|)
operator|->*
name|handler
operator|)
operator|(
name|packet
operator|)
return|;
block|}
argument_list|)
block|;   }
comment|//------------------------------------------------------------------
comment|/// Launch a process with the current launch settings.
comment|///
comment|/// This method supports running an lldb-gdbserver or similar
comment|/// server in a situation where the startup code has been provided
comment|/// with all the information for a child process to be launched.
comment|///
comment|/// @return
comment|///     An Status object indicating the success or failure of the
comment|///     launch.
comment|//------------------------------------------------------------------
name|virtual
name|Status
name|LaunchProcess
argument_list|()
operator|=
literal|0
block|;
name|virtual
name|FileSpec
name|FindModuleFile
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|module_path
argument_list|,
specifier|const
name|ArchSpec
operator|&
name|arch
argument_list|)
block|;
name|private
operator|:
name|ModuleSpec
name|GetModuleInfo
argument_list|(
argument|llvm::StringRef module_path
argument_list|,
argument|llvm::StringRef triple
argument_list|)
block|; }
decl_stmt|;
block|}
comment|// namespace process_gdb_remote
block|}
end_decl_stmt

begin_comment
comment|// namespace lldb_private
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// liblldb_GDBRemoteCommunicationServerCommon_h_
end_comment

end_unit

