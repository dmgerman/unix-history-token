begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- ProcessMessage.h ----------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|liblldb_ProcessMessage_H_
end_ifndef

begin_define
define|#
directive|define
name|liblldb_ProcessMessage_H_
end_define

begin_include
include|#
directive|include
file|"CrashReason.h"
end_include

begin_include
include|#
directive|include
file|<cassert>
end_include

begin_include
include|#
directive|include
file|<string>
end_include

begin_include
include|#
directive|include
file|"lldb/lldb-defines.h"
end_include

begin_include
include|#
directive|include
file|"lldb/lldb-types.h"
end_include

begin_decl_stmt
name|class
name|ProcessMessage
block|{
name|public
label|:
comment|/// The type of signal this message can correspond to.
enum|enum
name|Kind
block|{
name|eInvalidMessage
block|,
name|eAttachMessage
block|,
name|eExitMessage
block|,
name|eLimboMessage
block|,
name|eSignalMessage
block|,
name|eSignalDeliveredMessage
block|,
name|eTraceMessage
block|,
name|eBreakpointMessage
block|,
name|eWatchpointMessage
block|,
name|eCrashMessage
block|,
name|eNewThreadMessage
block|,
name|eExecMessage
block|}
enum|;
name|ProcessMessage
argument_list|()
operator|:
name|m_tid
argument_list|(
name|LLDB_INVALID_PROCESS_ID
argument_list|)
operator|,
name|m_kind
argument_list|(
name|eInvalidMessage
argument_list|)
operator|,
name|m_crash_reason
argument_list|(
name|CrashReason
operator|::
name|eInvalidCrashReason
argument_list|)
operator|,
name|m_status
argument_list|(
literal|0
argument_list|)
operator|,
name|m_addr
argument_list|(
literal|0
argument_list|)
block|{}
name|Kind
name|GetKind
argument_list|()
specifier|const
block|{
return|return
name|m_kind
return|;
block|}
name|lldb
operator|::
name|tid_t
name|GetTID
argument_list|()
specifier|const
block|{
return|return
name|m_tid
return|;
block|}
comment|/// Indicates that the process @p pid has successfully attached.
specifier|static
name|ProcessMessage
name|Attach
argument_list|(
name|lldb
operator|::
name|pid_t
name|pid
argument_list|)
block|{
return|return
name|ProcessMessage
argument_list|(
name|pid
argument_list|,
name|eAttachMessage
argument_list|)
return|;
block|}
comment|/// Indicates that the thread @p tid is about to exit with status @p status.
specifier|static
name|ProcessMessage
name|Limbo
argument_list|(
name|lldb
operator|::
name|tid_t
name|tid
argument_list|,
name|int
name|status
argument_list|)
block|{
return|return
name|ProcessMessage
argument_list|(
name|tid
argument_list|,
name|eLimboMessage
argument_list|,
name|status
argument_list|)
return|;
block|}
comment|/// Indicates that the thread @p tid had the signal @p signum delivered.
specifier|static
name|ProcessMessage
name|Signal
argument_list|(
name|lldb
operator|::
name|tid_t
name|tid
argument_list|,
name|int
name|signum
argument_list|)
block|{
return|return
name|ProcessMessage
argument_list|(
name|tid
argument_list|,
name|eSignalMessage
argument_list|,
name|signum
argument_list|)
return|;
block|}
comment|/// Indicates that a signal @p signum generated by the debugging process was
comment|/// delivered to the thread @p tid.
specifier|static
name|ProcessMessage
name|SignalDelivered
argument_list|(
name|lldb
operator|::
name|tid_t
name|tid
argument_list|,
name|int
name|signum
argument_list|)
block|{
return|return
name|ProcessMessage
argument_list|(
name|tid
argument_list|,
name|eSignalDeliveredMessage
argument_list|,
name|signum
argument_list|)
return|;
block|}
comment|/// Indicates that the thread @p tid encountered a trace point.
specifier|static
name|ProcessMessage
name|Trace
argument_list|(
name|lldb
operator|::
name|tid_t
name|tid
argument_list|)
block|{
return|return
name|ProcessMessage
argument_list|(
name|tid
argument_list|,
name|eTraceMessage
argument_list|)
return|;
block|}
comment|/// Indicates that the thread @p tid encountered a break point.
specifier|static
name|ProcessMessage
name|Break
argument_list|(
name|lldb
operator|::
name|tid_t
name|tid
argument_list|)
block|{
return|return
name|ProcessMessage
argument_list|(
name|tid
argument_list|,
name|eBreakpointMessage
argument_list|)
return|;
block|}
specifier|static
name|ProcessMessage
name|Watch
argument_list|(
name|lldb
operator|::
name|tid_t
name|tid
argument_list|,
name|lldb
operator|::
name|addr_t
name|wp_addr
argument_list|)
block|{
return|return
name|ProcessMessage
argument_list|(
name|tid
argument_list|,
name|eWatchpointMessage
argument_list|,
literal|0
argument_list|,
name|wp_addr
argument_list|)
return|;
block|}
comment|/// Indicates that the thread @p tid crashed.
specifier|static
name|ProcessMessage
name|Crash
argument_list|(
name|lldb
operator|::
name|pid_t
name|pid
argument_list|,
name|CrashReason
name|reason
argument_list|,
name|int
name|signo
argument_list|,
name|lldb
operator|::
name|addr_t
name|fault_addr
argument_list|)
block|{
name|ProcessMessage
name|message
parameter_list|(
name|pid
parameter_list|,
name|eCrashMessage
parameter_list|,
name|signo
parameter_list|,
name|fault_addr
parameter_list|)
function_decl|;
name|message
operator|.
name|m_crash_reason
operator|=
name|reason
expr_stmt|;
return|return
name|message
return|;
block|}
comment|/// Indicates that the thread @p child_tid was spawned.
specifier|static
name|ProcessMessage
name|NewThread
argument_list|(
name|lldb
operator|::
name|tid_t
name|parent_tid
argument_list|,
name|lldb
operator|::
name|tid_t
name|child_tid
argument_list|)
block|{
return|return
name|ProcessMessage
argument_list|(
name|parent_tid
argument_list|,
name|eNewThreadMessage
argument_list|,
name|child_tid
argument_list|)
return|;
block|}
comment|/// Indicates that the thread @p tid is about to exit with status @p status.
specifier|static
name|ProcessMessage
name|Exit
argument_list|(
name|lldb
operator|::
name|tid_t
name|tid
argument_list|,
name|int
name|status
argument_list|)
block|{
return|return
name|ProcessMessage
argument_list|(
name|tid
argument_list|,
name|eExitMessage
argument_list|,
name|status
argument_list|)
return|;
block|}
comment|/// Indicates that the thread @p pid has exec'd.
specifier|static
name|ProcessMessage
name|Exec
argument_list|(
name|lldb
operator|::
name|tid_t
name|tid
argument_list|)
block|{
return|return
name|ProcessMessage
argument_list|(
name|tid
argument_list|,
name|eExecMessage
argument_list|)
return|;
block|}
name|int
name|GetExitStatus
argument_list|()
specifier|const
block|{
name|assert
argument_list|(
name|GetKind
argument_list|()
operator|==
name|eExitMessage
operator|||
name|GetKind
argument_list|()
operator|==
name|eLimboMessage
argument_list|)
block|;
return|return
name|m_status
return|;
block|}
name|int
name|GetSignal
argument_list|()
specifier|const
block|{
name|assert
argument_list|(
name|GetKind
argument_list|()
operator|==
name|eSignalMessage
operator|||
name|GetKind
argument_list|()
operator|==
name|eCrashMessage
operator|||
name|GetKind
argument_list|()
operator|==
name|eSignalDeliveredMessage
argument_list|)
block|;
return|return
name|m_status
return|;
block|}
name|int
name|GetStopStatus
argument_list|()
specifier|const
block|{
name|assert
argument_list|(
name|GetKind
argument_list|()
operator|==
name|eSignalMessage
argument_list|)
block|;
return|return
name|m_status
return|;
block|}
name|CrashReason
name|GetCrashReason
argument_list|()
specifier|const
block|{
name|assert
argument_list|(
name|GetKind
argument_list|()
operator|==
name|eCrashMessage
argument_list|)
block|;
return|return
name|m_crash_reason
return|;
block|}
name|lldb
operator|::
name|addr_t
name|GetFaultAddress
argument_list|()
specifier|const
block|{
name|assert
argument_list|(
name|GetKind
argument_list|()
operator|==
name|eCrashMessage
argument_list|)
block|;
return|return
name|m_addr
return|;
block|}
name|lldb
operator|::
name|addr_t
name|GetHWAddress
argument_list|()
specifier|const
block|{
name|assert
argument_list|(
name|GetKind
argument_list|()
operator|==
name|eWatchpointMessage
operator|||
name|GetKind
argument_list|()
operator|==
name|eTraceMessage
argument_list|)
block|;
return|return
name|m_addr
return|;
block|}
name|lldb
operator|::
name|tid_t
name|GetChildTID
argument_list|()
specifier|const
block|{
name|assert
argument_list|(
name|GetKind
argument_list|()
operator|==
name|eNewThreadMessage
argument_list|)
block|;
return|return
name|m_child_tid
return|;
block|}
specifier|const
name|char
operator|*
name|PrintCrashReason
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|char
operator|*
name|PrintKind
argument_list|()
specifier|const
expr_stmt|;
specifier|static
specifier|const
name|char
modifier|*
name|PrintKind
parameter_list|(
name|Kind
parameter_list|)
function_decl|;
name|private
label|:
name|ProcessMessage
argument_list|(
argument|lldb::tid_t tid
argument_list|,
argument|Kind kind
argument_list|,
argument|int status =
literal|0
argument_list|,
argument|lldb::addr_t addr =
literal|0
argument_list|)
block|:
name|m_tid
argument_list|(
name|tid
argument_list|)
operator|,
name|m_kind
argument_list|(
name|kind
argument_list|)
operator|,
name|m_crash_reason
argument_list|(
name|CrashReason
operator|::
name|eInvalidCrashReason
argument_list|)
operator|,
name|m_status
argument_list|(
name|status
argument_list|)
operator|,
name|m_addr
argument_list|(
name|addr
argument_list|)
operator|,
name|m_child_tid
argument_list|(
literal|0
argument_list|)
block|{}
name|ProcessMessage
argument_list|(
argument|lldb::tid_t tid
argument_list|,
argument|Kind kind
argument_list|,
argument|lldb::tid_t child_tid
argument_list|)
operator|:
name|m_tid
argument_list|(
name|tid
argument_list|)
operator|,
name|m_kind
argument_list|(
name|kind
argument_list|)
operator|,
name|m_crash_reason
argument_list|(
name|CrashReason
operator|::
name|eInvalidCrashReason
argument_list|)
operator|,
name|m_status
argument_list|(
literal|0
argument_list|)
operator|,
name|m_addr
argument_list|(
literal|0
argument_list|)
operator|,
name|m_child_tid
argument_list|(
argument|child_tid
argument_list|)
block|{}
name|lldb
operator|::
name|tid_t
name|m_tid
expr_stmt|;
name|Kind
name|m_kind
range|:
literal|8
decl_stmt|;
name|CrashReason
name|m_crash_reason
decl_stmt|;
name|int
name|m_status
decl_stmt|;
name|lldb
operator|::
name|addr_t
name|m_addr
expr_stmt|;
name|lldb
operator|::
name|tid_t
name|m_child_tid
expr_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// #ifndef liblldb_ProcessMessage_H_
end_comment

end_unit

