begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- ClangForward.h ------------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|liblldb_ClangForward_h_
end_ifndef

begin_define
define|#
directive|define
name|liblldb_ClangForward_h_
end_define

begin_comment
comment|// C Includes
end_comment

begin_comment
comment|// C++ Includes
end_comment

begin_comment
comment|// Other libraries and framework includes
end_comment

begin_comment
comment|// Project includes
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__cplusplus
argument_list|)
end_if

begin_decl_stmt
name|namespace
name|clang
block|{
name|namespace
name|Builtin
block|{
name|class
name|Context
decl_stmt|;
block|}
name|class
name|Action
decl_stmt|;
name|class
name|ASTConsumer
decl_stmt|;
name|class
name|ASTContext
decl_stmt|;
name|class
name|ASTRecordLayout
decl_stmt|;
name|class
name|AddrLabelExpr
decl_stmt|;
name|class
name|AnalyzerOptions
decl_stmt|;
name|class
name|BinaryOperator
decl_stmt|;
name|class
name|ClassTemplateDecl
decl_stmt|;
name|class
name|ClassTemplateSpecializationDecl
decl_stmt|;
name|class
name|CodeGenOptions
decl_stmt|;
name|class
name|CodeGenerator
decl_stmt|;
name|class
name|CompilerInstance
decl_stmt|;
name|class
name|CompoundStmt
decl_stmt|;
name|class
name|CXXBaseSpecifier
decl_stmt|;
name|class
name|CXXBoolLiteralExpr
decl_stmt|;
name|class
name|CXXFunctionalCastExpr
decl_stmt|;
name|class
name|CXXMethodDecl
decl_stmt|;
name|class
name|CXXNamedCastExpr
decl_stmt|;
name|class
name|CXXRecordDecl
decl_stmt|;
name|class
name|CXXThisExpr
decl_stmt|;
name|class
name|CharacterLiteral
decl_stmt|;
name|class
name|CompoundAssignOperator
decl_stmt|;
name|class
name|Decl
decl_stmt|;
name|class
name|DeclarationName
decl_stmt|;
name|class
name|DeclaratorDecl
decl_stmt|;
name|class
name|DeclContext
decl_stmt|;
name|class
name|DeclRefExpr
decl_stmt|;
name|class
name|DeclStmt
decl_stmt|;
name|class
name|DependencyOutputOptions
decl_stmt|;
name|class
name|Diagnostic
decl_stmt|;
name|class
name|DiagnosticConsumer
decl_stmt|;
name|class
name|DiagnosticsEngine
decl_stmt|;
name|class
name|DiagnosticOptions
decl_stmt|;
name|class
name|EnumDecl
decl_stmt|;
name|class
name|EnumConstantDecl
decl_stmt|;
name|class
name|Expr
decl_stmt|;
name|class
name|ExternalASTSource
decl_stmt|;
name|class
name|ExtVectorElementExpr
decl_stmt|;
name|class
name|FieldDecl
decl_stmt|;
name|class
name|FileManager
decl_stmt|;
name|class
name|FileSystemOptions
decl_stmt|;
name|class
name|FloatingLiteral
decl_stmt|;
name|class
name|FrontendOptions
decl_stmt|;
name|class
name|FunctionDecl
decl_stmt|;
name|class
name|FunctionTemplateDecl
decl_stmt|;
name|class
name|FunctionTemplateSpecializationInfo
decl_stmt|;
name|class
name|GotoStmt
decl_stmt|;
name|class
name|HeaderSearchOptions
decl_stmt|;
name|class
name|IdentifierInfo
decl_stmt|;
name|class
name|IdentifierTable
decl_stmt|;
name|class
name|IntegerLiteral
decl_stmt|;
name|class
name|LabelStmt
decl_stmt|;
name|class
name|LangOptions
decl_stmt|;
name|class
name|MacroDirective
decl_stmt|;
name|class
name|MemberExpr
decl_stmt|;
name|class
name|Module
decl_stmt|;
name|class
name|NamedDecl
decl_stmt|;
name|class
name|NamespaceDecl
decl_stmt|;
name|class
name|NonTypeTemplateParmDecl
decl_stmt|;
name|class
name|ObjCEncodeExpr
decl_stmt|;
name|class
name|ObjCImplicitSetterGetterRefExpr
decl_stmt|;
name|class
name|ObjCInterfaceDecl
decl_stmt|;
name|class
name|ObjCIvarDecl
decl_stmt|;
name|class
name|ObjCIvarRefExpr
decl_stmt|;
name|class
name|ObjCMessageExpr
decl_stmt|;
name|class
name|ObjCMethodDecl
decl_stmt|;
name|class
name|ObjCPropertyRefExpr
decl_stmt|;
name|class
name|ObjCProtocolDecl
decl_stmt|;
name|class
name|ObjCProtocolExpr
decl_stmt|;
name|class
name|ObjCSelectorExpr
decl_stmt|;
name|class
name|ObjCSuperExpr
decl_stmt|;
name|class
name|ParenExpr
decl_stmt|;
name|class
name|ParmVarDecl
decl_stmt|;
name|class
name|PredefinedExpr
decl_stmt|;
name|class
name|PreprocessorOptions
decl_stmt|;
name|class
name|PreprocessorOutputOptions
decl_stmt|;
name|class
name|QualType
decl_stmt|;
name|class
name|QualifiedNameType
decl_stmt|;
name|class
name|RecordDecl
decl_stmt|;
name|class
name|SelectorTable
decl_stmt|;
name|class
name|SizeOfAlignOfExpr
decl_stmt|;
name|class
name|SourceLocation
decl_stmt|;
name|class
name|SourceManager
decl_stmt|;
name|class
name|Stmt
decl_stmt|;
name|class
name|StmtIteratorBase
decl_stmt|;
name|class
name|StringLiteral
decl_stmt|;
name|class
name|TagDecl
decl_stmt|;
name|class
name|TargetInfo
decl_stmt|;
name|class
name|TargetOptions
decl_stmt|;
name|class
name|TemplateArgument
decl_stmt|;
name|class
name|TemplateDecl
decl_stmt|;
name|class
name|TemplateParameterList
decl_stmt|;
name|class
name|TemplateTemplateParmDecl
decl_stmt|;
name|class
name|TemplateTypeParmDecl
decl_stmt|;
name|class
name|TextDiagnosticBuffer
decl_stmt|;
name|class
name|TranslationUnitDecl
decl_stmt|;
name|class
name|Type
decl_stmt|;
name|class
name|TypeDecl
decl_stmt|;
name|class
name|TypedefDecl
decl_stmt|;
name|class
name|TypesCompatibleExpr
decl_stmt|;
name|class
name|UnaryOperator
decl_stmt|;
name|class
name|ValueDecl
decl_stmt|;
name|class
name|VarDecl
decl_stmt|;
struct_decl|struct
name|PrintingPolicy
struct_decl|;
block|}
end_decl_stmt

begin_decl_stmt
name|namespace
name|llvm
block|{
name|class
name|APInt
decl_stmt|;
name|class
name|APSInt
decl_stmt|;
name|class
name|LLVMContext
decl_stmt|;
name|class
name|ExecutionEngine
decl_stmt|;
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// #if defined(__cplusplus)
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// liblldb_ClangForward_h_
end_comment

end_unit

