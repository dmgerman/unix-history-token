begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- PythonDataObjects.h----------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|liblldb_PythonDataObjects_h_
end_ifndef

begin_define
define|#
directive|define
name|liblldb_PythonDataObjects_h_
end_define

begin_comment
comment|// C Includes
end_comment

begin_comment
comment|// C++ Includes
end_comment

begin_comment
comment|// Other libraries and framework includes
end_comment

begin_comment
comment|// Project includes
end_comment

begin_include
include|#
directive|include
file|"lldb/lldb-defines.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Core/ConstString.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Core/Flags.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Interpreter/OptionValue.h"
end_include

begin_include
include|#
directive|include
file|"lldb/lldb-python.h"
end_include

begin_decl_stmt
name|namespace
name|lldb_private
block|{
name|class
name|PythonObject
block|{
name|public
label|:
name|PythonObject
argument_list|()
operator|:
name|m_py_obj
argument_list|(
argument|NULL
argument_list|)
block|{         }
name|explicit
name|PythonObject
argument_list|(
name|PyObject
operator|*
name|py_obj
argument_list|)
operator|:
name|m_py_obj
argument_list|(
argument|NULL
argument_list|)
block|{
name|Reset
argument_list|(
name|py_obj
argument_list|)
block|;         }
name|PythonObject
argument_list|(
specifier|const
name|PythonObject
operator|&
name|rhs
argument_list|)
operator|:
name|m_py_obj
argument_list|(
argument|NULL
argument_list|)
block|{
name|Reset
argument_list|(
name|rhs
operator|.
name|m_py_obj
argument_list|)
block|;         }
name|explicit
name|PythonObject
argument_list|(
specifier|const
name|lldb
operator|::
name|ScriptInterpreterObjectSP
operator|&
name|script_object_sp
argument_list|)
expr_stmt|;
name|virtual
operator|~
name|PythonObject
argument_list|()
block|{
name|Reset
argument_list|(
name|NULL
argument_list|)
block|;         }
name|bool
name|Reset
argument_list|(
argument|const PythonObject&object
argument_list|)
block|{
return|return
name|Reset
argument_list|(
name|object
operator|.
name|get
argument_list|()
argument_list|)
return|;
block|}
name|virtual
name|bool
name|Reset
parameter_list|(
name|PyObject
modifier|*
name|py_obj
init|=
name|NULL
parameter_list|)
block|{
if|if
condition|(
name|py_obj
operator|!=
name|m_py_obj
condition|)
block|{
name|Py_XDECREF
argument_list|(
name|m_py_obj
argument_list|)
expr_stmt|;
name|m_py_obj
operator|=
name|py_obj
expr_stmt|;
name|Py_XINCREF
argument_list|(
name|m_py_obj
argument_list|)
expr_stmt|;
block|}
return|return
name|true
return|;
block|}
name|void
name|Dump
argument_list|()
specifier|const
block|{
if|if
condition|(
name|m_py_obj
condition|)
name|_PyObject_Dump
argument_list|(
name|m_py_obj
argument_list|)
expr_stmt|;
else|else
name|puts
argument_list|(
literal|"NULL"
argument_list|)
expr_stmt|;
block|}
name|void
name|Dump
argument_list|(
name|Stream
operator|&
name|strm
argument_list|)
decl|const
decl_stmt|;
name|PyObject
operator|*
name|get
argument_list|()
specifier|const
block|{
return|return
name|m_py_obj
return|;
block|}
name|PythonString
name|Repr
parameter_list|()
function_decl|;
name|PythonString
name|Str
parameter_list|()
function_decl|;
name|explicit
name|operator
name|bool
argument_list|()
specifier|const
block|{
return|return
name|m_py_obj
operator|!=
name|NULL
return|;
block|}
name|protected
label|:
name|PyObject
modifier|*
name|m_py_obj
decl_stmt|;
block|}
empty_stmt|;
name|class
name|PythonString
range|:
name|public
name|PythonObject
block|{
name|public
operator|:
name|PythonString
argument_list|()
block|;
name|PythonString
argument_list|(
name|PyObject
operator|*
name|o
argument_list|)
block|;
name|PythonString
argument_list|(
specifier|const
name|PythonObject
operator|&
name|object
argument_list|)
block|;
name|PythonString
argument_list|(
specifier|const
name|lldb
operator|::
name|ScriptInterpreterObjectSP
operator|&
name|script_object_sp
argument_list|)
block|;
name|PythonString
argument_list|(
specifier|const
name|char
operator|*
name|string
argument_list|)
block|;
name|virtual
operator|~
name|PythonString
argument_list|()
block|;
name|virtual
name|bool
name|Reset
argument_list|(
name|PyObject
operator|*
name|py_obj
operator|=
name|NULL
argument_list|)
block|;
specifier|const
name|char
operator|*
name|GetString
argument_list|()
specifier|const
block|;
name|size_t
name|GetSize
argument_list|()
specifier|const
block|;
name|void
name|SetString
argument_list|(
specifier|const
name|char
operator|*
name|string
argument_list|)
block|;             }
decl_stmt|;
name|class
name|PythonInteger
range|:
name|public
name|PythonObject
block|{
name|public
operator|:
name|PythonInteger
argument_list|()
block|;
name|PythonInteger
argument_list|(
name|PyObject
operator|*
name|py_obj
argument_list|)
block|;
name|PythonInteger
argument_list|(
specifier|const
name|PythonObject
operator|&
name|object
argument_list|)
block|;
name|PythonInteger
argument_list|(
specifier|const
name|lldb
operator|::
name|ScriptInterpreterObjectSP
operator|&
name|script_object_sp
argument_list|)
block|;
name|PythonInteger
argument_list|(
argument|int64_t value
argument_list|)
block|;
name|virtual
operator|~
name|PythonInteger
argument_list|()
block|;
name|virtual
name|bool
name|Reset
argument_list|(
name|PyObject
operator|*
name|py_obj
operator|=
name|NULL
argument_list|)
block|;
name|int64_t
name|GetInteger
argument_list|()
block|;
name|void
name|SetInteger
argument_list|(
argument|int64_t value
argument_list|)
block|;     }
decl_stmt|;
name|class
name|PythonList
range|:
name|public
name|PythonObject
block|{
name|public
operator|:
name|PythonList
argument_list|(
argument|bool create_empty
argument_list|)
block|;
name|PythonList
argument_list|(
name|PyObject
operator|*
name|py_obj
argument_list|)
block|;
name|PythonList
argument_list|(
specifier|const
name|PythonObject
operator|&
name|object
argument_list|)
block|;
name|PythonList
argument_list|(
specifier|const
name|lldb
operator|::
name|ScriptInterpreterObjectSP
operator|&
name|script_object_sp
argument_list|)
block|;
name|PythonList
argument_list|(
argument|uint32_t count
argument_list|)
block|;
name|virtual
operator|~
name|PythonList
argument_list|()
block|;
name|virtual
name|bool
name|Reset
argument_list|(
name|PyObject
operator|*
name|py_obj
operator|=
name|NULL
argument_list|)
block|;
name|uint32_t
name|GetSize
argument_list|()
block|;
name|PythonObject
name|GetItemAtIndex
argument_list|(
argument|uint32_t index
argument_list|)
block|;
name|void
name|SetItemAtIndex
argument_list|(
argument|uint32_t index
argument_list|,
argument|const PythonObject&object
argument_list|)
block|;
name|void
name|AppendItem
argument_list|(
specifier|const
name|PythonObject
operator|&
name|object
argument_list|)
block|;     }
decl_stmt|;
name|class
name|PythonDictionary
range|:
name|public
name|PythonObject
block|{
name|public
operator|:
name|explicit
name|PythonDictionary
argument_list|(
argument|bool create_empty
argument_list|)
block|;
name|PythonDictionary
argument_list|(
name|PyObject
operator|*
name|object
argument_list|)
block|;
name|PythonDictionary
argument_list|(
specifier|const
name|PythonObject
operator|&
name|object
argument_list|)
block|;
name|PythonDictionary
argument_list|(
specifier|const
name|lldb
operator|::
name|ScriptInterpreterObjectSP
operator|&
name|script_object_sp
argument_list|)
block|;
name|virtual
operator|~
name|PythonDictionary
argument_list|()
block|;
name|virtual
name|bool
name|Reset
argument_list|(
name|PyObject
operator|*
name|object
operator|=
name|NULL
argument_list|)
block|;
name|uint32_t
name|GetSize
argument_list|()
block|;
name|PythonObject
name|GetItemForKey
argument_list|(
argument|const PythonString&key
argument_list|)
specifier|const
block|;
specifier|const
name|char
operator|*
name|GetItemForKeyAsString
argument_list|(
argument|const PythonString&key
argument_list|,
argument|const char *fail_value = NULL
argument_list|)
specifier|const
block|;
name|int64_t
name|GetItemForKeyAsInteger
argument_list|(
argument|const PythonString&key
argument_list|,
argument|int64_t fail_value =
literal|0
argument_list|)
specifier|const
block|;
name|PythonObject
name|GetItemForKey
argument_list|(
argument|const char *key
argument_list|)
specifier|const
block|;
typedef|typedef
name|bool
function_decl|(
modifier|*
name|DictionaryIteratorCallback
function_decl|)
parameter_list|(
name|PythonString
modifier|*
name|key
parameter_list|,
name|PythonDictionary
modifier|*
name|dict
parameter_list|)
function_decl|;
name|PythonList
name|GetKeys
argument_list|()
specifier|const
decl_stmt|;
name|PythonString
name|GetKeyAtPosition
argument_list|(
name|uint32_t
name|pos
argument_list|)
decl|const
decl_stmt|;
name|PythonObject
name|GetValueAtPosition
argument_list|(
name|uint32_t
name|pos
argument_list|)
decl|const
decl_stmt|;
name|void
name|SetItemForKey
parameter_list|(
specifier|const
name|PythonString
modifier|&
name|key
parameter_list|,
name|PyObject
modifier|*
name|value
parameter_list|)
function_decl|;
name|void
name|SetItemForKey
parameter_list|(
specifier|const
name|PythonString
modifier|&
name|key
parameter_list|,
specifier|const
name|PythonObject
modifier|&
name|value
parameter_list|)
function_decl|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_comment
unit|}
comment|// namespace lldb_private
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// liblldb_PythonDataObjects_h_
end_comment

end_unit

