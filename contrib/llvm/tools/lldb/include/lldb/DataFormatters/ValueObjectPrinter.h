begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- ValueObjectPrinter.h ---------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|lldb_ValueObjectPrinter_h_
end_ifndef

begin_define
define|#
directive|define
name|lldb_ValueObjectPrinter_h_
end_define

begin_comment
comment|// C Includes
end_comment

begin_comment
comment|// C++ Includes
end_comment

begin_comment
comment|// Other libraries and framework includes
end_comment

begin_comment
comment|// Project includes
end_comment

begin_include
include|#
directive|include
file|"lldb/lldb-private.h"
end_include

begin_include
include|#
directive|include
file|"lldb/lldb-public.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Core/Stream.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Core/ValueObject.h"
end_include

begin_include
include|#
directive|include
file|"lldb/DataFormatters/TypeSummary.h"
end_include

begin_decl_stmt
name|namespace
name|lldb_private
block|{
struct|struct
name|DumpValueObjectOptions
block|{
name|uint32_t
name|m_max_ptr_depth
init|=
literal|0
decl_stmt|;
name|uint32_t
name|m_max_depth
init|=
name|UINT32_MAX
decl_stmt|;
name|lldb
operator|::
name|DynamicValueType
name|m_use_dynamic
operator|=
name|lldb
operator|::
name|eNoDynamicValues
expr_stmt|;
name|uint32_t
name|m_omit_summary_depth
init|=
literal|0
decl_stmt|;
name|lldb
operator|::
name|Format
name|m_format
operator|=
name|lldb
operator|::
name|eFormatDefault
expr_stmt|;
name|lldb
operator|::
name|TypeSummaryImplSP
name|m_summary_sp
expr_stmt|;
name|std
operator|::
name|string
name|m_root_valobj_name
expr_stmt|;
name|bool
name|m_use_synthetic
range|:
literal|1
decl_stmt|;
name|bool
name|m_scope_already_checked
range|:
literal|1
decl_stmt|;
name|bool
name|m_flat_output
range|:
literal|1
decl_stmt|;
name|bool
name|m_ignore_cap
range|:
literal|1
decl_stmt|;
name|bool
name|m_show_types
range|:
literal|1
decl_stmt|;
name|bool
name|m_show_location
range|:
literal|1
decl_stmt|;
name|bool
name|m_use_objc
range|:
literal|1
decl_stmt|;
name|bool
name|m_hide_root_type
range|:
literal|1
decl_stmt|;
name|bool
name|m_hide_name
range|:
literal|1
decl_stmt|;
name|bool
name|m_hide_value
range|:
literal|1
decl_stmt|;
name|bool
name|m_run_validator
range|:
literal|1
decl_stmt|;
name|bool
name|m_use_type_display_name
range|:
literal|1
decl_stmt|;
name|bool
name|m_allow_oneliner_mode
range|:
literal|1
decl_stmt|;
name|DumpValueObjectOptions
argument_list|()
operator|:
name|m_summary_sp
argument_list|()
operator|,
name|m_root_valobj_name
argument_list|()
operator|,
name|m_use_synthetic
argument_list|(
name|true
argument_list|)
operator|,
name|m_scope_already_checked
argument_list|(
name|false
argument_list|)
operator|,
name|m_flat_output
argument_list|(
name|false
argument_list|)
operator|,
name|m_ignore_cap
argument_list|(
name|false
argument_list|)
operator|,
name|m_show_types
argument_list|(
name|false
argument_list|)
operator|,
name|m_show_location
argument_list|(
name|false
argument_list|)
operator|,
name|m_use_objc
argument_list|(
name|false
argument_list|)
operator|,
name|m_hide_root_type
argument_list|(
name|false
argument_list|)
operator|,
name|m_hide_name
argument_list|(
name|false
argument_list|)
operator|,
name|m_hide_value
argument_list|(
name|false
argument_list|)
operator|,
name|m_run_validator
argument_list|(
name|false
argument_list|)
operator|,
name|m_use_type_display_name
argument_list|(
name|true
argument_list|)
operator|,
name|m_allow_oneliner_mode
argument_list|(
argument|true
argument_list|)
block|{}
specifier|static
specifier|const
name|DumpValueObjectOptions
name|DefaultOptions
argument_list|()
block|{
specifier|static
name|DumpValueObjectOptions
name|g_default_options
block|;
return|return
name|g_default_options
return|;
block|}
name|DumpValueObjectOptions
argument_list|(
specifier|const
name|DumpValueObjectOptions
operator|&
name|rhs
argument_list|)
operator|=
expr|default
expr_stmt|;
name|DumpValueObjectOptions
modifier|&
name|SetMaximumPointerDepth
parameter_list|(
name|uint32_t
name|depth
init|=
literal|0
parameter_list|)
block|{
name|m_max_ptr_depth
operator|=
name|depth
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetMaximumDepth
parameter_list|(
name|uint32_t
name|depth
init|=
literal|0
parameter_list|)
block|{
name|m_max_depth
operator|=
name|depth
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetShowTypes
parameter_list|(
name|bool
name|show
init|=
name|false
parameter_list|)
block|{
name|m_show_types
operator|=
name|show
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetShowLocation
parameter_list|(
name|bool
name|show
init|=
name|false
parameter_list|)
block|{
name|m_show_location
operator|=
name|show
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetUseObjectiveC
parameter_list|(
name|bool
name|use
init|=
name|false
parameter_list|)
block|{
name|m_use_objc
operator|=
name|use
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetShowSummary
parameter_list|(
name|bool
name|show
init|=
name|true
parameter_list|)
block|{
if|if
condition|(
name|show
operator|==
name|false
condition|)
name|SetOmitSummaryDepth
argument_list|(
name|UINT32_MAX
argument_list|)
expr_stmt|;
else|else
name|SetOmitSummaryDepth
argument_list|(
literal|0
argument_list|)
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetUseDynamicType
argument_list|(
name|lldb
operator|::
name|DynamicValueType
name|dyn
operator|=
name|lldb
operator|::
name|eNoDynamicValues
argument_list|)
block|{
name|m_use_dynamic
operator|=
name|dyn
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetUseSyntheticValue
parameter_list|(
name|bool
name|use_synthetic
init|=
name|true
parameter_list|)
block|{
name|m_use_synthetic
operator|=
name|use_synthetic
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetScopeChecked
parameter_list|(
name|bool
name|check
init|=
name|true
parameter_list|)
block|{
name|m_scope_already_checked
operator|=
name|check
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetFlatOutput
parameter_list|(
name|bool
name|flat
init|=
name|false
parameter_list|)
block|{
name|m_flat_output
operator|=
name|flat
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetOmitSummaryDepth
parameter_list|(
name|uint32_t
name|depth
init|=
literal|0
parameter_list|)
block|{
name|m_omit_summary_depth
operator|=
name|depth
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetIgnoreCap
parameter_list|(
name|bool
name|ignore
init|=
name|false
parameter_list|)
block|{
name|m_ignore_cap
operator|=
name|ignore
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetRawDisplay
parameter_list|()
block|{
name|SetUseSyntheticValue
argument_list|(
name|false
argument_list|)
expr_stmt|;
name|SetOmitSummaryDepth
argument_list|(
name|UINT32_MAX
argument_list|)
expr_stmt|;
name|SetIgnoreCap
argument_list|(
name|true
argument_list|)
expr_stmt|;
name|SetHideName
argument_list|(
name|false
argument_list|)
expr_stmt|;
name|SetHideValue
argument_list|(
name|false
argument_list|)
expr_stmt|;
name|SetUseTypeDisplayName
argument_list|(
name|false
argument_list|)
expr_stmt|;
name|SetAllowOnelinerMode
argument_list|(
name|false
argument_list|)
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetFormat
argument_list|(
name|lldb
operator|::
name|Format
name|format
operator|=
name|lldb
operator|::
name|eFormatDefault
argument_list|)
block|{
name|m_format
operator|=
name|format
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetSummary
argument_list|(
name|lldb
operator|::
name|TypeSummaryImplSP
name|summary
operator|=
name|lldb
operator|::
name|TypeSummaryImplSP
argument_list|()
argument_list|)
block|{
name|m_summary_sp
operator|=
name|summary
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetRootValueObjectName
parameter_list|(
specifier|const
name|char
modifier|*
name|name
init|=
name|NULL
parameter_list|)
block|{
if|if
condition|(
name|name
condition|)
name|m_root_valobj_name
operator|.
name|assign
argument_list|(
name|name
argument_list|)
expr_stmt|;
else|else
name|m_root_valobj_name
operator|.
name|clear
argument_list|()
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetHideRootType
parameter_list|(
name|bool
name|hide_root_type
init|=
name|false
parameter_list|)
block|{
name|m_hide_root_type
operator|=
name|hide_root_type
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetHideName
parameter_list|(
name|bool
name|hide_name
init|=
name|false
parameter_list|)
block|{
name|m_hide_name
operator|=
name|hide_name
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetHideValue
parameter_list|(
name|bool
name|hide_value
init|=
name|false
parameter_list|)
block|{
name|m_hide_value
operator|=
name|hide_value
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetRunValidator
parameter_list|(
name|bool
name|run
init|=
name|true
parameter_list|)
block|{
name|m_run_validator
operator|=
name|run
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetUseTypeDisplayName
parameter_list|(
name|bool
name|dis
init|=
name|false
parameter_list|)
block|{
name|m_use_type_display_name
operator|=
name|dis
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
name|DumpValueObjectOptions
modifier|&
name|SetAllowOnelinerMode
parameter_list|(
name|bool
name|oneliner
init|=
name|false
parameter_list|)
block|{
name|m_allow_oneliner_mode
operator|=
name|oneliner
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
block|}
struct|;
name|class
name|ValueObjectPrinter
block|{
name|public
label|:
name|ValueObjectPrinter
argument_list|(
name|ValueObject
operator|*
name|valobj
argument_list|,
name|Stream
operator|*
name|s
argument_list|,
specifier|const
name|DumpValueObjectOptions
operator|&
name|options
argument_list|)
expr_stmt|;
operator|~
name|ValueObjectPrinter
argument_list|()
block|{}
name|bool
name|PrintValueObject
argument_list|()
expr_stmt|;
name|protected
label|:
comment|// only this class (and subclasses, if any) should ever be concerned with
comment|// the depth mechanism
name|ValueObjectPrinter
argument_list|(
argument|ValueObject* valobj
argument_list|,
argument|Stream* s
argument_list|,
argument|const DumpValueObjectOptions& options
argument_list|,
argument|uint32_t ptr_depth
argument_list|,
argument|uint32_t curr_depth
argument_list|)
empty_stmt|;
comment|// we should actually be using delegating constructors here
comment|// but some versions of GCC still have trouble with those
name|void
name|Init
parameter_list|(
name|ValueObject
modifier|*
name|valobj
parameter_list|,
name|Stream
modifier|*
name|s
parameter_list|,
specifier|const
name|DumpValueObjectOptions
modifier|&
name|options
parameter_list|,
name|uint32_t
name|ptr_depth
parameter_list|,
name|uint32_t
name|curr_depth
parameter_list|)
function_decl|;
name|bool
name|GetMostSpecializedValue
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|GetDescriptionForDisplay
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|GetRootNameForDisplay
parameter_list|(
specifier|const
name|char
modifier|*
name|if_fail
init|=
name|nullptr
parameter_list|)
function_decl|;
name|bool
name|ShouldPrintValueObject
parameter_list|()
function_decl|;
name|bool
name|ShouldPrintValidation
parameter_list|()
function_decl|;
name|bool
name|IsNil
parameter_list|()
function_decl|;
name|bool
name|IsPtr
parameter_list|()
function_decl|;
name|bool
name|IsRef
parameter_list|()
function_decl|;
name|bool
name|IsAggregate
parameter_list|()
function_decl|;
name|bool
name|PrintValidationMarkerIfNeeded
parameter_list|()
function_decl|;
name|bool
name|PrintValidationErrorIfNeeded
parameter_list|()
function_decl|;
name|bool
name|PrintLocationIfNeeded
parameter_list|()
function_decl|;
name|bool
name|PrintTypeIfNeeded
parameter_list|()
function_decl|;
name|bool
name|PrintNameIfNeeded
parameter_list|(
name|bool
name|show_type
parameter_list|)
function_decl|;
name|bool
name|CheckScopeIfNeeded
parameter_list|()
function_decl|;
name|TypeSummaryImpl
modifier|*
name|GetSummaryFormatter
parameter_list|()
function_decl|;
name|void
name|GetValueSummaryError
argument_list|(
name|std
operator|::
name|string
operator|&
name|value
argument_list|,
name|std
operator|::
name|string
operator|&
name|summary
argument_list|,
name|std
operator|::
name|string
operator|&
name|error
argument_list|)
decl_stmt|;
name|bool
name|PrintValueAndSummaryIfNeeded
parameter_list|(
name|bool
modifier|&
name|value_printed
parameter_list|,
name|bool
modifier|&
name|summary_printed
parameter_list|)
function_decl|;
name|bool
name|PrintObjectDescriptionIfNeeded
parameter_list|(
name|bool
name|value_printed
parameter_list|,
name|bool
name|summary_printed
parameter_list|)
function_decl|;
name|bool
name|ShouldPrintChildren
parameter_list|(
name|bool
name|is_failed_description
parameter_list|,
name|uint32_t
modifier|&
name|curr_ptr_depth
parameter_list|)
function_decl|;
name|ValueObject
modifier|*
name|GetValueObjectForChildrenGeneration
parameter_list|()
function_decl|;
name|void
name|PrintChildrenPreamble
parameter_list|()
function_decl|;
name|void
name|PrintChildrenPostamble
parameter_list|(
name|bool
name|print_dotdotdot
parameter_list|)
function_decl|;
name|void
name|PrintChild
argument_list|(
name|lldb
operator|::
name|ValueObjectSP
name|child_sp
argument_list|,
name|uint32_t
name|curr_ptr_depth
argument_list|)
decl_stmt|;
name|uint32_t
name|GetMaxNumChildrenToPrint
parameter_list|(
name|bool
modifier|&
name|print_dotdotdot
parameter_list|)
function_decl|;
name|void
name|PrintChildren
parameter_list|(
name|uint32_t
name|curr_ptr_depth
parameter_list|)
function_decl|;
name|void
name|PrintChildrenIfNeeded
parameter_list|(
name|bool
name|value_printed
parameter_list|,
name|bool
name|summary_printed
parameter_list|)
function_decl|;
name|bool
name|PrintChildrenOneLiner
parameter_list|(
name|bool
name|hide_names
parameter_list|)
function_decl|;
name|private
label|:
name|ValueObject
modifier|*
name|m_orig_valobj
decl_stmt|;
name|ValueObject
modifier|*
name|m_valobj
decl_stmt|;
name|Stream
modifier|*
name|m_stream
decl_stmt|;
name|DumpValueObjectOptions
name|options
decl_stmt|;
name|Flags
name|m_type_flags
decl_stmt|;
name|ClangASTType
name|m_clang_type
decl_stmt|;
name|uint32_t
name|m_ptr_depth
decl_stmt|;
name|uint32_t
name|m_curr_depth
decl_stmt|;
name|LazyBool
name|m_should_print
decl_stmt|;
name|LazyBool
name|m_is_nil
decl_stmt|;
name|LazyBool
name|m_is_ptr
decl_stmt|;
name|LazyBool
name|m_is_ref
decl_stmt|;
name|LazyBool
name|m_is_aggregate
decl_stmt|;
name|std
operator|::
name|pair
operator|<
name|TypeSummaryImpl
operator|*
operator|,
name|bool
operator|>
name|m_summary_formatter
expr_stmt|;
name|std
operator|::
name|string
name|m_value
expr_stmt|;
name|std
operator|::
name|string
name|m_summary
expr_stmt|;
name|std
operator|::
name|string
name|m_error
expr_stmt|;
name|std
operator|::
name|pair
operator|<
name|TypeValidatorResult
operator|,
name|std
operator|::
name|string
operator|>
name|m_validation
expr_stmt|;
name|friend
struct_decl|struct
name|StringSummaryFormat
struct_decl|;
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|ValueObjectPrinter
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt

begin_comment
comment|// namespace lldb_private
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// lldb_ValueObjectPrinter_h_
end_comment

end_unit

