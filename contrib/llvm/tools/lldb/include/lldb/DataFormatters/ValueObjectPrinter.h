begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- ValueObjectPrinter.h ---------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|lldb_ValueObjectPrinter_h_
end_ifndef

begin_define
define|#
directive|define
name|lldb_ValueObjectPrinter_h_
end_define

begin_comment
comment|// C Includes
end_comment

begin_comment
comment|// C++ Includes
end_comment

begin_comment
comment|// Other libraries and framework includes
end_comment

begin_comment
comment|// Project includes
end_comment

begin_include
include|#
directive|include
file|"lldb/lldb-private.h"
end_include

begin_include
include|#
directive|include
file|"lldb/lldb-public.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Core/Flags.h"
end_include

begin_include
include|#
directive|include
file|"lldb/DataFormatters/DumpValueObjectOptions.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Symbol/CompilerType.h"
end_include

begin_comment
comment|//#include<functional>
end_comment

begin_comment
comment|//#include<memory>
end_comment

begin_comment
comment|//#include<set>
end_comment

begin_decl_stmt
name|namespace
name|lldb_private
block|{
name|class
name|ValueObjectPrinter
block|{
name|public
label|:
name|ValueObjectPrinter
argument_list|(
name|ValueObject
operator|*
name|valobj
argument_list|,
name|Stream
operator|*
name|s
argument_list|)
expr_stmt|;
name|ValueObjectPrinter
argument_list|(
name|ValueObject
operator|*
name|valobj
argument_list|,
name|Stream
operator|*
name|s
argument_list|,
specifier|const
name|DumpValueObjectOptions
operator|&
name|options
argument_list|)
expr_stmt|;
operator|~
name|ValueObjectPrinter
argument_list|()
block|{}
name|bool
name|PrintValueObject
argument_list|()
expr_stmt|;
name|protected
label|:
typedef|typedef
name|std
operator|::
name|set
operator|<
name|uint64_t
operator|>
name|InstancePointersSet
expr_stmt|;
typedef|typedef
name|std
operator|::
name|shared_ptr
operator|<
name|InstancePointersSet
operator|>
name|InstancePointersSetSP
expr_stmt|;
name|InstancePointersSetSP
name|m_printed_instance_pointers
decl_stmt|;
comment|// only this class (and subclasses, if any) should ever be concerned with
comment|// the depth mechanism
name|ValueObjectPrinter
argument_list|(
argument|ValueObject* valobj
argument_list|,
argument|Stream* s
argument_list|,
argument|const DumpValueObjectOptions& options
argument_list|,
argument|const DumpValueObjectOptions::PointerDepth& ptr_depth
argument_list|,
argument|uint32_t curr_depth
argument_list|,
argument|InstancePointersSetSP printed_instance_pointers
argument_list|)
empty_stmt|;
comment|// we should actually be using delegating constructors here
comment|// but some versions of GCC still have trouble with those
name|void
name|Init
argument_list|(
name|ValueObject
operator|*
name|valobj
argument_list|,
name|Stream
operator|*
name|s
argument_list|,
specifier|const
name|DumpValueObjectOptions
operator|&
name|options
argument_list|,
specifier|const
name|DumpValueObjectOptions
operator|::
name|PointerDepth
operator|&
name|ptr_depth
argument_list|,
name|uint32_t
name|curr_depth
argument_list|,
name|InstancePointersSetSP
name|printed_instance_pointers
argument_list|)
decl_stmt|;
name|bool
name|GetMostSpecializedValue
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|GetDescriptionForDisplay
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|GetRootNameForDisplay
parameter_list|(
specifier|const
name|char
modifier|*
name|if_fail
init|=
name|nullptr
parameter_list|)
function_decl|;
name|bool
name|ShouldPrintValueObject
parameter_list|()
function_decl|;
name|bool
name|ShouldPrintValidation
parameter_list|()
function_decl|;
name|bool
name|IsNil
parameter_list|()
function_decl|;
name|bool
name|IsUninitialized
parameter_list|()
function_decl|;
name|bool
name|IsPtr
parameter_list|()
function_decl|;
name|bool
name|IsRef
parameter_list|()
function_decl|;
name|bool
name|IsInstancePointer
parameter_list|()
function_decl|;
name|bool
name|IsAggregate
parameter_list|()
function_decl|;
name|bool
name|PrintValidationMarkerIfNeeded
parameter_list|()
function_decl|;
name|bool
name|PrintValidationErrorIfNeeded
parameter_list|()
function_decl|;
name|bool
name|PrintLocationIfNeeded
parameter_list|()
function_decl|;
name|void
name|PrintDecl
parameter_list|()
function_decl|;
name|bool
name|CheckScopeIfNeeded
parameter_list|()
function_decl|;
name|bool
name|ShouldPrintEmptyBrackets
parameter_list|(
name|bool
name|value_printed
parameter_list|,
name|bool
name|summary_printed
parameter_list|)
function_decl|;
name|TypeSummaryImpl
modifier|*
name|GetSummaryFormatter
parameter_list|(
name|bool
name|null_if_omitted
init|=
name|true
parameter_list|)
function_decl|;
name|void
name|GetValueSummaryError
argument_list|(
name|std
operator|::
name|string
operator|&
name|value
argument_list|,
name|std
operator|::
name|string
operator|&
name|summary
argument_list|,
name|std
operator|::
name|string
operator|&
name|error
argument_list|)
decl_stmt|;
name|bool
name|PrintValueAndSummaryIfNeeded
parameter_list|(
name|bool
modifier|&
name|value_printed
parameter_list|,
name|bool
modifier|&
name|summary_printed
parameter_list|)
function_decl|;
name|bool
name|PrintObjectDescriptionIfNeeded
parameter_list|(
name|bool
name|value_printed
parameter_list|,
name|bool
name|summary_printed
parameter_list|)
function_decl|;
name|bool
name|ShouldPrintChildren
argument_list|(
name|bool
name|is_failed_description
argument_list|,
name|DumpValueObjectOptions
operator|::
name|PointerDepth
operator|&
name|curr_ptr_depth
argument_list|)
decl_stmt|;
name|bool
name|ShouldExpandEmptyAggregates
parameter_list|()
function_decl|;
name|ValueObject
modifier|*
name|GetValueObjectForChildrenGeneration
parameter_list|()
function_decl|;
name|void
name|PrintChildrenPreamble
parameter_list|()
function_decl|;
name|void
name|PrintChildrenPostamble
parameter_list|(
name|bool
name|print_dotdotdot
parameter_list|)
function_decl|;
name|lldb
operator|::
name|ValueObjectSP
name|GenerateChild
argument_list|(
argument|ValueObject* synth_valobj
argument_list|,
argument|size_t idx
argument_list|)
expr_stmt|;
name|void
name|PrintChild
argument_list|(
name|lldb
operator|::
name|ValueObjectSP
name|child_sp
argument_list|,
specifier|const
name|DumpValueObjectOptions
operator|::
name|PointerDepth
operator|&
name|curr_ptr_depth
argument_list|)
decl_stmt|;
name|uint32_t
name|GetMaxNumChildrenToPrint
parameter_list|(
name|bool
modifier|&
name|print_dotdotdot
parameter_list|)
function_decl|;
name|void
name|PrintChildren
argument_list|(
name|bool
name|value_printed
argument_list|,
name|bool
name|summary_printed
argument_list|,
specifier|const
name|DumpValueObjectOptions
operator|::
name|PointerDepth
operator|&
name|curr_ptr_depth
argument_list|)
decl_stmt|;
name|void
name|PrintChildrenIfNeeded
parameter_list|(
name|bool
name|value_printed
parameter_list|,
name|bool
name|summary_printed
parameter_list|)
function_decl|;
name|bool
name|PrintChildrenOneLiner
parameter_list|(
name|bool
name|hide_names
parameter_list|)
function_decl|;
name|private
label|:
name|ValueObject
modifier|*
name|m_orig_valobj
decl_stmt|;
name|ValueObject
modifier|*
name|m_valobj
decl_stmt|;
name|Stream
modifier|*
name|m_stream
decl_stmt|;
name|DumpValueObjectOptions
name|m_options
decl_stmt|;
name|Flags
name|m_type_flags
decl_stmt|;
name|CompilerType
name|m_compiler_type
decl_stmt|;
name|DumpValueObjectOptions
operator|::
name|PointerDepth
name|m_ptr_depth
expr_stmt|;
name|uint32_t
name|m_curr_depth
decl_stmt|;
name|LazyBool
name|m_should_print
decl_stmt|;
name|LazyBool
name|m_is_nil
decl_stmt|;
name|LazyBool
name|m_is_uninit
decl_stmt|;
name|LazyBool
name|m_is_ptr
decl_stmt|;
name|LazyBool
name|m_is_ref
decl_stmt|;
name|LazyBool
name|m_is_aggregate
decl_stmt|;
name|LazyBool
name|m_is_instance_ptr
decl_stmt|;
name|std
operator|::
name|pair
operator|<
name|TypeSummaryImpl
operator|*
operator|,
name|bool
operator|>
name|m_summary_formatter
expr_stmt|;
name|std
operator|::
name|string
name|m_value
expr_stmt|;
name|std
operator|::
name|string
name|m_summary
expr_stmt|;
name|std
operator|::
name|string
name|m_error
expr_stmt|;
name|bool
name|m_val_summary_ok
decl_stmt|;
name|std
operator|::
name|pair
operator|<
name|TypeValidatorResult
operator|,
name|std
operator|::
name|string
operator|>
name|m_validation
expr_stmt|;
name|friend
struct_decl|struct
name|StringSummaryFormat
struct_decl|;
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|ValueObjectPrinter
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt

begin_comment
comment|// namespace lldb_private
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// lldb_ValueObjectPrinter_h_
end_comment

end_unit

