begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- DumpValueObjectOptions.h --------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|lldb_DumpValueObjectOptions_h_
end_ifndef

begin_define
define|#
directive|define
name|lldb_DumpValueObjectOptions_h_
end_define

begin_comment
comment|// C Includes
end_comment

begin_comment
comment|// C++ Includes
end_comment

begin_include
include|#
directive|include
file|<string>
end_include

begin_comment
comment|// Other libraries and framework includes
end_comment

begin_comment
comment|// Project includes
end_comment

begin_include
include|#
directive|include
file|"lldb/lldb-private.h"
end_include

begin_include
include|#
directive|include
file|"lldb/lldb-public.h"
end_include

begin_include
include|#
directive|include
file|<functional>
end_include

begin_include
include|#
directive|include
file|<string>
end_include

begin_decl_stmt
name|namespace
name|lldb_private
block|{
name|class
name|DumpValueObjectOptions
block|{
name|public
label|:
struct|struct
name|PointerDepth
block|{
name|enum
name|class
name|Mode
block|{
name|Always
operator|,
name|Default
operator|,
name|Never
block|}
name|m_mode
expr_stmt|;
name|uint32_t
name|m_count
decl_stmt|;
name|PointerDepth
name|operator
operator|--
operator|(
operator|)
specifier|const
block|{
if|if
condition|(
name|m_count
operator|>
literal|0
condition|)
return|return
name|PointerDepth
block|{
name|m_mode
block|,
name|m_count
operator|-
literal|1
block|}
return|;
return|return
name|PointerDepth
block|{
name|m_mode
block|,
name|m_count
block|}
return|;
block|}
name|bool
name|CanAllowExpansion
argument_list|()
decl|const
struct|;
block|}
empty_stmt|;
struct|struct
name|PointerAsArraySettings
block|{
name|size_t
name|m_element_count
decl_stmt|;
name|size_t
name|m_base_element
decl_stmt|;
name|size_t
name|m_stride
decl_stmt|;
name|PointerAsArraySettings
argument_list|()
operator|:
name|m_element_count
argument_list|(
literal|0
argument_list|)
operator|,
name|m_base_element
argument_list|(
literal|0
argument_list|)
operator|,
name|m_stride
argument_list|()
block|{}
name|PointerAsArraySettings
argument_list|(
argument|size_t elem_count
argument_list|,
argument|size_t base_elem =
literal|0
argument_list|,
argument|size_t stride =
literal|1
argument_list|)
operator|:
name|m_element_count
argument_list|(
name|elem_count
argument_list|)
operator|,
name|m_base_element
argument_list|(
name|base_elem
argument_list|)
operator|,
name|m_stride
argument_list|(
argument|stride
argument_list|)
block|{}
name|operator
name|bool
argument_list|()
block|{
return|return
name|m_element_count
operator|>
literal|0
return|;
block|}
block|}
struct|;
typedef|typedef
name|std
operator|::
name|function
operator|<
name|bool
argument_list|(
name|ConstString
argument_list|,
name|ConstString
argument_list|,
specifier|const
name|DumpValueObjectOptions
operator|&
argument_list|,
name|Stream
operator|&
argument_list|)
operator|>
name|DeclPrintingHelper
expr_stmt|;
specifier|static
specifier|const
name|DumpValueObjectOptions
name|DefaultOptions
parameter_list|()
block|{
specifier|static
name|DumpValueObjectOptions
name|g_default_options
decl_stmt|;
return|return
name|g_default_options
return|;
block|}
name|DumpValueObjectOptions
argument_list|()
expr_stmt|;
name|DumpValueObjectOptions
argument_list|(
specifier|const
name|DumpValueObjectOptions
operator|&
name|rhs
argument_list|)
operator|=
expr|default
expr_stmt|;
name|DumpValueObjectOptions
argument_list|(
name|ValueObject
operator|&
name|valobj
argument_list|)
expr_stmt|;
name|DumpValueObjectOptions
modifier|&
name|SetMaximumPointerDepth
argument_list|(
name|PointerDepth
name|depth
operator|=
block|{
name|PointerDepth
operator|::
name|Mode
operator|::
name|Never
block|,
literal|0
block|}
argument_list|)
decl_stmt|;
name|DumpValueObjectOptions
modifier|&
name|SetMaximumDepth
parameter_list|(
name|uint32_t
name|depth
init|=
literal|0
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetDeclPrintingHelper
parameter_list|(
name|DeclPrintingHelper
name|helper
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetShowTypes
parameter_list|(
name|bool
name|show
init|=
name|false
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetShowLocation
parameter_list|(
name|bool
name|show
init|=
name|false
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetUseObjectiveC
parameter_list|(
name|bool
name|use
init|=
name|false
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetShowSummary
parameter_list|(
name|bool
name|show
init|=
name|true
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetUseDynamicType
argument_list|(
name|lldb
operator|::
name|DynamicValueType
name|dyn
operator|=
name|lldb
operator|::
name|eNoDynamicValues
argument_list|)
decl_stmt|;
name|DumpValueObjectOptions
modifier|&
name|SetUseSyntheticValue
parameter_list|(
name|bool
name|use_synthetic
init|=
name|true
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetScopeChecked
parameter_list|(
name|bool
name|check
init|=
name|true
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetFlatOutput
parameter_list|(
name|bool
name|flat
init|=
name|false
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetOmitSummaryDepth
parameter_list|(
name|uint32_t
name|depth
init|=
literal|0
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetIgnoreCap
parameter_list|(
name|bool
name|ignore
init|=
name|false
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetRawDisplay
parameter_list|()
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetFormat
argument_list|(
name|lldb
operator|::
name|Format
name|format
operator|=
name|lldb
operator|::
name|eFormatDefault
argument_list|)
decl_stmt|;
name|DumpValueObjectOptions
modifier|&
name|SetSummary
argument_list|(
name|lldb
operator|::
name|TypeSummaryImplSP
name|summary
operator|=
name|lldb
operator|::
name|TypeSummaryImplSP
argument_list|()
argument_list|)
decl_stmt|;
name|DumpValueObjectOptions
modifier|&
name|SetRootValueObjectName
parameter_list|(
specifier|const
name|char
modifier|*
name|name
init|=
name|nullptr
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetHideRootType
parameter_list|(
name|bool
name|hide_root_type
init|=
name|false
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetHideName
parameter_list|(
name|bool
name|hide_name
init|=
name|false
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetHideValue
parameter_list|(
name|bool
name|hide_value
init|=
name|false
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetHidePointerValue
parameter_list|(
name|bool
name|hide
init|=
name|false
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetVariableFormatDisplayLanguage
argument_list|(
name|lldb
operator|::
name|LanguageType
name|lang
operator|=
name|lldb
operator|::
name|eLanguageTypeUnknown
argument_list|)
decl_stmt|;
name|DumpValueObjectOptions
modifier|&
name|SetRunValidator
parameter_list|(
name|bool
name|run
init|=
name|true
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetUseTypeDisplayName
parameter_list|(
name|bool
name|dis
init|=
name|false
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetAllowOnelinerMode
parameter_list|(
name|bool
name|oneliner
init|=
name|false
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetRevealEmptyAggregates
parameter_list|(
name|bool
name|reveal
init|=
name|true
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetElementCount
parameter_list|(
name|uint32_t
name|element_count
init|=
literal|0
parameter_list|)
function_decl|;
name|DumpValueObjectOptions
modifier|&
name|SetPointerAsArray
parameter_list|(
specifier|const
name|PointerAsArraySettings
modifier|&
name|ptr_array
parameter_list|)
function_decl|;
name|public
label|:
name|uint32_t
name|m_max_depth
init|=
name|UINT32_MAX
decl_stmt|;
name|lldb
operator|::
name|DynamicValueType
name|m_use_dynamic
operator|=
name|lldb
operator|::
name|eNoDynamicValues
expr_stmt|;
name|uint32_t
name|m_omit_summary_depth
init|=
literal|0
decl_stmt|;
name|lldb
operator|::
name|Format
name|m_format
operator|=
name|lldb
operator|::
name|eFormatDefault
expr_stmt|;
name|lldb
operator|::
name|TypeSummaryImplSP
name|m_summary_sp
expr_stmt|;
name|std
operator|::
name|string
name|m_root_valobj_name
expr_stmt|;
name|lldb
operator|::
name|LanguageType
name|m_varformat_language
operator|=
name|lldb
operator|::
name|eLanguageTypeUnknown
expr_stmt|;
name|PointerDepth
name|m_max_ptr_depth
decl_stmt|;
name|DeclPrintingHelper
name|m_decl_printing_helper
decl_stmt|;
name|PointerAsArraySettings
name|m_pointer_as_array
decl_stmt|;
name|bool
name|m_use_synthetic
range|:
literal|1
decl_stmt|;
name|bool
name|m_scope_already_checked
range|:
literal|1
decl_stmt|;
name|bool
name|m_flat_output
range|:
literal|1
decl_stmt|;
name|bool
name|m_ignore_cap
range|:
literal|1
decl_stmt|;
name|bool
name|m_show_types
range|:
literal|1
decl_stmt|;
name|bool
name|m_show_location
range|:
literal|1
decl_stmt|;
name|bool
name|m_use_objc
range|:
literal|1
decl_stmt|;
name|bool
name|m_hide_root_type
range|:
literal|1
decl_stmt|;
name|bool
name|m_hide_name
range|:
literal|1
decl_stmt|;
name|bool
name|m_hide_value
range|:
literal|1
decl_stmt|;
name|bool
name|m_run_validator
range|:
literal|1
decl_stmt|;
name|bool
name|m_use_type_display_name
range|:
literal|1
decl_stmt|;
name|bool
name|m_allow_oneliner_mode
range|:
literal|1
decl_stmt|;
name|bool
name|m_hide_pointer_value
range|:
literal|1
decl_stmt|;
name|bool
name|m_reveal_empty_aggregates
range|:
literal|1
decl_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_comment
unit|}
comment|// namespace lldb_private
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// lldb_DumpValueObjectOptions_h_
end_comment

end_unit

