begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- SBPlatform.h --------------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLDB_SBPlatform_h_
end_ifndef

begin_define
define|#
directive|define
name|LLDB_SBPlatform_h_
end_define

begin_include
include|#
directive|include
file|"lldb/API/SBDefines.h"
end_include

begin_include
include|#
directive|include
file|<functional>
end_include

begin_struct_decl
struct_decl|struct
name|PlatformConnectOptions
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|PlatformShellCommand
struct_decl|;
end_struct_decl

begin_decl_stmt
name|namespace
name|lldb
block|{
name|class
name|SBLaunchInfo
decl_stmt|;
name|class
name|LLDB_API
name|SBPlatformConnectOptions
block|{
name|public
label|:
name|SBPlatformConnectOptions
argument_list|(
specifier|const
name|char
operator|*
name|url
argument_list|)
expr_stmt|;
name|SBPlatformConnectOptions
argument_list|(
specifier|const
name|SBPlatformConnectOptions
operator|&
name|rhs
argument_list|)
expr_stmt|;
operator|~
name|SBPlatformConnectOptions
argument_list|()
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|SBPlatformConnectOptions
operator|&
name|rhs
operator|)
decl_stmt|;
specifier|const
name|char
modifier|*
name|GetURL
parameter_list|()
function_decl|;
name|void
name|SetURL
parameter_list|(
specifier|const
name|char
modifier|*
name|url
parameter_list|)
function_decl|;
name|bool
name|GetRsyncEnabled
parameter_list|()
function_decl|;
name|void
name|EnableRsync
parameter_list|(
specifier|const
name|char
modifier|*
name|options
parameter_list|,
specifier|const
name|char
modifier|*
name|remote_path_prefix
parameter_list|,
name|bool
name|omit_remote_hostname
parameter_list|)
function_decl|;
name|void
name|DisableRsync
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|GetLocalCacheDirectory
parameter_list|()
function_decl|;
name|void
name|SetLocalCacheDirectory
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|)
function_decl|;
name|protected
label|:
name|PlatformConnectOptions
modifier|*
name|m_opaque_ptr
decl_stmt|;
block|}
empty_stmt|;
name|class
name|LLDB_API
name|SBPlatformShellCommand
block|{
name|public
label|:
name|SBPlatformShellCommand
argument_list|(
specifier|const
name|char
operator|*
name|shell_command
argument_list|)
expr_stmt|;
name|SBPlatformShellCommand
argument_list|(
specifier|const
name|SBPlatformShellCommand
operator|&
name|rhs
argument_list|)
expr_stmt|;
operator|~
name|SBPlatformShellCommand
argument_list|()
expr_stmt|;
name|void
name|Clear
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|GetCommand
parameter_list|()
function_decl|;
name|void
name|SetCommand
parameter_list|(
specifier|const
name|char
modifier|*
name|shell_command
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
name|GetWorkingDirectory
parameter_list|()
function_decl|;
name|void
name|SetWorkingDirectory
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|)
function_decl|;
name|uint32_t
name|GetTimeoutSeconds
parameter_list|()
function_decl|;
name|void
name|SetTimeoutSeconds
parameter_list|(
name|uint32_t
name|sec
parameter_list|)
function_decl|;
name|int
name|GetSignal
parameter_list|()
function_decl|;
name|int
name|GetStatus
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|GetOutput
parameter_list|()
function_decl|;
name|protected
label|:
name|friend
name|class
name|SBPlatform
decl_stmt|;
name|PlatformShellCommand
modifier|*
name|m_opaque_ptr
decl_stmt|;
block|}
empty_stmt|;
name|class
name|LLDB_API
name|SBPlatform
block|{
name|public
label|:
name|SBPlatform
argument_list|()
expr_stmt|;
name|SBPlatform
argument_list|(
specifier|const
name|char
operator|*
name|platform_name
argument_list|)
expr_stmt|;
operator|~
name|SBPlatform
argument_list|()
expr_stmt|;
name|bool
name|IsValid
argument_list|()
specifier|const
expr_stmt|;
name|void
name|Clear
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|GetWorkingDirectory
parameter_list|()
function_decl|;
name|bool
name|SetWorkingDirectory
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
name|GetName
parameter_list|()
function_decl|;
name|SBError
name|ConnectRemote
parameter_list|(
name|SBPlatformConnectOptions
modifier|&
name|connect_options
parameter_list|)
function_decl|;
name|void
name|DisconnectRemote
parameter_list|()
function_decl|;
name|bool
name|IsConnected
parameter_list|()
function_decl|;
comment|//----------------------------------------------------------------------
comment|// The following functions will work if the platform is connected
comment|//----------------------------------------------------------------------
specifier|const
name|char
modifier|*
name|GetTriple
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|GetHostname
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|GetOSBuild
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|GetOSDescription
parameter_list|()
function_decl|;
name|uint32_t
name|GetOSMajorVersion
parameter_list|()
function_decl|;
name|uint32_t
name|GetOSMinorVersion
parameter_list|()
function_decl|;
name|uint32_t
name|GetOSUpdateVersion
parameter_list|()
function_decl|;
name|SBError
name|Put
parameter_list|(
name|SBFileSpec
modifier|&
name|src
parameter_list|,
name|SBFileSpec
modifier|&
name|dst
parameter_list|)
function_decl|;
name|SBError
name|Get
parameter_list|(
name|SBFileSpec
modifier|&
name|src
parameter_list|,
name|SBFileSpec
modifier|&
name|dst
parameter_list|)
function_decl|;
name|SBError
name|Install
parameter_list|(
name|SBFileSpec
modifier|&
name|src
parameter_list|,
name|SBFileSpec
modifier|&
name|dst
parameter_list|)
function_decl|;
name|SBError
name|Run
parameter_list|(
name|SBPlatformShellCommand
modifier|&
name|shell_command
parameter_list|)
function_decl|;
name|SBError
name|Launch
parameter_list|(
name|SBLaunchInfo
modifier|&
name|launch_info
parameter_list|)
function_decl|;
name|SBError
name|Kill
argument_list|(
specifier|const
name|lldb
operator|::
name|pid_t
name|pid
argument_list|)
decl_stmt|;
name|SBError
name|MakeDirectory
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|uint32_t
name|file_permissions
init|=
name|eFilePermissionsDirectoryDefault
parameter_list|)
function_decl|;
name|uint32_t
name|GetFilePermissions
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|)
function_decl|;
name|SBError
name|SetFilePermissions
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|uint32_t
name|file_permissions
parameter_list|)
function_decl|;
name|protected
label|:
name|friend
name|class
name|SBDebugger
decl_stmt|;
name|friend
name|class
name|SBTarget
decl_stmt|;
name|lldb
operator|::
name|PlatformSP
name|GetSP
argument_list|()
specifier|const
expr_stmt|;
name|void
name|SetSP
argument_list|(
specifier|const
name|lldb
operator|::
name|PlatformSP
operator|&
name|platform_sp
argument_list|)
decl_stmt|;
name|SBError
name|ExecuteConnected
argument_list|(
specifier|const
name|std
operator|::
name|function
operator|<
name|lldb_private
operator|::
name|Error
argument_list|(
specifier|const
name|lldb
operator|::
name|PlatformSP
operator|&
argument_list|)
operator|>
operator|&
name|func
argument_list|)
decl_stmt|;
name|lldb
operator|::
name|PlatformSP
name|m_opaque_sp
expr_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt

begin_comment
comment|// namespace lldb
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// LLDB_SBPlatform_h_
end_comment

end_unit

