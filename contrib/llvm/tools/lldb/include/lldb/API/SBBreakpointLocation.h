begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- SBBreakpointLocation.h ----------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLDB_SBBreakpointLocation_h_
end_ifndef

begin_define
define|#
directive|define
name|LLDB_SBBreakpointLocation_h_
end_define

begin_include
include|#
directive|include
file|"lldb/API/SBDefines.h"
end_include

begin_include
include|#
directive|include
file|"lldb/API/SBBreakpoint.h"
end_include

begin_decl_stmt
name|namespace
name|lldb
block|{
name|class
name|SBBreakpointLocation
block|{
name|public
label|:
name|SBBreakpointLocation
argument_list|()
expr_stmt|;
name|SBBreakpointLocation
argument_list|(
specifier|const
name|lldb
operator|::
name|SBBreakpointLocation
operator|&
name|rhs
argument_list|)
expr_stmt|;
operator|~
name|SBBreakpointLocation
argument_list|()
expr_stmt|;
specifier|const
name|lldb
operator|::
name|SBBreakpointLocation
operator|&
name|operator
operator|=
operator|(
specifier|const
name|lldb
operator|::
name|SBBreakpointLocation
operator|&
name|rhs
operator|)
expr_stmt|;
name|break_id_t
name|GetID
parameter_list|()
function_decl|;
name|bool
name|IsValid
argument_list|()
specifier|const
expr_stmt|;
name|lldb
operator|::
name|SBAddress
name|GetAddress
argument_list|()
expr_stmt|;
name|lldb
operator|::
name|addr_t
name|GetLoadAddress
argument_list|()
expr_stmt|;
name|void
name|SetEnabled
parameter_list|(
name|bool
name|enabled
parameter_list|)
function_decl|;
name|bool
name|IsEnabled
parameter_list|()
function_decl|;
name|uint32_t
name|GetIgnoreCount
parameter_list|()
function_decl|;
name|void
name|SetIgnoreCount
parameter_list|(
name|uint32_t
name|n
parameter_list|)
function_decl|;
name|void
name|SetCondition
parameter_list|(
specifier|const
name|char
modifier|*
name|condition
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
name|GetCondition
parameter_list|()
function_decl|;
name|void
name|SetScriptCallbackFunction
parameter_list|(
specifier|const
name|char
modifier|*
name|callback_function_name
parameter_list|)
function_decl|;
name|SBError
name|SetScriptCallbackBody
parameter_list|(
specifier|const
name|char
modifier|*
name|script_body_text
parameter_list|)
function_decl|;
name|void
name|SetThreadID
argument_list|(
name|lldb
operator|::
name|tid_t
name|sb_thread_id
argument_list|)
decl_stmt|;
name|lldb
operator|::
name|tid_t
name|GetThreadID
argument_list|()
expr_stmt|;
name|void
name|SetThreadIndex
parameter_list|(
name|uint32_t
name|index
parameter_list|)
function_decl|;
name|uint32_t
name|GetThreadIndex
argument_list|()
specifier|const
expr_stmt|;
name|void
name|SetThreadName
parameter_list|(
specifier|const
name|char
modifier|*
name|thread_name
parameter_list|)
function_decl|;
specifier|const
name|char
operator|*
name|GetThreadName
argument_list|()
specifier|const
expr_stmt|;
name|void
name|SetQueueName
parameter_list|(
specifier|const
name|char
modifier|*
name|queue_name
parameter_list|)
function_decl|;
specifier|const
name|char
operator|*
name|GetQueueName
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|IsResolved
parameter_list|()
function_decl|;
name|bool
name|GetDescription
argument_list|(
name|lldb
operator|::
name|SBStream
operator|&
name|description
argument_list|,
name|DescriptionLevel
name|level
argument_list|)
decl_stmt|;
name|SBBreakpoint
name|GetBreakpoint
parameter_list|()
function_decl|;
name|SBBreakpointLocation
argument_list|(
specifier|const
name|lldb
operator|::
name|BreakpointLocationSP
operator|&
name|break_loc_sp
argument_list|)
expr_stmt|;
name|private
label|:
name|friend
name|class
name|SBBreakpoint
decl_stmt|;
ifndef|#
directive|ifndef
name|LLDB_DISABLE_PYTHON
name|friend
name|class
name|lldb_private
operator|::
name|ScriptInterpreterPython
expr_stmt|;
endif|#
directive|endif
name|void
name|SetLocation
argument_list|(
specifier|const
name|lldb
operator|::
name|BreakpointLocationSP
operator|&
name|break_loc_sp
argument_list|)
decl_stmt|;
name|lldb
operator|::
name|BreakpointLocationSP
name|m_opaque_sp
expr_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt

begin_comment
comment|// namespace lldb
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// LLDB_SBBreakpointLocation_h_
end_comment

end_unit

