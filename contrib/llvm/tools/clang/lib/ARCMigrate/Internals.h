begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- Internals.h - Implementation Details---------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_CLANG_LIB_ARCMIGRATE_INTERNALS_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_CLANG_LIB_ARCMIGRATE_INTERNALS_H
end_define

begin_include
include|#
directive|include
file|"clang/ARCMigrate/ARCMT.h"
end_include

begin_include
include|#
directive|include
file|"clang/Basic/Diagnostic.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/ArrayRef.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/Optional.h"
end_include

begin_include
include|#
directive|include
file|<list>
end_include

begin_decl_stmt
name|namespace
name|clang
block|{
name|class
name|Sema
decl_stmt|;
name|class
name|Stmt
decl_stmt|;
name|namespace
name|arcmt
block|{
name|class
name|CapturedDiagList
block|{
typedef|typedef
name|std
operator|::
name|list
operator|<
name|StoredDiagnostic
operator|>
name|ListTy
expr_stmt|;
name|ListTy
name|List
decl_stmt|;
name|public
label|:
name|void
name|push_back
parameter_list|(
specifier|const
name|StoredDiagnostic
modifier|&
name|diag
parameter_list|)
block|{
name|List
operator|.
name|push_back
argument_list|(
name|diag
argument_list|)
expr_stmt|;
block|}
name|bool
name|clearDiagnostic
argument_list|(
name|ArrayRef
operator|<
name|unsigned
operator|>
name|IDs
argument_list|,
name|SourceRange
name|range
argument_list|)
decl_stmt|;
name|bool
name|hasDiagnostic
argument_list|(
name|ArrayRef
operator|<
name|unsigned
operator|>
name|IDs
argument_list|,
name|SourceRange
name|range
argument_list|)
decl|const
decl_stmt|;
name|void
name|reportDiagnostics
argument_list|(
name|DiagnosticsEngine
operator|&
name|diags
argument_list|)
decl|const
decl_stmt|;
name|bool
name|hasErrors
argument_list|()
specifier|const
expr_stmt|;
typedef|typedef
name|ListTy
operator|::
name|const_iterator
name|iterator
expr_stmt|;
name|iterator
name|begin
argument_list|()
specifier|const
block|{
return|return
name|List
operator|.
name|begin
argument_list|()
return|;
block|}
name|iterator
name|end
argument_list|()
specifier|const
block|{
return|return
name|List
operator|.
name|end
argument_list|()
return|;
block|}
block|}
empty_stmt|;
name|void
name|writeARCDiagsToPlist
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|outPath
argument_list|,
name|ArrayRef
operator|<
name|StoredDiagnostic
operator|>
name|diags
argument_list|,
name|SourceManager
operator|&
name|SM
argument_list|,
specifier|const
name|LangOptions
operator|&
name|LangOpts
argument_list|)
decl_stmt|;
name|class
name|TransformActions
block|{
name|DiagnosticsEngine
modifier|&
name|Diags
decl_stmt|;
name|CapturedDiagList
modifier|&
name|CapturedDiags
decl_stmt|;
name|void
modifier|*
name|Impl
decl_stmt|;
comment|// TransformActionsImpl.
name|public
label|:
name|TransformActions
argument_list|(
name|DiagnosticsEngine
operator|&
name|diag
argument_list|,
name|CapturedDiagList
operator|&
name|capturedDiags
argument_list|,
name|ASTContext
operator|&
name|ctx
argument_list|,
name|Preprocessor
operator|&
name|PP
argument_list|)
expr_stmt|;
operator|~
name|TransformActions
argument_list|()
expr_stmt|;
name|void
name|startTransaction
parameter_list|()
function_decl|;
name|bool
name|commitTransaction
parameter_list|()
function_decl|;
name|void
name|abortTransaction
parameter_list|()
function_decl|;
name|void
name|insert
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|StringRef
name|text
parameter_list|)
function_decl|;
name|void
name|insertAfterToken
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|StringRef
name|text
parameter_list|)
function_decl|;
name|void
name|remove
parameter_list|(
name|SourceRange
name|range
parameter_list|)
function_decl|;
name|void
name|removeStmt
parameter_list|(
name|Stmt
modifier|*
name|S
parameter_list|)
function_decl|;
name|void
name|replace
parameter_list|(
name|SourceRange
name|range
parameter_list|,
name|StringRef
name|text
parameter_list|)
function_decl|;
name|void
name|replace
parameter_list|(
name|SourceRange
name|range
parameter_list|,
name|SourceRange
name|replacementRange
parameter_list|)
function_decl|;
name|void
name|replaceStmt
parameter_list|(
name|Stmt
modifier|*
name|S
parameter_list|,
name|StringRef
name|text
parameter_list|)
function_decl|;
name|void
name|replaceText
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|StringRef
name|text
parameter_list|,
name|StringRef
name|replacementText
parameter_list|)
function_decl|;
name|void
name|increaseIndentation
parameter_list|(
name|SourceRange
name|range
parameter_list|,
name|SourceLocation
name|parentIndent
parameter_list|)
function_decl|;
name|bool
name|clearDiagnostic
argument_list|(
name|ArrayRef
operator|<
name|unsigned
operator|>
name|IDs
argument_list|,
name|SourceRange
name|range
argument_list|)
decl_stmt|;
name|bool
name|clearAllDiagnostics
parameter_list|(
name|SourceRange
name|range
parameter_list|)
block|{
return|return
name|clearDiagnostic
argument_list|(
name|None
argument_list|,
name|range
argument_list|)
return|;
block|}
name|bool
name|clearDiagnostic
parameter_list|(
name|unsigned
name|ID1
parameter_list|,
name|unsigned
name|ID2
parameter_list|,
name|SourceRange
name|range
parameter_list|)
block|{
name|unsigned
name|IDs
index|[]
init|=
block|{
name|ID1
block|,
name|ID2
block|}
decl_stmt|;
return|return
name|clearDiagnostic
argument_list|(
name|IDs
argument_list|,
name|range
argument_list|)
return|;
block|}
name|bool
name|clearDiagnostic
parameter_list|(
name|unsigned
name|ID1
parameter_list|,
name|unsigned
name|ID2
parameter_list|,
name|unsigned
name|ID3
parameter_list|,
name|SourceRange
name|range
parameter_list|)
block|{
name|unsigned
name|IDs
index|[]
init|=
block|{
name|ID1
block|,
name|ID2
block|,
name|ID3
block|}
decl_stmt|;
return|return
name|clearDiagnostic
argument_list|(
name|IDs
argument_list|,
name|range
argument_list|)
return|;
block|}
name|bool
name|hasDiagnostic
parameter_list|(
name|unsigned
name|ID
parameter_list|,
name|SourceRange
name|range
parameter_list|)
block|{
return|return
name|CapturedDiags
operator|.
name|hasDiagnostic
argument_list|(
name|ID
argument_list|,
name|range
argument_list|)
return|;
block|}
name|bool
name|hasDiagnostic
parameter_list|(
name|unsigned
name|ID1
parameter_list|,
name|unsigned
name|ID2
parameter_list|,
name|SourceRange
name|range
parameter_list|)
block|{
name|unsigned
name|IDs
index|[]
init|=
block|{
name|ID1
block|,
name|ID2
block|}
decl_stmt|;
return|return
name|CapturedDiags
operator|.
name|hasDiagnostic
argument_list|(
name|IDs
argument_list|,
name|range
argument_list|)
return|;
block|}
name|DiagnosticBuilder
name|report
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|unsigned
name|diagId
parameter_list|,
name|SourceRange
name|range
init|=
name|SourceRange
argument_list|()
parameter_list|)
function_decl|;
name|void
name|reportError
parameter_list|(
name|StringRef
name|error
parameter_list|,
name|SourceLocation
name|loc
parameter_list|,
name|SourceRange
name|range
init|=
name|SourceRange
argument_list|()
parameter_list|)
function_decl|;
name|void
name|reportWarning
parameter_list|(
name|StringRef
name|warning
parameter_list|,
name|SourceLocation
name|loc
parameter_list|,
name|SourceRange
name|range
init|=
name|SourceRange
argument_list|()
parameter_list|)
function_decl|;
name|void
name|reportNote
parameter_list|(
name|StringRef
name|note
parameter_list|,
name|SourceLocation
name|loc
parameter_list|,
name|SourceRange
name|range
init|=
name|SourceRange
argument_list|()
parameter_list|)
function_decl|;
name|bool
name|hasReportedErrors
argument_list|()
specifier|const
block|{
return|return
name|Diags
operator|.
name|hasUnrecoverableErrorOccurred
argument_list|()
return|;
block|}
name|class
name|RewriteReceiver
block|{
name|public
label|:
name|virtual
operator|~
name|RewriteReceiver
argument_list|()
expr_stmt|;
name|virtual
name|void
name|insert
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|StringRef
name|text
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|remove
parameter_list|(
name|CharSourceRange
name|range
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|increaseIndentation
parameter_list|(
name|CharSourceRange
name|range
parameter_list|,
name|SourceLocation
name|parentIndent
parameter_list|)
init|=
literal|0
function_decl|;
block|}
empty_stmt|;
name|void
name|applyRewrites
parameter_list|(
name|RewriteReceiver
modifier|&
name|receiver
parameter_list|)
function_decl|;
block|}
empty_stmt|;
name|class
name|Transaction
block|{
name|TransformActions
modifier|&
name|TA
decl_stmt|;
name|bool
name|Aborted
decl_stmt|;
name|public
label|:
name|Transaction
argument_list|(
name|TransformActions
operator|&
name|TA
argument_list|)
operator|:
name|TA
argument_list|(
name|TA
argument_list|)
operator|,
name|Aborted
argument_list|(
argument|false
argument_list|)
block|{
name|TA
operator|.
name|startTransaction
argument_list|()
block|;   }
operator|~
name|Transaction
argument_list|()
block|{
if|if
condition|(
operator|!
name|isAborted
argument_list|()
condition|)
name|TA
operator|.
name|commitTransaction
argument_list|()
expr_stmt|;
block|}
name|void
name|abort
parameter_list|()
block|{
name|TA
operator|.
name|abortTransaction
argument_list|()
expr_stmt|;
name|Aborted
operator|=
name|true
expr_stmt|;
block|}
name|bool
name|isAborted
argument_list|()
specifier|const
block|{
return|return
name|Aborted
return|;
block|}
block|}
empty_stmt|;
name|class
name|MigrationPass
block|{
name|public
label|:
name|ASTContext
modifier|&
name|Ctx
decl_stmt|;
name|LangOptions
operator|::
name|GCMode
name|OrigGCMode
expr_stmt|;
name|MigratorOptions
name|MigOptions
decl_stmt|;
name|Sema
modifier|&
name|SemaRef
decl_stmt|;
name|TransformActions
modifier|&
name|TA
decl_stmt|;
specifier|const
name|CapturedDiagList
modifier|&
name|CapturedDiags
decl_stmt|;
name|std
operator|::
name|vector
operator|<
name|SourceLocation
operator|>
operator|&
name|ARCMTMacroLocs
expr_stmt|;
name|Optional
operator|<
name|bool
operator|>
name|EnableCFBridgeFns
expr_stmt|;
name|MigrationPass
argument_list|(
argument|ASTContext&Ctx
argument_list|,
argument|LangOptions::GCMode OrigGCMode
argument_list|,
argument|Sema&sema
argument_list|,
argument|TransformActions&TA
argument_list|,
argument|const CapturedDiagList&capturedDiags
argument_list|,
argument|std::vector<SourceLocation>&ARCMTMacroLocs
argument_list|)
block|:
name|Ctx
argument_list|(
name|Ctx
argument_list|)
operator|,
name|OrigGCMode
argument_list|(
name|OrigGCMode
argument_list|)
operator|,
name|MigOptions
argument_list|()
operator|,
name|SemaRef
argument_list|(
name|sema
argument_list|)
operator|,
name|TA
argument_list|(
name|TA
argument_list|)
operator|,
name|CapturedDiags
argument_list|(
name|capturedDiags
argument_list|)
operator|,
name|ARCMTMacroLocs
argument_list|(
argument|ARCMTMacroLocs
argument_list|)
block|{ }
specifier|const
name|CapturedDiagList
operator|&
name|getDiags
argument_list|()
specifier|const
block|{
return|return
name|CapturedDiags
return|;
block|}
name|bool
name|isGCMigration
argument_list|()
specifier|const
block|{
return|return
name|OrigGCMode
operator|!=
name|LangOptions
operator|::
name|NonGC
return|;
block|}
name|bool
name|noFinalizeRemoval
argument_list|()
specifier|const
block|{
return|return
name|MigOptions
operator|.
name|NoFinalizeRemoval
return|;
block|}
name|void
name|setNoFinalizeRemoval
parameter_list|(
name|bool
name|val
parameter_list|)
block|{
name|MigOptions
operator|.
name|NoFinalizeRemoval
operator|=
name|val
expr_stmt|;
block|}
name|bool
name|CFBridgingFunctionsDefined
parameter_list|()
function_decl|;
block|}
empty_stmt|;
specifier|static
specifier|inline
name|StringRef
name|getARCMTMacroName
parameter_list|()
block|{
return|return
literal|"__IMPL_ARCMT_REMOVED_EXPR__"
return|;
block|}
block|}
comment|// end namespace arcmt
block|}
end_decl_stmt

begin_comment
comment|// end namespace clang
end_comment

begin_endif
endif|#
directive|endif
end_endif

end_unit

