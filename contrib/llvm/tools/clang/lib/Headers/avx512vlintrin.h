begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*===---- avx512vlintrin.h - AVX512VL intrinsics ---------------------------===  *  * Permission is hereby granted, free of charge, to any person obtaining a copy  * of this software and associated documentation files (the "Software"), to deal  * in the Software without restriction, including without limitation the rights  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell  * copies of the Software, and to permit persons to whom the Software is  * furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice shall be included in  * all copies or substantial portions of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  * THE SOFTWARE.  *  *===-----------------------------------------------------------------------===  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__IMMINTRIN_H
end_ifndef

begin_error
error|#
directive|error
literal|"Never use<avx512vlintrin.h> directly; include<immintrin.h> instead."
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|__AVX512VLINTRIN_H
end_ifndef

begin_define
define|#
directive|define
name|__AVX512VLINTRIN_H
end_define

begin_comment
comment|/* Integer compare */
end_comment

begin_decl_stmt
specifier|static
name|__inline__
name|__mmask8
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_cmpeq_epi32_mask
argument_list|(
name|__m128i
name|__a
argument_list|,
name|__m128i
name|__b
argument_list|)
block|{
return|return
operator|(
name|__mmask8
operator|)
name|__builtin_ia32_pcmpeqd128_mask
argument_list|(
operator|(
name|__v4si
operator|)
name|__a
argument_list|,
operator|(
name|__v4si
operator|)
name|__b
argument_list|,
operator|(
name|__mmask8
operator|)
operator|-
literal|1
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__mmask8
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_mask_cmpeq_epi32_mask
argument_list|(
name|__mmask8
name|__u
argument_list|,
name|__m128i
name|__a
argument_list|,
name|__m128i
name|__b
argument_list|)
block|{
return|return
operator|(
name|__mmask8
operator|)
name|__builtin_ia32_pcmpeqd128_mask
argument_list|(
operator|(
name|__v4si
operator|)
name|__a
argument_list|,
operator|(
name|__v4si
operator|)
name|__b
argument_list|,
name|__u
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__mmask8
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm256_cmpeq_epi32_mask
argument_list|(
name|__m256i
name|__a
argument_list|,
name|__m256i
name|__b
argument_list|)
block|{
return|return
operator|(
name|__mmask8
operator|)
name|__builtin_ia32_pcmpeqd256_mask
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|,
operator|(
name|__mmask8
operator|)
operator|-
literal|1
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__mmask8
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm256_mask_cmpeq_epi32_mask
argument_list|(
name|__mmask8
name|__u
argument_list|,
name|__m256i
name|__a
argument_list|,
name|__m256i
name|__b
argument_list|)
block|{
return|return
operator|(
name|__mmask8
operator|)
name|__builtin_ia32_pcmpeqd256_mask
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|,
name|__u
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__mmask8
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_cmpeq_epi64_mask
argument_list|(
name|__m128i
name|__a
argument_list|,
name|__m128i
name|__b
argument_list|)
block|{
return|return
operator|(
name|__mmask8
operator|)
name|__builtin_ia32_pcmpeqq128_mask
argument_list|(
operator|(
name|__v2di
operator|)
name|__a
argument_list|,
operator|(
name|__v2di
operator|)
name|__b
argument_list|,
operator|(
name|__mmask8
operator|)
operator|-
literal|1
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__mmask8
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm_mask_cmpeq_epi64_mask
argument_list|(
name|__mmask8
name|__u
argument_list|,
name|__m128i
name|__a
argument_list|,
name|__m128i
name|__b
argument_list|)
block|{
return|return
operator|(
name|__mmask8
operator|)
name|__builtin_ia32_pcmpeqq128_mask
argument_list|(
operator|(
name|__v2di
operator|)
name|__a
argument_list|,
operator|(
name|__v2di
operator|)
name|__b
argument_list|,
name|__u
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__mmask8
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm256_cmpeq_epi64_mask
argument_list|(
name|__m256i
name|__a
argument_list|,
name|__m256i
name|__b
argument_list|)
block|{
return|return
operator|(
name|__mmask8
operator|)
name|__builtin_ia32_pcmpeqq256_mask
argument_list|(
operator|(
name|__v4di
operator|)
name|__a
argument_list|,
operator|(
name|__v4di
operator|)
name|__b
argument_list|,
operator|(
name|__mmask8
operator|)
operator|-
literal|1
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__mmask8
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm256_mask_cmpeq_epi64_mask
argument_list|(
name|__mmask8
name|__u
argument_list|,
name|__m256i
name|__a
argument_list|,
name|__m256i
name|__b
argument_list|)
block|{
return|return
operator|(
name|__mmask8
operator|)
name|__builtin_ia32_pcmpeqq256_mask
argument_list|(
operator|(
name|__v4di
operator|)
name|__a
argument_list|,
operator|(
name|__v4di
operator|)
name|__b
argument_list|,
name|__u
argument_list|)
return|;
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __AVX512VLINTRIN_H */
end_comment

end_unit

