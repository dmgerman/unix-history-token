begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*===---- avx2intrin.h - AVX2 intrinsics -----------------------------------===  *  * Permission is hereby granted, free of charge, to any person obtaining a copy  * of this software and associated documentation files (the "Software"), to deal  * in the Software without restriction, including without limitation the rights  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell  * copies of the Software, and to permit persons to whom the Software is  * furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice shall be included in  * all copies or substantial portions of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  * THE SOFTWARE.  *  *===-----------------------------------------------------------------------===  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__IMMINTRIN_H
end_ifndef

begin_error
error|#
directive|error
literal|"Never use<avx2intrin.h> directly; include<immintrin.h> instead."
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|__AVX2INTRIN_H
end_ifndef

begin_define
define|#
directive|define
name|__AVX2INTRIN_H
end_define

begin_comment
comment|/* Define the default attributes for the functions in this file. */
end_comment

begin_define
define|#
directive|define
name|__DEFAULT_FN_ATTRS
value|__attribute__((__always_inline__, __nodebug__, __target__("avx2")))
end_define

begin_comment
comment|/* SSE4 Multiple Packed Sums of Absolute Difference.  */
end_comment

begin_define
define|#
directive|define
name|_mm256_mpsadbw_epu8
parameter_list|(
name|X
parameter_list|,
name|Y
parameter_list|,
name|M
parameter_list|)
define|\
value|(__m256i)__builtin_ia32_mpsadbw256((__v32qi)(__m256i)(X), \                                      (__v32qi)(__m256i)(Y), (int)(M))
end_define

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_abs_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pabsb256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_abs_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pabsw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_abs_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pabsd256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_packs_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_packsswb256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_packs_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_packssdw256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_packus_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_packuswb256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_packus_epi32
parameter_list|(
name|__m256i
name|__V1
parameter_list|,
name|__m256i
name|__V2
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_packusdw256
argument_list|(
operator|(
name|__v8si
operator|)
name|__V1
argument_list|,
operator|(
name|__v8si
operator|)
name|__V2
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_add_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v32qu
operator|)
name|__a
operator|+
operator|(
name|__v32qu
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_add_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v16hu
operator|)
name|__a
operator|+
operator|(
name|__v16hu
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_add_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v8su
operator|)
name|__a
operator|+
operator|(
name|__v8su
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_add_epi64
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v4du
operator|)
name|__a
operator|+
operator|(
name|__v4du
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_adds_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_paddsb256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_adds_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_paddsw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_adds_epu8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_paddusb256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_adds_epu16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_paddusw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|_mm256_alignr_epi8
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|,
name|n
parameter_list|)
value|__extension__ ({        \   (__m256i)__builtin_ia32_palignr256((__v32qi)(__m256i)(a), \                                      (__v32qi)(__m256i)(b), (n)); })
end_define

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_and_si256
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v4du
operator|)
name|__a
operator|&
operator|(
name|__v4du
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_andnot_si256
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|~
operator|(
name|__v4du
operator|)
name|__a
operator|&
operator|(
name|__v4du
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_avg_epu8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pavgb256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_avg_epu16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pavgw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_blendv_epi8
parameter_list|(
name|__m256i
name|__V1
parameter_list|,
name|__m256i
name|__V2
parameter_list|,
name|__m256i
name|__M
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pblendvb256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__V1
argument_list|,
operator|(
name|__v32qi
operator|)
name|__V2
argument_list|,
operator|(
name|__v32qi
operator|)
name|__M
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|_mm256_blend_epi16
parameter_list|(
name|V1
parameter_list|,
name|V2
parameter_list|,
name|M
parameter_list|)
value|__extension__ ({       \   (__m256i)__builtin_shufflevector((__v16hi)(__m256i)(V1),   \                                    (__v16hi)(__m256i)(V2),   \                                    (((M)& 0x01) ? 16 : 0),  \                                    (((M)& 0x02) ? 17 : 1),  \                                    (((M)& 0x04) ? 18 : 2),  \                                    (((M)& 0x08) ? 19 : 3),  \                                    (((M)& 0x10) ? 20 : 4),  \                                    (((M)& 0x20) ? 21 : 5),  \                                    (((M)& 0x40) ? 22 : 6),  \                                    (((M)& 0x80) ? 23 : 7),  \                                    (((M)& 0x01) ? 24 : 8),  \                                    (((M)& 0x02) ? 25 : 9),  \                                    (((M)& 0x04) ? 26 : 10), \                                    (((M)& 0x08) ? 27 : 11), \                                    (((M)& 0x10) ? 28 : 12), \                                    (((M)& 0x20) ? 29 : 13), \                                    (((M)& 0x40) ? 30 : 14), \                                    (((M)& 0x80) ? 31 : 15)); })
end_define

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cmpeq_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
operator|==
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cmpeq_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
operator|==
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cmpeq_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
operator|==
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cmpeq_epi64
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v4di
operator|)
name|__a
operator|==
operator|(
name|__v4di
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cmpgt_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
comment|/* This function always performs a signed comparison, but __v32qi is a char      which may be signed or unsigned, so use __v32qs. */
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v32qs
operator|)
name|__a
operator|>
operator|(
name|__v32qs
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cmpgt_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
operator|>
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cmpgt_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
operator|>
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cmpgt_epi64
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v4di
operator|)
name|__a
operator|>
operator|(
name|__v4di
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_hadd_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_phaddw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_hadd_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_phaddd256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_hadds_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_phaddsw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_hsub_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_phsubw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_hsub_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_phsubd256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_hsubs_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_phsubsw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_maddubs_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pmaddubsw256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_madd_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pmaddwd256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_max_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pmaxsb256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_max_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pmaxsw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_max_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pmaxsd256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_max_epu8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pmaxub256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_max_epu16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pmaxuw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_max_epu32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pmaxud256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_min_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pminsb256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_min_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pminsw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_min_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pminsd256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_min_epu8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pminub256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_min_epu16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pminuw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_min_epu32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pminud256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|int
name|__DEFAULT_FN_ATTRS
name|_mm256_movemask_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|)
block|{
return|return
name|__builtin_ia32_pmovmskb256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cvtepi8_epi16
parameter_list|(
name|__m128i
name|__V
parameter_list|)
block|{
comment|/* This function always performs a signed extension, but __v16qi is a char      which may be signed or unsigned, so use __v16qs. */
return|return
operator|(
name|__m256i
operator|)
name|__builtin_convertvector
argument_list|(
operator|(
name|__v16qs
operator|)
name|__V
argument_list|,
name|__v16hi
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cvtepi8_epi32
parameter_list|(
name|__m128i
name|__V
parameter_list|)
block|{
comment|/* This function always performs a signed extension, but __v16qi is a char      which may be signed or unsigned, so use __v16qs. */
return|return
operator|(
name|__m256i
operator|)
name|__builtin_convertvector
argument_list|(
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v16qs
operator|)
name|__V
argument_list|,
operator|(
name|__v16qs
operator|)
name|__V
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|)
argument_list|,
name|__v8si
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cvtepi8_epi64
parameter_list|(
name|__m128i
name|__V
parameter_list|)
block|{
comment|/* This function always performs a signed extension, but __v16qi is a char      which may be signed or unsigned, so use __v16qs. */
return|return
operator|(
name|__m256i
operator|)
name|__builtin_convertvector
argument_list|(
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v16qs
operator|)
name|__V
argument_list|,
operator|(
name|__v16qs
operator|)
name|__V
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|,
name|__v4di
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cvtepi16_epi32
parameter_list|(
name|__m128i
name|__V
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_convertvector
argument_list|(
operator|(
name|__v8hi
operator|)
name|__V
argument_list|,
name|__v8si
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cvtepi16_epi64
parameter_list|(
name|__m128i
name|__V
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_convertvector
argument_list|(
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v8hi
operator|)
name|__V
argument_list|,
operator|(
name|__v8hi
operator|)
name|__V
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|,
name|__v4di
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cvtepi32_epi64
parameter_list|(
name|__m128i
name|__V
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_convertvector
argument_list|(
operator|(
name|__v4si
operator|)
name|__V
argument_list|,
name|__v4di
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cvtepu8_epi16
parameter_list|(
name|__m128i
name|__V
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_convertvector
argument_list|(
operator|(
name|__v16qu
operator|)
name|__V
argument_list|,
name|__v16hi
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cvtepu8_epi32
parameter_list|(
name|__m128i
name|__V
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_convertvector
argument_list|(
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v16qu
operator|)
name|__V
argument_list|,
operator|(
name|__v16qu
operator|)
name|__V
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|)
argument_list|,
name|__v8si
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cvtepu8_epi64
parameter_list|(
name|__m128i
name|__V
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_convertvector
argument_list|(
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v16qu
operator|)
name|__V
argument_list|,
operator|(
name|__v16qu
operator|)
name|__V
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|,
name|__v4di
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cvtepu16_epi32
parameter_list|(
name|__m128i
name|__V
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_convertvector
argument_list|(
operator|(
name|__v8hu
operator|)
name|__V
argument_list|,
name|__v8si
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cvtepu16_epi64
parameter_list|(
name|__m128i
name|__V
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_convertvector
argument_list|(
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v8hu
operator|)
name|__V
argument_list|,
operator|(
name|__v8hu
operator|)
name|__V
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|,
name|__v4di
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_cvtepu32_epi64
parameter_list|(
name|__m128i
name|__V
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_convertvector
argument_list|(
operator|(
name|__v4su
operator|)
name|__V
argument_list|,
name|__v4di
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_mul_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pmuldq256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_mulhrs_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pmulhrsw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_mulhi_epu16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pmulhuw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_mulhi_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pmulhw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_mullo_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v16hu
operator|)
name|__a
operator|*
operator|(
name|__v16hu
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_mullo_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v8su
operator|)
name|__a
operator|*
operator|(
name|__v8su
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_mul_epu32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_pmuludq256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_or_si256
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v4du
operator|)
name|__a
operator||
operator|(
name|__v4du
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sad_epu8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
name|__builtin_ia32_psadbw256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_shuffle_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pshufb256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|_mm256_shuffle_epi32
parameter_list|(
name|a
parameter_list|,
name|imm
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_shufflevector((__v8si)(__m256i)(a), \                                    (__v8si)_mm256_undefined_si256(), \                                    0 + (((imm)>> 0)& 0x3), \                                    0 + (((imm)>> 2)& 0x3), \                                    0 + (((imm)>> 4)& 0x3), \                                    0 + (((imm)>> 6)& 0x3), \                                    4 + (((imm)>> 0)& 0x3), \                                    4 + (((imm)>> 2)& 0x3), \                                    4 + (((imm)>> 4)& 0x3), \                                    4 + (((imm)>> 6)& 0x3)); })
end_define

begin_define
define|#
directive|define
name|_mm256_shufflehi_epi16
parameter_list|(
name|a
parameter_list|,
name|imm
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_shufflevector((__v16hi)(__m256i)(a), \                                    (__v16hi)_mm256_undefined_si256(), \                                    0, 1, 2, 3, \                                    4  + (((imm)>> 0)& 0x3), \                                    4  + (((imm)>> 2)& 0x3), \                                    4  + (((imm)>> 4)& 0x3), \                                    4  + (((imm)>> 6)& 0x3), \                                    8, 9, 10, 11, \                                    12 + (((imm)>> 0)& 0x3), \                                    12 + (((imm)>> 2)& 0x3), \                                    12 + (((imm)>> 4)& 0x3), \                                    12 + (((imm)>> 6)& 0x3)); })
end_define

begin_define
define|#
directive|define
name|_mm256_shufflelo_epi16
parameter_list|(
name|a
parameter_list|,
name|imm
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_shufflevector((__v16hi)(__m256i)(a), \                                    (__v16hi)_mm256_undefined_si256(), \                                    0 + (((imm)>> 0)& 0x3), \                                    0 + (((imm)>> 2)& 0x3), \                                    0 + (((imm)>> 4)& 0x3), \                                    0 + (((imm)>> 6)& 0x3), \                                    4, 5, 6, 7, \                                    8 + (((imm)>> 0)& 0x3), \                                    8 + (((imm)>> 2)& 0x3), \                                    8 + (((imm)>> 4)& 0x3), \                                    8 + (((imm)>> 6)& 0x3), \                                    12, 13, 14, 15); })
end_define

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sign_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psignb256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sign_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psignw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sign_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psignd256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|_mm256_slli_si256
parameter_list|(
name|a
parameter_list|,
name|imm
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_shufflevector(                                          \         (__v32qi)_mm256_setzero_si256(),                                     \         (__v32qi)(__m256i)(a),                                               \         ((char)(imm)&0xF0) ?  0 : ((char)(imm)>0x0 ? 16 : 32) - (char)(imm), \         ((char)(imm)&0xF0) ?  1 : ((char)(imm)>0x1 ? 17 : 33) - (char)(imm), \         ((char)(imm)&0xF0) ?  2 : ((char)(imm)>0x2 ? 18 : 34) - (char)(imm), \         ((char)(imm)&0xF0) ?  3 : ((char)(imm)>0x3 ? 19 : 35) - (char)(imm), \         ((char)(imm)&0xF0) ?  4 : ((char)(imm)>0x4 ? 20 : 36) - (char)(imm), \         ((char)(imm)&0xF0) ?  5 : ((char)(imm)>0x5 ? 21 : 37) - (char)(imm), \         ((char)(imm)&0xF0) ?  6 : ((char)(imm)>0x6 ? 22 : 38) - (char)(imm), \         ((char)(imm)&0xF0) ?  7 : ((char)(imm)>0x7 ? 23 : 39) - (char)(imm), \         ((char)(imm)&0xF0) ?  8 : ((char)(imm)>0x8 ? 24 : 40) - (char)(imm), \         ((char)(imm)&0xF0) ?  9 : ((char)(imm)>0x9 ? 25 : 41) - (char)(imm), \         ((char)(imm)&0xF0) ? 10 : ((char)(imm)>0xA ? 26 : 42) - (char)(imm), \         ((char)(imm)&0xF0) ? 11 : ((char)(imm)>0xB ? 27 : 43) - (char)(imm), \         ((char)(imm)&0xF0) ? 12 : ((char)(imm)>0xC ? 28 : 44) - (char)(imm), \         ((char)(imm)&0xF0) ? 13 : ((char)(imm)>0xD ? 29 : 45) - (char)(imm), \         ((char)(imm)&0xF0) ? 14 : ((char)(imm)>0xE ? 30 : 46) - (char)(imm), \         ((char)(imm)&0xF0) ? 15 : ((char)(imm)>0xF ? 31 : 47) - (char)(imm), \         ((char)(imm)&0xF0) ? 16 : ((char)(imm)>0x0 ? 32 : 48) - (char)(imm), \         ((char)(imm)&0xF0) ? 17 : ((char)(imm)>0x1 ? 33 : 49) - (char)(imm), \         ((char)(imm)&0xF0) ? 18 : ((char)(imm)>0x2 ? 34 : 50) - (char)(imm), \         ((char)(imm)&0xF0) ? 19 : ((char)(imm)>0x3 ? 35 : 51) - (char)(imm), \         ((char)(imm)&0xF0) ? 20 : ((char)(imm)>0x4 ? 36 : 52) - (char)(imm), \         ((char)(imm)&0xF0) ? 21 : ((char)(imm)>0x5 ? 37 : 53) - (char)(imm), \         ((char)(imm)&0xF0) ? 22 : ((char)(imm)>0x6 ? 38 : 54) - (char)(imm), \         ((char)(imm)&0xF0) ? 23 : ((char)(imm)>0x7 ? 39 : 55) - (char)(imm), \         ((char)(imm)&0xF0) ? 24 : ((char)(imm)>0x8 ? 40 : 56) - (char)(imm), \         ((char)(imm)&0xF0) ? 25 : ((char)(imm)>0x9 ? 41 : 57) - (char)(imm), \         ((char)(imm)&0xF0) ? 26 : ((char)(imm)>0xA ? 42 : 58) - (char)(imm), \         ((char)(imm)&0xF0) ? 27 : ((char)(imm)>0xB ? 43 : 59) - (char)(imm), \         ((char)(imm)&0xF0) ? 28 : ((char)(imm)>0xC ? 44 : 60) - (char)(imm), \         ((char)(imm)&0xF0) ? 29 : ((char)(imm)>0xD ? 45 : 61) - (char)(imm), \         ((char)(imm)&0xF0) ? 30 : ((char)(imm)>0xE ? 46 : 62) - (char)(imm), \         ((char)(imm)&0xF0) ? 31 : ((char)(imm)>0xF ? 47 : 63) - (char)(imm)); })
end_define

begin_define
define|#
directive|define
name|_mm256_bslli_epi128
parameter_list|(
name|a
parameter_list|,
name|count
parameter_list|)
value|_mm256_slli_si256((a), (count))
end_define

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_slli_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|int
name|__count
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psllwi256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sll_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m128i
name|__count
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psllw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v8hi
operator|)
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_slli_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|int
name|__count
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pslldi256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sll_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m128i
name|__count
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_pslld256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v4si
operator|)
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_slli_epi64
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|int
name|__count
parameter_list|)
block|{
return|return
name|__builtin_ia32_psllqi256
argument_list|(
operator|(
name|__v4di
operator|)
name|__a
argument_list|,
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sll_epi64
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m128i
name|__count
parameter_list|)
block|{
return|return
name|__builtin_ia32_psllq256
argument_list|(
operator|(
name|__v4di
operator|)
name|__a
argument_list|,
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_srai_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|int
name|__count
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psrawi256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sra_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m128i
name|__count
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psraw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v8hi
operator|)
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_srai_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|int
name|__count
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psradi256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sra_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m128i
name|__count
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psrad256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v4si
operator|)
name|__count
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|_mm256_srli_si256
parameter_list|(
name|a
parameter_list|,
name|imm
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_shufflevector(                                           \         (__v32qi)(__m256i)(a),                                               \         (__v32qi)_mm256_setzero_si256(),                                     \         ((char)(imm)&0xF0) ? 32 : (char)(imm) + ((char)(imm)>0xF ? 16 : 0),  \         ((char)(imm)&0xF0) ? 33 : (char)(imm) + ((char)(imm)>0xE ? 17 : 1),  \         ((char)(imm)&0xF0) ? 34 : (char)(imm) + ((char)(imm)>0xD ? 18 : 2),  \         ((char)(imm)&0xF0) ? 35 : (char)(imm) + ((char)(imm)>0xC ? 19 : 3),  \         ((char)(imm)&0xF0) ? 36 : (char)(imm) + ((char)(imm)>0xB ? 20 : 4),  \         ((char)(imm)&0xF0) ? 37 : (char)(imm) + ((char)(imm)>0xA ? 21 : 5),  \         ((char)(imm)&0xF0) ? 38 : (char)(imm) + ((char)(imm)>0x9 ? 22 : 6),  \         ((char)(imm)&0xF0) ? 39 : (char)(imm) + ((char)(imm)>0x8 ? 23 : 7),  \         ((char)(imm)&0xF0) ? 40 : (char)(imm) + ((char)(imm)>0x7 ? 24 : 8),  \         ((char)(imm)&0xF0) ? 41 : (char)(imm) + ((char)(imm)>0x6 ? 25 : 9),  \         ((char)(imm)&0xF0) ? 42 : (char)(imm) + ((char)(imm)>0x5 ? 26 : 10), \         ((char)(imm)&0xF0) ? 43 : (char)(imm) + ((char)(imm)>0x4 ? 27 : 11), \         ((char)(imm)&0xF0) ? 44 : (char)(imm) + ((char)(imm)>0x3 ? 28 : 12), \         ((char)(imm)&0xF0) ? 45 : (char)(imm) + ((char)(imm)>0x2 ? 29 : 13), \         ((char)(imm)&0xF0) ? 46 : (char)(imm) + ((char)(imm)>0x1 ? 30 : 14), \         ((char)(imm)&0xF0) ? 47 : (char)(imm) + ((char)(imm)>0x0 ? 31 : 15), \         ((char)(imm)&0xF0) ? 48 : (char)(imm) + ((char)(imm)>0xF ? 32 : 16), \         ((char)(imm)&0xF0) ? 49 : (char)(imm) + ((char)(imm)>0xE ? 33 : 17), \         ((char)(imm)&0xF0) ? 50 : (char)(imm) + ((char)(imm)>0xD ? 34 : 18), \         ((char)(imm)&0xF0) ? 51 : (char)(imm) + ((char)(imm)>0xC ? 35 : 19), \         ((char)(imm)&0xF0) ? 52 : (char)(imm) + ((char)(imm)>0xB ? 36 : 20), \         ((char)(imm)&0xF0) ? 53 : (char)(imm) + ((char)(imm)>0xA ? 37 : 21), \         ((char)(imm)&0xF0) ? 54 : (char)(imm) + ((char)(imm)>0x9 ? 38 : 22), \         ((char)(imm)&0xF0) ? 55 : (char)(imm) + ((char)(imm)>0x8 ? 39 : 23), \         ((char)(imm)&0xF0) ? 56 : (char)(imm) + ((char)(imm)>0x7 ? 40 : 24), \         ((char)(imm)&0xF0) ? 57 : (char)(imm) + ((char)(imm)>0x6 ? 41 : 25), \         ((char)(imm)&0xF0) ? 58 : (char)(imm) + ((char)(imm)>0x5 ? 42 : 26), \         ((char)(imm)&0xF0) ? 59 : (char)(imm) + ((char)(imm)>0x4 ? 43 : 27), \         ((char)(imm)&0xF0) ? 60 : (char)(imm) + ((char)(imm)>0x3 ? 44 : 28), \         ((char)(imm)&0xF0) ? 61 : (char)(imm) + ((char)(imm)>0x2 ? 45 : 29), \         ((char)(imm)&0xF0) ? 62 : (char)(imm) + ((char)(imm)>0x1 ? 46 : 30), \         ((char)(imm)&0xF0) ? 63 : (char)(imm) + ((char)(imm)>0x0 ? 47 : 31)); })
end_define

begin_define
define|#
directive|define
name|_mm256_bsrli_epi128
parameter_list|(
name|a
parameter_list|,
name|count
parameter_list|)
value|_mm256_srli_si256((a), (count))
end_define

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_srli_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|int
name|__count
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psrlwi256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_srl_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m128i
name|__count
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psrlw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v8hi
operator|)
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_srli_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|int
name|__count
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psrldi256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_srl_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m128i
name|__count
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psrld256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v4si
operator|)
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_srli_epi64
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|int
name|__count
parameter_list|)
block|{
return|return
name|__builtin_ia32_psrlqi256
argument_list|(
operator|(
name|__v4di
operator|)
name|__a
argument_list|,
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_srl_epi64
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m128i
name|__count
parameter_list|)
block|{
return|return
name|__builtin_ia32_psrlq256
argument_list|(
operator|(
name|__v4di
operator|)
name|__a
argument_list|,
name|__count
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sub_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v32qu
operator|)
name|__a
operator|-
operator|(
name|__v32qu
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sub_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v16hu
operator|)
name|__a
operator|-
operator|(
name|__v16hu
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sub_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v8su
operator|)
name|__a
operator|-
operator|(
name|__v8su
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sub_epi64
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v4du
operator|)
name|__a
operator|-
operator|(
name|__v4du
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_subs_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psubsb256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_subs_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psubsw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_subs_epu8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psubusb256
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_subs_epu16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psubusw256
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_unpackhi_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|,
literal|8
argument_list|,
literal|32
operator|+
literal|8
argument_list|,
literal|9
argument_list|,
literal|32
operator|+
literal|9
argument_list|,
literal|10
argument_list|,
literal|32
operator|+
literal|10
argument_list|,
literal|11
argument_list|,
literal|32
operator|+
literal|11
argument_list|,
literal|12
argument_list|,
literal|32
operator|+
literal|12
argument_list|,
literal|13
argument_list|,
literal|32
operator|+
literal|13
argument_list|,
literal|14
argument_list|,
literal|32
operator|+
literal|14
argument_list|,
literal|15
argument_list|,
literal|32
operator|+
literal|15
argument_list|,
literal|24
argument_list|,
literal|32
operator|+
literal|24
argument_list|,
literal|25
argument_list|,
literal|32
operator|+
literal|25
argument_list|,
literal|26
argument_list|,
literal|32
operator|+
literal|26
argument_list|,
literal|27
argument_list|,
literal|32
operator|+
literal|27
argument_list|,
literal|28
argument_list|,
literal|32
operator|+
literal|28
argument_list|,
literal|29
argument_list|,
literal|32
operator|+
literal|29
argument_list|,
literal|30
argument_list|,
literal|32
operator|+
literal|30
argument_list|,
literal|31
argument_list|,
literal|32
operator|+
literal|31
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_unpackhi_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|,
literal|4
argument_list|,
literal|16
operator|+
literal|4
argument_list|,
literal|5
argument_list|,
literal|16
operator|+
literal|5
argument_list|,
literal|6
argument_list|,
literal|16
operator|+
literal|6
argument_list|,
literal|7
argument_list|,
literal|16
operator|+
literal|7
argument_list|,
literal|12
argument_list|,
literal|16
operator|+
literal|12
argument_list|,
literal|13
argument_list|,
literal|16
operator|+
literal|13
argument_list|,
literal|14
argument_list|,
literal|16
operator|+
literal|14
argument_list|,
literal|15
argument_list|,
literal|16
operator|+
literal|15
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_unpackhi_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|,
literal|2
argument_list|,
literal|8
operator|+
literal|2
argument_list|,
literal|3
argument_list|,
literal|8
operator|+
literal|3
argument_list|,
literal|6
argument_list|,
literal|8
operator|+
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
operator|+
literal|7
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_unpackhi_epi64
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v4di
operator|)
name|__a
argument_list|,
operator|(
name|__v4di
operator|)
name|__b
argument_list|,
literal|1
argument_list|,
literal|4
operator|+
literal|1
argument_list|,
literal|3
argument_list|,
literal|4
operator|+
literal|3
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_unpacklo_epi8
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v32qi
operator|)
name|__a
argument_list|,
operator|(
name|__v32qi
operator|)
name|__b
argument_list|,
literal|0
argument_list|,
literal|32
operator|+
literal|0
argument_list|,
literal|1
argument_list|,
literal|32
operator|+
literal|1
argument_list|,
literal|2
argument_list|,
literal|32
operator|+
literal|2
argument_list|,
literal|3
argument_list|,
literal|32
operator|+
literal|3
argument_list|,
literal|4
argument_list|,
literal|32
operator|+
literal|4
argument_list|,
literal|5
argument_list|,
literal|32
operator|+
literal|5
argument_list|,
literal|6
argument_list|,
literal|32
operator|+
literal|6
argument_list|,
literal|7
argument_list|,
literal|32
operator|+
literal|7
argument_list|,
literal|16
argument_list|,
literal|32
operator|+
literal|16
argument_list|,
literal|17
argument_list|,
literal|32
operator|+
literal|17
argument_list|,
literal|18
argument_list|,
literal|32
operator|+
literal|18
argument_list|,
literal|19
argument_list|,
literal|32
operator|+
literal|19
argument_list|,
literal|20
argument_list|,
literal|32
operator|+
literal|20
argument_list|,
literal|21
argument_list|,
literal|32
operator|+
literal|21
argument_list|,
literal|22
argument_list|,
literal|32
operator|+
literal|22
argument_list|,
literal|23
argument_list|,
literal|32
operator|+
literal|23
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_unpacklo_epi16
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v16hi
operator|)
name|__a
argument_list|,
operator|(
name|__v16hi
operator|)
name|__b
argument_list|,
literal|0
argument_list|,
literal|16
operator|+
literal|0
argument_list|,
literal|1
argument_list|,
literal|16
operator|+
literal|1
argument_list|,
literal|2
argument_list|,
literal|16
operator|+
literal|2
argument_list|,
literal|3
argument_list|,
literal|16
operator|+
literal|3
argument_list|,
literal|8
argument_list|,
literal|16
operator|+
literal|8
argument_list|,
literal|9
argument_list|,
literal|16
operator|+
literal|9
argument_list|,
literal|10
argument_list|,
literal|16
operator|+
literal|10
argument_list|,
literal|11
argument_list|,
literal|16
operator|+
literal|11
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_unpacklo_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|,
literal|0
argument_list|,
literal|8
operator|+
literal|0
argument_list|,
literal|1
argument_list|,
literal|8
operator|+
literal|1
argument_list|,
literal|4
argument_list|,
literal|8
operator|+
literal|4
argument_list|,
literal|5
argument_list|,
literal|8
operator|+
literal|5
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_unpacklo_epi64
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v4di
operator|)
name|__a
argument_list|,
operator|(
name|__v4di
operator|)
name|__b
argument_list|,
literal|0
argument_list|,
literal|4
operator|+
literal|0
argument_list|,
literal|2
argument_list|,
literal|4
operator|+
literal|2
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_xor_si256
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
call|(
name|__m256i
call|)
argument_list|(
operator|(
name|__v4du
operator|)
name|__a
operator|^
operator|(
name|__v4du
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_stream_load_si256
parameter_list|(
name|__m256i
specifier|const
modifier|*
name|__V
parameter_list|)
block|{
typedef|typedef
name|__v4di
name|__v4di_aligned
name|__attribute__
typedef|((
name|aligned
typedef|(32)));
return|return
operator|(
name|__m256i
operator|)
name|__builtin_nontemporal_load
argument_list|(
operator|(
specifier|const
name|__v4di_aligned
operator|*
operator|)
name|__V
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128
name|__DEFAULT_FN_ATTRS
name|_mm_broadcastss_ps
parameter_list|(
name|__m128
name|__X
parameter_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v4sf
operator|)
name|__X
argument_list|,
operator|(
name|__v4sf
operator|)
name|__X
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128d
name|__DEFAULT_FN_ATTRS
name|_mm_broadcastsd_pd
parameter_list|(
name|__m128d
name|__a
parameter_list|)
block|{
return|return
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v2df
operator|)
name|__a
argument_list|,
operator|(
name|__v2df
operator|)
name|__a
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256
name|__DEFAULT_FN_ATTRS
name|_mm256_broadcastss_ps
parameter_list|(
name|__m128
name|__X
parameter_list|)
block|{
return|return
operator|(
name|__m256
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v4sf
operator|)
name|__X
argument_list|,
operator|(
name|__v4sf
operator|)
name|__X
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256d
name|__DEFAULT_FN_ATTRS
name|_mm256_broadcastsd_pd
parameter_list|(
name|__m128d
name|__X
parameter_list|)
block|{
return|return
operator|(
name|__m256d
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v2df
operator|)
name|__X
argument_list|,
operator|(
name|__v2df
operator|)
name|__X
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_broadcastsi128_si256
parameter_list|(
name|__m128i
name|__X
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v2di
operator|)
name|__X
argument_list|,
operator|(
name|__v2di
operator|)
name|__X
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|_mm_blend_epi32
parameter_list|(
name|V1
parameter_list|,
name|V2
parameter_list|,
name|M
parameter_list|)
value|__extension__ ({ \   (__m128i)__builtin_shufflevector((__v4si)(__m128i)(V1),  \                                    (__v4si)(__m128i)(V2),  \                                    (((M)& 0x01) ? 4 : 0), \                                    (((M)& 0x02) ? 5 : 1), \                                    (((M)& 0x04) ? 6 : 2), \                                    (((M)& 0x08) ? 7 : 3)); })
end_define

begin_define
define|#
directive|define
name|_mm256_blend_epi32
parameter_list|(
name|V1
parameter_list|,
name|V2
parameter_list|,
name|M
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_shufflevector((__v8si)(__m256i)(V1),   \                                    (__v8si)(__m256i)(V2),   \                                    (((M)& 0x01) ?  8 : 0), \                                    (((M)& 0x02) ?  9 : 1), \                                    (((M)& 0x04) ? 10 : 2), \                                    (((M)& 0x08) ? 11 : 3), \                                    (((M)& 0x10) ? 12 : 4), \                                    (((M)& 0x20) ? 13 : 5), \                                    (((M)& 0x40) ? 14 : 6), \                                    (((M)& 0x80) ? 15 : 7)); })
end_define

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_broadcastb_epi8
parameter_list|(
name|__m128i
name|__X
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v16qi
operator|)
name|__X
argument_list|,
operator|(
name|__v16qi
operator|)
name|__X
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_broadcastw_epi16
parameter_list|(
name|__m128i
name|__X
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v8hi
operator|)
name|__X
argument_list|,
operator|(
name|__v8hi
operator|)
name|__X
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_broadcastd_epi32
parameter_list|(
name|__m128i
name|__X
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v4si
operator|)
name|__X
argument_list|,
operator|(
name|__v4si
operator|)
name|__X
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_broadcastq_epi64
parameter_list|(
name|__m128i
name|__X
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v2di
operator|)
name|__X
argument_list|,
operator|(
name|__v2di
operator|)
name|__X
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128i
name|__DEFAULT_FN_ATTRS
name|_mm_broadcastb_epi8
parameter_list|(
name|__m128i
name|__X
parameter_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v16qi
operator|)
name|__X
argument_list|,
operator|(
name|__v16qi
operator|)
name|__X
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128i
name|__DEFAULT_FN_ATTRS
name|_mm_broadcastw_epi16
parameter_list|(
name|__m128i
name|__X
parameter_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v8hi
operator|)
name|__X
argument_list|,
operator|(
name|__v8hi
operator|)
name|__X
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128i
name|__DEFAULT_FN_ATTRS
name|_mm_broadcastd_epi32
parameter_list|(
name|__m128i
name|__X
parameter_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v4si
operator|)
name|__X
argument_list|,
operator|(
name|__v4si
operator|)
name|__X
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128i
name|__DEFAULT_FN_ATTRS
name|_mm_broadcastq_epi64
parameter_list|(
name|__m128i
name|__X
parameter_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_shufflevector
argument_list|(
operator|(
name|__v2di
operator|)
name|__X
argument_list|,
operator|(
name|__v2di
operator|)
name|__X
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_permutevar8x32_epi32
parameter_list|(
name|__m256i
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_permvarsi256
argument_list|(
operator|(
name|__v8si
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|_mm256_permute4x64_pd
parameter_list|(
name|V
parameter_list|,
name|M
parameter_list|)
value|__extension__ ({ \   (__m256d)__builtin_shufflevector((__v4df)(__m256d)(V), \                                    (__v4df)_mm256_undefined_pd(), \                                    ((M)>> 0)& 0x3, \                                    ((M)>> 2)& 0x3, \                                    ((M)>> 4)& 0x3, \                                    ((M)>> 6)& 0x3); })
end_define

begin_function
specifier|static
name|__inline__
name|__m256
name|__DEFAULT_FN_ATTRS
name|_mm256_permutevar8x32_ps
parameter_list|(
name|__m256
name|__a
parameter_list|,
name|__m256i
name|__b
parameter_list|)
block|{
return|return
operator|(
name|__m256
operator|)
name|__builtin_ia32_permvarsf256
argument_list|(
operator|(
name|__v8sf
operator|)
name|__a
argument_list|,
operator|(
name|__v8si
operator|)
name|__b
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|_mm256_permute4x64_epi64
parameter_list|(
name|V
parameter_list|,
name|M
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_shufflevector((__v4di)(__m256i)(V), \                                    (__v4di)_mm256_undefined_si256(), \                                    ((M)>> 0)& 0x3, \                                    ((M)>> 2)& 0x3, \                                    ((M)>> 4)& 0x3, \                                    ((M)>> 6)& 0x3); })
end_define

begin_define
define|#
directive|define
name|_mm256_permute2x128_si256
parameter_list|(
name|V1
parameter_list|,
name|V2
parameter_list|,
name|M
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_ia32_permti256((__m256i)(V1), (__m256i)(V2), (M)); })
end_define

begin_define
define|#
directive|define
name|_mm256_extracti128_si256
parameter_list|(
name|V
parameter_list|,
name|M
parameter_list|)
value|__extension__ ({ \   (__m128i)__builtin_shufflevector((__v4di)(__m256i)(V), \                                    (__v4di)_mm256_undefined_si256(), \                                    (((M)& 1) ? 2 : 0), \                                    (((M)& 1) ? 3 : 1) ); })
end_define

begin_define
define|#
directive|define
name|_mm256_inserti128_si256
parameter_list|(
name|V1
parameter_list|,
name|V2
parameter_list|,
name|M
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_shufflevector((__v4di)(__m256i)(V1), \                                    (__v4di)_mm256_castsi128_si256((__m128i)(V2)), \                                    (((M)& 1) ? 0 : 4), \                                    (((M)& 1) ? 1 : 5), \                                    (((M)& 1) ? 4 : 2), \                                    (((M)& 1) ? 5 : 3) ); })
end_define

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_maskload_epi32
parameter_list|(
name|int
specifier|const
modifier|*
name|__X
parameter_list|,
name|__m256i
name|__M
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_maskloadd256
argument_list|(
operator|(
specifier|const
name|__v8si
operator|*
operator|)
name|__X
argument_list|,
operator|(
name|__v8si
operator|)
name|__M
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_maskload_epi64
parameter_list|(
name|long
name|long
specifier|const
modifier|*
name|__X
parameter_list|,
name|__m256i
name|__M
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_maskloadq256
argument_list|(
operator|(
specifier|const
name|__v4di
operator|*
operator|)
name|__X
argument_list|,
operator|(
name|__v4di
operator|)
name|__M
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128i
name|__DEFAULT_FN_ATTRS
name|_mm_maskload_epi32
parameter_list|(
name|int
specifier|const
modifier|*
name|__X
parameter_list|,
name|__m128i
name|__M
parameter_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_maskloadd
argument_list|(
operator|(
specifier|const
name|__v4si
operator|*
operator|)
name|__X
argument_list|,
operator|(
name|__v4si
operator|)
name|__M
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128i
name|__DEFAULT_FN_ATTRS
name|_mm_maskload_epi64
parameter_list|(
name|long
name|long
specifier|const
modifier|*
name|__X
parameter_list|,
name|__m128i
name|__M
parameter_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_maskloadq
argument_list|(
operator|(
specifier|const
name|__v2di
operator|*
operator|)
name|__X
argument_list|,
operator|(
name|__v2di
operator|)
name|__M
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm256_maskstore_epi32
parameter_list|(
name|int
modifier|*
name|__X
parameter_list|,
name|__m256i
name|__M
parameter_list|,
name|__m256i
name|__Y
parameter_list|)
block|{
name|__builtin_ia32_maskstored256
argument_list|(
operator|(
name|__v8si
operator|*
operator|)
name|__X
argument_list|,
operator|(
name|__v8si
operator|)
name|__M
argument_list|,
operator|(
name|__v8si
operator|)
name|__Y
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm256_maskstore_epi64
parameter_list|(
name|long
name|long
modifier|*
name|__X
parameter_list|,
name|__m256i
name|__M
parameter_list|,
name|__m256i
name|__Y
parameter_list|)
block|{
name|__builtin_ia32_maskstoreq256
argument_list|(
operator|(
name|__v4di
operator|*
operator|)
name|__X
argument_list|,
operator|(
name|__v4di
operator|)
name|__M
argument_list|,
operator|(
name|__v4di
operator|)
name|__Y
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_maskstore_epi32
parameter_list|(
name|int
modifier|*
name|__X
parameter_list|,
name|__m128i
name|__M
parameter_list|,
name|__m128i
name|__Y
parameter_list|)
block|{
name|__builtin_ia32_maskstored
argument_list|(
operator|(
name|__v4si
operator|*
operator|)
name|__X
argument_list|,
operator|(
name|__v4si
operator|)
name|__M
argument_list|,
operator|(
name|__v4si
operator|)
name|__Y
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|void
name|__DEFAULT_FN_ATTRS
name|_mm_maskstore_epi64
parameter_list|(
name|long
name|long
modifier|*
name|__X
parameter_list|,
name|__m128i
name|__M
parameter_list|,
name|__m128i
name|__Y
parameter_list|)
block|{
name|__builtin_ia32_maskstoreq
argument_list|(
operator|(
name|__v2di
operator|*
operator|)
name|__X
argument_list|,
operator|(
name|__v2di
operator|)
name|__M
argument_list|,
operator|(
name|__v2di
operator|)
name|__Y
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sllv_epi32
parameter_list|(
name|__m256i
name|__X
parameter_list|,
name|__m256i
name|__Y
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psllv8si
argument_list|(
operator|(
name|__v8si
operator|)
name|__X
argument_list|,
operator|(
name|__v8si
operator|)
name|__Y
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128i
name|__DEFAULT_FN_ATTRS
name|_mm_sllv_epi32
parameter_list|(
name|__m128i
name|__X
parameter_list|,
name|__m128i
name|__Y
parameter_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psllv4si
argument_list|(
operator|(
name|__v4si
operator|)
name|__X
argument_list|,
operator|(
name|__v4si
operator|)
name|__Y
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_sllv_epi64
parameter_list|(
name|__m256i
name|__X
parameter_list|,
name|__m256i
name|__Y
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psllv4di
argument_list|(
operator|(
name|__v4di
operator|)
name|__X
argument_list|,
operator|(
name|__v4di
operator|)
name|__Y
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128i
name|__DEFAULT_FN_ATTRS
name|_mm_sllv_epi64
parameter_list|(
name|__m128i
name|__X
parameter_list|,
name|__m128i
name|__Y
parameter_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psllv2di
argument_list|(
operator|(
name|__v2di
operator|)
name|__X
argument_list|,
operator|(
name|__v2di
operator|)
name|__Y
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_srav_epi32
parameter_list|(
name|__m256i
name|__X
parameter_list|,
name|__m256i
name|__Y
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psrav8si
argument_list|(
operator|(
name|__v8si
operator|)
name|__X
argument_list|,
operator|(
name|__v8si
operator|)
name|__Y
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128i
name|__DEFAULT_FN_ATTRS
name|_mm_srav_epi32
parameter_list|(
name|__m128i
name|__X
parameter_list|,
name|__m128i
name|__Y
parameter_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psrav4si
argument_list|(
operator|(
name|__v4si
operator|)
name|__X
argument_list|,
operator|(
name|__v4si
operator|)
name|__Y
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_srlv_epi32
parameter_list|(
name|__m256i
name|__X
parameter_list|,
name|__m256i
name|__Y
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psrlv8si
argument_list|(
operator|(
name|__v8si
operator|)
name|__X
argument_list|,
operator|(
name|__v8si
operator|)
name|__Y
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128i
name|__DEFAULT_FN_ATTRS
name|_mm_srlv_epi32
parameter_list|(
name|__m128i
name|__X
parameter_list|,
name|__m128i
name|__Y
parameter_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psrlv4si
argument_list|(
operator|(
name|__v4si
operator|)
name|__X
argument_list|,
operator|(
name|__v4si
operator|)
name|__Y
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m256i
name|__DEFAULT_FN_ATTRS
name|_mm256_srlv_epi64
parameter_list|(
name|__m256i
name|__X
parameter_list|,
name|__m256i
name|__Y
parameter_list|)
block|{
return|return
operator|(
name|__m256i
operator|)
name|__builtin_ia32_psrlv4di
argument_list|(
operator|(
name|__v4di
operator|)
name|__X
argument_list|,
operator|(
name|__v4di
operator|)
name|__Y
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|__inline__
name|__m128i
name|__DEFAULT_FN_ATTRS
name|_mm_srlv_epi64
parameter_list|(
name|__m128i
name|__X
parameter_list|,
name|__m128i
name|__Y
parameter_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psrlv2di
argument_list|(
operator|(
name|__v2di
operator|)
name|__X
argument_list|,
operator|(
name|__v2di
operator|)
name|__Y
argument_list|)
return|;
block|}
end_function

begin_define
define|#
directive|define
name|_mm_mask_i32gather_pd
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128d)__builtin_ia32_gatherd_pd((__v2df)(__m128i)(a), \                                      (double const *)(m), \                                      (__v4si)(__m128i)(i), \                                      (__v2df)(__m128d)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_mask_i32gather_pd
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m256d)__builtin_ia32_gatherd_pd256((__v4df)(__m256d)(a), \                                         (double const *)(m), \                                         (__v4si)(__m128i)(i), \                                         (__v4df)(__m256d)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_mask_i64gather_pd
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128d)__builtin_ia32_gatherq_pd((__v2df)(__m128d)(a), \                                      (double const *)(m), \                                      (__v2di)(__m128i)(i), \                                      (__v2df)(__m128d)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_mask_i64gather_pd
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m256d)__builtin_ia32_gatherq_pd256((__v4df)(__m256d)(a), \                                         (double const *)(m), \                                         (__v4di)(__m256i)(i), \                                         (__v4df)(__m256d)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_mask_i32gather_ps
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128)__builtin_ia32_gatherd_ps((__v4sf)(__m128)(a), \                                     (float const *)(m), \                                     (__v4si)(__m128i)(i), \                                     (__v4sf)(__m128)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_mask_i32gather_ps
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m256)__builtin_ia32_gatherd_ps256((__v8sf)(__m256)(a), \                                        (float const *)(m), \                                        (__v8si)(__m256i)(i), \                                        (__v8sf)(__m256)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_mask_i64gather_ps
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128)__builtin_ia32_gatherq_ps((__v4sf)(__m128)(a), \                                     (float const *)(m), \                                     (__v2di)(__m128i)(i), \                                     (__v4sf)(__m128)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_mask_i64gather_ps
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128)__builtin_ia32_gatherq_ps256((__v4sf)(__m128)(a), \                                        (float const *)(m), \                                        (__v4di)(__m256i)(i), \                                        (__v4sf)(__m128)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_mask_i32gather_epi32
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128i)__builtin_ia32_gatherd_d((__v4si)(__m128i)(a), \                                     (int const *)(m), \                                     (__v4si)(__m128i)(i), \                                     (__v4si)(__m128i)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_mask_i32gather_epi32
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_ia32_gatherd_d256((__v8si)(__m256i)(a), \                                        (int const *)(m), \                                        (__v8si)(__m256i)(i), \                                        (__v8si)(__m256i)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_mask_i64gather_epi32
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128i)__builtin_ia32_gatherq_d((__v4si)(__m128i)(a), \                                     (int const *)(m), \                                     (__v2di)(__m128i)(i), \                                     (__v4si)(__m128i)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_mask_i64gather_epi32
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128i)__builtin_ia32_gatherq_d256((__v4si)(__m128i)(a), \                                        (int const *)(m), \                                        (__v4di)(__m256i)(i), \                                        (__v4si)(__m128i)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_mask_i32gather_epi64
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128i)__builtin_ia32_gatherd_q((__v2di)(__m128i)(a), \                                     (long long const *)(m), \                                     (__v4si)(__m128i)(i), \                                     (__v2di)(__m128i)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_mask_i32gather_epi64
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_ia32_gatherd_q256((__v4di)(__m256i)(a), \                                        (long long const *)(m), \                                        (__v4si)(__m128i)(i), \                                        (__v4di)(__m256i)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_mask_i64gather_epi64
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128i)__builtin_ia32_gatherq_q((__v2di)(__m128i)(a), \                                     (long long const *)(m), \                                     (__v2di)(__m128i)(i), \                                     (__v2di)(__m128i)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_mask_i64gather_epi64
parameter_list|(
name|a
parameter_list|,
name|m
parameter_list|,
name|i
parameter_list|,
name|mask
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_ia32_gatherq_q256((__v4di)(__m256i)(a), \                                        (long long const *)(m), \                                        (__v4di)(__m256i)(i), \                                        (__v4di)(__m256i)(mask), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_i32gather_pd
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128d)__builtin_ia32_gatherd_pd((__v2df)_mm_undefined_pd(), \                                      (double const *)(m), \                                      (__v4si)(__m128i)(i), \                                      (__v2df)_mm_cmpeq_pd(_mm_setzero_pd(), \                                                           _mm_setzero_pd()), \                                      (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_i32gather_pd
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m256d)__builtin_ia32_gatherd_pd256((__v4df)_mm256_undefined_pd(), \                                         (double const *)(m), \                                         (__v4si)(__m128i)(i), \                                         (__v4df)_mm256_cmp_pd(_mm256_setzero_pd(), \                                                               _mm256_setzero_pd(), \                                                               _CMP_EQ_OQ), \                                         (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_i64gather_pd
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128d)__builtin_ia32_gatherq_pd((__v2df)_mm_undefined_pd(), \                                      (double const *)(m), \                                      (__v2di)(__m128i)(i), \                                      (__v2df)_mm_cmpeq_pd(_mm_setzero_pd(), \                                                           _mm_setzero_pd()), \                                      (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_i64gather_pd
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m256d)__builtin_ia32_gatherq_pd256((__v4df)_mm256_undefined_pd(), \                                         (double const *)(m), \                                         (__v4di)(__m256i)(i), \                                         (__v4df)_mm256_cmp_pd(_mm256_setzero_pd(), \                                                               _mm256_setzero_pd(), \                                                               _CMP_EQ_OQ), \                                         (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_i32gather_ps
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128)__builtin_ia32_gatherd_ps((__v4sf)_mm_undefined_ps(), \                                     (float const *)(m), \                                     (__v4si)(__m128i)(i), \                                     (__v4sf)_mm_cmpeq_ps(_mm_setzero_ps(), \                                                          _mm_setzero_ps()), \                                     (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_i32gather_ps
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m256)__builtin_ia32_gatherd_ps256((__v8sf)_mm256_undefined_ps(), \                                        (float const *)(m), \                                        (__v8si)(__m256i)(i), \                                        (__v8sf)_mm256_cmp_ps(_mm256_setzero_ps(), \                                                              _mm256_setzero_ps(), \                                                              _CMP_EQ_OQ), \                                        (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_i64gather_ps
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128)__builtin_ia32_gatherq_ps((__v4sf)_mm_undefined_ps(), \                                     (float const *)(m), \                                     (__v2di)(__m128i)(i), \                                     (__v4sf)_mm_cmpeq_ps(_mm_setzero_ps(), \                                                          _mm_setzero_ps()), \                                     (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_i64gather_ps
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128)__builtin_ia32_gatherq_ps256((__v4sf)_mm_undefined_ps(), \                                        (float const *)(m), \                                        (__v4di)(__m256i)(i), \                                        (__v4sf)_mm_cmpeq_ps(_mm_setzero_ps(), \                                                             _mm_setzero_ps()), \                                        (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_i32gather_epi32
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128i)__builtin_ia32_gatherd_d((__v4si)_mm_undefined_si128(), \                                     (int const *)(m), (__v4si)(__m128i)(i), \                                     (__v4si)_mm_set1_epi32(-1), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_i32gather_epi32
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_ia32_gatherd_d256((__v8si)_mm256_undefined_si256(), \                                        (int const *)(m), (__v8si)(__m256i)(i), \                                        (__v8si)_mm256_set1_epi32(-1), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_i64gather_epi32
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128i)__builtin_ia32_gatherq_d((__v4si)_mm_undefined_si128(), \                                     (int const *)(m), (__v2di)(__m128i)(i), \                                     (__v4si)_mm_set1_epi32(-1), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_i64gather_epi32
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128i)__builtin_ia32_gatherq_d256((__v4si)_mm_undefined_si128(), \                                        (int const *)(m), (__v4di)(__m256i)(i), \                                        (__v4si)_mm_set1_epi32(-1), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_i32gather_epi64
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128i)__builtin_ia32_gatherd_q((__v2di)_mm_undefined_si128(), \                                     (long long const *)(m), \                                     (__v4si)(__m128i)(i), \                                     (__v2di)_mm_set1_epi64x(-1), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_i32gather_epi64
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_ia32_gatherd_q256((__v4di)_mm256_undefined_si256(), \                                        (long long const *)(m), \                                        (__v4si)(__m128i)(i), \                                        (__v4di)_mm256_set1_epi64x(-1), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm_i64gather_epi64
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m128i)__builtin_ia32_gatherq_q((__v2di)_mm_undefined_si128(), \                                     (long long const *)(m), \                                     (__v2di)(__m128i)(i), \                                     (__v2di)_mm_set1_epi64x(-1), (s)); })
end_define

begin_define
define|#
directive|define
name|_mm256_i64gather_epi64
parameter_list|(
name|m
parameter_list|,
name|i
parameter_list|,
name|s
parameter_list|)
value|__extension__ ({ \   (__m256i)__builtin_ia32_gatherq_q256((__v4di)_mm256_undefined_si256(), \                                        (long long const *)(m), \                                        (__v4di)(__m256i)(i), \                                        (__v4di)_mm256_set1_epi64x(-1), (s)); })
end_define

begin_undef
undef|#
directive|undef
name|__DEFAULT_FN_ATTRS
end_undef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __AVX2INTRIN_H */
end_comment

end_unit

