begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*===---- avx512dqintrin.h - AVX512DQ intrinsics ---------------------------===  *  * Permission is hereby granted, free of charge, to any person obtaining a copy  * of this software and associated documentation files (the "Software"), to deal  * in the Software without restriction, including without limitation the rights  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell  * copies of the Software, and to permit persons to whom the Software is  * furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice shall be included in  * all copies or substantial portions of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  * THE SOFTWARE.  *  *===-----------------------------------------------------------------------===  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__IMMINTRIN_H
end_ifndef

begin_error
error|#
directive|error
literal|"Never use<avx512dqintrin.h> directly; include<immintrin.h> instead."
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|__AVX512DQINTRIN_H
end_ifndef

begin_define
define|#
directive|define
name|__AVX512DQINTRIN_H
end_define

begin_decl_stmt
specifier|static
name|__inline__
name|__m512i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_mullo_epi64
argument_list|(
name|__m512i
name|__A
argument_list|,
name|__m512i
name|__B
argument_list|)
block|{
return|return
call|(
name|__m512i
call|)
argument_list|(
operator|(
name|__v8di
operator|)
name|__A
operator|*
operator|(
name|__v8di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_mask_mullo_epi64
argument_list|(
name|__m512i
name|__W
argument_list|,
name|__mmask8
name|__U
argument_list|,
name|__m512i
name|__A
argument_list|,
name|__m512i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512i
operator|)
name|__builtin_ia32_pmullq512_mask
argument_list|(
operator|(
name|__v8di
operator|)
name|__A
argument_list|,
operator|(
name|__v8di
operator|)
name|__B
argument_list|,
operator|(
name|__v8di
operator|)
name|__W
argument_list|,
operator|(
name|__mmask8
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_maskz_mullo_epi64
argument_list|(
name|__mmask8
name|__U
argument_list|,
name|__m512i
name|__A
argument_list|,
name|__m512i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512i
operator|)
name|__builtin_ia32_pmullq512_mask
argument_list|(
operator|(
name|__v8di
operator|)
name|__A
argument_list|,
operator|(
name|__v8di
operator|)
name|__B
argument_list|,
operator|(
name|__v8di
operator|)
name|_mm512_setzero_si512
argument_list|()
argument_list|,
operator|(
name|__mmask8
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_xor_pd
argument_list|(
name|__m512d
name|__A
argument_list|,
name|__m512d
name|__B
argument_list|)
block|{
return|return
call|(
name|__m512d
call|)
argument_list|(
operator|(
name|__v8di
operator|)
name|__A
operator|^
operator|(
name|__v8di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_mask_xor_pd
argument_list|(
name|__m512d
name|__W
argument_list|,
name|__mmask8
name|__U
argument_list|,
name|__m512d
name|__A
argument_list|,
name|__m512d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512d
operator|)
name|__builtin_ia32_xorpd512_mask
argument_list|(
operator|(
name|__v8df
operator|)
name|__A
argument_list|,
operator|(
name|__v8df
operator|)
name|__B
argument_list|,
operator|(
name|__v8df
operator|)
name|__W
argument_list|,
operator|(
name|__mmask8
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_maskz_xor_pd
argument_list|(
name|__mmask8
name|__U
argument_list|,
name|__m512d
name|__A
argument_list|,
name|__m512d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512d
operator|)
name|__builtin_ia32_xorpd512_mask
argument_list|(
operator|(
name|__v8df
operator|)
name|__A
argument_list|,
operator|(
name|__v8df
operator|)
name|__B
argument_list|,
operator|(
name|__v8df
operator|)
name|_mm512_setzero_pd
argument_list|()
argument_list|,
operator|(
name|__mmask8
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_xor_ps
argument_list|(
name|__m512
name|__A
argument_list|,
name|__m512
name|__B
argument_list|)
block|{
return|return
call|(
name|__m512
call|)
argument_list|(
operator|(
name|__v16si
operator|)
name|__A
operator|^
operator|(
name|__v16si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_mask_xor_ps
argument_list|(
name|__m512
name|__W
argument_list|,
name|__mmask16
name|__U
argument_list|,
name|__m512
name|__A
argument_list|,
name|__m512
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512
operator|)
name|__builtin_ia32_xorps512_mask
argument_list|(
operator|(
name|__v16sf
operator|)
name|__A
argument_list|,
operator|(
name|__v16sf
operator|)
name|__B
argument_list|,
operator|(
name|__v16sf
operator|)
name|__W
argument_list|,
operator|(
name|__mmask16
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_maskz_xor_ps
argument_list|(
name|__mmask16
name|__U
argument_list|,
name|__m512
name|__A
argument_list|,
name|__m512
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512
operator|)
name|__builtin_ia32_xorps512_mask
argument_list|(
operator|(
name|__v16sf
operator|)
name|__A
argument_list|,
operator|(
name|__v16sf
operator|)
name|__B
argument_list|,
operator|(
name|__v16sf
operator|)
name|_mm512_setzero_ps
argument_list|()
argument_list|,
operator|(
name|__mmask16
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_or_pd
argument_list|(
name|__m512d
name|__A
argument_list|,
name|__m512d
name|__B
argument_list|)
block|{
return|return
call|(
name|__m512d
call|)
argument_list|(
operator|(
name|__v8di
operator|)
name|__A
operator||
operator|(
name|__v8di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_mask_or_pd
argument_list|(
name|__m512d
name|__W
argument_list|,
name|__mmask8
name|__U
argument_list|,
name|__m512d
name|__A
argument_list|,
name|__m512d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512d
operator|)
name|__builtin_ia32_orpd512_mask
argument_list|(
operator|(
name|__v8df
operator|)
name|__A
argument_list|,
operator|(
name|__v8df
operator|)
name|__B
argument_list|,
operator|(
name|__v8df
operator|)
name|__W
argument_list|,
operator|(
name|__mmask8
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_maskz_or_pd
argument_list|(
name|__mmask8
name|__U
argument_list|,
name|__m512d
name|__A
argument_list|,
name|__m512d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512d
operator|)
name|__builtin_ia32_orpd512_mask
argument_list|(
operator|(
name|__v8df
operator|)
name|__A
argument_list|,
operator|(
name|__v8df
operator|)
name|__B
argument_list|,
operator|(
name|__v8df
operator|)
name|_mm512_setzero_pd
argument_list|()
argument_list|,
operator|(
name|__mmask8
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_or_ps
argument_list|(
name|__m512
name|__A
argument_list|,
name|__m512
name|__B
argument_list|)
block|{
return|return
call|(
name|__m512
call|)
argument_list|(
operator|(
name|__v16si
operator|)
name|__A
operator||
operator|(
name|__v16si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_mask_or_ps
argument_list|(
name|__m512
name|__W
argument_list|,
name|__mmask16
name|__U
argument_list|,
name|__m512
name|__A
argument_list|,
name|__m512
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512
operator|)
name|__builtin_ia32_orps512_mask
argument_list|(
operator|(
name|__v16sf
operator|)
name|__A
argument_list|,
operator|(
name|__v16sf
operator|)
name|__B
argument_list|,
operator|(
name|__v16sf
operator|)
name|__W
argument_list|,
operator|(
name|__mmask16
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_maskz_or_ps
argument_list|(
name|__mmask16
name|__U
argument_list|,
name|__m512
name|__A
argument_list|,
name|__m512
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512
operator|)
name|__builtin_ia32_orps512_mask
argument_list|(
operator|(
name|__v16sf
operator|)
name|__A
argument_list|,
operator|(
name|__v16sf
operator|)
name|__B
argument_list|,
operator|(
name|__v16sf
operator|)
name|_mm512_setzero_ps
argument_list|()
argument_list|,
operator|(
name|__mmask16
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_and_pd
argument_list|(
name|__m512d
name|__A
argument_list|,
name|__m512d
name|__B
argument_list|)
block|{
return|return
call|(
name|__m512d
call|)
argument_list|(
operator|(
name|__v8di
operator|)
name|__A
operator|&
operator|(
name|__v8di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_mask_and_pd
argument_list|(
name|__m512d
name|__W
argument_list|,
name|__mmask8
name|__U
argument_list|,
name|__m512d
name|__A
argument_list|,
name|__m512d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512d
operator|)
name|__builtin_ia32_andpd512_mask
argument_list|(
operator|(
name|__v8df
operator|)
name|__A
argument_list|,
operator|(
name|__v8df
operator|)
name|__B
argument_list|,
operator|(
name|__v8df
operator|)
name|__W
argument_list|,
operator|(
name|__mmask8
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_maskz_and_pd
argument_list|(
name|__mmask8
name|__U
argument_list|,
name|__m512d
name|__A
argument_list|,
name|__m512d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512d
operator|)
name|__builtin_ia32_andpd512_mask
argument_list|(
operator|(
name|__v8df
operator|)
name|__A
argument_list|,
operator|(
name|__v8df
operator|)
name|__B
argument_list|,
operator|(
name|__v8df
operator|)
name|_mm512_setzero_pd
argument_list|()
argument_list|,
operator|(
name|__mmask8
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_and_ps
argument_list|(
name|__m512
name|__A
argument_list|,
name|__m512
name|__B
argument_list|)
block|{
return|return
call|(
name|__m512
call|)
argument_list|(
operator|(
name|__v16si
operator|)
name|__A
operator|&
operator|(
name|__v16si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_mask_and_ps
argument_list|(
name|__m512
name|__W
argument_list|,
name|__mmask16
name|__U
argument_list|,
name|__m512
name|__A
argument_list|,
name|__m512
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512
operator|)
name|__builtin_ia32_andps512_mask
argument_list|(
operator|(
name|__v16sf
operator|)
name|__A
argument_list|,
operator|(
name|__v16sf
operator|)
name|__B
argument_list|,
operator|(
name|__v16sf
operator|)
name|__W
argument_list|,
operator|(
name|__mmask16
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_maskz_and_ps
argument_list|(
name|__mmask16
name|__U
argument_list|,
name|__m512
name|__A
argument_list|,
name|__m512
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512
operator|)
name|__builtin_ia32_andps512_mask
argument_list|(
operator|(
name|__v16sf
operator|)
name|__A
argument_list|,
operator|(
name|__v16sf
operator|)
name|__B
argument_list|,
operator|(
name|__v16sf
operator|)
name|_mm512_setzero_ps
argument_list|()
argument_list|,
operator|(
name|__mmask16
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_andnot_pd
argument_list|(
name|__m512d
name|__A
argument_list|,
name|__m512d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512d
operator|)
name|__builtin_ia32_andnpd512_mask
argument_list|(
operator|(
name|__v8df
operator|)
name|__A
argument_list|,
operator|(
name|__v8df
operator|)
name|__B
argument_list|,
operator|(
name|__v8df
operator|)
name|_mm512_setzero_pd
argument_list|()
argument_list|,
operator|(
name|__mmask8
operator|)
operator|-
literal|1
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_mask_andnot_pd
argument_list|(
name|__m512d
name|__W
argument_list|,
name|__mmask8
name|__U
argument_list|,
name|__m512d
name|__A
argument_list|,
name|__m512d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512d
operator|)
name|__builtin_ia32_andnpd512_mask
argument_list|(
operator|(
name|__v8df
operator|)
name|__A
argument_list|,
operator|(
name|__v8df
operator|)
name|__B
argument_list|,
operator|(
name|__v8df
operator|)
name|__W
argument_list|,
operator|(
name|__mmask8
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_maskz_andnot_pd
argument_list|(
name|__mmask8
name|__U
argument_list|,
name|__m512d
name|__A
argument_list|,
name|__m512d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512d
operator|)
name|__builtin_ia32_andnpd512_mask
argument_list|(
operator|(
name|__v8df
operator|)
name|__A
argument_list|,
operator|(
name|__v8df
operator|)
name|__B
argument_list|,
operator|(
name|__v8df
operator|)
name|_mm512_setzero_pd
argument_list|()
argument_list|,
operator|(
name|__mmask8
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_andnot_ps
argument_list|(
name|__m512
name|__A
argument_list|,
name|__m512
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512
operator|)
name|__builtin_ia32_andnps512_mask
argument_list|(
operator|(
name|__v16sf
operator|)
name|__A
argument_list|,
operator|(
name|__v16sf
operator|)
name|__B
argument_list|,
operator|(
name|__v16sf
operator|)
name|_mm512_setzero_ps
argument_list|()
argument_list|,
operator|(
name|__mmask16
operator|)
operator|-
literal|1
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_mask_andnot_ps
argument_list|(
name|__m512
name|__W
argument_list|,
name|__mmask16
name|__U
argument_list|,
name|__m512
name|__A
argument_list|,
name|__m512
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512
operator|)
name|__builtin_ia32_andnps512_mask
argument_list|(
operator|(
name|__v16sf
operator|)
name|__A
argument_list|,
operator|(
name|__v16sf
operator|)
name|__B
argument_list|,
operator|(
name|__v16sf
operator|)
name|__W
argument_list|,
operator|(
name|__mmask16
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline__
name|__m512
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|,
name|__nodebug__
operator|)
argument_list|)
name|_mm512_maskz_andnot_ps
argument_list|(
name|__mmask16
name|__U
argument_list|,
name|__m512
name|__A
argument_list|,
name|__m512
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m512
operator|)
name|__builtin_ia32_andnps512_mask
argument_list|(
operator|(
name|__v16sf
operator|)
name|__A
argument_list|,
operator|(
name|__v16sf
operator|)
name|__B
argument_list|,
operator|(
name|__v16sf
operator|)
name|_mm512_setzero_ps
argument_list|()
argument_list|,
operator|(
name|__mmask16
operator|)
name|__U
argument_list|)
return|;
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

