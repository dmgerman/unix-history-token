begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*===---- __clang_cuda_cmath.h - Device-side CUDA cmath support ------------===  *  * Permission is hereby granted, free of charge, to any person obtaining a copy  * of this software and associated documentation files (the "Software"), to deal  * in the Software without restriction, including without limitation the rights  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell  * copies of the Software, and to permit persons to whom the Software is  * furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice shall be included in  * all copies or substantial portions of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  * THE SOFTWARE.  *  *===-----------------------------------------------------------------------===  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__CLANG_CUDA_CMATH_H__
end_ifndef

begin_define
define|#
directive|define
name|__CLANG_CUDA_CMATH_H__
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|__CUDA__
end_ifndef

begin_error
error|#
directive|error
literal|"This file is for CUDA compilation only."
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// CUDA lets us use various std math functions on the device side.  This file
end_comment

begin_comment
comment|// works in concert with __clang_cuda_math_forward_declares.h to make this work.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Specifically, the forward-declares header declares __device__ overloads for
end_comment

begin_comment
comment|// these functions in the global namespace, then pulls them into namespace std
end_comment

begin_comment
comment|// with 'using' statements.  Then this file implements those functions, after
end_comment

begin_comment
comment|// the implementations have been pulled in.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// It's important that we declare the functions in the global namespace and pull
end_comment

begin_comment
comment|// them into namespace std with using statements, as opposed to simply declaring
end_comment

begin_comment
comment|// these functions in namespace std, because our device functions need to
end_comment

begin_comment
comment|// overload the standard library functions, which may be declared in the global
end_comment

begin_comment
comment|// namespace or in std, depending on the degree of conformance of the stdlib
end_comment

begin_comment
comment|// implementation.  Declaring in the global namespace and pulling into namespace
end_comment

begin_comment
comment|// std covers all of the known knowns.
end_comment

begin_define
define|#
directive|define
name|__DEVICE__
value|static __device__ __inline__ __attribute__((always_inline))
end_define

begin_function
name|__DEVICE__
name|long
name|long
name|abs
parameter_list|(
name|long
name|long
name|__n
parameter_list|)
block|{
return|return
operator|::
name|llabs
argument_list|(
name|__n
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|long
name|abs
parameter_list|(
name|long
name|__n
parameter_list|)
block|{
return|return
operator|::
name|labs
argument_list|(
name|__n
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|abs
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|fabsf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|double
name|abs
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
operator|::
name|fabs
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|acos
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|acosf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|asin
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|asinf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|atan
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|atanf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|atan2
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
operator|::
name|atan2f
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|ceil
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|ceilf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|cos
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|cosf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|cosh
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|coshf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|exp
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|expf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|fabs
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|fabsf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|floor
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|floorf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|fmod
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
operator|::
name|fmodf
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|int
name|fpclassify
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|__builtin_fpclassify
argument_list|(
name|FP_NAN
argument_list|,
name|FP_INFINITE
argument_list|,
name|FP_NORMAL
argument_list|,
name|FP_SUBNORMAL
argument_list|,
name|FP_ZERO
argument_list|,
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|int
name|fpclassify
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|__builtin_fpclassify
argument_list|(
name|FP_NAN
argument_list|,
name|FP_INFINITE
argument_list|,
name|FP_NORMAL
argument_list|,
name|FP_SUBNORMAL
argument_list|,
name|FP_ZERO
argument_list|,
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|frexp
parameter_list|(
name|float
name|__arg
parameter_list|,
name|int
modifier|*
name|__exp
parameter_list|)
block|{
return|return
operator|::
name|frexpf
argument_list|(
name|__arg
argument_list|,
name|__exp
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isinf
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|__isinff
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isinf
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
operator|::
name|__isinf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isfinite
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|__finitef
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isfinite
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
operator|::
name|__finite
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isgreater
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
name|__builtin_isgreater
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isgreater
parameter_list|(
name|double
name|__x
parameter_list|,
name|double
name|__y
parameter_list|)
block|{
return|return
name|__builtin_isgreater
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isgreaterequal
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
name|__builtin_isgreaterequal
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isgreaterequal
parameter_list|(
name|double
name|__x
parameter_list|,
name|double
name|__y
parameter_list|)
block|{
return|return
name|__builtin_isgreaterequal
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isless
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
name|__builtin_isless
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isless
parameter_list|(
name|double
name|__x
parameter_list|,
name|double
name|__y
parameter_list|)
block|{
return|return
name|__builtin_isless
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|islessequal
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
name|__builtin_islessequal
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|islessequal
parameter_list|(
name|double
name|__x
parameter_list|,
name|double
name|__y
parameter_list|)
block|{
return|return
name|__builtin_islessequal
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|islessgreater
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
name|__builtin_islessgreater
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|islessgreater
parameter_list|(
name|double
name|__x
parameter_list|,
name|double
name|__y
parameter_list|)
block|{
return|return
name|__builtin_islessgreater
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isnan
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|__isnanf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isnan
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
operator|::
name|__isnan
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isnormal
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
name|__builtin_isnormal
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isnormal
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
name|__builtin_isnormal
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isunordered
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
name|__y
parameter_list|)
block|{
return|return
name|__builtin_isunordered
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|isunordered
parameter_list|(
name|double
name|__x
parameter_list|,
name|double
name|__y
parameter_list|)
block|{
return|return
name|__builtin_isunordered
argument_list|(
name|__x
argument_list|,
name|__y
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|ldexp
parameter_list|(
name|float
name|__arg
parameter_list|,
name|int
name|__exp
parameter_list|)
block|{
return|return
operator|::
name|ldexpf
argument_list|(
name|__arg
argument_list|,
name|__exp
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|log
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|logf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|log10
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|log10f
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|modf
parameter_list|(
name|float
name|__x
parameter_list|,
name|float
modifier|*
name|__iptr
parameter_list|)
block|{
return|return
operator|::
name|modff
argument_list|(
name|__x
argument_list|,
name|__iptr
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|nexttoward
parameter_list|(
name|float
name|__from
parameter_list|,
name|float
name|__to
parameter_list|)
block|{
return|return
name|__builtin_nexttowardf
argument_list|(
name|__from
argument_list|,
name|__to
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|double
name|nexttoward
parameter_list|(
name|double
name|__from
parameter_list|,
name|double
name|__to
parameter_list|)
block|{
return|return
name|__builtin_nexttoward
argument_list|(
name|__from
argument_list|,
name|__to
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|pow
parameter_list|(
name|float
name|__base
parameter_list|,
name|float
name|__exp
parameter_list|)
block|{
return|return
operator|::
name|powf
argument_list|(
name|__base
argument_list|,
name|__exp
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|pow
parameter_list|(
name|float
name|__base
parameter_list|,
name|int
name|__iexp
parameter_list|)
block|{
return|return
operator|::
name|powif
argument_list|(
name|__base
argument_list|,
name|__iexp
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|double
name|pow
parameter_list|(
name|double
name|__base
parameter_list|,
name|int
name|__iexp
parameter_list|)
block|{
return|return
operator|::
name|powi
argument_list|(
name|__base
argument_list|,
name|__iexp
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|signbit
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|__signbitf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|bool
name|signbit
parameter_list|(
name|double
name|__x
parameter_list|)
block|{
return|return
operator|::
name|__signbit
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|sin
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|sinf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|sinh
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|sinhf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|sqrt
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|sqrtf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|tan
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|tanf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_function
name|__DEVICE__
name|float
name|tanh
parameter_list|(
name|float
name|__x
parameter_list|)
block|{
return|return
operator|::
name|tanhf
argument_list|(
name|__x
argument_list|)
return|;
block|}
end_function

begin_undef
undef|#
directive|undef
name|__DEVICE__
end_undef

begin_endif
endif|#
directive|endif
end_endif

end_unit

