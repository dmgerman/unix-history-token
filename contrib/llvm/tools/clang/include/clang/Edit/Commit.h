begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===----- Commit.h - A unit of edits ---------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_CLANG_EDIT_COMMIT_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_CLANG_EDIT_COMMIT_H
end_define

begin_include
include|#
directive|include
file|"clang/Edit/FileOffset.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/SmallVector.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/StringRef.h"
end_include

begin_decl_stmt
name|namespace
name|clang
block|{
name|class
name|LangOptions
decl_stmt|;
name|class
name|PPConditionalDirectiveRecord
decl_stmt|;
name|namespace
name|edit
block|{
name|class
name|EditedSource
decl_stmt|;
name|class
name|Commit
block|{
name|public
label|:
enum|enum
name|EditKind
block|{
name|Act_Insert
block|,
name|Act_InsertFromRange
block|,
name|Act_Remove
block|}
enum|;
struct|struct
name|Edit
block|{
name|EditKind
name|Kind
decl_stmt|;
name|StringRef
name|Text
decl_stmt|;
name|SourceLocation
name|OrigLoc
decl_stmt|;
name|FileOffset
name|Offset
decl_stmt|;
name|FileOffset
name|InsertFromRangeOffs
decl_stmt|;
name|unsigned
name|Length
decl_stmt|;
name|bool
name|BeforePrev
decl_stmt|;
name|SourceLocation
name|getFileLocation
argument_list|(
name|SourceManager
operator|&
name|SM
argument_list|)
decl|const
decl_stmt|;
name|CharSourceRange
name|getFileRange
argument_list|(
name|SourceManager
operator|&
name|SM
argument_list|)
decl|const
decl_stmt|;
name|CharSourceRange
name|getInsertFromRange
argument_list|(
name|SourceManager
operator|&
name|SM
argument_list|)
decl|const
decl_stmt|;
block|}
struct|;
name|private
label|:
specifier|const
name|SourceManager
modifier|&
name|SourceMgr
decl_stmt|;
specifier|const
name|LangOptions
modifier|&
name|LangOpts
decl_stmt|;
specifier|const
name|PPConditionalDirectiveRecord
modifier|*
name|PPRec
decl_stmt|;
name|EditedSource
modifier|*
name|Editor
decl_stmt|;
name|bool
name|IsCommitable
decl_stmt|;
name|SmallVector
operator|<
name|Edit
operator|,
literal|8
operator|>
name|CachedEdits
expr_stmt|;
name|public
label|:
name|explicit
name|Commit
parameter_list|(
name|EditedSource
modifier|&
name|Editor
parameter_list|)
function_decl|;
name|Commit
argument_list|(
specifier|const
name|SourceManager
operator|&
name|SM
argument_list|,
specifier|const
name|LangOptions
operator|&
name|LangOpts
argument_list|,
specifier|const
name|PPConditionalDirectiveRecord
operator|*
name|PPRec
operator|=
literal|0
argument_list|)
operator|:
name|SourceMgr
argument_list|(
name|SM
argument_list|)
operator|,
name|LangOpts
argument_list|(
name|LangOpts
argument_list|)
operator|,
name|PPRec
argument_list|(
name|PPRec
argument_list|)
operator|,
name|Editor
argument_list|(
literal|0
argument_list|)
operator|,
name|IsCommitable
argument_list|(
argument|true
argument_list|)
block|{ }
name|bool
name|isCommitable
argument_list|()
specifier|const
block|{
return|return
name|IsCommitable
return|;
block|}
name|bool
name|insert
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|StringRef
name|text
parameter_list|,
name|bool
name|afterToken
init|=
name|false
parameter_list|,
name|bool
name|beforePreviousInsertions
init|=
name|false
parameter_list|)
function_decl|;
name|bool
name|insertAfterToken
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|StringRef
name|text
parameter_list|,
name|bool
name|beforePreviousInsertions
init|=
name|false
parameter_list|)
block|{
return|return
name|insert
argument_list|(
name|loc
argument_list|,
name|text
argument_list|,
comment|/*afterToken=*/
name|true
argument_list|,
name|beforePreviousInsertions
argument_list|)
return|;
block|}
name|bool
name|insertBefore
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|StringRef
name|text
parameter_list|)
block|{
return|return
name|insert
argument_list|(
name|loc
argument_list|,
name|text
argument_list|,
comment|/*afterToken=*/
name|false
argument_list|,
comment|/*beforePreviousInsertions=*/
name|true
argument_list|)
return|;
block|}
name|bool
name|insertFromRange
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|CharSourceRange
name|range
parameter_list|,
name|bool
name|afterToken
init|=
name|false
parameter_list|,
name|bool
name|beforePreviousInsertions
init|=
name|false
parameter_list|)
function_decl|;
name|bool
name|insertWrap
parameter_list|(
name|StringRef
name|before
parameter_list|,
name|CharSourceRange
name|range
parameter_list|,
name|StringRef
name|after
parameter_list|)
function_decl|;
name|bool
name|remove
parameter_list|(
name|CharSourceRange
name|range
parameter_list|)
function_decl|;
name|bool
name|replace
parameter_list|(
name|CharSourceRange
name|range
parameter_list|,
name|StringRef
name|text
parameter_list|)
function_decl|;
name|bool
name|replaceWithInner
parameter_list|(
name|CharSourceRange
name|range
parameter_list|,
name|CharSourceRange
name|innerRange
parameter_list|)
function_decl|;
name|bool
name|replaceText
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|StringRef
name|text
parameter_list|,
name|StringRef
name|replacementText
parameter_list|)
function_decl|;
name|bool
name|insertFromRange
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|SourceRange
name|TokenRange
parameter_list|,
name|bool
name|afterToken
init|=
name|false
parameter_list|,
name|bool
name|beforePreviousInsertions
init|=
name|false
parameter_list|)
block|{
return|return
name|insertFromRange
argument_list|(
name|loc
argument_list|,
name|CharSourceRange
operator|::
name|getTokenRange
argument_list|(
name|TokenRange
argument_list|)
argument_list|,
name|afterToken
argument_list|,
name|beforePreviousInsertions
argument_list|)
return|;
block|}
name|bool
name|insertWrap
parameter_list|(
name|StringRef
name|before
parameter_list|,
name|SourceRange
name|TokenRange
parameter_list|,
name|StringRef
name|after
parameter_list|)
block|{
return|return
name|insertWrap
argument_list|(
name|before
argument_list|,
name|CharSourceRange
operator|::
name|getTokenRange
argument_list|(
name|TokenRange
argument_list|)
argument_list|,
name|after
argument_list|)
return|;
block|}
name|bool
name|remove
parameter_list|(
name|SourceRange
name|TokenRange
parameter_list|)
block|{
return|return
name|remove
argument_list|(
name|CharSourceRange
operator|::
name|getTokenRange
argument_list|(
name|TokenRange
argument_list|)
argument_list|)
return|;
block|}
name|bool
name|replace
parameter_list|(
name|SourceRange
name|TokenRange
parameter_list|,
name|StringRef
name|text
parameter_list|)
block|{
return|return
name|replace
argument_list|(
name|CharSourceRange
operator|::
name|getTokenRange
argument_list|(
name|TokenRange
argument_list|)
argument_list|,
name|text
argument_list|)
return|;
block|}
name|bool
name|replaceWithInner
parameter_list|(
name|SourceRange
name|TokenRange
parameter_list|,
name|SourceRange
name|TokenInnerRange
parameter_list|)
block|{
return|return
name|replaceWithInner
argument_list|(
name|CharSourceRange
operator|::
name|getTokenRange
argument_list|(
name|TokenRange
argument_list|)
argument_list|,
name|CharSourceRange
operator|::
name|getTokenRange
argument_list|(
name|TokenInnerRange
argument_list|)
argument_list|)
return|;
block|}
typedef|typedef
name|SmallVector
operator|<
name|Edit
operator|,
literal|8
operator|>
operator|::
name|const_iterator
name|edit_iterator
expr_stmt|;
name|edit_iterator
name|edit_begin
argument_list|()
specifier|const
block|{
return|return
name|CachedEdits
operator|.
name|begin
argument_list|()
return|;
block|}
name|edit_iterator
name|edit_end
argument_list|()
specifier|const
block|{
return|return
name|CachedEdits
operator|.
name|end
argument_list|()
return|;
block|}
name|private
label|:
name|void
name|addInsert
parameter_list|(
name|SourceLocation
name|OrigLoc
parameter_list|,
name|FileOffset
name|Offs
parameter_list|,
name|StringRef
name|text
parameter_list|,
name|bool
name|beforePreviousInsertions
parameter_list|)
function_decl|;
name|void
name|addInsertFromRange
parameter_list|(
name|SourceLocation
name|OrigLoc
parameter_list|,
name|FileOffset
name|Offs
parameter_list|,
name|FileOffset
name|RangeOffs
parameter_list|,
name|unsigned
name|RangeLen
parameter_list|,
name|bool
name|beforePreviousInsertions
parameter_list|)
function_decl|;
name|void
name|addRemove
parameter_list|(
name|SourceLocation
name|OrigLoc
parameter_list|,
name|FileOffset
name|Offs
parameter_list|,
name|unsigned
name|Len
parameter_list|)
function_decl|;
name|bool
name|canInsert
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|FileOffset
modifier|&
name|Offset
parameter_list|)
function_decl|;
name|bool
name|canInsertAfterToken
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|FileOffset
modifier|&
name|Offset
parameter_list|,
name|SourceLocation
modifier|&
name|AfterLoc
parameter_list|)
function_decl|;
name|bool
name|canInsertInOffset
parameter_list|(
name|SourceLocation
name|OrigLoc
parameter_list|,
name|FileOffset
name|Offs
parameter_list|)
function_decl|;
name|bool
name|canRemoveRange
parameter_list|(
name|CharSourceRange
name|range
parameter_list|,
name|FileOffset
modifier|&
name|Offs
parameter_list|,
name|unsigned
modifier|&
name|Len
parameter_list|)
function_decl|;
name|bool
name|canReplaceText
parameter_list|(
name|SourceLocation
name|loc
parameter_list|,
name|StringRef
name|text
parameter_list|,
name|FileOffset
modifier|&
name|Offs
parameter_list|,
name|unsigned
modifier|&
name|Len
parameter_list|)
function_decl|;
name|void
name|commitInsert
parameter_list|(
name|FileOffset
name|offset
parameter_list|,
name|StringRef
name|text
parameter_list|,
name|bool
name|beforePreviousInsertions
parameter_list|)
function_decl|;
name|void
name|commitRemove
parameter_list|(
name|FileOffset
name|offset
parameter_list|,
name|unsigned
name|length
parameter_list|)
function_decl|;
name|bool
name|isAtStartOfMacroExpansion
argument_list|(
name|SourceLocation
name|loc
argument_list|,
name|SourceLocation
operator|*
name|MacroBegin
operator|=
literal|0
argument_list|)
decl|const
decl_stmt|;
name|bool
name|isAtEndOfMacroExpansion
argument_list|(
name|SourceLocation
name|loc
argument_list|,
name|SourceLocation
operator|*
name|MacroEnd
operator|=
literal|0
argument_list|)
decl|const
decl_stmt|;
block|}
empty_stmt|;
block|}
block|}
end_decl_stmt

begin_comment
comment|// end namespace clang
end_comment

begin_endif
endif|#
directive|endif
end_endif

end_unit

