begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===----- FileOffset.h - Offset in a file ----------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_CLANG_EDIT_FILEOFFSET_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_CLANG_EDIT_FILEOFFSET_H
end_define

begin_include
include|#
directive|include
file|"clang/Basic/SourceLocation.h"
end_include

begin_decl_stmt
name|namespace
name|clang
block|{
name|namespace
name|edit
block|{
name|class
name|FileOffset
block|{
name|FileID
name|FID
decl_stmt|;
name|unsigned
name|Offs
decl_stmt|;
name|public
label|:
name|FileOffset
argument_list|()
operator|:
name|Offs
argument_list|(
literal|0
argument_list|)
block|{ }
name|FileOffset
argument_list|(
argument|FileID fid
argument_list|,
argument|unsigned offs
argument_list|)
operator|:
name|FID
argument_list|(
name|fid
argument_list|)
operator|,
name|Offs
argument_list|(
argument|offs
argument_list|)
block|{ }
name|bool
name|isInvalid
argument_list|()
specifier|const
block|{
return|return
name|FID
operator|.
name|isInvalid
argument_list|()
return|;
block|}
name|FileID
name|getFID
argument_list|()
specifier|const
block|{
return|return
name|FID
return|;
block|}
name|unsigned
name|getOffset
argument_list|()
specifier|const
block|{
return|return
name|Offs
return|;
block|}
name|FileOffset
name|getWithOffset
argument_list|(
name|unsigned
name|offset
argument_list|)
decl|const
block|{
name|FileOffset
name|NewOffs
init|=
operator|*
name|this
decl_stmt|;
name|NewOffs
operator|.
name|Offs
operator|+=
name|offset
expr_stmt|;
return|return
name|NewOffs
return|;
block|}
name|friend
name|bool
name|operator
operator|==
operator|(
name|FileOffset
name|LHS
operator|,
name|FileOffset
name|RHS
operator|)
block|{
return|return
name|LHS
operator|.
name|FID
operator|==
name|RHS
operator|.
name|FID
operator|&&
name|LHS
operator|.
name|Offs
operator|==
name|RHS
operator|.
name|Offs
return|;
block|}
name|friend
name|bool
name|operator
operator|!=
operator|(
name|FileOffset
name|LHS
operator|,
name|FileOffset
name|RHS
operator|)
block|{
return|return
operator|!
operator|(
name|LHS
operator|==
name|RHS
operator|)
return|;
block|}
name|friend
name|bool
name|operator
operator|<
operator|(
name|FileOffset
name|LHS
operator|,
name|FileOffset
name|RHS
operator|)
block|{
if|if
condition|(
name|LHS
operator|.
name|FID
operator|!=
name|RHS
operator|.
name|FID
condition|)
return|return
name|LHS
operator|.
name|FID
operator|<
name|RHS
operator|.
name|FID
return|;
return|return
name|LHS
operator|.
name|Offs
operator|<
name|RHS
operator|.
name|Offs
return|;
block|}
name|friend
name|bool
name|operator
operator|>
operator|(
name|FileOffset
name|LHS
operator|,
name|FileOffset
name|RHS
operator|)
block|{
if|if
condition|(
name|LHS
operator|.
name|FID
operator|!=
name|RHS
operator|.
name|FID
condition|)
return|return
name|LHS
operator|.
name|FID
operator|>
name|RHS
operator|.
name|FID
return|;
return|return
name|LHS
operator|.
name|Offs
operator|>
name|RHS
operator|.
name|Offs
return|;
block|}
name|friend
name|bool
name|operator
operator|>=
operator|(
name|FileOffset
name|LHS
operator|,
name|FileOffset
name|RHS
operator|)
block|{
return|return
name|LHS
operator|>
name|RHS
operator|||
name|LHS
operator|==
name|RHS
return|;
block|}
name|friend
name|bool
name|operator
operator|<=
operator|(
name|FileOffset
name|LHS
operator|,
name|FileOffset
name|RHS
operator|)
block|{
return|return
name|LHS
operator|<
name|RHS
operator|||
name|LHS
operator|==
name|RHS
return|;
block|}
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_comment
unit|}  }
comment|// end namespace clang
end_comment

begin_endif
endif|#
directive|endif
end_endif

end_unit

