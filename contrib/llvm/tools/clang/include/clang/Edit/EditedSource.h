begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===----- EditedSource.h - Collection of source edits ----------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_CLANG_EDIT_EDITEDSOURCE_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_CLANG_EDIT_EDITEDSOURCE_H
end_define

begin_include
include|#
directive|include
file|"clang/Basic/IdentifierTable.h"
end_include

begin_include
include|#
directive|include
file|"clang/Edit/FileOffset.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/DenseMap.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/StringRef.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/TinyPtrVector.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Allocator.h"
end_include

begin_include
include|#
directive|include
file|<map>
end_include

begin_decl_stmt
name|namespace
name|clang
block|{
name|class
name|LangOptions
decl_stmt|;
name|class
name|PPConditionalDirectiveRecord
decl_stmt|;
name|namespace
name|edit
block|{
name|class
name|Commit
decl_stmt|;
name|class
name|EditsReceiver
decl_stmt|;
name|class
name|EditedSource
block|{
specifier|const
name|SourceManager
modifier|&
name|SourceMgr
decl_stmt|;
specifier|const
name|LangOptions
modifier|&
name|LangOpts
decl_stmt|;
specifier|const
name|PPConditionalDirectiveRecord
modifier|*
name|PPRec
decl_stmt|;
struct|struct
name|FileEdit
block|{
name|StringRef
name|Text
decl_stmt|;
name|unsigned
name|RemoveLen
decl_stmt|;
name|FileEdit
argument_list|()
operator|:
name|RemoveLen
argument_list|(
literal|0
argument_list|)
block|{}
block|}
struct|;
typedef|typedef
name|std
operator|::
name|map
operator|<
name|FileOffset
operator|,
name|FileEdit
operator|>
name|FileEditsTy
expr_stmt|;
name|FileEditsTy
name|FileEdits
decl_stmt|;
comment|// Location of argument use inside the macro body
typedef|typedef
name|std
operator|::
name|pair
operator|<
name|IdentifierInfo
operator|*
operator|,
name|SourceLocation
operator|>
name|MacroArgUse
expr_stmt|;
name|llvm
operator|::
name|DenseMap
operator|<
name|unsigned
operator|,
name|SmallVector
operator|<
name|MacroArgUse
operator|,
literal|2
operator|>>
name|ExpansionToArgMap
expr_stmt|;
name|SmallVector
operator|<
name|std
operator|::
name|pair
operator|<
name|SourceLocation
operator|,
name|MacroArgUse
operator|>
operator|,
literal|2
operator|>
name|CurrCommitMacroArgExps
expr_stmt|;
name|IdentifierTable
name|IdentTable
decl_stmt|;
name|llvm
operator|::
name|BumpPtrAllocator
name|StrAlloc
expr_stmt|;
name|public
label|:
name|EditedSource
argument_list|(
specifier|const
name|SourceManager
operator|&
name|SM
argument_list|,
specifier|const
name|LangOptions
operator|&
name|LangOpts
argument_list|,
specifier|const
name|PPConditionalDirectiveRecord
operator|*
name|PPRec
operator|=
name|nullptr
argument_list|)
operator|:
name|SourceMgr
argument_list|(
name|SM
argument_list|)
operator|,
name|LangOpts
argument_list|(
name|LangOpts
argument_list|)
operator|,
name|PPRec
argument_list|(
name|PPRec
argument_list|)
operator|,
name|IdentTable
argument_list|(
name|LangOpts
argument_list|)
operator|,
name|StrAlloc
argument_list|()
block|{ }
specifier|const
name|SourceManager
operator|&
name|getSourceManager
argument_list|()
specifier|const
block|{
return|return
name|SourceMgr
return|;
block|}
specifier|const
name|LangOptions
operator|&
name|getLangOpts
argument_list|()
specifier|const
block|{
return|return
name|LangOpts
return|;
block|}
specifier|const
name|PPConditionalDirectiveRecord
operator|*
name|getPPCondDirectiveRecord
argument_list|()
specifier|const
block|{
return|return
name|PPRec
return|;
block|}
name|bool
name|canInsertInOffset
parameter_list|(
name|SourceLocation
name|OrigLoc
parameter_list|,
name|FileOffset
name|Offs
parameter_list|)
function_decl|;
name|bool
name|commit
parameter_list|(
specifier|const
name|Commit
modifier|&
name|commit
parameter_list|)
function_decl|;
name|void
name|applyRewrites
parameter_list|(
name|EditsReceiver
modifier|&
name|receiver
parameter_list|,
name|bool
name|adjustRemovals
init|=
name|true
parameter_list|)
function_decl|;
name|void
name|clearRewrites
parameter_list|()
function_decl|;
name|StringRef
name|copyString
parameter_list|(
name|StringRef
name|str
parameter_list|)
block|{
return|return
name|str
operator|.
name|copy
argument_list|(
name|StrAlloc
argument_list|)
return|;
block|}
name|StringRef
name|copyString
parameter_list|(
specifier|const
name|Twine
modifier|&
name|twine
parameter_list|)
function_decl|;
name|private
label|:
name|bool
name|commitInsert
parameter_list|(
name|SourceLocation
name|OrigLoc
parameter_list|,
name|FileOffset
name|Offs
parameter_list|,
name|StringRef
name|text
parameter_list|,
name|bool
name|beforePreviousInsertions
parameter_list|)
function_decl|;
name|bool
name|commitInsertFromRange
parameter_list|(
name|SourceLocation
name|OrigLoc
parameter_list|,
name|FileOffset
name|Offs
parameter_list|,
name|FileOffset
name|InsertFromRangeOffs
parameter_list|,
name|unsigned
name|Len
parameter_list|,
name|bool
name|beforePreviousInsertions
parameter_list|)
function_decl|;
name|void
name|commitRemove
parameter_list|(
name|SourceLocation
name|OrigLoc
parameter_list|,
name|FileOffset
name|BeginOffs
parameter_list|,
name|unsigned
name|Len
parameter_list|)
function_decl|;
name|StringRef
name|getSourceText
parameter_list|(
name|FileOffset
name|BeginOffs
parameter_list|,
name|FileOffset
name|EndOffs
parameter_list|,
name|bool
modifier|&
name|Invalid
parameter_list|)
function_decl|;
name|FileEditsTy
operator|::
name|iterator
name|getActionForOffset
argument_list|(
argument|FileOffset Offs
argument_list|)
expr_stmt|;
name|void
name|deconstructMacroArgLoc
parameter_list|(
name|SourceLocation
name|Loc
parameter_list|,
name|SourceLocation
modifier|&
name|ExpansionLoc
parameter_list|,
name|MacroArgUse
modifier|&
name|ArgUse
parameter_list|)
function_decl|;
name|void
name|startingCommit
parameter_list|()
function_decl|;
name|void
name|finishedCommit
parameter_list|()
function_decl|;
block|}
empty_stmt|;
block|}
block|}
end_decl_stmt

begin_comment
comment|// end namespace clang
end_comment

begin_endif
endif|#
directive|endif
end_endif

end_unit

