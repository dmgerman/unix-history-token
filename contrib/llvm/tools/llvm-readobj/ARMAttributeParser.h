begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===--- ARMAttributeParser.h - ARM Attribute Information Printer ---------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_READOBJ_ARMATTRIBUTE_PARSER_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_READOBJ_ARMATTRIBUTE_PARSER_H
end_define

begin_include
include|#
directive|include
file|"StreamWriter.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/ARMBuildAttributes.h"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|class
name|StringRef
decl_stmt|;
name|class
name|ARMAttributeParser
block|{
name|StreamWriter
modifier|&
name|SW
decl_stmt|;
struct|struct
name|DisplayHandler
block|{
name|ARMBuildAttrs
operator|::
name|AttrType
name|Attribute
expr_stmt|;
name|void
argument_list|(
name|ARMAttributeParser
operator|::
operator|*
name|Routine
argument_list|)
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
argument_list|,
specifier|const
name|uint8_t
operator|*
argument_list|,
name|uint32_t
operator|&
argument_list|)
expr_stmt|;
block|}
struct|;
specifier|static
specifier|const
name|DisplayHandler
name|DisplayRoutines
index|[]
decl_stmt|;
name|uint64_t
name|ParseInteger
parameter_list|(
specifier|const
name|uint8_t
modifier|*
name|Data
parameter_list|,
name|uint32_t
modifier|&
name|Offset
parameter_list|)
function_decl|;
name|StringRef
name|ParseString
parameter_list|(
specifier|const
name|uint8_t
modifier|*
name|Data
parameter_list|,
name|uint32_t
modifier|&
name|Offset
parameter_list|)
function_decl|;
name|void
name|IntegerAttribute
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|StringAttribute
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|PrintAttribute
parameter_list|(
name|unsigned
name|Tag
parameter_list|,
name|unsigned
name|Value
parameter_list|,
name|StringRef
name|ValueDesc
parameter_list|)
function_decl|;
name|void
name|CPU_arch
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|CPU_arch_profile
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ARM_ISA_use
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|THUMB_ISA_use
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|FP_arch
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|WMMX_arch
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|Advanced_SIMD_arch
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|PCS_config
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_PCS_R9_use
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_PCS_RW_data
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_PCS_RO_data
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_PCS_GOT_use
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_PCS_wchar_t
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_FP_rounding
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_FP_denormal
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_FP_exceptions
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_FP_user_exceptions
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_FP_number_model
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_align_needed
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_align_preserved
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_enum_size
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_HardFP_use
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_VFP_args
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_WMMX_args
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_optimization_goals
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_FP_optimization_goals
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|compatibility
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|CPU_unaligned_access
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|FP_HP_extension
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ABI_FP_16bit_format
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|MPextension_use
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|DIV_use
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|T2EE_use
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|Virtualization_use
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|nodefaults
argument_list|(
name|ARMBuildAttrs
operator|::
name|AttrType
name|Tag
argument_list|,
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|)
decl_stmt|;
name|void
name|ParseAttributeList
parameter_list|(
specifier|const
name|uint8_t
modifier|*
name|Data
parameter_list|,
name|uint32_t
modifier|&
name|Offset
parameter_list|,
name|uint32_t
name|Length
parameter_list|)
function_decl|;
name|void
name|ParseIndexList
argument_list|(
specifier|const
name|uint8_t
operator|*
name|Data
argument_list|,
name|uint32_t
operator|&
name|Offset
argument_list|,
name|SmallVectorImpl
operator|<
name|uint8_t
operator|>
operator|&
name|IndexList
argument_list|)
decl_stmt|;
name|void
name|ParseSubsection
parameter_list|(
specifier|const
name|uint8_t
modifier|*
name|Data
parameter_list|,
name|uint32_t
name|Length
parameter_list|)
function_decl|;
name|public
label|:
name|ARMAttributeParser
argument_list|(
name|StreamWriter
operator|&
name|SW
argument_list|)
operator|:
name|SW
argument_list|(
argument|SW
argument_list|)
block|{}
name|void
name|Parse
argument_list|(
name|ArrayRef
operator|<
name|uint8_t
operator|>
name|Section
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

