begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $RCSfile: util.h,v $$Revision: 4.1 $$Date: 92/08/07 18:29:30 $  *  *    Copyright (c) 1991-1997, Larry Wall  *  *    You may distribute under the terms of either the GNU General Public  *    License or the Artistic License, as specified in the README file.  *  * $Log:	util.h,v $  */
end_comment

begin_comment
comment|/* is the string for makedir a directory name or a filename? */
end_comment

begin_define
define|#
directive|define
name|fatal
value|Myfatal
end_define

begin_define
define|#
directive|define
name|MD_DIR
value|0
end_define

begin_define
define|#
directive|define
name|MD_FILE
value|1
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|SETUIDGID
end_ifdef

begin_function_decl
name|int
name|eaccess
parameter_list|()
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|char
modifier|*
name|getwd
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
name|int
name|makedir
parameter_list|()
function_decl|;
end_function_decl

begin_decl_stmt
name|char
modifier|*
name|cpy2
name|_
argument_list|(
operator|(
name|char
operator|*
name|to
operator|,
name|char
operator|*
name|from
operator|,
name|int
name|delim
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|cpytill
name|_
argument_list|(
operator|(
name|char
operator|*
name|to
operator|,
name|char
operator|*
name|from
operator|,
name|int
name|delim
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|growstr
name|_
argument_list|(
operator|(
name|char
operator|*
operator|*
name|strptr
operator|,
name|int
operator|*
name|curlen
operator|,
name|int
name|newlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|instr
name|_
argument_list|(
operator|(
name|char
operator|*
name|big
operator|,
name|char
operator|*
name|little
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|safecpy
name|_
argument_list|(
operator|(
name|char
operator|*
name|to
operator|,
name|char
operator|*
name|from
operator|,
name|int
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|savestr
name|_
argument_list|(
operator|(
name|char
operator|*
name|str
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|croak
name|_
argument_list|(
operator|(
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|fatal
name|_
argument_list|(
operator|(
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|warn
name|_
argument_list|(
operator|(
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|prewalk
name|_
argument_list|(
operator|(
name|int
name|numit
operator|,
name|int
name|level
operator|,
name|int
name|node
operator|,
name|int
operator|*
name|numericptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Malloc_t
name|safemalloc
name|_
argument_list|(
operator|(
name|MEM_SIZE
name|nbytes
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Malloc_t
name|safecalloc
name|_
argument_list|(
operator|(
name|MEM_SIZE
name|elements
operator|,
name|MEM_SIZE
name|size
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Malloc_t
name|saferealloc
name|_
argument_list|(
operator|(
name|Malloc_t
name|where
operator|,
name|MEM_SIZE
name|nbytes
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|Free_t
name|safefree
name|_
argument_list|(
operator|(
name|Malloc_t
name|where
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

end_unit

