begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $RCSfile: hash.h,v $$Revision: 4.1 $$Date: 92/08/07 18:29:21 $  *  *    Copyright (c) 1991-2001, Larry Wall  *  *    You may distribute under the terms of either the GNU General Public  *    License or the Artistic License, as specified in the README file.  *  * $Log:	hash.h,v $  */
end_comment

begin_define
define|#
directive|define
name|FILLPCT
value|60
end_define

begin_comment
comment|/* don't make greater than 99 */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|DOINIT
end_ifdef

begin_decl_stmt
name|char
name|coeff
index|[]
init|=
block|{
literal|61
block|,
literal|59
block|,
literal|53
block|,
literal|47
block|,
literal|43
block|,
literal|41
block|,
literal|37
block|,
literal|31
block|,
literal|29
block|,
literal|23
block|,
literal|17
block|,
literal|13
block|,
literal|11
block|,
literal|7
block|,
literal|3
block|,
literal|1
block|,
literal|61
block|,
literal|59
block|,
literal|53
block|,
literal|47
block|,
literal|43
block|,
literal|41
block|,
literal|37
block|,
literal|31
block|,
literal|29
block|,
literal|23
block|,
literal|17
block|,
literal|13
block|,
literal|11
block|,
literal|7
block|,
literal|3
block|,
literal|1
block|,
literal|61
block|,
literal|59
block|,
literal|53
block|,
literal|47
block|,
literal|43
block|,
literal|41
block|,
literal|37
block|,
literal|31
block|,
literal|29
block|,
literal|23
block|,
literal|17
block|,
literal|13
block|,
literal|11
block|,
literal|7
block|,
literal|3
block|,
literal|1
block|,
literal|61
block|,
literal|59
block|,
literal|53
block|,
literal|47
block|,
literal|43
block|,
literal|41
block|,
literal|37
block|,
literal|31
block|,
literal|29
block|,
literal|23
block|,
literal|17
block|,
literal|13
block|,
literal|11
block|,
literal|7
block|,
literal|3
block|,
literal|1
block|,
literal|61
block|,
literal|59
block|,
literal|53
block|,
literal|47
block|,
literal|43
block|,
literal|41
block|,
literal|37
block|,
literal|31
block|,
literal|29
block|,
literal|23
block|,
literal|17
block|,
literal|13
block|,
literal|11
block|,
literal|7
block|,
literal|3
block|,
literal|1
block|,
literal|61
block|,
literal|59
block|,
literal|53
block|,
literal|47
block|,
literal|43
block|,
literal|41
block|,
literal|37
block|,
literal|31
block|,
literal|29
block|,
literal|23
block|,
literal|17
block|,
literal|13
block|,
literal|11
block|,
literal|7
block|,
literal|3
block|,
literal|1
block|,
literal|61
block|,
literal|59
block|,
literal|53
block|,
literal|47
block|,
literal|43
block|,
literal|41
block|,
literal|37
block|,
literal|31
block|,
literal|29
block|,
literal|23
block|,
literal|17
block|,
literal|13
block|,
literal|11
block|,
literal|7
block|,
literal|3
block|,
literal|1
block|,
literal|61
block|,
literal|59
block|,
literal|53
block|,
literal|47
block|,
literal|43
block|,
literal|41
block|,
literal|37
block|,
literal|31
block|,
literal|29
block|,
literal|23
block|,
literal|17
block|,
literal|13
block|,
literal|11
block|,
literal|7
block|,
literal|3
block|,
literal|1
block|}
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
specifier|extern
name|char
name|coeff
index|[]
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_typedef
typedef|typedef
name|struct
name|hentry
name|HENT
typedef|;
end_typedef

begin_struct
struct|struct
name|hentry
block|{
name|HENT
modifier|*
name|hent_next
decl_stmt|;
name|char
modifier|*
name|hent_key
decl_stmt|;
name|STR
modifier|*
name|hent_val
decl_stmt|;
name|int
name|hent_hash
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|htbl
block|{
name|HENT
modifier|*
modifier|*
name|tbl_array
decl_stmt|;
name|int
name|tbl_max
decl_stmt|;
name|int
name|tbl_fill
decl_stmt|;
name|int
name|tbl_riter
decl_stmt|;
comment|/* current root of iterator */
name|HENT
modifier|*
name|tbl_eiter
decl_stmt|;
comment|/* current entry of iterator */
block|}
struct|;
end_struct

begin_function_decl
name|bool
name|hdelete
parameter_list|(
name|HASH
modifier|*
name|tb
parameter_list|,
name|char
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|STR
modifier|*
name|hfetch
parameter_list|(
name|HASH
modifier|*
name|tb
parameter_list|,
name|char
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hiterinit
parameter_list|(
name|HASH
modifier|*
name|tb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|hiterkey
parameter_list|(
name|HENT
modifier|*
name|entry
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|HENT
modifier|*
name|hiternext
parameter_list|(
name|HASH
modifier|*
name|tb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|STR
modifier|*
name|hiterval
parameter_list|(
name|HENT
modifier|*
name|entry
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|HASH
modifier|*
name|hnew
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|hsplit
parameter_list|(
name|HASH
modifier|*
name|tb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|hstore
parameter_list|(
name|HASH
modifier|*
name|tb
parameter_list|,
name|char
modifier|*
name|key
parameter_list|,
name|STR
modifier|*
name|val
parameter_list|)
function_decl|;
end_function_decl

end_unit

