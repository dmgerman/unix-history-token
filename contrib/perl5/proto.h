begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|PERL_CALLCONV
end_ifndef

begin_define
define|#
directive|define
name|PERL_CALLCONV
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_define
define|#
directive|define
name|VIRTUAL
value|virtual PERL_CALLCONV
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|VIRTUAL
value|PERL_CALLCONV
end_define

begin_decl_stmt
name|START_EXTERN_C
endif|#
directive|endif
comment|/* NOTE!!! When new virtual functions are added, they must be added at  * the end of this file to maintain binary compatibility with PERL_OBJECT  */
ifndef|#
directive|ifndef
name|NEXT30_NO_ATTRIBUTE
ifndef|#
directive|ifndef
name|HASATTRIBUTE
comment|/* disable GNU-cc attribute checking? */
ifdef|#
directive|ifdef
name|__attribute__
comment|/* Avoid possible redefinition errors */
undef|#
directive|undef
name|__attribute__
endif|#
directive|endif
define|#
directive|define
name|__attribute__
parameter_list|(
name|attr
parameter_list|)
endif|#
directive|endif
endif|#
directive|endif
ifdef|#
directive|ifdef
name|OVERLOAD
name|VIRTUAL
name|SV
modifier|*
name|amagic_call
name|_
argument_list|(
operator|(
name|SV
operator|*
name|left
operator|,
name|SV
operator|*
name|right
operator|,
name|int
name|method
operator|,
name|int
name|dir
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|Gv_AMupdate
name|_
argument_list|(
operator|(
name|HV
operator|*
name|stash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* OVERLOAD */
end_comment

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|append_elem
name|_
argument_list|(
operator|(
name|I32
name|optype
operator|,
name|OP
operator|*
name|head
operator|,
name|OP
operator|*
name|tail
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|append_list
name|_
argument_list|(
operator|(
name|I32
name|optype
operator|,
name|LISTOP
operator|*
name|first
operator|,
name|LISTOP
operator|*
name|last
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|apply
name|_
argument_list|(
operator|(
name|I32
name|type
operator|,
name|SV
operator|*
operator|*
name|mark
operator|,
name|SV
operator|*
operator|*
name|sp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|assertref
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|avhv_exists_ent
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|,
name|SV
operator|*
name|keysv
operator|,
name|U32
name|hash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
modifier|*
name|avhv_fetch_ent
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|,
name|SV
operator|*
name|keysv
operator|,
name|I32
name|lval
operator|,
name|U32
name|hash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HE
modifier|*
name|avhv_iternext
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|avhv_iterval
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|,
name|HE
operator|*
name|entry
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HV
modifier|*
name|avhv_keys
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|av_clear
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|av_extend
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|,
name|I32
name|key
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|AV
modifier|*
name|av_fake
name|_
argument_list|(
operator|(
name|I32
name|size
operator|,
name|SV
operator|*
operator|*
name|svp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
modifier|*
name|av_fetch
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|,
name|I32
name|key
operator|,
name|I32
name|lval
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|av_fill
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|,
name|I32
name|fill
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|av_len
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|AV
modifier|*
name|av_make
name|_
argument_list|(
operator|(
name|I32
name|size
operator|,
name|SV
operator|*
operator|*
name|svp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|av_pop
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|av_push
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|,
name|SV
operator|*
name|val
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|av_reify
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|av_shift
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
modifier|*
name|av_store
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|,
name|I32
name|key
operator|,
name|SV
operator|*
name|val
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|av_undef
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|av_unshift
name|_
argument_list|(
operator|(
name|AV
operator|*
name|ar
operator|,
name|I32
name|num
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|bind_match
name|_
argument_list|(
operator|(
name|I32
name|type
operator|,
name|OP
operator|*
name|left
operator|,
name|OP
operator|*
name|pat
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|block_end
name|_
argument_list|(
operator|(
name|I32
name|floor
operator|,
name|OP
operator|*
name|seq
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|block_gimme
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|block_start
name|_
argument_list|(
operator|(
name|int
name|full
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|boot_core_UNIVERSAL
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|call_list
name|_
argument_list|(
operator|(
name|I32
name|oldscope
operator|,
name|AV
operator|*
name|av_list
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|cando
name|_
argument_list|(
operator|(
name|I32
name|bit
operator|,
name|I32
name|effective
operator|,
name|Stat_t
operator|*
name|statbufp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|CASTNEGFLOAT
end_ifndef

begin_decl_stmt
name|VIRTUAL
name|U32
name|cast_ulong
name|_
argument_list|(
operator|(
name|double
name|f
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|HAS_TRUNCATE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|HAS_CHSIZE
argument_list|)
operator|&&
name|defined
argument_list|(
name|F_FREESP
argument_list|)
end_if

begin_decl_stmt
name|VIRTUAL
name|I32
name|my_chsize
name|_
argument_list|(
operator|(
name|int
name|fd
operator|,
name|Off_t
name|length
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|ck_gvconst
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|ck_retarget
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|USE_THREADS
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|MAGIC
modifier|*
name|condpair_magic
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|convert
name|_
argument_list|(
operator|(
name|I32
name|optype
operator|,
name|I32
name|flags
operator|,
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|croak
name|_
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
name|__attribute__
argument_list|(
operator|(
name|noreturn
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|cv_ckproto
name|_
argument_list|(
operator|(
name|CV
operator|*
name|cv
operator|,
name|GV
operator|*
name|gv
operator|,
name|char
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|CV
modifier|*
name|cv_clone
name|_
argument_list|(
operator|(
name|CV
operator|*
name|proto
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|cv_const_sv
name|_
argument_list|(
operator|(
name|CV
operator|*
name|cv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|op_const_sv
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|,
name|CV
operator|*
name|cv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|cv_undef
name|_
argument_list|(
operator|(
name|CV
operator|*
name|cv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|cx_dump
name|_
argument_list|(
operator|(
name|PERL_CONTEXT
operator|*
name|cs
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|filter_add
name|_
argument_list|(
operator|(
name|filter_t
name|funcp
operator|,
name|SV
operator|*
name|datasv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|filter_del
name|_
argument_list|(
operator|(
name|filter_t
name|funcp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|filter_read
name|_
argument_list|(
operator|(
name|int
name|idx
operator|,
name|SV
operator|*
name|buffer
operator|,
name|int
name|maxlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
modifier|*
name|get_op_descs
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
modifier|*
name|get_op_names
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|get_no_modify
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|U32
modifier|*
name|get_opargs
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|cxinc
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|deb
name|_
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|deb_growlevel
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|debprofdump
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|debop
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|debstack
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|debstackptrs
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|delimcpy
name|_
argument_list|(
operator|(
name|char
operator|*
name|to
operator|,
name|char
operator|*
name|toend
operator|,
name|char
operator|*
name|from
operator|,
name|char
operator|*
name|fromend
operator|,
name|int
name|delim
operator|,
name|I32
operator|*
name|retlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|deprecate
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|die
name|_
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|die_where
name|_
argument_list|(
operator|(
name|char
operator|*
name|message
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|dounwind
name|_
argument_list|(
operator|(
name|I32
name|cxix
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|do_aexec
name|_
argument_list|(
operator|(
name|SV
operator|*
name|really
operator|,
name|SV
operator|*
operator|*
name|mark
operator|,
name|SV
operator|*
operator|*
name|sp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|do_binmode
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
name|fp
operator|,
name|int
name|iotype
operator|,
name|int
name|flag
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|do_chop
name|_
argument_list|(
operator|(
name|SV
operator|*
name|asv
operator|,
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|do_close
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|,
name|bool
name|not_implicit
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|do_eof
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|do_exec
name|_
argument_list|(
operator|(
name|char
operator|*
name|cmd
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|do_execfree
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_if
if|#
directive|if
name|defined
argument_list|(
name|HAS_MSG
argument_list|)
operator|||
name|defined
argument_list|(
name|HAS_SEM
argument_list|)
operator|||
name|defined
argument_list|(
name|HAS_SHM
argument_list|)
end_if

begin_decl_stmt
name|I32
name|do_ipcctl
name|_
argument_list|(
operator|(
name|I32
name|optype
operator|,
name|SV
operator|*
operator|*
name|mark
operator|,
name|SV
operator|*
operator|*
name|sp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|do_ipcget
name|_
argument_list|(
operator|(
name|I32
name|optype
operator|,
name|SV
operator|*
operator|*
name|mark
operator|,
name|SV
operator|*
operator|*
name|sp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|do_join
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|SV
operator|*
name|del
operator|,
name|SV
operator|*
operator|*
name|mark
operator|,
name|SV
operator|*
operator|*
name|sp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|do_kv
name|_
argument_list|(
operator|(
name|ARGSproto
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_if
if|#
directive|if
name|defined
argument_list|(
name|HAS_MSG
argument_list|)
operator|||
name|defined
argument_list|(
name|HAS_SEM
argument_list|)
operator|||
name|defined
argument_list|(
name|HAS_SHM
argument_list|)
end_if

begin_decl_stmt
name|I32
name|do_msgrcv
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|*
name|mark
operator|,
name|SV
operator|*
operator|*
name|sp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|do_msgsnd
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|*
name|mark
operator|,
name|SV
operator|*
operator|*
name|sp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|bool
name|do_open
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|,
name|char
operator|*
name|name
operator|,
name|I32
name|len
operator|,
name|int
name|as_raw
operator|,
name|int
name|rawmode
operator|,
name|int
name|rawperm
operator|,
name|PerlIO
operator|*
name|supplied_fp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|do_pipe
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|GV
operator|*
name|rgv
operator|,
name|GV
operator|*
name|wgv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|do_print
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|PerlIO
operator|*
name|fp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|do_readline
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|do_chomp
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|do_seek
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|,
name|long
name|pos
operator|,
name|int
name|whence
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_if
if|#
directive|if
name|defined
argument_list|(
name|HAS_MSG
argument_list|)
operator|||
name|defined
argument_list|(
name|HAS_SEM
argument_list|)
operator|||
name|defined
argument_list|(
name|HAS_SHM
argument_list|)
end_if

begin_decl_stmt
name|I32
name|do_semop
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|*
name|mark
operator|,
name|SV
operator|*
operator|*
name|sp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|do_shmio
name|_
argument_list|(
operator|(
name|I32
name|optype
operator|,
name|SV
operator|*
operator|*
name|mark
operator|,
name|SV
operator|*
operator|*
name|sp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|do_sprintf
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|I32
name|len
operator|,
name|SV
operator|*
operator|*
name|sarg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|long
name|do_sysseek
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|,
name|long
name|pos
operator|,
name|int
name|whence
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|long
name|do_tell
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|do_trans
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|OP
operator|*
name|arg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|do_vecset
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|do_vop
name|_
argument_list|(
operator|(
name|I32
name|optype
operator|,
name|SV
operator|*
name|sv
operator|,
name|SV
operator|*
name|left
operator|,
name|SV
operator|*
name|right
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|dowantarray
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|dump_all
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|dump_eval
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|DUMP_FDS
end_ifdef

begin_comment
comment|/* See util.c */
end_comment

begin_decl_stmt
name|VIRTUAL
name|void
name|dump_fds
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|dump_form
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|dump_gv
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|MYMALLOC
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|void
name|dump_mstats
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|dump_op
name|_
argument_list|(
operator|(
name|OP
operator|*
name|arg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|dump_pm
name|_
argument_list|(
operator|(
name|PMOP
operator|*
name|pm
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|dump_packsubs
name|_
argument_list|(
operator|(
name|HV
operator|*
name|stash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|dump_sub
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|fbm_compile
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|U32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|fbm_instr
name|_
argument_list|(
operator|(
name|unsigned
name|char
operator|*
name|big
operator|,
name|unsigned
name|char
operator|*
name|bigend
operator|,
name|SV
operator|*
name|littlesv
operator|,
name|U32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|find_script
name|_
argument_list|(
operator|(
name|char
operator|*
name|scriptname
operator|,
name|bool
name|dosearch
operator|,
name|char
operator|*
operator|*
name|search_ext
operator|,
name|I32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|USE_THREADS
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|PADOFFSET
name|find_threadsv
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|force_list
name|_
argument_list|(
operator|(
name|OP
operator|*
name|arg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|fold_constants
name|_
argument_list|(
operator|(
name|OP
operator|*
name|arg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|form
name|_
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|free_tmps
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|gen_constant_list
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|gp_free
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|GP
modifier|*
name|gp_ref
name|_
argument_list|(
operator|(
name|GP
operator|*
name|gp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|GV
modifier|*
name|gv_AVadd
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|GV
modifier|*
name|gv_HVadd
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|GV
modifier|*
name|gv_IOadd
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|GV
modifier|*
name|gv_autoload4
name|_
argument_list|(
operator|(
name|HV
operator|*
name|stash
operator|,
name|char
operator|*
name|name
operator|,
name|STRLEN
name|len
operator|,
name|I32
name|method
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|gv_check
name|_
argument_list|(
operator|(
name|HV
operator|*
name|stash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|gv_efullname
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|gv_efullname3
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|GV
operator|*
name|gv
operator|,
name|char
operator|*
name|prefix
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|GV
modifier|*
name|gv_fetchfile
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|GV
modifier|*
name|gv_fetchmeth
name|_
argument_list|(
operator|(
name|HV
operator|*
name|stash
operator|,
name|char
operator|*
name|name
operator|,
name|STRLEN
name|len
operator|,
name|I32
name|level
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|GV
modifier|*
name|gv_fetchmethod
name|_
argument_list|(
operator|(
name|HV
operator|*
name|stash
operator|,
name|char
operator|*
name|name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|GV
modifier|*
name|gv_fetchmethod_autoload
name|_
argument_list|(
operator|(
name|HV
operator|*
name|stash
operator|,
name|char
operator|*
name|name
operator|,
name|I32
name|autoload
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|GV
modifier|*
name|gv_fetchpv
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|I32
name|add
operator|,
name|I32
name|sv_type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|gv_fullname
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|gv_fullname3
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|GV
operator|*
name|gv
operator|,
name|char
operator|*
name|prefix
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|gv_init
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|,
name|HV
operator|*
name|stash
operator|,
name|char
operator|*
name|name
operator|,
name|STRLEN
name|len
operator|,
name|int
name|multi
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HV
modifier|*
name|gv_stashpv
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|I32
name|create
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HV
modifier|*
name|gv_stashpvn
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|U32
name|namelen
operator|,
name|I32
name|create
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HV
modifier|*
name|gv_stashsv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|I32
name|create
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|hv_clear
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|hv_delayfree_ent
name|_
argument_list|(
operator|(
name|HV
operator|*
name|hv
operator|,
name|HE
operator|*
name|entry
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|hv_delete
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|,
name|char
operator|*
name|key
operator|,
name|U32
name|klen
operator|,
name|I32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|hv_delete_ent
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|,
name|SV
operator|*
name|key
operator|,
name|I32
name|flags
operator|,
name|U32
name|hash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|hv_exists
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|,
name|char
operator|*
name|key
operator|,
name|U32
name|klen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|hv_exists_ent
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|,
name|SV
operator|*
name|key
operator|,
name|U32
name|hash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
modifier|*
name|hv_fetch
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|,
name|char
operator|*
name|key
operator|,
name|U32
name|klen
operator|,
name|I32
name|lval
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HE
modifier|*
name|hv_fetch_ent
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|,
name|SV
operator|*
name|key
operator|,
name|I32
name|lval
operator|,
name|U32
name|hash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|hv_free_ent
name|_
argument_list|(
operator|(
name|HV
operator|*
name|hv
operator|,
name|HE
operator|*
name|entry
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|hv_iterinit
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|hv_iterkey
name|_
argument_list|(
operator|(
name|HE
operator|*
name|entry
operator|,
name|I32
operator|*
name|retlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|hv_iterkeysv
name|_
argument_list|(
operator|(
name|HE
operator|*
name|entry
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HE
modifier|*
name|hv_iternext
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|hv_iternextsv
name|_
argument_list|(
operator|(
name|HV
operator|*
name|hv
operator|,
name|char
operator|*
operator|*
name|key
operator|,
name|I32
operator|*
name|retlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|hv_iterval
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|,
name|HE
operator|*
name|entry
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|hv_ksplit
name|_
argument_list|(
operator|(
name|HV
operator|*
name|hv
operator|,
name|IV
name|newmax
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|hv_magic
name|_
argument_list|(
operator|(
name|HV
operator|*
name|hv
operator|,
name|GV
operator|*
name|gv
operator|,
name|int
name|how
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
modifier|*
name|hv_store
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|,
name|char
operator|*
name|key
operator|,
name|U32
name|klen
operator|,
name|SV
operator|*
name|val
operator|,
name|U32
name|hash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HE
modifier|*
name|hv_store_ent
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|,
name|SV
operator|*
name|key
operator|,
name|SV
operator|*
name|val
operator|,
name|U32
name|hash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|hv_undef
name|_
argument_list|(
operator|(
name|HV
operator|*
name|tb
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|ibcmp
name|_
argument_list|(
operator|(
name|char
operator|*
name|a
operator|,
name|char
operator|*
name|b
operator|,
name|I32
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|ibcmp_locale
name|_
argument_list|(
operator|(
name|char
operator|*
name|a
operator|,
name|char
operator|*
name|b
operator|,
name|I32
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|ingroup
name|_
argument_list|(
operator|(
name|I32
name|testgid
operator|,
name|I32
name|effective
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|init_stacks
name|_
argument_list|(
operator|(
name|ARGSproto
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|U32
name|intro_my
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|instr
name|_
argument_list|(
operator|(
name|char
operator|*
name|big
operator|,
name|char
operator|*
name|little
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|io_close
name|_
argument_list|(
operator|(
name|IO
operator|*
name|io
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|invert
name|_
argument_list|(
operator|(
name|OP
operator|*
name|cmd
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|jmaybe
name|_
argument_list|(
operator|(
name|OP
operator|*
name|arg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|keyword
name|_
argument_list|(
operator|(
name|char
operator|*
name|d
operator|,
name|I32
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|leave_scope
name|_
argument_list|(
operator|(
name|I32
name|base
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|lex_end
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|lex_start
name|_
argument_list|(
operator|(
name|SV
operator|*
name|line
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|linklist
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|list
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|listkids
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|localize
name|_
argument_list|(
operator|(
name|OP
operator|*
name|arg
operator|,
name|I32
name|lexical
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|looks_like_number
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_clearenv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_clear_all_env
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_clearpack
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_clearsig
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_existspack
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_freeregexp
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_get
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_getarylen
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_getdefelem
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_getglob
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_getnkeys
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_getpack
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_getpos
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_getsig
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_getsubstr
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_gettaint
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_getuvar
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_getvec
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|U32
name|magic_len
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|USE_THREADS
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_mutexfree
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* USE_THREADS */
end_comment

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_nextpack
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|,
name|SV
operator|*
name|key
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_set
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|OVERLOAD
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setamagic
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* OVERLOAD */
end_comment

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setarylen
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setbm
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setdbline
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|USE_LOCALE_COLLATE
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setcollxfrm
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setdefelem
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setenv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setfm
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setisa
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setglob
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setmglob
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setnkeys
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setpack
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setpos
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setsig
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setsubstr
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_settaint
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setuvar
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_setvec
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_set_all_env
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|U32
name|magic_sizepack
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|magic_wipepack
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|magicname
name|_
argument_list|(
operator|(
name|char
operator|*
name|sym
operator|,
name|char
operator|*
name|name
operator|,
name|I32
name|namlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
decl|main
name|_
argument_list|(
operator|(
name|int
name|argc
operator|,
name|char
operator|*
operator|*
name|argv
operator|,
name|char
operator|*
operator|*
name|env
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|MYMALLOC
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|MEM_SIZE
name|malloced_size
name|_
argument_list|(
operator|(
name|void
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|markstack_grow
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|USE_LOCALE_COLLATE
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|mem_collxfrm
name|_
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|s
operator|,
name|STRLEN
name|len
operator|,
name|STRLEN
operator|*
name|xlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|mess
name|_
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|pat
operator|,
name|va_list
operator|*
name|args
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|mg_clear
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|mg_copy
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|SV
operator|*
name|nsv
operator|,
name|char
operator|*
name|key
operator|,
name|I32
name|klen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|MAGIC
modifier|*
name|mg_find
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|int
name|type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|mg_free
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|mg_get
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|U32
name|mg_length
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|mg_magical
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|mg_set
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|mg_size
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|mod
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|,
name|I32
name|type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|moreswitches
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|my
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|HAS_BCOPY
argument_list|)
operator|||
operator|!
name|defined
argument_list|(
name|HAS_SAFE_BCOPY
argument_list|)
end_if

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|my_bcopy
name|_
argument_list|(
operator|(
name|char
operator|*
name|from
operator|,
name|char
operator|*
name|to
operator|,
name|I32
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|HAS_BZERO
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|HAS_MEMSET
argument_list|)
end_if

begin_decl_stmt
name|char
modifier|*
name|my_bzero
name|_
argument_list|(
operator|(
name|char
operator|*
name|loc
operator|,
name|I32
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|my_exit
name|_
argument_list|(
operator|(
name|U32
name|status
operator|)
argument_list|)
name|__attribute__
argument_list|(
operator|(
name|noreturn
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|my_failure_exit
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
name|__attribute__
argument_list|(
operator|(
name|noreturn
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|my_lstat
name|_
argument_list|(
operator|(
name|ARGSproto
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|HAS_MEMCMP
argument_list|)
operator|||
operator|!
name|defined
argument_list|(
name|HAS_SANE_MEMCMP
argument_list|)
end_if

begin_decl_stmt
name|VIRTUAL
name|I32
name|my_memcmp
name|_
argument_list|(
operator|(
name|char
operator|*
name|s1
operator|,
name|char
operator|*
name|s2
operator|,
name|I32
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|HAS_MEMSET
argument_list|)
end_if

begin_decl_stmt
name|VIRTUAL
name|void
modifier|*
name|my_memset
name|_
argument_list|(
operator|(
name|char
operator|*
name|loc
operator|,
name|I32
name|ch
operator|,
name|I32
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PERL_OBJECT
end_ifndef

begin_decl_stmt
name|VIRTUAL
name|I32
name|my_pclose
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
name|ptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|PerlIO
modifier|*
name|my_popen
name|_
argument_list|(
operator|(
name|char
operator|*
name|cmd
operator|,
name|char
operator|*
name|mode
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|my_setenv
name|_
argument_list|(
operator|(
name|char
operator|*
name|nam
operator|,
name|char
operator|*
name|val
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|my_stat
name|_
argument_list|(
operator|(
name|ARGSproto
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|MYSWAP
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|short
name|my_swap
name|_
argument_list|(
operator|(
name|short
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|long
name|my_htonl
name|_
argument_list|(
operator|(
name|long
name|l
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|long
name|my_ntohl
name|_
argument_list|(
operator|(
name|long
name|l
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|my_unexec
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newANONLIST
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newANONHASH
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newANONSUB
name|_
argument_list|(
operator|(
name|I32
name|floor
operator|,
name|OP
operator|*
name|proto
operator|,
name|OP
operator|*
name|block
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newASSIGNOP
name|_
argument_list|(
operator|(
name|I32
name|flags
operator|,
name|OP
operator|*
name|left
operator|,
name|I32
name|optype
operator|,
name|OP
operator|*
name|right
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newCONDOP
name|_
argument_list|(
operator|(
name|I32
name|flags
operator|,
name|OP
operator|*
name|expr
operator|,
name|OP
operator|*
name|trueop
operator|,
name|OP
operator|*
name|falseop
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|newCONSTSUB
name|_
argument_list|(
operator|(
name|HV
operator|*
name|stash
operator|,
name|char
operator|*
name|name
operator|,
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|newFORM
name|_
argument_list|(
operator|(
name|I32
name|floor
operator|,
name|OP
operator|*
name|o
operator|,
name|OP
operator|*
name|block
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newFOROP
name|_
argument_list|(
operator|(
name|I32
name|flags
operator|,
name|char
operator|*
name|label
operator|,
name|line_t
name|forline
operator|,
name|OP
operator|*
name|sclr
operator|,
name|OP
operator|*
name|expr
operator|,
name|OP
operator|*
name|block
operator|,
name|OP
operator|*
name|cont
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newLOGOP
name|_
argument_list|(
operator|(
name|I32
name|optype
operator|,
name|I32
name|flags
operator|,
name|OP
operator|*
name|left
operator|,
name|OP
operator|*
name|right
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newLOOPEX
name|_
argument_list|(
operator|(
name|I32
name|type
operator|,
name|OP
operator|*
name|label
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newLOOPOP
name|_
argument_list|(
operator|(
name|I32
name|flags
operator|,
name|I32
name|debuggable
operator|,
name|OP
operator|*
name|expr
operator|,
name|OP
operator|*
name|block
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newNULLLIST
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newOP
name|_
argument_list|(
operator|(
name|I32
name|optype
operator|,
name|I32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|newPROG
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newRANGE
name|_
argument_list|(
operator|(
name|I32
name|flags
operator|,
name|OP
operator|*
name|left
operator|,
name|OP
operator|*
name|right
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newSLICEOP
name|_
argument_list|(
operator|(
name|I32
name|flags
operator|,
name|OP
operator|*
name|subscript
operator|,
name|OP
operator|*
name|list
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newSTATEOP
name|_
argument_list|(
operator|(
name|I32
name|flags
operator|,
name|char
operator|*
name|label
operator|,
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|CV
modifier|*
name|newSUB
name|_
argument_list|(
operator|(
name|I32
name|floor
operator|,
name|OP
operator|*
name|o
operator|,
name|OP
operator|*
name|proto
operator|,
name|OP
operator|*
name|block
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|CV
modifier|*
name|newXS
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|void
argument_list|(
argument|*subaddr
argument_list|)
operator|(
name|CV
operator|*
name|cv
name|_CPERLproto
operator|)
operator|,
name|char
operator|*
name|filename
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|AV
modifier|*
name|newAV
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newAVREF
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newBINOP
name|_
argument_list|(
operator|(
name|I32
name|type
operator|,
name|I32
name|flags
operator|,
name|OP
operator|*
name|first
operator|,
name|OP
operator|*
name|last
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newCVREF
name|_
argument_list|(
operator|(
name|I32
name|flags
operator|,
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newGVOP
name|_
argument_list|(
operator|(
name|I32
name|type
operator|,
name|I32
name|flags
operator|,
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|GV
modifier|*
name|newGVgen
name|_
argument_list|(
operator|(
name|char
operator|*
name|pack
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newGVREF
name|_
argument_list|(
operator|(
name|I32
name|type
operator|,
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newHVREF
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HV
modifier|*
name|newHV
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HV
modifier|*
name|newHVhv
name|_
argument_list|(
operator|(
name|HV
operator|*
name|hv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|IO
modifier|*
name|newIO
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newLISTOP
name|_
argument_list|(
operator|(
name|I32
name|type
operator|,
name|I32
name|flags
operator|,
name|OP
operator|*
name|first
operator|,
name|OP
operator|*
name|last
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newPMOP
name|_
argument_list|(
operator|(
name|I32
name|type
operator|,
name|I32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newPVOP
name|_
argument_list|(
operator|(
name|I32
name|type
operator|,
name|I32
name|flags
operator|,
name|char
operator|*
name|pv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|newRV
name|_
argument_list|(
operator|(
name|SV
operator|*
name|pref
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|newRV_noinc
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|newSV
name|_
argument_list|(
operator|(
name|STRLEN
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newSVREF
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newSVOP
name|_
argument_list|(
operator|(
name|I32
name|type
operator|,
name|I32
name|flags
operator|,
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|newSViv
name|_
argument_list|(
operator|(
name|IV
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|newSVnv
name|_
argument_list|(
operator|(
name|double
name|n
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|newSVpv
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|,
name|STRLEN
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|newSVpvn
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|,
name|STRLEN
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|newSVpvf
name|_
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|newSVrv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|rv
operator|,
name|char
operator|*
name|classname
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|newSVsv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|old
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newUNOP
name|_
argument_list|(
operator|(
name|I32
name|type
operator|,
name|I32
name|flags
operator|,
name|OP
operator|*
name|first
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|newWHILEOP
name|_
argument_list|(
operator|(
name|I32
name|flags
operator|,
name|I32
name|debuggable
operator|,
name|LOOP
operator|*
name|loop
operator|,
name|I32
name|whileline
operator|,
name|OP
operator|*
name|expr
operator|,
name|OP
operator|*
name|block
operator|,
name|OP
operator|*
name|cont
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|USE_THREADS
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|struct
name|perl_thread
modifier|*
name|new_struct_thread
name|_
argument_list|(
operator|(
expr|struct
name|perl_thread
operator|*
name|t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|PERL_SI
modifier|*
name|new_stackinfo
name|_
argument_list|(
operator|(
name|I32
name|stitems
operator|,
name|I32
name|cxitems
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|PerlIO
modifier|*
name|nextargv
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|ninstr
name|_
argument_list|(
operator|(
name|char
operator|*
name|big
operator|,
name|char
operator|*
name|bigend
operator|,
name|char
operator|*
name|little
operator|,
name|char
operator|*
name|lend
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|oopsCV
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|op_free
name|_
argument_list|(
operator|(
name|OP
operator|*
name|arg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|package
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|PADOFFSET
name|pad_alloc
name|_
argument_list|(
operator|(
name|I32
name|optype
operator|,
name|U32
name|tmptype
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|PADOFFSET
name|pad_allocmy
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|PADOFFSET
name|pad_findmy
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|oopsAV
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|oopsHV
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|pad_leavemy
name|_
argument_list|(
operator|(
name|I32
name|fill
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|pad_sv
name|_
argument_list|(
operator|(
name|PADOFFSET
name|po
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|pad_free
name|_
argument_list|(
operator|(
name|PADOFFSET
name|po
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|pad_reset
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|pad_swipe
name|_
argument_list|(
operator|(
name|PADOFFSET
name|po
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|peep
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|PERL_OBJECT
end_ifndef

begin_decl_stmt
name|PerlInterpreter
modifier|*
name|perl_alloc
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|void
name|perl_atexit
name|_
argument_list|(
operator|(
name|void
argument_list|(
operator|*
name|fn
argument_list|)
argument_list|(
name|CPerlObj
operator|*
argument_list|,
name|void
operator|*
argument_list|)
operator|,
name|void
operator|*
name|ptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
name|void
name|perl_atexit
name|_
argument_list|(
operator|(
name|void
argument_list|(
operator|*
name|fn
argument_list|)
argument_list|(
name|void
operator|*
argument_list|)
operator|,
name|void
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|I32
name|perl_call_argv
name|_
argument_list|(
operator|(
name|char
operator|*
name|sub_name
operator|,
name|I32
name|flags
operator|,
name|char
operator|*
operator|*
name|argv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|perl_call_method
name|_
argument_list|(
operator|(
name|char
operator|*
name|methname
operator|,
name|I32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|perl_call_pv
name|_
argument_list|(
operator|(
name|char
operator|*
name|sub_name
operator|,
name|I32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|perl_call_sv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|I32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|void
name|perl_construct
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|perl_destruct
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
name|void
name|perl_construct
name|_
argument_list|(
operator|(
name|PerlInterpreter
operator|*
name|sv_interp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|perl_destruct
name|_
argument_list|(
operator|(
name|PerlInterpreter
operator|*
name|sv_interp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|perl_eval_pv
name|_
argument_list|(
operator|(
name|char
operator|*
name|p
operator|,
name|I32
name|croak_on_error
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|perl_eval_sv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|I32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|void
name|perl_free
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
name|void
name|perl_free
name|_
argument_list|(
operator|(
name|PerlInterpreter
operator|*
name|sv_interp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|perl_get_sv
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|I32
name|create
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|AV
modifier|*
name|perl_get_av
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|I32
name|create
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HV
modifier|*
name|perl_get_hv
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|I32
name|create
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|CV
modifier|*
name|perl_get_cv
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|I32
name|create
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|perl_init_i18nl10n
name|_
argument_list|(
operator|(
name|int
name|printwarn
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|perl_init_i18nl14n
name|_
argument_list|(
operator|(
name|int
name|printwarn
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|perl_new_collate
name|_
argument_list|(
operator|(
name|char
operator|*
name|newcoll
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|perl_new_ctype
name|_
argument_list|(
operator|(
name|char
operator|*
name|newctype
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|perl_new_numeric
name|_
argument_list|(
operator|(
name|char
operator|*
name|newcoll
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|perl_set_numeric_local
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|perl_set_numeric_standard
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|int
name|perl_parse
name|_
argument_list|(
operator|(
name|void
argument_list|(
operator|*
name|xsinit
argument_list|)
argument_list|(
name|CPerlObj
operator|*
argument_list|)
operator|,
name|int
name|argc
operator|,
name|char
operator|*
operator|*
name|argv
operator|,
name|char
operator|*
operator|*
name|env
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
name|int
name|perl_parse
name|_
argument_list|(
operator|(
name|PerlInterpreter
operator|*
name|sv_interp
operator|,
name|void
argument_list|(
operator|*
name|xsinit
argument_list|)
argument_list|(
name|void
argument_list|)
operator|,
name|int
name|argc
operator|,
name|char
operator|*
operator|*
name|argv
operator|,
name|char
operator|*
operator|*
name|env
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|perl_require_pv
name|_
argument_list|(
operator|(
name|char
operator|*
name|pv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|perl_requirepv
value|perl_require_pv
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|int
name|perl_run
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
name|int
name|perl_run
name|_
argument_list|(
operator|(
name|PerlInterpreter
operator|*
name|sv_interp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|pidgone
name|_
argument_list|(
operator|(
name|int
name|pid
operator|,
name|int
name|status
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|pmflag
name|_
argument_list|(
operator|(
name|U16
operator|*
name|pmfl
operator|,
name|int
name|ch
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|pmruntime
name|_
argument_list|(
operator|(
name|OP
operator|*
name|pm
operator|,
name|OP
operator|*
name|expr
operator|,
name|OP
operator|*
name|repl
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|pmtrans
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|,
name|OP
operator|*
name|expr
operator|,
name|OP
operator|*
name|repl
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|pop_return
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|pop_scope
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|prepend_elem
name|_
argument_list|(
operator|(
name|I32
name|optype
operator|,
name|OP
operator|*
name|head
operator|,
name|OP
operator|*
name|tail
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|push_return
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|push_scope
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|ref
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|,
name|I32
name|type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|refkids
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|,
name|I32
name|type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|regdump
name|_
argument_list|(
operator|(
name|regexp
operator|*
name|r
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|pregexec
name|_
argument_list|(
operator|(
name|regexp
operator|*
name|prog
operator|,
name|char
operator|*
name|stringarg
operator|,
name|char
operator|*
name|strend
operator|,
name|char
operator|*
name|strbeg
operator|,
name|I32
name|minend
operator|,
name|SV
operator|*
name|screamer
operator|,
name|U32
name|nosave
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|pregfree
name|_
argument_list|(
operator|(
expr|struct
name|regexp
operator|*
name|r
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|regexp
modifier|*
name|pregcomp
name|_
argument_list|(
operator|(
name|char
operator|*
name|exp
operator|,
name|char
operator|*
name|xend
operator|,
name|PMOP
operator|*
name|pm
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|regexec_flags
name|_
argument_list|(
operator|(
name|regexp
operator|*
name|prog
operator|,
name|char
operator|*
name|stringarg
operator|,
name|char
operator|*
name|strend
operator|,
name|char
operator|*
name|strbeg
operator|,
name|I32
name|minend
operator|,
name|SV
operator|*
name|screamer
operator|,
name|void
operator|*
name|data
operator|,
name|U32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|regnode
modifier|*
name|regnext
name|_
argument_list|(
operator|(
name|regnode
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|regprop
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|regnode
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|repeatcpy
name|_
argument_list|(
operator|(
name|char
operator|*
name|to
operator|,
name|char
operator|*
name|from
operator|,
name|I32
name|len
operator|,
name|I32
name|count
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|rninstr
name|_
argument_list|(
operator|(
name|char
operator|*
name|big
operator|,
name|char
operator|*
name|bigend
operator|,
name|char
operator|*
name|little
operator|,
name|char
operator|*
name|lend
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|Sighandler_t
name|rsignal
name|_
argument_list|(
operator|(
name|int
name|i
operator|,
name|Sighandler_t
name|t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|rsignal_restore
name|_
argument_list|(
operator|(
name|int
name|i
operator|,
name|Sigsave_t
operator|*
name|t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|rsignal_save
name|_
argument_list|(
operator|(
name|int
name|i
operator|,
name|Sighandler_t
name|t1
operator|,
name|Sigsave_t
operator|*
name|t2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|Sighandler_t
name|rsignal_state
name|_
argument_list|(
operator|(
name|int
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|rxres_free
name|_
argument_list|(
operator|(
name|void
operator|*
operator|*
name|rsp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|rxres_restore
name|_
argument_list|(
operator|(
name|void
operator|*
operator|*
name|rsp
operator|,
name|REGEXP
operator|*
name|prx
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|rxres_save
name|_
argument_list|(
operator|(
name|void
operator|*
operator|*
name|rsp
operator|,
name|REGEXP
operator|*
name|prx
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|HAS_RENAME
end_ifndef

begin_decl_stmt
name|VIRTUAL
name|I32
name|same_dirent
name|_
argument_list|(
operator|(
name|char
operator|*
name|a
operator|,
name|char
operator|*
name|b
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|savepv
name|_
argument_list|(
operator|(
name|char
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|savepvn
name|_
argument_list|(
operator|(
name|char
operator|*
name|sv
operator|,
name|I32
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|savestack_grow
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_aelem
name|_
argument_list|(
operator|(
name|AV
operator|*
name|av
operator|,
name|I32
name|idx
operator|,
name|SV
operator|*
operator|*
name|sptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_aptr
name|_
argument_list|(
operator|(
name|AV
operator|*
operator|*
name|aptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|AV
modifier|*
name|save_ary
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_clearsv
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|*
name|svp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_delete
name|_
argument_list|(
operator|(
name|HV
operator|*
name|hv
operator|,
name|char
operator|*
name|key
operator|,
name|I32
name|klen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|titan
end_ifndef

begin_comment
comment|/* TitanOS cc can't handle this */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_typedef
typedef|typedef
name|void
argument_list|(
argument|CPerlObj::*DESTRUCTORFUNC
argument_list|)
name|_
argument_list|(
operator|(
name|void
operator|*
operator|)
argument_list|)
expr_stmt|;
end_typedef

begin_decl_stmt
name|VIRTUAL
name|void
name|save_destructor
name|_
argument_list|(
operator|(
name|DESTRUCTORFUNC
name|f
operator|,
name|void
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
name|void
name|save_destructor
name|_
argument_list|(
operator|(
name|void
argument_list|(
operator|*
name|f
argument_list|)
argument_list|(
name|void
operator|*
argument_list|)
operator|,
name|void
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* titan */
end_comment

begin_decl_stmt
name|VIRTUAL
name|void
name|save_freesv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_freeop
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_freepv
name|_
argument_list|(
operator|(
name|char
operator|*
name|pv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_gp
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|,
name|I32
name|empty
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HV
modifier|*
name|save_hash
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_helem
name|_
argument_list|(
operator|(
name|HV
operator|*
name|hv
operator|,
name|SV
operator|*
name|key
operator|,
name|SV
operator|*
operator|*
name|sptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_hints
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_hptr
name|_
argument_list|(
operator|(
name|HV
operator|*
operator|*
name|hptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_I16
name|_
argument_list|(
operator|(
name|I16
operator|*
name|intp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_I32
name|_
argument_list|(
operator|(
name|I32
operator|*
name|intp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_int
name|_
argument_list|(
operator|(
name|int
operator|*
name|intp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_item
name|_
argument_list|(
operator|(
name|SV
operator|*
name|item
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_iv
name|_
argument_list|(
operator|(
name|IV
operator|*
name|iv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_list
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|*
name|sarg
operator|,
name|I32
name|maxsarg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_long
name|_
argument_list|(
operator|(
name|long
operator|*
name|longp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_nogv
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_op
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|save_scalar
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_pptr
name|_
argument_list|(
operator|(
name|char
operator|*
operator|*
name|pptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_sptr
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|*
name|sptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|save_svref
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|*
name|sptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
modifier|*
name|save_threadsv
name|_
argument_list|(
operator|(
name|PADOFFSET
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|sawparens
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|scalar
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|scalarkids
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|scalarseq
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|scalarvoid
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|UV
name|scan_hex
name|_
argument_list|(
operator|(
name|char
operator|*
name|start
operator|,
name|I32
name|len
operator|,
name|I32
operator|*
name|retlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|scan_num
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|UV
name|scan_oct
name|_
argument_list|(
operator|(
name|char
operator|*
name|start
operator|,
name|I32
name|len
operator|,
name|I32
operator|*
name|retlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|scope
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|screaminstr
name|_
argument_list|(
operator|(
name|SV
operator|*
name|bigsv
operator|,
name|SV
operator|*
name|littlesv
operator|,
name|I32
name|start_shift
operator|,
name|I32
name|end_shift
operator|,
name|I32
operator|*
name|state
operator|,
name|I32
name|last
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|VMS
end_ifndef

begin_decl_stmt
name|VIRTUAL
name|I32
name|setenv_getix
name|_
argument_list|(
operator|(
name|char
operator|*
name|nam
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|setdefout
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|sharepvn
name|_
argument_list|(
operator|(
name|char
operator|*
name|sv
operator|,
name|I32
name|len
operator|,
name|U32
name|hash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|HEK
modifier|*
name|share_hek
name|_
argument_list|(
operator|(
name|char
operator|*
name|sv
operator|,
name|I32
name|len
operator|,
name|U32
name|hash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|Signal_t
name|sighandler
name|_
argument_list|(
operator|(
name|int
name|sig
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
modifier|*
name|stack_grow
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|*
name|sp
operator|,
name|SV
operator|*
operator|*
name|p
operator|,
name|int
name|n
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|start_subparse
name|_
argument_list|(
operator|(
name|I32
name|is_format
operator|,
name|U32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sub_crush_depth
name|_
argument_list|(
operator|(
name|CV
operator|*
name|cv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|sv_2bool
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|CV
modifier|*
name|sv_2cv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|HV
operator|*
operator|*
name|st
operator|,
name|GV
operator|*
operator|*
name|gvp
operator|,
name|I32
name|lref
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|IO
modifier|*
name|sv_2io
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|IV
name|sv_2iv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|sv_2mortal
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|double
name|sv_2nv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|sv_2pv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|STRLEN
operator|*
name|lp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|UV
name|sv_2uv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|IV
name|sv_iv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|UV
name|sv_uv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|double
name|sv_nv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|sv_pvn
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|STRLEN
operator|*
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|sv_true
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_add_arena
name|_
argument_list|(
operator|(
name|char
operator|*
name|ptr
operator|,
name|U32
name|size
operator|,
name|U32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|sv_backoff
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|sv_bless
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|HV
operator|*
name|stash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_catpvf
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
specifier|const
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_catpv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|char
operator|*
name|ptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_catpvn
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|char
operator|*
name|ptr
operator|,
name|STRLEN
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_catsv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|dsv
operator|,
name|SV
operator|*
name|ssv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_chop
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|char
operator|*
name|ptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_clean_all
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_clean_objs
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_clear
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|sv_cmp
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv1
operator|,
name|SV
operator|*
name|sv2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|sv_cmp_locale
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv1
operator|,
name|SV
operator|*
name|sv2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|USE_LOCALE_COLLATE
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|sv_collxfrm
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|STRLEN
operator|*
name|nxp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|sv_compile_2op
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|OP
operator|*
operator|*
name|startp
operator|,
name|char
operator|*
name|code
operator|,
name|AV
operator|*
operator|*
name|avp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_dec
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_dump
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|sv_derived_from
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|char
operator|*
name|name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|sv_eq
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv1
operator|,
name|SV
operator|*
name|sv2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_free
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_free_arenas
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|sv_gets
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|PerlIO
operator|*
name|fp
operator|,
name|I32
name|append
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|DOSISH
end_ifndef

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|sv_grow
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|I32
name|newlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|sv_grow
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|unsigned
name|long
name|newlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_inc
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_insert
name|_
argument_list|(
operator|(
name|SV
operator|*
name|bigsv
operator|,
name|STRLEN
name|offset
operator|,
name|STRLEN
name|len
operator|,
name|char
operator|*
name|little
operator|,
name|STRLEN
name|littlelen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|sv_isa
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|char
operator|*
name|name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|sv_isobject
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|STRLEN
name|sv_len
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_magic
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|SV
operator|*
name|obj
operator|,
name|int
name|how
operator|,
name|char
operator|*
name|name
operator|,
name|I32
name|namlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|sv_mortalcopy
name|_
argument_list|(
operator|(
name|SV
operator|*
name|oldsv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|sv_newmortal
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|sv_newref
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|sv_peek
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|sv_pvn_force
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|STRLEN
operator|*
name|lp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|char
modifier|*
name|sv_reftype
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|int
name|ob
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_replace
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|SV
operator|*
name|nsv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_report_used
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_reset
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|,
name|HV
operator|*
name|stash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setpvf
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
specifier|const
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setiv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|IV
name|num
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setpviv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|IV
name|num
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setuv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|UV
name|num
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setnv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|double
name|num
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|sv_setref_iv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|rv
operator|,
name|char
operator|*
name|classname
operator|,
name|IV
name|iv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|sv_setref_nv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|rv
operator|,
name|char
operator|*
name|classname
operator|,
name|double
name|nv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|sv_setref_pv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|rv
operator|,
name|char
operator|*
name|classname
operator|,
name|void
operator|*
name|pv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
name|sv_setref_pvn
name|_
argument_list|(
operator|(
name|SV
operator|*
name|rv
operator|,
name|char
operator|*
name|classname
operator|,
name|char
operator|*
name|pv
operator|,
name|I32
name|n
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setpv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
specifier|const
name|char
operator|*
name|ptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setpvn
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
specifier|const
name|char
operator|*
name|ptr
operator|,
name|STRLEN
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setsv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|dsv
operator|,
name|SV
operator|*
name|ssv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_taint
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|sv_tainted
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|sv_unmagic
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|int
name|type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_unref
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_untaint
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|bool
name|sv_upgrade
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|U32
name|mt
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_usepvn
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|char
operator|*
name|ptr
operator|,
name|STRLEN
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_vcatpvfn
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
specifier|const
name|char
operator|*
name|pat
operator|,
name|STRLEN
name|patlen
operator|,
name|va_list
operator|*
name|args
operator|,
name|SV
operator|*
operator|*
name|svargs
operator|,
name|I32
name|svmax
operator|,
name|bool
operator|*
name|used_locale
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_vsetpvfn
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
specifier|const
name|char
operator|*
name|pat
operator|,
name|STRLEN
name|patlen
operator|,
name|va_list
operator|*
name|args
operator|,
name|SV
operator|*
operator|*
name|svargs
operator|,
name|I32
name|svmax
operator|,
name|bool
operator|*
name|used_locale
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|taint_env
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|taint_proper
name|_
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|f
operator|,
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|UNLINK_ALL_VERSIONS
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|I32
name|unlnk
name|_
argument_list|(
operator|(
name|char
operator|*
name|f
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|USE_THREADS
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|void
name|unlock_condpair
name|_
argument_list|(
operator|(
name|void
operator|*
name|svv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|VIRTUAL
name|void
name|unsharepvn
name|_
argument_list|(
operator|(
name|char
operator|*
name|sv
operator|,
name|I32
name|len
operator|,
name|U32
name|hash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|unshare_hek
name|_
argument_list|(
operator|(
name|HEK
operator|*
name|hek
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|utilize
name|_
argument_list|(
operator|(
name|int
name|aver
operator|,
name|I32
name|floor
operator|,
name|OP
operator|*
name|version
operator|,
name|OP
operator|*
name|id
operator|,
name|OP
operator|*
name|arg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|vivify_defelem
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|vivify_ref
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|U32
name|to_what
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|wait4pid
name|_
argument_list|(
operator|(
name|int
name|pid
operator|,
name|int
operator|*
name|statusp
operator|,
name|int
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|warn
name|_
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|watch
name|_
argument_list|(
operator|(
name|char
operator|*
operator|*
name|addr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|I32
name|whichsig
name|_
argument_list|(
operator|(
name|char
operator|*
name|sig
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|yyerror
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|yylex
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|yyparse
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|yywarn
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|MYMALLOC
end_ifndef

begin_decl_stmt
name|VIRTUAL
name|Malloc_t
name|safemalloc
name|_
argument_list|(
operator|(
name|MEM_SIZE
name|nbytes
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|Malloc_t
name|safecalloc
name|_
argument_list|(
operator|(
name|MEM_SIZE
name|elements
operator|,
name|MEM_SIZE
name|size
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|Malloc_t
name|saferealloc
name|_
argument_list|(
operator|(
name|Malloc_t
name|where
operator|,
name|MEM_SIZE
name|nbytes
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|Free_t
name|safefree
name|_
argument_list|(
operator|(
name|Malloc_t
name|where
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|LEAKTEST
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|Malloc_t
name|safexmalloc
name|_
argument_list|(
operator|(
name|I32
name|x
operator|,
name|MEM_SIZE
name|size
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|Malloc_t
name|safexcalloc
name|_
argument_list|(
operator|(
name|I32
name|x
operator|,
name|MEM_SIZE
name|elements
operator|,
name|MEM_SIZE
name|size
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|Malloc_t
name|safexrealloc
name|_
argument_list|(
operator|(
name|Malloc_t
name|where
operator|,
name|MEM_SIZE
name|size
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|safexfree
name|_
argument_list|(
operator|(
name|Malloc_t
name|where
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_GLOBAL_STRUCT
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|struct
name|perl_vars
modifier|*
name|Perl_GetVars
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_label
name|protected
label|:
end_label

begin_decl_stmt
name|void
name|hsplit
name|_
argument_list|(
operator|(
name|HV
operator|*
name|hv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|hfreeentries
name|_
argument_list|(
operator|(
name|HV
operator|*
name|hv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|more_he
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|HE
modifier|*
name|new_he
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|del_he
name|_
argument_list|(
operator|(
name|HE
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|HEK
modifier|*
name|save_hek
name|_
argument_list|(
operator|(
name|char
operator|*
name|str
operator|,
name|I32
name|len
operator|,
name|U32
name|hash
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|SV
modifier|*
name|mess_alloc
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|gv_init_sv
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|,
name|I32
name|sv_type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|SV
modifier|*
name|save_scalar_at
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|*
name|sptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|IV
name|asIV
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|UV
name|asUV
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|SV
modifier|*
name|more_sv
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|more_xiv
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|more_xnv
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|more_xpv
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|more_xrv
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|XPVIV
modifier|*
name|new_xiv
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|XPVNV
modifier|*
name|new_xnv
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|XPV
modifier|*
name|new_xpv
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|XRV
modifier|*
name|new_xrv
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|del_xiv
name|_
argument_list|(
operator|(
name|XPVIV
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|del_xnv
name|_
argument_list|(
operator|(
name|XPVNV
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|del_xpv
name|_
argument_list|(
operator|(
name|XPV
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|del_xrv
name|_
argument_list|(
operator|(
name|XRV
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|sv_mortalgrow
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|sv_unglob
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|sv_check_thinkfirst
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|avhv_index_sv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|do_report_used
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|do_clean_objs
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|do_clean_named_objs
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|do_clean_all
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|not_a_number
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
modifier|*
name|my_safemalloc
name|_
argument_list|(
operator|(
name|MEM_SIZE
name|size
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
name|void
argument_list|(
argument|CPerlObj::*SVFUNC
argument_list|)
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|)
argument_list|)
expr_stmt|;
end_typedef

begin_decl_stmt
name|void
name|visit
name|_
argument_list|(
operator|(
name|SVFUNC
name|f
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
name|I32
argument_list|(
argument|CPerlObj::*SVCOMPARE
argument_list|)
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|,
name|SV
operator|*
operator|)
argument_list|)
expr_stmt|;
end_typedef

begin_decl_stmt
name|void
name|qsortsv
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|*
name|array
operator|,
name|size_t
name|num_elts
operator|,
name|SVCOMPARE
name|f
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|sortcv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|a
operator|,
name|SV
operator|*
name|b
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|save_magic
name|_
argument_list|(
operator|(
name|MGS
operator|*
name|mgs
operator|,
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|magic_methpack
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|,
name|char
operator|*
name|meth
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|magic_methcall
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|MAGIC
operator|*
name|mg
operator|,
name|char
operator|*
name|meth
operator|,
name|I32
name|flags
operator|,
name|int
name|n
operator|,
name|SV
operator|*
name|val
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|doform
name|_
argument_list|(
operator|(
name|CV
operator|*
name|cv
operator|,
name|GV
operator|*
name|gv
operator|,
name|OP
operator|*
name|retop
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doencodes
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|char
operator|*
name|s
operator|,
name|I32
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|SV
modifier|*
name|refto
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|U32
name|seed
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|docatch
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|dofindlabel
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|,
name|char
operator|*
name|label
operator|,
name|OP
operator|*
operator|*
name|opstack
operator|,
name|OP
operator|*
operator|*
name|oplimit
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|doparseform
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|dopoptoeval
name|_
argument_list|(
operator|(
name|I32
name|startingblock
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|dopoptolabel
name|_
argument_list|(
operator|(
name|char
operator|*
name|label
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|dopoptoloop
name|_
argument_list|(
operator|(
name|I32
name|startingblock
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|dopoptosub
name|_
argument_list|(
operator|(
name|I32
name|startingblock
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|dopoptosub_at
name|_
argument_list|(
operator|(
name|PERL_CONTEXT
operator|*
name|cxstk
operator|,
name|I32
name|startingblock
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|save_lines
name|_
argument_list|(
operator|(
name|AV
operator|*
name|array
operator|,
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|doeval
name|_
argument_list|(
operator|(
name|int
name|gimme
operator|,
name|OP
operator|*
operator|*
name|startop
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|SV
modifier|*
name|mul128
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|U8
name|m
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|SV
modifier|*
name|is_an_int
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|,
name|STRLEN
name|l
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|div128
name|_
argument_list|(
operator|(
name|SV
operator|*
name|pnum
operator|,
name|bool
operator|*
name|done
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|runops_standard
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|runops_debug
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|check_uni
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|force_next
name|_
argument_list|(
operator|(
name|I32
name|type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|force_version
name|_
argument_list|(
operator|(
name|char
operator|*
name|start
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|force_word
name|_
argument_list|(
operator|(
name|char
operator|*
name|start
operator|,
name|int
name|token
operator|,
name|int
name|check_keyword
operator|,
name|int
name|allow_pack
operator|,
name|int
name|allow_tick
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|SV
modifier|*
name|tokeq
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|scan_const
name|_
argument_list|(
operator|(
name|char
operator|*
name|start
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|scan_formline
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|scan_heredoc
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|scan_ident
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|,
name|char
operator|*
name|send
operator|,
name|char
operator|*
name|dest
operator|,
name|STRLEN
name|destlen
operator|,
name|I32
name|ck_uni
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|scan_inputsymbol
name|_
argument_list|(
operator|(
name|char
operator|*
name|start
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|scan_pat
name|_
argument_list|(
operator|(
name|char
operator|*
name|start
operator|,
name|I32
name|type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|scan_str
name|_
argument_list|(
operator|(
name|char
operator|*
name|start
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|scan_subst
name|_
argument_list|(
operator|(
name|char
operator|*
name|start
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|scan_trans
name|_
argument_list|(
operator|(
name|char
operator|*
name|start
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|scan_word
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|,
name|char
operator|*
name|dest
operator|,
name|STRLEN
name|destlen
operator|,
name|int
name|allow_package
operator|,
name|STRLEN
operator|*
name|slp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|skipspace
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|checkcomma
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|,
name|char
operator|*
name|name
operator|,
name|char
operator|*
name|what
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|force_ident
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|,
name|int
name|kind
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|incline
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|intuit_method
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|,
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|intuit_more
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|lop
name|_
argument_list|(
operator|(
name|I32
name|f
operator|,
name|expectation
name|x
operator|,
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|missingterm
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|no_op
name|_
argument_list|(
operator|(
name|char
operator|*
name|what
operator|,
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|set_csh
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|sublex_done
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|sublex_push
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|sublex_start
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|CRIPPLED_CC
end_ifdef

begin_decl_stmt
name|int
name|uni
name|_
argument_list|(
operator|(
name|I32
name|f
operator|,
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|char
modifier|*
name|filter_gets
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|PerlIO
operator|*
name|fp
operator|,
name|STRLEN
name|append
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|SV
modifier|*
name|new_constant
name|_
argument_list|(
operator|(
name|char
operator|*
name|s
operator|,
name|STRLEN
name|len
operator|,
name|char
operator|*
name|key
operator|,
name|SV
operator|*
name|sv
operator|,
name|SV
operator|*
name|pv
operator|,
name|char
operator|*
name|type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|ao
name|_
argument_list|(
operator|(
name|int
name|toketype
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|depcom
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|WIN32
end_ifdef

begin_decl_stmt
name|I32
name|win32_textfilter
name|_
argument_list|(
operator|(
name|int
name|idx
operator|,
name|SV
operator|*
name|sv
operator|,
name|int
name|maxlen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|char
modifier|*
name|incl_perldb
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|SV
modifier|*
name|isa_lookup
name|_
argument_list|(
operator|(
name|HV
operator|*
name|stash
operator|,
name|char
operator|*
name|name
operator|,
name|int
name|len
operator|,
name|int
name|level
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|CV
modifier|*
name|get_db_sub
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|*
name|svp
operator|,
name|CV
operator|*
name|cv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|list_assignment
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|bad_type
name|_
argument_list|(
operator|(
name|I32
name|n
operator|,
name|char
operator|*
name|t
operator|,
name|char
operator|*
name|name
operator|,
name|OP
operator|*
name|kid
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|modkids
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|,
name|I32
name|type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|no_fh_allowed
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|scalarboolean
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|too_few_arguments
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|,
name|char
operator|*
name|name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|too_many_arguments
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|,
name|char
operator|*
name|name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|null
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|PADOFFSET
name|pad_findlex
name|_
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|PADOFFSET
name|newoff
operator|,
name|U32
name|seq
operator|,
name|CV
operator|*
name|startcv
operator|,
name|I32
name|cx_ix
operator|,
name|I32
name|saweval
operator|,
name|U32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|newDEFSVOP
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|gv_ename
name|_
argument_list|(
operator|(
name|GV
operator|*
name|gv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|CV
modifier|*
name|cv_clone2
name|_
argument_list|(
operator|(
name|CV
operator|*
name|proto
operator|,
name|CV
operator|*
name|outside
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|find_beginning
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|forbid_setid
name|_
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|incpush
name|_
argument_list|(
operator|(
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|init_interp
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|init_ids
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|init_debugger
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|init_lexer
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|init_main_stash
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|USE_THREADS
end_ifdef

begin_decl_stmt
name|struct
name|perl_thread
modifier|*
name|init_main_thread
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* USE_THREADS */
end_comment

begin_decl_stmt
name|void
name|init_perllib
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|init_postdump_symbols
name|_
argument_list|(
operator|(
name|int
operator|,
name|char
operator|*
operator|*
operator|,
name|char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|init_predump_symbols
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|my_exit_jump
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
name|__attribute__
argument_list|(
operator|(
name|noreturn
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|nuke_stacks
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|open_script
name|_
argument_list|(
operator|(
name|char
operator|*
operator|,
name|bool
operator|,
name|SV
operator|*
operator|,
name|int
operator|*
name|fd
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|usage
name|_
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|validate_suid
name|_
argument_list|(
operator|(
name|char
operator|*
operator|,
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|regnode
modifier|*
name|reg
name|_
argument_list|(
operator|(
name|I32
operator|,
name|I32
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|regnode
modifier|*
name|reganode
name|_
argument_list|(
operator|(
name|U8
operator|,
name|U32
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|regnode
modifier|*
name|regatom
name|_
argument_list|(
operator|(
name|I32
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|regnode
modifier|*
name|regbranch
name|_
argument_list|(
operator|(
name|I32
operator|*
operator|,
name|I32
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|regc
name|_
argument_list|(
operator|(
name|U8
operator|,
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|regnode
modifier|*
name|regclass
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|regcurly
name|_
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|regnode
modifier|*
name|reg_node
name|_
argument_list|(
operator|(
name|U8
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|regnode
modifier|*
name|regpiece
name|_
argument_list|(
operator|(
name|I32
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|reginsert
name|_
argument_list|(
operator|(
name|U8
operator|,
name|regnode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|regoptail
name|_
argument_list|(
operator|(
name|regnode
operator|*
operator|,
name|regnode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|regset
name|_
argument_list|(
operator|(
name|char
operator|*
operator|,
name|I32
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|regtail
name|_
argument_list|(
operator|(
name|regnode
operator|*
operator|,
name|regnode
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|regwhite
name|_
argument_list|(
operator|(
name|char
operator|*
operator|,
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|nextchar
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|regnode
modifier|*
name|dumpuntil
name|_
argument_list|(
operator|(
name|regnode
operator|*
name|start
operator|,
name|regnode
operator|*
name|node
operator|,
name|regnode
operator|*
name|last
operator|,
name|SV
operator|*
name|sv
operator|,
name|I32
name|l
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|scan_commit
name|_
argument_list|(
operator|(
name|scan_data_t
operator|*
name|data
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|study_chunk
name|_
argument_list|(
operator|(
name|regnode
operator|*
operator|*
name|scanp
operator|,
name|I32
operator|*
name|deltap
operator|,
name|regnode
operator|*
name|last
operator|,
name|scan_data_t
operator|*
name|data
operator|,
name|U32
name|flags
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|add_data
name|_
argument_list|(
operator|(
name|I32
name|n
operator|,
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|re_croak2
name|_
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|pat1
operator|,
specifier|const
name|char
operator|*
name|pat2
operator|,
operator|...
operator|)
argument_list|)
name|__attribute__
argument_list|(
operator|(
name|noreturn
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|regmatch
name|_
argument_list|(
operator|(
name|regnode
operator|*
name|prog
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|regrepeat
name|_
argument_list|(
operator|(
name|regnode
operator|*
name|p
operator|,
name|I32
name|max
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|regrepeat_hard
name|_
argument_list|(
operator|(
name|regnode
operator|*
name|p
operator|,
name|I32
name|max
operator|,
name|I32
operator|*
name|lp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|regtry
name|_
argument_list|(
operator|(
name|regexp
operator|*
name|prog
operator|,
name|char
operator|*
name|startpos
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|bool
name|reginclass
name|_
argument_list|(
operator|(
name|char
operator|*
name|p
operator|,
name|I32
name|c
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|CHECKPOINT
name|regcppush
name|_
argument_list|(
operator|(
name|I32
name|parenfloor
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|regcppop
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|dump
name|_
argument_list|(
operator|(
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|WIN32
end_ifdef

begin_decl_stmt
name|int
name|do_aspawn
name|_
argument_list|(
operator|(
name|void
operator|*
name|vreally
operator|,
name|void
operator|*
operator|*
name|vmark
operator|,
name|void
operator|*
operator|*
name|vsp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|DEBUGGING
end_ifdef

begin_decl_stmt
name|void
name|del_sv
name|_
argument_list|(
operator|(
name|SV
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|void
name|debprof
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
modifier|*
name|bset_obj_store
name|_
argument_list|(
operator|(
name|void
operator|*
name|obj
operator|,
name|I32
name|ix
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|new_logop
name|_
argument_list|(
operator|(
name|I32
name|type
operator|,
name|I32
name|flags
operator|,
name|OP
operator|*
operator|*
name|firstp
operator|,
name|OP
operator|*
operator|*
name|otherp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|amagic_cmp
name|_
argument_list|(
operator|(
specifier|register
name|SV
operator|*
name|str1
operator|,
specifier|register
name|SV
operator|*
name|str2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|I32
name|amagic_cmp_locale
name|_
argument_list|(
operator|(
specifier|register
name|SV
operator|*
name|str1
operator|,
specifier|register
name|SV
operator|*
name|str2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|PPDEF
parameter_list|(
name|s
parameter_list|)
value|OP* CPerlObj::s _((ARGSproto));
end_define

begin_label
name|public
label|:
end_label

begin_include
include|#
directive|include
file|"pp_proto.h"
end_include

begin_decl_stmt
name|OP
modifier|*
name|ck_ftst
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_anoncode
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_bitop
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_concat
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_spair
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_delete
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_eof
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_eval
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_exec
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_exists
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_rvconst
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_fun
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_glob
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_grep
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_index
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_lengthconst
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_lfun
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_rfun
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_listiob
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_fun_locale
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_scmp
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_match
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_null
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_repeat
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_require
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_select
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_shift
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_sort
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_split
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_subr
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_svconst
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|OP
modifier|*
name|ck_trunc
name|_
argument_list|(
operator|(
name|OP
operator|*
name|o
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|unwind_handler_stack
name|_
argument_list|(
operator|(
name|void
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|restore_magic
name|_
argument_list|(
operator|(
name|void
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|restore_rsfp
name|_
argument_list|(
operator|(
name|void
operator|*
name|f
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|restore_expect
name|_
argument_list|(
operator|(
name|void
operator|*
name|e
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|restore_lex_expect
name|_
argument_list|(
operator|(
name|void
operator|*
name|e
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|yydestruct
name|_
argument_list|(
operator|(
name|void
operator|*
name|ptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|int
name|fprintf
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
name|pf
operator|,
specifier|const
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|SV
modifier|*
modifier|*
name|get_specialsv_list
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|WIN32
end_ifdef

begin_decl_stmt
name|VIRTUAL
name|int
modifier|&
name|ErrorNo
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WIN32 */
end_comment

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* !PERL_OBJECT */
end_comment

begin_decl_stmt
name|END_EXTERN_C
endif|#
directive|endif
comment|/* PERL_OBJECT */
ifdef|#
directive|ifdef
name|INDIRECT_BGET_MACROS
name|VIRTUAL
name|void
name|byterun
name|_
argument_list|(
operator|(
expr|struct
name|bytestream
name|bs
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
name|VIRTUAL
name|void
name|byterun
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
name|fp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* INDIRECT_BGET_MACROS */
end_comment

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_catpvf_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
specifier|const
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_catpv_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|char
operator|*
name|ptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_catpvn_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|char
operator|*
name|ptr
operator|,
name|STRLEN
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_catsv_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|dstr
operator|,
name|SV
operator|*
name|sstr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setpvf_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
specifier|const
name|char
operator|*
name|pat
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setiv_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|IV
name|i
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setpviv_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|IV
name|iv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setuv_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|UV
name|u
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setnv_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|double
name|num
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setpv_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
specifier|const
name|char
operator|*
name|ptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setpvn_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
specifier|const
name|char
operator|*
name|ptr
operator|,
name|STRLEN
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_setsv_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|dstr
operator|,
name|SV
operator|*
name|sstr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|sv_usepvn_mg
name|_
argument_list|(
operator|(
name|SV
operator|*
name|sv
operator|,
name|char
operator|*
name|ptr
operator|,
name|STRLEN
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|MGVTBL
modifier|*
name|get_vtbl
name|_
argument_list|(
operator|(
name|int
name|vtbl_id
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|OP
modifier|*
name|dofile
name|_
argument_list|(
operator|(
name|OP
operator|*
name|term
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|VIRTUAL
name|void
name|save_generic_svref
name|_
argument_list|(
operator|(
name|SV
operator|*
operator|*
name|sptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* New virtual functions must be added here to maintain binary  * compatablity with PERL_OBJECT  */
end_comment

end_unit

