begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * iperlsys.h - Perl's interface to the system  *  * This file defines the system level functionality that perl needs.  *  * When using C, this definition is in the form of a set of macros  * that can be #defined to the system-level function (or a wrapper  * provided elsewhere).  *  * When using C++ with -DPERL_OBJECT, this definition is in the  * form of a set of virtual base classes which must be subclassed to  * provide a real implementation.  The Perl Object will use instances  * of this implementation to use the system-level functionality.  *  * GSAR 21-JUN-98  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__Inc__IPerl___
end_ifndef

begin_define
define|#
directive|define
name|__Inc__IPerl___
end_define

begin_comment
comment|/*  *	PerlXXX_YYY explained - DickH and DougL @ ActiveState.com  *  * XXX := functional group  * YYY := stdlib/OS function name  *  * Continuing with the theme of PerlIO, all OS functionality was  * encapsulated into one of several interfaces.  *  * PerlIO - stdio  * PerlLIO - low level I/O  * PerlMem - malloc, realloc, free  * PerlDir - directory related  * PerlEnv - process environment handling  * PerlProc - process control  * PerlSock - socket functions  *  *  * The features of this are:  * 1. All OS dependant code is in the Perl Host and not the Perl Core.  *    (At least this is the holy grail goal of this work)  * 2. The Perl Host (see perl.h for description) can provide a new and  *    improved interface to OS functionality if required.  * 3. Developers can easily hook into the OS calls for instrumentation  *    or diagnostic purposes.  *  * What was changed to do this:  * 1. All calls to OS functions were replaced with PerlXXX_YYY  *  */
end_comment

begin_comment
comment|/*     Interface for perl stdio functions */
end_comment

begin_comment
comment|/* Clean up (or at least document) the various possible #defines.    This section attempts to match the 5.003_03 Configure variables    onto the 5.003_02 header file values.    I can't figure out where USE_STDIO was supposed to be set.    --AD */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|USE_PERLIO
end_ifndef

begin_define
define|#
directive|define
name|PERLIO_IS_STDIO
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Below is the 5.003_02 stuff. */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|USE_STDIO
end_ifdef

begin_ifndef
ifndef|#
directive|ifndef
name|PERLIO_IS_STDIO
end_ifndef

begin_define
define|#
directive|define
name|PERLIO_IS_STDIO
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_else
else|#
directive|else
end_else

begin_decl_stmt
specifier|extern
name|void
name|PerlIO_init
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO
end_ifndef

begin_typedef
typedef|typedef
name|struct
name|_PerlIO
name|PerlIO
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|class
name|IPerlStdIO
block|{
name|public
label|:
name|virtual
name|PerlIO
modifier|*
name|Stdin
parameter_list|(
name|void
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|PerlIO
modifier|*
name|Stdout
parameter_list|(
name|void
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|PerlIO
modifier|*
name|Stderr
parameter_list|(
name|void
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|PerlIO
modifier|*
name|Open
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Close
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Eof
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Error
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Clearerr
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Getc
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|char
modifier|*
name|GetBase
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|GetBufsiz
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|GetCnt
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|char
modifier|*
name|GetPtr
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|char
modifier|*
name|Gets
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Putc
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Puts
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Flush
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Ungetc
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Fileno
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|PerlIO
modifier|*
name|Fdopen
parameter_list|(
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|PerlIO
modifier|*
name|Reopen
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|SSize_t
name|Read
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|Size_t
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|SSize_t
name|Write
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|Size_t
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|SetBuf
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|SetVBuf
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|Size_t
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|SetCnt
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|SetPtrCnt
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Setlinebuf
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Printf
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Vprintf
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|va_list
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|long
name|Tell
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Seek
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|Off_t
parameter_list|,
name|int
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Rewind
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|PerlIO
modifier|*
name|Tmpfile
parameter_list|(
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Getpos
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
name|Fpos_t
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Setpos
parameter_list|(
name|PerlIO
modifier|*
parameter_list|,
specifier|const
name|Fpos_t
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Init
parameter_list|(
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|InitOSExtras
parameter_list|(
name|void
modifier|*
name|p
parameter_list|)
init|=
literal|0
function_decl|;
ifdef|#
directive|ifdef
name|WIN32
name|virtual
name|int
name|OpenOSfhandle
parameter_list|(
name|long
name|osfhandle
parameter_list|,
name|int
name|flags
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|GetOSfhandle
parameter_list|(
name|int
name|filenum
parameter_list|)
init|=
literal|0
function_decl|;
endif|#
directive|endif
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|USE_STDIO_PTR
end_ifdef

begin_define
define|#
directive|define
name|PerlIO_has_cntptr
parameter_list|(
name|f
parameter_list|)
value|1
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|STDIO_CNT_LVALUE
end_ifdef

begin_define
define|#
directive|define
name|PerlIO_canset_cnt
parameter_list|(
name|f
parameter_list|)
value|1
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|STDIO_PTR_LVALUE
end_ifdef

begin_define
define|#
directive|define
name|PerlIO_fast_gets
parameter_list|(
name|f
parameter_list|)
value|1
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|PerlIO_canset_cnt
parameter_list|(
name|f
parameter_list|)
value|0
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* USE_STDIO_PTR */
end_comment

begin_define
define|#
directive|define
name|PerlIO_has_cntptr
parameter_list|(
name|f
parameter_list|)
value|0
end_define

begin_define
define|#
directive|define
name|PerlIO_canset_cnt
parameter_list|(
name|f
parameter_list|)
value|0
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* USE_STDIO_PTR */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_fast_gets
end_ifndef

begin_define
define|#
directive|define
name|PerlIO_fast_gets
parameter_list|(
name|f
parameter_list|)
value|0
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|FILE_base
end_ifdef

begin_define
define|#
directive|define
name|PerlIO_has_base
parameter_list|(
name|f
parameter_list|)
value|1
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|PerlIO_has_base
parameter_list|(
name|f
parameter_list|)
value|0
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|PerlIO_stdin
parameter_list|()
value|PL_piStdIO->Stdin()
end_define

begin_define
define|#
directive|define
name|PerlIO_stdout
parameter_list|()
value|PL_piStdIO->Stdout()
end_define

begin_define
define|#
directive|define
name|PerlIO_stderr
parameter_list|()
value|PL_piStdIO->Stderr()
end_define

begin_define
define|#
directive|define
name|PerlIO_open
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|PL_piStdIO->Open((x),(y), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_close
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->Close((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_eof
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->Eof((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_error
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->Error((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_clearerr
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->Clearerr((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_getc
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->Getc((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_get_base
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->GetBase((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_get_bufsiz
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->GetBufsiz((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_get_cnt
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->GetCnt((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_get_ptr
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->GetPtr((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_putc
parameter_list|(
name|f
parameter_list|,
name|c
parameter_list|)
value|PL_piStdIO->Putc((f),(c), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_puts
parameter_list|(
name|f
parameter_list|,
name|s
parameter_list|)
value|PL_piStdIO->Puts((f),(s), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_flush
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->Flush((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_gets
parameter_list|(
name|s
parameter_list|,
name|n
parameter_list|,
name|fp
parameter_list|)
value|PL_piStdIO->Gets((fp), s, n, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_ungetc
parameter_list|(
name|f
parameter_list|,
name|c
parameter_list|)
value|PL_piStdIO->Ungetc((f),(c), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_fileno
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->Fileno((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_fdopen
parameter_list|(
name|f
parameter_list|,
name|s
parameter_list|)
value|PL_piStdIO->Fdopen((f),(s), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_reopen
parameter_list|(
name|p
parameter_list|,
name|m
parameter_list|,
name|f
parameter_list|)
value|PL_piStdIO->Reopen((p), (m), (f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_read
parameter_list|(
name|f
parameter_list|,
name|buf
parameter_list|,
name|count
parameter_list|)
define|\
value|(SSize_t)PL_piStdIO->Read((f), (buf), (count), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_write
parameter_list|(
name|f
parameter_list|,
name|buf
parameter_list|,
name|count
parameter_list|)
define|\
value|PL_piStdIO->Write((f), (buf), (count), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_setbuf
parameter_list|(
name|f
parameter_list|,
name|b
parameter_list|)
value|PL_piStdIO->SetBuf((f), (b), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_setvbuf
parameter_list|(
name|f
parameter_list|,
name|b
parameter_list|,
name|t
parameter_list|,
name|s
parameter_list|)
value|PL_piStdIO->SetVBuf((f), (b), (t), (s), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_set_cnt
parameter_list|(
name|f
parameter_list|,
name|c
parameter_list|)
value|PL_piStdIO->SetCnt((f), (c), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_set_ptrcnt
parameter_list|(
name|f
parameter_list|,
name|p
parameter_list|,
name|c
parameter_list|)
define|\
value|PL_piStdIO->SetPtrCnt((f), (p), (c), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_setlinebuf
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->Setlinebuf((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_printf
value|fprintf
end_define

begin_define
define|#
directive|define
name|PerlIO_stdoutf
value|PL_piStdIO->Printf
end_define

begin_define
define|#
directive|define
name|PerlIO_vprintf
parameter_list|(
name|f
parameter_list|,
name|fmt
parameter_list|,
name|a
parameter_list|)
value|PL_piStdIO->Vprintf((f), ErrorNo(), (fmt),a)
end_define

begin_define
define|#
directive|define
name|PerlIO_tell
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->Tell((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_seek
parameter_list|(
name|f
parameter_list|,
name|o
parameter_list|,
name|w
parameter_list|)
value|PL_piStdIO->Seek((f),(o),(w), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_getpos
parameter_list|(
name|f
parameter_list|,
name|p
parameter_list|)
value|PL_piStdIO->Getpos((f),(p), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_setpos
parameter_list|(
name|f
parameter_list|,
name|p
parameter_list|)
value|PL_piStdIO->Setpos((f),(p), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_rewind
parameter_list|(
name|f
parameter_list|)
value|PL_piStdIO->Rewind((f), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_tmpfile
parameter_list|()
value|PL_piStdIO->Tmpfile(ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlIO_init
parameter_list|()
value|PL_piStdIO->Init(ErrorNo())
end_define

begin_undef
undef|#
directive|undef
name|init_os_extras
end_undef

begin_define
define|#
directive|define
name|init_os_extras
parameter_list|()
value|PL_piStdIO->InitOSExtras(this)
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_include
include|#
directive|include
file|"perlsdio.h"
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|PERLIO_IS_STDIO
end_ifndef

begin_ifdef
ifdef|#
directive|ifdef
name|USE_SFIO
end_ifdef

begin_include
include|#
directive|include
file|"perlsfio.h"
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* USE_SFIO */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* PERLIO_IS_STDIO */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|EOF
end_ifndef

begin_define
define|#
directive|define
name|EOF
value|(-1)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* This is to catch case with no stdio */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|BUFSIZ
end_ifndef

begin_define
define|#
directive|define
name|BUFSIZ
value|1024
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|SEEK_SET
end_ifndef

begin_define
define|#
directive|define
name|SEEK_SET
value|0
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|SEEK_CUR
end_ifndef

begin_define
define|#
directive|define
name|SEEK_CUR
value|1
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|SEEK_END
end_ifndef

begin_define
define|#
directive|define
name|SEEK_END
value|2
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO
end_ifndef

begin_struct_decl
struct_decl|struct
name|_PerlIO
struct_decl|;
end_struct_decl

begin_define
define|#
directive|define
name|PerlIO
value|struct _PerlIO
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* No PerlIO */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|Fpos_t
end_ifndef

begin_define
define|#
directive|define
name|Fpos_t
value|long
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|NEXT30_NO_ATTRIBUTE
end_ifndef

begin_ifndef
ifndef|#
directive|ifndef
name|HASATTRIBUTE
end_ifndef

begin_comment
comment|/* disable GNU-cc attribute checking? */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__attribute__
end_ifdef

begin_comment
comment|/* Avoid possible redefinition errors */
end_comment

begin_undef
undef|#
directive|undef
name|__attribute__
end_undef

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|__attribute__
parameter_list|(
name|attr
parameter_list|)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_stdoutf
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_stdoutf
name|_
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
operator|...
operator|)
argument_list|)
name|__attribute__
argument_list|(
operator|(
name|format
argument_list|(
name|printf
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_puts
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_puts
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_open
end_ifndef

begin_decl_stmt
specifier|extern
name|PerlIO
modifier|*
name|PerlIO_open
name|_
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_close
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_close
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_eof
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_eof
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_error
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_error
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_clearerr
end_ifndef

begin_decl_stmt
specifier|extern
name|void
name|PerlIO_clearerr
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_getc
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_getc
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_putc
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_putc
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_flush
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_flush
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_ungetc
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_ungetc
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_fileno
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_fileno
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_fdopen
end_ifndef

begin_decl_stmt
specifier|extern
name|PerlIO
modifier|*
name|PerlIO_fdopen
name|_
argument_list|(
operator|(
name|int
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_importFILE
end_ifndef

begin_decl_stmt
specifier|extern
name|PerlIO
modifier|*
name|PerlIO_importFILE
name|_
argument_list|(
operator|(
name|FILE
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_exportFILE
end_ifndef

begin_decl_stmt
specifier|extern
name|FILE
modifier|*
name|PerlIO_exportFILE
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_findFILE
end_ifndef

begin_decl_stmt
specifier|extern
name|FILE
modifier|*
name|PerlIO_findFILE
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_releaseFILE
end_ifndef

begin_decl_stmt
specifier|extern
name|void
name|PerlIO_releaseFILE
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
name|FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_read
end_ifndef

begin_decl_stmt
specifier|extern
name|SSize_t
name|PerlIO_read
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
name|void
operator|*
operator|,
name|Size_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_write
end_ifndef

begin_decl_stmt
specifier|extern
name|SSize_t
name|PerlIO_write
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
specifier|const
name|void
operator|*
operator|,
name|Size_t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_setlinebuf
end_ifndef

begin_decl_stmt
specifier|extern
name|void
name|PerlIO_setlinebuf
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_printf
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_printf
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
operator|...
operator|)
argument_list|)
name|__attribute__
argument_list|(
operator|(
name|format
argument_list|(
name|printf
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_sprintf
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_sprintf
name|_
argument_list|(
operator|(
name|char
operator|*
operator|,
name|int
operator|,
specifier|const
name|char
operator|*
operator|,
operator|...
operator|)
argument_list|)
name|__attribute__
argument_list|(
operator|(
name|format
argument_list|(
name|printf
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_vprintf
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_vprintf
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
name|va_list
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_tell
end_ifndef

begin_decl_stmt
specifier|extern
name|Off_t
name|PerlIO_tell
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_seek
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_seek
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
name|Off_t
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_rewind
end_ifndef

begin_decl_stmt
specifier|extern
name|void
name|PerlIO_rewind
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_has_base
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_has_base
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_has_cntptr
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_has_cntptr
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_fast_gets
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_fast_gets
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_canset_cnt
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_canset_cnt
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_get_ptr
end_ifndef

begin_decl_stmt
specifier|extern
name|STDCHAR
modifier|*
name|PerlIO_get_ptr
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_get_cnt
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_get_cnt
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_set_cnt
end_ifndef

begin_decl_stmt
specifier|extern
name|void
name|PerlIO_set_cnt
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_set_ptrcnt
end_ifndef

begin_decl_stmt
specifier|extern
name|void
name|PerlIO_set_ptrcnt
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
name|STDCHAR
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_get_base
end_ifndef

begin_decl_stmt
specifier|extern
name|STDCHAR
modifier|*
name|PerlIO_get_base
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_get_bufsiz
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_get_bufsiz
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_tmpfile
end_ifndef

begin_decl_stmt
specifier|extern
name|PerlIO
modifier|*
name|PerlIO_tmpfile
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_stdin
end_ifndef

begin_decl_stmt
specifier|extern
name|PerlIO
modifier|*
name|PerlIO_stdin
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_stdout
end_ifndef

begin_decl_stmt
specifier|extern
name|PerlIO
modifier|*
name|PerlIO_stdout
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_stderr
end_ifndef

begin_decl_stmt
specifier|extern
name|PerlIO
modifier|*
name|PerlIO_stderr
name|_
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_getpos
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_getpos
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
name|Fpos_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|PerlIO_setpos
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|PerlIO_setpos
name|_
argument_list|(
operator|(
name|PerlIO
operator|*
operator|,
specifier|const
name|Fpos_t
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  *   Interface for directory functions  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_decl_stmt
name|class
name|IPerlDir
block|{
name|public
label|:
name|virtual
name|int
name|Makedir
parameter_list|(
specifier|const
name|char
modifier|*
name|dirname
parameter_list|,
name|int
name|mode
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Chdir
parameter_list|(
specifier|const
name|char
modifier|*
name|dirname
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Rmdir
parameter_list|(
specifier|const
name|char
modifier|*
name|dirname
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Close
parameter_list|(
name|DIR
modifier|*
name|dirp
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|DIR
modifier|*
name|Open
parameter_list|(
name|char
modifier|*
name|filename
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|direct
modifier|*
name|Read
parameter_list|(
name|DIR
modifier|*
name|dirp
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Rewind
parameter_list|(
name|DIR
modifier|*
name|dirp
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Seek
parameter_list|(
name|DIR
modifier|*
name|dirp
parameter_list|,
name|long
name|loc
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|long
name|Tell
parameter_list|(
name|DIR
modifier|*
name|dirp
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_define
define|#
directive|define
name|PerlDir_mkdir
parameter_list|(
name|name
parameter_list|,
name|mode
parameter_list|)
define|\
value|PL_piDir->Makedir((name), (mode), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlDir_chdir
parameter_list|(
name|name
parameter_list|)
define|\
value|PL_piDir->Chdir((name), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlDir_rmdir
parameter_list|(
name|name
parameter_list|)
define|\
value|PL_piDir->Rmdir((name), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlDir_close
parameter_list|(
name|dir
parameter_list|)
define|\
value|PL_piDir->Close((dir), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlDir_open
parameter_list|(
name|name
parameter_list|)
define|\
value|PL_piDir->Open((name), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlDir_read
parameter_list|(
name|dir
parameter_list|)
define|\
value|PL_piDir->Read((dir), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlDir_rewind
parameter_list|(
name|dir
parameter_list|)
define|\
value|PL_piDir->Rewind((dir), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlDir_seek
parameter_list|(
name|dir
parameter_list|,
name|loc
parameter_list|)
define|\
value|PL_piDir->Seek((dir), (loc), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlDir_tell
parameter_list|(
name|dir
parameter_list|)
define|\
value|PL_piDir->Tell((dir), ErrorNo())
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_define
define|#
directive|define
name|PerlDir_mkdir
parameter_list|(
name|name
parameter_list|,
name|mode
parameter_list|)
value|Mkdir((name), (mode))
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|VMS
end_ifdef

begin_define
define|#
directive|define
name|PerlDir_chdir
parameter_list|(
name|n
parameter_list|)
value|chdir(((n)&& *(n)) ? (n) : "SYS$LOGIN")
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|PerlDir_chdir
parameter_list|(
name|name
parameter_list|)
value|chdir((name))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|PerlDir_rmdir
parameter_list|(
name|name
parameter_list|)
value|rmdir((name))
end_define

begin_define
define|#
directive|define
name|PerlDir_close
parameter_list|(
name|dir
parameter_list|)
value|closedir((dir))
end_define

begin_define
define|#
directive|define
name|PerlDir_open
parameter_list|(
name|name
parameter_list|)
value|opendir((name))
end_define

begin_define
define|#
directive|define
name|PerlDir_read
parameter_list|(
name|dir
parameter_list|)
value|readdir((dir))
end_define

begin_define
define|#
directive|define
name|PerlDir_rewind
parameter_list|(
name|dir
parameter_list|)
value|rewinddir((dir))
end_define

begin_define
define|#
directive|define
name|PerlDir_seek
parameter_list|(
name|dir
parameter_list|,
name|loc
parameter_list|)
value|seekdir((dir), (loc))
end_define

begin_define
define|#
directive|define
name|PerlDir_tell
parameter_list|(
name|dir
parameter_list|)
value|telldir((dir))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_comment
comment|/*     Interface for perl environment functions */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_decl_stmt
name|class
name|IPerlEnv
block|{
name|public
label|:
name|virtual
name|char
modifier|*
name|Getenv
parameter_list|(
specifier|const
name|char
modifier|*
name|varname
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Putenv
parameter_list|(
specifier|const
name|char
modifier|*
name|envstring
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|char
modifier|*
name|LibPath
parameter_list|(
name|char
modifier|*
name|patchlevel
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|char
modifier|*
name|SiteLibPath
parameter_list|(
name|char
modifier|*
name|patchlevel
parameter_list|)
init|=
literal|0
function_decl|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_define
define|#
directive|define
name|PerlEnv_putenv
parameter_list|(
name|str
parameter_list|)
value|PL_piENV->Putenv((str), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlEnv_getenv
parameter_list|(
name|str
parameter_list|)
value|PL_piENV->Getenv((str), ErrorNo())
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|WIN32
end_ifdef

begin_define
define|#
directive|define
name|PerlEnv_lib_path
parameter_list|(
name|str
parameter_list|)
value|PL_piENV->LibPath((str))
end_define

begin_define
define|#
directive|define
name|PerlEnv_sitelib_path
parameter_list|(
name|str
parameter_list|)
value|PL_piENV->SiteLibPath((str))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_define
define|#
directive|define
name|PerlEnv_putenv
parameter_list|(
name|str
parameter_list|)
value|putenv((str))
end_define

begin_define
define|#
directive|define
name|PerlEnv_getenv
parameter_list|(
name|str
parameter_list|)
value|getenv((str))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_comment
comment|/*     Interface for perl low-level IO functions */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_decl_stmt
name|class
name|IPerlLIO
block|{
name|public
label|:
name|virtual
name|int
name|Access
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|int
name|mode
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Chmod
parameter_list|(
specifier|const
name|char
modifier|*
name|filename
parameter_list|,
name|int
name|pmode
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Chown
parameter_list|(
specifier|const
name|char
modifier|*
name|filename
parameter_list|,
name|uid_t
name|owner
parameter_list|,
name|gid_t
name|group
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Chsize
parameter_list|(
name|int
name|handle
parameter_list|,
name|long
name|size
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Close
parameter_list|(
name|int
name|handle
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Dup
parameter_list|(
name|int
name|handle
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Dup2
parameter_list|(
name|int
name|handle1
parameter_list|,
name|int
name|handle2
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Flock
parameter_list|(
name|int
name|fd
parameter_list|,
name|int
name|oper
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|FileStat
parameter_list|(
name|int
name|handle
parameter_list|,
name|struct
name|stat
modifier|*
name|buffer
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|IOCtl
parameter_list|(
name|int
name|i
parameter_list|,
name|unsigned
name|int
name|u
parameter_list|,
name|char
modifier|*
name|data
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Isatty
parameter_list|(
name|int
name|handle
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|long
name|Lseek
parameter_list|(
name|int
name|handle
parameter_list|,
name|long
name|offset
parameter_list|,
name|int
name|origin
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Lstat
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|struct
name|stat
modifier|*
name|buffer
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|char
modifier|*
name|Mktemp
parameter_list|(
name|char
modifier|*
name|Template
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Open
parameter_list|(
specifier|const
name|char
modifier|*
name|filename
parameter_list|,
name|int
name|oflag
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Open
parameter_list|(
specifier|const
name|char
modifier|*
name|filename
parameter_list|,
name|int
name|oflag
parameter_list|,
name|int
name|pmode
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Read
parameter_list|(
name|int
name|handle
parameter_list|,
name|void
modifier|*
name|buffer
parameter_list|,
name|unsigned
name|int
name|count
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Rename
parameter_list|(
specifier|const
name|char
modifier|*
name|oname
parameter_list|,
specifier|const
name|char
modifier|*
name|newname
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Setmode
parameter_list|(
name|int
name|handle
parameter_list|,
name|int
name|mode
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|NameStat
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|struct
name|stat
modifier|*
name|buffer
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|char
modifier|*
name|Tmpnam
parameter_list|(
name|char
modifier|*
name|string
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Umask
parameter_list|(
name|int
name|pmode
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Unlink
parameter_list|(
specifier|const
name|char
modifier|*
name|filename
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Utime
parameter_list|(
name|char
modifier|*
name|filename
parameter_list|,
name|struct
name|utimbuf
modifier|*
name|times
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Write
parameter_list|(
name|int
name|handle
parameter_list|,
specifier|const
name|void
modifier|*
name|buffer
parameter_list|,
name|unsigned
name|int
name|count
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_define
define|#
directive|define
name|PerlLIO_access
parameter_list|(
name|file
parameter_list|,
name|mode
parameter_list|)
define|\
value|PL_piLIO->Access((file), (mode), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_chmod
parameter_list|(
name|file
parameter_list|,
name|mode
parameter_list|)
define|\
value|PL_piLIO->Chmod((file), (mode), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_chown
parameter_list|(
name|file
parameter_list|,
name|owner
parameter_list|,
name|group
parameter_list|)
define|\
value|PL_piLIO->Chown((file), (owner), (group), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_chsize
parameter_list|(
name|fd
parameter_list|,
name|size
parameter_list|)
define|\
value|PL_piLIO->Chsize((fd), (size), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_close
parameter_list|(
name|fd
parameter_list|)
define|\
value|PL_piLIO->Close((fd), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_dup
parameter_list|(
name|fd
parameter_list|)
define|\
value|PL_piLIO->Dup((fd), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_dup2
parameter_list|(
name|fd1
parameter_list|,
name|fd2
parameter_list|)
define|\
value|PL_piLIO->Dup2((fd1), (fd2), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_flock
parameter_list|(
name|fd
parameter_list|,
name|op
parameter_list|)
define|\
value|PL_piLIO->Flock((fd), (op), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_fstat
parameter_list|(
name|fd
parameter_list|,
name|buf
parameter_list|)
define|\
value|PL_piLIO->FileStat((fd), (buf), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_ioctl
parameter_list|(
name|fd
parameter_list|,
name|u
parameter_list|,
name|buf
parameter_list|)
define|\
value|PL_piLIO->IOCtl((fd), (u), (buf), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_isatty
parameter_list|(
name|fd
parameter_list|)
define|\
value|PL_piLIO->Isatty((fd), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_lseek
parameter_list|(
name|fd
parameter_list|,
name|offset
parameter_list|,
name|mode
parameter_list|)
define|\
value|PL_piLIO->Lseek((fd), (offset), (mode), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_lstat
parameter_list|(
name|name
parameter_list|,
name|buf
parameter_list|)
define|\
value|PL_piLIO->Lstat((name), (buf), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_mktemp
parameter_list|(
name|file
parameter_list|)
define|\
value|PL_piLIO->Mktemp((file), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_open
parameter_list|(
name|file
parameter_list|,
name|flag
parameter_list|)
define|\
value|PL_piLIO->Open((file), (flag), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_open3
parameter_list|(
name|file
parameter_list|,
name|flag
parameter_list|,
name|perm
parameter_list|)
define|\
value|PL_piLIO->Open((file), (flag), (perm), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_read
parameter_list|(
name|fd
parameter_list|,
name|buf
parameter_list|,
name|count
parameter_list|)
define|\
value|PL_piLIO->Read((fd), (buf), (count), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_rename
parameter_list|(
name|oname
parameter_list|,
name|newname
parameter_list|)
define|\
value|PL_piLIO->Rename((oname), (newname), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_setmode
parameter_list|(
name|fd
parameter_list|,
name|mode
parameter_list|)
define|\
value|PL_piLIO->Setmode((fd), (mode), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_stat
parameter_list|(
name|name
parameter_list|,
name|buf
parameter_list|)
define|\
value|PL_piLIO->NameStat((name), (buf), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_tmpnam
parameter_list|(
name|str
parameter_list|)
define|\
value|PL_piLIO->Tmpnam((str), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_umask
parameter_list|(
name|mode
parameter_list|)
define|\
value|PL_piLIO->Umask((mode), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_unlink
parameter_list|(
name|file
parameter_list|)
define|\
value|PL_piLIO->Unlink((file), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_utime
parameter_list|(
name|file
parameter_list|,
name|time
parameter_list|)
define|\
value|PL_piLIO->Utime((file), (time), ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlLIO_write
parameter_list|(
name|fd
parameter_list|,
name|buf
parameter_list|,
name|count
parameter_list|)
define|\
value|PL_piLIO->Write((fd), (buf), (count), ErrorNo())
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_define
define|#
directive|define
name|PerlLIO_access
parameter_list|(
name|file
parameter_list|,
name|mode
parameter_list|)
value|access((file), (mode))
end_define

begin_define
define|#
directive|define
name|PerlLIO_chmod
parameter_list|(
name|file
parameter_list|,
name|mode
parameter_list|)
value|chmod((file), (mode))
end_define

begin_define
define|#
directive|define
name|PerlLIO_chown
parameter_list|(
name|file
parameter_list|,
name|owner
parameter_list|,
name|grp
parameter_list|)
value|chown((file), (owner), (grp))
end_define

begin_define
define|#
directive|define
name|PerlLIO_chsize
parameter_list|(
name|fd
parameter_list|,
name|size
parameter_list|)
value|chsize((fd), (size))
end_define

begin_define
define|#
directive|define
name|PerlLIO_close
parameter_list|(
name|fd
parameter_list|)
value|close((fd))
end_define

begin_define
define|#
directive|define
name|PerlLIO_dup
parameter_list|(
name|fd
parameter_list|)
value|dup((fd))
end_define

begin_define
define|#
directive|define
name|PerlLIO_dup2
parameter_list|(
name|fd1
parameter_list|,
name|fd2
parameter_list|)
value|dup2((fd1), (fd2))
end_define

begin_define
define|#
directive|define
name|PerlLIO_flock
parameter_list|(
name|fd
parameter_list|,
name|op
parameter_list|)
value|FLOCK((fd), (op))
end_define

begin_define
define|#
directive|define
name|PerlLIO_fstat
parameter_list|(
name|fd
parameter_list|,
name|buf
parameter_list|)
value|Fstat((fd), (buf))
end_define

begin_define
define|#
directive|define
name|PerlLIO_ioctl
parameter_list|(
name|fd
parameter_list|,
name|u
parameter_list|,
name|buf
parameter_list|)
value|ioctl((fd), (u), (buf))
end_define

begin_define
define|#
directive|define
name|PerlLIO_isatty
parameter_list|(
name|fd
parameter_list|)
value|isatty((fd))
end_define

begin_define
define|#
directive|define
name|PerlLIO_lseek
parameter_list|(
name|fd
parameter_list|,
name|offset
parameter_list|,
name|mode
parameter_list|)
value|lseek((fd), (offset), (mode))
end_define

begin_define
define|#
directive|define
name|PerlLIO_lstat
parameter_list|(
name|name
parameter_list|,
name|buf
parameter_list|)
value|lstat((name), (buf))
end_define

begin_define
define|#
directive|define
name|PerlLIO_mktemp
parameter_list|(
name|file
parameter_list|)
value|mktemp((file))
end_define

begin_define
define|#
directive|define
name|PerlLIO_mkstemp
parameter_list|(
name|file
parameter_list|)
value|mkstemp((file))
end_define

begin_define
define|#
directive|define
name|PerlLIO_open
parameter_list|(
name|file
parameter_list|,
name|flag
parameter_list|)
value|open((file), (flag))
end_define

begin_define
define|#
directive|define
name|PerlLIO_open3
parameter_list|(
name|file
parameter_list|,
name|flag
parameter_list|,
name|perm
parameter_list|)
value|open((file), (flag), (perm))
end_define

begin_define
define|#
directive|define
name|PerlLIO_read
parameter_list|(
name|fd
parameter_list|,
name|buf
parameter_list|,
name|count
parameter_list|)
value|read((fd), (buf), (count))
end_define

begin_define
define|#
directive|define
name|PerlLIO_rename
parameter_list|(
name|old
parameter_list|,
name|new
parameter_list|)
value|rename((old), (new))
end_define

begin_define
define|#
directive|define
name|PerlLIO_setmode
parameter_list|(
name|fd
parameter_list|,
name|mode
parameter_list|)
value|setmode((fd), (mode))
end_define

begin_define
define|#
directive|define
name|PerlLIO_stat
parameter_list|(
name|name
parameter_list|,
name|buf
parameter_list|)
value|Stat((name), (buf))
end_define

begin_define
define|#
directive|define
name|PerlLIO_tmpnam
parameter_list|(
name|str
parameter_list|)
value|tmpnam((str))
end_define

begin_define
define|#
directive|define
name|PerlLIO_umask
parameter_list|(
name|mode
parameter_list|)
value|umask((mode))
end_define

begin_define
define|#
directive|define
name|PerlLIO_unlink
parameter_list|(
name|file
parameter_list|)
value|unlink((file))
end_define

begin_define
define|#
directive|define
name|PerlLIO_utime
parameter_list|(
name|file
parameter_list|,
name|time
parameter_list|)
value|utime((file), (time))
end_define

begin_define
define|#
directive|define
name|PerlLIO_write
parameter_list|(
name|fd
parameter_list|,
name|buf
parameter_list|,
name|count
parameter_list|)
value|write((fd), (buf), (count))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_comment
comment|/*     Interface for perl memory allocation */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_decl_stmt
name|class
name|IPerlMem
block|{
name|public
label|:
name|virtual
name|void
modifier|*
name|Malloc
parameter_list|(
name|size_t
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
modifier|*
name|Realloc
parameter_list|(
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Free
parameter_list|(
name|void
modifier|*
parameter_list|)
init|=
literal|0
function_decl|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_define
define|#
directive|define
name|PerlMem_malloc
parameter_list|(
name|size
parameter_list|)
value|PL_piMem->Malloc((size))
end_define

begin_define
define|#
directive|define
name|PerlMem_realloc
parameter_list|(
name|buf
parameter_list|,
name|size
parameter_list|)
value|PL_piMem->Realloc((buf), (size))
end_define

begin_define
define|#
directive|define
name|PerlMem_free
parameter_list|(
name|buf
parameter_list|)
value|PL_piMem->Free((buf))
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_define
define|#
directive|define
name|PerlMem_malloc
parameter_list|(
name|size
parameter_list|)
value|malloc((size))
end_define

begin_define
define|#
directive|define
name|PerlMem_realloc
parameter_list|(
name|buf
parameter_list|,
name|size
parameter_list|)
value|realloc((buf), (size))
end_define

begin_define
define|#
directive|define
name|PerlMem_free
parameter_list|(
name|buf
parameter_list|)
value|free((buf))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_comment
comment|/*     Interface for perl process functions */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_ifndef
ifndef|#
directive|ifndef
name|Sighandler_t
end_ifndef

begin_typedef
typedef|typedef
name|Signal_t
argument_list|(
argument|*Sighandler_t
argument_list|)
name|_
argument_list|(
operator|(
name|int
operator|)
argument_list|)
expr_stmt|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|jmp_buf
end_ifndef

begin_include
include|#
directive|include
file|<setjmp.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|class
name|IPerlProc
block|{
name|public
label|:
name|virtual
name|void
name|Abort
parameter_list|(
name|void
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|char
modifier|*
name|Crypt
parameter_list|(
specifier|const
name|char
modifier|*
name|clear
parameter_list|,
specifier|const
name|char
modifier|*
name|salt
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Exit
parameter_list|(
name|int
name|status
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|_Exit
parameter_list|(
name|int
name|status
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Execl
parameter_list|(
specifier|const
name|char
modifier|*
name|cmdname
parameter_list|,
specifier|const
name|char
modifier|*
name|arg0
parameter_list|,
specifier|const
name|char
modifier|*
name|arg1
parameter_list|,
specifier|const
name|char
modifier|*
name|arg2
parameter_list|,
specifier|const
name|char
modifier|*
name|arg3
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Execv
parameter_list|(
specifier|const
name|char
modifier|*
name|cmdname
parameter_list|,
specifier|const
name|char
modifier|*
specifier|const
modifier|*
name|argv
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Execvp
parameter_list|(
specifier|const
name|char
modifier|*
name|cmdname
parameter_list|,
specifier|const
name|char
modifier|*
specifier|const
modifier|*
name|argv
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|uid_t
name|Getuid
parameter_list|(
name|void
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|uid_t
name|Geteuid
parameter_list|(
name|void
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|gid_t
name|Getgid
parameter_list|(
name|void
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|gid_t
name|Getegid
parameter_list|(
name|void
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|char
modifier|*
name|Getlogin
parameter_list|(
name|void
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Kill
parameter_list|(
name|int
name|pid
parameter_list|,
name|int
name|sig
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Killpg
parameter_list|(
name|int
name|pid
parameter_list|,
name|int
name|sig
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|PauseProc
parameter_list|(
name|void
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|PerlIO
modifier|*
name|Popen
parameter_list|(
specifier|const
name|char
modifier|*
name|command
parameter_list|,
specifier|const
name|char
modifier|*
name|mode
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Pclose
parameter_list|(
name|PerlIO
modifier|*
name|stream
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Pipe
parameter_list|(
name|int
modifier|*
name|phandles
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Setuid
parameter_list|(
name|uid_t
name|uid
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Setgid
parameter_list|(
name|gid_t
name|gid
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Sleep
parameter_list|(
name|unsigned
name|int
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Times
parameter_list|(
name|struct
name|tms
modifier|*
name|timebuf
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Wait
parameter_list|(
name|int
modifier|*
name|status
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Waitpid
parameter_list|(
name|int
name|pid
parameter_list|,
name|int
modifier|*
name|status
parameter_list|,
name|int
name|flags
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|Sighandler_t
name|Signal
parameter_list|(
name|int
name|sig
parameter_list|,
name|Sighandler_t
name|subcode
parameter_list|)
init|=
literal|0
function_decl|;
ifdef|#
directive|ifdef
name|WIN32
name|virtual
name|void
name|GetSysMsg
parameter_list|(
name|char
modifier|*
modifier|&
name|msg
parameter_list|,
name|DWORD
modifier|&
name|dwLen
parameter_list|,
name|DWORD
name|dwErr
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|FreeBuf
parameter_list|(
name|char
modifier|*
name|msg
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|BOOL
name|DoCmd
parameter_list|(
name|char
modifier|*
name|cmd
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Spawn
parameter_list|(
name|char
modifier|*
name|cmds
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Spawnvp
parameter_list|(
name|int
name|mode
parameter_list|,
specifier|const
name|char
modifier|*
name|cmdname
parameter_list|,
specifier|const
name|char
modifier|*
specifier|const
modifier|*
name|argv
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|ASpawn
parameter_list|(
name|void
modifier|*
name|vreally
parameter_list|,
name|void
modifier|*
modifier|*
name|vmark
parameter_list|,
name|void
modifier|*
modifier|*
name|vsp
parameter_list|)
init|=
literal|0
function_decl|;
endif|#
directive|endif
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_define
define|#
directive|define
name|PerlProc_abort
parameter_list|()
value|PL_piProc->Abort()
end_define

begin_define
define|#
directive|define
name|PerlProc_crypt
parameter_list|(
name|c
parameter_list|,
name|s
parameter_list|)
value|PL_piProc->Crypt((c), (s))
end_define

begin_define
define|#
directive|define
name|PerlProc_exit
parameter_list|(
name|s
parameter_list|)
value|PL_piProc->Exit((s))
end_define

begin_define
define|#
directive|define
name|PerlProc__exit
parameter_list|(
name|s
parameter_list|)
value|PL_piProc->_Exit((s))
end_define

begin_define
define|#
directive|define
name|PerlProc_execl
parameter_list|(
name|c
parameter_list|,
name|w
parameter_list|,
name|x
parameter_list|,
name|y
parameter_list|,
name|z
parameter_list|)
define|\
value|PL_piProc->Execl((c), (w), (x), (y), (z))
end_define

begin_define
define|#
directive|define
name|PerlProc_execv
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|PL_piProc->Execv((c), (a))
end_define

begin_define
define|#
directive|define
name|PerlProc_execvp
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|PL_piProc->Execvp((c), (a))
end_define

begin_define
define|#
directive|define
name|PerlProc_getuid
parameter_list|()
value|PL_piProc->Getuid()
end_define

begin_define
define|#
directive|define
name|PerlProc_geteuid
parameter_list|()
value|PL_piProc->Geteuid()
end_define

begin_define
define|#
directive|define
name|PerlProc_getgid
parameter_list|()
value|PL_piProc->Getgid()
end_define

begin_define
define|#
directive|define
name|PerlProc_getegid
parameter_list|()
value|PL_piProc->Getegid()
end_define

begin_define
define|#
directive|define
name|PerlProc_getlogin
parameter_list|()
value|PL_piProc->Getlogin()
end_define

begin_define
define|#
directive|define
name|PerlProc_kill
parameter_list|(
name|i
parameter_list|,
name|a
parameter_list|)
value|PL_piProc->Kill((i), (a))
end_define

begin_define
define|#
directive|define
name|PerlProc_killpg
parameter_list|(
name|i
parameter_list|,
name|a
parameter_list|)
value|PL_piProc->Killpg((i), (a))
end_define

begin_define
define|#
directive|define
name|PerlProc_pause
parameter_list|()
value|PL_piProc->PauseProc()
end_define

begin_define
define|#
directive|define
name|PerlProc_popen
parameter_list|(
name|c
parameter_list|,
name|m
parameter_list|)
value|PL_piProc->Popen((c), (m))
end_define

begin_define
define|#
directive|define
name|PerlProc_pclose
parameter_list|(
name|f
parameter_list|)
value|PL_piProc->Pclose((f))
end_define

begin_define
define|#
directive|define
name|PerlProc_pipe
parameter_list|(
name|fd
parameter_list|)
value|PL_piProc->Pipe((fd))
end_define

begin_define
define|#
directive|define
name|PerlProc_setuid
parameter_list|(
name|u
parameter_list|)
value|PL_piProc->Setuid((u))
end_define

begin_define
define|#
directive|define
name|PerlProc_setgid
parameter_list|(
name|g
parameter_list|)
value|PL_piProc->Setgid((g))
end_define

begin_define
define|#
directive|define
name|PerlProc_sleep
parameter_list|(
name|t
parameter_list|)
value|PL_piProc->Sleep((t))
end_define

begin_define
define|#
directive|define
name|PerlProc_times
parameter_list|(
name|t
parameter_list|)
value|PL_piProc->Times((t))
end_define

begin_define
define|#
directive|define
name|PerlProc_wait
parameter_list|(
name|t
parameter_list|)
value|PL_piProc->Wait((t))
end_define

begin_define
define|#
directive|define
name|PerlProc_waitpid
parameter_list|(
name|p
parameter_list|,
name|s
parameter_list|,
name|f
parameter_list|)
value|PL_piProc->Waitpid((p), (s), (f))
end_define

begin_define
define|#
directive|define
name|PerlProc_setjmp
parameter_list|(
name|b
parameter_list|,
name|n
parameter_list|)
value|Sigsetjmp((b), (n))
end_define

begin_define
define|#
directive|define
name|PerlProc_longjmp
parameter_list|(
name|b
parameter_list|,
name|n
parameter_list|)
value|Siglongjmp((b), (n))
end_define

begin_define
define|#
directive|define
name|PerlProc_signal
parameter_list|(
name|n
parameter_list|,
name|h
parameter_list|)
value|PL_piProc->Signal((n), (h))
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|WIN32
end_ifdef

begin_define
define|#
directive|define
name|PerlProc_GetSysMsg
parameter_list|(
name|s
parameter_list|,
name|l
parameter_list|,
name|e
parameter_list|)
define|\
value|PL_piProc->GetSysMsg((s), (l), (e))
end_define

begin_define
define|#
directive|define
name|PerlProc_FreeBuf
parameter_list|(
name|s
parameter_list|)
value|PL_piProc->FreeBuf((s))
end_define

begin_define
define|#
directive|define
name|PerlProc_Cmd
parameter_list|(
name|s
parameter_list|)
value|PL_piProc->DoCmd((s))
end_define

begin_define
define|#
directive|define
name|do_spawn
parameter_list|(
name|s
parameter_list|)
value|PL_piProc->Spawn((s))
end_define

begin_define
define|#
directive|define
name|do_spawnvp
parameter_list|(
name|m
parameter_list|,
name|c
parameter_list|,
name|a
parameter_list|)
value|PL_piProc->Spawnvp((m), (c), (a))
end_define

begin_define
define|#
directive|define
name|PerlProc_aspawn
parameter_list|(
name|m
parameter_list|,
name|c
parameter_list|,
name|a
parameter_list|)
value|PL_piProc->ASpawn((m), (c), (a))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_define
define|#
directive|define
name|PerlProc_abort
parameter_list|()
value|abort()
end_define

begin_define
define|#
directive|define
name|PerlProc_crypt
parameter_list|(
name|c
parameter_list|,
name|s
parameter_list|)
value|crypt((c), (s))
end_define

begin_define
define|#
directive|define
name|PerlProc_exit
parameter_list|(
name|s
parameter_list|)
value|exit((s))
end_define

begin_define
define|#
directive|define
name|PerlProc__exit
parameter_list|(
name|s
parameter_list|)
value|_exit((s))
end_define

begin_define
define|#
directive|define
name|PerlProc_execl
parameter_list|(
name|c
parameter_list|,
name|w
parameter_list|,
name|x
parameter_list|,
name|y
parameter_list|,
name|z
parameter_list|)
define|\
value|execl((c), (w), (x), (y), (z))
end_define

begin_define
define|#
directive|define
name|PerlProc_execv
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|execv((c), (a))
end_define

begin_define
define|#
directive|define
name|PerlProc_execvp
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|execvp((c), (a))
end_define

begin_define
define|#
directive|define
name|PerlProc_getuid
parameter_list|()
value|getuid()
end_define

begin_define
define|#
directive|define
name|PerlProc_geteuid
parameter_list|()
value|geteuid()
end_define

begin_define
define|#
directive|define
name|PerlProc_getgid
parameter_list|()
value|getgid()
end_define

begin_define
define|#
directive|define
name|PerlProc_getegid
parameter_list|()
value|getegid()
end_define

begin_define
define|#
directive|define
name|PerlProc_getlogin
parameter_list|()
value|getlogin()
end_define

begin_define
define|#
directive|define
name|PerlProc_kill
parameter_list|(
name|i
parameter_list|,
name|a
parameter_list|)
value|kill((i), (a))
end_define

begin_define
define|#
directive|define
name|PerlProc_killpg
parameter_list|(
name|i
parameter_list|,
name|a
parameter_list|)
value|killpg((i), (a))
end_define

begin_define
define|#
directive|define
name|PerlProc_pause
parameter_list|()
value|Pause()
end_define

begin_define
define|#
directive|define
name|PerlProc_popen
parameter_list|(
name|c
parameter_list|,
name|m
parameter_list|)
value|my_popen((c), (m))
end_define

begin_define
define|#
directive|define
name|PerlProc_pclose
parameter_list|(
name|f
parameter_list|)
value|my_pclose((f))
end_define

begin_define
define|#
directive|define
name|PerlProc_pipe
parameter_list|(
name|fd
parameter_list|)
value|pipe((fd))
end_define

begin_define
define|#
directive|define
name|PerlProc_setuid
parameter_list|(
name|u
parameter_list|)
value|setuid((u))
end_define

begin_define
define|#
directive|define
name|PerlProc_setgid
parameter_list|(
name|g
parameter_list|)
value|setgid((g))
end_define

begin_define
define|#
directive|define
name|PerlProc_sleep
parameter_list|(
name|t
parameter_list|)
value|sleep((t))
end_define

begin_define
define|#
directive|define
name|PerlProc_times
parameter_list|(
name|t
parameter_list|)
value|times((t))
end_define

begin_define
define|#
directive|define
name|PerlProc_wait
parameter_list|(
name|t
parameter_list|)
value|wait((t))
end_define

begin_define
define|#
directive|define
name|PerlProc_waitpid
parameter_list|(
name|p
parameter_list|,
name|s
parameter_list|,
name|f
parameter_list|)
value|waitpid((p), (s), (f))
end_define

begin_define
define|#
directive|define
name|PerlProc_setjmp
parameter_list|(
name|b
parameter_list|,
name|n
parameter_list|)
value|Sigsetjmp((b), (n))
end_define

begin_define
define|#
directive|define
name|PerlProc_longjmp
parameter_list|(
name|b
parameter_list|,
name|n
parameter_list|)
value|Siglongjmp((b), (n))
end_define

begin_define
define|#
directive|define
name|PerlProc_signal
parameter_list|(
name|n
parameter_list|,
name|h
parameter_list|)
value|signal((n), (h))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_comment
comment|/*     Interface for perl socket functions */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|PERL_OBJECT
end_ifdef

begin_decl_stmt
name|class
name|IPerlSock
block|{
name|public
label|:
name|virtual
name|u_long
name|Htonl
parameter_list|(
name|u_long
name|hostlong
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|u_short
name|Htons
parameter_list|(
name|u_short
name|hostshort
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|u_long
name|Ntohl
parameter_list|(
name|u_long
name|netlong
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|u_short
name|Ntohs
parameter_list|(
name|u_short
name|netshort
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|SOCKET
name|Accept
parameter_list|(
name|SOCKET
name|s
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|addr
parameter_list|,
name|int
modifier|*
name|addrlen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Bind
parameter_list|(
name|SOCKET
name|s
parameter_list|,
specifier|const
name|struct
name|sockaddr
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Connect
parameter_list|(
name|SOCKET
name|s
parameter_list|,
specifier|const
name|struct
name|sockaddr
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Endhostent
parameter_list|(
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Endnetent
parameter_list|(
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Endprotoent
parameter_list|(
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Endservent
parameter_list|(
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Gethostname
parameter_list|(
name|char
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Getpeername
parameter_list|(
name|SOCKET
name|s
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|name
parameter_list|,
name|int
modifier|*
name|namelen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|hostent
modifier|*
name|Gethostbyaddr
parameter_list|(
specifier|const
name|char
modifier|*
name|addr
parameter_list|,
name|int
name|len
parameter_list|,
name|int
name|type
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|hostent
modifier|*
name|Gethostbyname
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|hostent
modifier|*
name|Gethostent
parameter_list|(
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|netent
modifier|*
name|Getnetbyaddr
parameter_list|(
name|long
name|net
parameter_list|,
name|int
name|type
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|netent
modifier|*
name|Getnetbyname
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|netent
modifier|*
name|Getnetent
parameter_list|(
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|protoent
modifier|*
name|Getprotobyname
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|protoent
modifier|*
name|Getprotobynumber
parameter_list|(
name|int
name|number
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|protoent
modifier|*
name|Getprotoent
parameter_list|(
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|servent
modifier|*
name|Getservbyname
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
name|proto
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|servent
modifier|*
name|Getservbyport
parameter_list|(
name|int
name|port
parameter_list|,
specifier|const
name|char
modifier|*
name|proto
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|struct
name|servent
modifier|*
name|Getservent
parameter_list|(
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Getsockname
parameter_list|(
name|SOCKET
name|s
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|name
parameter_list|,
name|int
modifier|*
name|namelen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Getsockopt
parameter_list|(
name|SOCKET
name|s
parameter_list|,
name|int
name|level
parameter_list|,
name|int
name|optname
parameter_list|,
name|char
modifier|*
name|optval
parameter_list|,
name|int
modifier|*
name|optlen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|unsigned
name|long
name|InetAddr
parameter_list|(
specifier|const
name|char
modifier|*
name|cp
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|char
modifier|*
name|InetNtoa
parameter_list|(
name|struct
name|in_addr
name|in
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Listen
parameter_list|(
name|SOCKET
name|s
parameter_list|,
name|int
name|backlog
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Recv
parameter_list|(
name|SOCKET
name|s
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|int
name|len
parameter_list|,
name|int
name|flags
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Recvfrom
parameter_list|(
name|SOCKET
name|s
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|int
name|len
parameter_list|,
name|int
name|flags
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|from
parameter_list|,
name|int
modifier|*
name|fromlen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Select
parameter_list|(
name|int
name|nfds
parameter_list|,
name|char
modifier|*
name|readfds
parameter_list|,
name|char
modifier|*
name|writefds
parameter_list|,
name|char
modifier|*
name|exceptfds
parameter_list|,
specifier|const
name|struct
name|timeval
modifier|*
name|timeout
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Send
parameter_list|(
name|SOCKET
name|s
parameter_list|,
specifier|const
name|char
modifier|*
name|buf
parameter_list|,
name|int
name|len
parameter_list|,
name|int
name|flags
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Sendto
parameter_list|(
name|SOCKET
name|s
parameter_list|,
specifier|const
name|char
modifier|*
name|buf
parameter_list|,
name|int
name|len
parameter_list|,
name|int
name|flags
parameter_list|,
specifier|const
name|struct
name|sockaddr
modifier|*
name|to
parameter_list|,
name|int
name|tolen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Sethostent
parameter_list|(
name|int
name|stayopen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Setnetent
parameter_list|(
name|int
name|stayopen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Setprotoent
parameter_list|(
name|int
name|stayopen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|Setservent
parameter_list|(
name|int
name|stayopen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Setsockopt
parameter_list|(
name|SOCKET
name|s
parameter_list|,
name|int
name|level
parameter_list|,
name|int
name|optname
parameter_list|,
specifier|const
name|char
modifier|*
name|optval
parameter_list|,
name|int
name|optlen
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Shutdown
parameter_list|(
name|SOCKET
name|s
parameter_list|,
name|int
name|how
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|SOCKET
name|Socket
parameter_list|(
name|int
name|af
parameter_list|,
name|int
name|type
parameter_list|,
name|int
name|protocol
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Socketpair
parameter_list|(
name|int
name|domain
parameter_list|,
name|int
name|type
parameter_list|,
name|int
name|protocol
parameter_list|,
name|int
modifier|*
name|fds
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
ifdef|#
directive|ifdef
name|WIN32
name|virtual
name|int
name|Closesocket
parameter_list|(
name|SOCKET
name|s
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|Ioctlsocket
parameter_list|(
name|SOCKET
name|s
parameter_list|,
name|long
name|cmd
parameter_list|,
name|u_long
modifier|*
name|argp
parameter_list|,
name|int
modifier|&
name|err
parameter_list|)
init|=
literal|0
function_decl|;
endif|#
directive|endif
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_define
define|#
directive|define
name|PerlSock_htonl
parameter_list|(
name|x
parameter_list|)
value|PL_piSock->Htonl(x)
end_define

begin_define
define|#
directive|define
name|PerlSock_htons
parameter_list|(
name|x
parameter_list|)
value|PL_piSock->Htons(x)
end_define

begin_define
define|#
directive|define
name|PerlSock_ntohl
parameter_list|(
name|x
parameter_list|)
value|PL_piSock->Ntohl(x)
end_define

begin_define
define|#
directive|define
name|PerlSock_ntohs
parameter_list|(
name|x
parameter_list|)
value|PL_piSock->Ntohs(x)
end_define

begin_define
define|#
directive|define
name|PerlSock_accept
parameter_list|(
name|s
parameter_list|,
name|a
parameter_list|,
name|l
parameter_list|)
value|PL_piSock->Accept(s, a, l, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_bind
parameter_list|(
name|s
parameter_list|,
name|n
parameter_list|,
name|l
parameter_list|)
value|PL_piSock->Bind(s, n, l, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_connect
parameter_list|(
name|s
parameter_list|,
name|n
parameter_list|,
name|l
parameter_list|)
value|PL_piSock->Connect(s, n, l, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_endhostent
parameter_list|()
value|PL_piSock->Endhostent(ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_endnetent
parameter_list|()
value|PL_piSock->Endnetent(ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_endprotoent
parameter_list|()
value|PL_piSock->Endprotoent(ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_endservent
parameter_list|()
value|PL_piSock->Endservent(ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_gethostbyaddr
parameter_list|(
name|a
parameter_list|,
name|l
parameter_list|,
name|t
parameter_list|)
value|PL_piSock->Gethostbyaddr(a, l, t, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_gethostbyname
parameter_list|(
name|n
parameter_list|)
value|PL_piSock->Gethostbyname(n, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_gethostent
parameter_list|()
value|PL_piSock->Gethostent(ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_gethostname
parameter_list|(
name|n
parameter_list|,
name|l
parameter_list|)
value|PL_piSock->Gethostname(n, l, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_getnetbyaddr
parameter_list|(
name|n
parameter_list|,
name|t
parameter_list|)
value|PL_piSock->Getnetbyaddr(n, t, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_getnetbyname
parameter_list|(
name|c
parameter_list|)
value|PL_piSock->Getnetbyname(c, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_getnetent
parameter_list|()
value|PL_piSock->Getnetent(ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_getpeername
parameter_list|(
name|s
parameter_list|,
name|n
parameter_list|,
name|l
parameter_list|)
value|PL_piSock->Getpeername(s, n, l, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_getprotobyname
parameter_list|(
name|n
parameter_list|)
value|PL_piSock->Getprotobyname(n, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_getprotobynumber
parameter_list|(
name|n
parameter_list|)
value|PL_piSock->Getprotobynumber(n, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_getprotoent
parameter_list|()
value|PL_piSock->Getprotoent(ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_getservbyname
parameter_list|(
name|n
parameter_list|,
name|p
parameter_list|)
value|PL_piSock->Getservbyname(n, p, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_getservbyport
parameter_list|(
name|port
parameter_list|,
name|p
parameter_list|)
value|PL_piSock->Getservbyport(port, p, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_getservent
parameter_list|()
value|PL_piSock->Getservent(ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_getsockname
parameter_list|(
name|s
parameter_list|,
name|n
parameter_list|,
name|l
parameter_list|)
value|PL_piSock->Getsockname(s, n, l, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_getsockopt
parameter_list|(
name|s
parameter_list|,
name|l
parameter_list|,
name|n
parameter_list|,
name|v
parameter_list|,
name|i
parameter_list|)
value|PL_piSock->Getsockopt(s, l, n, v, i, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_inet_addr
parameter_list|(
name|c
parameter_list|)
value|PL_piSock->InetAddr(c, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_inet_ntoa
parameter_list|(
name|i
parameter_list|)
value|PL_piSock->InetNtoa(i, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_listen
parameter_list|(
name|s
parameter_list|,
name|b
parameter_list|)
value|PL_piSock->Listen(s, b, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_recv
parameter_list|(
name|s
parameter_list|,
name|b
parameter_list|,
name|l
parameter_list|,
name|f
parameter_list|)
value|PL_piSock->Recv(s, b, l, f, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_recvfrom
parameter_list|(
name|s
parameter_list|,
name|b
parameter_list|,
name|l
parameter_list|,
name|f
parameter_list|,
name|from
parameter_list|,
name|fromlen
parameter_list|)
define|\
value|PL_piSock->Recvfrom(s, b, l, f, from, fromlen, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_select
parameter_list|(
name|n
parameter_list|,
name|r
parameter_list|,
name|w
parameter_list|,
name|e
parameter_list|,
name|t
parameter_list|)
define|\
value|PL_piSock->Select(n, (char*)r, (char*)w, (char*)e, t, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_send
parameter_list|(
name|s
parameter_list|,
name|b
parameter_list|,
name|l
parameter_list|,
name|f
parameter_list|)
value|PL_piSock->Send(s, b, l, f, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_sendto
parameter_list|(
name|s
parameter_list|,
name|b
parameter_list|,
name|l
parameter_list|,
name|f
parameter_list|,
name|t
parameter_list|,
name|tlen
parameter_list|)
define|\
value|PL_piSock->Sendto(s, b, l, f, t, tlen, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_sethostent
parameter_list|(
name|f
parameter_list|)
value|PL_piSock->Sethostent(f, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_setnetent
parameter_list|(
name|f
parameter_list|)
value|PL_piSock->Setnetent(f, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_setprotoent
parameter_list|(
name|f
parameter_list|)
value|PL_piSock->Setprotoent(f, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_setservent
parameter_list|(
name|f
parameter_list|)
value|PL_piSock->Setservent(f, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_setsockopt
parameter_list|(
name|s
parameter_list|,
name|l
parameter_list|,
name|n
parameter_list|,
name|v
parameter_list|,
name|len
parameter_list|)
define|\
value|PL_piSock->Setsockopt(s, l, n, v, len, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_shutdown
parameter_list|(
name|s
parameter_list|,
name|h
parameter_list|)
value|PL_piSock->Shutdown(s, h, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_socket
parameter_list|(
name|a
parameter_list|,
name|t
parameter_list|,
name|p
parameter_list|)
value|PL_piSock->Socket(a, t, p, ErrorNo())
end_define

begin_define
define|#
directive|define
name|PerlSock_socketpair
parameter_list|(
name|a
parameter_list|,
name|t
parameter_list|,
name|p
parameter_list|,
name|f
parameter_list|)
value|PL_piSock->Socketpair(a, t, p, f, ErrorNo())
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_define
define|#
directive|define
name|PerlSock_htonl
parameter_list|(
name|x
parameter_list|)
value|htonl(x)
end_define

begin_define
define|#
directive|define
name|PerlSock_htons
parameter_list|(
name|x
parameter_list|)
value|htons(x)
end_define

begin_define
define|#
directive|define
name|PerlSock_ntohl
parameter_list|(
name|x
parameter_list|)
value|ntohl(x)
end_define

begin_define
define|#
directive|define
name|PerlSock_ntohs
parameter_list|(
name|x
parameter_list|)
value|ntohs(x)
end_define

begin_define
define|#
directive|define
name|PerlSock_accept
parameter_list|(
name|s
parameter_list|,
name|a
parameter_list|,
name|l
parameter_list|)
value|accept(s, a, l)
end_define

begin_define
define|#
directive|define
name|PerlSock_bind
parameter_list|(
name|s
parameter_list|,
name|n
parameter_list|,
name|l
parameter_list|)
value|bind(s, n, l)
end_define

begin_define
define|#
directive|define
name|PerlSock_connect
parameter_list|(
name|s
parameter_list|,
name|n
parameter_list|,
name|l
parameter_list|)
value|connect(s, n, l)
end_define

begin_define
define|#
directive|define
name|PerlSock_gethostbyaddr
parameter_list|(
name|a
parameter_list|,
name|l
parameter_list|,
name|t
parameter_list|)
value|gethostbyaddr(a, l, t)
end_define

begin_define
define|#
directive|define
name|PerlSock_gethostbyname
parameter_list|(
name|n
parameter_list|)
value|gethostbyname(n)
end_define

begin_define
define|#
directive|define
name|PerlSock_gethostent
value|gethostent
end_define

begin_define
define|#
directive|define
name|PerlSock_endhostent
value|endhostent
end_define

begin_define
define|#
directive|define
name|PerlSock_gethostname
parameter_list|(
name|n
parameter_list|,
name|l
parameter_list|)
value|gethostname(n, l)
end_define

begin_define
define|#
directive|define
name|PerlSock_getnetbyaddr
parameter_list|(
name|n
parameter_list|,
name|t
parameter_list|)
value|getnetbyaddr(n, t)
end_define

begin_define
define|#
directive|define
name|PerlSock_getnetbyname
parameter_list|(
name|n
parameter_list|)
value|getnetbyname(n)
end_define

begin_define
define|#
directive|define
name|PerlSock_getnetent
value|getnetent
end_define

begin_define
define|#
directive|define
name|PerlSock_endnetent
value|endnetent
end_define

begin_define
define|#
directive|define
name|PerlSock_getpeername
parameter_list|(
name|s
parameter_list|,
name|n
parameter_list|,
name|l
parameter_list|)
value|getpeername(s, n, l)
end_define

begin_define
define|#
directive|define
name|PerlSock_getprotobyname
parameter_list|(
name|n
parameter_list|)
value|getprotobyname(n)
end_define

begin_define
define|#
directive|define
name|PerlSock_getprotobynumber
parameter_list|(
name|n
parameter_list|)
value|getprotobynumber(n)
end_define

begin_define
define|#
directive|define
name|PerlSock_getprotoent
value|getprotoent
end_define

begin_define
define|#
directive|define
name|PerlSock_endprotoent
value|endprotoent
end_define

begin_define
define|#
directive|define
name|PerlSock_getservbyname
parameter_list|(
name|n
parameter_list|,
name|p
parameter_list|)
value|getservbyname(n, p)
end_define

begin_define
define|#
directive|define
name|PerlSock_getservbyport
parameter_list|(
name|port
parameter_list|,
name|p
parameter_list|)
value|getservbyport(port, p)
end_define

begin_define
define|#
directive|define
name|PerlSock_getservent
value|getservent
end_define

begin_define
define|#
directive|define
name|PerlSock_endservent
value|endservent
end_define

begin_define
define|#
directive|define
name|PerlSock_getsockname
parameter_list|(
name|s
parameter_list|,
name|n
parameter_list|,
name|l
parameter_list|)
value|getsockname(s, n, l)
end_define

begin_define
define|#
directive|define
name|PerlSock_getsockopt
parameter_list|(
name|s
parameter_list|,
name|l
parameter_list|,
name|n
parameter_list|,
name|v
parameter_list|,
name|i
parameter_list|)
value|getsockopt(s, l, n, v, i)
end_define

begin_define
define|#
directive|define
name|PerlSock_inet_addr
parameter_list|(
name|c
parameter_list|)
value|inet_addr(c)
end_define

begin_define
define|#
directive|define
name|PerlSock_inet_ntoa
parameter_list|(
name|i
parameter_list|)
value|inet_ntoa(i)
end_define

begin_define
define|#
directive|define
name|PerlSock_listen
parameter_list|(
name|s
parameter_list|,
name|b
parameter_list|)
value|listen(s, b)
end_define

begin_define
define|#
directive|define
name|PerlSock_recv
parameter_list|(
name|s
parameter_list|,
name|b
parameter_list|,
name|l
parameter_list|,
name|f
parameter_list|)
value|recv(s, b, l, f)
end_define

begin_define
define|#
directive|define
name|PerlSock_recvfrom
parameter_list|(
name|s
parameter_list|,
name|b
parameter_list|,
name|l
parameter_list|,
name|f
parameter_list|,
name|from
parameter_list|,
name|fromlen
parameter_list|)
define|\
value|recvfrom(s, b, l, f, from, fromlen)
end_define

begin_define
define|#
directive|define
name|PerlSock_select
parameter_list|(
name|n
parameter_list|,
name|r
parameter_list|,
name|w
parameter_list|,
name|e
parameter_list|,
name|t
parameter_list|)
value|select(n, r, w, e, t)
end_define

begin_define
define|#
directive|define
name|PerlSock_send
parameter_list|(
name|s
parameter_list|,
name|b
parameter_list|,
name|l
parameter_list|,
name|f
parameter_list|)
value|send(s, b, l, f)
end_define

begin_define
define|#
directive|define
name|PerlSock_sendto
parameter_list|(
name|s
parameter_list|,
name|b
parameter_list|,
name|l
parameter_list|,
name|f
parameter_list|,
name|t
parameter_list|,
name|tlen
parameter_list|)
define|\
value|sendto(s, b, l, f, t, tlen)
end_define

begin_define
define|#
directive|define
name|PerlSock_sethostent
parameter_list|(
name|f
parameter_list|)
value|sethostent(f)
end_define

begin_define
define|#
directive|define
name|PerlSock_setnetent
parameter_list|(
name|f
parameter_list|)
value|setnetent(f)
end_define

begin_define
define|#
directive|define
name|PerlSock_setprotoent
parameter_list|(
name|f
parameter_list|)
value|setprotoent(f)
end_define

begin_define
define|#
directive|define
name|PerlSock_setservent
parameter_list|(
name|f
parameter_list|)
value|setservent(f)
end_define

begin_define
define|#
directive|define
name|PerlSock_setsockopt
parameter_list|(
name|s
parameter_list|,
name|l
parameter_list|,
name|n
parameter_list|,
name|v
parameter_list|,
name|len
parameter_list|)
define|\
value|setsockopt(s, l, n, v, len)
end_define

begin_define
define|#
directive|define
name|PerlSock_shutdown
parameter_list|(
name|s
parameter_list|,
name|h
parameter_list|)
value|shutdown(s, h)
end_define

begin_define
define|#
directive|define
name|PerlSock_socket
parameter_list|(
name|a
parameter_list|,
name|t
parameter_list|,
name|p
parameter_list|)
value|socket(a, t, p)
end_define

begin_define
define|#
directive|define
name|PerlSock_socketpair
parameter_list|(
name|a
parameter_list|,
name|t
parameter_list|,
name|p
parameter_list|,
name|f
parameter_list|)
value|socketpair(a, t, p, f)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* PERL_OBJECT */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __Inc__IPerl___ */
end_comment

end_unit

