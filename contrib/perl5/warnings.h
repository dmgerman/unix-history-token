begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!    This file is built by warnings.pl    Any changes made here will be lost! */
end_comment

begin_define
define|#
directive|define
name|Off
parameter_list|(
name|x
parameter_list|)
value|((x) / 8)
end_define

begin_define
define|#
directive|define
name|Bit
parameter_list|(
name|x
parameter_list|)
value|(1<< ((x) % 8))
end_define

begin_define
define|#
directive|define
name|IsSet
parameter_list|(
name|a
parameter_list|,
name|x
parameter_list|)
value|((a)[Off(x)]& Bit(x))
end_define

begin_define
define|#
directive|define
name|G_WARN_OFF
value|0
end_define

begin_comment
comment|/* $^W == 0 */
end_comment

begin_define
define|#
directive|define
name|G_WARN_ON
value|1
end_define

begin_comment
comment|/* -w flag and $^W != 0 */
end_comment

begin_define
define|#
directive|define
name|G_WARN_ALL_ON
value|2
end_define

begin_comment
comment|/* -W flag */
end_comment

begin_define
define|#
directive|define
name|G_WARN_ALL_OFF
value|4
end_define

begin_comment
comment|/* -X flag */
end_comment

begin_define
define|#
directive|define
name|G_WARN_ONCE
value|8
end_define

begin_comment
comment|/* set if 'once' ever enabled */
end_comment

begin_define
define|#
directive|define
name|G_WARN_ALL_MASK
value|(G_WARN_ALL_ON|G_WARN_ALL_OFF)
end_define

begin_define
define|#
directive|define
name|pWARN_STD
value|Nullsv
end_define

begin_define
define|#
directive|define
name|pWARN_ALL
value|(Nullsv+1)
end_define

begin_comment
comment|/* use warnings 'all' */
end_comment

begin_define
define|#
directive|define
name|pWARN_NONE
value|(Nullsv+2)
end_define

begin_comment
comment|/* no  warnings 'all' */
end_comment

begin_define
define|#
directive|define
name|specialWARN
parameter_list|(
name|x
parameter_list|)
value|((x) == pWARN_STD || (x) == pWARN_ALL ||	\ 				 (x) == pWARN_NONE)
end_define

begin_define
define|#
directive|define
name|WARN_ALL
value|0
end_define

begin_define
define|#
directive|define
name|WARN_CHMOD
value|1
end_define

begin_define
define|#
directive|define
name|WARN_CLOSURE
value|2
end_define

begin_define
define|#
directive|define
name|WARN_EXITING
value|3
end_define

begin_define
define|#
directive|define
name|WARN_GLOB
value|4
end_define

begin_define
define|#
directive|define
name|WARN_IO
value|5
end_define

begin_define
define|#
directive|define
name|WARN_CLOSED
value|6
end_define

begin_define
define|#
directive|define
name|WARN_EXEC
value|7
end_define

begin_define
define|#
directive|define
name|WARN_NEWLINE
value|8
end_define

begin_define
define|#
directive|define
name|WARN_PIPE
value|9
end_define

begin_define
define|#
directive|define
name|WARN_UNOPENED
value|10
end_define

begin_define
define|#
directive|define
name|WARN_MISC
value|11
end_define

begin_define
define|#
directive|define
name|WARN_NUMERIC
value|12
end_define

begin_define
define|#
directive|define
name|WARN_ONCE
value|13
end_define

begin_define
define|#
directive|define
name|WARN_OVERFLOW
value|14
end_define

begin_define
define|#
directive|define
name|WARN_PACK
value|15
end_define

begin_define
define|#
directive|define
name|WARN_PORTABLE
value|16
end_define

begin_define
define|#
directive|define
name|WARN_RECURSION
value|17
end_define

begin_define
define|#
directive|define
name|WARN_REDEFINE
value|18
end_define

begin_define
define|#
directive|define
name|WARN_REGEXP
value|19
end_define

begin_define
define|#
directive|define
name|WARN_SEVERE
value|20
end_define

begin_define
define|#
directive|define
name|WARN_DEBUGGING
value|21
end_define

begin_define
define|#
directive|define
name|WARN_INPLACE
value|22
end_define

begin_define
define|#
directive|define
name|WARN_INTERNAL
value|23
end_define

begin_define
define|#
directive|define
name|WARN_MALLOC
value|24
end_define

begin_define
define|#
directive|define
name|WARN_SIGNAL
value|25
end_define

begin_define
define|#
directive|define
name|WARN_SUBSTR
value|26
end_define

begin_define
define|#
directive|define
name|WARN_SYNTAX
value|27
end_define

begin_define
define|#
directive|define
name|WARN_AMBIGUOUS
value|28
end_define

begin_define
define|#
directive|define
name|WARN_BAREWORD
value|29
end_define

begin_define
define|#
directive|define
name|WARN_DEPRECATED
value|30
end_define

begin_define
define|#
directive|define
name|WARN_DIGIT
value|31
end_define

begin_define
define|#
directive|define
name|WARN_PARENTHESIS
value|32
end_define

begin_define
define|#
directive|define
name|WARN_PRECEDENCE
value|33
end_define

begin_define
define|#
directive|define
name|WARN_PRINTF
value|34
end_define

begin_define
define|#
directive|define
name|WARN_PROTOTYPE
value|35
end_define

begin_define
define|#
directive|define
name|WARN_QW
value|36
end_define

begin_define
define|#
directive|define
name|WARN_RESERVED
value|37
end_define

begin_define
define|#
directive|define
name|WARN_SEMICOLON
value|38
end_define

begin_define
define|#
directive|define
name|WARN_TAINT
value|39
end_define

begin_define
define|#
directive|define
name|WARN_UMASK
value|40
end_define

begin_define
define|#
directive|define
name|WARN_UNINITIALIZED
value|41
end_define

begin_define
define|#
directive|define
name|WARN_UNPACK
value|42
end_define

begin_define
define|#
directive|define
name|WARN_UNTIE
value|43
end_define

begin_define
define|#
directive|define
name|WARN_UTF8
value|44
end_define

begin_define
define|#
directive|define
name|WARN_VOID
value|45
end_define

begin_define
define|#
directive|define
name|WARN_Y2K
value|46
end_define

begin_define
define|#
directive|define
name|WARNsize
value|12
end_define

begin_define
define|#
directive|define
name|WARN_ALLstring
value|"\125\125\125\125\125\125\125\125\125\125\125\125"
end_define

begin_define
define|#
directive|define
name|WARN_NONEstring
value|"\0\0\0\0\0\0\0\0\0\0\0\0"
end_define

begin_define
define|#
directive|define
name|isLEXWARN_on
value|(PL_curcop->cop_warnings != pWARN_STD)
end_define

begin_define
define|#
directive|define
name|isLEXWARN_off
value|(PL_curcop->cop_warnings == pWARN_STD)
end_define

begin_define
define|#
directive|define
name|isWARN_ONCE
value|(PL_dowarn& (G_WARN_ON|G_WARN_ONCE))
end_define

begin_define
define|#
directive|define
name|isWARN_on
parameter_list|(
name|c
parameter_list|,
name|x
parameter_list|)
value|(IsSet(SvPVX(c), 2*(x)))
end_define

begin_define
define|#
directive|define
name|isWARNf_on
parameter_list|(
name|c
parameter_list|,
name|x
parameter_list|)
value|(IsSet(SvPVX(c), 2*(x)+1))
end_define

begin_define
define|#
directive|define
name|ckDEAD
parameter_list|(
name|x
parameter_list|)
define|\
value|( ! specialWARN(PL_curcop->cop_warnings)&&			\ 	    ( isWARNf_on(PL_curcop->cop_warnings, WARN_ALL) || 		\ 	      isWARNf_on(PL_curcop->cop_warnings, x)))
end_define

begin_define
define|#
directive|define
name|ckWARN
parameter_list|(
name|x
parameter_list|)
define|\
value|( (isLEXWARN_on&& PL_curcop->cop_warnings != pWARN_NONE&&	\ 	      (PL_curcop->cop_warnings == pWARN_ALL ||			\ 	       isWARN_on(PL_curcop->cop_warnings, x) ) )		\ 	  || (isLEXWARN_off&& PL_dowarn& G_WARN_ON) )
end_define

begin_define
define|#
directive|define
name|ckWARN2
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
define|\
value|( (isLEXWARN_on&& PL_curcop->cop_warnings != pWARN_NONE&&	\ 	      (PL_curcop->cop_warnings == pWARN_ALL ||			\ 	        isWARN_on(PL_curcop->cop_warnings, x)  ||		\ 	        isWARN_on(PL_curcop->cop_warnings, y) ) ) 		\ 	    ||	(isLEXWARN_off&& PL_dowarn& G_WARN_ON) )
end_define

begin_define
define|#
directive|define
name|ckWARN_d
parameter_list|(
name|x
parameter_list|)
define|\
value|(isLEXWARN_off || PL_curcop->cop_warnings == pWARN_ALL ||	\ 	     (PL_curcop->cop_warnings != pWARN_NONE&&			\ 	      isWARN_on(PL_curcop->cop_warnings, x) ) )
end_define

begin_define
define|#
directive|define
name|ckWARN2_d
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
define|\
value|(isLEXWARN_off || PL_curcop->cop_warnings == pWARN_ALL ||	\ 	     (PL_curcop->cop_warnings != pWARN_NONE&&			\ 	        (isWARN_on(PL_curcop->cop_warnings, x)  ||		\ 	         isWARN_on(PL_curcop->cop_warnings, y) ) ) )
end_define

begin_comment
comment|/* end of file warnings.h */
end_comment

end_unit

