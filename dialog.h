begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  *  $Id: dialog.h,v 1.223 2011/03/02 10:04:09 tom Exp $  *  *  dialog.h -- common declarations for all dialog modules  *  *  Copyright 2000-2010,2011	Thomas E. Dickey  *  *  This program is free software; you can redistribute it and/or modify  *  it under the terms of the GNU Lesser General Public License, version 2.1  *  as published by the Free Software Foundation.  *  *  This program is distributed in the hope that it will be useful, but  *  WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *  Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this program; if not, write to  *	Free Software Foundation, Inc.  *	51 Franklin St., Fifth Floor  *	Boston, MA 02110, USA.  *  *  An earlier version of this program lists as authors  *	Savio Lam (lam836@cs.cuhk.hk)  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|DIALOG_H_included
end_ifndef

begin_define
define|#
directive|define
name|DIALOG_H_included
value|1
end_define

begin_comment
comment|/* *INDENT-OFF* */
end_comment

begin_include
include|#
directive|include
file|<dlg_config.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__hpux
end_ifdef

begin_define
define|#
directive|define
name|__HP_CURSES_COMPAT
end_define

begin_comment
comment|/* workaround for getattrs, etc. */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<fcntl.h>
end_include

begin_include
include|#
directive|include
file|<unistd.h>
end_include

begin_include
include|#
directive|include
file|<ctype.h>
end_include

begin_include
include|#
directive|include
file|<stdlib.h>
end_include

begin_include
include|#
directive|include
file|<stdarg.h>
end_include

begin_include
include|#
directive|include
file|<string.h>
end_include

begin_include
include|#
directive|include
file|<signal.h>
end_include

begin_comment
comment|/* fork() etc. */
end_comment

begin_include
include|#
directive|include
file|<math.h>
end_include

begin_comment
comment|/* sqrt() */
end_comment

begin_undef
undef|#
directive|undef
name|ERR
end_undef

begin_comment
comment|/* header conflict with Solaris xpg4 */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|HAVE_NCURSESW_NCURSES_H
argument_list|)
end_if

begin_include
include|#
directive|include
file|<ncursesw/ncurses.h>
end_include

begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|HAVE_NCURSES_NCURSES_H
argument_list|)
end_elif

begin_include
include|#
directive|include
file|<ncurses/ncurses.h>
end_include

begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|HAVE_NCURSES_CURSES_H
argument_list|)
end_elif

begin_include
include|#
directive|include
file|<ncurses/curses.h>
end_include

begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|HAVE_NCURSES_H
argument_list|)
end_elif

begin_include
include|#
directive|include
file|<ncurses.h>
end_include

begin_else
else|#
directive|else
end_else

begin_include
include|#
directive|include
file|<curses.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* most curses.h headers include this, some do not */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|HAVE_UNCTRL_H
argument_list|)
end_if

begin_include
include|#
directive|include
file|<unctrl.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Solaris xpg4 renames these */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|KEY_MAX
end_ifndef

begin_ifdef
ifdef|#
directive|ifdef
name|__KEY_MAX
end_ifdef

begin_define
define|#
directive|define
name|KEY_MAX
value|__KEY_MAX
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|KEY_MIN
end_ifndef

begin_ifdef
ifdef|#
directive|ifdef
name|__KEY_MIN
end_ifdef

begin_define
define|#
directive|define
name|KEY_MIN
value|__KEY_MIN
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* possible conflicts with<term.h> which may be included in<curses.h> */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|color_names
end_ifdef

begin_undef
undef|#
directive|undef
name|color_names
end_undef

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|buttons
end_ifdef

begin_undef
undef|#
directive|undef
name|buttons
end_undef

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|ENABLE_NLS
end_ifdef

begin_include
include|#
directive|include
file|<libintl.h>
end_include

begin_include
include|#
directive|include
file|<langinfo.h>
end_include

begin_define
define|#
directive|define
name|_
parameter_list|(
name|s
parameter_list|)
value|dgettext(PACKAGE, s)
end_define

begin_else
else|#
directive|else
end_else

begin_undef
undef|#
directive|undef
name|_
end_undef

begin_define
define|#
directive|define
name|_
parameter_list|(
name|s
parameter_list|)
value|s
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|GCC_NORETURN
end_ifndef

begin_define
define|#
directive|define
name|GCC_NORETURN
end_define

begin_comment
comment|/*nothing*/
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|GCC_UNUSED
end_ifndef

begin_define
define|#
directive|define
name|GCC_UNUSED
end_define

begin_comment
comment|/*nothing*/
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|HAVE_WGET_WCH
end_ifndef

begin_undef
undef|#
directive|undef
name|USE_WIDE_CURSES
end_undef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * FIXME: a configure check would be useful  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__hpux
end_ifdef

begin_undef
undef|#
directive|undef
name|ACS_UARROW
end_undef

begin_undef
undef|#
directive|undef
name|ACS_DARROW
end_undef

begin_undef
undef|#
directive|undef
name|ACS_BLOCK
end_undef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * Change these if you want  */
end_comment

begin_define
define|#
directive|define
name|USE_SHADOW
value|TRUE
end_define

begin_define
define|#
directive|define
name|USE_COLORS
value|TRUE
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|HAVE_COLOR
end_ifdef

begin_define
define|#
directive|define
name|SCOLS
value|(COLS - (dialog_state.use_shadow ? 2 : 0))
end_define

begin_define
define|#
directive|define
name|SLINES
value|(LINES - (dialog_state.use_shadow ? 1 : 0))
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|SCOLS
value|COLS
end_define

begin_define
define|#
directive|define
name|SLINES
value|LINES
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|DLG_EXIT_ESC
value|255
end_define

begin_define
define|#
directive|define
name|DLG_EXIT_UNKNOWN
value|-2
end_define

begin_comment
comment|/* never return this (internal use) */
end_comment

begin_define
define|#
directive|define
name|DLG_EXIT_ERROR
value|-1
end_define

begin_comment
comment|/* the shell sees this as 255 */
end_comment

begin_define
define|#
directive|define
name|DLG_EXIT_OK
value|0
end_define

begin_define
define|#
directive|define
name|DLG_EXIT_CANCEL
value|1
end_define

begin_define
define|#
directive|define
name|DLG_EXIT_HELP
value|2
end_define

begin_define
define|#
directive|define
name|DLG_EXIT_EXTRA
value|3
end_define

begin_define
define|#
directive|define
name|DLG_EXIT_ITEM_HELP
value|4
end_define

begin_comment
comment|/* actually DLG_EXIT_HELP */
end_comment

begin_define
define|#
directive|define
name|DLG_CTRL
parameter_list|(
name|n
parameter_list|)
value|((n)& 0x1f)
end_define

begin_comment
comment|/* CTRL is preferred, but conflicts */
end_comment

begin_define
define|#
directive|define
name|CHR_BACKSPACE
value|DLG_CTRL('H')
end_define

begin_define
define|#
directive|define
name|CHR_REPAINT
value|DLG_CTRL('L')
end_define

begin_define
define|#
directive|define
name|CHR_KILL
value|DLG_CTRL('U')
end_define

begin_define
define|#
directive|define
name|CHR_LITERAL
value|DLG_CTRL('V')
end_define

begin_define
define|#
directive|define
name|CHR_DELETE
value|127
end_define

begin_define
define|#
directive|define
name|CHR_NEXT
value|DLG_CTRL('N')
end_define

begin_define
define|#
directive|define
name|CHR_PREVIOUS
value|DLG_CTRL('P')
end_define

begin_define
define|#
directive|define
name|CHR_TRACE
value|DLG_CTRL('T')
end_define

begin_define
define|#
directive|define
name|ESC
value|27
end_define

begin_define
define|#
directive|define
name|TAB
value|DLG_CTRL('I')
end_define

begin_define
define|#
directive|define
name|MARGIN
value|1
end_define

begin_define
define|#
directive|define
name|GUTTER
value|2
end_define

begin_define
define|#
directive|define
name|SHADOW_ROWS
value|1
end_define

begin_define
define|#
directive|define
name|SHADOW_COLS
value|2
end_define

begin_define
define|#
directive|define
name|ARROWS_COL
value|5
end_define

begin_define
define|#
directive|define
name|MAX_LEN
value|2048
end_define

begin_define
define|#
directive|define
name|BUF_SIZE
value|(10L*1024)
end_define

begin_undef
undef|#
directive|undef
name|MIN
end_undef

begin_define
define|#
directive|define
name|MIN
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|((x)< (y) ? (x) : (y))
end_define

begin_undef
undef|#
directive|undef
name|MAX
end_undef

begin_define
define|#
directive|define
name|MAX
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|((x)> (y) ? (x) : (y))
end_define

begin_define
define|#
directive|define
name|DEFAULT_SEPARATE_STR
value|"\t"
end_define

begin_define
define|#
directive|define
name|DEFAULT_ASPECT_RATIO
value|9
end_define

begin_comment
comment|/* how many spaces is a tab long (default)? */
end_comment

begin_define
define|#
directive|define
name|TAB_LEN
value|8
end_define

begin_define
define|#
directive|define
name|WTIMEOUT_VAL
value|10
end_define

begin_comment
comment|/* minimum amount of time needed for curses */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|A_CHARTEXT
end_ifndef

begin_define
define|#
directive|define
name|A_CHARTEXT
value|0xff
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|CharOf
parameter_list|(
name|ch
parameter_list|)
value|((ch)& 0xff)
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|ACS_ULCORNER
end_ifndef

begin_define
define|#
directive|define
name|ACS_ULCORNER
value|'+'
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|ACS_LLCORNER
end_ifndef

begin_define
define|#
directive|define
name|ACS_LLCORNER
value|'+'
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|ACS_URCORNER
end_ifndef

begin_define
define|#
directive|define
name|ACS_URCORNER
value|'+'
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|ACS_LRCORNER
end_ifndef

begin_define
define|#
directive|define
name|ACS_LRCORNER
value|'+'
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|ACS_HLINE
end_ifndef

begin_define
define|#
directive|define
name|ACS_HLINE
value|'-'
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|ACS_VLINE
end_ifndef

begin_define
define|#
directive|define
name|ACS_VLINE
value|'|'
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|ACS_LTEE
end_ifndef

begin_define
define|#
directive|define
name|ACS_LTEE
value|'+'
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|ACS_RTEE
end_ifndef

begin_define
define|#
directive|define
name|ACS_RTEE
value|'+'
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|ACS_UARROW
end_ifndef

begin_define
define|#
directive|define
name|ACS_UARROW
value|'^'
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|ACS_DARROW
end_ifndef

begin_define
define|#
directive|define
name|ACS_DARROW
value|'v'
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|ACS_BLOCK
end_ifndef

begin_define
define|#
directive|define
name|ACS_BLOCK
value|'#'
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* these definitions may work for antique versions of curses */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HAVE_GETBEGYX
end_ifndef

begin_undef
undef|#
directive|undef
name|getbegyx
end_undef

begin_define
define|#
directive|define
name|getbegyx
parameter_list|(
name|win
parameter_list|,
name|y
parameter_list|,
name|x
parameter_list|)
value|(y = (win)?(win)->_begy:ERR, x = (win)?(win)->_begx:ERR)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|HAVE_GETMAXYX
end_ifndef

begin_undef
undef|#
directive|undef
name|getmaxyx
end_undef

begin_define
define|#
directive|define
name|getmaxyx
parameter_list|(
name|win
parameter_list|,
name|y
parameter_list|,
name|x
parameter_list|)
value|(y = (win)?(win)->_maxy:ERR, x = (win)?(win)->_maxx:ERR)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|HAVE_GETPARYX
end_ifndef

begin_undef
undef|#
directive|undef
name|getparyx
end_undef

begin_define
define|#
directive|define
name|getparyx
parameter_list|(
name|win
parameter_list|,
name|y
parameter_list|,
name|x
parameter_list|)
value|(y = (win)?(win)->_pary:ERR, x = (win)?(win)->_parx:ERR)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* these definitions may be needed for bleeding-edge curses implementations */
if|#
directive|if
operator|!
operator|(
name|defined
argument_list|(
name|HAVE_GETBEGX
argument_list|)
operator|&&
name|defined
argument_list|(
name|HAVE_GETBEGY
argument_list|)
operator|)
undef|#
directive|undef
name|getbegx
undef|#
directive|undef
name|getbegy
define|#
directive|define
name|getbegx
parameter_list|(
name|win
parameter_list|)
value|dlg_getbegx(win)
define|#
directive|define
name|getbegy
parameter_list|(
name|win
parameter_list|)
value|dlg_getbegy(win)
specifier|extern
name|int
name|dlg_getbegx
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_getbegy
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
endif|#
directive|endif
if|#
directive|if
operator|!
operator|(
name|defined
argument_list|(
name|HAVE_GETCURX
argument_list|)
operator|&&
name|defined
argument_list|(
name|HAVE_GETCURY
argument_list|)
operator|)
undef|#
directive|undef
name|getcurx
undef|#
directive|undef
name|getcury
define|#
directive|define
name|getcurx
parameter_list|(
name|win
parameter_list|)
value|dlg_getcurx(win)
define|#
directive|define
name|getcury
parameter_list|(
name|win
parameter_list|)
value|dlg_getcury(win)
specifier|extern
name|int
name|dlg_getcurx
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_getcury
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
endif|#
directive|endif
if|#
directive|if
operator|!
operator|(
name|defined
argument_list|(
name|HAVE_GETMAXX
argument_list|)
operator|&&
name|defined
argument_list|(
name|HAVE_GETMAXY
argument_list|)
operator|)
undef|#
directive|undef
name|getmaxx
undef|#
directive|undef
name|getmaxy
define|#
directive|define
name|getmaxx
parameter_list|(
name|win
parameter_list|)
value|dlg_getmaxx(win)
define|#
directive|define
name|getmaxy
parameter_list|(
name|win
parameter_list|)
value|dlg_getmaxy(win)
specifier|extern
name|int
name|dlg_getmaxx
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_getmaxy
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
endif|#
directive|endif
if|#
directive|if
operator|!
operator|(
name|defined
argument_list|(
name|HAVE_GETPARX
argument_list|)
operator|&&
name|defined
argument_list|(
name|HAVE_GETPARY
argument_list|)
operator|)
undef|#
directive|undef
name|getparx
undef|#
directive|undef
name|getpary
define|#
directive|define
name|getparx
parameter_list|(
name|win
parameter_list|)
value|dlg_getparx(win)
define|#
directive|define
name|getpary
parameter_list|(
name|win
parameter_list|)
value|dlg_getpary(win)
specifier|extern
name|int
name|dlg_getparx
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_getpary
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/*  * This is a list of "old" names, which should be helpful in updating  * applications that use libdialog.  Starting with 2003/11/26, all exported  * symbols from libdialog have "dlg_" prefix, or "dialog_" prefix or "_dialog"  * suffix (or suffix "_dialog", e.g., init_dialog).  */
ifdef|#
directive|ifdef
name|__DIALOG_OLD_NAMES__
define|#
directive|define
name|color_table
value|dlg_color_table
define|#
directive|define
name|attr_clear
parameter_list|(
name|win
parameter_list|,
name|h
parameter_list|,
name|w
parameter_list|,
name|a
parameter_list|)
value|dlg_attr_clear(win,h,w,a)
define|#
directive|define
name|auto_size
parameter_list|(
name|t
parameter_list|,
name|s
parameter_list|,
name|h
parameter_list|,
name|w
parameter_list|,
name|xl
parameter_list|,
name|mc
parameter_list|)
value|dlg_auto_size(t,s,h,w,xl,mc)
define|#
directive|define
name|auto_sizefile
parameter_list|(
name|t
parameter_list|,
name|f
parameter_list|,
name|h
parameter_list|,
name|w
parameter_list|,
name|xl
parameter_list|,
name|mc
parameter_list|)
value|dlg_auto_sizefile(t,f,h,w,xl,mc)
define|#
directive|define
name|beeping
parameter_list|()
value|dlg_beeping()
define|#
directive|define
name|box_x_ordinate
parameter_list|(
name|w
parameter_list|)
value|dlg_box_x_ordinate(w)
define|#
directive|define
name|box_y_ordinate
parameter_list|(
name|h
parameter_list|)
value|dlg_box_y_ordinate(h)
define|#
directive|define
name|calc_listh
parameter_list|(
name|h
parameter_list|,
name|lh
parameter_list|,
name|in
parameter_list|)
value|dlg_calc_listh(h,lh,in)
define|#
directive|define
name|calc_listw
parameter_list|(
name|in
parameter_list|,
name|items
parameter_list|,
name|group
parameter_list|)
value|dlg_calc_listw(in,items,group)
define|#
directive|define
name|color_setup
parameter_list|()
value|dlg_color_setup()
define|#
directive|define
name|create_rc
parameter_list|(
name|f
parameter_list|)
value|dlg_create_rc(f)
define|#
directive|define
name|ctl_size
parameter_list|(
name|h
parameter_list|,
name|w
parameter_list|)
value|dlg_ctl_size(h,w)
define|#
directive|define
name|del_window
parameter_list|(
name|win
parameter_list|)
value|dlg_del_window(win)
define|#
directive|define
name|dialog_clear
parameter_list|()
value|dlg_clear()
define|#
directive|define
name|draw_bottom_box
parameter_list|(
name|win
parameter_list|)
value|dlg_draw_bottom_box(win)
define|#
directive|define
name|draw_box
parameter_list|(
name|win
parameter_list|,
name|y
parameter_list|,
name|x
parameter_list|,
name|h
parameter_list|,
name|w
parameter_list|,
name|xc
parameter_list|,
name|bc
parameter_list|)
value|dlg_draw_box(win,y,x,h,w,xc,bc)
define|#
directive|define
name|draw_shadow
parameter_list|(
name|win
parameter_list|,
name|h
parameter_list|,
name|w
parameter_list|,
name|y
parameter_list|,
name|x
parameter_list|)
value|dlg_draw_shadow(win,h,w,y,x)
define|#
directive|define
name|draw_title
parameter_list|(
name|win
parameter_list|,
name|t
parameter_list|)
value|dlg_draw_title(win,t)
define|#
directive|define
name|exiterr
value|dlg_exiterr
define|#
directive|define
name|killall_bg
parameter_list|(
name|n
parameter_list|)
value|dlg_killall_bg(n)
define|#
directive|define
name|mouse_bigregion
parameter_list|(
name|y
parameter_list|,
name|x
parameter_list|)
value|dlg_mouse_bigregion(y,x)
define|#
directive|define
name|mouse_free_regions
parameter_list|()
value|dlg_mouse_free_regions()
define|#
directive|define
name|mouse_mkbigregion
parameter_list|(
name|y
parameter_list|,
name|x
parameter_list|,
name|h
parameter_list|,
name|w
parameter_list|,
name|n
parameter_list|,
name|ix
parameter_list|,
name|iy
parameter_list|,
name|m
parameter_list|)
value|dlg_mouse_mkbigregion(y,x,h,w,n,ix,iy,m)
define|#
directive|define
name|mouse_mkregion
parameter_list|(
name|y
parameter_list|,
name|x
parameter_list|,
name|h
parameter_list|,
name|w
parameter_list|,
name|n
parameter_list|)
value|dlg_mouse_mkregion(y,x,h,w,n)
define|#
directive|define
name|mouse_region
parameter_list|(
name|y
parameter_list|,
name|x
parameter_list|)
value|dlg_mouse_region(y,x)
define|#
directive|define
name|mouse_setbase
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|dlg_mouse_setbase(x,y)
define|#
directive|define
name|mouse_wgetch
parameter_list|(
name|w
parameter_list|,
name|c
parameter_list|)
value|dlg_mouse_wgetch(w,c)
define|#
directive|define
name|new_window
parameter_list|(
name|h
parameter_list|,
name|w
parameter_list|,
name|y
parameter_list|,
name|x
parameter_list|)
value|dlg_new_window(h,w,y,x)
define|#
directive|define
name|parse_rc
parameter_list|()
value|dlg_parse_rc()
define|#
directive|define
name|print_autowrap
parameter_list|(
name|win
parameter_list|,
name|s
parameter_list|,
name|h
parameter_list|,
name|w
parameter_list|)
value|dlg_print_autowrap(win,s,h,w)
define|#
directive|define
name|print_size
parameter_list|(
name|h
parameter_list|,
name|w
parameter_list|)
value|dlg_print_size(h,w)
define|#
directive|define
name|put_backtitle
parameter_list|()
value|dlg_put_backtitle()
define|#
directive|define
name|strclone
parameter_list|(
name|cprompt
parameter_list|)
value|dlg_strclone(cprompt)
define|#
directive|define
name|sub_window
parameter_list|(
name|win
parameter_list|,
name|h
parameter_list|,
name|w
parameter_list|,
name|y
parameter_list|,
name|x
parameter_list|)
value|dlg_sub_window(win,h,w,y,x)
define|#
directive|define
name|tab_correct_str
parameter_list|(
name|s
parameter_list|)
value|dlg_tab_correct_str(s)
endif|#
directive|endif
comment|/*  * Attribute names  */
define|#
directive|define
name|DIALOG_ATR
parameter_list|(
name|n
parameter_list|)
value|dlg_color_table[n].atr
define|#
directive|define
name|screen_attr
value|DIALOG_ATR(0)
define|#
directive|define
name|shadow_attr
value|DIALOG_ATR(1)
define|#
directive|define
name|dialog_attr
value|DIALOG_ATR(2)
define|#
directive|define
name|title_attr
value|DIALOG_ATR(3)
define|#
directive|define
name|border_attr
value|DIALOG_ATR(4)
define|#
directive|define
name|button_active_attr
value|DIALOG_ATR(5)
define|#
directive|define
name|button_inactive_attr
value|DIALOG_ATR(6)
define|#
directive|define
name|button_key_active_attr
value|DIALOG_ATR(7)
define|#
directive|define
name|button_key_inactive_attr
value|DIALOG_ATR(8)
define|#
directive|define
name|button_label_active_attr
value|DIALOG_ATR(9)
define|#
directive|define
name|button_label_inactive_attr
value|DIALOG_ATR(10)
define|#
directive|define
name|inputbox_attr
value|DIALOG_ATR(11)
define|#
directive|define
name|inputbox_border_attr
value|DIALOG_ATR(12)
define|#
directive|define
name|searchbox_attr
value|DIALOG_ATR(13)
define|#
directive|define
name|searchbox_title_attr
value|DIALOG_ATR(14)
define|#
directive|define
name|searchbox_border_attr
value|DIALOG_ATR(15)
define|#
directive|define
name|position_indicator_attr
value|DIALOG_ATR(16)
define|#
directive|define
name|menubox_attr
value|DIALOG_ATR(17)
define|#
directive|define
name|menubox_border_attr
value|DIALOG_ATR(18)
define|#
directive|define
name|item_attr
value|DIALOG_ATR(19)
define|#
directive|define
name|item_selected_attr
value|DIALOG_ATR(20)
define|#
directive|define
name|tag_attr
value|DIALOG_ATR(21)
define|#
directive|define
name|tag_selected_attr
value|DIALOG_ATR(22)
define|#
directive|define
name|tag_key_attr
value|DIALOG_ATR(23)
define|#
directive|define
name|tag_key_selected_attr
value|DIALOG_ATR(24)
define|#
directive|define
name|check_attr
value|DIALOG_ATR(25)
define|#
directive|define
name|check_selected_attr
value|DIALOG_ATR(26)
define|#
directive|define
name|uarrow_attr
value|DIALOG_ATR(27)
define|#
directive|define
name|darrow_attr
value|DIALOG_ATR(28)
define|#
directive|define
name|itemhelp_attr
value|DIALOG_ATR(29)
define|#
directive|define
name|form_active_text_attr
value|DIALOG_ATR(30)
define|#
directive|define
name|form_text_attr
value|DIALOG_ATR(31)
define|#
directive|define
name|form_item_readonly_attr
value|DIALOG_ATR(32)
define|#
directive|define
name|gauge_attr
value|DIALOG_ATR(33)
define|#
directive|define
name|DLGK_max
value|(KEY_MAX + 256)
comment|/*  * Callbacks are used to implement the "background" tailbox.  */
struct_decl|struct
name|_dlg_callback
struct_decl|;
typedef|typedef
name|void
function_decl|(
modifier|*
name|DIALOG_FREEBACK
function_decl|)
parameter_list|(
name|struct
name|_dlg_callback
modifier|*
comment|/* p */
parameter_list|)
function_decl|;
typedef|typedef
struct|struct
name|_dlg_callback
block|{
name|struct
name|_dlg_callback
modifier|*
name|next
decl_stmt|;
name|FILE
modifier|*
name|input
decl_stmt|;
name|WINDOW
modifier|*
name|win
decl_stmt|;
name|bool
name|keep_bg
decl_stmt|;
comment|/* keep in background, on exit */
name|bool
name|bg_task
decl_stmt|;
comment|/* true if this is background task */
name|bool
function_decl|(
modifier|*
name|handle_getc
function_decl|)
parameter_list|(
name|struct
name|_dlg_callback
modifier|*
name|p
parameter_list|,
name|int
name|ch
parameter_list|,
name|int
name|fkey
parameter_list|,
name|int
modifier|*
name|result
parameter_list|)
function_decl|;
name|bool
name|keep_win
decl_stmt|;
comment|/* true to not erase window on exit */
comment|/* data for dlg_add_callback_ref */
name|struct
name|_dlg_callback
modifier|*
modifier|*
name|caller
decl_stmt|;
name|DIALOG_FREEBACK
name|freeback
decl_stmt|;
comment|/* 1.1-20110107 */
name|bool
function_decl|(
modifier|*
name|handle_input
function_decl|)
parameter_list|(
name|struct
name|_dlg_callback
modifier|*
name|p
parameter_list|)
function_decl|;
name|bool
name|input_ready
decl_stmt|;
block|}
name|DIALOG_CALLBACK
typedef|;
typedef|typedef
struct|struct
name|_dlg_windows
block|{
name|struct
name|_dlg_windows
modifier|*
name|next
decl_stmt|;
name|WINDOW
modifier|*
name|normal
decl_stmt|;
name|WINDOW
modifier|*
name|shadow
decl_stmt|;
block|}
name|DIALOG_WINDOWS
typedef|;
comment|/*  * Global variables, which are initialized as needed  */
typedef|typedef
struct|struct
block|{
name|DIALOG_CALLBACK
modifier|*
name|getc_callbacks
decl_stmt|;
name|DIALOG_CALLBACK
modifier|*
name|getc_redirect
decl_stmt|;
name|DIALOG_WINDOWS
modifier|*
name|all_windows
decl_stmt|;
name|FILE
modifier|*
name|output
decl_stmt|;
comment|/* option "--output-fd fd" */
name|FILE
modifier|*
name|pipe_input
decl_stmt|;
comment|/* used for gauge widget */
name|FILE
modifier|*
name|screen_output
decl_stmt|;
comment|/* newterm(), etc. */
name|bool
name|screen_initialized
decl_stmt|;
name|bool
name|use_colors
decl_stmt|;
comment|/* use colors by default? */
name|bool
name|use_scrollbar
decl_stmt|;
comment|/* option "--scrollbar" */
name|bool
name|use_shadow
decl_stmt|;
comment|/* shadow dialog boxes by default? */
name|bool
name|visit_items
decl_stmt|;
comment|/* option "--visit-items" */
name|char
modifier|*
name|separate_str
decl_stmt|;
comment|/* option "--separate-widget string" */
name|int
name|aspect_ratio
decl_stmt|;
comment|/* option "--aspect ratio" */
name|int
name|output_count
decl_stmt|;
comment|/* # of widgets that may have done output */
name|int
name|tab_len
decl_stmt|;
comment|/* option "--tab-len n" */
comment|/* 1.0-20070227 */
name|FILE
modifier|*
name|input
decl_stmt|;
comment|/* option "--input-fd fd" */
ifdef|#
directive|ifdef
name|HAVE_DLG_TRACE
name|FILE
modifier|*
name|trace_output
decl_stmt|;
comment|/* option "--trace file" */
endif|#
directive|endif
comment|/* 1.1-20110106 */
name|bool
name|no_mouse
decl_stmt|;
comment|/* option "--no-mouse" */
block|}
name|DIALOG_STATE
typedef|;
specifier|extern
name|DIALOG_STATE
name|dialog_state
decl_stmt|;
comment|/*  * Global variables, which dialog resets before each widget  */
typedef|typedef
struct|struct
block|{
name|bool
name|beep_after_signal
decl_stmt|;
comment|/* option "--beep-after" */
name|bool
name|beep_signal
decl_stmt|;
comment|/* option "--beep" */
name|bool
name|begin_set
decl_stmt|;
comment|/* option "--begin y x" was used */
name|bool
name|cant_kill
decl_stmt|;
comment|/* option "--no-kill" */
name|bool
name|colors
decl_stmt|;
comment|/* option "--colors" */
name|bool
name|cr_wrap
decl_stmt|;
comment|/* option "--cr-wrap" */
name|bool
name|defaultno
decl_stmt|;
comment|/* option "--defaultno" */
name|bool
name|dlg_clear_screen
decl_stmt|;
comment|/* option "--clear" */
name|bool
name|extra_button
decl_stmt|;
comment|/* option "--extra-button" */
name|bool
name|help_button
decl_stmt|;
comment|/* option "--help-button" */
name|bool
name|help_status
decl_stmt|;
comment|/* option "--help-status" */
name|bool
name|input_menu
decl_stmt|;
comment|/* menu vs inputmenu widget */
name|bool
name|insecure
decl_stmt|;
comment|/* option "--insecure" */
name|bool
name|item_help
decl_stmt|;
comment|/* option "--item-help" */
name|bool
name|keep_window
decl_stmt|;
comment|/* option "--keep-window" */
name|bool
name|nocancel
decl_stmt|;
comment|/* option "--no-cancel" */
name|bool
name|nocollapse
decl_stmt|;
comment|/* option "--no-collapse" */
name|bool
name|print_siz
decl_stmt|;
comment|/* option "--print-size" */
name|bool
name|separate_output
decl_stmt|;
comment|/* option "--separate-output" */
name|bool
name|single_quoted
decl_stmt|;
comment|/* option "--single-quoted" */
name|bool
name|size_err
decl_stmt|;
comment|/* option "--size-err" */
name|bool
name|tab_correct
decl_stmt|;
comment|/* option "--tab-correct" */
name|bool
name|trim_whitespace
decl_stmt|;
comment|/* option "--trim" */
name|char
modifier|*
name|backtitle
decl_stmt|;
comment|/* option "--backtitle backtitle" */
name|char
modifier|*
name|cancel_label
decl_stmt|;
comment|/* option "--cancel-label string" */
name|char
modifier|*
name|default_item
decl_stmt|;
comment|/* option "--default-item string" */
name|char
modifier|*
name|exit_label
decl_stmt|;
comment|/* option "--exit-label string" */
name|char
modifier|*
name|extra_label
decl_stmt|;
comment|/* option "--extra-label string" */
name|char
modifier|*
name|help_label
decl_stmt|;
comment|/* option "--help-label string" */
name|char
modifier|*
name|input_result
decl_stmt|;
name|char
modifier|*
name|no_label
decl_stmt|;
comment|/* option "--no-label string" */
name|char
modifier|*
name|ok_label
decl_stmt|;
comment|/* option "--ok-label string" */
name|char
modifier|*
name|title
decl_stmt|;
comment|/* option "--title title" */
name|char
modifier|*
name|yes_label
decl_stmt|;
comment|/* option "--yes-label string" */
name|int
name|begin_x
decl_stmt|;
comment|/* option "--begin y x" (second value) */
name|int
name|begin_y
decl_stmt|;
comment|/* option "--begin y x" (first value) */
name|int
name|max_input
decl_stmt|;
comment|/* option "--max-input size" */
name|int
name|scale_factor
decl_stmt|;
comment|/* RESERVED */
name|int
name|sleep_secs
decl_stmt|;
comment|/* option "--sleep secs" */
name|int
name|timeout_secs
decl_stmt|;
comment|/* option "--timeout secs" */
name|unsigned
name|input_length
decl_stmt|;
comment|/* nonzero if input_result is allocated */
comment|/* 1.0-20051207 */
name|unsigned
name|formitem_type
decl_stmt|;
comment|/* DIALOG_FORMITEM.type in dialog_form() */
comment|/* 1.1-20070227 */
name|bool
name|keep_tite
decl_stmt|;
comment|/* option "--keep-tite" */
name|bool
name|ascii_lines
decl_stmt|;
comment|/* option "--ascii-lines" */
name|bool
name|no_lines
decl_stmt|;
comment|/* option "--no-lines" */
comment|/* 1.1-20070930 */
name|bool
name|nook
decl_stmt|;
comment|/* option "--no-ok" */
comment|/* 1.1-20080727 */
name|bool
name|quoted
decl_stmt|;
comment|/* option "--quoted" */
name|char
modifier|*
name|column_header
decl_stmt|;
comment|/* RESERVED "--column-header" */
name|char
modifier|*
name|column_separator
decl_stmt|;
comment|/* option "--column-separator" */
name|char
modifier|*
name|output_separator
decl_stmt|;
comment|/* option "--output-separator" */
comment|/* 1.1-20100118 */
name|char
modifier|*
name|date_format
decl_stmt|;
comment|/* option "--date-format" */
name|char
modifier|*
name|time_format
decl_stmt|;
comment|/* option "--time-format" */
block|}
name|DIALOG_VARS
typedef|;
define|#
directive|define
name|USE_ITEM_HELP
parameter_list|(
name|s
parameter_list|)
value|(dialog_vars.item_help&& (s) != 0)
define|#
directive|define
name|CHECKBOX_TAGS
value|(dialog_vars.item_help ? 4 : 3)
define|#
directive|define
name|MENUBOX_TAGS
value|(dialog_vars.item_help ? 3 : 2)
define|#
directive|define
name|FORMBOX_TAGS
value|(dialog_vars.item_help ? 9 : 8)
define|#
directive|define
name|MIXEDFORM_TAGS
value|(FORMBOX_TAGS + 1)
define|#
directive|define
name|MIXEDGAUGE_TAGS
value|2
specifier|extern
name|DIALOG_VARS
name|dialog_vars
decl_stmt|;
ifndef|#
directive|ifndef
name|HAVE_TYPE_CHTYPE
define|#
directive|define
name|chtype
value|long
endif|#
directive|endif
define|#
directive|define
name|UCH
parameter_list|(
name|ch
parameter_list|)
value|((unsigned char)(ch))
define|#
directive|define
name|assert_ptr
parameter_list|(
name|ptr
parameter_list|,
name|msg
parameter_list|)
value|if ((ptr) == 0) dlg_exiterr("cannot allocate memory in " msg)
define|#
directive|define
name|dlg_malloc
parameter_list|(
name|t
parameter_list|,
name|n
parameter_list|)
value|(t *) malloc((size_t)(n) * sizeof(t))
define|#
directive|define
name|dlg_calloc
parameter_list|(
name|t
parameter_list|,
name|n
parameter_list|)
value|(t *) calloc((size_t)(n), sizeof(t))
define|#
directive|define
name|dlg_realloc
parameter_list|(
name|t
parameter_list|,
name|n
parameter_list|,
name|p
parameter_list|)
value|(t *) realloc((p), (n) * sizeof(t))
comment|/*  * Table for attribute- and color-values.  */
typedef|typedef
struct|struct
block|{
name|chtype
name|atr
decl_stmt|;
ifdef|#
directive|ifdef
name|HAVE_COLOR
name|int
name|fg
decl_stmt|;
name|int
name|bg
decl_stmt|;
name|int
name|hilite
decl_stmt|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|HAVE_RC_FILE
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
specifier|const
name|char
modifier|*
name|comment
decl_stmt|;
endif|#
directive|endif
block|}
name|DIALOG_COLORS
typedef|;
specifier|extern
name|DIALOG_COLORS
name|dlg_color_table
index|[]
decl_stmt|;
comment|/*  * Function prototypes  */
specifier|extern
specifier|const
name|char
modifier|*
name|dialog_version
parameter_list|(
name|void
parameter_list|)
function_decl|;
comment|/* widgets, each in separate files */
specifier|extern
name|int
name|dialog_calendar
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*subtitle*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*day*/
parameter_list|,
name|int
comment|/*month*/
parameter_list|,
name|int
comment|/*year*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_checklist
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*list_height*/
parameter_list|,
name|int
comment|/*item_no*/
parameter_list|,
name|char
modifier|*
modifier|*
comment|/*items*/
parameter_list|,
name|int
comment|/*flag*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_dselect
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*path*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_editbox
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*file*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_form
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*form_height*/
parameter_list|,
name|int
comment|/*item_no*/
parameter_list|,
name|char
modifier|*
modifier|*
comment|/*items*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_fselect
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*path*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_gauge
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*percent*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_inputbox
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*init*/
parameter_list|,
specifier|const
name|int
comment|/*password*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_menu
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*menu_height*/
parameter_list|,
name|int
comment|/*item_no*/
parameter_list|,
name|char
modifier|*
modifier|*
comment|/*items*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_mixedform
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*form_height*/
parameter_list|,
name|int
comment|/*item_no*/
parameter_list|,
name|char
modifier|*
modifier|*
comment|/*items*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_mixedgauge
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*percent*/
parameter_list|,
name|int
comment|/*item_no*/
parameter_list|,
name|char
modifier|*
modifier|*
comment|/*items*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_msgbox
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*pauseopt*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_pause
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*seconds*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_prgbox
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*command*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*pauseopt*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_progressbox
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_tailbox
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*file*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*bg_task*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_textbox
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*file*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_timebox
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*subtitle*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*hour*/
parameter_list|,
name|int
comment|/*minute*/
parameter_list|,
name|int
comment|/*second*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dialog_yesno
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|)
function_decl|;
comment|/* some widgets have alternate entrypoints, to allow list manipulation */
typedef|typedef
struct|struct
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|char
modifier|*
name|text
decl_stmt|;
name|char
modifier|*
name|help
decl_stmt|;
name|int
name|state
decl_stmt|;
block|}
name|DIALOG_LISTITEM
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|type
decl_stmt|;
comment|/* the field type (0=input, 1=password) */
name|char
modifier|*
name|name
decl_stmt|;
comment|/* the field label */
name|int
name|name_len
decl_stmt|;
comment|/* ...its length */
name|int
name|name_y
decl_stmt|;
comment|/* ...its y-ordinate */
name|int
name|name_x
decl_stmt|;
comment|/* ...its x-ordinate */
name|bool
name|name_free
decl_stmt|;
comment|/* ...true if .name can be freed */
name|char
modifier|*
name|text
decl_stmt|;
comment|/* the field contents */
name|int
name|text_len
decl_stmt|;
comment|/* ...its length on the screen */
name|int
name|text_y
decl_stmt|;
comment|/* ...its y-ordinate */
name|int
name|text_x
decl_stmt|;
comment|/* ...its x-ordinate */
name|int
name|text_flen
decl_stmt|;
comment|/* ...its length on screen, or 0 if no input allowed */
name|int
name|text_ilen
decl_stmt|;
comment|/* ...its limit on amount to be entered */
name|bool
name|text_free
decl_stmt|;
comment|/* ...true if .text can be freed */
name|char
modifier|*
name|help
decl_stmt|;
comment|/* help-message, if any */
name|bool
name|help_free
decl_stmt|;
comment|/* ...true if .help can be freed */
block|}
name|DIALOG_FORMITEM
typedef|;
typedef|typedef
name|int
function_decl|(
name|DIALOG_INPUTMENU
function_decl|)
parameter_list|(
name|DIALOG_LISTITEM
modifier|*
comment|/*items*/
parameter_list|,
name|int
comment|/*current*/
parameter_list|,
name|char
modifier|*
comment|/*newtext*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_checklist
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*list_height*/
parameter_list|,
name|int
comment|/*item_no*/
parameter_list|,
name|DIALOG_LISTITEM
modifier|*
comment|/*items*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*states*/
parameter_list|,
name|int
comment|/*flag*/
parameter_list|,
name|int
modifier|*
comment|/*current_item*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_form
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*form_height*/
parameter_list|,
name|int
comment|/*item_no*/
parameter_list|,
name|DIALOG_FORMITEM
modifier|*
comment|/*items*/
parameter_list|,
name|int
modifier|*
comment|/*current_item*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_menu
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*menu_height*/
parameter_list|,
name|int
comment|/*item_no*/
parameter_list|,
name|DIALOG_LISTITEM
modifier|*
comment|/*items*/
parameter_list|,
name|int
modifier|*
comment|/*current_item*/
parameter_list|,
name|DIALOG_INPUTMENU
comment|/*rename_menu*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_progressbox
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*pauseopt*/
parameter_list|,
name|FILE
modifier|*
comment|/* fp */
parameter_list|)
function_decl|;
comment|/* argv.c */
specifier|extern
name|char
modifier|*
modifier|*
name|dlg_string_to_argv
parameter_list|(
name|char
modifier|*
comment|/* blob */
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_count_argv
parameter_list|(
name|char
modifier|*
modifier|*
comment|/* argv */
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_eat_argv
parameter_list|(
name|int
modifier|*
comment|/* argcp */
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
comment|/* argvp */
parameter_list|,
name|int
comment|/* start */
parameter_list|,
name|int
comment|/* count */
parameter_list|)
function_decl|;
comment|/* arrows.c */
specifier|extern
name|void
name|dlg_draw_arrows
parameter_list|(
name|WINDOW
modifier|*
comment|/*dialog*/
parameter_list|,
name|int
comment|/*top_arrow*/
parameter_list|,
name|int
comment|/*bottom_arrow*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|,
name|int
comment|/*top*/
parameter_list|,
name|int
comment|/*bottom*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_draw_arrows2
parameter_list|(
name|WINDOW
modifier|*
comment|/*dialog*/
parameter_list|,
name|int
comment|/*top_arrow*/
parameter_list|,
name|int
comment|/*bottom_arrow*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|,
name|int
comment|/*top*/
parameter_list|,
name|int
comment|/*bottom*/
parameter_list|,
name|chtype
comment|/*attr*/
parameter_list|,
name|chtype
comment|/*borderattr*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_draw_scrollbar
parameter_list|(
name|WINDOW
modifier|*
comment|/*dialog*/
parameter_list|,
name|long
comment|/* first_data */
parameter_list|,
name|long
comment|/* this_data */
parameter_list|,
name|long
comment|/* next_data */
parameter_list|,
name|long
comment|/* total_data */
parameter_list|,
name|int
comment|/* left */
parameter_list|,
name|int
comment|/* right */
parameter_list|,
name|int
comment|/*top*/
parameter_list|,
name|int
comment|/*bottom*/
parameter_list|,
name|chtype
comment|/*attr*/
parameter_list|,
name|chtype
comment|/*borderattr*/
parameter_list|)
function_decl|;
comment|/* buttons.c */
specifier|extern
specifier|const
name|char
modifier|*
modifier|*
name|dlg_exit_label
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
specifier|const
name|char
modifier|*
modifier|*
name|dlg_ok_label
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
specifier|const
name|char
modifier|*
modifier|*
name|dlg_ok_labels
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
specifier|const
name|char
modifier|*
modifier|*
name|dlg_yes_labels
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_button_count
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
comment|/*labels*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_button_to_char
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*label*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_button_x_step
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
comment|/*labels*/
parameter_list|,
name|int
comment|/*limit*/
parameter_list|,
name|int
modifier|*
comment|/*gap*/
parameter_list|,
name|int
modifier|*
comment|/*margin*/
parameter_list|,
name|int
modifier|*
comment|/*step*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_char_to_button
parameter_list|(
name|int
comment|/*ch*/
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
comment|/*labels*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_exit_buttoncode
parameter_list|(
name|int
comment|/*button*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_match_char
parameter_list|(
name|int
comment|/*ch*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*string*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_next_button
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
comment|/*labels*/
parameter_list|,
name|int
comment|/*button*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_next_ok_buttonindex
parameter_list|(
name|int
comment|/*current*/
parameter_list|,
name|int
comment|/*extra*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_ok_buttoncode
parameter_list|(
name|int
comment|/*button*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_prev_button
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
comment|/*labels*/
parameter_list|,
name|int
comment|/*button*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_prev_ok_buttonindex
parameter_list|(
name|int
comment|/*current*/
parameter_list|,
name|int
comment|/*extra*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_yes_buttoncode
parameter_list|(
name|int
comment|/*button*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_button_layout
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
comment|/*labels*/
parameter_list|,
name|int
modifier|*
comment|/*limit*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_button_sizes
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
comment|/*labels*/
parameter_list|,
name|int
comment|/*vertical*/
parameter_list|,
name|int
modifier|*
comment|/*longest*/
parameter_list|,
name|int
modifier|*
comment|/*length*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_draw_buttons
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
name|int
comment|/*y*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
comment|/*labels*/
parameter_list|,
name|int
comment|/*selected*/
parameter_list|,
name|int
comment|/*vertical*/
parameter_list|,
name|int
comment|/*limit*/
parameter_list|)
function_decl|;
comment|/* columns.c */
specifier|extern
name|void
name|dlg_align_columns
parameter_list|(
name|char
modifier|*
modifier|*
comment|/* target */
parameter_list|,
name|int
comment|/* per_row */
parameter_list|,
name|int
comment|/* num_rows */
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_free_columns
parameter_list|(
name|char
modifier|*
modifier|*
comment|/* target */
parameter_list|,
name|int
comment|/* per_row */
parameter_list|,
name|int
comment|/* num_rows */
parameter_list|)
function_decl|;
comment|/* editbox.c */
specifier|extern
name|int
name|dlg_editbox
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
comment|/*list*/
parameter_list|,
name|int
modifier|*
comment|/*rows*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|)
function_decl|;
comment|/* formbox.c */
specifier|extern
name|int
name|dlg_default_formitem
parameter_list|(
name|DIALOG_FORMITEM
modifier|*
comment|/*items*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_ordinate
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*s*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_free_formitems
parameter_list|(
name|DIALOG_FORMITEM
modifier|*
comment|/*items*/
parameter_list|)
function_decl|;
comment|/* inputstr.c */
specifier|extern
name|bool
name|dlg_edit_string
parameter_list|(
name|char
modifier|*
comment|/*string*/
parameter_list|,
name|int
modifier|*
comment|/*offset*/
parameter_list|,
name|int
comment|/*key*/
parameter_list|,
name|int
comment|/*fkey*/
parameter_list|,
name|bool
comment|/*force*/
parameter_list|)
function_decl|;
specifier|extern
specifier|const
name|int
modifier|*
name|dlg_index_columns
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*string*/
parameter_list|)
function_decl|;
specifier|extern
specifier|const
name|int
modifier|*
name|dlg_index_wchars
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*string*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_count_columns
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*string*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_count_wchars
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*string*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_edit_offset
parameter_list|(
name|char
modifier|*
comment|/*string*/
parameter_list|,
name|int
comment|/*offset*/
parameter_list|,
name|int
comment|/*x_last*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_find_index
parameter_list|(
specifier|const
name|int
modifier|*
comment|/*list*/
parameter_list|,
name|int
comment|/*limit*/
parameter_list|,
name|int
comment|/*to_find*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_limit_columns
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*string*/
parameter_list|,
name|int
comment|/*limit*/
parameter_list|,
name|int
comment|/*offset*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_show_string
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*string*/
parameter_list|,
name|int
comment|/*offset*/
parameter_list|,
name|chtype
comment|/*attr*/
parameter_list|,
name|int
comment|/*y_base*/
parameter_list|,
name|int
comment|/*x_base*/
parameter_list|,
name|int
comment|/*x_last*/
parameter_list|,
name|bool
comment|/*hidden*/
parameter_list|,
name|bool
comment|/*force*/
parameter_list|)
function_decl|;
comment|/* rc.c */
ifdef|#
directive|ifdef
name|HAVE_RC_FILE
specifier|extern
name|int
name|dlg_parse_rc
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_create_rc
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*filename*/
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* ui_getc.c */
specifier|extern
name|int
name|dlg_getc
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
name|int
modifier|*
comment|/*fkey*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_getc_callbacks
parameter_list|(
name|int
comment|/*ch*/
parameter_list|,
name|int
comment|/*fkey*/
parameter_list|,
name|int
modifier|*
comment|/*result*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_last_getc
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_add_callback
parameter_list|(
name|DIALOG_CALLBACK
modifier|*
comment|/*p*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_add_callback_ref
parameter_list|(
name|DIALOG_CALLBACK
modifier|*
modifier|*
comment|/*p*/
parameter_list|,
name|DIALOG_FREEBACK
comment|/* cleanup */
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_flush_getc
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_remove_callback
parameter_list|(
name|DIALOG_CALLBACK
modifier|*
comment|/*p*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_killall_bg
parameter_list|(
name|int
modifier|*
name|retval
parameter_list|)
function_decl|;
comment|/* util.c */
specifier|extern
name|WINDOW
modifier|*
name|dlg_new_modal_window
parameter_list|(
name|WINDOW
modifier|*
comment|/*parent*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*y*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|)
function_decl|;
specifier|extern
name|WINDOW
modifier|*
name|dlg_new_window
parameter_list|(
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*y*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|)
function_decl|;
specifier|extern
name|WINDOW
modifier|*
name|dlg_sub_window
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*y*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|)
function_decl|;
specifier|extern
name|bool
name|dlg_need_separator
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|char
modifier|*
name|dlg_set_result
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*string*/
parameter_list|)
function_decl|;
specifier|extern
name|char
modifier|*
name|dlg_strclone
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*cprompt*/
parameter_list|)
function_decl|;
specifier|extern
name|char
modifier|*
name|dlg_strempty
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|chtype
name|dlg_asciibox
parameter_list|(
name|chtype
comment|/*ch*/
parameter_list|)
function_decl|;
specifier|extern
name|chtype
name|dlg_boxchar
parameter_list|(
name|chtype
comment|/*ch*/
parameter_list|)
function_decl|;
specifier|extern
name|chtype
name|dlg_get_attrs
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
specifier|extern
specifier|const
name|char
modifier|*
name|dlg_print_line
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
name|chtype
modifier|*
comment|/*attr*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*prompt*/
parameter_list|,
name|int
comment|/*lm*/
parameter_list|,
name|int
comment|/*rm*/
parameter_list|,
name|int
modifier|*
comment|/*x*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_box_x_ordinate
parameter_list|(
name|int
comment|/*width*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_box_y_ordinate
parameter_list|(
name|int
comment|/*height*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_calc_list_width
parameter_list|(
name|int
comment|/*item_no*/
parameter_list|,
name|DIALOG_LISTITEM
modifier|*
comment|/*items*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_calc_listw
parameter_list|(
name|int
comment|/*item_no*/
parameter_list|,
name|char
modifier|*
modifier|*
comment|/*items*/
parameter_list|,
name|int
comment|/*group*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_check_scrolled
parameter_list|(
name|int
comment|/* key */
parameter_list|,
name|int
comment|/* last */
parameter_list|,
name|int
comment|/* page */
parameter_list|,
name|bool
modifier|*
comment|/* show */
parameter_list|,
name|int
modifier|*
comment|/* offset */
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_default_item
parameter_list|(
name|char
modifier|*
modifier|*
comment|/*items*/
parameter_list|,
name|int
comment|/*llen*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_default_listitem
parameter_list|(
name|DIALOG_LISTITEM
modifier|*
comment|/*items*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_defaultno_button
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_max_input
parameter_list|(
name|int
comment|/*max_len*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_print_scrolled
parameter_list|(
name|WINDOW
modifier|*
comment|/* win */
parameter_list|,
specifier|const
name|char
modifier|*
comment|/* prompt */
parameter_list|,
name|int
comment|/* offset */
parameter_list|,
name|int
comment|/* height */
parameter_list|,
name|int
comment|/* width */
parameter_list|,
name|int
comment|/* pauseopt */
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_add_quoted
parameter_list|(
name|char
modifier|*
comment|/*string*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_add_result
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*string*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_add_separator
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_add_string
parameter_list|(
name|char
modifier|*
comment|/*string*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_attr_clear
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|chtype
comment|/*attr*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_auto_size
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*prompt*/
parameter_list|,
name|int
modifier|*
comment|/*height*/
parameter_list|,
name|int
modifier|*
comment|/*width*/
parameter_list|,
name|int
comment|/*boxlines*/
parameter_list|,
name|int
comment|/*mincols*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_auto_sizefile
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*title*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*file*/
parameter_list|,
name|int
modifier|*
comment|/*height*/
parameter_list|,
name|int
modifier|*
comment|/*width*/
parameter_list|,
name|int
comment|/*boxlines*/
parameter_list|,
name|int
comment|/*mincols*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_beeping
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_calc_listh
parameter_list|(
name|int
modifier|*
comment|/*height*/
parameter_list|,
name|int
modifier|*
comment|/*list_height*/
parameter_list|,
name|int
comment|/*item_no*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_clear
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_clr_result
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_ctl_size
parameter_list|(
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_del_window
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_does_output
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_draw_bottom_box
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_draw_box
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
name|int
comment|/*y*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|chtype
comment|/*boxchar*/
parameter_list|,
name|chtype
comment|/*borderchar*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_draw_title
parameter_list|(
name|WINDOW
modifier|*
name|win
parameter_list|,
specifier|const
name|char
modifier|*
name|title
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_exit
argument_list|(
name|int
comment|/*code*/
argument_list|)
name|GCC_NORETURN
decl_stmt|;
specifier|extern
name|void
name|dlg_item_help
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*txt*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_print_autowrap
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*prompt*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_print_size
parameter_list|(
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_print_text
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*txt*/
parameter_list|,
name|int
comment|/*len*/
parameter_list|,
name|chtype
modifier|*
comment|/*attr*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_put_backtitle
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_restore_vars
parameter_list|(
name|DIALOG_VARS
modifier|*
comment|/* save */
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_save_vars
parameter_list|(
name|DIALOG_VARS
modifier|*
comment|/* save */
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_set_focus
parameter_list|(
name|WINDOW
modifier|*
comment|/*parent*/
parameter_list|,
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_tab_correct_str
parameter_list|(
name|char
modifier|*
comment|/*prompt*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_trim_string
parameter_list|(
name|char
modifier|*
comment|/*src*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|end_dialog
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|init_dialog
parameter_list|(
name|FILE
modifier|*
comment|/*input*/
parameter_list|,
name|FILE
modifier|*
comment|/*output*/
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_exiterr
argument_list|(
specifier|const
name|char
operator|*
argument_list|,
operator|...
argument_list|)
name|GCC_NORETURN
if|#
directive|if
name|defined
argument_list|(
name|__GNUC__
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|printf
argument_list|)
name|__attribute__
argument_list|(
operator|(
name|format
argument_list|(
name|printf
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|)
argument_list|)
endif|#
directive|endif
decl_stmt|;
ifdef|#
directive|ifdef
name|HAVE_COLOR
specifier|extern
name|chtype
name|dlg_color_pair
parameter_list|(
name|int
comment|/*foreground*/
parameter_list|,
name|int
comment|/*background*/
parameter_list|)
function_decl|;
specifier|extern
name|int
name|dlg_color_count
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_color_setup
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|void
name|dlg_draw_shadow
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*y*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|)
function_decl|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|HAVE_STRCASECMP
define|#
directive|define
name|dlg_strcmp
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|)
value|strcasecmp(a,b)
else|#
directive|else
specifier|extern
name|int
name|dlg_strcmp
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*a*/
parameter_list|,
specifier|const
name|char
modifier|*
comment|/*b*/
parameter_list|)
function_decl|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|HAVE_DLG_TRACE
define|#
directive|define
name|DLG_TRACE
parameter_list|(
name|params
parameter_list|)
value|dlg_trace_msg params
specifier|extern
name|void
name|dlg_trace_msg
parameter_list|(
specifier|const
name|char
modifier|*
name|fmt
parameter_list|,
modifier|...
parameter_list|)
ifdef|#
directive|ifdef
name|GCC_PRINTF
function_decl|__attribute__
parameter_list|(
function_decl|(format
parameter_list|(
name|printf
parameter_list|,
function_decl|1
operator|,
function_decl|2
block|)
end_extern

begin_endif
unit|))
endif|#
directive|endif
end_endif

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_function_decl
specifier|extern
name|void
name|dlg_trace_win
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dlg_trace_chr
parameter_list|(
name|int
comment|/*ch*/
parameter_list|,
name|int
comment|/*fkey*/
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dlg_trace
parameter_list|(
specifier|const
name|char
modifier|*
comment|/*fname*/
parameter_list|)
function_decl|;
end_function_decl

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|DLG_TRACE
parameter_list|(
name|params
parameter_list|)
end_define

begin_comment
comment|/* nothing */
end_comment

begin_define
define|#
directive|define
name|dlg_trace_win
parameter_list|(
name|win
parameter_list|)
end_define

begin_comment
comment|/* nothing */
end_comment

begin_define
define|#
directive|define
name|dlg_trace_chr
parameter_list|(
name|ch
parameter_list|,
name|fkey
parameter_list|)
end_define

begin_comment
comment|/* nothing */
end_comment

begin_define
define|#
directive|define
name|dlg_trace
parameter_list|(
name|fname
parameter_list|)
end_define

begin_comment
comment|/* nothing */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|KEY_RESIZE
end_ifdef

begin_function_decl
specifier|extern
name|void
name|dlg_move_window
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*y*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * The following stuff is needed for mouse support  */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|mseRegion
block|{
name|int
name|x
decl_stmt|,
name|y
decl_stmt|,
name|X
decl_stmt|,
name|Y
decl_stmt|,
name|code
decl_stmt|;
name|int
name|mode
decl_stmt|,
name|step_x
decl_stmt|,
name|step_y
decl_stmt|;
name|struct
name|mseRegion
modifier|*
name|next
decl_stmt|;
block|}
name|mseRegion
typedef|;
end_typedef

begin_if
if|#
directive|if
name|defined
argument_list|(
name|NCURSES_MOUSE_VERSION
argument_list|)
end_if

begin_define
define|#
directive|define
name|mouse_open
parameter_list|()
value|mousemask(BUTTON1_CLICKED, (mmask_t *) 0)
end_define

begin_define
define|#
directive|define
name|mouse_close
parameter_list|()
value|mousemask(0, (mmask_t *) 0)
end_define

begin_function_decl
specifier|extern
name|mseRegion
modifier|*
name|dlg_mouse_mkregion
parameter_list|(
name|int
comment|/*y*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*code*/
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dlg_mouse_free_regions
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dlg_mouse_mkbigregion
parameter_list|(
name|int
comment|/*y*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|,
name|int
comment|/*height*/
parameter_list|,
name|int
comment|/*width*/
parameter_list|,
name|int
comment|/*code*/
parameter_list|,
name|int
comment|/*step_x*/
parameter_list|,
name|int
comment|/*step_y*/
parameter_list|,
name|int
comment|/*mode*/
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dlg_mouse_setbase
parameter_list|(
name|int
comment|/*x*/
parameter_list|,
name|int
comment|/*y*/
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|USE_MOUSE
value|1
end_define

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|mouse_open
parameter_list|()
end_define

begin_comment
comment|/*nothing*/
end_comment

begin_define
define|#
directive|define
name|mouse_close
parameter_list|()
end_define

begin_comment
comment|/*nothing*/
end_comment

begin_define
define|#
directive|define
name|dlg_mouse_free_regions
parameter_list|()
end_define

begin_comment
comment|/* nothing */
end_comment

begin_define
define|#
directive|define
name|dlg_mouse_mkregion
parameter_list|(
name|y
parameter_list|,
name|x
parameter_list|,
name|height
parameter_list|,
name|width
parameter_list|,
name|code
parameter_list|)
end_define

begin_comment
comment|/*nothing*/
end_comment

begin_define
define|#
directive|define
name|dlg_mouse_mkbigregion
parameter_list|(
name|y
parameter_list|,
name|x
parameter_list|,
name|height
parameter_list|,
name|width
parameter_list|,
name|code
parameter_list|,
name|step_x
parameter_list|,
name|step_y
parameter_list|,
name|mode
parameter_list|)
end_define

begin_comment
comment|/*nothing*/
end_comment

begin_define
define|#
directive|define
name|dlg_mouse_setbase
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
end_define

begin_comment
comment|/*nothing*/
end_comment

begin_define
define|#
directive|define
name|USE_MOUSE
value|0
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
specifier|extern
name|mseRegion
modifier|*
name|dlg_mouse_region
parameter_list|(
name|int
comment|/*y*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|mseRegion
modifier|*
name|dlg_mouse_bigregion
parameter_list|(
name|int
comment|/*y*/
parameter_list|,
name|int
comment|/*x*/
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|dlg_mouse_wgetch
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
name|int
modifier|*
comment|/*fkey*/
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|dlg_mouse_wgetch_nowait
parameter_list|(
name|WINDOW
modifier|*
comment|/*win*/
parameter_list|,
name|int
modifier|*
comment|/*fkey*/
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|mouse_mkbutton
parameter_list|(
name|y
parameter_list|,
name|x
parameter_list|,
name|len
parameter_list|,
name|code
parameter_list|)
value|dlg_mouse_mkregion(y,x,1,len,code);
end_define

begin_comment
comment|/*  * This is the base for fictitious keys, which activate  * the buttons.  *  * Mouse-generated keys are the following:  *   -- the first 32 are used as numbers, in addition to '0'-'9'  *   -- uppercase chars are used to invoke the button (M_EVENT + 'O')  */
end_comment

begin_define
define|#
directive|define
name|M_EVENT
value|(DLGK_max + 1)
end_define

begin_comment
comment|/*  * The `flag' parameter in checklist is used to select between  * radiolist and checklist  */
end_comment

begin_define
define|#
directive|define
name|FLAG_CHECK
value|1
end_define

begin_define
define|#
directive|define
name|FLAG_RADIO
value|0
end_define

begin_comment
comment|/*  * This is used only for debugging (FIXME: should have a separate header).  */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|NO_LEAKS
end_ifdef

begin_function_decl
specifier|extern
name|void
name|_dlg_inputstr_leaks
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_if
if|#
directive|if
name|defined
argument_list|(
name|NCURSES_VERSION
argument_list|)
operator|&&
name|defined
argument_list|(
name|HAVE__NC_FREE_AND_EXIT
argument_list|)
end_if

begin_function_decl
specifier|extern
name|void
name|_nc_free_and_exit
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* nc_alloc.h normally not installed */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_endif
unit|}
endif|#
directive|endif
end_endif

begin_comment
comment|/* *INDENT-ON* */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* DIALOG_H_included */
end_comment

end_unit

