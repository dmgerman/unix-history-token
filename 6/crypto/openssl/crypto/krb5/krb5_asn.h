begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* krb5_asn.h */
end_comment

begin_comment
comment|/* Written by Vern Staats<staatsvr@asc.hpc.mil> for the OpenSSL project, ** using ocsp/{*.h,*asn*.c} as a starting point */
end_comment

begin_comment
comment|/* ====================================================================  * Copyright (c) 1998-2000 The OpenSSL Project.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.   *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in  *    the documentation and/or other materials provided with the  *    distribution.  *  * 3. All advertising materials mentioning features or use of this  *    software must display the following acknowledgment:  *    "This product includes software developed by the OpenSSL Project  *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"  *  * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to  *    endorse or promote products derived from this software without  *    prior written permission. For written permission, please contact  *    openssl-core@openssl.org.  *  * 5. Products derived from this software may not be called "OpenSSL"  *    nor may "OpenSSL" appear in their names without prior written  *    permission of the OpenSSL Project.  *  * 6. Redistributions of any form whatsoever must retain the following  *    acknowledgment:  *    "This product includes software developed by the OpenSSL Project  *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"  *  * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY  * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR  * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED  * OF THE POSSIBILITY OF SUCH DAMAGE.  * ====================================================================  *  * This product includes cryptographic software written by Eric Young  * (eay@cryptsoft.com).  This product includes software written by Tim  * Hudson (tjh@cryptsoft.com).  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HEADER_KRB5_ASN_H
end_ifndef

begin_define
define|#
directive|define
name|HEADER_KRB5_ASN_H
end_define

begin_comment
comment|/* #include<krb5.h> */
end_comment

begin_include
include|#
directive|include
file|<openssl/safestack.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/*	ASN.1 from Kerberos RFC 1510 */
comment|/*	EncryptedData ::=   SEQUENCE { **		etype[0]                      INTEGER, -- EncryptionType **		kvno[1]                       INTEGER OPTIONAL, **		cipher[2]                     OCTET STRING -- ciphertext **	} */
typedef|typedef
struct|struct
name|krb5_encdata_st
block|{
name|ASN1_INTEGER
modifier|*
name|etype
decl_stmt|;
name|ASN1_INTEGER
modifier|*
name|kvno
decl_stmt|;
name|ASN1_OCTET_STRING
modifier|*
name|cipher
decl_stmt|;
block|}
name|KRB5_ENCDATA
typedef|;
name|DECLARE_STACK_OF
argument_list|(
argument|KRB5_ENCDATA
argument_list|)
comment|/*	PrincipalName ::=   SEQUENCE { **		name-type[0]                  INTEGER, **		name-string[1]                SEQUENCE OF GeneralString **	} */
typedef|typedef
struct|struct
name|krb5_princname_st
block|{
name|ASN1_INTEGER
modifier|*
name|nametype
decl_stmt|;
name|STACK_OF
argument_list|(
name|ASN1_GENERALSTRING
argument_list|)
operator|*
name|namestring
expr_stmt|;
block|}
name|KRB5_PRINCNAME
typedef|;
name|DECLARE_STACK_OF
argument_list|(
argument|KRB5_PRINCNAME
argument_list|)
comment|/*	Ticket ::=	[APPLICATION 1] SEQUENCE { **		tkt-vno[0]                    INTEGER, **		realm[1]                      Realm, **		sname[2]                      PrincipalName, **		enc-part[3]                   EncryptedData **	} */
typedef|typedef
struct|struct
name|krb5_tktbody_st
block|{
name|ASN1_INTEGER
modifier|*
name|tktvno
decl_stmt|;
name|ASN1_GENERALSTRING
modifier|*
name|realm
decl_stmt|;
name|KRB5_PRINCNAME
modifier|*
name|sname
decl_stmt|;
name|KRB5_ENCDATA
modifier|*
name|encdata
decl_stmt|;
block|}
name|KRB5_TKTBODY
typedef|;
typedef|typedef
name|STACK_OF
argument_list|(
argument|KRB5_TKTBODY
argument_list|)
name|KRB5_TICKET
expr_stmt|;
name|DECLARE_STACK_OF
argument_list|(
argument|KRB5_TKTBODY
argument_list|)
comment|/*	AP-REQ ::=      [APPLICATION 14] SEQUENCE { **		pvno[0]                       INTEGER, **		msg-type[1]                   INTEGER, **		ap-options[2]                 APOptions, **		ticket[3]                     Ticket, **		authenticator[4]              EncryptedData **	} ** **	APOptions ::=   BIT STRING { **		reserved(0), use-session-key(1), mutual-required(2) } */
typedef|typedef
struct|struct
name|krb5_ap_req_st
block|{
name|ASN1_INTEGER
modifier|*
name|pvno
decl_stmt|;
name|ASN1_INTEGER
modifier|*
name|msgtype
decl_stmt|;
name|ASN1_BIT_STRING
modifier|*
name|apoptions
decl_stmt|;
name|KRB5_TICKET
modifier|*
name|ticket
decl_stmt|;
name|KRB5_ENCDATA
modifier|*
name|authenticator
decl_stmt|;
block|}
name|KRB5_APREQBODY
typedef|;
typedef|typedef
name|STACK_OF
argument_list|(
argument|KRB5_APREQBODY
argument_list|)
name|KRB5_APREQ
expr_stmt|;
name|DECLARE_STACK_OF
argument_list|(
argument|KRB5_APREQBODY
argument_list|)
comment|/*	Authenticator Stuff	*/
comment|/*	Checksum ::=   SEQUENCE { **		cksumtype[0]                  INTEGER, **		checksum[1]                   OCTET STRING **	} */
typedef|typedef
struct|struct
name|krb5_checksum_st
block|{
name|ASN1_INTEGER
modifier|*
name|ctype
decl_stmt|;
name|ASN1_OCTET_STRING
modifier|*
name|checksum
decl_stmt|;
block|}
name|KRB5_CHECKSUM
typedef|;
name|DECLARE_STACK_OF
argument_list|(
argument|KRB5_CHECKSUM
argument_list|)
comment|/*	EncryptionKey ::=   SEQUENCE { **		keytype[0]                    INTEGER, **		keyvalue[1]                   OCTET STRING **	} */
typedef|typedef
struct|struct
name|krb5_encryptionkey_st
block|{
name|ASN1_INTEGER
modifier|*
name|ktype
decl_stmt|;
name|ASN1_OCTET_STRING
modifier|*
name|keyvalue
decl_stmt|;
block|}
name|KRB5_ENCKEY
typedef|;
name|DECLARE_STACK_OF
argument_list|(
argument|KRB5_ENCKEY
argument_list|)
comment|/*	AuthorizationData ::=   SEQUENCE OF SEQUENCE { **		ad-type[0]                    INTEGER, **              ad-data[1]                    OCTET STRING **	} */
typedef|typedef
struct|struct
name|krb5_authorization_st
block|{
name|ASN1_INTEGER
modifier|*
name|adtype
decl_stmt|;
name|ASN1_OCTET_STRING
modifier|*
name|addata
decl_stmt|;
block|}
name|KRB5_AUTHDATA
typedef|;
name|DECLARE_STACK_OF
argument_list|(
argument|KRB5_AUTHDATA
argument_list|)
comment|/*	-- Unencrypted authenticator **	Authenticator ::=    [APPLICATION 2] SEQUENCE    { **		authenticator-vno[0]          INTEGER, **		crealm[1]                     Realm, **		cname[2]                      PrincipalName, **		cksum[3]                      Checksum OPTIONAL, **		cusec[4]                      INTEGER, **		ctime[5]                      KerberosTime, **		subkey[6]                     EncryptionKey OPTIONAL, **		seq-number[7]                 INTEGER OPTIONAL, **		authorization-data[8]         AuthorizationData OPTIONAL **	} */
typedef|typedef
struct|struct
name|krb5_authenticator_st
block|{
name|ASN1_INTEGER
modifier|*
name|avno
decl_stmt|;
name|ASN1_GENERALSTRING
modifier|*
name|crealm
decl_stmt|;
name|KRB5_PRINCNAME
modifier|*
name|cname
decl_stmt|;
name|KRB5_CHECKSUM
modifier|*
name|cksum
decl_stmt|;
name|ASN1_INTEGER
modifier|*
name|cusec
decl_stmt|;
name|ASN1_GENERALIZEDTIME
modifier|*
name|ctime
decl_stmt|;
name|KRB5_ENCKEY
modifier|*
name|subkey
decl_stmt|;
name|ASN1_INTEGER
modifier|*
name|seqnum
decl_stmt|;
name|KRB5_AUTHDATA
modifier|*
name|authorization
decl_stmt|;
block|}
name|KRB5_AUTHENTBODY
typedef|;
typedef|typedef
name|STACK_OF
argument_list|(
argument|KRB5_AUTHENTBODY
argument_list|)
name|KRB5_AUTHENT
expr_stmt|;
name|DECLARE_STACK_OF
argument_list|(
argument|KRB5_AUTHENTBODY
argument_list|)
comment|/*  DECLARE_ASN1_FUNCTIONS(type) = DECLARE_ASN1_FUNCTIONS_name(type, type) = **	type *name##_new(void); **	void name##_free(type *a); **	DECLARE_ASN1_ENCODE_FUNCTIONS(type, name, name) = **	 DECLARE_ASN1_ENCODE_FUNCTIONS(type, itname, name) = **	  type *d2i_##name(type **a, unsigned char **in, long len); **	  int i2d_##name(type *a, unsigned char **out); **	  DECLARE_ASN1_ITEM(itname) = OPENSSL_EXTERN const ASN1_ITEM itname##_it */
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|KRB5_ENCDATA
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|KRB5_PRINCNAME
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|KRB5_TKTBODY
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|KRB5_APREQBODY
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|KRB5_TICKET
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|KRB5_APREQ
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|KRB5_CHECKSUM
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|KRB5_ENCKEY
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|KRB5_AUTHDATA
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|KRB5_AUTHENTBODY
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|KRB5_AUTHENT
argument_list|)
comment|/* BEGIN ERROR CODES */
comment|/* The following lines are auto generated by the script mkerr.pl. Any changes  * made after this point may be overwritten when the script is next run.  */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

