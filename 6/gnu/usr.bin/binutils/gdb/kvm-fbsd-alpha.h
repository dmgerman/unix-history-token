begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Kernel core dump functions below target vector, for GDB on FreeBSD/Alpha.    Copyright 1986, 1987, 1989, 1991, 1992, 1993, 1994, 1995    Free Software Foundation, Inc.  This file is part of GDB.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. */
end_comment

begin_expr_stmt
name|__FBSDID
argument_list|(
literal|"$FreeBSD$"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_include
include|#
directive|include
file|"alpha/tm-alpha.h"
end_include

begin_ifndef
ifndef|#
directive|ifndef
name|S0_REGNUM
end_ifndef

begin_define
define|#
directive|define
name|S0_REGNUM
value|(T7_REGNUM+1)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_function
specifier|static
name|void
name|fetch_kcore_registers
parameter_list|(
name|struct
name|pcb
modifier|*
name|pcbp
parameter_list|)
block|{
comment|/* First clear out any garbage.  */
name|memset
argument_list|(
name|registers
argument_list|,
literal|'\0'
argument_list|,
name|REGISTER_BYTES
argument_list|)
expr_stmt|;
comment|/* SP */
operator|*
operator|(
name|long
operator|*
operator|)
operator|&
name|registers
index|[
name|REGISTER_BYTE
argument_list|(
name|SP_REGNUM
argument_list|)
index|]
operator|=
name|pcbp
operator|->
name|pcb_hw
operator|.
name|apcb_ksp
expr_stmt|;
comment|/* S0 through S6 */
name|memcpy
argument_list|(
operator|&
name|registers
index|[
name|REGISTER_BYTE
argument_list|(
name|S0_REGNUM
argument_list|)
index|]
argument_list|,
operator|&
name|pcbp
operator|->
name|pcb_context
index|[
literal|0
index|]
argument_list|,
literal|7
operator|*
sizeof|sizeof
argument_list|(
name|long
argument_list|)
argument_list|)
expr_stmt|;
comment|/* PC */
operator|*
operator|(
name|long
operator|*
operator|)
operator|&
name|registers
index|[
name|REGISTER_BYTE
argument_list|(
name|PC_REGNUM
argument_list|)
index|]
operator|=
name|pcbp
operator|->
name|pcb_context
index|[
literal|7
index|]
expr_stmt|;
name|registers_fetched
argument_list|()
expr_stmt|;
block|}
end_function

begin_function
name|CORE_ADDR
name|fbsd_kern_frame_saved_pc
parameter_list|(
name|struct
name|frame_info
modifier|*
name|fi
parameter_list|)
block|{
name|struct
name|minimal_symbol
modifier|*
name|sym
decl_stmt|;
name|CORE_ADDR
name|this_saved_pc
decl_stmt|;
name|this_saved_pc
operator|=
name|alpha_frame_saved_pc
argument_list|(
name|fi
argument_list|)
expr_stmt|;
name|sym
operator|=
name|lookup_minimal_symbol_by_pc
argument_list|(
name|this_saved_pc
argument_list|)
expr_stmt|;
if|if
condition|(
name|sym
operator|!=
name|NULL
operator|&&
operator|(
name|strcmp
argument_list|(
name|SYMBOL_NAME
argument_list|(
name|sym
argument_list|)
argument_list|,
literal|"XentArith"
argument_list|)
operator|==
literal|0
operator|||
name|strcmp
argument_list|(
name|SYMBOL_NAME
argument_list|(
name|sym
argument_list|)
argument_list|,
literal|"XentIF"
argument_list|)
operator|==
literal|0
operator|||
name|strcmp
argument_list|(
name|SYMBOL_NAME
argument_list|(
name|sym
argument_list|)
argument_list|,
literal|"XentInt"
argument_list|)
operator|==
literal|0
operator|||
name|strcmp
argument_list|(
name|SYMBOL_NAME
argument_list|(
name|sym
argument_list|)
argument_list|,
literal|"XentMM"
argument_list|)
operator|==
literal|0
operator|||
name|strcmp
argument_list|(
name|SYMBOL_NAME
argument_list|(
name|sym
argument_list|)
argument_list|,
literal|"XentSys"
argument_list|)
operator|==
literal|0
operator|||
name|strcmp
argument_list|(
name|SYMBOL_NAME
argument_list|(
name|sym
argument_list|)
argument_list|,
literal|"XentUna"
argument_list|)
operator|==
literal|0
operator|||
name|strcmp
argument_list|(
name|SYMBOL_NAME
argument_list|(
name|sym
argument_list|)
argument_list|,
literal|"XentRestart"
argument_list|)
operator|==
literal|0
operator|)
condition|)
block|{
return|return
operator|(
name|read_memory_integer
argument_list|(
name|fi
operator|->
name|frame
operator|+
literal|32
operator|*
literal|8
argument_list|,
literal|8
argument_list|)
operator|)
return|;
block|}
else|else
block|{
return|return
operator|(
name|this_saved_pc
operator|)
return|;
block|}
block|}
end_function

end_unit

