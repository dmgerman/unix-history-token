begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Ada language support definitions for GDB, the GNU debugger.    Copyright 1992, 1997 Free Software Foundation, Inc.  This file is part of GDB.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
end_comment

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|ADA_LANG_H
argument_list|)
end_if

begin_define
define|#
directive|define
name|ADA_LANG_H
value|1
end_define

begin_struct_decl
struct_decl|struct
name|partial_symbol
struct_decl|;
end_struct_decl

begin_include
include|#
directive|include
file|"value.h"
end_include

begin_include
include|#
directive|include
file|"gdbtypes.h"
end_include

begin_struct_decl
struct_decl|struct
name|block
struct_decl|;
end_struct_decl

begin_comment
comment|/* A macro to reorder the bytes of an address depending on the    endiannes of the target.  */
end_comment

begin_define
define|#
directive|define
name|EXTRACT_ADDRESS
parameter_list|(
name|x
parameter_list|)
value|((void *) extract_unsigned_integer (&(x), sizeof (x)))
end_define

begin_comment
comment|/* A macro to reorder the bytes of an int depending on the endiannes    of the target */
end_comment

begin_define
define|#
directive|define
name|EXTRACT_INT
parameter_list|(
name|x
parameter_list|)
value|((int) extract_signed_integer (&(x), sizeof (x)))
end_define

begin_comment
comment|/* Chain of cleanups for arguments of OP_UNRESOLVED_VALUE names.  Created in    yyparse and freed in ada_resolve. */
end_comment

begin_decl_stmt
specifier|extern
name|struct
name|cleanup
modifier|*
name|unresolved_names
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Corresponding mangled/demangled names and opcodes for Ada user-definable     operators. */
end_comment

begin_struct
struct|struct
name|ada_opname_map
block|{
specifier|const
name|char
modifier|*
name|mangled
decl_stmt|;
specifier|const
name|char
modifier|*
name|demangled
decl_stmt|;
name|enum
name|exp_opcode
name|op
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Table of Ada operators in mangled and demangled forms. */
end_comment

begin_comment
comment|/* Defined in ada-lang.c */
end_comment

begin_decl_stmt
specifier|extern
specifier|const
name|struct
name|ada_opname_map
name|ada_opname_table
index|[]
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* The maximum number of tasks known to the Ada runtime */
end_comment

begin_decl_stmt
specifier|extern
specifier|const
name|int
name|MAX_NUMBER_OF_KNOWN_TASKS
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Identifiers for Ada attributes that need special processing.  Be sure     to update the table attribute_names in ada-lang.c whenever you change this.    */
end_comment

begin_enum
enum|enum
name|ada_attribute
block|{
comment|/* Invalid attribute for error checking. */
name|ATR_INVALID
block|,
name|ATR_FIRST
block|,
name|ATR_LAST
block|,
name|ATR_LENGTH
block|,
name|ATR_IMAGE
block|,
name|ATR_IMG
block|,
name|ATR_MAX
block|,
name|ATR_MIN
block|,
name|ATR_MODULUS
block|,
name|ATR_POS
block|,
name|ATR_SIZE
block|,
name|ATR_TAG
block|,
name|ATR_VAL
block|,
comment|/* Dummy last attribute. */
name|ATR_END
block|}
enum|;
end_enum

begin_enum
enum|enum
name|task_states
block|{
name|Unactivated
block|,
name|Runnable
block|,
name|Terminated
block|,
name|Activator_Sleep
block|,
name|Acceptor_Sleep
block|,
name|Entry_Caller_Sleep
block|,
name|Async_Select_Sleep
block|,
name|Delay_Sleep
block|,
name|Master_Completion_Sleep
block|,
name|Master_Phase_2_Sleep
block|}
enum|;
end_enum

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|ada_task_states
index|[]
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
struct|struct
block|{
name|char
modifier|*
name|P_ARRAY
decl_stmt|;
name|int
modifier|*
name|P_BOUNDS
decl_stmt|;
block|}
name|fat_string
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|entry_call
block|{
name|void
modifier|*
name|self
decl_stmt|;
block|}
typedef|*
name|entry_call_link
typedef|;
end_typedef

begin_struct
struct|struct
name|task_fields
block|{
name|int
name|entry_num
decl_stmt|;
if|#
directive|if
operator|(
name|defined
argument_list|(
name|VXWORKS_TARGET
argument_list|)
operator|||
operator|!
name|defined
argument_list|(
name|i386
argument_list|)
operator|)
expr|\
operator|&&
operator|!
operator|(
name|defined
argument_list|(
name|VXWORKS_TARGET
argument_list|)
operator|&&
name|defined
argument_list|(
name|M68K_TARGET
argument_list|)
operator|)
name|int
name|pad1
decl_stmt|;
endif|#
directive|endif
name|char
name|state
decl_stmt|;
if|#
directive|if
operator|(
name|defined
argument_list|(
name|VXWORKS_TARGET
argument_list|)
operator|&&
name|defined
argument_list|(
name|M68K_TARGET
argument_list|)
operator|)
name|char
name|pad_8bits
decl_stmt|;
endif|#
directive|endif
name|void
modifier|*
name|parent
decl_stmt|;
name|int
name|priority
decl_stmt|;
name|int
name|current_priority
decl_stmt|;
name|fat_string
name|image
decl_stmt|;
name|entry_call_link
name|call
decl_stmt|;
if|#
directive|if
operator|(
name|defined
argument_list|(
name|sun
argument_list|)
operator|&&
name|defined
argument_list|(
name|__SVR4
argument_list|)
operator|)
operator|&&
operator|!
name|defined
argument_list|(
name|VXWORKS_TARGET
argument_list|)
name|int
name|pad2
decl_stmt|;
name|unsigned
name|thread
decl_stmt|;
name|unsigned
name|lwp
decl_stmt|;
else|#
directive|else
name|void
modifier|*
name|thread
decl_stmt|;
name|void
modifier|*
name|lwp
decl_stmt|;
endif|#
directive|endif
block|}
if|#
directive|if
operator|(
name|defined
argument_list|(
name|VXWORKS_TARGET
argument_list|)
operator|&&
name|defined
argument_list|(
name|M68K_TARGET
argument_list|)
operator|)
name|__attribute__
argument_list|(
operator|(
name|packed
operator|)
argument_list|)
endif|#
directive|endif
struct|;
end_struct

begin_struct
struct|struct
name|task_entry
block|{
name|void
modifier|*
name|task_id
decl_stmt|;
name|int
name|task_num
decl_stmt|;
name|int
name|known_tasks_index
decl_stmt|;
name|struct
name|task_entry
modifier|*
name|next_task
decl_stmt|;
name|void
modifier|*
name|thread
decl_stmt|;
name|void
modifier|*
name|lwp
decl_stmt|;
name|int
name|stack_per
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|type
modifier|*
name|builtin_type_ada_int
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|type
modifier|*
name|builtin_type_ada_short
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|type
modifier|*
name|builtin_type_ada_long
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|type
modifier|*
name|builtin_type_ada_long_long
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|type
modifier|*
name|builtin_type_ada_char
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|type
modifier|*
name|builtin_type_ada_float
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|type
modifier|*
name|builtin_type_ada_double
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|type
modifier|*
name|builtin_type_ada_long_double
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|type
modifier|*
name|builtin_type_ada_natural
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|type
modifier|*
name|builtin_type_ada_positive
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|type
modifier|*
name|builtin_type_ada_system_address
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Assuming V points to an array of S objects,  make sure that it contains at     least M objects, updating V and S as necessary. */
end_comment

begin_define
define|#
directive|define
name|GROW_VECT
parameter_list|(
name|v
parameter_list|,
name|s
parameter_list|,
name|m
parameter_list|)
define|\
value|if ((s)< (m)) grow_vect ((void**)&(v),&(s), (m), sizeof(*(v)));
end_define

begin_function_decl
specifier|extern
name|void
name|grow_vect
parameter_list|(
name|void
modifier|*
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_parse
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Defined in ada-exp.y */
end_comment

begin_function_decl
specifier|extern
name|void
name|ada_error
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Defined in ada-exp.y */
end_comment

begin_comment
comment|/* Defined in ada-typeprint.c */
end_comment

begin_function_decl
specifier|extern
name|void
name|ada_print_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|struct
name|ui_file
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_val_print
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|CORE_ADDR
parameter_list|,
name|struct
name|ui_file
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|enum
name|val_prettyprint
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_value_print
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|,
name|struct
name|ui_file
modifier|*
parameter_list|,
name|int
parameter_list|,
name|enum
name|val_prettyprint
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Defined in ada-lang.c */
end_comment

begin_function_decl
specifier|extern
name|struct
name|value
modifier|*
name|value_from_contents_and_address
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|CORE_ADDR
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ada_emit_char
parameter_list|(
name|int
parameter_list|,
name|struct
name|ui_file
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ada_printchar
parameter_list|(
name|int
parameter_list|,
name|struct
name|ui_file
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ada_printstr
parameter_list|(
name|struct
name|ui_file
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|unsigned
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ada_convert_actuals
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|value
modifier|*
modifier|*
parameter_list|,
name|CORE_ADDR
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|value
modifier|*
name|ada_value_subscript
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|value
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_array_element_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_array_arity
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|type
modifier|*
name|ada_type_of_array
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|value
modifier|*
name|ada_coerce_to_simple_array
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|value
modifier|*
name|ada_coerce_to_simple_array_ptr
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_simple_array
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_array_descriptor
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_bogus_array_descriptor
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_index_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|value
modifier|*
name|ada_array_bound
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_lookup_symbol_list
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|block
modifier|*
parameter_list|,
name|domain_enum
parameter_list|,
name|struct
name|symbol
modifier|*
modifier|*
modifier|*
parameter_list|,
name|struct
name|block
modifier|*
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|ada_fold_name
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|symbol
modifier|*
name|ada_lookup_symbol
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|block
modifier|*
parameter_list|,
name|domain_enum
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|minimal_symbol
modifier|*
name|ada_lookup_minimal_symbol
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ada_resolve
parameter_list|(
name|struct
name|expression
modifier|*
modifier|*
parameter_list|,
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_resolve_function
parameter_list|(
name|struct
name|symbol
modifier|*
modifier|*
parameter_list|,
name|struct
name|block
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|value
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ada_fill_in_ada_prototype
parameter_list|(
name|struct
name|symbol
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|user_select_syms
parameter_list|(
name|struct
name|symbol
modifier|*
modifier|*
parameter_list|,
name|struct
name|block
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|get_selections
parameter_list|(
name|int
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|ada_start_decode_line_1
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|symtabs_and_lines
name|ada_finish_decode_line_1
parameter_list|(
name|char
modifier|*
modifier|*
parameter_list|,
name|struct
name|symtab
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_scan_number
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|LONGEST
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_parent_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_ignored_field
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_packed_array_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|value
modifier|*
name|ada_value_primitive_packed_val
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|long
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_coerce_to_simple_array_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_character_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_string_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_tagged_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_tag_type
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|value
modifier|*
name|ada_value_tag
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_parent_field
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_wrapper_field
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_variant_part
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_variant_discrim_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_others_clause
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_in_variant
parameter_list|(
name|LONGEST
parameter_list|,
name|struct
name|type
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|ada_variant_discrim_name
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_lookup_struct_elt_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|value
modifier|*
name|ada_value_struct_elt
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|value
modifier|*
name|ada_search_struct_field
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|value
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_aligner_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_aligned_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|ada_aligned_value_addr
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|ada_attribute_name
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_fixed_point_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|DOUBLEST
name|ada_delta
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|DOUBLEST
name|ada_fixed_to_float
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|LONGEST
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|LONGEST
name|ada_float_to_fixed
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|DOUBLEST
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_vax_floating_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_vax_float_type_suffix
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|value
modifier|*
name|ada_vax_float_print_function
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_system_address_type
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_which_variant_applies
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|struct
name|type
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|value
modifier|*
name|ada_to_fixed_value
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|CORE_ADDR
parameter_list|,
name|struct
name|value
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_to_fixed_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|CORE_ADDR
parameter_list|,
name|struct
name|value
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_name_prefix_len
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|ada_type_name
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_find_parallel_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
name|suffix
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|LONGEST
name|get_int_var_value
parameter_list|(
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_find_any_type
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_prefer_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_get_base_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|type
modifier|*
name|ada_completed_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|ada_mangle
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|ada_enum_name
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_modular_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|LONGEST
name|ada_modulus
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|value
modifier|*
name|ada_value_ind
parameter_list|(
name|struct
name|value
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ada_print_scalar
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|,
name|LONGEST
parameter_list|,
name|struct
name|ui_file
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_range_type_name
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|ada_renaming_type
parameter_list|(
name|struct
name|type
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_object_renaming
parameter_list|(
name|struct
name|symbol
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|ada_simple_renamed_entity
parameter_list|(
name|struct
name|symbol
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|ada_breakpoint_rewrite
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Tasking-related: ada-tasks.c */
end_comment

begin_function_decl
specifier|extern
name|int
name|valid_task_id
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|get_current_task
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|init_task_list
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
modifier|*
name|get_self_id
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|get_current_task
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|get_entry_number
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ada_report_exception_break
parameter_list|(
name|struct
name|breakpoint
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_maybe_exception_partial_symbol
parameter_list|(
name|struct
name|partial_symbol
modifier|*
name|sym
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|ada_is_exception_sym
parameter_list|(
name|struct
name|symbol
modifier|*
name|sym
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

