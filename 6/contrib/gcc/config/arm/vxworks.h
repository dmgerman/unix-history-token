begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Definitions of target machine for GCC,    for ARM with targetting the VXWorks run time environment.     Copyright (C) 1999, 2000, 2003 Free Software Foundation, Inc.     Contributed by: Mike Stump<mrs@wrs.com>    Brought up to date by CodeSourcery, LLC.     This file is part of GCC.  GCC is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  GCC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with GCC; see the file COPYING.  If not, write to the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_define
define|#
directive|define
name|TARGET_OS_CPP_BUILTINS
parameter_list|()
define|\
value|do {						\     builtin_define ("__vxworks");		\     if (TARGET_BIG_END)				\       builtin_define ("ARMEB");			\     else					\       builtin_define ("ARMEL");			\ 						\     if (arm_is_xscale)				\       builtin_define ("CPU=XSCALE");		\     else if (arm_arch5)				\       builtin_define ("CPU=ARMARCH5");		\     else if (arm_arch4)				\       {						\ 	if (thumb_code)				\ 	  builtin_define ("CPU=ARMARCH4_T");	\ 	else					\ 	  builtin_define ("CPU=ARMARCH4");	\       }						\   } while (0)
end_define

begin_undef
undef|#
directive|undef
name|CC1_SPEC
end_undef

begin_define
define|#
directive|define
name|CC1_SPEC
define|\
value|"%{t4:        -mapcs-32 -mlittle-endian -march=armv4 ;			\    t4be:      -mapcs-32 -mbig-endian -march=armv4 ;			\    t4t:       -mthumb -mthumb-interwork -mlittle-endian -march=armv4t ;	\    t4tbe:     -mthumb -mthumb-interwork -mbig-endian -march=armv4t ;	\    t5:        -mapcs-32 -mlittle-endian -march=armv5 ;			\    t5be:      -mapcs-32 -mbig-endian -march=armv5 ;			\    t5t:       -mthumb -mthumb-interwork -mlittle-endian -march=armv5 ;	\    t5tbe:     -mthumb -mthumb-interwork -mbig-endian -march=armv5 ;	\    txscale:   -mapcs-32 -mlittle-endian -mcpu=xscale ;			\    txscalebe: -mapcs-32 -mbig-endian -mcpu=xscale ;			\             : -march=armv4}"
end_define

begin_comment
comment|/* The -Q options from svr4.h aren't understood and must be removed.  */
end_comment

begin_undef
undef|#
directive|undef
name|ASM_SPEC
end_undef

begin_define
define|#
directive|define
name|ASM_SPEC
define|\
value|"%{v:-V} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*}"
end_define

begin_comment
comment|/* VxWorks does all the library stuff itself.  */
end_comment

begin_undef
undef|#
directive|undef
name|LIB_SPEC
end_undef

begin_define
define|#
directive|define
name|LIB_SPEC
value|""
end_define

begin_comment
comment|/* VxWorks uses object files, not loadable images.  make linker just    combine objects.  */
end_comment

begin_undef
undef|#
directive|undef
name|LINK_SPEC
end_undef

begin_define
define|#
directive|define
name|LINK_SPEC
value|"-r"
end_define

begin_comment
comment|/* VxWorks provides the functionality of crt0.o and friends itself.  */
end_comment

begin_undef
undef|#
directive|undef
name|STARTFILE_SPEC
end_undef

begin_define
define|#
directive|define
name|STARTFILE_SPEC
value|""
end_define

begin_undef
undef|#
directive|undef
name|ENDFILE_SPEC
end_undef

begin_define
define|#
directive|define
name|ENDFILE_SPEC
value|""
end_define

begin_undef
undef|#
directive|undef
name|TARGET_VERSION
end_undef

begin_define
define|#
directive|define
name|TARGET_VERSION
value|fputs (" (ARM/VxWorks)", stderr);
end_define

begin_comment
comment|/* There is no default multilib.  */
end_comment

begin_undef
undef|#
directive|undef
name|MULTILIB_DEFAULTS
end_undef

begin_undef
undef|#
directive|undef
name|ASM_FILE_START
end_undef

begin_define
define|#
directive|define
name|ASM_FILE_START
parameter_list|(
name|STREAM
parameter_list|)
define|\
value|do 									\     {									\       fprintf (STREAM, "%s Generated by GCC %s for ARM/VxWorks\n",	\ 	       ASM_COMMENT_START, version_string);			\     }									\   while (0)
end_define

end_unit

