begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|DRIVER_H
end_ifndef

begin_define
define|#
directive|define
name|DRIVER_H
end_define

begin_struct
struct|struct
name|driver_ops
block|{
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
comment|/* as appears in the config file */
name|int
function_decl|(
modifier|*
name|init
function_decl|)
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|deinit
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|wireless_event_init
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|wireless_event_deinit
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|)
function_decl|;
comment|/** 	 * set_8021x - enable/disable IEEE 802.1X support 	 * @priv: driver private data 	 * @enabled: 1 = enable, 0 = disable 	 * 	 * Returns: 0 on success, -1 on failure 	 * 	 * Configure the kernel driver to enable/disable 802.1X support. 	 * This may be an empty function if 802.1X support is always enabled. 	 */
name|int
function_decl|(
modifier|*
name|set_ieee8021x
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|int
name|enabled
parameter_list|)
function_decl|;
comment|/** 	 * set_privacy - enable/disable privacy 	 * @priv: driver private data 	 * @enabled: 1 = privacy enabled, 0 = disabled 	 * 	 * Return: 0 on success, -1 on failure 	 * 	 * Configure privacy. 	 */
name|int
function_decl|(
modifier|*
name|set_privacy
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|int
name|enabled
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_encryption
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
specifier|const
name|char
modifier|*
name|alg
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|idx
parameter_list|,
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_seqnum
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|idx
parameter_list|,
name|u8
modifier|*
name|seq
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|flush
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_generic_elem
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
specifier|const
name|u8
modifier|*
name|elem
parameter_list|,
name|size_t
name|elem_len
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|read_sta_data
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|struct
name|hostap_sta_driver_data
modifier|*
name|data
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|send_eapol
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|int
name|encrypt
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_sta_authorized
function_decl|)
parameter_list|(
name|void
modifier|*
name|driver
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|authorized
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sta_deauth
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reason
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sta_disassoc
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reason
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sta_remove
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_ssid
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|int
name|len
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_ssid
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|int
name|len
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_countermeasures
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|int
name|enabled
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|send_mgmt_frame
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
specifier|const
name|void
modifier|*
name|msg
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|set_assoc_ap
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sta_add
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|u16
name|aid
parameter_list|,
name|u16
name|capability
parameter_list|,
name|u8
name|tx_supp_rates
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_inact_sec
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|sta_clear_stats
function_decl|)
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_driver_init
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|init
operator|==
name|NULL
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|init
argument_list|(
name|hapd
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|hostapd_driver_deinit
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|deinit
operator|==
name|NULL
condition|)
return|return;
name|hapd
operator|->
name|driver
operator|->
name|deinit
argument_list|(
name|hapd
operator|->
name|driver
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_wireless_event_init
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|wireless_event_init
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|wireless_event_init
argument_list|(
name|hapd
operator|->
name|driver
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|void
name|hostapd_wireless_event_deinit
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|wireless_event_deinit
operator|==
name|NULL
condition|)
return|return;
name|hapd
operator|->
name|driver
operator|->
name|wireless_event_deinit
argument_list|(
name|hapd
operator|->
name|driver
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_set_ieee8021x
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|int
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_ieee8021x
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_ieee8021x
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|enabled
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_set_privacy
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|int
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_privacy
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_privacy
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|enabled
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_set_encryption
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|char
modifier|*
name|alg
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|idx
parameter_list|,
name|u8
modifier|*
name|key
parameter_list|,
name|size_t
name|key_len
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_encryption
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_encryption
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|alg
argument_list|,
name|addr
argument_list|,
name|idx
argument_list|,
name|key
argument_list|,
name|key_len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_get_seqnum
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|idx
parameter_list|,
name|u8
modifier|*
name|seq
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|get_seqnum
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|get_seqnum
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|addr
argument_list|,
name|idx
argument_list|,
name|seq
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_flush
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|flush
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|flush
argument_list|(
name|hapd
operator|->
name|driver
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_set_generic_elem
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|u8
modifier|*
name|elem
parameter_list|,
name|size_t
name|elem_len
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_generic_elem
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_generic_elem
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|elem
argument_list|,
name|elem_len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_read_sta_data
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|struct
name|hostap_sta_driver_data
modifier|*
name|data
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|read_sta_data
operator|==
name|NULL
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|read_sta_data
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|data
argument_list|,
name|addr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_send_eapol
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|u8
modifier|*
name|data
parameter_list|,
name|size_t
name|data_len
parameter_list|,
name|int
name|encrypt
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|send_eapol
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|send_eapol
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|addr
argument_list|,
name|data
argument_list|,
name|data_len
argument_list|,
name|encrypt
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_set_sta_authorized
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|authorized
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_sta_authorized
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_sta_authorized
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|addr
argument_list|,
name|authorized
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_sta_deauth
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reason
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|sta_deauth
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|sta_deauth
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|addr
argument_list|,
name|reason
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_sta_disassoc
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|int
name|reason
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|sta_disassoc
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|sta_disassoc
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|addr
argument_list|,
name|reason
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_sta_remove
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|sta_remove
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|sta_remove
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|addr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_get_ssid
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|get_ssid
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|get_ssid
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|buf
argument_list|,
name|len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_set_ssid
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|buf
parameter_list|,
name|size_t
name|len
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_ssid
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_ssid
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|buf
argument_list|,
name|len
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_send_mgmt_frame
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
specifier|const
name|void
modifier|*
name|msg
parameter_list|,
name|size_t
name|len
parameter_list|,
name|int
name|flags
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|send_mgmt_frame
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|send_mgmt_frame
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|msg
argument_list|,
name|len
argument_list|,
name|flags
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_set_assoc_ap
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_assoc_ap
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_assoc_ap
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|addr
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_set_countermeasures
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|int
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|set_countermeasures
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|set_countermeasures
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|enabled
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_sta_add
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|,
name|u16
name|aid
parameter_list|,
name|u16
name|capability
parameter_list|,
name|u8
name|tx_supp_rates
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|sta_add
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|sta_add
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|addr
argument_list|,
name|aid
argument_list|,
name|capability
argument_list|,
name|tx_supp_rates
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_get_inact_sec
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|get_inact_sec
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|get_inact_sec
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|addr
argument_list|)
return|;
block|}
end_function

begin_function_decl
name|void
name|driver_register
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|struct
name|driver_ops
modifier|*
name|ops
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|driver_unregister
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|struct
name|driver_ops
modifier|*
name|driver_lookup
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function
specifier|static
specifier|inline
name|int
name|hostapd_sta_clear_stats
parameter_list|(
name|struct
name|hostapd_data
modifier|*
name|hapd
parameter_list|,
name|u8
modifier|*
name|addr
parameter_list|)
block|{
if|if
condition|(
name|hapd
operator|->
name|driver
operator|==
name|NULL
operator|||
name|hapd
operator|->
name|driver
operator|->
name|sta_clear_stats
operator|==
name|NULL
condition|)
return|return
literal|0
return|;
return|return
name|hapd
operator|->
name|driver
operator|->
name|sta_clear_stats
argument_list|(
name|hapd
operator|->
name|driver
argument_list|,
name|addr
argument_list|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* DRIVER_H */
end_comment

end_unit

