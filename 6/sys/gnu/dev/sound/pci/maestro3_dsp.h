begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_comment
comment|/*-  *      ESS Technology allegro audio driver.  *  *      Copyright (C) 1992-2000  Don Kim (don.kim@esstech.com)  *  *      This program is free software; you can redistribute it and/or modify  *      it under the terms of the GNU General Public License as published by  *      the Free Software Foundation; either version 2 of the License, or  *      (at your option) any later version.  *  *      This program is distributed in the hope that it will be useful,  *      but WITHOUT ANY WARRANTY; without even the implied warranty of  *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *      GNU General Public License for more details.  *  *      You should have received a copy of the GNU General Public License  *      along with this program; if not, write to the Free Software  *      Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *  *      Hacked for the maestro3 driver by zab  */
end_comment

begin_comment
comment|/*  * DSP Code images  */
end_comment

begin_decl_stmt
name|u_int16_t
name|assp_kernel_image
index|[]
init|=
block|{
literal|0x7980
block|,
literal|0x0030
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x00FB
block|,
literal|0x7980
block|,
literal|0x00DD
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x0332
block|,
literal|0x7980
block|,
literal|0x0287
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x031A
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x022F
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x0063
block|,
literal|0x7980
block|,
literal|0x006B
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0x7980
block|,
literal|0x03B4
block|,
literal|0xBF80
block|,
literal|0x2C7C
block|,
literal|0x8806
block|,
literal|0x8804
block|,
literal|0xBE40
block|,
literal|0xBC20
block|,
literal|0xAE09
block|,
literal|0x1000
block|,
literal|0xAE0A
block|,
literal|0x0001
block|,
literal|0x6938
block|,
literal|0xEB08
block|,
literal|0x0053
block|,
literal|0x695A
block|,
literal|0xEB08
block|,
literal|0x00D6
block|,
literal|0x0009
block|,
literal|0x8B88
block|,
literal|0x6980
block|,
literal|0xE388
block|,
literal|0x0036
block|,
literal|0xBE30
block|,
literal|0xBC20
block|,
literal|0x6909
block|,
literal|0xB801
block|,
literal|0x9009
block|,
literal|0xBE41
block|,
literal|0xBE41
block|,
literal|0x6928
block|,
literal|0xEB88
block|,
literal|0x0078
block|,
literal|0xBE41
block|,
literal|0xBE40
block|,
literal|0x7980
block|,
literal|0x0038
block|,
literal|0xBE41
block|,
literal|0xBE41
block|,
literal|0x903A
block|,
literal|0x6938
block|,
literal|0xE308
block|,
literal|0x0056
block|,
literal|0x903A
block|,
literal|0xBE41
block|,
literal|0xBE40
block|,
literal|0xEF00
block|,
literal|0x903A
block|,
literal|0x6939
block|,
literal|0xE308
block|,
literal|0x005E
block|,
literal|0x903A
block|,
literal|0xEF00
block|,
literal|0x690B
block|,
literal|0x660C
block|,
literal|0xEF8C
block|,
literal|0x690A
block|,
literal|0x660C
block|,
literal|0x620B
block|,
literal|0x6609
block|,
literal|0xEF00
block|,
literal|0x6910
block|,
literal|0x660F
block|,
literal|0xEF04
block|,
literal|0xE388
block|,
literal|0x0075
block|,
literal|0x690E
block|,
literal|0x660F
block|,
literal|0x6210
block|,
literal|0x660D
block|,
literal|0xEF00
block|,
literal|0x690E
block|,
literal|0x660D
block|,
literal|0xEF00
block|,
literal|0xAE70
block|,
literal|0x0001
block|,
literal|0xBC20
block|,
literal|0xAE27
block|,
literal|0x0001
block|,
literal|0x6939
block|,
literal|0xEB08
block|,
literal|0x005D
block|,
literal|0x6926
block|,
literal|0xB801
block|,
literal|0x9026
block|,
literal|0x0026
block|,
literal|0x8B88
block|,
literal|0x6980
block|,
literal|0xE388
block|,
literal|0x00CB
block|,
literal|0x9028
block|,
literal|0x0D28
block|,
literal|0x4211
block|,
literal|0xE100
block|,
literal|0x007A
block|,
literal|0x4711
block|,
literal|0xE100
block|,
literal|0x00A0
block|,
literal|0x7A80
block|,
literal|0x0063
block|,
literal|0xB811
block|,
literal|0x660A
block|,
literal|0x6209
block|,
literal|0xE304
block|,
literal|0x007A
block|,
literal|0x0C0B
block|,
literal|0x4005
block|,
literal|0x100A
block|,
literal|0xBA01
block|,
literal|0x9012
block|,
literal|0x0C12
block|,
literal|0x4002
block|,
literal|0x7980
block|,
literal|0x00AF
block|,
literal|0x7A80
block|,
literal|0x006B
block|,
literal|0xBE02
block|,
literal|0x620E
block|,
literal|0x660D
block|,
literal|0xBA10
block|,
literal|0xE344
block|,
literal|0x007A
block|,
literal|0x0C10
block|,
literal|0x4005
block|,
literal|0x100E
block|,
literal|0xBA01
block|,
literal|0x9012
block|,
literal|0x0C12
block|,
literal|0x4002
block|,
literal|0x1003
block|,
literal|0xBA02
block|,
literal|0x9012
block|,
literal|0x0C12
block|,
literal|0x4000
block|,
literal|0x1003
block|,
literal|0xE388
block|,
literal|0x00BA
block|,
literal|0x1004
block|,
literal|0x7980
block|,
literal|0x00BC
block|,
literal|0x1004
block|,
literal|0xBA01
block|,
literal|0x9012
block|,
literal|0x0C12
block|,
literal|0x4001
block|,
literal|0x0C05
block|,
literal|0x4003
block|,
literal|0x0C06
block|,
literal|0x4004
block|,
literal|0x1011
block|,
literal|0xBFB0
block|,
literal|0x01FF
block|,
literal|0x9012
block|,
literal|0x0C12
block|,
literal|0x4006
block|,
literal|0xBC20
block|,
literal|0xEF00
block|,
literal|0xAE26
block|,
literal|0x1028
block|,
literal|0x6970
block|,
literal|0xBFD0
block|,
literal|0x0001
block|,
literal|0x9070
block|,
literal|0xE388
block|,
literal|0x007A
block|,
literal|0xAE28
block|,
literal|0x0000
block|,
literal|0xEF00
block|,
literal|0xAE70
block|,
literal|0x0300
block|,
literal|0x0C70
block|,
literal|0xB00C
block|,
literal|0xAE5A
block|,
literal|0x0000
block|,
literal|0xEF00
block|,
literal|0x7A80
block|,
literal|0x038A
block|,
literal|0x697F
block|,
literal|0xB801
block|,
literal|0x907F
block|,
literal|0x0056
block|,
literal|0x8B88
block|,
literal|0x0CA0
block|,
literal|0xB008
block|,
literal|0xAF71
block|,
literal|0xB000
block|,
literal|0x4E71
block|,
literal|0xE200
block|,
literal|0x00F3
block|,
literal|0xAE56
block|,
literal|0x1057
block|,
literal|0x0056
block|,
literal|0x0CA0
block|,
literal|0xB008
block|,
literal|0x8056
block|,
literal|0x7980
block|,
literal|0x03A1
block|,
literal|0x0810
block|,
literal|0xBFA0
block|,
literal|0x1059
block|,
literal|0xE304
block|,
literal|0x03A1
block|,
literal|0x8056
block|,
literal|0x7980
block|,
literal|0x03A1
block|,
literal|0x7A80
block|,
literal|0x038A
block|,
literal|0xBF01
block|,
literal|0xBE43
block|,
literal|0xBE59
block|,
literal|0x907C
block|,
literal|0x6937
block|,
literal|0xE388
block|,
literal|0x010D
block|,
literal|0xBA01
block|,
literal|0xE308
block|,
literal|0x010C
block|,
literal|0xAE71
block|,
literal|0x0004
block|,
literal|0x0C71
block|,
literal|0x5000
block|,
literal|0x6936
block|,
literal|0x9037
block|,
literal|0xBF0A
block|,
literal|0x109E
block|,
literal|0x8B8A
block|,
literal|0xAF80
block|,
literal|0x8014
block|,
literal|0x4C80
block|,
literal|0xBF0A
block|,
literal|0x0560
block|,
literal|0xF500
block|,
literal|0xBF0A
block|,
literal|0x0520
block|,
literal|0xB900
block|,
literal|0xBB17
block|,
literal|0x90A0
block|,
literal|0x6917
block|,
literal|0xE388
block|,
literal|0x0148
block|,
literal|0x0D17
block|,
literal|0xE100
block|,
literal|0x0127
block|,
literal|0xBF0C
block|,
literal|0x0578
block|,
literal|0xBF0D
block|,
literal|0x057C
block|,
literal|0x7980
block|,
literal|0x012B
block|,
literal|0xBF0C
block|,
literal|0x0538
block|,
literal|0xBF0D
block|,
literal|0x053C
block|,
literal|0x6900
block|,
literal|0xE308
block|,
literal|0x0135
block|,
literal|0x8B8C
block|,
literal|0xBE59
block|,
literal|0xBB07
block|,
literal|0x90A0
block|,
literal|0xBC20
block|,
literal|0x7980
block|,
literal|0x0157
block|,
literal|0x030C
block|,
literal|0x8B8B
block|,
literal|0xB903
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x013E
block|,
literal|0x69AC
block|,
literal|0x90AB
block|,
literal|0x69AD
block|,
literal|0x90AB
block|,
literal|0x0813
block|,
literal|0x660A
block|,
literal|0xE344
block|,
literal|0x0144
block|,
literal|0x0309
block|,
literal|0x830C
block|,
literal|0xBC20
block|,
literal|0x7980
block|,
literal|0x0157
block|,
literal|0x6955
block|,
literal|0xE388
block|,
literal|0x0157
block|,
literal|0x7C38
block|,
literal|0xBF0B
block|,
literal|0x0578
block|,
literal|0xF500
block|,
literal|0xBF0B
block|,
literal|0x0538
block|,
literal|0xB907
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x0156
block|,
literal|0x10AB
block|,
literal|0x90AA
block|,
literal|0x6974
block|,
literal|0xE388
block|,
literal|0x0163
block|,
literal|0xAE72
block|,
literal|0x0540
block|,
literal|0xF500
block|,
literal|0xAE72
block|,
literal|0x0500
block|,
literal|0xAE61
block|,
literal|0x103B
block|,
literal|0x7A80
block|,
literal|0x02F6
block|,
literal|0x6978
block|,
literal|0xE388
block|,
literal|0x0182
block|,
literal|0x8B8C
block|,
literal|0xBF0C
block|,
literal|0x0560
block|,
literal|0xE500
block|,
literal|0x7C40
block|,
literal|0x0814
block|,
literal|0xBA20
block|,
literal|0x8812
block|,
literal|0x733D
block|,
literal|0x7A80
block|,
literal|0x0380
block|,
literal|0x733E
block|,
literal|0x7A80
block|,
literal|0x0380
block|,
literal|0x8B8C
block|,
literal|0xBF0C
block|,
literal|0x056C
block|,
literal|0xE500
block|,
literal|0x7C40
block|,
literal|0x0814
block|,
literal|0xBA2C
block|,
literal|0x8812
block|,
literal|0x733F
block|,
literal|0x7A80
block|,
literal|0x0380
block|,
literal|0x7340
block|,
literal|0x7A80
block|,
literal|0x0380
block|,
literal|0x6975
block|,
literal|0xE388
block|,
literal|0x018E
block|,
literal|0xAE72
block|,
literal|0x0548
block|,
literal|0xF500
block|,
literal|0xAE72
block|,
literal|0x0508
block|,
literal|0xAE61
block|,
literal|0x1041
block|,
literal|0x7A80
block|,
literal|0x02F6
block|,
literal|0x6979
block|,
literal|0xE388
block|,
literal|0x01AD
block|,
literal|0x8B8C
block|,
literal|0xBF0C
block|,
literal|0x0560
block|,
literal|0xE500
block|,
literal|0x7C40
block|,
literal|0x0814
block|,
literal|0xBA18
block|,
literal|0x8812
block|,
literal|0x7343
block|,
literal|0x7A80
block|,
literal|0x0380
block|,
literal|0x7344
block|,
literal|0x7A80
block|,
literal|0x0380
block|,
literal|0x8B8C
block|,
literal|0xBF0C
block|,
literal|0x056C
block|,
literal|0xE500
block|,
literal|0x7C40
block|,
literal|0x0814
block|,
literal|0xBA24
block|,
literal|0x8812
block|,
literal|0x7345
block|,
literal|0x7A80
block|,
literal|0x0380
block|,
literal|0x7346
block|,
literal|0x7A80
block|,
literal|0x0380
block|,
literal|0x6976
block|,
literal|0xE388
block|,
literal|0x01B9
block|,
literal|0xAE72
block|,
literal|0x0558
block|,
literal|0xF500
block|,
literal|0xAE72
block|,
literal|0x0518
block|,
literal|0xAE61
block|,
literal|0x1047
block|,
literal|0x7A80
block|,
literal|0x02F6
block|,
literal|0x697A
block|,
literal|0xE388
block|,
literal|0x01D8
block|,
literal|0x8B8C
block|,
literal|0xBF0C
block|,
literal|0x0560
block|,
literal|0xE500
block|,
literal|0x7C40
block|,
literal|0x0814
block|,
literal|0xBA08
block|,
literal|0x8812
block|,
literal|0x7349
block|,
literal|0x7A80
block|,
literal|0x0380
block|,
literal|0x734A
block|,
literal|0x7A80
block|,
literal|0x0380
block|,
literal|0x8B8C
block|,
literal|0xBF0C
block|,
literal|0x056C
block|,
literal|0xE500
block|,
literal|0x7C40
block|,
literal|0x0814
block|,
literal|0xBA14
block|,
literal|0x8812
block|,
literal|0x734B
block|,
literal|0x7A80
block|,
literal|0x0380
block|,
literal|0x734C
block|,
literal|0x7A80
block|,
literal|0x0380
block|,
literal|0xBC21
block|,
literal|0xAE1C
block|,
literal|0x1090
block|,
literal|0x8B8A
block|,
literal|0xBF0A
block|,
literal|0x0560
block|,
literal|0xE500
block|,
literal|0x7C40
block|,
literal|0x0812
block|,
literal|0xB804
block|,
literal|0x8813
block|,
literal|0x8B8D
block|,
literal|0xBF0D
block|,
literal|0x056C
block|,
literal|0xE500
block|,
literal|0x7C40
block|,
literal|0x0815
block|,
literal|0xB804
block|,
literal|0x8811
block|,
literal|0x7A80
block|,
literal|0x034A
block|,
literal|0x8B8A
block|,
literal|0xBF0A
block|,
literal|0x0560
block|,
literal|0xE500
block|,
literal|0x7C40
block|,
literal|0x731F
block|,
literal|0xB903
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x01F9
block|,
literal|0x548A
block|,
literal|0xBE03
block|,
literal|0x98A0
block|,
literal|0x7320
block|,
literal|0xB903
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x0201
block|,
literal|0x548A
block|,
literal|0xBE03
block|,
literal|0x98A0
block|,
literal|0x1F20
block|,
literal|0x2F1F
block|,
literal|0x9826
block|,
literal|0xBC20
block|,
literal|0x6935
block|,
literal|0xE388
block|,
literal|0x03A1
block|,
literal|0x6933
block|,
literal|0xB801
block|,
literal|0x9033
block|,
literal|0xBFA0
block|,
literal|0x02EE
block|,
literal|0xE308
block|,
literal|0x03A1
block|,
literal|0x9033
block|,
literal|0xBF00
block|,
literal|0x6951
block|,
literal|0xE388
block|,
literal|0x021F
block|,
literal|0x7334
block|,
literal|0xBE80
block|,
literal|0x5760
block|,
literal|0xBE03
block|,
literal|0x9F7E
block|,
literal|0xBE59
block|,
literal|0x9034
block|,
literal|0x697E
block|,
literal|0x0D51
block|,
literal|0x9013
block|,
literal|0xBC20
block|,
literal|0x695C
block|,
literal|0xE388
block|,
literal|0x03A1
block|,
literal|0x735E
block|,
literal|0xBE80
block|,
literal|0x5760
block|,
literal|0xBE03
block|,
literal|0x9F7E
block|,
literal|0xBE59
block|,
literal|0x905E
block|,
literal|0x697E
block|,
literal|0x0D5C
block|,
literal|0x9013
block|,
literal|0x7980
block|,
literal|0x03A1
block|,
literal|0x7A80
block|,
literal|0x038A
block|,
literal|0xBF01
block|,
literal|0xBE43
block|,
literal|0x6977
block|,
literal|0xE388
block|,
literal|0x024E
block|,
literal|0xAE61
block|,
literal|0x104D
block|,
literal|0x0061
block|,
literal|0x8B88
block|,
literal|0x6980
block|,
literal|0xE388
block|,
literal|0x024E
block|,
literal|0x9071
block|,
literal|0x0D71
block|,
literal|0x000B
block|,
literal|0xAFA0
block|,
literal|0x8010
block|,
literal|0xAFA0
block|,
literal|0x8010
block|,
literal|0x0810
block|,
literal|0x660A
block|,
literal|0xE308
block|,
literal|0x0249
block|,
literal|0x0009
block|,
literal|0x0810
block|,
literal|0x660C
block|,
literal|0xE388
block|,
literal|0x024E
block|,
literal|0x800B
block|,
literal|0xBC20
block|,
literal|0x697B
block|,
literal|0xE388
block|,
literal|0x03A1
block|,
literal|0xBF0A
block|,
literal|0x109E
block|,
literal|0x8B8A
block|,
literal|0xAF80
block|,
literal|0x8014
block|,
literal|0x4C80
block|,
literal|0xE100
block|,
literal|0x0266
block|,
literal|0x697C
block|,
literal|0xBF90
block|,
literal|0x0560
block|,
literal|0x9072
block|,
literal|0x0372
block|,
literal|0x697C
block|,
literal|0xBF90
block|,
literal|0x0564
block|,
literal|0x9073
block|,
literal|0x0473
block|,
literal|0x7980
block|,
literal|0x0270
block|,
literal|0x697C
block|,
literal|0xBF90
block|,
literal|0x0520
block|,
literal|0x9072
block|,
literal|0x0372
block|,
literal|0x697C
block|,
literal|0xBF90
block|,
literal|0x0524
block|,
literal|0x9073
block|,
literal|0x0473
block|,
literal|0x697C
block|,
literal|0xB801
block|,
literal|0x907C
block|,
literal|0xBF0A
block|,
literal|0x10FD
block|,
literal|0x8B8A
block|,
literal|0xAF80
block|,
literal|0x8010
block|,
literal|0x734F
block|,
literal|0x548A
block|,
literal|0xBE03
block|,
literal|0x9880
block|,
literal|0xBC21
block|,
literal|0x7326
block|,
literal|0x548B
block|,
literal|0xBE03
block|,
literal|0x618B
block|,
literal|0x988C
block|,
literal|0xBE03
block|,
literal|0x6180
block|,
literal|0x9880
block|,
literal|0x7980
block|,
literal|0x03A1
block|,
literal|0x7A80
block|,
literal|0x038A
block|,
literal|0x0D28
block|,
literal|0x4711
block|,
literal|0xE100
block|,
literal|0x02BE
block|,
literal|0xAF12
block|,
literal|0x4006
block|,
literal|0x6912
block|,
literal|0xBFB0
block|,
literal|0x0C00
block|,
literal|0xE388
block|,
literal|0x02B6
block|,
literal|0xBFA0
block|,
literal|0x0800
block|,
literal|0xE388
block|,
literal|0x02B2
block|,
literal|0x6912
block|,
literal|0xBFB0
block|,
literal|0x0C00
block|,
literal|0xBFA0
block|,
literal|0x0400
block|,
literal|0xE388
block|,
literal|0x02A3
block|,
literal|0x6909
block|,
literal|0x900B
block|,
literal|0x7980
block|,
literal|0x02A5
block|,
literal|0xAF0B
block|,
literal|0x4005
block|,
literal|0x6901
block|,
literal|0x9005
block|,
literal|0x6902
block|,
literal|0x9006
block|,
literal|0x4311
block|,
literal|0xE100
block|,
literal|0x02ED
block|,
literal|0x6911
block|,
literal|0xBFC0
block|,
literal|0x2000
block|,
literal|0x9011
block|,
literal|0x7980
block|,
literal|0x02ED
block|,
literal|0x6909
block|,
literal|0x900B
block|,
literal|0x7980
block|,
literal|0x02B8
block|,
literal|0xAF0B
block|,
literal|0x4005
block|,
literal|0xAF05
block|,
literal|0x4003
block|,
literal|0xAF06
block|,
literal|0x4004
block|,
literal|0x7980
block|,
literal|0x02ED
block|,
literal|0xAF12
block|,
literal|0x4006
block|,
literal|0x6912
block|,
literal|0xBFB0
block|,
literal|0x0C00
block|,
literal|0xE388
block|,
literal|0x02E7
block|,
literal|0xBFA0
block|,
literal|0x0800
block|,
literal|0xE388
block|,
literal|0x02E3
block|,
literal|0x6912
block|,
literal|0xBFB0
block|,
literal|0x0C00
block|,
literal|0xBFA0
block|,
literal|0x0400
block|,
literal|0xE388
block|,
literal|0x02D4
block|,
literal|0x690D
block|,
literal|0x9010
block|,
literal|0x7980
block|,
literal|0x02D6
block|,
literal|0xAF10
block|,
literal|0x4005
block|,
literal|0x6901
block|,
literal|0x9005
block|,
literal|0x6902
block|,
literal|0x9006
block|,
literal|0x4311
block|,
literal|0xE100
block|,
literal|0x02ED
block|,
literal|0x6911
block|,
literal|0xBFC0
block|,
literal|0x2000
block|,
literal|0x9011
block|,
literal|0x7980
block|,
literal|0x02ED
block|,
literal|0x690D
block|,
literal|0x9010
block|,
literal|0x7980
block|,
literal|0x02E9
block|,
literal|0xAF10
block|,
literal|0x4005
block|,
literal|0xAF05
block|,
literal|0x4003
block|,
literal|0xAF06
block|,
literal|0x4004
block|,
literal|0xBC20
block|,
literal|0x6970
block|,
literal|0x9071
block|,
literal|0x7A80
block|,
literal|0x0078
block|,
literal|0x6971
block|,
literal|0x9070
block|,
literal|0x7980
block|,
literal|0x03A1
block|,
literal|0xBC20
block|,
literal|0x0361
block|,
literal|0x8B8B
block|,
literal|0x6980
block|,
literal|0xEF88
block|,
literal|0x0272
block|,
literal|0x0372
block|,
literal|0x7804
block|,
literal|0x9071
block|,
literal|0x0D71
block|,
literal|0x8B8A
block|,
literal|0x000B
block|,
literal|0xB903
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x0309
block|,
literal|0x69A8
block|,
literal|0x90AB
block|,
literal|0x69A8
block|,
literal|0x90AA
block|,
literal|0x0810
block|,
literal|0x660A
block|,
literal|0xE344
block|,
literal|0x030F
block|,
literal|0x0009
block|,
literal|0x0810
block|,
literal|0x660C
block|,
literal|0xE388
block|,
literal|0x0314
block|,
literal|0x800B
block|,
literal|0xBC20
block|,
literal|0x6961
block|,
literal|0xB801
block|,
literal|0x9061
block|,
literal|0x7980
block|,
literal|0x02F7
block|,
literal|0x7A80
block|,
literal|0x038A
block|,
literal|0x5D35
block|,
literal|0x0001
block|,
literal|0x6934
block|,
literal|0xB801
block|,
literal|0x9034
block|,
literal|0xBF0A
block|,
literal|0x109E
block|,
literal|0x8B8A
block|,
literal|0xAF80
block|,
literal|0x8014
block|,
literal|0x4880
block|,
literal|0xAE72
block|,
literal|0x0550
block|,
literal|0xF500
block|,
literal|0xAE72
block|,
literal|0x0510
block|,
literal|0xAE61
block|,
literal|0x1051
block|,
literal|0x7A80
block|,
literal|0x02F6
block|,
literal|0x7980
block|,
literal|0x03A1
block|,
literal|0x7A80
block|,
literal|0x038A
block|,
literal|0x5D35
block|,
literal|0x0002
block|,
literal|0x695E
block|,
literal|0xB801
block|,
literal|0x905E
block|,
literal|0xBF0A
block|,
literal|0x109E
block|,
literal|0x8B8A
block|,
literal|0xAF80
block|,
literal|0x8014
block|,
literal|0x4780
block|,
literal|0xAE72
block|,
literal|0x0558
block|,
literal|0xF500
block|,
literal|0xAE72
block|,
literal|0x0518
block|,
literal|0xAE61
block|,
literal|0x105C
block|,
literal|0x7A80
block|,
literal|0x02F6
block|,
literal|0x7980
block|,
literal|0x03A1
block|,
literal|0x001C
block|,
literal|0x8B88
block|,
literal|0x6980
block|,
literal|0xEF88
block|,
literal|0x901D
block|,
literal|0x0D1D
block|,
literal|0x100F
block|,
literal|0x6610
block|,
literal|0xE38C
block|,
literal|0x0358
block|,
literal|0x690E
block|,
literal|0x6610
block|,
literal|0x620F
block|,
literal|0x660D
block|,
literal|0xBA0F
block|,
literal|0xE301
block|,
literal|0x037A
block|,
literal|0x0410
block|,
literal|0x8B8A
block|,
literal|0xB903
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x036C
block|,
literal|0x6A8C
block|,
literal|0x61AA
block|,
literal|0x98AB
block|,
literal|0x6A8C
block|,
literal|0x61AB
block|,
literal|0x98AD
block|,
literal|0x6A8C
block|,
literal|0x61AD
block|,
literal|0x98A9
block|,
literal|0x6A8C
block|,
literal|0x61A9
block|,
literal|0x98AA
block|,
literal|0x7C04
block|,
literal|0x8B8B
block|,
literal|0x7C04
block|,
literal|0x8B8D
block|,
literal|0x7C04
block|,
literal|0x8B89
block|,
literal|0x7C04
block|,
literal|0x0814
block|,
literal|0x660E
block|,
literal|0xE308
block|,
literal|0x0379
block|,
literal|0x040D
block|,
literal|0x8410
block|,
literal|0xBC21
block|,
literal|0x691C
block|,
literal|0xB801
block|,
literal|0x901C
block|,
literal|0x7980
block|,
literal|0x034A
block|,
literal|0xB903
block|,
literal|0x8809
block|,
literal|0x8B8A
block|,
literal|0xBEC6
block|,
literal|0x0388
block|,
literal|0x54AC
block|,
literal|0xBE03
block|,
literal|0x618C
block|,
literal|0x98AA
block|,
literal|0xEF00
block|,
literal|0xBC20
block|,
literal|0xBE46
block|,
literal|0x0809
block|,
literal|0x906B
block|,
literal|0x080A
block|,
literal|0x906C
block|,
literal|0x080B
block|,
literal|0x906D
block|,
literal|0x081A
block|,
literal|0x9062
block|,
literal|0x081B
block|,
literal|0x9063
block|,
literal|0x081E
block|,
literal|0x9064
block|,
literal|0xBE59
block|,
literal|0x881E
block|,
literal|0x8065
block|,
literal|0x8166
block|,
literal|0x8267
block|,
literal|0x8368
block|,
literal|0x8469
block|,
literal|0x856A
block|,
literal|0xEF00
block|,
literal|0xBC20
block|,
literal|0x696B
block|,
literal|0x8809
block|,
literal|0x696C
block|,
literal|0x880A
block|,
literal|0x696D
block|,
literal|0x880B
block|,
literal|0x6962
block|,
literal|0x881A
block|,
literal|0x6963
block|,
literal|0x881B
block|,
literal|0x6964
block|,
literal|0x881E
block|,
literal|0x0065
block|,
literal|0x0166
block|,
literal|0x0267
block|,
literal|0x0368
block|,
literal|0x0469
block|,
literal|0x056A
block|,
literal|0xBE3A
block|,  }
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Mini sample rate converter code image  * that is to be loaded at 0x400 on the DSP.  */
end_comment

begin_decl_stmt
name|u_int16_t
name|assp_minisrc_image
index|[]
init|=
block|{
literal|0xBF80
block|,
literal|0x101E
block|,
literal|0x906E
block|,
literal|0x006E
block|,
literal|0x8B88
block|,
literal|0x6980
block|,
literal|0xEF88
block|,
literal|0x906F
block|,
literal|0x0D6F
block|,
literal|0x6900
block|,
literal|0xEB08
block|,
literal|0x0412
block|,
literal|0xBC20
block|,
literal|0x696E
block|,
literal|0xB801
block|,
literal|0x906E
block|,
literal|0x7980
block|,
literal|0x0403
block|,
literal|0xB90E
block|,
literal|0x8807
block|,
literal|0xBE43
block|,
literal|0xBF01
block|,
literal|0xBE47
block|,
literal|0xBE41
block|,
literal|0x7A80
block|,
literal|0x002A
block|,
literal|0xBE40
block|,
literal|0x3029
block|,
literal|0xEFCC
block|,
literal|0xBE41
block|,
literal|0x7A80
block|,
literal|0x0028
block|,
literal|0xBE40
block|,
literal|0x3028
block|,
literal|0xEFCC
block|,
literal|0x6907
block|,
literal|0xE308
block|,
literal|0x042A
block|,
literal|0x6909
block|,
literal|0x902C
block|,
literal|0x7980
block|,
literal|0x042C
block|,
literal|0x690D
block|,
literal|0x902C
block|,
literal|0x1009
block|,
literal|0x881A
block|,
literal|0x100A
block|,
literal|0xBA01
block|,
literal|0x881B
block|,
literal|0x100D
block|,
literal|0x881C
block|,
literal|0x100E
block|,
literal|0xBA01
block|,
literal|0x881D
block|,
literal|0xBF80
block|,
literal|0x00ED
block|,
literal|0x881E
block|,
literal|0x050C
block|,
literal|0x0124
block|,
literal|0xB904
block|,
literal|0x9027
block|,
literal|0x6918
block|,
literal|0xE308
block|,
literal|0x04B3
block|,
literal|0x902D
block|,
literal|0x6913
block|,
literal|0xBFA0
block|,
literal|0x7598
block|,
literal|0xF704
block|,
literal|0xAE2D
block|,
literal|0x00FF
block|,
literal|0x8B8D
block|,
literal|0x6919
block|,
literal|0xE308
block|,
literal|0x0463
block|,
literal|0x691A
block|,
literal|0xE308
block|,
literal|0x0456
block|,
literal|0xB907
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x0453
block|,
literal|0x10A9
block|,
literal|0x90AD
block|,
literal|0x7980
block|,
literal|0x047C
block|,
literal|0xB903
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x0460
block|,
literal|0x1889
block|,
literal|0x6C22
block|,
literal|0x90AD
block|,
literal|0x10A9
block|,
literal|0x6E23
block|,
literal|0x6C22
block|,
literal|0x90AD
block|,
literal|0x7980
block|,
literal|0x047C
block|,
literal|0x101A
block|,
literal|0xE308
block|,
literal|0x046F
block|,
literal|0xB903
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x046C
block|,
literal|0x10A9
block|,
literal|0x90A0
block|,
literal|0x90AD
block|,
literal|0x7980
block|,
literal|0x047C
block|,
literal|0xB901
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x047B
block|,
literal|0x1889
block|,
literal|0x6C22
block|,
literal|0x90A0
block|,
literal|0x90AD
block|,
literal|0x10A9
block|,
literal|0x6E23
block|,
literal|0x6C22
block|,
literal|0x90A0
block|,
literal|0x90AD
block|,
literal|0x692D
block|,
literal|0xE308
block|,
literal|0x049C
block|,
literal|0x0124
block|,
literal|0xB703
block|,
literal|0xB902
block|,
literal|0x8818
block|,
literal|0x8B89
block|,
literal|0x022C
block|,
literal|0x108A
block|,
literal|0x7C04
block|,
literal|0x90A0
block|,
literal|0x692B
block|,
literal|0x881F
block|,
literal|0x7E80
block|,
literal|0x055B
block|,
literal|0x692A
block|,
literal|0x8809
block|,
literal|0x8B89
block|,
literal|0x99A0
block|,
literal|0x108A
block|,
literal|0x90A0
block|,
literal|0x692B
block|,
literal|0x881F
block|,
literal|0x7E80
block|,
literal|0x055B
block|,
literal|0x692A
block|,
literal|0x8809
block|,
literal|0x8B89
block|,
literal|0x99AF
block|,
literal|0x7B99
block|,
literal|0x0484
block|,
literal|0x0124
block|,
literal|0x060F
block|,
literal|0x101B
block|,
literal|0x2013
block|,
literal|0x901B
block|,
literal|0xBFA0
block|,
literal|0x7FFF
block|,
literal|0xE344
block|,
literal|0x04AC
block|,
literal|0x901B
block|,
literal|0x8B89
block|,
literal|0x7A80
block|,
literal|0x051A
block|,
literal|0x6927
block|,
literal|0xBA01
block|,
literal|0x9027
block|,
literal|0x7A80
block|,
literal|0x0523
block|,
literal|0x6927
block|,
literal|0xE308
block|,
literal|0x049E
block|,
literal|0x7980
block|,
literal|0x050F
block|,
literal|0x0624
block|,
literal|0x1026
block|,
literal|0x2013
block|,
literal|0x9026
block|,
literal|0xBFA0
block|,
literal|0x7FFF
block|,
literal|0xE304
block|,
literal|0x04C0
block|,
literal|0x8B8D
block|,
literal|0x7A80
block|,
literal|0x051A
block|,
literal|0x7980
block|,
literal|0x04B4
block|,
literal|0x9026
block|,
literal|0x1013
block|,
literal|0x3026
block|,
literal|0x901B
block|,
literal|0x8B8D
block|,
literal|0x7A80
block|,
literal|0x051A
block|,
literal|0x7A80
block|,
literal|0x0523
block|,
literal|0x1027
block|,
literal|0xBA01
block|,
literal|0x9027
block|,
literal|0xE308
block|,
literal|0x04B4
block|,
literal|0x0124
block|,
literal|0x060F
block|,
literal|0x8B89
block|,
literal|0x691A
block|,
literal|0xE308
block|,
literal|0x04EA
block|,
literal|0x6919
block|,
literal|0xE388
block|,
literal|0x04E0
block|,
literal|0xB903
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x04DD
block|,
literal|0x1FA0
block|,
literal|0x2FAE
block|,
literal|0x98A9
block|,
literal|0x7980
block|,
literal|0x050F
block|,
literal|0xB901
block|,
literal|0x8818
block|,
literal|0xB907
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x04E7
block|,
literal|0x10EE
block|,
literal|0x90A9
block|,
literal|0x7980
block|,
literal|0x050F
block|,
literal|0x6919
block|,
literal|0xE308
block|,
literal|0x04FE
block|,
literal|0xB903
block|,
literal|0x8809
block|,
literal|0xBE46
block|,
literal|0xBEC6
block|,
literal|0x04FA
block|,
literal|0x17A0
block|,
literal|0xBE1E
block|,
literal|0x1FAE
block|,
literal|0xBFBF
block|,
literal|0xFF00
block|,
literal|0xBE13
block|,
literal|0xBFDF
block|,
literal|0x8080
block|,
literal|0x99A9
block|,
literal|0xBE47
block|,
literal|0x7980
block|,
literal|0x050F
block|,
literal|0xB901
block|,
literal|0x8809
block|,
literal|0xBEC6
block|,
literal|0x050E
block|,
literal|0x16A0
block|,
literal|0x26A0
block|,
literal|0xBFB7
block|,
literal|0xFF00
block|,
literal|0xBE1E
block|,
literal|0x1EA0
block|,
literal|0x2EAE
block|,
literal|0xBFBF
block|,
literal|0xFF00
block|,
literal|0xBE13
block|,
literal|0xBFDF
block|,
literal|0x8080
block|,
literal|0x99A9
block|,
literal|0x850C
block|,
literal|0x860F
block|,
literal|0x6907
block|,
literal|0xE388
block|,
literal|0x0516
block|,
literal|0x0D07
block|,
literal|0x8510
block|,
literal|0xBE59
block|,
literal|0x881E
block|,
literal|0xBE4A
block|,
literal|0xEF00
block|,
literal|0x101E
block|,
literal|0x901C
block|,
literal|0x101F
block|,
literal|0x901D
block|,
literal|0x10A0
block|,
literal|0x901E
block|,
literal|0x10A0
block|,
literal|0x901F
block|,
literal|0xEF00
block|,
literal|0x101E
block|,
literal|0x301C
block|,
literal|0x9020
block|,
literal|0x731B
block|,
literal|0x5420
block|,
literal|0xBE03
block|,
literal|0x9825
block|,
literal|0x1025
block|,
literal|0x201C
block|,
literal|0x9025
block|,
literal|0x7325
block|,
literal|0x5414
block|,
literal|0xBE03
block|,
literal|0x8B8E
block|,
literal|0x9880
block|,
literal|0x692F
block|,
literal|0xE388
block|,
literal|0x0539
block|,
literal|0xBE59
block|,
literal|0xBB07
block|,
literal|0x6180
block|,
literal|0x9880
block|,
literal|0x8BA0
block|,
literal|0x101F
block|,
literal|0x301D
block|,
literal|0x9021
block|,
literal|0x731B
block|,
literal|0x5421
block|,
literal|0xBE03
block|,
literal|0x982E
block|,
literal|0x102E
block|,
literal|0x201D
block|,
literal|0x902E
block|,
literal|0x732E
block|,
literal|0x5415
block|,
literal|0xBE03
block|,
literal|0x9880
block|,
literal|0x692F
block|,
literal|0xE388
block|,
literal|0x054F
block|,
literal|0xBE59
block|,
literal|0xBB07
block|,
literal|0x6180
block|,
literal|0x9880
block|,
literal|0x8BA0
block|,
literal|0x6918
block|,
literal|0xEF08
block|,
literal|0x7325
block|,
literal|0x5416
block|,
literal|0xBE03
block|,
literal|0x98A0
block|,
literal|0x732E
block|,
literal|0x5417
block|,
literal|0xBE03
block|,
literal|0x98A0
block|,
literal|0xEF00
block|,
literal|0x8BA0
block|,
literal|0xBEC6
block|,
literal|0x056B
block|,
literal|0xBE59
block|,
literal|0xBB04
block|,
literal|0xAA90
block|,
literal|0xBE04
block|,
literal|0xBE1E
block|,
literal|0x99E0
block|,
literal|0x8BE0
block|,
literal|0x69A0
block|,
literal|0x90D0
block|,
literal|0x69A0
block|,
literal|0x90D0
block|,
literal|0x081F
block|,
literal|0xB805
block|,
literal|0x881F
block|,
literal|0x8B90
block|,
literal|0x69A0
block|,
literal|0x90D0
block|,
literal|0x69A0
block|,
literal|0x9090
block|,
literal|0x8BD0
block|,
literal|0x8BD8
block|,
literal|0xBE1F
block|,
literal|0xEF00
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|,  }
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|u_int16_t
name|minisrc_lpf_image
index|[]
init|=
block|{
literal|0X0743
block|,
literal|0X1104
block|,
literal|0X0A4C
block|,
literal|0XF88D
block|,
literal|0X242C
block|,
literal|0X1023
block|,
literal|0X1AA9
block|,
literal|0X0B60
block|,
literal|0XEFDD
block|,
literal|0X186F
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * an arbitrary volume we set the internal volume settings to so that the  * ac97 volume range is a little less insane.  0x7fff is max.  */
end_comment

begin_define
define|#
directive|define
name|ARB_VOLUME
value|0x6800
end_define

begin_struct
specifier|static
struct|struct
name|play_vals
block|{
name|u_int16_t
name|addr
decl_stmt|,
name|val
decl_stmt|;
block|}
name|pv
index|[]
init|=
block|{
block|{
name|CDATA_LEFT_VOLUME
block|,
name|ARB_VOLUME
block|}
block|,
block|{
name|CDATA_RIGHT_VOLUME
block|,
name|ARB_VOLUME
block|}
block|,
block|{
name|SRC3_DIRECTION_OFFSET
block|,
literal|0
block|}
block|,
comment|/* +1, +2 are stereo/16 bit */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|3
block|,
literal|0x0000
block|}
block|,
comment|/* fraction? */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|4
block|,
literal|0
block|}
block|,
comment|/* first l */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|5
block|,
literal|0
block|}
block|,
comment|/* first r */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|6
block|,
literal|0
block|}
block|,
comment|/* second l */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|7
block|,
literal|0
block|}
block|,
comment|/* second r */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|8
block|,
literal|0
block|}
block|,
comment|/* delta l */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|9
block|,
literal|0
block|}
block|,
comment|/* delta r */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|10
block|,
literal|0x8000
block|}
block|,
comment|/* round */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|11
block|,
literal|0xFF00
block|}
block|,
comment|/* higher bute mark */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|13
block|,
literal|0
block|}
block|,
comment|/* temp0 */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|14
block|,
literal|0
block|}
block|,
comment|/* c fraction */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|15
block|,
literal|0
block|}
block|,
comment|/* counter */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|16
block|,
literal|8
block|}
block|,
comment|/* numin */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|17
block|,
literal|50
operator|*
literal|2
block|}
block|,
comment|/* numout */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|18
block|,
name|MINISRC_BIQUAD_STAGE
operator|-
literal|1
block|}
block|,
comment|/* numstage */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|20
block|,
literal|0
block|}
block|,
comment|/* filtertap */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|21
block|,
literal|0
block|}
comment|/* booster */
block|}
struct|;
end_struct

begin_struct
specifier|static
struct|struct
name|rec_vals
block|{
name|u_int16_t
name|addr
decl_stmt|,
name|val
decl_stmt|;
block|}
name|rv
index|[]
init|=
block|{
block|{
name|CDATA_LEFT_VOLUME
block|,
name|ARB_VOLUME
block|}
block|,
block|{
name|CDATA_RIGHT_VOLUME
block|,
name|ARB_VOLUME
block|}
block|,
block|{
name|SRC3_DIRECTION_OFFSET
block|,
literal|1
block|}
block|,
comment|/* +1, +2 are stereo/16 bit */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|3
block|,
literal|0x0000
block|}
block|,
comment|/* fraction? */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|4
block|,
literal|0
block|}
block|,
comment|/* first l */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|5
block|,
literal|0
block|}
block|,
comment|/* first r */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|6
block|,
literal|0
block|}
block|,
comment|/* second l */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|7
block|,
literal|0
block|}
block|,
comment|/* second r */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|8
block|,
literal|0
block|}
block|,
comment|/* delta l */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|9
block|,
literal|0
block|}
block|,
comment|/* delta r */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|10
block|,
literal|0x8000
block|}
block|,
comment|/* round */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|11
block|,
literal|0xFF00
block|}
block|,
comment|/* higher bute mark */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|13
block|,
literal|0
block|}
block|,
comment|/* temp0 */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|14
block|,
literal|0
block|}
block|,
comment|/* c fraction */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|15
block|,
literal|0
block|}
block|,
comment|/* counter */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|16
block|,
literal|50
block|}
block|,
comment|/* numin */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|17
block|,
literal|8
block|}
block|,
comment|/* numout */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|18
block|,
literal|0
block|}
block|,
comment|/* numstage */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|19
block|,
literal|0
block|}
block|,
comment|/* coef */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|20
block|,
literal|0
block|}
block|,
comment|/* filtertap */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|21
block|,
literal|0
block|}
block|,
comment|/* booster */
block|{
name|SRC3_DIRECTION_OFFSET
operator|+
literal|22
block|,
literal|0xff
block|}
comment|/* skip lpf */
block|}
struct|;
end_struct

end_unit

