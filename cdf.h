begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2008 Christos Zoulas  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS  * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED  * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_comment
comment|/*  * Info from: http://sc.openoffice.org/compdocfileformat.pdf   */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_H_CDF_
end_ifndef

begin_define
define|#
directive|define
name|_H_CDF_
end_define

begin_typedef
typedef|typedef
name|int32_t
name|cdf_secid_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|CDF_LOOP_LIMIT
value|10000
end_define

begin_define
define|#
directive|define
name|CDF_SECID_NULL
value|0
end_define

begin_define
define|#
directive|define
name|CDF_SECID_FREE
value|-1
end_define

begin_define
define|#
directive|define
name|CDF_SECID_END_OF_CHAIN
value|-2
end_define

begin_define
define|#
directive|define
name|CDF_SECID_SECTOR_ALLOCATION_TABLE
value|-3
end_define

begin_define
define|#
directive|define
name|CDF_SECID_MASTER_SECTOR_ALLOCATION_TABLE
value|-4
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|uint64_t
name|h_magic
decl_stmt|;
define|#
directive|define
name|CDF_MAGIC
value|0xE11AB1A1E011CFD0LL
name|uint64_t
name|h_uuid
index|[
literal|2
index|]
decl_stmt|;
name|uint16_t
name|h_revision
decl_stmt|;
name|uint16_t
name|h_version
decl_stmt|;
name|uint16_t
name|h_byte_order
decl_stmt|;
name|uint16_t
name|h_sec_size_p2
decl_stmt|;
name|uint16_t
name|h_short_sec_size_p2
decl_stmt|;
name|uint8_t
name|h_unused0
index|[
literal|10
index|]
decl_stmt|;
name|uint32_t
name|h_num_sectors_in_sat
decl_stmt|;
name|uint32_t
name|h_secid_first_directory
decl_stmt|;
name|uint8_t
name|h_unused1
index|[
literal|4
index|]
decl_stmt|;
name|uint32_t
name|h_min_size_standard_stream
decl_stmt|;
name|cdf_secid_t
name|h_secid_first_sector_in_short_sat
decl_stmt|;
name|uint32_t
name|h_num_sectors_in_short_sat
decl_stmt|;
name|cdf_secid_t
name|h_secid_first_sector_in_master_sat
decl_stmt|;
name|uint32_t
name|h_num_sectors_in_master_sat
decl_stmt|;
name|cdf_secid_t
name|h_master_sat
index|[
literal|436
operator|/
literal|4
index|]
decl_stmt|;
block|}
name|cdf_header_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|CDF_SEC_SIZE
parameter_list|(
name|h
parameter_list|)
value|(1<< (h)->h_sec_size_p2)
end_define

begin_define
define|#
directive|define
name|CDF_SEC_POS
parameter_list|(
name|h
parameter_list|,
name|secid
parameter_list|)
value|(CDF_SEC_SIZE(h) + (secid) * CDF_SEC_SIZE(h))
end_define

begin_define
define|#
directive|define
name|CDF_SHORT_SEC_SIZE
parameter_list|(
name|h
parameter_list|)
value|(1<< (h)->h_short_sec_size_p2)
end_define

begin_define
define|#
directive|define
name|CDF_SHORT_SEC_POS
parameter_list|(
name|h
parameter_list|,
name|secid
parameter_list|)
value|((secid) * CDF_SHORT_SEC_SIZE(h))
end_define

begin_typedef
typedef|typedef
name|int32_t
name|cdf_dirid_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|CDF_DIRID_NULL
value|-1
end_define

begin_typedef
typedef|typedef
name|int64_t
name|cdf_timestamp_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|CDF_BASE_YEAR
value|1601
end_define

begin_define
define|#
directive|define
name|CDF_TIME_PREC
value|10000000
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|uint16_t
name|d_name
index|[
literal|32
index|]
decl_stmt|;
name|uint16_t
name|d_namelen
decl_stmt|;
name|uint8_t
name|d_type
decl_stmt|;
define|#
directive|define
name|CDF_DIR_TYPE_EMPTY
value|0
define|#
directive|define
name|CDF_DIR_TYPE_USER_STORAGE
value|1
define|#
directive|define
name|CDF_DIR_TYPE_USER_STREAM
value|2
define|#
directive|define
name|CDF_DIR_TYPE_LOCKBYTES
value|3
define|#
directive|define
name|CDF_DIR_TYPE_PROPERTY
value|4
define|#
directive|define
name|CDF_DIR_TYPE_ROOT_STORAGE
value|5
name|uint8_t
name|d_color
decl_stmt|;
define|#
directive|define
name|CDF_DIR_COLOR_READ
value|0
define|#
directive|define
name|CDF_DIR_COLOR_BLACK
value|1
name|cdf_dirid_t
name|d_left_child
decl_stmt|;
name|cdf_dirid_t
name|d_right_child
decl_stmt|;
name|cdf_dirid_t
name|d_storage
decl_stmt|;
name|uint64_t
name|d_storage_uuid
index|[
literal|2
index|]
decl_stmt|;
name|uint32_t
name|d_flags
decl_stmt|;
name|cdf_timestamp_t
name|d_created
decl_stmt|;
name|cdf_timestamp_t
name|d_modified
decl_stmt|;
name|cdf_secid_t
name|d_stream_first_sector
decl_stmt|;
name|uint32_t
name|d_size
decl_stmt|;
name|uint32_t
name|d_unused0
decl_stmt|;
block|}
name|cdf_directory_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|CDF_DIRECTORY_SIZE
value|128
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|cdf_secid_t
modifier|*
name|sat_tab
decl_stmt|;
name|size_t
name|sat_len
decl_stmt|;
block|}
name|cdf_sat_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|cdf_directory_t
modifier|*
name|dir_tab
decl_stmt|;
name|size_t
name|dir_len
decl_stmt|;
block|}
name|cdf_dir_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|void
modifier|*
name|sst_tab
decl_stmt|;
name|size_t
name|sst_len
decl_stmt|;
name|size_t
name|sst_dirlen
decl_stmt|;
block|}
name|cdf_stream_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|uint32_t
name|cl_dword
decl_stmt|;
name|uint16_t
name|cl_word
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|cl_two
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|cl_six
index|[
literal|6
index|]
decl_stmt|;
block|}
name|cdf_classid_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|uint16_t
name|si_byte_order
decl_stmt|;
name|uint16_t
name|si_zero
decl_stmt|;
name|uint16_t
name|si_os_version
decl_stmt|;
name|uint16_t
name|si_os
decl_stmt|;
name|cdf_classid_t
name|si_class
decl_stmt|;
name|uint32_t
name|si_count
decl_stmt|;
block|}
name|cdf_summary_info_header_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|CDF_SECTION_DECLARATION_OFFSET
value|0x1c
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|cdf_classid_t
name|sd_class
decl_stmt|;
name|uint32_t
name|sd_offset
decl_stmt|;
block|}
name|cdf_section_declaration_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|uint32_t
name|sh_len
decl_stmt|;
name|uint32_t
name|sh_properties
decl_stmt|;
block|}
name|cdf_section_header_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|uint32_t
name|pi_id
decl_stmt|;
name|uint32_t
name|pi_type
decl_stmt|;
union|union
block|{
name|uint16_t
name|_pi_u16
decl_stmt|;
name|int16_t
name|_pi_s16
decl_stmt|;
name|uint32_t
name|_pi_u32
decl_stmt|;
name|int32_t
name|_pi_s32
decl_stmt|;
name|uint64_t
name|_pi_u64
decl_stmt|;
name|int64_t
name|_pi_s64
decl_stmt|;
name|cdf_timestamp_t
name|_pi_tp
decl_stmt|;
struct|struct
block|{
name|uint32_t
name|s_len
decl_stmt|;
specifier|const
name|char
modifier|*
name|s_buf
decl_stmt|;
block|}
name|_pi_str
struct|;
block|}
name|pi_val
union|;
define|#
directive|define
name|pi_u64
value|pi_val._pi_u64
define|#
directive|define
name|pi_s64
value|pi_val._pi_s64
define|#
directive|define
name|pi_u32
value|pi_val._pi_u32
define|#
directive|define
name|pi_s32
value|pi_val._pi_s32
define|#
directive|define
name|pi_u16
value|pi_val._pi_u16
define|#
directive|define
name|pi_s16
value|pi_val._pi_s16
define|#
directive|define
name|pi_tp
value|pi_val._pi_tp
define|#
directive|define
name|pi_str
value|pi_val._pi_str
block|}
name|cdf_property_info_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|CDF_ROUND
parameter_list|(
name|val
parameter_list|,
name|by
parameter_list|)
value|(((val) + (by) - 1)& ~((by) - 1))
end_define

begin_comment
comment|/* Variant type definitions */
end_comment

begin_define
define|#
directive|define
name|CDF_EMPTY
value|0x00000000
end_define

begin_define
define|#
directive|define
name|CDF_NULL
value|0x00000001
end_define

begin_define
define|#
directive|define
name|CDF_SIGNED16
value|0x00000002
end_define

begin_define
define|#
directive|define
name|CDF_SIGNED32
value|0x00000003
end_define

begin_define
define|#
directive|define
name|CDF_FLOAT
value|0x00000004
end_define

begin_define
define|#
directive|define
name|CDF_DOUBLE
value|0x00000005
end_define

begin_define
define|#
directive|define
name|CDF_CY
value|0x00000006
end_define

begin_define
define|#
directive|define
name|CDF_DATE
value|0x00000007
end_define

begin_define
define|#
directive|define
name|CDF_BSTR
value|0x00000008
end_define

begin_define
define|#
directive|define
name|CDF_DISPATCH
value|0x00000009
end_define

begin_define
define|#
directive|define
name|CDF_ERROR
value|0x0000000a
end_define

begin_define
define|#
directive|define
name|CDF_BOOL
value|0x0000000b
end_define

begin_define
define|#
directive|define
name|CDF_VARIANT
value|0x0000000c
end_define

begin_define
define|#
directive|define
name|CDF_UNKNOWN
value|0x0000000d
end_define

begin_define
define|#
directive|define
name|CDF_DECIMAL
value|0x0000000e
end_define

begin_define
define|#
directive|define
name|CDF_SIGNED8
value|0x00000010
end_define

begin_define
define|#
directive|define
name|CDF_UNSIGNED8
value|0x00000011
end_define

begin_define
define|#
directive|define
name|CDF_UNSIGNED16
value|0x00000012
end_define

begin_define
define|#
directive|define
name|CDF_UNSIGNED32
value|0x00000013
end_define

begin_define
define|#
directive|define
name|CDF_SIGNED64
value|0x00000014
end_define

begin_define
define|#
directive|define
name|CDF_UNSIGNED64
value|0x00000015
end_define

begin_define
define|#
directive|define
name|CDF_INT
value|0x00000016
end_define

begin_define
define|#
directive|define
name|CDF_UINT
value|0x00000017
end_define

begin_define
define|#
directive|define
name|CDF_VOID
value|0x00000018
end_define

begin_define
define|#
directive|define
name|CDF_HRESULT
value|0x00000019
end_define

begin_define
define|#
directive|define
name|CDF_PTR
value|0x0000001a
end_define

begin_define
define|#
directive|define
name|CDF_SAFEARRAY
value|0x0000001b
end_define

begin_define
define|#
directive|define
name|CDF_CARRAY
value|0x0000001c
end_define

begin_define
define|#
directive|define
name|CDF_USERDEFINED
value|0x0000001d
end_define

begin_define
define|#
directive|define
name|CDF_LENGTH32_STRING
value|0x0000001e
end_define

begin_define
define|#
directive|define
name|CDF_LENGTH32_WSTRING
value|0x0000001f
end_define

begin_define
define|#
directive|define
name|CDF_FILETIME
value|0x00000040
end_define

begin_define
define|#
directive|define
name|CDF_BLOB
value|0x00000041
end_define

begin_define
define|#
directive|define
name|CDF_STREAM
value|0x00000042
end_define

begin_define
define|#
directive|define
name|CDF_STORAGE
value|0x00000043
end_define

begin_define
define|#
directive|define
name|CDF_STREAMED_OBJECT
value|0x00000044
end_define

begin_define
define|#
directive|define
name|CDF_STORED_OBJECT
value|0x00000045
end_define

begin_define
define|#
directive|define
name|CDF_BLOB_OBJECT
value|0x00000046
end_define

begin_define
define|#
directive|define
name|CDF_CLIPBOARD
value|0x00000047
end_define

begin_define
define|#
directive|define
name|CDF_CLSID
value|0x00000048
end_define

begin_define
define|#
directive|define
name|CDF_VECTOR
value|0x00001000
end_define

begin_define
define|#
directive|define
name|CDF_ARRAY
value|0x00002000
end_define

begin_define
define|#
directive|define
name|CDF_BYREF
value|0x00004000
end_define

begin_define
define|#
directive|define
name|CDF_RESERVED
value|0x00008000
end_define

begin_define
define|#
directive|define
name|CDF_ILLEGAL
value|0x0000ffff
end_define

begin_define
define|#
directive|define
name|CDF_ILLEGALMASKED
value|0x00000fff
end_define

begin_define
define|#
directive|define
name|CDF_TYPEMASK
value|0x00000fff
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_CODE_PAGE
value|0x00000001
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_TITLE
value|0x00000002
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_SUBJECT
value|0x00000003
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_AUTHOR
value|0x00000004
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_KEYWORDS
value|0x00000005
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_COMMENTS
value|0x00000006
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_TEMPLATE
value|0x00000007
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_LAST_SAVED_BY
value|0x00000008
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_REVISION_NUMBER
value|0x00000009
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_TOTAL_EDITING_TIME
value|0x0000000a
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_LAST_PRINTED
value|0X0000000b
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_CREATE_TIME
value|0x0000000c
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_LAST_SAVED_TIME
value|0x0000000d
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_NUMBER_OF_PAGES
value|0x0000000e
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_NUMBER_OF_WORDS
value|0x0000000f
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_NUMBER_OF_CHARACTERS
value|0x00000010
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_THUMBNAIL
value|0x00000011
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_NAME_OF_APPLICATION
value|0x00000012
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_SECURITY
value|0x00000013
end_define

begin_define
define|#
directive|define
name|CDF_PROPERTY_LOCALE_ID
value|0x80000000
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|int
name|i_fd
decl_stmt|;
specifier|const
name|unsigned
name|char
modifier|*
name|i_buf
decl_stmt|;
name|size_t
name|i_len
decl_stmt|;
block|}
name|cdf_info_t
typedef|;
end_typedef

begin_struct_decl
struct_decl|struct
name|timespec
struct_decl|;
end_struct_decl

begin_function_decl
name|int
name|cdf_timestamp_to_timespec
parameter_list|(
name|struct
name|timespec
modifier|*
parameter_list|,
name|cdf_timestamp_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_timespec_to_timestamp
parameter_list|(
name|cdf_timestamp_t
modifier|*
parameter_list|,
specifier|const
name|struct
name|timespec
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_read_header
parameter_list|(
specifier|const
name|cdf_info_t
modifier|*
parameter_list|,
name|cdf_header_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cdf_swap_header
parameter_list|(
name|cdf_header_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cdf_unpack_header
parameter_list|(
name|cdf_header_t
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cdf_swap_dir
parameter_list|(
name|cdf_directory_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cdf_unpack_dir
parameter_list|(
name|cdf_directory_t
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cdf_swap_class
parameter_list|(
name|cdf_classid_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ssize_t
name|cdf_read_sector
parameter_list|(
specifier|const
name|cdf_info_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|size_t
parameter_list|,
specifier|const
name|cdf_header_t
modifier|*
parameter_list|,
name|cdf_secid_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ssize_t
name|cdf_read_short_sector
parameter_list|(
specifier|const
name|cdf_stream_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|size_t
parameter_list|,
specifier|const
name|cdf_header_t
modifier|*
parameter_list|,
name|cdf_secid_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_read_sat
parameter_list|(
specifier|const
name|cdf_info_t
modifier|*
parameter_list|,
name|cdf_header_t
modifier|*
parameter_list|,
name|cdf_sat_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|cdf_count_chain
parameter_list|(
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
name|cdf_secid_t
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_read_long_sector_chain
parameter_list|(
specifier|const
name|cdf_info_t
modifier|*
parameter_list|,
specifier|const
name|cdf_header_t
modifier|*
parameter_list|,
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
name|cdf_secid_t
parameter_list|,
name|size_t
parameter_list|,
name|cdf_stream_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_read_short_sector_chain
parameter_list|(
specifier|const
name|cdf_header_t
modifier|*
parameter_list|,
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
specifier|const
name|cdf_stream_t
modifier|*
parameter_list|,
name|cdf_secid_t
parameter_list|,
name|size_t
parameter_list|,
name|cdf_stream_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_read_sector_chain
parameter_list|(
specifier|const
name|cdf_info_t
modifier|*
parameter_list|,
specifier|const
name|cdf_header_t
modifier|*
parameter_list|,
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
specifier|const
name|cdf_stream_t
modifier|*
parameter_list|,
name|cdf_secid_t
parameter_list|,
name|size_t
parameter_list|,
name|cdf_stream_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_read_dir
parameter_list|(
specifier|const
name|cdf_info_t
modifier|*
parameter_list|,
specifier|const
name|cdf_header_t
modifier|*
parameter_list|,
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
name|cdf_dir_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_read_ssat
parameter_list|(
specifier|const
name|cdf_info_t
modifier|*
parameter_list|,
specifier|const
name|cdf_header_t
modifier|*
parameter_list|,
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
name|cdf_sat_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_read_short_stream
parameter_list|(
specifier|const
name|cdf_info_t
modifier|*
parameter_list|,
specifier|const
name|cdf_header_t
modifier|*
parameter_list|,
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
specifier|const
name|cdf_dir_t
modifier|*
parameter_list|,
name|cdf_stream_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_read_property_info
parameter_list|(
specifier|const
name|cdf_stream_t
modifier|*
parameter_list|,
name|uint32_t
parameter_list|,
name|cdf_property_info_t
modifier|*
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_read_summary_info
parameter_list|(
specifier|const
name|cdf_info_t
modifier|*
parameter_list|,
specifier|const
name|cdf_header_t
modifier|*
parameter_list|,
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
specifier|const
name|cdf_stream_t
modifier|*
parameter_list|,
specifier|const
name|cdf_dir_t
modifier|*
parameter_list|,
name|cdf_stream_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_unpack_summary_info
parameter_list|(
specifier|const
name|cdf_stream_t
modifier|*
parameter_list|,
name|cdf_summary_info_header_t
modifier|*
parameter_list|,
name|cdf_property_info_t
modifier|*
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_print_classid
parameter_list|(
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
specifier|const
name|cdf_classid_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_print_property_name
parameter_list|(
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cdf_print_elapsed_time
parameter_list|(
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|cdf_timestamp_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint16_t
name|cdf_tole2
parameter_list|(
name|uint16_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|cdf_tole4
parameter_list|(
name|uint32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint64_t
name|cdf_tole8
parameter_list|(
name|uint64_t
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|CDF_DEBUG
end_ifdef

begin_function_decl
name|void
name|cdf_dump_header
parameter_list|(
specifier|const
name|cdf_header_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cdf_dump_sat
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cdf_dump
parameter_list|(
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cdf_dump_stream
parameter_list|(
specifier|const
name|cdf_header_t
modifier|*
parameter_list|,
specifier|const
name|cdf_stream_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cdf_dump_dir
parameter_list|(
specifier|const
name|cdf_info_t
modifier|*
parameter_list|,
specifier|const
name|cdf_header_t
modifier|*
parameter_list|,
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
specifier|const
name|cdf_sat_t
modifier|*
parameter_list|,
specifier|const
name|cdf_stream_t
modifier|*
parameter_list|,
specifier|const
name|cdf_dir_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cdf_dump_property_info
parameter_list|(
specifier|const
name|cdf_property_info_t
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cdf_dump_summary_info
parameter_list|(
specifier|const
name|cdf_header_t
modifier|*
parameter_list|,
specifier|const
name|cdf_stream_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _H_CDF_ */
end_comment

end_unit

