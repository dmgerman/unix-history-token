begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Copyright (C) 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.     This file is part of GCC.     GCC is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2, or (at your option)    any later version.     GCC is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License    along with GCC; see the file COPYING.  If not, write to    the Free Software Foundation, 51 Franklin Street, Fifth Floor,    Boston, MA 02110-1301, USA.  */
end_comment

begin_comment
comment|/* As a special exception, if you include this header file into source    files compiled by GCC, this header file does not by itself cause    the resulting executable to be covered by the GNU General Public    License.  This exception does not however invalidate any other    reasons why the executable file might be covered by the GNU General    Public License.  */
end_comment

begin_comment
comment|/* Implemented from the specification included in the Intel C++ Compiler    User Guide and Reference, version 9.0.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_EMMINTRIN_H_INCLUDED
end_ifndef

begin_define
define|#
directive|define
name|_EMMINTRIN_H_INCLUDED
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__SSE2__
end_ifdef

begin_include
include|#
directive|include
file|<xmmintrin.h>
end_include

begin_comment
comment|/* SSE2 */
end_comment

begin_typedef
typedef|typedef
name|double
name|__v2df
name|__attribute__
typedef|((
name|__vector_size__
typedef|(16)));
end_typedef

begin_typedef
typedef|typedef
name|long
name|long
name|__v2di
name|__attribute__
typedef|((
name|__vector_size__
typedef|(16)));
end_typedef

begin_typedef
typedef|typedef
name|int
name|__v4si
name|__attribute__
typedef|((
name|__vector_size__
typedef|(16)));
end_typedef

begin_typedef
typedef|typedef
name|short
name|__v8hi
name|__attribute__
typedef|((
name|__vector_size__
typedef|(16)));
end_typedef

begin_typedef
typedef|typedef
name|char
name|__v16qi
name|__attribute__
typedef|((
name|__vector_size__
typedef|(16)));
end_typedef

begin_comment
comment|/* The Intel API is flexible enough that we must allow aliasing with other    vector types, and their scalar components.  */
end_comment

begin_typedef
typedef|typedef
name|long
name|long
name|__m128i
name|__attribute__
typedef|((
name|__vector_size__
typedef|(16)
operator|,
typedef|__may_alias__));
end_typedef

begin_typedef
typedef|typedef
name|double
name|__m128d
name|__attribute__
typedef|((
name|__vector_size__
typedef|(16)
operator|,
typedef|__may_alias__));
end_typedef

begin_comment
comment|/* Create a selector for use with the SHUFPD instruction.  */
end_comment

begin_define
define|#
directive|define
name|_MM_SHUFFLE2
parameter_list|(
name|fp1
parameter_list|,
name|fp0
parameter_list|)
define|\
value|(((fp1)<< 1) | (fp0))
end_define

begin_comment
comment|/* Create a vector with element 0 as F and the rest zero.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set_sd
argument_list|(
name|double
name|__F
argument_list|)
block|{
return|return
name|__extension__
argument_list|(
argument|__m128d
argument_list|)
block|{
name|__F
block|,
literal|0
block|}
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Create a vector with both elements equal to F.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set1_pd
argument_list|(
name|double
name|__F
argument_list|)
block|{
return|return
name|__extension__
argument_list|(
argument|__m128d
argument_list|)
block|{
name|__F
block|,
name|__F
block|}
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set_pd1
argument_list|(
name|double
name|__F
argument_list|)
block|{
return|return
name|_mm_set1_pd
argument_list|(
name|__F
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Create a vector with the lower value X and upper value W.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set_pd
argument_list|(
name|double
name|__W
argument_list|,
name|double
name|__X
argument_list|)
block|{
return|return
name|__extension__
argument_list|(
argument|__m128d
argument_list|)
block|{
name|__X
block|,
name|__W
block|}
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Create a vector with the lower value W and upper value X.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_setr_pd
argument_list|(
name|double
name|__W
argument_list|,
name|double
name|__X
argument_list|)
block|{
return|return
name|__extension__
argument_list|(
argument|__m128d
argument_list|)
block|{
name|__W
block|,
name|__X
block|}
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Create a vector of zeros.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_setzero_pd
argument_list|(
name|void
argument_list|)
block|{
return|return
name|__extension__
argument_list|(
argument|__m128d
argument_list|)
block|{
literal|0.0
block|,
literal|0.0
block|}
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Sets the low DPFP value of A from the low value of B.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_move_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_movsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Load two DPFP values from P.  The address must be 16-byte aligned.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_load_pd
argument_list|(
name|double
specifier|const
operator|*
name|__P
argument_list|)
block|{
return|return
operator|*
operator|(
name|__m128d
operator|*
operator|)
name|__P
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Load two DPFP values from P.  The address need not be 16-byte aligned.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_loadu_pd
argument_list|(
name|double
specifier|const
operator|*
name|__P
argument_list|)
block|{
return|return
name|__builtin_ia32_loadupd
argument_list|(
name|__P
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Create a vector with all two elements equal to *P.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_load1_pd
argument_list|(
name|double
specifier|const
operator|*
name|__P
argument_list|)
block|{
return|return
name|_mm_set1_pd
argument_list|(
operator|*
name|__P
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Create a vector with element 0 as *P and the rest zero.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_load_sd
argument_list|(
name|double
specifier|const
operator|*
name|__P
argument_list|)
block|{
return|return
name|_mm_set_sd
argument_list|(
operator|*
name|__P
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_load_pd1
argument_list|(
name|double
specifier|const
operator|*
name|__P
argument_list|)
block|{
return|return
name|_mm_load1_pd
argument_list|(
name|__P
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Load two DPFP values in reverse order.  The address must be aligned.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_loadr_pd
argument_list|(
name|double
specifier|const
operator|*
name|__P
argument_list|)
block|{
name|__m128d
name|__tmp
init|=
name|_mm_load_pd
argument_list|(
name|__P
argument_list|)
decl_stmt|;
return|return
name|__builtin_ia32_shufpd
argument_list|(
name|__tmp
argument_list|,
name|__tmp
argument_list|,
name|_MM_SHUFFLE2
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Store two DPFP values.  The address must be 16-byte aligned.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_store_pd
argument_list|(
name|double
operator|*
name|__P
argument_list|,
name|__m128d
name|__A
argument_list|)
block|{
operator|*
operator|(
name|__m128d
operator|*
operator|)
name|__P
operator|=
name|__A
expr_stmt|;
block|}
end_decl_stmt

begin_comment
comment|/* Store two DPFP values.  The address need not be 16-byte aligned.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_storeu_pd
argument_list|(
name|double
operator|*
name|__P
argument_list|,
name|__m128d
name|__A
argument_list|)
block|{
name|__builtin_ia32_storeupd
argument_list|(
name|__P
argument_list|,
name|__A
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_comment
comment|/* Stores the lower DPFP value.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_store_sd
argument_list|(
name|double
operator|*
name|__P
argument_list|,
name|__m128d
name|__A
argument_list|)
block|{
operator|*
name|__P
operator|=
name|__builtin_ia32_vec_ext_v2df
argument_list|(
name|__A
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|double
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsd_f64
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
name|__builtin_ia32_vec_ext_v2df
argument_list|(
name|__A
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_storel_pd
argument_list|(
name|double
operator|*
name|__P
argument_list|,
name|__m128d
name|__A
argument_list|)
block|{
name|_mm_store_sd
argument_list|(
name|__P
argument_list|,
name|__A
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_comment
comment|/* Stores the upper DPFP value.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_storeh_pd
argument_list|(
name|double
operator|*
name|__P
argument_list|,
name|__m128d
name|__A
argument_list|)
block|{
operator|*
name|__P
operator|=
name|__builtin_ia32_vec_ext_v2df
argument_list|(
name|__A
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_comment
comment|/* Store the lower DPFP value across two words.    The address must be 16-byte aligned.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_store1_pd
argument_list|(
name|double
operator|*
name|__P
argument_list|,
name|__m128d
name|__A
argument_list|)
block|{
name|_mm_store_pd
argument_list|(
name|__P
argument_list|,
name|__builtin_ia32_shufpd
argument_list|(
name|__A
argument_list|,
name|__A
argument_list|,
name|_MM_SHUFFLE2
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_store_pd1
argument_list|(
name|double
operator|*
name|__P
argument_list|,
name|__m128d
name|__A
argument_list|)
block|{
name|_mm_store1_pd
argument_list|(
name|__P
argument_list|,
name|__A
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_comment
comment|/* Store two DPFP values in reverse order.  The address must be aligned.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_storer_pd
argument_list|(
name|double
operator|*
name|__P
argument_list|,
name|__m128d
name|__A
argument_list|)
block|{
name|_mm_store_pd
argument_list|(
name|__P
argument_list|,
name|__builtin_ia32_shufpd
argument_list|(
name|__A
argument_list|,
name|__A
argument_list|,
name|_MM_SHUFFLE2
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsi128_si32
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
name|__builtin_ia32_vec_ext_v4si
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|__x86_64__
end_ifdef

begin_comment
comment|/* Intel intrinsic.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|long
name|long
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsi128_si64
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
name|__builtin_ia32_vec_ext_v2di
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Microsoft intrinsic.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|long
name|long
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsi128_si64x
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
name|__builtin_ia32_vec_ext_v2di
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_add_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_addpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_add_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_addsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sub_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_subpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sub_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_subsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_mul_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_mulpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_mul_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_mulsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_div_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_divpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_div_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_divsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sqrt_pd
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_sqrtpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Return pair {sqrt (A[0), B[1]}.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sqrt_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
name|__v2df
name|__tmp
init|=
name|__builtin_ia32_movsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
decl_stmt|;
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_sqrtsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__tmp
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_min_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_minpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_min_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_minsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_max_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_maxpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_max_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_maxsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_and_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_andpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_andnot_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_andnpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_or_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_orpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_xor_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_xorpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpeq_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpeqpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmplt_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpltpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmple_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmplepd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpgt_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpgtpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpge_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpgepd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpneq_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpneqpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpnlt_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpnltpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpnle_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpnlepd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpngt_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpngtpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpnge_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpngepd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpord_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpordpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpunord_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpunordpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpeq_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpeqsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmplt_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpltsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmple_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmplesd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpgt_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_movsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__builtin_ia32_cmpltsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__B
argument_list|,
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpge_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_movsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__builtin_ia32_cmplesd
argument_list|(
operator|(
name|__v2df
operator|)
name|__B
argument_list|,
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpneq_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpneqsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpnlt_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpnltsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpnle_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpnlesd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpngt_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_movsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__builtin_ia32_cmpnltsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__B
argument_list|,
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpnge_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_movsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__builtin_ia32_cmpnlesd
argument_list|(
operator|(
name|__v2df
operator|)
name|__B
argument_list|,
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpord_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpordsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpunord_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cmpunordsd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_comieq_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
name|__builtin_ia32_comisdeq
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_comilt_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
name|__builtin_ia32_comisdlt
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_comile_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
name|__builtin_ia32_comisdle
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_comigt_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
name|__builtin_ia32_comisdgt
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_comige_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
name|__builtin_ia32_comisdge
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_comineq_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
name|__builtin_ia32_comisdneq
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_ucomieq_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
name|__builtin_ia32_ucomisdeq
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_ucomilt_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
name|__builtin_ia32_ucomisdlt
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_ucomile_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
name|__builtin_ia32_ucomisdle
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_ucomigt_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
name|__builtin_ia32_ucomisdgt
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_ucomige_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
name|__builtin_ia32_ucomisdge
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_ucomineq_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
name|__builtin_ia32_ucomisdneq
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Create a vector of Qi, where i is the element number.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set_epi64x
argument_list|(
name|long
name|long
name|__q1
argument_list|,
name|long
name|long
name|__q0
argument_list|)
block|{
return|return
name|__extension__
argument_list|(
argument|__m128i
argument_list|)
operator|(
name|__v2di
operator|)
block|{
name|__q0
block|,
name|__q1
block|}
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set_epi64
argument_list|(
name|__m64
name|__q1
argument_list|,
name|__m64
name|__q0
argument_list|)
block|{
return|return
name|_mm_set_epi64x
argument_list|(
operator|(
name|long
name|long
operator|)
name|__q1
argument_list|,
operator|(
name|long
name|long
operator|)
name|__q0
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set_epi32
argument_list|(
name|int
name|__q3
argument_list|,
name|int
name|__q2
argument_list|,
name|int
name|__q1
argument_list|,
name|int
name|__q0
argument_list|)
block|{
return|return
name|__extension__
argument_list|(
argument|__m128i
argument_list|)
operator|(
name|__v4si
operator|)
block|{
name|__q0
block|,
name|__q1
block|,
name|__q2
block|,
name|__q3
block|}
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set_epi16
argument_list|(
name|short
name|__q7
argument_list|,
name|short
name|__q6
argument_list|,
name|short
name|__q5
argument_list|,
name|short
name|__q4
argument_list|,
name|short
name|__q3
argument_list|,
name|short
name|__q2
argument_list|,
name|short
name|__q1
argument_list|,
name|short
name|__q0
argument_list|)
block|{
return|return
name|__extension__
argument_list|(
argument|__m128i
argument_list|)
operator|(
name|__v8hi
operator|)
block|{
name|__q0
block|,
name|__q1
block|,
name|__q2
block|,
name|__q3
block|,
name|__q4
block|,
name|__q5
block|,
name|__q6
block|,
name|__q7
block|}
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set_epi8
argument_list|(
name|char
name|__q15
argument_list|,
name|char
name|__q14
argument_list|,
name|char
name|__q13
argument_list|,
name|char
name|__q12
argument_list|,
name|char
name|__q11
argument_list|,
name|char
name|__q10
argument_list|,
name|char
name|__q09
argument_list|,
name|char
name|__q08
argument_list|,
name|char
name|__q07
argument_list|,
name|char
name|__q06
argument_list|,
name|char
name|__q05
argument_list|,
name|char
name|__q04
argument_list|,
name|char
name|__q03
argument_list|,
name|char
name|__q02
argument_list|,
name|char
name|__q01
argument_list|,
name|char
name|__q00
argument_list|)
block|{
return|return
name|__extension__
argument_list|(
argument|__m128i
argument_list|)
operator|(
name|__v16qi
operator|)
block|{
name|__q00
block|,
name|__q01
block|,
name|__q02
block|,
name|__q03
block|,
name|__q04
block|,
name|__q05
block|,
name|__q06
block|,
name|__q07
block|,
name|__q08
block|,
name|__q09
block|,
name|__q10
block|,
name|__q11
block|,
name|__q12
block|,
name|__q13
block|,
name|__q14
block|,
name|__q15
block|}
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Set all of the elements of the vector to A.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set1_epi64x
argument_list|(
name|long
name|long
name|__A
argument_list|)
block|{
return|return
name|_mm_set_epi64x
argument_list|(
name|__A
argument_list|,
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set1_epi64
argument_list|(
name|__m64
name|__A
argument_list|)
block|{
return|return
name|_mm_set_epi64
argument_list|(
name|__A
argument_list|,
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set1_epi32
argument_list|(
name|int
name|__A
argument_list|)
block|{
return|return
name|_mm_set_epi32
argument_list|(
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set1_epi16
argument_list|(
name|short
name|__A
argument_list|)
block|{
return|return
name|_mm_set_epi16
argument_list|(
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_set1_epi8
argument_list|(
name|char
name|__A
argument_list|)
block|{
return|return
name|_mm_set_epi8
argument_list|(
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|,
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Create a vector of Qi, where i is the element number.    The parameter order is reversed from the _mm_set_epi* functions.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_setr_epi64
argument_list|(
name|__m64
name|__q0
argument_list|,
name|__m64
name|__q1
argument_list|)
block|{
return|return
name|_mm_set_epi64
argument_list|(
name|__q1
argument_list|,
name|__q0
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_setr_epi32
argument_list|(
name|int
name|__q0
argument_list|,
name|int
name|__q1
argument_list|,
name|int
name|__q2
argument_list|,
name|int
name|__q3
argument_list|)
block|{
return|return
name|_mm_set_epi32
argument_list|(
name|__q3
argument_list|,
name|__q2
argument_list|,
name|__q1
argument_list|,
name|__q0
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_setr_epi16
argument_list|(
name|short
name|__q0
argument_list|,
name|short
name|__q1
argument_list|,
name|short
name|__q2
argument_list|,
name|short
name|__q3
argument_list|,
name|short
name|__q4
argument_list|,
name|short
name|__q5
argument_list|,
name|short
name|__q6
argument_list|,
name|short
name|__q7
argument_list|)
block|{
return|return
name|_mm_set_epi16
argument_list|(
name|__q7
argument_list|,
name|__q6
argument_list|,
name|__q5
argument_list|,
name|__q4
argument_list|,
name|__q3
argument_list|,
name|__q2
argument_list|,
name|__q1
argument_list|,
name|__q0
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_setr_epi8
argument_list|(
name|char
name|__q00
argument_list|,
name|char
name|__q01
argument_list|,
name|char
name|__q02
argument_list|,
name|char
name|__q03
argument_list|,
name|char
name|__q04
argument_list|,
name|char
name|__q05
argument_list|,
name|char
name|__q06
argument_list|,
name|char
name|__q07
argument_list|,
name|char
name|__q08
argument_list|,
name|char
name|__q09
argument_list|,
name|char
name|__q10
argument_list|,
name|char
name|__q11
argument_list|,
name|char
name|__q12
argument_list|,
name|char
name|__q13
argument_list|,
name|char
name|__q14
argument_list|,
name|char
name|__q15
argument_list|)
block|{
return|return
name|_mm_set_epi8
argument_list|(
name|__q15
argument_list|,
name|__q14
argument_list|,
name|__q13
argument_list|,
name|__q12
argument_list|,
name|__q11
argument_list|,
name|__q10
argument_list|,
name|__q09
argument_list|,
name|__q08
argument_list|,
name|__q07
argument_list|,
name|__q06
argument_list|,
name|__q05
argument_list|,
name|__q04
argument_list|,
name|__q03
argument_list|,
name|__q02
argument_list|,
name|__q01
argument_list|,
name|__q00
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Create a vector with element 0 as *P and the rest zero.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_load_si128
argument_list|(
name|__m128i
specifier|const
operator|*
name|__P
argument_list|)
block|{
return|return
operator|*
name|__P
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_loadu_si128
argument_list|(
name|__m128i
specifier|const
operator|*
name|__P
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_loaddqu
argument_list|(
operator|(
name|char
specifier|const
operator|*
operator|)
name|__P
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_loadl_epi64
argument_list|(
name|__m128i
specifier|const
operator|*
name|__P
argument_list|)
block|{
return|return
name|_mm_set_epi64
argument_list|(
operator|(
name|__m64
operator|)
literal|0LL
argument_list|,
operator|*
operator|(
name|__m64
operator|*
operator|)
name|__P
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_store_si128
argument_list|(
name|__m128i
operator|*
name|__P
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
operator|*
name|__P
operator|=
name|__B
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_storeu_si128
argument_list|(
name|__m128i
operator|*
name|__P
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
name|__builtin_ia32_storedqu
argument_list|(
operator|(
name|char
operator|*
operator|)
name|__P
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_storel_epi64
argument_list|(
name|__m128i
operator|*
name|__P
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
operator|*
operator|(
name|long
name|long
operator|*
operator|)
name|__P
operator|=
name|__builtin_ia32_vec_ext_v2di
argument_list|(
operator|(
name|__v2di
operator|)
name|__B
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m64
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_movepi64_pi64
argument_list|(
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_vec_ext_v2di
argument_list|(
operator|(
name|__v2di
operator|)
name|__B
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_movpi64_epi64
argument_list|(
name|__m64
name|__A
argument_list|)
block|{
return|return
name|_mm_set_epi64
argument_list|(
operator|(
name|__m64
operator|)
literal|0LL
argument_list|,
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_move_epi64
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
name|_mm_set_epi64
argument_list|(
operator|(
name|__m64
operator|)
literal|0LL
argument_list|,
name|_mm_movepi64_pi64
argument_list|(
name|__A
argument_list|)
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Create a vector of zeros.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_setzero_si128
argument_list|(
name|void
argument_list|)
block|{
return|return
name|__extension__
argument_list|(
argument|__m128i
argument_list|)
operator|(
name|__v4si
operator|)
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtepi32_pd
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cvtdq2pd
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtepi32_ps
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cvtdq2ps
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtpd_epi32
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_cvtpd2dq
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m64
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtpd_pi32
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_cvtpd2pi
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtpd_ps
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cvtpd2ps
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvttpd_epi32
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_cvttpd2dq
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m64
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvttpd_pi32
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_cvttpd2pi
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtpi32_pd
argument_list|(
name|__m64
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cvtpi2pd
argument_list|(
operator|(
name|__v2si
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtps_epi32
argument_list|(
name|__m128
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_cvtps2dq
argument_list|(
operator|(
name|__v4sf
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvttps_epi32
argument_list|(
name|__m128
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_cvttps2dq
argument_list|(
operator|(
name|__v4sf
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtps_pd
argument_list|(
name|__m128
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cvtps2pd
argument_list|(
operator|(
name|__v4sf
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsd_si32
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
name|__builtin_ia32_cvtsd2si
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|__x86_64__
end_ifdef

begin_comment
comment|/* Intel intrinsic.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|long
name|long
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsd_si64
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
name|__builtin_ia32_cvtsd2si64
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Microsoft intrinsic.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|long
name|long
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsd_si64x
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
name|__builtin_ia32_cvtsd2si64
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvttsd_si32
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
name|__builtin_ia32_cvttsd2si
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|__x86_64__
end_ifdef

begin_comment
comment|/* Intel intrinsic.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|long
name|long
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvttsd_si64
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
name|__builtin_ia32_cvttsd2si64
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Microsoft intrinsic.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|long
name|long
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvttsd_si64x
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
name|__builtin_ia32_cvttsd2si64
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|static
name|__inline
name|__m128
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsd_ss
argument_list|(
name|__m128
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__builtin_ia32_cvtsd2ss
argument_list|(
operator|(
name|__v4sf
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsi32_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|int
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cvtsi2sd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|__x86_64__
end_ifdef

begin_comment
comment|/* Intel intrinsic.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsi64_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|long
name|long
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cvtsi642sd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Microsoft intrinsic.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsi64x_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|long
name|long
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cvtsi642sd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtss_sd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_cvtss2sd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v4sf
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_define
define|#
directive|define
name|_mm_shuffle_pd
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|,
name|__C
parameter_list|)
value|((__m128d)__builtin_ia32_shufpd ((__v2df)__A, (__v2df)__B, (__C)))
end_define

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_unpackhi_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_unpckhpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_unpacklo_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_unpcklpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_loadh_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|double
specifier|const
operator|*
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_loadhpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_loadl_pd
argument_list|(
name|__m128d
name|__A
argument_list|,
name|double
specifier|const
operator|*
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__builtin_ia32_loadlpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|,
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_movemask_pd
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
name|__builtin_ia32_movmskpd
argument_list|(
operator|(
name|__v2df
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_packs_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_packsswb128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_packs_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_packssdw128
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_packus_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_packuswb128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_unpackhi_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_punpckhbw128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_unpackhi_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_punpckhwd128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_unpackhi_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_punpckhdq128
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_unpackhi_epi64
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_punpckhqdq128
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_unpacklo_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_punpcklbw128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_unpacklo_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_punpcklwd128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_unpacklo_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_punpckldq128
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_unpacklo_epi64
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_punpcklqdq128
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_add_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_paddb128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_add_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_paddw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_add_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_paddd128
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_add_epi64
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_paddq128
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_adds_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_paddsb128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_adds_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_paddsw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_adds_epu8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_paddusb128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_adds_epu16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_paddusw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sub_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psubb128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sub_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psubw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sub_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psubd128
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sub_epi64
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psubq128
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_subs_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psubsb128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_subs_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psubsw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_subs_epu8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psubusb128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_subs_epu16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psubusw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_madd_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pmaddwd128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_mulhi_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pmulhw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_mullo_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pmullw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m64
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_mul_su32
argument_list|(
name|__m64
name|__A
argument_list|,
name|__m64
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m64
operator|)
name|__builtin_ia32_pmuludq
argument_list|(
operator|(
name|__v2si
operator|)
name|__A
argument_list|,
operator|(
name|__v2si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_mul_epu32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pmuludq128
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_if
if|#
directive|if
literal|0
end_if

begin_else
unit|static __inline __m128i __attribute__((__always_inline__)) _mm_slli_epi16 (__m128i __A, int __B) {   return (__m128i)__builtin_ia32_psllwi128 ((__v8hi)__A, __B); }  static __inline __m128i __attribute__((__always_inline__)) _mm_slli_epi32 (__m128i __A, int __B) {   return (__m128i)__builtin_ia32_pslldi128 ((__v4si)__A, __B); }  static __inline __m128i __attribute__((__always_inline__)) _mm_slli_epi64 (__m128i __A, int __B) {   return (__m128i)__builtin_ia32_psllqi128 ((__v2di)__A, __B); }
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|_mm_slli_epi16
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
define|\
value|((__m128i)__builtin_ia32_psllwi128 ((__v8hi)(__A), __B))
end_define

begin_define
define|#
directive|define
name|_mm_slli_epi32
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
define|\
value|((__m128i)__builtin_ia32_pslldi128 ((__v8hi)(__A), __B))
end_define

begin_define
define|#
directive|define
name|_mm_slli_epi64
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
define|\
value|((__m128i)__builtin_ia32_psllqi128 ((__v8hi)(__A), __B))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
literal|0
end_if

begin_else
unit|static __inline __m128i __attribute__((__always_inline__)) _mm_srai_epi16 (__m128i __A, int __B) {   return (__m128i)__builtin_ia32_psrawi128 ((__v8hi)__A, __B); }  static __inline __m128i __attribute__((__always_inline__)) _mm_srai_epi32 (__m128i __A, int __B) {   return (__m128i)__builtin_ia32_psradi128 ((__v4si)__A, __B); }
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|_mm_srai_epi16
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
define|\
value|((__m128i)__builtin_ia32_psrawi128 ((__v8hi)(__A), __B))
end_define

begin_define
define|#
directive|define
name|_mm_srai_epi32
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
define|\
value|((__m128i)__builtin_ia32_psradi128 ((__v8hi)(__A), __B))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
literal|0
end_if

begin_else
unit|static __m128i __attribute__((__always_inline__)) _mm_srli_si128 (__m128i __A, int __B) {   return ((__m128i)__builtin_ia32_psrldqi128 (__A, __B * 8)); }  static __m128i __attribute__((__always_inline__)) _mm_srli_si128 (__m128i __A, int __B) {   return ((__m128i)__builtin_ia32_pslldqi128 (__A, __B * 8)); }
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|_mm_srli_si128
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
define|\
value|((__m128i)__builtin_ia32_psrldqi128 (__A, (__B) * 8))
end_define

begin_define
define|#
directive|define
name|_mm_slli_si128
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
define|\
value|((__m128i)__builtin_ia32_pslldqi128 (__A, (__B) * 8))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
literal|0
end_if

begin_else
unit|static __inline __m128i __attribute__((__always_inline__)) _mm_srli_epi16 (__m128i __A, int __B) {   return (__m128i)__builtin_ia32_psrlwi128 ((__v8hi)__A, __B); }  static __inline __m128i __attribute__((__always_inline__)) _mm_srli_epi32 (__m128i __A, int __B) {   return (__m128i)__builtin_ia32_psrldi128 ((__v4si)__A, __B); }  static __inline __m128i __attribute__((__always_inline__)) _mm_srli_epi64 (__m128i __A, int __B) {   return (__m128i)__builtin_ia32_psrlqi128 ((__v2di)__A, __B); }
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|_mm_srli_epi16
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
define|\
value|((__m128i)__builtin_ia32_psrlwi128 ((__v8hi)(__A), __B))
end_define

begin_define
define|#
directive|define
name|_mm_srli_epi32
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
define|\
value|((__m128i)__builtin_ia32_psrldi128 ((__v4si)(__A), __B))
end_define

begin_define
define|#
directive|define
name|_mm_srli_epi64
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
define|\
value|((__m128i)__builtin_ia32_psrlqi128 ((__v4si)(__A), __B))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sll_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psllw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sll_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pslld128
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sll_epi64
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psllq128
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sra_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psraw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sra_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psrad128
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_srl_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psrlw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_srl_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psrld128
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_srl_epi64
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psrlq128
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_and_si128
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pand128
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_andnot_si128
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pandn128
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_or_si128
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_por128
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_xor_si128
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pxor128
argument_list|(
operator|(
name|__v2di
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpeq_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pcmpeqb128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpeq_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pcmpeqw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpeq_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pcmpeqd128
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmplt_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pcmpgtb128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__B
argument_list|,
operator|(
name|__v16qi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmplt_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pcmpgtw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__B
argument_list|,
operator|(
name|__v8hi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmplt_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pcmpgtd128
argument_list|(
operator|(
name|__v4si
operator|)
name|__B
argument_list|,
operator|(
name|__v4si
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpgt_epi8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pcmpgtb128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpgt_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pcmpgtw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cmpgt_epi32
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pcmpgtd128
argument_list|(
operator|(
name|__v4si
operator|)
name|__A
argument_list|,
operator|(
name|__v4si
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_if
if|#
directive|if
literal|0
end_if

begin_else
unit|static __inline int __attribute__((__always_inline__)) _mm_extract_epi16 (__m128i const __A, int const __N) {   return __builtin_ia32_vec_ext_v8hi ((__v8hi)__A, __N); }  static __inline __m128i __attribute__((__always_inline__)) _mm_insert_epi16 (__m128i const __A, int const __D, int const __N) {   return (__m128i) __builtin_ia32_vec_set_v8hi ((__v8hi)__A, __D, __N); }
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|_mm_extract_epi16
parameter_list|(
name|A
parameter_list|,
name|N
parameter_list|)
define|\
value|((int) __builtin_ia32_vec_ext_v8hi ((__v8hi)(A), (N)))
end_define

begin_define
define|#
directive|define
name|_mm_insert_epi16
parameter_list|(
name|A
parameter_list|,
name|D
parameter_list|,
name|N
parameter_list|)
define|\
value|((__m128i) __builtin_ia32_vec_set_v8hi ((__v8hi)(A), (D), (N)))
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_max_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pmaxsw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_max_epu8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pmaxub128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_min_epi16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pminsw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_min_epu8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pminub128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|int
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_movemask_epi8
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
name|__builtin_ia32_pmovmskb128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_mulhi_epu16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pmulhuw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_define
define|#
directive|define
name|_mm_shufflehi_epi16
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
value|((__m128i)__builtin_ia32_pshufhw ((__v8hi)__A, __B))
end_define

begin_define
define|#
directive|define
name|_mm_shufflelo_epi16
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
value|((__m128i)__builtin_ia32_pshuflw ((__v8hi)__A, __B))
end_define

begin_define
define|#
directive|define
name|_mm_shuffle_epi32
parameter_list|(
name|__A
parameter_list|,
name|__B
parameter_list|)
value|((__m128i)__builtin_ia32_pshufd ((__v4si)__A, __B))
end_define

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_maskmoveu_si128
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|,
name|char
operator|*
name|__C
argument_list|)
block|{
name|__builtin_ia32_maskmovdqu
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|,
name|__C
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_avg_epu8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pavgb128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_avg_epu16
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_pavgw128
argument_list|(
operator|(
name|__v8hi
operator|)
name|__A
argument_list|,
operator|(
name|__v8hi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_sad_epu8
argument_list|(
name|__m128i
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__builtin_ia32_psadbw128
argument_list|(
operator|(
name|__v16qi
operator|)
name|__A
argument_list|,
operator|(
name|__v16qi
operator|)
name|__B
argument_list|)
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_stream_si32
argument_list|(
name|int
operator|*
name|__A
argument_list|,
name|int
name|__B
argument_list|)
block|{
name|__builtin_ia32_movnti
argument_list|(
name|__A
argument_list|,
name|__B
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_stream_si128
argument_list|(
name|__m128i
operator|*
name|__A
argument_list|,
name|__m128i
name|__B
argument_list|)
block|{
name|__builtin_ia32_movntdq
argument_list|(
operator|(
name|__v2di
operator|*
operator|)
name|__A
argument_list|,
operator|(
name|__v2di
operator|)
name|__B
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_stream_pd
argument_list|(
name|double
operator|*
name|__A
argument_list|,
name|__m128d
name|__B
argument_list|)
block|{
name|__builtin_ia32_movntpd
argument_list|(
name|__A
argument_list|,
operator|(
name|__v2df
operator|)
name|__B
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_clflush
argument_list|(
name|void
specifier|const
operator|*
name|__A
argument_list|)
block|{
name|__builtin_ia32_clflush
argument_list|(
name|__A
argument_list|)
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_lfence
argument_list|(
name|void
argument_list|)
block|{
name|__builtin_ia32_lfence
argument_list|()
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|void
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_mfence
argument_list|(
name|void
argument_list|)
block|{
name|__builtin_ia32_mfence
argument_list|()
expr_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsi32_si128
argument_list|(
name|int
name|__A
argument_list|)
block|{
return|return
name|_mm_set_epi32
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|__x86_64__
end_ifdef

begin_comment
comment|/* Intel intrinsic.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsi64_si128
argument_list|(
name|long
name|long
name|__A
argument_list|)
block|{
return|return
name|_mm_set_epi64x
argument_list|(
literal|0
argument_list|,
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_comment
comment|/* Microsoft intrinsic.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_cvtsi64x_si128
argument_list|(
name|long
name|long
name|__A
argument_list|)
block|{
return|return
name|_mm_set_epi64x
argument_list|(
literal|0
argument_list|,
name|__A
argument_list|)
return|;
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Casts between various SP, DP, INT vector types.  Note that these do no    conversion of values, they just change the type.  */
end_comment

begin_decl_stmt
specifier|static
name|__inline
name|__m128
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_castpd_ps
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__A
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_castpd_si128
argument_list|(
name|__m128d
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__A
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_castps_pd
argument_list|(
name|__m128
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__A
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128i
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_castps_si128
argument_list|(
name|__m128
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128i
operator|)
name|__A
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_castsi128_ps
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128
operator|)
name|__A
return|;
block|}
end_decl_stmt

begin_decl_stmt
specifier|static
name|__inline
name|__m128d
name|__attribute__
argument_list|(
operator|(
name|__always_inline__
operator|)
argument_list|)
name|_mm_castsi128_pd
argument_list|(
name|__m128i
name|__A
argument_list|)
block|{
return|return
operator|(
name|__m128d
operator|)
name|__A
return|;
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __SSE2__  */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _EMMINTRIN_H_INCLUDED */
end_comment

end_unit

