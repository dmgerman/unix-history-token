begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_ACL_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_ACL_H
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<sys/acl_impl.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
define|#
directive|define
name|MAX_ACL_ENTRIES
value|(1024)
comment|/* max entries of each type */
typedef|typedef
struct|struct
name|acl
block|{
name|int
name|a_type
decl_stmt|;
comment|/* the type of ACL entry */
name|uid_t
name|a_id
decl_stmt|;
comment|/* the entry in -uid or gid */
name|o_mode_t
name|a_perm
decl_stmt|;
comment|/* the permission field */
block|}
name|aclent_t
typedef|;
typedef|typedef
struct|struct
name|ace
block|{
name|uid_t
name|a_who
decl_stmt|;
comment|/* uid or gid */
name|uint32_t
name|a_access_mask
decl_stmt|;
comment|/* read,write,... */
name|uint16_t
name|a_flags
decl_stmt|;
comment|/* see below */
name|uint16_t
name|a_type
decl_stmt|;
comment|/* allow or deny */
block|}
name|ace_t
typedef|;
typedef|typedef
name|struct
name|acl_info
name|acl_t
typedef|;
comment|/*  * The following are Defined types for an aclent_t.  */
define|#
directive|define
name|USER_OBJ
value|(0x01)
comment|/* object owner */
define|#
directive|define
name|USER
value|(0x02)
comment|/* additional users */
define|#
directive|define
name|GROUP_OBJ
value|(0x04)
comment|/* owning group of the object */
define|#
directive|define
name|GROUP
value|(0x08)
comment|/* additional groups */
define|#
directive|define
name|CLASS_OBJ
value|(0x10)
comment|/* file group class and mask entry */
define|#
directive|define
name|OTHER_OBJ
value|(0x20)
comment|/* other entry for the object */
define|#
directive|define
name|ACL_DEFAULT
value|(0x1000)
comment|/* default flag */
comment|/* default object owner */
define|#
directive|define
name|DEF_USER_OBJ
value|(ACL_DEFAULT | USER_OBJ)
comment|/* default additional users */
define|#
directive|define
name|DEF_USER
value|(ACL_DEFAULT | USER)
comment|/* default owning group */
define|#
directive|define
name|DEF_GROUP_OBJ
value|(ACL_DEFAULT | GROUP_OBJ)
comment|/* default additional groups */
define|#
directive|define
name|DEF_GROUP
value|(ACL_DEFAULT | GROUP)
comment|/* default mask entry */
define|#
directive|define
name|DEF_CLASS_OBJ
value|(ACL_DEFAULT | CLASS_OBJ)
comment|/* default other entry */
define|#
directive|define
name|DEF_OTHER_OBJ
value|(ACL_DEFAULT | OTHER_OBJ)
comment|/*  * The following are defined for ace_t.  */
define|#
directive|define
name|ACE_READ_DATA
value|0x00000001
define|#
directive|define
name|ACE_LIST_DIRECTORY
value|0x00000001
define|#
directive|define
name|ACE_WRITE_DATA
value|0x00000002
define|#
directive|define
name|ACE_ADD_FILE
value|0x00000002
define|#
directive|define
name|ACE_APPEND_DATA
value|0x00000004
define|#
directive|define
name|ACE_ADD_SUBDIRECTORY
value|0x00000004
define|#
directive|define
name|ACE_READ_NAMED_ATTRS
value|0x00000008
define|#
directive|define
name|ACE_WRITE_NAMED_ATTRS
value|0x00000010
define|#
directive|define
name|ACE_EXECUTE
value|0x00000020
define|#
directive|define
name|ACE_DELETE_CHILD
value|0x00000040
define|#
directive|define
name|ACE_READ_ATTRIBUTES
value|0x00000080
define|#
directive|define
name|ACE_WRITE_ATTRIBUTES
value|0x00000100
define|#
directive|define
name|ACE_DELETE
value|0x00010000
define|#
directive|define
name|ACE_READ_ACL
value|0x00020000
define|#
directive|define
name|ACE_WRITE_ACL
value|0x00040000
define|#
directive|define
name|ACE_WRITE_OWNER
value|0x00080000
define|#
directive|define
name|ACE_SYNCHRONIZE
value|0x00100000
define|#
directive|define
name|ACE_FILE_INHERIT_ACE
value|0x0001
define|#
directive|define
name|ACE_DIRECTORY_INHERIT_ACE
value|0x0002
define|#
directive|define
name|ACE_NO_PROPAGATE_INHERIT_ACE
value|0x0004
define|#
directive|define
name|ACE_INHERIT_ONLY_ACE
value|0x0008
define|#
directive|define
name|ACE_SUCCESSFUL_ACCESS_ACE_FLAG
value|0x0010
define|#
directive|define
name|ACE_FAILED_ACCESS_ACE_FLAG
value|0x0020
define|#
directive|define
name|ACE_IDENTIFIER_GROUP
value|0x0040
define|#
directive|define
name|ACE_INHERITED_ACE
value|0x0080
define|#
directive|define
name|ACE_OWNER
value|0x1000
define|#
directive|define
name|ACE_GROUP
value|0x2000
define|#
directive|define
name|ACE_EVERYONE
value|0x4000
define|#
directive|define
name|ACE_ACCESS_ALLOWED_ACE_TYPE
value|0x0000
define|#
directive|define
name|ACE_ACCESS_DENIED_ACE_TYPE
value|0x0001
define|#
directive|define
name|ACE_SYSTEM_AUDIT_ACE_TYPE
value|0x0002
define|#
directive|define
name|ACE_SYSTEM_ALARM_ACE_TYPE
value|0x0003
define|#
directive|define
name|ACL_AUTO_INHERIT
value|0x0001
define|#
directive|define
name|ACL_PROTECTED
value|0x0002
define|#
directive|define
name|ACL_DEFAULTED
value|0x0004
define|#
directive|define
name|ACL_FLAGS_ALL
value|(ACL_AUTO_INHERIT|ACL_PROTECTED| \     ACL_DEFAULTED)
ifdef|#
directive|ifdef
name|_KERNEL
comment|/*  * These are only applicable in a CIFS context.  */
define|#
directive|define
name|ACE_ACCESS_ALLOWED_COMPOUND_ACE_TYPE
value|0x04
define|#
directive|define
name|ACE_ACCESS_ALLOWED_OBJECT_ACE_TYPE
value|0x05
define|#
directive|define
name|ACE_ACCESS_DENIED_OBJECT_ACE_TYPE
value|0x06
define|#
directive|define
name|ACE_SYSTEM_AUDIT_OBJECT_ACE_TYPE
value|0x07
define|#
directive|define
name|ACE_SYSTEM_ALARM_OBJECT_ACE_TYPE
value|0x08
define|#
directive|define
name|ACE_ACCESS_ALLOWED_CALLBACK_ACE_TYPE
value|0x09
define|#
directive|define
name|ACE_ACCESS_DENIED_CALLBACK_ACE_TYPE
value|0x0A
define|#
directive|define
name|ACE_ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE
value|0x0B
define|#
directive|define
name|ACE_ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE
value|0x0C
define|#
directive|define
name|ACE_SYSTEM_AUDIT_CALLBACK_ACE_TYPE
value|0x0D
define|#
directive|define
name|ACE_SYSTEM_ALARM_CALLBACK_ACE_TYPE
value|0x0E
define|#
directive|define
name|ACE_SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE
value|0x0F
define|#
directive|define
name|ACE_SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE
value|0x10
define|#
directive|define
name|ACE_ALL_TYPES
value|0x001F
typedef|typedef
struct|struct
name|ace_object
block|{
name|uid_t
name|a_who
decl_stmt|;
comment|/* uid or gid */
name|uint32_t
name|a_access_mask
decl_stmt|;
comment|/* read,write,... */
name|uint16_t
name|a_flags
decl_stmt|;
comment|/* see below */
name|uint16_t
name|a_type
decl_stmt|;
comment|/* allow or deny */
name|uint8_t
name|a_obj_type
index|[
literal|16
index|]
decl_stmt|;
comment|/* obj type */
name|uint8_t
name|a_inherit_obj_type
index|[
literal|16
index|]
decl_stmt|;
comment|/* inherit obj */
block|}
name|ace_object_t
typedef|;
endif|#
directive|endif
define|#
directive|define
name|ACE_ALL_PERMS
value|(ACE_READ_DATA|ACE_LIST_DIRECTORY|ACE_WRITE_DATA| \     ACE_ADD_FILE|ACE_APPEND_DATA|ACE_ADD_SUBDIRECTORY|ACE_READ_NAMED_ATTRS| \     ACE_WRITE_NAMED_ATTRS|ACE_EXECUTE|ACE_DELETE_CHILD|ACE_READ_ATTRIBUTES| \     ACE_WRITE_ATTRIBUTES|ACE_DELETE|ACE_READ_ACL|ACE_WRITE_ACL| \     ACE_WRITE_OWNER|ACE_SYNCHRONIZE)
define|#
directive|define
name|ACE_ALL_WRITE_PERMS
value|(ACE_WRITE_DATA|ACE_APPEND_DATA| \     ACE_WRITE_ATTRIBUTES|ACE_WRITE_NAMED_ATTRS|ACE_WRITE_ACL| \     ACE_WRITE_OWNER|ACE_DELETE|ACE_DELETE_CHILD)
define|#
directive|define
name|ACE_READ_PERMS
value|(ACE_READ_DATA|ACE_READ_ACL|ACE_READ_ATTRIBUTES| \     ACE_READ_NAMED_ATTRS)
define|#
directive|define
name|ACE_WRITE_PERMS
value|(ACE_WRITE_DATA|ACE_APPEND_DATA|ACE_WRITE_ATTRIBUTES| \     ACE_WRITE_NAMED_ATTRS)
define|#
directive|define
name|ACE_MODIFY_PERMS
value|(ACE_READ_DATA|ACE_LIST_DIRECTORY|ACE_WRITE_DATA| \     ACE_ADD_FILE|ACE_APPEND_DATA|ACE_ADD_SUBDIRECTORY|ACE_READ_NAMED_ATTRS| \     ACE_WRITE_NAMED_ATTRS|ACE_EXECUTE|ACE_DELETE_CHILD|ACE_READ_ATTRIBUTES| \     ACE_WRITE_ATTRIBUTES|ACE_DELETE|ACE_READ_ACL|ACE_SYNCHRONIZE)
comment|/*  * The following flags are supported by both NFSv4 ACLs and ace_t.  */
define|#
directive|define
name|ACE_NFSV4_SUP_FLAGS
value|(ACE_FILE_INHERIT_ACE | \     ACE_DIRECTORY_INHERIT_ACE | \     ACE_NO_PROPAGATE_INHERIT_ACE | \     ACE_INHERIT_ONLY_ACE | \     ACE_IDENTIFIER_GROUP)
define|#
directive|define
name|ACE_TYPE_FLAGS
value|(ACE_OWNER|ACE_GROUP|ACE_EVERYONE| \     ACE_IDENTIFIER_GROUP)
define|#
directive|define
name|ACE_INHERIT_FLAGS
value|(ACE_FILE_INHERIT_ACE| \     ACE_DIRECTORY_INHERIT_ACE|ACE_NO_PROPAGATE_INHERIT_ACE|ACE_INHERIT_ONLY_ACE)
comment|/* cmd args to acl(2) for aclent_t  */
define|#
directive|define
name|GETACL
value|1
define|#
directive|define
name|SETACL
value|2
define|#
directive|define
name|GETACLCNT
value|3
comment|/* cmd's to manipulate ace acls. */
define|#
directive|define
name|ACE_GETACL
value|4
define|#
directive|define
name|ACE_SETACL
value|5
define|#
directive|define
name|ACE_GETACLCNT
value|6
comment|/* minimal acl entries from GETACLCNT */
define|#
directive|define
name|MIN_ACL_ENTRIES
value|4
if|#
directive|if
operator|!
name|defined
argument_list|(
name|_KERNEL
argument_list|)
comment|/* acl check errors */
define|#
directive|define
name|GRP_ERROR
value|1
define|#
directive|define
name|USER_ERROR
value|2
define|#
directive|define
name|OTHER_ERROR
value|3
define|#
directive|define
name|CLASS_ERROR
value|4
define|#
directive|define
name|DUPLICATE_ERROR
value|5
define|#
directive|define
name|MISS_ERROR
value|6
define|#
directive|define
name|MEM_ERROR
value|7
define|#
directive|define
name|ENTRY_ERROR
value|8
comment|/*  * similar to ufs_acl.h: changed to char type for user commands (tar, cpio)  * Attribute types  */
define|#
directive|define
name|UFSD_FREE
value|('0')
comment|/* Free entry */
define|#
directive|define
name|UFSD_ACL
value|('1')
comment|/* Access Control Lists */
define|#
directive|define
name|UFSD_DFACL
value|('2')
comment|/* reserved for future use */
define|#
directive|define
name|ACE_ACL
value|('3')
comment|/* ace_t style acls */
comment|/*  * flag to [f]acl_get()  * controls whether a trivial acl should be returned.  */
define|#
directive|define
name|ACL_NO_TRIVIAL
value|0x2
comment|/*  * Flags to control acl_totext()  */
define|#
directive|define
name|ACL_APPEND_ID
value|0x1
comment|/* append uid/gid to user/group entries */
define|#
directive|define
name|ACL_COMPACT_FMT
value|0x2
comment|/* build ACL in ls -V format */
define|#
directive|define
name|ACL_NORESOLVE
value|0x4
comment|/* don't do name service lookups */
define|#
directive|define
name|ACL_SID_FMT
value|0x8
comment|/* use usersid/groupsid when appropriate */
comment|/*  * Legacy aclcheck errors for aclent_t ACLs  */
define|#
directive|define
name|EACL_GRP_ERROR
value|GRP_ERROR
define|#
directive|define
name|EACL_USER_ERROR
value|USER_ERROR
define|#
directive|define
name|EACL_OTHER_ERROR
value|OTHER_ERROR
define|#
directive|define
name|EACL_CLASS_ERROR
value|CLASS_ERROR
define|#
directive|define
name|EACL_DUPLICATE_ERROR
value|DUPLICATE_ERROR
define|#
directive|define
name|EACL_MISS_ERROR
value|MISS_ERROR
define|#
directive|define
name|EACL_MEM_ERROR
value|MEM_ERROR
define|#
directive|define
name|EACL_ENTRY_ERROR
value|ENTRY_ERROR
define|#
directive|define
name|EACL_INHERIT_ERROR
value|9
comment|/* invalid inherit flags */
define|#
directive|define
name|EACL_FLAGS_ERROR
value|10
comment|/* unknown flag value */
define|#
directive|define
name|EACL_PERM_MASK_ERROR
value|11
comment|/* unknown permission */
define|#
directive|define
name|EACL_COUNT_ERROR
value|12
comment|/* invalid acl count */
define|#
directive|define
name|EACL_INVALID_SLOT
value|13
comment|/* invalid acl slot */
define|#
directive|define
name|EACL_NO_ACL_ENTRY
value|14
comment|/* Entry doesn't exist */
define|#
directive|define
name|EACL_DIFF_TYPE
value|15
comment|/* acls aren't same type */
define|#
directive|define
name|EACL_INVALID_USER_GROUP
value|16
comment|/* need user/group name */
define|#
directive|define
name|EACL_INVALID_STR
value|17
comment|/* invalid acl string */
define|#
directive|define
name|EACL_FIELD_NOT_BLANK
value|18
comment|/* can't have blank field */
define|#
directive|define
name|EACL_INVALID_ACCESS_TYPE
value|19
comment|/* invalid access type */
define|#
directive|define
name|EACL_UNKNOWN_DATA
value|20
comment|/* Unrecognized data in ACL */
define|#
directive|define
name|EACL_MISSING_FIELDS
value|21
comment|/* missing fields in acl */
define|#
directive|define
name|EACL_INHERIT_NOTDIR
value|22
comment|/* Need dir for inheritance */
specifier|extern
name|int
name|aclcheck
parameter_list|(
name|aclent_t
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|acltomode
parameter_list|(
name|aclent_t
modifier|*
parameter_list|,
name|int
parameter_list|,
name|mode_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|aclfrommode
parameter_list|(
name|aclent_t
modifier|*
parameter_list|,
name|int
parameter_list|,
name|mode_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|aclsort
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|,
name|aclent_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|char
modifier|*
name|acltotext
parameter_list|(
name|aclent_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|aclent_t
modifier|*
name|aclfromtext
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|acl_free
parameter_list|(
name|acl_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|acl_get
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|acl_t
modifier|*
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|facl_get
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|,
name|acl_t
modifier|*
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|acl_set
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|acl_t
modifier|*
name|acl
parameter_list|)
function_decl|;
specifier|extern
name|int
name|facl_set
parameter_list|(
name|int
parameter_list|,
name|acl_t
modifier|*
name|acl
parameter_list|)
function_decl|;
specifier|extern
name|int
name|acl_strip
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|uid_t
parameter_list|,
name|gid_t
parameter_list|,
name|mode_t
parameter_list|)
function_decl|;
specifier|extern
name|int
name|acl_trivial
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|char
modifier|*
name|acl_totext
parameter_list|(
name|acl_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|int
name|acl_fromtext
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|acl_t
modifier|*
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|acl_check
parameter_list|(
name|acl_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
else|#
directive|else
comment|/* !defined(_KERNEL) */
specifier|extern
name|void
name|ksort
parameter_list|(
name|caddr_t
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|int
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
specifier|extern
name|int
name|cmp2acls
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* !defined(_KERNEL) */
if|#
directive|if
name|defined
argument_list|(
name|__STDC__
argument_list|)
specifier|extern
name|int
name|acl
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|int
name|cmd
parameter_list|,
name|int
name|cnt
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|)
function_decl|;
specifier|extern
name|int
name|facl
parameter_list|(
name|int
name|fd
parameter_list|,
name|int
name|cmd
parameter_list|,
name|int
name|cnt
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|)
function_decl|;
else|#
directive|else
comment|/* !__STDC__ */
specifier|extern
name|int
name|acl
parameter_list|()
function_decl|;
specifier|extern
name|int
name|facl
parameter_list|()
function_decl|;
endif|#
directive|endif
comment|/* defined(__STDC__) */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_ACL_H */
end_comment

end_unit

