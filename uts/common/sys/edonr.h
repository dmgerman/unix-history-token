begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * IDI,NTNU  *  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://opensource.org/licenses/CDDL-1.0.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  *  * Copyright (C) 2009, 2010, Jorn Amundsen<jorn.amundsen@ntnu.no>  *  * Tweaked Edon-R implementation for SUPERCOP, based on NIST API.  *  * $Id: edonr.h 517 2013-02-17 20:34:39Z joern $  */
end_comment

begin_comment
comment|/*  * Portions copyright (c) 2013, Saso Kiselkov, All rights reserved  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_EDONR_H_
end_ifndef

begin_define
define|#
directive|define
name|_SYS_EDONR_H_
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
include|#
directive|include
file|<sys/types.h>
comment|/*  * EdonR allows to call EdonRUpdate() consecutively only if the total length  * of stored unprocessed data and the new supplied data is less than or equal  * to the BLOCK_SIZE on which the compression functions operates.  * Otherwise an assertion failure is invoked.  */
comment|/* Specific algorithm definitions */
define|#
directive|define
name|EdonR224_DIGEST_SIZE
value|28
define|#
directive|define
name|EdonR224_BLOCK_SIZE
value|64
define|#
directive|define
name|EdonR256_DIGEST_SIZE
value|32
define|#
directive|define
name|EdonR256_BLOCK_SIZE
value|64
define|#
directive|define
name|EdonR384_DIGEST_SIZE
value|48
define|#
directive|define
name|EdonR384_BLOCK_SIZE
value|128
define|#
directive|define
name|EdonR512_DIGEST_SIZE
value|64
define|#
directive|define
name|EdonR512_BLOCK_SIZE
value|128
define|#
directive|define
name|EdonR256_BLOCK_BITSIZE
value|512
define|#
directive|define
name|EdonR512_BLOCK_BITSIZE
value|1024
typedef|typedef
struct|struct
block|{
name|uint32_t
name|DoublePipe
index|[
literal|16
index|]
decl_stmt|;
name|uint8_t
name|LastPart
index|[
name|EdonR256_BLOCK_SIZE
operator|*
literal|2
index|]
decl_stmt|;
block|}
name|EdonRData256
typedef|;
typedef|typedef
struct|struct
block|{
name|uint64_t
name|DoublePipe
index|[
literal|16
index|]
decl_stmt|;
name|uint8_t
name|LastPart
index|[
name|EdonR512_BLOCK_SIZE
operator|*
literal|2
index|]
decl_stmt|;
block|}
name|EdonRData512
typedef|;
typedef|typedef
struct|struct
block|{
name|size_t
name|hashbitlen
decl_stmt|;
comment|/* + algorithm specific parameters */
name|int
name|unprocessed_bits
decl_stmt|;
name|uint64_t
name|bits_processed
decl_stmt|;
union|union
block|{
name|EdonRData256
name|p256
index|[
literal|1
index|]
decl_stmt|;
name|EdonRData512
name|p512
index|[
literal|1
index|]
decl_stmt|;
block|}
name|pipe
index|[
literal|1
index|]
union|;
block|}
name|EdonRState
typedef|;
name|void
name|EdonRInit
parameter_list|(
name|EdonRState
modifier|*
name|state
parameter_list|,
name|size_t
name|hashbitlen
parameter_list|)
function_decl|;
name|void
name|EdonRUpdate
parameter_list|(
name|EdonRState
modifier|*
name|state
parameter_list|,
specifier|const
name|uint8_t
modifier|*
name|data
parameter_list|,
name|size_t
name|databitlen
parameter_list|)
function_decl|;
name|void
name|EdonRFinal
parameter_list|(
name|EdonRState
modifier|*
name|state
parameter_list|,
name|uint8_t
modifier|*
name|hashval
parameter_list|)
function_decl|;
name|void
name|EdonRHash
parameter_list|(
name|size_t
name|hashbitlen
parameter_list|,
specifier|const
name|uint8_t
modifier|*
name|data
parameter_list|,
name|size_t
name|databitlen
parameter_list|,
name|uint8_t
modifier|*
name|hashval
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_EDONR_H_ */
end_comment

end_unit

