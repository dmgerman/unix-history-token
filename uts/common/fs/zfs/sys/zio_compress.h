begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SYS_ZIO_COMPRESS_H
end_ifndef

begin_define
define|#
directive|define
name|_SYS_ZIO_COMPRESS_H
end_define

begin_include
include|#
directive|include
file|<sys/zio.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/*  * Common signature for all zio compress/decompress functions.  */
typedef|typedef
name|size_t
name|zio_compress_func_t
parameter_list|(
name|void
modifier|*
name|src
parameter_list|,
name|void
modifier|*
name|dst
parameter_list|,
name|size_t
name|s_len
parameter_list|,
name|size_t
name|d_len
parameter_list|,
name|int
parameter_list|)
function_decl|;
typedef|typedef
name|int
name|zio_decompress_func_t
parameter_list|(
name|void
modifier|*
name|src
parameter_list|,
name|void
modifier|*
name|dst
parameter_list|,
name|size_t
name|s_len
parameter_list|,
name|size_t
name|d_len
parameter_list|,
name|int
parameter_list|)
function_decl|;
comment|/*  * Information about each compression function.  */
typedef|typedef
struct|struct
name|zio_compress_info
block|{
name|zio_compress_func_t
modifier|*
name|ci_compress
decl_stmt|;
comment|/* compression function */
name|zio_decompress_func_t
modifier|*
name|ci_decompress
decl_stmt|;
comment|/* decompression function */
name|int
name|ci_level
decl_stmt|;
comment|/* level parameter */
name|char
modifier|*
name|ci_name
decl_stmt|;
comment|/* algorithm name */
block|}
name|zio_compress_info_t
typedef|;
specifier|extern
name|zio_compress_info_t
name|zio_compress_table
index|[
name|ZIO_COMPRESS_FUNCTIONS
index|]
decl_stmt|;
comment|/*  * Compression routines.  */
specifier|extern
name|size_t
name|lzjb_compress
parameter_list|(
name|void
modifier|*
name|src
parameter_list|,
name|void
modifier|*
name|dst
parameter_list|,
name|size_t
name|s_len
parameter_list|,
name|size_t
name|d_len
parameter_list|,
name|int
name|level
parameter_list|)
function_decl|;
specifier|extern
name|int
name|lzjb_decompress
parameter_list|(
name|void
modifier|*
name|src
parameter_list|,
name|void
modifier|*
name|dst
parameter_list|,
name|size_t
name|s_len
parameter_list|,
name|size_t
name|d_len
parameter_list|,
name|int
name|level
parameter_list|)
function_decl|;
specifier|extern
name|size_t
name|gzip_compress
parameter_list|(
name|void
modifier|*
name|src
parameter_list|,
name|void
modifier|*
name|dst
parameter_list|,
name|size_t
name|s_len
parameter_list|,
name|size_t
name|d_len
parameter_list|,
name|int
name|level
parameter_list|)
function_decl|;
specifier|extern
name|int
name|gzip_decompress
parameter_list|(
name|void
modifier|*
name|src
parameter_list|,
name|void
modifier|*
name|dst
parameter_list|,
name|size_t
name|s_len
parameter_list|,
name|size_t
name|d_len
parameter_list|,
name|int
name|level
parameter_list|)
function_decl|;
specifier|extern
name|size_t
name|zle_compress
parameter_list|(
name|void
modifier|*
name|src
parameter_list|,
name|void
modifier|*
name|dst
parameter_list|,
name|size_t
name|s_len
parameter_list|,
name|size_t
name|d_len
parameter_list|,
name|int
name|level
parameter_list|)
function_decl|;
specifier|extern
name|int
name|zle_decompress
parameter_list|(
name|void
modifier|*
name|src
parameter_list|,
name|void
modifier|*
name|dst
parameter_list|,
name|size_t
name|s_len
parameter_list|,
name|size_t
name|d_len
parameter_list|,
name|int
name|level
parameter_list|)
function_decl|;
comment|/*  * Compress and decompress data if necessary.  */
specifier|extern
name|size_t
name|zio_compress_data
parameter_list|(
name|enum
name|zio_compress
name|c
parameter_list|,
name|void
modifier|*
name|src
parameter_list|,
name|void
modifier|*
name|dst
parameter_list|,
name|size_t
name|s_len
parameter_list|)
function_decl|;
specifier|extern
name|int
name|zio_decompress_data
parameter_list|(
name|enum
name|zio_compress
name|c
parameter_list|,
name|void
modifier|*
name|src
parameter_list|,
name|void
modifier|*
name|dst
parameter_list|,
name|size_t
name|s_len
parameter_list|,
name|size_t
name|d_len
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _SYS_ZIO_COMPRESS_H */
end_comment

end_unit

