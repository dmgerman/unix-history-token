begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* ** $Id: ltable.h,v 2.16.1.2 2013/08/30 15:49:41 roberto Exp $ ** Lua tables (hash) ** See Copyright Notice in lua.h */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|ltable_h
end_ifndef

begin_define
define|#
directive|define
name|ltable_h
end_define

begin_include
include|#
directive|include
file|"lobject.h"
end_include

begin_define
define|#
directive|define
name|gnode
parameter_list|(
name|t
parameter_list|,
name|i
parameter_list|)
value|(&(t)->node[i])
end_define

begin_define
define|#
directive|define
name|gkey
parameter_list|(
name|n
parameter_list|)
value|(&(n)->i_key.tvk)
end_define

begin_define
define|#
directive|define
name|gval
parameter_list|(
name|n
parameter_list|)
value|(&(n)->i_val)
end_define

begin_define
define|#
directive|define
name|gnext
parameter_list|(
name|n
parameter_list|)
value|((n)->i_key.nk.next)
end_define

begin_define
define|#
directive|define
name|invalidateTMcache
parameter_list|(
name|t
parameter_list|)
value|((t)->flags = 0)
end_define

begin_comment
comment|/* returns the key, given the value of a table entry */
end_comment

begin_define
define|#
directive|define
name|keyfromval
parameter_list|(
name|v
parameter_list|)
define|\
value|(gkey(cast(Node *, cast(char *, (v)) - offsetof(Node, i_val))))
end_define

begin_function_decl
name|LUAI_FUNC
specifier|const
name|TValue
modifier|*
name|luaH_getint
parameter_list|(
name|Table
modifier|*
name|t
parameter_list|,
name|int
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LUAI_FUNC
name|void
name|luaH_setint
parameter_list|(
name|lua_State
modifier|*
name|L
parameter_list|,
name|Table
modifier|*
name|t
parameter_list|,
name|int
name|key
parameter_list|,
name|TValue
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LUAI_FUNC
specifier|const
name|TValue
modifier|*
name|luaH_getstr
parameter_list|(
name|Table
modifier|*
name|t
parameter_list|,
name|TString
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LUAI_FUNC
specifier|const
name|TValue
modifier|*
name|luaH_get
parameter_list|(
name|Table
modifier|*
name|t
parameter_list|,
specifier|const
name|TValue
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LUAI_FUNC
name|TValue
modifier|*
name|luaH_newkey
parameter_list|(
name|lua_State
modifier|*
name|L
parameter_list|,
name|Table
modifier|*
name|t
parameter_list|,
specifier|const
name|TValue
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LUAI_FUNC
name|TValue
modifier|*
name|luaH_set
parameter_list|(
name|lua_State
modifier|*
name|L
parameter_list|,
name|Table
modifier|*
name|t
parameter_list|,
specifier|const
name|TValue
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LUAI_FUNC
name|Table
modifier|*
name|luaH_new
parameter_list|(
name|lua_State
modifier|*
name|L
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LUAI_FUNC
name|void
name|luaH_resize
parameter_list|(
name|lua_State
modifier|*
name|L
parameter_list|,
name|Table
modifier|*
name|t
parameter_list|,
name|int
name|nasize
parameter_list|,
name|int
name|nhsize
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LUAI_FUNC
name|void
name|luaH_resizearray
parameter_list|(
name|lua_State
modifier|*
name|L
parameter_list|,
name|Table
modifier|*
name|t
parameter_list|,
name|int
name|nasize
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LUAI_FUNC
name|void
name|luaH_free
parameter_list|(
name|lua_State
modifier|*
name|L
parameter_list|,
name|Table
modifier|*
name|t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LUAI_FUNC
name|int
name|luaH_next
parameter_list|(
name|lua_State
modifier|*
name|L
parameter_list|,
name|Table
modifier|*
name|t
parameter_list|,
name|StkId
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LUAI_FUNC
name|int
name|luaH_getn
parameter_list|(
name|Table
modifier|*
name|t
parameter_list|)
function_decl|;
end_function_decl

begin_if
if|#
directive|if
name|defined
argument_list|(
name|LUA_DEBUG
argument_list|)
end_if

begin_function_decl
name|LUAI_FUNC
name|Node
modifier|*
name|luaH_mainposition
parameter_list|(
specifier|const
name|Table
modifier|*
name|t
parameter_list|,
specifier|const
name|TValue
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LUAI_FUNC
name|int
name|luaH_isdummy
parameter_list|(
name|Node
modifier|*
name|n
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

