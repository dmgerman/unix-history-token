begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/***********************license start***************  * Copyright (c) 2003-2010  Cavium Inc. (support@cavium.com). All rights  * reserved.  *  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:  *  *   * Redistributions of source code must retain the above copyright  *     notice, this list of conditions and the following disclaimer.  *  *   * Redistributions in binary form must reproduce the above  *     copyright notice, this list of conditions and the following  *     disclaimer in the documentation and/or other materials provided  *     with the distribution.   *   * Neither the name of Cavium Inc. nor the names of  *     its contributors may be used to endorse or promote products  *     derived from this software without specific prior written  *     permission.   * This Software, including technical data, may be subject to U.S. export  control  * laws, including the U.S. Export Administration Act and its  associated  * regulations, and may be subject to export or import  regulations in other  * countries.   * TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"  * AND WITH ALL FAULTS AND CAVIUM INC. MAKES NO PROMISES, REPRESENTATIONS OR  * WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO  * THE SOFTWARE, INCLUDING ITS CONDITION, ITS CONFORMITY TO ANY REPRESENTATION OR  * DESCRIPTION, OR THE EXISTENCE OF ANY LATENT OR PATENT DEFECTS, AND CAVIUM  * SPECIFICALLY DISCLAIMS ALL IMPLIED (IF ANY) WARRANTIES OF TITLE,  * MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF  * VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR  * CORRESPONDENCE TO DESCRIPTION. THE ENTIRE  RISK ARISING OUT OF USE OR  * PERFORMANCE OF THE SOFTWARE LIES WITH YOU.  ***********************license end**************************************/
end_comment

begin_comment
comment|/**  * @file  * Typedefs and defines for working with Octeon physical addresses.  *  *<hr>$Revision: 38306 $<hr> */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__CVMX_ADDRESS_H__
end_ifndef

begin_define
define|#
directive|define
name|__CVMX_ADDRESS_H__
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|CVMX_BUILD_FOR_LINUX_KERNEL
end_ifndef

begin_include
include|#
directive|include
file|"cvmx-abi.h"
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
typedef|typedef
enum|enum
block|{
name|CVMX_MIPS_SPACE_XKSEG
init|=
literal|3LL
block|,
name|CVMX_MIPS_SPACE_XKPHYS
init|=
literal|2LL
block|,
name|CVMX_MIPS_SPACE_XSSEG
init|=
literal|1LL
block|,
name|CVMX_MIPS_SPACE_XUSEG
init|=
literal|0LL
block|}
name|cvmx_mips_space_t
typedef|;
typedef|typedef
enum|enum
block|{
name|CVMX_MIPS_XKSEG_SPACE_KSEG0
init|=
literal|0LL
block|,
name|CVMX_MIPS_XKSEG_SPACE_KSEG1
init|=
literal|1LL
block|,
name|CVMX_MIPS_XKSEG_SPACE_SSEG
init|=
literal|2LL
block|,
name|CVMX_MIPS_XKSEG_SPACE_KSEG3
init|=
literal|3LL
block|}
name|cvmx_mips_xkseg_space_t
typedef|;
comment|/* decodes<14:13> of a kseg3 window address */
typedef|typedef
enum|enum
block|{
name|CVMX_ADD_WIN_SCR
init|=
literal|0L
block|,
name|CVMX_ADD_WIN_DMA
init|=
literal|1L
block|,
comment|/* see cvmx_add_win_dma_dec_t for further decode */
name|CVMX_ADD_WIN_UNUSED
init|=
literal|2L
block|,
name|CVMX_ADD_WIN_UNUSED2
init|=
literal|3L
block|}
name|cvmx_add_win_dec_t
typedef|;
comment|/* decode within DMA space */
typedef|typedef
enum|enum
block|{
name|CVMX_ADD_WIN_DMA_ADD
init|=
literal|0L
block|,
comment|/* add store data to the write buffer entry, allocating it if necessary */
name|CVMX_ADD_WIN_DMA_SENDMEM
init|=
literal|1L
block|,
comment|/* send out the write buffer entry to DRAM */
comment|/* store data must be normal DRAM memory space address in this case */
name|CVMX_ADD_WIN_DMA_SENDDMA
init|=
literal|2L
block|,
comment|/* send out the write buffer entry as an IOBDMA command */
comment|/* see CVMX_ADD_WIN_DMA_SEND_DEC for data contents */
name|CVMX_ADD_WIN_DMA_SENDIO
init|=
literal|3L
block|,
comment|/* send out the write buffer entry as an IO write */
comment|/* store data must be normal IO space address in this case */
name|CVMX_ADD_WIN_DMA_SENDSINGLE
init|=
literal|4L
block|,
comment|/* send out a single-tick command on the NCB bus */
comment|/* no write buffer data needed/used */
block|}
name|cvmx_add_win_dma_dec_t
typedef|;
comment|/**  *   Physical Address Decode  *  * Octeon-I HW never interprets this X (<39:36> reserved  * for future expansion), software should set to 0.  *  *  - 0x0 XXX0 0000 0000 to      DRAM         Cached  *  - 0x0 XXX0 0FFF FFFF  *  *  - 0x0 XXX0 1000 0000 to      Boot Bus     Uncached  (Converted to 0x1 00X0 1000 0000  *  - 0x0 XXX0 1FFF FFFF         + EJTAG                           to 0x1 00X0 1FFF FFFF)  *  *  - 0x0 XXX0 2000 0000 to      DRAM         Cached  *  - 0x0 XXXF FFFF FFFF  *  *  - 0x1 00X0 0000 0000 to      Boot Bus     Uncached  *  - 0x1 00XF FFFF FFFF  *  *  - 0x1 01X0 0000 0000 to      Other NCB    Uncached  *  - 0x1 FFXF FFFF FFFF         devices  *  * Decode of all Octeon addresses  */
typedef|typedef
union|union
block|{
name|uint64_t
name|u64
decl_stmt|;
struct|struct
block|{
name|cvmx_mips_space_t
name|R
range|:
literal|2
decl_stmt|;
name|uint64_t
name|offset
range|:
literal|62
decl_stmt|;
block|}
name|sva
struct|;
comment|/* mapped or unmapped virtual address */
struct|struct
block|{
name|uint64_t
name|zeroes
range|:
literal|33
decl_stmt|;
name|uint64_t
name|offset
range|:
literal|31
decl_stmt|;
block|}
name|suseg
struct|;
comment|/* mapped USEG virtual addresses (typically) */
struct|struct
block|{
name|uint64_t
name|ones
range|:
literal|33
decl_stmt|;
name|cvmx_mips_xkseg_space_t
name|sp
range|:
literal|2
decl_stmt|;
name|uint64_t
name|offset
range|:
literal|29
decl_stmt|;
block|}
name|sxkseg
struct|;
comment|/* mapped or unmapped virtual address */
struct|struct
block|{
name|cvmx_mips_space_t
name|R
range|:
literal|2
decl_stmt|;
comment|/* CVMX_MIPS_SPACE_XKPHYS in this case */
name|uint64_t
name|cca
range|:
literal|3
decl_stmt|;
comment|/* ignored by octeon */
name|uint64_t
name|mbz
range|:
literal|10
decl_stmt|;
name|uint64_t
name|pa
range|:
literal|49
decl_stmt|;
comment|/* physical address */
block|}
name|sxkphys
struct|;
comment|/* physical address accessed through xkphys unmapped virtual address */
struct|struct
block|{
name|uint64_t
name|mbz
range|:
literal|15
decl_stmt|;
name|uint64_t
name|is_io
range|:
literal|1
decl_stmt|;
comment|/* if set, the address is uncached and resides on MCB bus */
name|uint64_t
name|did
range|:
literal|8
decl_stmt|;
comment|/* the hardware ignores this field when is_io==0, else device ID */
name|uint64_t
name|unaddr
range|:
literal|4
decl_stmt|;
comment|/* the hardware ignores<39:36> in Octeon I */
name|uint64_t
name|offset
range|:
literal|36
decl_stmt|;
block|}
name|sphys
struct|;
comment|/* physical address */
struct|struct
block|{
name|uint64_t
name|zeroes
range|:
literal|24
decl_stmt|;
comment|/* techically,<47:40> are dont-cares */
name|uint64_t
name|unaddr
range|:
literal|4
decl_stmt|;
comment|/* the hardware ignores<39:36> in Octeon I */
name|uint64_t
name|offset
range|:
literal|36
decl_stmt|;
block|}
name|smem
struct|;
comment|/* physical mem address */
struct|struct
block|{
name|uint64_t
name|mem_region
range|:
literal|2
decl_stmt|;
name|uint64_t
name|mbz
range|:
literal|13
decl_stmt|;
name|uint64_t
name|is_io
range|:
literal|1
decl_stmt|;
comment|/* 1 in this case */
name|uint64_t
name|did
range|:
literal|8
decl_stmt|;
comment|/* the hardware ignores this field when is_io==0, else device ID */
name|uint64_t
name|unaddr
range|:
literal|4
decl_stmt|;
comment|/* the hardware ignores<39:36> in Octeon I */
name|uint64_t
name|offset
range|:
literal|36
decl_stmt|;
block|}
name|sio
struct|;
comment|/* physical IO address */
struct|struct
block|{
name|uint64_t
name|ones
range|:
literal|49
decl_stmt|;
name|cvmx_add_win_dec_t
name|csrdec
range|:
literal|2
decl_stmt|;
comment|/* CVMX_ADD_WIN_SCR (0) in this case */
name|uint64_t
name|addr
range|:
literal|13
decl_stmt|;
block|}
name|sscr
struct|;
comment|/* scratchpad virtual address - accessed through a window at the end of kseg3 */
comment|/* there should only be stores to IOBDMA space, no loads */
struct|struct
block|{
name|uint64_t
name|ones
range|:
literal|49
decl_stmt|;
name|cvmx_add_win_dec_t
name|csrdec
range|:
literal|2
decl_stmt|;
comment|/* CVMX_ADD_WIN_DMA (1) in this case */
name|uint64_t
name|unused2
range|:
literal|3
decl_stmt|;
name|cvmx_add_win_dma_dec_t
name|type
range|:
literal|3
decl_stmt|;
name|uint64_t
name|addr
range|:
literal|7
decl_stmt|;
block|}
name|sdma
struct|;
comment|/* IOBDMA virtual address - accessed through a window at the end of kseg3 */
struct|struct
block|{
name|uint64_t
name|didspace
range|:
literal|24
decl_stmt|;
name|uint64_t
name|unused
range|:
literal|40
decl_stmt|;
block|}
name|sfilldidspace
struct|;
block|}
name|cvmx_addr_t
typedef|;
comment|/* These macros for used by 32 bit applications */
define|#
directive|define
name|CVMX_MIPS32_SPACE_KSEG0
value|1l
define|#
directive|define
name|CVMX_ADD_SEG32
parameter_list|(
name|segment
parameter_list|,
name|add
parameter_list|)
value|(((int32_t)segment<< 31) | (int32_t)(add))
comment|/* Currently all IOs are performed using XKPHYS addressing. Linux uses the     CvmMemCtl register to enable XKPHYS addressing to IO space from user mode.     Future OSes may need to change the upper bits of IO addresses. The     following define controls the upper two bits for all IO addresses generated     by the simple executive library */
define|#
directive|define
name|CVMX_IO_SEG
value|CVMX_MIPS_SPACE_XKPHYS
comment|/* These macros simplify the process of creating common IO addresses */
define|#
directive|define
name|CVMX_ADD_SEG
parameter_list|(
name|segment
parameter_list|,
name|add
parameter_list|)
value|((((uint64_t)segment)<< 62) | (add))
ifndef|#
directive|ifndef
name|CVMX_ADD_IO_SEG
define|#
directive|define
name|CVMX_ADD_IO_SEG
parameter_list|(
name|add
parameter_list|)
value|CVMX_ADD_SEG(CVMX_IO_SEG, (add))
endif|#
directive|endif
define|#
directive|define
name|CVMX_ADDR_DIDSPACE
parameter_list|(
name|did
parameter_list|)
value|(((CVMX_IO_SEG)<< 22) | ((1ULL)<< 8) | (did))
define|#
directive|define
name|CVMX_ADDR_DID
parameter_list|(
name|did
parameter_list|)
value|(CVMX_ADDR_DIDSPACE(did)<< 40)
define|#
directive|define
name|CVMX_FULL_DID
parameter_list|(
name|did
parameter_list|,
name|subdid
parameter_list|)
value|(((did)<< 3) | (subdid))
comment|/* from include/ncb_rsl_id.v */
define|#
directive|define
name|CVMX_OCT_DID_MIS
value|0ULL
comment|/* misc stuff */
define|#
directive|define
name|CVMX_OCT_DID_GMX0
value|1ULL
define|#
directive|define
name|CVMX_OCT_DID_GMX1
value|2ULL
define|#
directive|define
name|CVMX_OCT_DID_PCI
value|3ULL
define|#
directive|define
name|CVMX_OCT_DID_KEY
value|4ULL
define|#
directive|define
name|CVMX_OCT_DID_FPA
value|5ULL
define|#
directive|define
name|CVMX_OCT_DID_DFA
value|6ULL
define|#
directive|define
name|CVMX_OCT_DID_ZIP
value|7ULL
define|#
directive|define
name|CVMX_OCT_DID_RNG
value|8ULL
define|#
directive|define
name|CVMX_OCT_DID_IPD
value|9ULL
define|#
directive|define
name|CVMX_OCT_DID_PKT
value|10ULL
define|#
directive|define
name|CVMX_OCT_DID_TIM
value|11ULL
define|#
directive|define
name|CVMX_OCT_DID_TAG
value|12ULL
comment|/* the rest are not on the IO bus */
define|#
directive|define
name|CVMX_OCT_DID_L2C
value|16ULL
define|#
directive|define
name|CVMX_OCT_DID_LMC
value|17ULL
define|#
directive|define
name|CVMX_OCT_DID_SPX0
value|18ULL
define|#
directive|define
name|CVMX_OCT_DID_SPX1
value|19ULL
define|#
directive|define
name|CVMX_OCT_DID_PIP
value|20ULL
define|#
directive|define
name|CVMX_OCT_DID_ASX0
value|22ULL
define|#
directive|define
name|CVMX_OCT_DID_ASX1
value|23ULL
define|#
directive|define
name|CVMX_OCT_DID_IOB
value|30ULL
define|#
directive|define
name|CVMX_OCT_DID_PKT_SEND
value|CVMX_FULL_DID(CVMX_OCT_DID_PKT,2ULL)
define|#
directive|define
name|CVMX_OCT_DID_TAG_SWTAG
value|CVMX_FULL_DID(CVMX_OCT_DID_TAG,0ULL)
define|#
directive|define
name|CVMX_OCT_DID_TAG_TAG1
value|CVMX_FULL_DID(CVMX_OCT_DID_TAG,1ULL)
define|#
directive|define
name|CVMX_OCT_DID_TAG_TAG2
value|CVMX_FULL_DID(CVMX_OCT_DID_TAG,2ULL)
define|#
directive|define
name|CVMX_OCT_DID_TAG_TAG3
value|CVMX_FULL_DID(CVMX_OCT_DID_TAG,3ULL)
define|#
directive|define
name|CVMX_OCT_DID_TAG_NULL_RD
value|CVMX_FULL_DID(CVMX_OCT_DID_TAG,4ULL)
define|#
directive|define
name|CVMX_OCT_DID_TAG_TAG5
value|CVMX_FULL_DID(CVMX_OCT_DID_TAG,5ULL)
define|#
directive|define
name|CVMX_OCT_DID_TAG_CSR
value|CVMX_FULL_DID(CVMX_OCT_DID_TAG,7ULL)
define|#
directive|define
name|CVMX_OCT_DID_FAU_FAI
value|CVMX_FULL_DID(CVMX_OCT_DID_IOB,0ULL)
define|#
directive|define
name|CVMX_OCT_DID_TIM_CSR
value|CVMX_FULL_DID(CVMX_OCT_DID_TIM,0ULL)
define|#
directive|define
name|CVMX_OCT_DID_KEY_RW
value|CVMX_FULL_DID(CVMX_OCT_DID_KEY,0ULL)
define|#
directive|define
name|CVMX_OCT_DID_PCI_6
value|CVMX_FULL_DID(CVMX_OCT_DID_PCI,6ULL)
define|#
directive|define
name|CVMX_OCT_DID_MIS_BOO
value|CVMX_FULL_DID(CVMX_OCT_DID_MIS,0ULL)
define|#
directive|define
name|CVMX_OCT_DID_PCI_RML
value|CVMX_FULL_DID(CVMX_OCT_DID_PCI,0ULL)
define|#
directive|define
name|CVMX_OCT_DID_IPD_CSR
value|CVMX_FULL_DID(CVMX_OCT_DID_IPD,7ULL)
define|#
directive|define
name|CVMX_OCT_DID_DFA_CSR
value|CVMX_FULL_DID(CVMX_OCT_DID_DFA,7ULL)
define|#
directive|define
name|CVMX_OCT_DID_MIS_CSR
value|CVMX_FULL_DID(CVMX_OCT_DID_MIS,7ULL)
define|#
directive|define
name|CVMX_OCT_DID_ZIP_CSR
value|CVMX_FULL_DID(CVMX_OCT_DID_ZIP,0ULL)
ifndef|#
directive|ifndef
name|CVMX_BUILD_FOR_LINUX_KERNEL
ifdef|#
directive|ifdef
name|CVMX_ABI_N32
define|#
directive|define
name|UNMAPPED_PTR
parameter_list|(
name|x
parameter_list|)
value|( (1U<< 31) | x )
else|#
directive|else
define|#
directive|define
name|UNMAPPED_PTR
parameter_list|(
name|x
parameter_list|)
value|( (1ULL<< 63) | x )
endif|#
directive|endif
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __CVMX_ADDRESS_H__ */
end_comment

end_unit

