begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- GDBRemoteCommunicationServerLLGS.h ----------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|liblldb_GDBRemoteCommunicationServerLLGS_h_
end_ifndef

begin_define
define|#
directive|define
name|liblldb_GDBRemoteCommunicationServerLLGS_h_
end_define

begin_comment
comment|// C Includes
end_comment

begin_comment
comment|// C++ Includes
end_comment

begin_include
include|#
directive|include
file|<mutex>
end_include

begin_include
include|#
directive|include
file|<unordered_map>
end_include

begin_comment
comment|// Other libraries and framework includes
end_comment

begin_include
include|#
directive|include
file|"lldb/Core/Communication.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Host/MainLoop.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Host/common/NativeProcessProtocol.h"
end_include

begin_include
include|#
directive|include
file|"lldb/lldb-private-forward.h"
end_include

begin_comment
comment|// Project includes
end_comment

begin_include
include|#
directive|include
file|"GDBRemoteCommunicationServerCommon.h"
end_include

begin_decl_stmt
name|class
name|StringExtractorGDBRemote
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|namespace
name|lldb_private
block|{
name|namespace
name|process_gdb_remote
block|{
name|class
name|ProcessGDBRemote
decl_stmt|;
name|class
name|GDBRemoteCommunicationServerLLGS
range|:
name|public
name|GDBRemoteCommunicationServerCommon
decl_stmt|,
name|public
name|NativeProcessProtocol
decl|::
name|NativeDelegate
block|{
name|public
label|:
comment|//------------------------------------------------------------------
comment|// Constructors and Destructors
comment|//------------------------------------------------------------------
name|GDBRemoteCommunicationServerLLGS
argument_list|(
name|MainLoop
operator|&
name|mainloop
argument_list|)
expr_stmt|;
comment|//------------------------------------------------------------------
comment|/// Specify the program to launch and its arguments.
comment|///
comment|/// @param[in] args
comment|///     The command line to launch.
comment|///
comment|/// @param[in] argc
comment|///     The number of elements in the args array of cstring pointers.
comment|///
comment|/// @return
comment|///     An Error object indicating the success or failure of making
comment|///     the setting.
comment|//------------------------------------------------------------------
name|Error
name|SetLaunchArguments
parameter_list|(
specifier|const
name|char
modifier|*
specifier|const
name|args
index|[]
parameter_list|,
name|int
name|argc
parameter_list|)
function_decl|;
comment|//------------------------------------------------------------------
comment|/// Specify the launch flags for the process.
comment|///
comment|/// @param[in] launch_flags
comment|///     The launch flags to use when launching this process.
comment|///
comment|/// @return
comment|///     An Error object indicating the success or failure of making
comment|///     the setting.
comment|//------------------------------------------------------------------
name|Error
name|SetLaunchFlags
parameter_list|(
name|unsigned
name|int
name|launch_flags
parameter_list|)
function_decl|;
comment|//------------------------------------------------------------------
comment|/// Launch a process with the current launch settings.
comment|///
comment|/// This method supports running an lldb-gdbserver or similar
comment|/// server in a situation where the startup code has been provided
comment|/// with all the information for a child process to be launched.
comment|///
comment|/// @return
comment|///     An Error object indicating the success or failure of the
comment|///     launch.
comment|//------------------------------------------------------------------
name|Error
name|LaunchProcess
argument_list|()
name|override
expr_stmt|;
comment|//------------------------------------------------------------------
comment|/// Attach to a process.
comment|///
comment|/// This method supports attaching llgs to a process accessible via the
comment|/// configured Platform.
comment|///
comment|/// @return
comment|///     An Error object indicating the success or failure of the
comment|///     attach operation.
comment|//------------------------------------------------------------------
name|Error
name|AttachToProcess
argument_list|(
name|lldb
operator|::
name|pid_t
name|pid
argument_list|)
decl_stmt|;
comment|//------------------------------------------------------------------
comment|// NativeProcessProtocol::NativeDelegate overrides
comment|//------------------------------------------------------------------
name|void
name|InitializeDelegate
argument_list|(
name|NativeProcessProtocol
operator|*
name|process
argument_list|)
name|override
decl_stmt|;
name|void
name|ProcessStateChanged
argument_list|(
name|NativeProcessProtocol
operator|*
name|process
argument_list|,
name|lldb
operator|::
name|StateType
name|state
argument_list|)
name|override
decl_stmt|;
name|void
name|DidExec
argument_list|(
name|NativeProcessProtocol
operator|*
name|process
argument_list|)
name|override
decl_stmt|;
name|Error
name|InitializeConnection
argument_list|(
name|std
operator|::
name|unique_ptr
operator|<
name|Connection
operator|>
operator|&&
name|connection
argument_list|)
decl_stmt|;
name|protected
label|:
name|MainLoop
modifier|&
name|m_mainloop
decl_stmt|;
name|MainLoop
operator|::
name|ReadHandleUP
name|m_network_handle_up
expr_stmt|;
name|lldb
operator|::
name|tid_t
name|m_current_tid
expr_stmt|;
name|lldb
operator|::
name|tid_t
name|m_continue_tid
expr_stmt|;
name|std
operator|::
name|recursive_mutex
name|m_debugged_process_mutex
expr_stmt|;
name|NativeProcessProtocolSP
name|m_debugged_process_sp
decl_stmt|;
name|Communication
name|m_stdio_communication
decl_stmt|;
name|MainLoop
operator|::
name|ReadHandleUP
name|m_stdio_handle_up
expr_stmt|;
name|lldb
operator|::
name|StateType
name|m_inferior_prev_state
expr_stmt|;
name|lldb
operator|::
name|DataBufferSP
name|m_active_auxv_buffer_sp
expr_stmt|;
name|std
operator|::
name|mutex
name|m_saved_registers_mutex
expr_stmt|;
name|std
operator|::
name|unordered_map
operator|<
name|uint32_t
operator|,
name|lldb
operator|::
name|DataBufferSP
operator|>
name|m_saved_registers_map
expr_stmt|;
name|uint32_t
name|m_next_saved_registers_id
decl_stmt|;
name|bool
name|m_handshake_completed
range|:
literal|1
decl_stmt|;
name|PacketResult
name|SendONotification
parameter_list|(
specifier|const
name|char
modifier|*
name|buffer
parameter_list|,
name|uint32_t
name|len
parameter_list|)
function_decl|;
name|PacketResult
name|SendWResponse
parameter_list|(
name|NativeProcessProtocol
modifier|*
name|process
parameter_list|)
function_decl|;
name|PacketResult
name|SendStopReplyPacketForThread
argument_list|(
name|lldb
operator|::
name|tid_t
name|tid
argument_list|)
decl_stmt|;
name|PacketResult
name|SendStopReasonForState
argument_list|(
name|lldb
operator|::
name|StateType
name|process_state
argument_list|)
decl_stmt|;
name|PacketResult
name|Handle_k
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_qProcessInfo
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_qC
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_QSetDisableASLR
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_QSetWorkingDir
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_qGetWorkingDir
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_C
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_c
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_vCont
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_vCont_actions
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_stop_reason
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_qRegisterInfo
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_qfThreadInfo
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_qsThreadInfo
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_p
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_P
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_H
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_I
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_interrupt
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
comment|// Handles $m and $x packets.
name|PacketResult
name|Handle_memory_read
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_M
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_qMemoryRegionInfoSupported
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_qMemoryRegionInfo
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_Z
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_z
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_s
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_qXfer_auxv_read
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_QSaveRegisterState
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_QRestoreRegisterState
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_vAttach
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_D
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_qThreadStopInfo
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_jThreadsInfo
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_qWatchpointSupportInfo
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|PacketResult
name|Handle_qFileLoadAddress
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|void
name|SetCurrentThreadID
argument_list|(
name|lldb
operator|::
name|tid_t
name|tid
argument_list|)
decl_stmt|;
name|lldb
operator|::
name|tid_t
name|GetCurrentThreadID
argument_list|()
specifier|const
expr_stmt|;
name|void
name|SetContinueThreadID
argument_list|(
name|lldb
operator|::
name|tid_t
name|tid
argument_list|)
decl_stmt|;
name|lldb
operator|::
name|tid_t
name|GetContinueThreadID
argument_list|()
specifier|const
block|{
return|return
name|m_continue_tid
return|;
block|}
name|Error
name|SetSTDIOFileDescriptor
parameter_list|(
name|int
name|fd
parameter_list|)
function_decl|;
name|FileSpec
name|FindModuleFile
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|module_path
argument_list|,
specifier|const
name|ArchSpec
operator|&
name|arch
argument_list|)
name|override
decl_stmt|;
name|private
label|:
name|void
name|HandleInferiorState_Exited
parameter_list|(
name|NativeProcessProtocol
modifier|*
name|process
parameter_list|)
function_decl|;
name|void
name|HandleInferiorState_Stopped
parameter_list|(
name|NativeProcessProtocol
modifier|*
name|process
parameter_list|)
function_decl|;
name|NativeThreadProtocolSP
name|GetThreadFromSuffix
parameter_list|(
name|StringExtractorGDBRemote
modifier|&
name|packet
parameter_list|)
function_decl|;
name|uint32_t
name|GetNextSavedRegistersID
parameter_list|()
function_decl|;
name|void
name|MaybeCloseInferiorTerminalConnection
parameter_list|()
function_decl|;
name|void
name|ClearProcessSpecificData
parameter_list|()
function_decl|;
name|void
name|RegisterPacketHandlers
parameter_list|()
function_decl|;
name|void
name|DataAvailableCallback
parameter_list|()
function_decl|;
name|void
name|SendProcessOutput
parameter_list|()
function_decl|;
name|void
name|StartSTDIOForwarding
parameter_list|()
function_decl|;
name|void
name|StopSTDIOForwarding
parameter_list|()
function_decl|;
comment|//------------------------------------------------------------------
comment|// For GDBRemoteCommunicationServerLLGS only
comment|//------------------------------------------------------------------
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|GDBRemoteCommunicationServerLLGS
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
block|}
comment|// namespace process_gdb_remote
block|}
end_decl_stmt

begin_comment
comment|// namespace lldb_private
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// liblldb_GDBRemoteCommunicationServerLLGS_h_
end_comment

end_unit

