begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- RegisterInfos_s390x.h -----------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|// C Includes
end_comment

begin_include
include|#
directive|include
file|<stddef.h>
end_include

begin_comment
comment|// C++ Includes
end_comment

begin_comment
comment|// Other libraries and framework includes
end_comment

begin_include
include|#
directive|include
file|"llvm/Support/Compiler.h"
end_include

begin_comment
comment|// Project includes
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|DECLARE_REGISTER_INFOS_S390X_STRUCT
end_ifdef

begin_comment
comment|// Computes the offset of the given GPR in the user data area.
end_comment

begin_define
define|#
directive|define
name|GPR_OFFSET
parameter_list|(
name|num
parameter_list|)
value|(16 + 8 * num)
end_define

begin_comment
comment|// Computes the offset of the given ACR in the user data area.
end_comment

begin_define
define|#
directive|define
name|ACR_OFFSET
parameter_list|(
name|num
parameter_list|)
value|(16 + 8 * 16 + 4 * num)
end_define

begin_comment
comment|// Computes the offset of the given FPR in the extended data area.
end_comment

begin_define
define|#
directive|define
name|FPR_OFFSET
parameter_list|(
name|num
parameter_list|)
value|(8 + 8 * num)
end_define

begin_comment
comment|// RegisterKind: EHFrame, DWARF, Generic, Process Plugin, LLDB
end_comment

begin_define
define|#
directive|define
name|DEFINE_GPR
parameter_list|(
name|name
parameter_list|,
name|size
parameter_list|,
name|offset
parameter_list|,
name|alt
parameter_list|,
name|generic
parameter_list|)
define|\
value|{                                                                                                                  \         #name, alt, size, offset, eEncodingUint, eFormatHex,                                                           \         { dwarf_##name##_s390x, dwarf_##name##_s390x, generic, LLDB_INVALID_REGNUM, lldb_##name##_s390x },             \         NULL, NULL, NULL, 0                                                                                            \     }
end_define

begin_define
define|#
directive|define
name|DEFINE_GPR_NODWARF
parameter_list|(
name|name
parameter_list|,
name|size
parameter_list|,
name|offset
parameter_list|,
name|alt
parameter_list|,
name|generic
parameter_list|)
define|\
value|{                                                                                                                  \         #name, alt, size, offset, eEncodingUint, eFormatHex,                                                           \         { LLDB_INVALID_REGNUM, LLDB_INVALID_REGNUM, generic, LLDB_INVALID_REGNUM, lldb_##name##_s390x },               \         NULL, NULL, NULL, 0                                                                                            \     }
end_define

begin_define
define|#
directive|define
name|DEFINE_FPR
parameter_list|(
name|name
parameter_list|,
name|size
parameter_list|,
name|offset
parameter_list|)
define|\
value|{                                                                                                                  \         #name, NULL, size, offset, eEncodingUint, eFormatHex,                                                          \         { dwarf_##name##_s390x, dwarf_##name##_s390x, LLDB_INVALID_REGNUM, LLDB_INVALID_REGNUM, lldb_##name##_s390x }, \         NULL, NULL, NULL, 0                                                                                            \     }
end_define

begin_define
define|#
directive|define
name|DEFINE_FPR_NODWARF
parameter_list|(
name|name
parameter_list|,
name|size
parameter_list|,
name|offset
parameter_list|)
define|\
value|{                                                                                                                  \         #name, NULL, size, offset, eEncodingUint, eFormatHex,                                                          \         { LLDB_INVALID_REGNUM, LLDB_INVALID_REGNUM, LLDB_INVALID_REGNUM, LLDB_INVALID_REGNUM, lldb_##name##_s390x },   \         NULL, NULL, NULL, 0                                                                                            \     }
end_define

begin_decl_stmt
specifier|static
name|RegisterInfo
name|g_register_infos_s390x
index|[]
init|=
block|{
comment|// General purpose registers.
name|DEFINE_GPR
argument_list|(
name|r0
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|0
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r1
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|1
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r2
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"arg1"
argument_list|,
name|LLDB_REGNUM_GENERIC_ARG1
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r3
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"arg2"
argument_list|,
name|LLDB_REGNUM_GENERIC_ARG2
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r4
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|"arg3"
argument_list|,
name|LLDB_REGNUM_GENERIC_ARG3
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r5
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|"arg4"
argument_list|,
name|LLDB_REGNUM_GENERIC_ARG4
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r6
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|"arg5"
argument_list|,
name|LLDB_REGNUM_GENERIC_ARG5
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r7
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|7
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r8
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|8
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r9
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|9
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r10
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|10
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r11
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|11
argument_list|)
argument_list|,
literal|"fp"
argument_list|,
name|LLDB_REGNUM_GENERIC_FP
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r12
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|12
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r13
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|13
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r14
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|14
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|r15
argument_list|,
literal|8
argument_list|,
name|GPR_OFFSET
argument_list|(
literal|15
argument_list|)
argument_list|,
literal|"sp"
argument_list|,
name|LLDB_REGNUM_GENERIC_SP
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr0
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|0
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr1
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|1
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr2
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|2
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr3
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|3
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr4
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|4
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr5
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|5
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr6
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|6
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr7
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|7
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr8
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|8
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr9
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|9
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr10
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|10
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr11
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|11
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr12
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|12
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr13
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|13
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr14
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|14
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|acr15
argument_list|,
literal|4
argument_list|,
name|ACR_OFFSET
argument_list|(
literal|15
argument_list|)
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|pswm
argument_list|,
literal|8
argument_list|,
literal|0
argument_list|,
literal|"flags"
argument_list|,
name|LLDB_REGNUM_GENERIC_FLAGS
argument_list|)
block|,
name|DEFINE_GPR
argument_list|(
name|pswa
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|,
literal|"pc"
argument_list|,
name|LLDB_REGNUM_GENERIC_PC
argument_list|)
block|,
comment|// Floating point registers.
name|DEFINE_FPR
argument_list|(
name|f0
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|0
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f1
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|1
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f2
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|2
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f3
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|3
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f4
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|4
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f5
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|5
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f6
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|6
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f7
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|7
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f8
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|8
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f9
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|9
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f10
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|10
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f11
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|11
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f12
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|12
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f13
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|13
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f14
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|14
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR
argument_list|(
name|f15
argument_list|,
literal|8
argument_list|,
name|FPR_OFFSET
argument_list|(
literal|15
argument_list|)
argument_list|)
block|,
name|DEFINE_FPR_NODWARF
argument_list|(
name|fpc
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|)
block|,
comment|// Linux operating-specific info.
name|DEFINE_GPR_NODWARF
argument_list|(
name|orig_r2
argument_list|,
literal|8
argument_list|,
literal|16
operator|+
literal|16
operator|*
literal|8
operator|+
literal|16
operator|*
literal|4
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR_NODWARF
argument_list|(
name|last_break
argument_list|,
literal|8
argument_list|,
literal|0
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|,
name|DEFINE_GPR_NODWARF
argument_list|(
name|system_call
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|,
name|nullptr
argument_list|,
name|LLDB_INVALID_REGNUM
argument_list|)
block|, }
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|static_assert
argument_list|(
operator|(
sizeof|sizeof
argument_list|(
name|g_register_infos_s390x
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|g_register_infos_s390x
index|[
literal|0
index|]
argument_list|)
operator|)
operator|==
name|k_num_registers_s390x
argument_list|,
literal|"g_register_infos_s390x has wrong number of register infos"
argument_list|)
expr_stmt|;
end_expr_stmt

begin_undef
undef|#
directive|undef
name|GPR_OFFSET
end_undef

begin_undef
undef|#
directive|undef
name|ACR_OFFSET
end_undef

begin_undef
undef|#
directive|undef
name|FPR_OFFSET
end_undef

begin_undef
undef|#
directive|undef
name|DEFINE_GPR
end_undef

begin_undef
undef|#
directive|undef
name|DEFINE_GPR_NODWARF
end_undef

begin_undef
undef|#
directive|undef
name|DEFINE_FPR
end_undef

begin_undef
undef|#
directive|undef
name|DEFINE_FPR_NODWARF
end_undef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// DECLARE_REGISTER_INFOS_S390X_STRUCT
end_comment

end_unit

