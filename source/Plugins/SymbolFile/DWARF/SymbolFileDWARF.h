begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- SymbolFileDWARF.h --------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SymbolFileDWARF_SymbolFileDWARF_h_
end_ifndef

begin_define
define|#
directive|define
name|SymbolFileDWARF_SymbolFileDWARF_h_
end_define

begin_comment
comment|// C Includes
end_comment

begin_comment
comment|// C++ Includes
end_comment

begin_include
include|#
directive|include
file|<list>
end_include

begin_include
include|#
directive|include
file|<map>
end_include

begin_include
include|#
directive|include
file|<mutex>
end_include

begin_include
include|#
directive|include
file|<set>
end_include

begin_include
include|#
directive|include
file|<unordered_map>
end_include

begin_include
include|#
directive|include
file|<vector>
end_include

begin_comment
comment|// Other libraries and framework includes
end_comment

begin_include
include|#
directive|include
file|"llvm/ADT/DenseMap.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Core/ConstString.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Core/Flags.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Core/RangeMap.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Core/UniqueCStringMap.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Core/dwarf.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Expression/DWARFExpression.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Symbol/DebugMacros.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Symbol/SymbolContext.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Symbol/SymbolFile.h"
end_include

begin_include
include|#
directive|include
file|"lldb/lldb-private.h"
end_include

begin_comment
comment|// Project includes
end_comment

begin_include
include|#
directive|include
file|"DWARFDataExtractor.h"
end_include

begin_include
include|#
directive|include
file|"DWARFDefines.h"
end_include

begin_include
include|#
directive|include
file|"HashedNameToDIE.h"
end_include

begin_include
include|#
directive|include
file|"NameToDIE.h"
end_include

begin_include
include|#
directive|include
file|"UniqueDWARFASTType.h"
end_include

begin_comment
comment|//----------------------------------------------------------------------
end_comment

begin_comment
comment|// Forward Declarations for this DWARF plugin
end_comment

begin_comment
comment|//----------------------------------------------------------------------
end_comment

begin_decl_stmt
name|class
name|DebugMapModule
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFAbbreviationDeclaration
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFAbbreviationDeclarationSet
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFileUnit
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDebugAbbrev
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDebugAranges
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDebugInfo
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDebugInfoEntry
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDebugLine
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDebugPubnames
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDebugRanges
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDeclContext
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFDIECollection
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|DWARFFormValue
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|SymbolFileDWARFDebugMap
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|class
name|SymbolFileDWARFDwo
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|DIE_IS_BEING_PARSED
value|((lldb_private::Type *)1)
end_define

begin_decl_stmt
name|class
name|SymbolFileDWARF
range|:
name|public
name|lldb_private
operator|::
name|SymbolFile
decl_stmt|,
name|public
name|lldb_private
decl|::
name|UserID
block|{
name|public
label|:
name|friend
name|class
name|SymbolFileDWARFDebugMap
decl_stmt|;
name|friend
name|class
name|SymbolFileDWARFDwo
decl_stmt|;
name|friend
name|class
name|DebugMapModule
decl_stmt|;
name|friend
struct_decl|struct
name|DIERef
struct_decl|;
name|friend
name|class
name|DWARFCompileUnit
decl_stmt|;
name|friend
name|class
name|DWARFDIE
decl_stmt|;
name|friend
name|class
name|DWARFASTParserClang
decl_stmt|;
name|friend
name|class
name|DWARFASTParserGo
decl_stmt|;
name|friend
name|class
name|DWARFASTParserJava
decl_stmt|;
name|friend
name|class
name|DWARFASTParserOCaml
decl_stmt|;
comment|//------------------------------------------------------------------
comment|// Static Functions
comment|//------------------------------------------------------------------
specifier|static
name|void
name|Initialize
parameter_list|()
function_decl|;
specifier|static
name|void
name|Terminate
parameter_list|()
function_decl|;
specifier|static
name|void
name|DebuggerInitialize
argument_list|(
name|lldb_private
operator|::
name|Debugger
operator|&
name|debugger
argument_list|)
decl_stmt|;
specifier|static
name|lldb_private
operator|::
name|ConstString
name|GetPluginNameStatic
argument_list|()
expr_stmt|;
specifier|static
specifier|const
name|char
modifier|*
name|GetPluginDescriptionStatic
parameter_list|()
function_decl|;
specifier|static
name|lldb_private
operator|::
name|SymbolFile
operator|*
name|CreateInstance
argument_list|(
name|lldb_private
operator|::
name|ObjectFile
operator|*
name|obj_file
argument_list|)
expr_stmt|;
comment|//------------------------------------------------------------------
comment|// Constructors and Destructors
comment|//------------------------------------------------------------------
name|SymbolFileDWARF
argument_list|(
name|lldb_private
operator|::
name|ObjectFile
operator|*
name|ofile
argument_list|)
expr_stmt|;
operator|~
name|SymbolFileDWARF
argument_list|()
name|override
expr_stmt|;
name|uint32_t
name|CalculateAbilities
argument_list|()
name|override
expr_stmt|;
name|void
name|InitializeObject
argument_list|()
name|override
expr_stmt|;
comment|//------------------------------------------------------------------
comment|// Compile Unit function calls
comment|//------------------------------------------------------------------
name|uint32_t
name|GetNumCompileUnits
argument_list|()
name|override
expr_stmt|;
name|lldb
operator|::
name|CompUnitSP
name|ParseCompileUnitAtIndex
argument_list|(
argument|uint32_t index
argument_list|)
name|override
expr_stmt|;
name|lldb
operator|::
name|LanguageType
name|ParseCompileUnitLanguage
argument_list|(
argument|const lldb_private::SymbolContext&sc
argument_list|)
name|override
expr_stmt|;
name|size_t
name|ParseCompileUnitFunctions
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|)
name|override
decl_stmt|;
name|bool
name|ParseCompileUnitLineTable
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|)
name|override
decl_stmt|;
name|bool
name|ParseCompileUnitDebugMacros
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|)
name|override
decl_stmt|;
name|bool
name|ParseCompileUnitSupportFiles
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|,
name|lldb_private
operator|::
name|FileSpecList
operator|&
name|support_files
argument_list|)
name|override
decl_stmt|;
name|bool
name|ParseCompileUnitIsOptimized
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|)
name|override
decl_stmt|;
name|bool
name|ParseImportedModules
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|,
name|std
operator|::
name|vector
operator|<
name|lldb_private
operator|::
name|ConstString
operator|>
operator|&
name|imported_modules
argument_list|)
name|override
decl_stmt|;
name|size_t
name|ParseFunctionBlocks
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|)
name|override
decl_stmt|;
name|size_t
name|ParseTypes
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|)
name|override
decl_stmt|;
name|size_t
name|ParseVariablesForContext
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|)
name|override
decl_stmt|;
name|lldb_private
operator|::
name|Type
operator|*
name|ResolveTypeUID
argument_list|(
argument|lldb::user_id_t type_uid
argument_list|)
name|override
expr_stmt|;
name|bool
name|CompleteType
argument_list|(
name|lldb_private
operator|::
name|CompilerType
operator|&
name|compiler_type
argument_list|)
name|override
decl_stmt|;
name|lldb_private
operator|::
name|Type
operator|*
name|ResolveType
argument_list|(
argument|const DWARFDIE&die
argument_list|,
argument|bool assert_not_being_parsed = true
argument_list|,
argument|bool resolve_function_context = false
argument_list|)
expr_stmt|;
name|SymbolFileDWARF
modifier|*
name|GetDWARFForUID
argument_list|(
name|lldb
operator|::
name|user_id_t
name|uid
argument_list|)
decl_stmt|;
name|DWARFDIE
name|GetDIEFromUID
argument_list|(
name|lldb
operator|::
name|user_id_t
name|uid
argument_list|)
decl_stmt|;
name|lldb_private
operator|::
name|CompilerDecl
name|GetDeclForUID
argument_list|(
argument|lldb::user_id_t uid
argument_list|)
name|override
expr_stmt|;
name|lldb_private
operator|::
name|CompilerDeclContext
name|GetDeclContextForUID
argument_list|(
argument|lldb::user_id_t uid
argument_list|)
name|override
expr_stmt|;
name|lldb_private
operator|::
name|CompilerDeclContext
name|GetDeclContextContainingUID
argument_list|(
argument|lldb::user_id_t uid
argument_list|)
name|override
expr_stmt|;
name|void
name|ParseDeclsForContext
argument_list|(
name|lldb_private
operator|::
name|CompilerDeclContext
name|decl_ctx
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|ResolveSymbolContext
argument_list|(
specifier|const
name|lldb_private
operator|::
name|Address
operator|&
name|so_addr
argument_list|,
name|uint32_t
name|resolve_scope
argument_list|,
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|ResolveSymbolContext
argument_list|(
specifier|const
name|lldb_private
operator|::
name|FileSpec
operator|&
name|file_spec
argument_list|,
name|uint32_t
name|line
argument_list|,
name|bool
name|check_inlines
argument_list|,
name|uint32_t
name|resolve_scope
argument_list|,
name|lldb_private
operator|::
name|SymbolContextList
operator|&
name|sc_list
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|FindGlobalVariables
argument_list|(
specifier|const
name|lldb_private
operator|::
name|ConstString
operator|&
name|name
argument_list|,
specifier|const
name|lldb_private
operator|::
name|CompilerDeclContext
operator|*
name|parent_decl_ctx
argument_list|,
name|bool
name|append
argument_list|,
name|uint32_t
name|max_matches
argument_list|,
name|lldb_private
operator|::
name|VariableList
operator|&
name|variables
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|FindGlobalVariables
argument_list|(
specifier|const
name|lldb_private
operator|::
name|RegularExpression
operator|&
name|regex
argument_list|,
name|bool
name|append
argument_list|,
name|uint32_t
name|max_matches
argument_list|,
name|lldb_private
operator|::
name|VariableList
operator|&
name|variables
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|FindFunctions
argument_list|(
specifier|const
name|lldb_private
operator|::
name|ConstString
operator|&
name|name
argument_list|,
specifier|const
name|lldb_private
operator|::
name|CompilerDeclContext
operator|*
name|parent_decl_ctx
argument_list|,
name|uint32_t
name|name_type_mask
argument_list|,
name|bool
name|include_inlines
argument_list|,
name|bool
name|append
argument_list|,
name|lldb_private
operator|::
name|SymbolContextList
operator|&
name|sc_list
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|FindFunctions
argument_list|(
specifier|const
name|lldb_private
operator|::
name|RegularExpression
operator|&
name|regex
argument_list|,
name|bool
name|include_inlines
argument_list|,
name|bool
name|append
argument_list|,
name|lldb_private
operator|::
name|SymbolContextList
operator|&
name|sc_list
argument_list|)
name|override
decl_stmt|;
name|void
name|GetMangledNamesForFunction
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|scope_qualified_name
argument_list|,
name|std
operator|::
name|vector
operator|<
name|lldb_private
operator|::
name|ConstString
operator|>
operator|&
name|mangled_names
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|FindTypes
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|,
specifier|const
name|lldb_private
operator|::
name|ConstString
operator|&
name|name
argument_list|,
specifier|const
name|lldb_private
operator|::
name|CompilerDeclContext
operator|*
name|parent_decl_ctx
argument_list|,
name|bool
name|append
argument_list|,
name|uint32_t
name|max_matches
argument_list|,
name|llvm
operator|::
name|DenseSet
operator|<
name|lldb_private
operator|::
name|SymbolFile
operator|*
operator|>
operator|&
name|searched_symbol_files
argument_list|,
name|lldb_private
operator|::
name|TypeMap
operator|&
name|types
argument_list|)
name|override
decl_stmt|;
name|size_t
name|FindTypes
argument_list|(
specifier|const
name|std
operator|::
name|vector
operator|<
name|lldb_private
operator|::
name|CompilerContext
operator|>
operator|&
name|context
argument_list|,
name|bool
name|append
argument_list|,
name|lldb_private
operator|::
name|TypeMap
operator|&
name|types
argument_list|)
name|override
decl_stmt|;
name|lldb_private
operator|::
name|TypeList
operator|*
name|GetTypeList
argument_list|()
name|override
expr_stmt|;
name|size_t
name|GetTypes
argument_list|(
name|lldb_private
operator|::
name|SymbolContextScope
operator|*
name|sc_scope
argument_list|,
name|uint32_t
name|type_mask
argument_list|,
name|lldb_private
operator|::
name|TypeList
operator|&
name|type_list
argument_list|)
name|override
decl_stmt|;
name|lldb_private
operator|::
name|TypeSystem
operator|*
name|GetTypeSystemForLanguage
argument_list|(
argument|lldb::LanguageType language
argument_list|)
name|override
expr_stmt|;
name|lldb_private
operator|::
name|CompilerDeclContext
name|FindNamespace
argument_list|(
argument|const lldb_private::SymbolContext&sc
argument_list|,
argument|const lldb_private::ConstString&name
argument_list|,
argument|const lldb_private::CompilerDeclContext *parent_decl_ctx
argument_list|)
name|override
expr_stmt|;
comment|//------------------------------------------------------------------
comment|// PluginInterface protocol
comment|//------------------------------------------------------------------
name|lldb_private
operator|::
name|ConstString
name|GetPluginName
argument_list|()
name|override
expr_stmt|;
name|uint32_t
name|GetPluginVersion
argument_list|()
name|override
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_debug_abbrev_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_debug_addr_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_debug_aranges_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_debug_frame_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_debug_info_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_debug_line_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_debug_macro_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_debug_loc_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_debug_ranges_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_debug_str_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_debug_str_offsets_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_apple_names_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_apple_types_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_apple_namespaces_data
argument_list|()
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|get_apple_objc_data
argument_list|()
expr_stmt|;
name|DWARFDebugAbbrev
modifier|*
name|DebugAbbrev
parameter_list|()
function_decl|;
specifier|const
name|DWARFDebugAbbrev
operator|*
name|DebugAbbrev
argument_list|()
specifier|const
expr_stmt|;
name|DWARFDebugInfo
modifier|*
name|DebugInfo
parameter_list|()
function_decl|;
specifier|const
name|DWARFDebugInfo
operator|*
name|DebugInfo
argument_list|()
specifier|const
expr_stmt|;
name|DWARFDebugRanges
modifier|*
name|DebugRanges
parameter_list|()
function_decl|;
specifier|const
name|DWARFDebugRanges
operator|*
name|DebugRanges
argument_list|()
specifier|const
expr_stmt|;
specifier|static
name|bool
name|SupportedVersion
parameter_list|(
name|uint16_t
name|version
parameter_list|)
function_decl|;
name|DWARFDIE
name|GetDeclContextDIEContainingDIE
parameter_list|(
specifier|const
name|DWARFDIE
modifier|&
name|die
parameter_list|)
function_decl|;
name|bool
name|HasForwardDeclForClangType
argument_list|(
specifier|const
name|lldb_private
operator|::
name|CompilerType
operator|&
name|compiler_type
argument_list|)
decl_stmt|;
name|lldb_private
operator|::
name|CompileUnit
operator|*
name|GetCompUnitForDWARFCompUnit
argument_list|(
argument|DWARFCompileUnit *dwarf_cu
argument_list|,
argument|uint32_t cu_idx = UINT32_MAX
argument_list|)
expr_stmt|;
name|size_t
name|GetObjCMethodDIEOffsets
argument_list|(
name|lldb_private
operator|::
name|ConstString
name|class_name
argument_list|,
name|DIEArray
operator|&
name|method_die_offsets
argument_list|)
decl_stmt|;
name|bool
name|Supports_DW_AT_APPLE_objc_complete_type
parameter_list|(
name|DWARFCompileUnit
modifier|*
name|cu
parameter_list|)
function_decl|;
name|lldb_private
operator|::
name|DebugMacrosSP
name|ParseDebugMacros
argument_list|(
name|lldb
operator|::
name|offset_t
operator|*
name|offset
argument_list|)
expr_stmt|;
specifier|static
name|DWARFDIE
name|GetParentSymbolContextDIE
parameter_list|(
specifier|const
name|DWARFDIE
modifier|&
name|die
parameter_list|)
function_decl|;
name|virtual
name|lldb
operator|::
name|CompUnitSP
name|ParseCompileUnit
argument_list|(
argument|DWARFCompileUnit *dwarf_cu
argument_list|,
argument|uint32_t cu_idx
argument_list|)
expr_stmt|;
name|virtual
name|lldb_private
operator|::
name|DWARFExpression
operator|::
name|LocationListFormat
name|GetLocationListFormat
argument_list|()
specifier|const
expr_stmt|;
name|lldb
operator|::
name|ModuleSP
name|GetDWOModule
argument_list|(
argument|lldb_private::ConstString name
argument_list|)
expr_stmt|;
name|virtual
name|DWARFDIE
name|GetDIE
parameter_list|(
specifier|const
name|DIERef
modifier|&
name|die_ref
parameter_list|)
function_decl|;
name|virtual
name|std
operator|::
name|unique_ptr
operator|<
name|SymbolFileDWARFDwo
operator|>
name|GetDwoSymbolFileForCompileUnit
argument_list|(
name|DWARFCompileUnit
operator|&
name|dwarf_cu
argument_list|,
specifier|const
name|DWARFDebugInfoEntry
operator|&
name|cu_die
argument_list|)
expr_stmt|;
name|protected
label|:
typedef|typedef
name|llvm
operator|::
name|DenseMap
operator|<
specifier|const
name|DWARFDebugInfoEntry
operator|*
operator|,
name|lldb_private
operator|::
name|Type
operator|*
operator|>
name|DIEToTypePtr
expr_stmt|;
typedef|typedef
name|llvm
operator|::
name|DenseMap
operator|<
specifier|const
name|DWARFDebugInfoEntry
operator|*
operator|,
name|lldb
operator|::
name|VariableSP
operator|>
name|DIEToVariableSP
expr_stmt|;
typedef|typedef
name|llvm
operator|::
name|DenseMap
operator|<
specifier|const
name|DWARFDebugInfoEntry
operator|*
operator|,
name|lldb
operator|::
name|opaque_compiler_type_t
operator|>
name|DIEToClangType
expr_stmt|;
typedef|typedef
name|llvm
operator|::
name|DenseMap
operator|<
name|lldb
operator|::
name|opaque_compiler_type_t
operator|,
name|DIERef
operator|>
name|ClangTypeToDIE
expr_stmt|;
struct|struct
name|DWARFDataSegment
block|{
name|std
operator|::
name|once_flag
name|m_flag
expr_stmt|;
name|lldb_private
operator|::
name|DWARFDataExtractor
name|m_data
expr_stmt|;
block|}
struct|;
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|SymbolFileDWARF
argument_list|)
expr_stmt|;
specifier|const
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|GetCachedSectionData
argument_list|(
argument|lldb::SectionType sect_type
argument_list|,
argument|DWARFDataSegment&data_segment
argument_list|)
expr_stmt|;
name|virtual
name|void
name|LoadSectionData
argument_list|(
name|lldb
operator|::
name|SectionType
name|sect_type
argument_list|,
name|lldb_private
operator|::
name|DWARFDataExtractor
operator|&
name|data
argument_list|)
decl_stmt|;
name|bool
name|DeclContextMatchesThisSymbolFile
argument_list|(
specifier|const
name|lldb_private
operator|::
name|CompilerDeclContext
operator|*
name|decl_ctx
argument_list|)
decl_stmt|;
name|bool
name|DIEInDeclContext
argument_list|(
specifier|const
name|lldb_private
operator|::
name|CompilerDeclContext
operator|*
name|parent_decl_ctx
argument_list|,
specifier|const
name|DWARFDIE
operator|&
name|die
argument_list|)
decl_stmt|;
name|virtual
name|DWARFCompileUnit
modifier|*
name|GetDWARFCompileUnit
argument_list|(
name|lldb_private
operator|::
name|CompileUnit
operator|*
name|comp_unit
argument_list|)
decl_stmt|;
name|DWARFCompileUnit
modifier|*
name|GetNextUnparsedDWARFCompileUnit
parameter_list|(
name|DWARFCompileUnit
modifier|*
name|prev_cu
parameter_list|)
function_decl|;
name|bool
name|GetFunction
argument_list|(
specifier|const
name|DWARFDIE
operator|&
name|die
argument_list|,
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|)
decl_stmt|;
name|lldb_private
operator|::
name|Function
operator|*
name|ParseCompileUnitFunction
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|,
specifier|const
name|DWARFDIE
operator|&
name|die
argument_list|)
expr_stmt|;
name|size_t
name|ParseFunctionBlocks
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|,
name|lldb_private
operator|::
name|Block
operator|*
name|parent_block
argument_list|,
specifier|const
name|DWARFDIE
operator|&
name|die
argument_list|,
name|lldb
operator|::
name|addr_t
name|subprogram_low_pc
argument_list|,
name|uint32_t
name|depth
argument_list|)
decl_stmt|;
name|size_t
name|ParseTypes
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|,
specifier|const
name|DWARFDIE
operator|&
name|die
argument_list|,
name|bool
name|parse_siblings
argument_list|,
name|bool
name|parse_children
argument_list|)
decl_stmt|;
name|lldb
operator|::
name|TypeSP
name|ParseType
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|,
specifier|const
name|DWARFDIE
operator|&
name|die
argument_list|,
name|bool
operator|*
name|type_is_new
argument_list|)
expr_stmt|;
name|lldb_private
operator|::
name|Type
operator|*
name|ResolveTypeUID
argument_list|(
argument|const DWARFDIE&die
argument_list|,
argument|bool assert_not_being_parsed
argument_list|)
expr_stmt|;
name|lldb_private
operator|::
name|Type
operator|*
name|ResolveTypeUID
argument_list|(
specifier|const
name|DIERef
operator|&
name|die_ref
argument_list|)
expr_stmt|;
name|lldb
operator|::
name|VariableSP
name|ParseVariableDIE
argument_list|(
argument|const lldb_private::SymbolContext&sc
argument_list|,
argument|const DWARFDIE&die
argument_list|,
argument|const lldb::addr_t func_low_pc
argument_list|)
expr_stmt|;
name|size_t
name|ParseVariables
argument_list|(
specifier|const
name|lldb_private
operator|::
name|SymbolContext
operator|&
name|sc
argument_list|,
specifier|const
name|DWARFDIE
operator|&
name|orig_die
argument_list|,
specifier|const
name|lldb
operator|::
name|addr_t
name|func_low_pc
argument_list|,
name|bool
name|parse_siblings
argument_list|,
name|bool
name|parse_children
argument_list|,
name|lldb_private
operator|::
name|VariableList
operator|*
name|cc_variable_list
operator|=
name|NULL
argument_list|)
decl_stmt|;
name|bool
name|ClassOrStructIsVirtual
parameter_list|(
specifier|const
name|DWARFDIE
modifier|&
name|die
parameter_list|)
function_decl|;
comment|// Given a die_offset, figure out the symbol context representing that die.
name|bool
name|ResolveFunction
argument_list|(
specifier|const
name|DIERef
operator|&
name|die_ref
argument_list|,
name|bool
name|include_inlines
argument_list|,
name|lldb_private
operator|::
name|SymbolContextList
operator|&
name|sc_list
argument_list|)
decl_stmt|;
name|bool
name|ResolveFunction
argument_list|(
specifier|const
name|DWARFDIE
operator|&
name|die
argument_list|,
name|bool
name|include_inlines
argument_list|,
name|lldb_private
operator|::
name|SymbolContextList
operator|&
name|sc_list
argument_list|)
decl_stmt|;
name|void
name|FindFunctions
argument_list|(
specifier|const
name|lldb_private
operator|::
name|ConstString
operator|&
name|name
argument_list|,
specifier|const
name|NameToDIE
operator|&
name|name_to_die
argument_list|,
name|bool
name|include_inlines
argument_list|,
name|lldb_private
operator|::
name|SymbolContextList
operator|&
name|sc_list
argument_list|)
decl_stmt|;
name|void
name|FindFunctions
argument_list|(
specifier|const
name|lldb_private
operator|::
name|RegularExpression
operator|&
name|regex
argument_list|,
specifier|const
name|NameToDIE
operator|&
name|name_to_die
argument_list|,
name|bool
name|include_inlines
argument_list|,
name|lldb_private
operator|::
name|SymbolContextList
operator|&
name|sc_list
argument_list|)
decl_stmt|;
name|void
name|FindFunctions
argument_list|(
specifier|const
name|lldb_private
operator|::
name|RegularExpression
operator|&
name|regex
argument_list|,
specifier|const
name|DWARFMappedHash
operator|::
name|MemoryTable
operator|&
name|memory_table
argument_list|,
name|bool
name|include_inlines
argument_list|,
name|lldb_private
operator|::
name|SymbolContextList
operator|&
name|sc_list
argument_list|)
decl_stmt|;
name|virtual
name|lldb
operator|::
name|TypeSP
name|FindDefinitionTypeForDWARFDeclContext
argument_list|(
specifier|const
name|DWARFDeclContext
operator|&
name|die_decl_ctx
argument_list|)
expr_stmt|;
name|lldb
operator|::
name|TypeSP
name|FindCompleteObjCDefinitionTypeForDIE
argument_list|(
argument|const DWARFDIE&die
argument_list|,
argument|const lldb_private::ConstString&type_name
argument_list|,
argument|bool must_be_implementation
argument_list|)
expr_stmt|;
name|lldb
operator|::
name|TypeSP
name|FindCompleteObjCDefinitionType
argument_list|(
argument|const lldb_private::ConstString&type_name
argument_list|,
argument|bool header_definition_ok
argument_list|)
expr_stmt|;
name|lldb_private
operator|::
name|Symbol
operator|*
name|GetObjCClassSymbol
argument_list|(
specifier|const
name|lldb_private
operator|::
name|ConstString
operator|&
name|objc_class_name
argument_list|)
expr_stmt|;
name|void
name|ParseFunctions
argument_list|(
specifier|const
name|DIEArray
operator|&
name|die_offsets
argument_list|,
name|bool
name|include_inlines
argument_list|,
name|lldb_private
operator|::
name|SymbolContextList
operator|&
name|sc_list
argument_list|)
decl_stmt|;
name|lldb
operator|::
name|TypeSP
name|GetTypeForDIE
argument_list|(
argument|const DWARFDIE&die
argument_list|,
argument|bool resolve_function_context = false
argument_list|)
expr_stmt|;
name|void
name|Index
parameter_list|()
function_decl|;
name|void
name|DumpIndexes
parameter_list|()
function_decl|;
name|void
name|SetDebugMapModule
argument_list|(
specifier|const
name|lldb
operator|::
name|ModuleSP
operator|&
name|module_sp
argument_list|)
block|{
name|m_debug_map_module_wp
operator|=
name|module_sp
expr_stmt|;
block|}
name|SymbolFileDWARFDebugMap
modifier|*
name|GetDebugMapSymfile
parameter_list|()
function_decl|;
name|DWARFDIE
name|FindBlockContainingSpecification
parameter_list|(
specifier|const
name|DIERef
modifier|&
name|func_die_ref
parameter_list|,
name|dw_offset_t
name|spec_block_die_offset
parameter_list|)
function_decl|;
name|DWARFDIE
name|FindBlockContainingSpecification
parameter_list|(
specifier|const
name|DWARFDIE
modifier|&
name|die
parameter_list|,
name|dw_offset_t
name|spec_block_die_offset
parameter_list|)
function_decl|;
name|virtual
name|UniqueDWARFASTTypeMap
modifier|&
name|GetUniqueDWARFASTTypeMap
parameter_list|()
function_decl|;
name|bool
name|DIEDeclContextsMatch
parameter_list|(
specifier|const
name|DWARFDIE
modifier|&
name|die1
parameter_list|,
specifier|const
name|DWARFDIE
modifier|&
name|die2
parameter_list|)
function_decl|;
name|bool
name|ClassContainsSelector
argument_list|(
specifier|const
name|DWARFDIE
operator|&
name|class_die
argument_list|,
specifier|const
name|lldb_private
operator|::
name|ConstString
operator|&
name|selector
argument_list|)
decl_stmt|;
name|bool
name|FixupAddress
argument_list|(
name|lldb_private
operator|::
name|Address
operator|&
name|addr
argument_list|)
decl_stmt|;
typedef|typedef
name|std
operator|::
name|set
operator|<
name|lldb_private
operator|::
name|Type
operator|*
operator|>
name|TypeSet
expr_stmt|;
typedef|typedef
name|std
operator|::
name|map
operator|<
name|lldb_private
operator|::
name|ConstString
operator|,
name|lldb
operator|::
name|ModuleSP
operator|>
name|ExternalTypeModuleMap
expr_stmt|;
name|void
name|GetTypes
parameter_list|(
specifier|const
name|DWARFDIE
modifier|&
name|die
parameter_list|,
name|dw_offset_t
name|min_die_offset
parameter_list|,
name|dw_offset_t
name|max_die_offset
parameter_list|,
name|uint32_t
name|type_mask
parameter_list|,
name|TypeSet
modifier|&
name|type_set
parameter_list|)
function_decl|;
typedef|typedef
name|lldb_private
operator|::
name|RangeDataVector
operator|<
name|lldb
operator|::
name|addr_t
operator|,
name|lldb
operator|::
name|addr_t
operator|,
name|lldb_private
operator|::
name|Variable
operator|*
operator|>
name|GlobalVariableMap
expr_stmt|;
name|GlobalVariableMap
modifier|&
name|GetGlobalAranges
parameter_list|()
function_decl|;
name|void
name|UpdateExternalModuleListIfNeeded
parameter_list|()
function_decl|;
name|virtual
name|DIEToTypePtr
modifier|&
name|GetDIEToType
parameter_list|()
block|{
return|return
name|m_die_to_type
return|;
block|}
name|virtual
name|DIEToVariableSP
modifier|&
name|GetDIEToVariable
parameter_list|()
block|{
return|return
name|m_die_to_variable_sp
return|;
block|}
name|virtual
name|DIEToClangType
modifier|&
name|GetForwardDeclDieToClangType
parameter_list|()
block|{
return|return
name|m_forward_decl_die_to_clang_type
return|;
block|}
name|virtual
name|ClangTypeToDIE
modifier|&
name|GetForwardDeclClangTypeToDie
parameter_list|()
block|{
return|return
name|m_forward_decl_clang_type_to_die
return|;
block|}
name|lldb
operator|::
name|ModuleWP
name|m_debug_map_module_wp
expr_stmt|;
name|SymbolFileDWARFDebugMap
modifier|*
name|m_debug_map_symfile
decl_stmt|;
name|lldb_private
operator|::
name|DWARFDataExtractor
name|m_dwarf_data
expr_stmt|;
name|DWARFDataSegment
name|m_data_debug_abbrev
decl_stmt|;
name|DWARFDataSegment
name|m_data_debug_addr
decl_stmt|;
name|DWARFDataSegment
name|m_data_debug_aranges
decl_stmt|;
name|DWARFDataSegment
name|m_data_debug_frame
decl_stmt|;
name|DWARFDataSegment
name|m_data_debug_info
decl_stmt|;
name|DWARFDataSegment
name|m_data_debug_line
decl_stmt|;
name|DWARFDataSegment
name|m_data_debug_macro
decl_stmt|;
name|DWARFDataSegment
name|m_data_debug_loc
decl_stmt|;
name|DWARFDataSegment
name|m_data_debug_ranges
decl_stmt|;
name|DWARFDataSegment
name|m_data_debug_str
decl_stmt|;
name|DWARFDataSegment
name|m_data_debug_str_offsets
decl_stmt|;
name|DWARFDataSegment
name|m_data_apple_names
decl_stmt|;
name|DWARFDataSegment
name|m_data_apple_types
decl_stmt|;
name|DWARFDataSegment
name|m_data_apple_namespaces
decl_stmt|;
name|DWARFDataSegment
name|m_data_apple_objc
decl_stmt|;
comment|// The unique pointer items below are generated on demand if and when someone
comment|// accesses
comment|// them through a non const version of this class.
name|std
operator|::
name|unique_ptr
operator|<
name|DWARFDebugAbbrev
operator|>
name|m_abbr
expr_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|DWARFDebugInfo
operator|>
name|m_info
expr_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|DWARFDebugLine
operator|>
name|m_line
expr_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|DWARFMappedHash
operator|::
name|MemoryTable
operator|>
name|m_apple_names_ap
expr_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|DWARFMappedHash
operator|::
name|MemoryTable
operator|>
name|m_apple_types_ap
expr_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|DWARFMappedHash
operator|::
name|MemoryTable
operator|>
name|m_apple_namespaces_ap
expr_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|DWARFMappedHash
operator|::
name|MemoryTable
operator|>
name|m_apple_objc_ap
expr_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|GlobalVariableMap
operator|>
name|m_global_aranges_ap
expr_stmt|;
typedef|typedef
name|std
operator|::
name|unordered_map
operator|<
name|lldb
operator|::
name|offset_t
operator|,
name|lldb_private
operator|::
name|DebugMacrosSP
operator|>
name|DebugMacrosMap
expr_stmt|;
name|DebugMacrosMap
name|m_debug_macros_map
decl_stmt|;
name|ExternalTypeModuleMap
name|m_external_type_modules
decl_stmt|;
name|NameToDIE
name|m_function_basename_index
decl_stmt|;
comment|// All concrete functions
name|NameToDIE
name|m_function_fullname_index
decl_stmt|;
comment|// All concrete functions
name|NameToDIE
name|m_function_method_index
decl_stmt|;
comment|// All inlined functions
name|NameToDIE
name|m_function_selector_index
decl_stmt|;
comment|// All method names for functions of classes
name|NameToDIE
name|m_objc_class_selectors_index
decl_stmt|;
comment|// Given a class name, find all
comment|// selectors for the class
name|NameToDIE
name|m_global_index
decl_stmt|;
comment|// Global and static variables
name|NameToDIE
name|m_type_index
decl_stmt|;
comment|// All type DIE offsets
name|NameToDIE
name|m_namespace_index
decl_stmt|;
comment|// All type DIE offsets
name|bool
name|m_indexed
range|:
literal|1
decl_stmt|,
name|m_using_apple_tables
range|:
literal|1
decl_stmt|,
name|m_fetched_external_modules
range|:
literal|1
decl_stmt|;
name|lldb_private
operator|::
name|LazyBool
name|m_supports_DW_AT_APPLE_objc_complete_type
expr_stmt|;
typedef|typedef
name|std
operator|::
name|shared_ptr
operator|<
name|std
operator|::
name|set
operator|<
name|DIERef
operator|>>
name|DIERefSetSP
expr_stmt|;
typedef|typedef
name|std
operator|::
name|unordered_map
operator|<
name|std
operator|::
name|string
operator|,
name|DIERefSetSP
operator|>
name|NameToOffsetMap
expr_stmt|;
name|NameToOffsetMap
name|m_function_scope_qualified_name_map
decl_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|DWARFDebugRanges
operator|>
name|m_ranges
expr_stmt|;
name|UniqueDWARFASTTypeMap
name|m_unique_ast_type_map
decl_stmt|;
name|DIEToTypePtr
name|m_die_to_type
decl_stmt|;
name|DIEToVariableSP
name|m_die_to_variable_sp
decl_stmt|;
name|DIEToClangType
name|m_forward_decl_die_to_clang_type
decl_stmt|;
name|ClangTypeToDIE
name|m_forward_decl_clang_type_to_die
decl_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// SymbolFileDWARF_SymbolFileDWARF_h_
end_comment

end_unit

