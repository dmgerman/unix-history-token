begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2006 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_comment
comment|/*  * Extensions to the stdio package  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_STDIO_EXT_H
end_ifndef

begin_define
define|#
directive|define
name|_STDIO_EXT_H
end_define

begin_pragma
pragma|#
directive|pragma
name|ident
literal|"%Z%%M%	%I%	%E% SMI"
end_pragma

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/*  * Even though the contents of the stdio FILE structure have always been  * private to the stdio implementation, over the years some programs have  * needed to get information about a stdio stream that was not accessible  * through a supported interface. These programs have resorted to accessing  * fields of the FILE structure directly, rendering them possibly non-portable  * to new implementations of stdio, or more likely, preventing enhancements  * to stdio because those programs will break.  *  * In the 64-bit world, the FILE structure is opaque. The routines here  * are provided as a way to get the information that used to be retrieved  * directly from the FILE structure. They are based on the needs of  * existing programs (such as 'mh' and 'emacs'), so they may be extended  * as other programs are ported. Though they may still be non-portable to  * other operating systems, they will work from each Solaris release to  * the next. More portable interfaces are being developed.  */
define|#
directive|define
name|FSETLOCKING_QUERY
value|0
define|#
directive|define
name|FSETLOCKING_INTERNAL
value|1
define|#
directive|define
name|FSETLOCKING_BYCALLER
value|2
specifier|extern
name|size_t
name|__fbufsize
parameter_list|(
name|FILE
modifier|*
name|stream
parameter_list|)
function_decl|;
specifier|extern
name|int
name|__freading
parameter_list|(
name|FILE
modifier|*
name|stream
parameter_list|)
function_decl|;
specifier|extern
name|int
name|__fwriting
parameter_list|(
name|FILE
modifier|*
name|stream
parameter_list|)
function_decl|;
specifier|extern
name|int
name|__freadable
parameter_list|(
name|FILE
modifier|*
name|stream
parameter_list|)
function_decl|;
specifier|extern
name|int
name|__fwritable
parameter_list|(
name|FILE
modifier|*
name|stream
parameter_list|)
function_decl|;
specifier|extern
name|int
name|__flbf
parameter_list|(
name|FILE
modifier|*
name|stream
parameter_list|)
function_decl|;
specifier|extern
name|void
name|__fpurge
parameter_list|(
name|FILE
modifier|*
name|stream
parameter_list|)
function_decl|;
specifier|extern
name|size_t
name|__fpending
parameter_list|(
name|FILE
modifier|*
name|stream
parameter_list|)
function_decl|;
specifier|extern
name|void
name|_flushlbf
parameter_list|(
name|void
parameter_list|)
function_decl|;
specifier|extern
name|int
name|__fsetlocking
parameter_list|(
name|FILE
modifier|*
name|stream
parameter_list|,
name|int
name|type
parameter_list|)
function_decl|;
comment|/*  * Extended FILE enabling function.  */
if|#
directive|if
name|defined
argument_list|(
name|_LP64
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|__lint
argument_list|)
define|#
directive|define
name|enable_extended_FILE_stdio
parameter_list|(
name|fd
parameter_list|,
name|act
parameter_list|)
value|(0)
else|#
directive|else
specifier|extern
name|int
name|enable_extended_FILE_stdio
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _STDIO_EXT_H */
end_comment

end_unit

