begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) Christos Zoulas 2008.  * All Rights Reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice immediately at the beginning of the file, without modification,  *    this list of conditions, and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *    * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_if
if|if
condition|(
name|nbytes
operator|<=
sizeof|sizeof
argument_list|(
name|elfhdr
argument_list|)
condition|)
return|return
literal|0
return|;
end_if

begin_expr_stmt
name|u
operator|.
name|l
operator|=
literal|1
expr_stmt|;
end_expr_stmt

begin_expr_stmt
operator|(
name|void
operator|)
name|memcpy
argument_list|(
operator|&
name|elfhdr
argument_list|,
name|buf
argument_list|,
sizeof|sizeof
name|elfhdr
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|swap
operator|=
operator|(
name|u
operator|.
name|c
index|[
sizeof|sizeof
argument_list|(
name|int32_t
argument_list|)
operator|-
literal|1
index|]
operator|+
literal|1
operator|)
operator|!=
name|elfhdr
operator|.
name|e_ident
index|[
name|EI_DATA
index|]
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|type
operator|=
name|elf_getu16
argument_list|(
name|swap
argument_list|,
name|elfhdr
operator|.
name|e_type
argument_list|)
expr_stmt|;
end_expr_stmt

begin_switch
switch|switch
condition|(
name|type
condition|)
block|{
ifdef|#
directive|ifdef
name|ELFCORE
case|case
name|ET_CORE
case|:
if|if
condition|(
name|dophn_core
argument_list|(
name|ms
argument_list|,
name|clazz
argument_list|,
name|swap
argument_list|,
name|fd
argument_list|,
operator|(
name|off_t
operator|)
name|elf_getu
argument_list|(
name|swap
argument_list|,
name|elfhdr
operator|.
name|e_phoff
argument_list|)
argument_list|,
name|elf_getu16
argument_list|(
name|swap
argument_list|,
name|elfhdr
operator|.
name|e_phnum
argument_list|)
argument_list|,
operator|(
name|size_t
operator|)
name|elf_getu16
argument_list|(
name|swap
argument_list|,
name|elfhdr
operator|.
name|e_phentsize
argument_list|)
argument_list|,
name|fsize
argument_list|,
operator|&
name|flags
argument_list|)
operator|==
operator|-
literal|1
condition|)
return|return
operator|-
literal|1
return|;
break|break;
endif|#
directive|endif
case|case
name|ET_EXEC
case|:
case|case
name|ET_DYN
case|:
if|if
condition|(
name|dophn_exec
argument_list|(
name|ms
argument_list|,
name|clazz
argument_list|,
name|swap
argument_list|,
name|fd
argument_list|,
operator|(
name|off_t
operator|)
name|elf_getu
argument_list|(
name|swap
argument_list|,
name|elfhdr
operator|.
name|e_phoff
argument_list|)
argument_list|,
name|elf_getu16
argument_list|(
name|swap
argument_list|,
name|elfhdr
operator|.
name|e_phnum
argument_list|)
argument_list|,
operator|(
name|size_t
operator|)
name|elf_getu16
argument_list|(
name|swap
argument_list|,
name|elfhdr
operator|.
name|e_phentsize
argument_list|)
argument_list|,
name|fsize
argument_list|,
operator|&
name|flags
argument_list|,
name|elf_getu16
argument_list|(
name|swap
argument_list|,
name|elfhdr
operator|.
name|e_shnum
argument_list|)
argument_list|)
operator|==
operator|-
literal|1
condition|)
return|return
operator|-
literal|1
return|;
comment|/*FALLTHROUGH*/
case|case
name|ET_REL
case|:
if|if
condition|(
name|doshn
argument_list|(
name|ms
argument_list|,
name|clazz
argument_list|,
name|swap
argument_list|,
name|fd
argument_list|,
operator|(
name|off_t
operator|)
name|elf_getu
argument_list|(
name|swap
argument_list|,
name|elfhdr
operator|.
name|e_shoff
argument_list|)
argument_list|,
name|elf_getu16
argument_list|(
name|swap
argument_list|,
name|elfhdr
operator|.
name|e_shnum
argument_list|)
argument_list|,
operator|(
name|size_t
operator|)
name|elf_getu16
argument_list|(
name|swap
argument_list|,
name|elfhdr
operator|.
name|e_shentsize
argument_list|)
argument_list|,
operator|&
name|flags
argument_list|,
name|elf_getu16
argument_list|(
name|swap
argument_list|,
name|elfhdr
operator|.
name|e_machine
argument_list|)
argument_list|)
operator|==
operator|-
literal|1
condition|)
return|return
operator|-
literal|1
return|;
break|break;
default|default:
break|break;
block|}
end_switch

begin_return
return|return
literal|1
return|;
end_return

end_unit

