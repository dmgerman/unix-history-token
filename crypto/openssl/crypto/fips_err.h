begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* crypto/fips_err.h */
end_comment

begin_comment
comment|/* ====================================================================  * Copyright (c) 1999-2007 The OpenSSL Project.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in  *    the documentation and/or other materials provided with the  *    distribution.  *  * 3. All advertising materials mentioning features or use of this  *    software must display the following acknowledgment:  *    "This product includes software developed by the OpenSSL Project  *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"  *  * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to  *    endorse or promote products derived from this software without  *    prior written permission. For written permission, please contact  *    openssl-core@OpenSSL.org.  *  * 5. Products derived from this software may not be called "OpenSSL"  *    nor may "OpenSSL" appear in their names without prior written  *    permission of the OpenSSL Project.  *  * 6. Redistributions of any form whatsoever must retain the following  *    acknowledgment:  *    "This product includes software developed by the OpenSSL Project  *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"  *  * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY  * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR  * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED  * OF THE POSSIBILITY OF SUCH DAMAGE.  * ====================================================================  *  * This product includes cryptographic software written by Eric Young  * (eay@cryptsoft.com).  This product includes software written by Tim  * Hudson (tjh@cryptsoft.com).  *  */
end_comment

begin_comment
comment|/*  * NOTE: this file was auto generated by the mkerr.pl script: any changes  * made to it will be overwritten when the script next updates this file,  * only reason strings will be preserved.  */
end_comment

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_include
include|#
directive|include
file|<openssl/err.h>
end_include

begin_include
include|#
directive|include
file|<openssl/fips.h>
end_include

begin_comment
comment|/* BEGIN ERROR CODES */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|OPENSSL_NO_ERR
end_ifndef

begin_define
define|#
directive|define
name|ERR_FUNC
parameter_list|(
name|func
parameter_list|)
value|ERR_PACK(ERR_LIB_FIPS,func,0)
end_define

begin_define
define|#
directive|define
name|ERR_REASON
parameter_list|(
name|reason
parameter_list|)
value|ERR_PACK(ERR_LIB_FIPS,0,reason)
end_define

begin_decl_stmt
specifier|static
name|ERR_STRING_DATA
name|FIPS_str_functs
index|[]
init|=
block|{
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_DH_BUILTIN_GENPARAMS
argument_list|)
block|,
literal|"DH_BUILTIN_GENPARAMS"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_DSA_BUILTIN_PARAMGEN
argument_list|)
block|,
literal|"DSA_BUILTIN_PARAMGEN"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_DSA_DO_SIGN
argument_list|)
block|,
literal|"DSA_do_sign"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_DSA_DO_VERIFY
argument_list|)
block|,
literal|"DSA_do_verify"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_EVP_CIPHERINIT_EX
argument_list|)
block|,
literal|"EVP_CipherInit_ex"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_EVP_DIGESTINIT_EX
argument_list|)
block|,
literal|"EVP_DigestInit_ex"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_FIPS_CHECK_DSA
argument_list|)
block|,
literal|"FIPS_CHECK_DSA"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_FIPS_CHECK_INCORE_FINGERPRINT
argument_list|)
block|,
literal|"FIPS_CHECK_INCORE_FINGERPRINT"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_FIPS_CHECK_RSA
argument_list|)
block|,
literal|"FIPS_CHECK_RSA"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_FIPS_DSA_CHECK
argument_list|)
block|,
literal|"FIPS_DSA_CHECK"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_FIPS_MODE_SET
argument_list|)
block|,
literal|"FIPS_mode_set"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_FIPS_PKEY_SIGNATURE_TEST
argument_list|)
block|,
literal|"fips_pkey_signature_test"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_FIPS_SELFTEST_AES
argument_list|)
block|,
literal|"FIPS_selftest_aes"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_FIPS_SELFTEST_DES
argument_list|)
block|,
literal|"FIPS_selftest_des"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_FIPS_SELFTEST_DSA
argument_list|)
block|,
literal|"FIPS_selftest_dsa"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_FIPS_SELFTEST_HMAC
argument_list|)
block|,
literal|"FIPS_selftest_hmac"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_FIPS_SELFTEST_RNG
argument_list|)
block|,
literal|"FIPS_selftest_rng"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_FIPS_SELFTEST_SHA1
argument_list|)
block|,
literal|"FIPS_selftest_sha1"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_HASH_FINAL
argument_list|)
block|,
literal|"HASH_FINAL"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_RSA_BUILTIN_KEYGEN
argument_list|)
block|,
literal|"RSA_BUILTIN_KEYGEN"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_RSA_EAY_PRIVATE_DECRYPT
argument_list|)
block|,
literal|"RSA_EAY_PRIVATE_DECRYPT"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_RSA_EAY_PRIVATE_ENCRYPT
argument_list|)
block|,
literal|"RSA_EAY_PRIVATE_ENCRYPT"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_RSA_EAY_PUBLIC_DECRYPT
argument_list|)
block|,
literal|"RSA_EAY_PUBLIC_DECRYPT"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_RSA_EAY_PUBLIC_ENCRYPT
argument_list|)
block|,
literal|"RSA_EAY_PUBLIC_ENCRYPT"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_RSA_X931_GENERATE_KEY_EX
argument_list|)
block|,
literal|"RSA_X931_generate_key_ex"
block|}
block|,
block|{
name|ERR_FUNC
argument_list|(
name|FIPS_F_SSLEAY_RAND_BYTES
argument_list|)
block|,
literal|"SSLEAY_RAND_BYTES"
block|}
block|,
block|{
literal|0
block|,
name|NULL
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|ERR_STRING_DATA
name|FIPS_str_reasons
index|[]
init|=
block|{
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_CANNOT_READ_EXE
argument_list|)
block|,
literal|"cannot read exe"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_CANNOT_READ_EXE_DIGEST
argument_list|)
block|,
literal|"cannot read exe digest"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_CONTRADICTING_EVIDENCE
argument_list|)
block|,
literal|"contradicting evidence"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_EXE_DIGEST_DOES_NOT_MATCH
argument_list|)
block|,
literal|"exe digest does not match"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_FINGERPRINT_DOES_NOT_MATCH
argument_list|)
block|,
literal|"fingerprint does not match"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_FINGERPRINT_DOES_NOT_MATCH_NONPIC_RELOCATED
argument_list|)
block|,
literal|"fingerprint does not match nonpic relocated"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_FINGERPRINT_DOES_NOT_MATCH_SEGMENT_ALIASING
argument_list|)
block|,
literal|"fingerprint does not match segment aliasing"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_FIPS_MODE_ALREADY_SET
argument_list|)
block|,
literal|"fips mode already set"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_FIPS_SELFTEST_FAILED
argument_list|)
block|,
literal|"fips selftest failed"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_INVALID_KEY_LENGTH
argument_list|)
block|,
literal|"invalid key length"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_KEY_TOO_SHORT
argument_list|)
block|,
literal|"key too short"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_NON_FIPS_METHOD
argument_list|)
block|,
literal|"non fips method"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_PAIRWISE_TEST_FAILED
argument_list|)
block|,
literal|"pairwise test failed"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_RSA_DECRYPT_ERROR
argument_list|)
block|,
literal|"rsa decrypt error"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_RSA_ENCRYPT_ERROR
argument_list|)
block|,
literal|"rsa encrypt error"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_SELFTEST_FAILED
argument_list|)
block|,
literal|"selftest failed"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_TEST_FAILURE
argument_list|)
block|,
literal|"test failure"
block|}
block|,
block|{
name|ERR_REASON
argument_list|(
name|FIPS_R_UNSUPPORTED_PLATFORM
argument_list|)
block|,
literal|"unsupported platform"
block|}
block|,
block|{
literal|0
block|,
name|NULL
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_function
name|void
name|ERR_load_FIPS_strings
parameter_list|(
name|void
parameter_list|)
block|{
ifndef|#
directive|ifndef
name|OPENSSL_NO_ERR
if|if
condition|(
name|ERR_func_error_string
argument_list|(
name|FIPS_str_functs
index|[
literal|0
index|]
operator|.
name|error
argument_list|)
operator|==
name|NULL
condition|)
block|{
name|ERR_load_strings
argument_list|(
literal|0
argument_list|,
name|FIPS_str_functs
argument_list|)
expr_stmt|;
name|ERR_load_strings
argument_list|(
literal|0
argument_list|,
name|FIPS_str_reasons
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
block|}
end_function

end_unit

