begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* crypto/conf/conf_def.h */
end_comment

begin_comment
comment|/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)  * All rights reserved.  *  * This package is an SSL implementation written  * by Eric Young (eay@cryptsoft.com).  * The implementation was written so as to conform with Netscapes SSL.  *   * This library is free for commercial and non-commercial use as long as  * the following conditions are aheared to.  The following conditions  * apply to all code found in this distribution, be it the RC4, RSA,  * lhash, DES, etc., code; not just the SSL code.  The SSL documentation  * included with this distribution is covered by the same copyright terms  * except that the holder is Tim Hudson (tjh@cryptsoft.com).  *   * Copyright remains Eric Young's, and as such any Copyright notices in  * the code are not to be removed.  * If this package is used in a product, Eric Young should be given attribution  * as the author of the parts of the library used.  * This can be in the form of a textual message at program startup or  * in documentation (online or textual) provided with the package.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *    "This product includes cryptographic software written by  *     Eric Young (eay@cryptsoft.com)"  *    The word 'cryptographic' can be left out if the rouines from the library  *    being used are not cryptographic related :-).  * 4. If you include any Windows specific code (or a derivative thereof) from   *    the apps directory (application code) you must include an acknowledgement:  *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"  *   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *   * The licence and distribution terms for any publically available version or  * derivative of this code cannot be changed.  i.e. this code cannot simply be  * copied and put under another distribution licence  * [including the GNU Public Licence.]  */
end_comment

begin_comment
comment|/* THIS FILE WAS AUTOMAGICALLY GENERATED!    Please modify and use keysets.pl to regenerate it. */
end_comment

begin_define
define|#
directive|define
name|CONF_NUMBER
value|1
end_define

begin_define
define|#
directive|define
name|CONF_UPPER
value|2
end_define

begin_define
define|#
directive|define
name|CONF_LOWER
value|4
end_define

begin_define
define|#
directive|define
name|CONF_UNDER
value|256
end_define

begin_define
define|#
directive|define
name|CONF_PUNCTUATION
value|512
end_define

begin_define
define|#
directive|define
name|CONF_WS
value|16
end_define

begin_define
define|#
directive|define
name|CONF_ESC
value|32
end_define

begin_define
define|#
directive|define
name|CONF_QUOTE
value|64
end_define

begin_define
define|#
directive|define
name|CONF_DQUOTE
value|1024
end_define

begin_define
define|#
directive|define
name|CONF_COMMENT
value|128
end_define

begin_define
define|#
directive|define
name|CONF_FCOMMENT
value|2048
end_define

begin_define
define|#
directive|define
name|CONF_EOF
value|8
end_define

begin_define
define|#
directive|define
name|CONF_ALPHA
value|(CONF_UPPER|CONF_LOWER)
end_define

begin_define
define|#
directive|define
name|CONF_ALPHA_NUMERIC
value|(CONF_ALPHA|CONF_NUMBER|CONF_UNDER)
end_define

begin_define
define|#
directive|define
name|CONF_ALPHA_NUMERIC_PUNCT
value|(CONF_ALPHA|CONF_NUMBER|CONF_UNDER| \ 					CONF_PUNCTUATION)
end_define

begin_define
define|#
directive|define
name|KEYTYPES
parameter_list|(
name|c
parameter_list|)
value|((unsigned short *)((c)->meth_data))
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|CHARSET_EBCDIC
end_ifndef

begin_define
define|#
directive|define
name|IS_COMMENT
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[(a)&0x7f]&CONF_COMMENT)
end_define

begin_define
define|#
directive|define
name|IS_FCOMMENT
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[(a)&0x7f]&CONF_FCOMMENT)
end_define

begin_define
define|#
directive|define
name|IS_EOF
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[(a)&0x7f]&CONF_EOF)
end_define

begin_define
define|#
directive|define
name|IS_ESC
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[(a)&0x7f]&CONF_ESC)
end_define

begin_define
define|#
directive|define
name|IS_NUMBER
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[(a)&0x7f]&CONF_NUMBER)
end_define

begin_define
define|#
directive|define
name|IS_WS
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[(a)&0x7f]&CONF_WS)
end_define

begin_define
define|#
directive|define
name|IS_ALPHA_NUMERIC
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[(a)&0x7f]&CONF_ALPHA_NUMERIC)
end_define

begin_define
define|#
directive|define
name|IS_ALPHA_NUMERIC_PUNCT
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
define|\
value|(KEYTYPES(c)[(a)&0x7f]&CONF_ALPHA_NUMERIC_PUNCT)
end_define

begin_define
define|#
directive|define
name|IS_QUOTE
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[(a)&0x7f]&CONF_QUOTE)
end_define

begin_define
define|#
directive|define
name|IS_DQUOTE
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[(a)&0x7f]&CONF_DQUOTE)
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/*CHARSET_EBCDIC*/
end_comment

begin_define
define|#
directive|define
name|IS_COMMENT
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_COMMENT)
end_define

begin_define
define|#
directive|define
name|IS_FCOMMENT
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_FCOMMENT)
end_define

begin_define
define|#
directive|define
name|IS_EOF
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_EOF)
end_define

begin_define
define|#
directive|define
name|IS_ESC
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_ESC)
end_define

begin_define
define|#
directive|define
name|IS_NUMBER
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_NUMBER)
end_define

begin_define
define|#
directive|define
name|IS_WS
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_WS)
end_define

begin_define
define|#
directive|define
name|IS_ALPHA_NUMERIC
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_ALPHA_NUMERIC)
end_define

begin_define
define|#
directive|define
name|IS_ALPHA_NUMERIC_PUNCT
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
define|\
value|(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_ALPHA_NUMERIC_PUNCT)
end_define

begin_define
define|#
directive|define
name|IS_QUOTE
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_QUOTE)
end_define

begin_define
define|#
directive|define
name|IS_DQUOTE
parameter_list|(
name|c
parameter_list|,
name|a
parameter_list|)
value|(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_DQUOTE)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*CHARSET_EBCDIC*/
end_comment

begin_decl_stmt
specifier|static
name|unsigned
name|short
name|CONF_type_default
index|[
literal|128
index|]
init|=
block|{
literal|0x008
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x010
block|,
literal|0x010
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x010
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x010
block|,
literal|0x200
block|,
literal|0x040
block|,
literal|0x080
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x040
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x000
block|,
literal|0x020
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x100
block|,
literal|0x040
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x000
block|, 	}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
name|unsigned
name|short
name|CONF_type_win32
index|[
literal|128
index|]
init|=
block|{
literal|0x008
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x010
block|,
literal|0x010
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x010
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x010
block|,
literal|0x200
block|,
literal|0x400
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x001
block|,
literal|0x000
block|,
literal|0xA00
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x200
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x002
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x100
block|,
literal|0x000
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x004
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x000
block|,
literal|0x200
block|,
literal|0x000
block|, 	}
decl_stmt|;
end_decl_stmt

end_unit

