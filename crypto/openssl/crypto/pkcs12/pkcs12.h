begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* pkcs12.h */
end_comment

begin_comment
comment|/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL  * project 1999.  */
end_comment

begin_comment
comment|/* ====================================================================  * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.   *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in  *    the documentation and/or other materials provided with the  *    distribution.  *  * 3. All advertising materials mentioning features or use of this  *    software must display the following acknowledgment:  *    "This product includes software developed by the OpenSSL Project  *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"  *  * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to  *    endorse or promote products derived from this software without  *    prior written permission. For written permission, please contact  *    licensing@OpenSSL.org.  *  * 5. Products derived from this software may not be called "OpenSSL"  *    nor may "OpenSSL" appear in their names without prior written  *    permission of the OpenSSL Project.  *  * 6. Redistributions of any form whatsoever must retain the following  *    acknowledgment:  *    "This product includes software developed by the OpenSSL Project  *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"  *  * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY  * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR  * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED  * OF THE POSSIBILITY OF SUCH DAMAGE.  * ====================================================================  *  * This product includes cryptographic software written by Eric Young  * (eay@cryptsoft.com).  This product includes software written by Tim  * Hudson (tjh@cryptsoft.com).  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HEADER_PKCS12_H
end_ifndef

begin_define
define|#
directive|define
name|HEADER_PKCS12_H
end_define

begin_include
include|#
directive|include
file|<openssl/bio.h>
end_include

begin_include
include|#
directive|include
file|<openssl/x509.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
define|#
directive|define
name|PKCS12_KEY_ID
value|1
define|#
directive|define
name|PKCS12_IV_ID
value|2
define|#
directive|define
name|PKCS12_MAC_ID
value|3
comment|/* Default iteration count */
ifndef|#
directive|ifndef
name|PKCS12_DEFAULT_ITER
define|#
directive|define
name|PKCS12_DEFAULT_ITER
value|PKCS5_DEFAULT_ITER
endif|#
directive|endif
define|#
directive|define
name|PKCS12_MAC_KEY_LENGTH
value|20
define|#
directive|define
name|PKCS12_SALT_LEN
value|8
comment|/* Uncomment out next line for unicode password and names, otherwise ASCII */
comment|/*#define PBE_UNICODE*/
ifdef|#
directive|ifdef
name|PBE_UNICODE
define|#
directive|define
name|PKCS12_key_gen
value|PKCS12_key_gen_uni
define|#
directive|define
name|PKCS12_add_friendlyname
value|PKCS12_add_friendlyname_uni
else|#
directive|else
define|#
directive|define
name|PKCS12_key_gen
value|PKCS12_key_gen_asc
define|#
directive|define
name|PKCS12_add_friendlyname
value|PKCS12_add_friendlyname_asc
endif|#
directive|endif
comment|/* MS key usage constants */
define|#
directive|define
name|KEY_EX
value|0x10
define|#
directive|define
name|KEY_SIG
value|0x80
typedef|typedef
struct|struct
block|{
name|X509_SIG
modifier|*
name|dinfo
decl_stmt|;
name|ASN1_OCTET_STRING
modifier|*
name|salt
decl_stmt|;
name|ASN1_INTEGER
modifier|*
name|iter
decl_stmt|;
comment|/* defaults to 1 */
block|}
name|PKCS12_MAC_DATA
typedef|;
typedef|typedef
struct|struct
block|{
name|ASN1_INTEGER
modifier|*
name|version
decl_stmt|;
name|PKCS12_MAC_DATA
modifier|*
name|mac
decl_stmt|;
name|PKCS7
modifier|*
name|authsafes
decl_stmt|;
block|}
name|PKCS12
typedef|;
name|PREDECLARE_STACK_OF
argument_list|(
argument|PKCS12_SAFEBAG
argument_list|)
typedef|typedef
struct|struct
block|{
name|ASN1_OBJECT
modifier|*
name|type
decl_stmt|;
union|union
block|{
name|struct
name|pkcs12_bag_st
modifier|*
name|bag
decl_stmt|;
comment|/* secret, crl and certbag */
name|struct
name|pkcs8_priv_key_info_st
modifier|*
name|keybag
decl_stmt|;
comment|/* keybag */
name|X509_SIG
modifier|*
name|shkeybag
decl_stmt|;
comment|/* shrouded key bag */
name|STACK_OF
argument_list|(
name|PKCS12_SAFEBAG
argument_list|)
operator|*
name|safes
expr_stmt|;
name|ASN1_TYPE
modifier|*
name|other
decl_stmt|;
block|}
name|value
union|;
name|STACK_OF
argument_list|(
name|X509_ATTRIBUTE
argument_list|)
operator|*
name|attrib
expr_stmt|;
block|}
name|PKCS12_SAFEBAG
typedef|;
name|DECLARE_STACK_OF
argument_list|(
argument|PKCS12_SAFEBAG
argument_list|)
name|DECLARE_ASN1_SET_OF
argument_list|(
argument|PKCS12_SAFEBAG
argument_list|)
name|DECLARE_PKCS12_STACK_OF
argument_list|(
argument|PKCS12_SAFEBAG
argument_list|)
typedef|typedef
struct|struct
name|pkcs12_bag_st
block|{
name|ASN1_OBJECT
modifier|*
name|type
decl_stmt|;
union|union
block|{
name|ASN1_OCTET_STRING
modifier|*
name|x509cert
decl_stmt|;
name|ASN1_OCTET_STRING
modifier|*
name|x509crl
decl_stmt|;
name|ASN1_OCTET_STRING
modifier|*
name|octet
decl_stmt|;
name|ASN1_IA5STRING
modifier|*
name|sdsicert
decl_stmt|;
name|ASN1_TYPE
modifier|*
name|other
decl_stmt|;
comment|/* Secret or other bag */
block|}
name|value
union|;
block|}
name|PKCS12_BAGS
typedef|;
define|#
directive|define
name|PKCS12_ERROR
value|0
define|#
directive|define
name|PKCS12_OK
value|1
comment|/* Compatibility macros */
define|#
directive|define
name|M_PKCS12_x5092certbag
value|PKCS12_x5092certbag
define|#
directive|define
name|M_PKCS12_x509crl2certbag
value|PKCS12_x509crl2certbag
define|#
directive|define
name|M_PKCS12_certbag2x509
value|PKCS12_certbag2x509
define|#
directive|define
name|M_PKCS12_certbag2x509crl
value|PKCS12_certbag2x509crl
define|#
directive|define
name|M_PKCS12_unpack_p7data
value|PKCS12_unpack_p7data
define|#
directive|define
name|M_PKCS12_pack_authsafes
value|PKCS12_pack_authsafes
define|#
directive|define
name|M_PKCS12_unpack_authsafes
value|PKCS12_unpack_authsafes
define|#
directive|define
name|M_PKCS12_unpack_p7encdata
value|PKCS12_unpack_p7encdata
define|#
directive|define
name|M_PKCS12_decrypt_skey
value|PKCS12_decrypt_skey
define|#
directive|define
name|M_PKCS8_decrypt
value|PKCS8_decrypt
define|#
directive|define
name|M_PKCS12_bag_type
parameter_list|(
name|bg
parameter_list|)
value|OBJ_obj2nid((bg)->type)
define|#
directive|define
name|M_PKCS12_cert_bag_type
parameter_list|(
name|bg
parameter_list|)
value|OBJ_obj2nid((bg)->value.bag->type)
define|#
directive|define
name|M_PKCS12_crl_bag_type
value|M_PKCS12_cert_bag_type
define|#
directive|define
name|PKCS12_get_attr
parameter_list|(
name|bag
parameter_list|,
name|attr_nid
parameter_list|)
define|\
value|PKCS12_get_attr_gen(bag->attrib, attr_nid)
define|#
directive|define
name|PKCS8_get_attr
parameter_list|(
name|p8
parameter_list|,
name|attr_nid
parameter_list|)
define|\
value|PKCS12_get_attr_gen(p8->attributes, attr_nid)
define|#
directive|define
name|PKCS12_mac_present
parameter_list|(
name|p12
parameter_list|)
value|((p12)->mac ? 1 : 0)
name|PKCS12_SAFEBAG
modifier|*
name|PKCS12_x5092certbag
parameter_list|(
name|X509
modifier|*
name|x509
parameter_list|)
function_decl|;
name|PKCS12_SAFEBAG
modifier|*
name|PKCS12_x509crl2certbag
parameter_list|(
name|X509_CRL
modifier|*
name|crl
parameter_list|)
function_decl|;
name|X509
modifier|*
name|PKCS12_certbag2x509
parameter_list|(
name|PKCS12_SAFEBAG
modifier|*
name|bag
parameter_list|)
function_decl|;
name|X509_CRL
modifier|*
name|PKCS12_certbag2x509crl
parameter_list|(
name|PKCS12_SAFEBAG
modifier|*
name|bag
parameter_list|)
function_decl|;
name|PKCS12_SAFEBAG
modifier|*
name|PKCS12_item_pack_safebag
parameter_list|(
name|void
modifier|*
name|obj
parameter_list|,
specifier|const
name|ASN1_ITEM
modifier|*
name|it
parameter_list|,
name|int
name|nid1
parameter_list|,
name|int
name|nid2
parameter_list|)
function_decl|;
name|PKCS12_SAFEBAG
modifier|*
name|PKCS12_MAKE_KEYBAG
parameter_list|(
name|PKCS8_PRIV_KEY_INFO
modifier|*
name|p8
parameter_list|)
function_decl|;
name|PKCS8_PRIV_KEY_INFO
modifier|*
name|PKCS8_decrypt
parameter_list|(
name|X509_SIG
modifier|*
name|p8
parameter_list|,
specifier|const
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|)
function_decl|;
name|PKCS8_PRIV_KEY_INFO
modifier|*
name|PKCS12_decrypt_skey
parameter_list|(
name|PKCS12_SAFEBAG
modifier|*
name|bag
parameter_list|,
specifier|const
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|)
function_decl|;
name|X509_SIG
modifier|*
name|PKCS8_encrypt
parameter_list|(
name|int
name|pbe_nid
parameter_list|,
specifier|const
name|EVP_CIPHER
modifier|*
name|cipher
parameter_list|,
specifier|const
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|,
name|unsigned
name|char
modifier|*
name|salt
parameter_list|,
name|int
name|saltlen
parameter_list|,
name|int
name|iter
parameter_list|,
name|PKCS8_PRIV_KEY_INFO
modifier|*
name|p8
parameter_list|)
function_decl|;
name|PKCS12_SAFEBAG
modifier|*
name|PKCS12_MAKE_SHKEYBAG
parameter_list|(
name|int
name|pbe_nid
parameter_list|,
specifier|const
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|,
name|unsigned
name|char
modifier|*
name|salt
parameter_list|,
name|int
name|saltlen
parameter_list|,
name|int
name|iter
parameter_list|,
name|PKCS8_PRIV_KEY_INFO
modifier|*
name|p8
parameter_list|)
function_decl|;
name|PKCS7
modifier|*
name|PKCS12_pack_p7data
argument_list|(
name|STACK_OF
argument_list|(
name|PKCS12_SAFEBAG
argument_list|)
operator|*
name|sk
argument_list|)
decl_stmt|;
name|STACK_OF
argument_list|(
name|PKCS12_SAFEBAG
argument_list|)
operator|*
name|PKCS12_unpack_p7data
argument_list|(
name|PKCS7
operator|*
name|p7
argument_list|)
expr_stmt|;
name|PKCS7
modifier|*
name|PKCS12_pack_p7encdata
argument_list|(
name|int
name|pbe_nid
argument_list|,
specifier|const
name|char
operator|*
name|pass
argument_list|,
name|int
name|passlen
argument_list|,
name|unsigned
name|char
operator|*
name|salt
argument_list|,
name|int
name|saltlen
argument_list|,
name|int
name|iter
argument_list|,
name|STACK_OF
argument_list|(
name|PKCS12_SAFEBAG
argument_list|)
operator|*
name|bags
argument_list|)
decl_stmt|;
name|STACK_OF
argument_list|(
name|PKCS12_SAFEBAG
argument_list|)
operator|*
name|PKCS12_unpack_p7encdata
argument_list|(
argument|PKCS7 *p7
argument_list|,
argument|const char *pass
argument_list|,
argument|int passlen
argument_list|)
expr_stmt|;
name|int
name|PKCS12_pack_authsafes
argument_list|(
name|PKCS12
operator|*
name|p12
argument_list|,
name|STACK_OF
argument_list|(
name|PKCS7
argument_list|)
operator|*
name|safes
argument_list|)
decl_stmt|;
name|STACK_OF
argument_list|(
name|PKCS7
argument_list|)
operator|*
name|PKCS12_unpack_authsafes
argument_list|(
name|PKCS12
operator|*
name|p12
argument_list|)
expr_stmt|;
name|int
name|PKCS12_add_localkeyid
parameter_list|(
name|PKCS12_SAFEBAG
modifier|*
name|bag
parameter_list|,
name|unsigned
name|char
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|)
function_decl|;
name|int
name|PKCS12_add_friendlyname_asc
parameter_list|(
name|PKCS12_SAFEBAG
modifier|*
name|bag
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|)
function_decl|;
name|int
name|PKCS12_add_CSPName_asc
parameter_list|(
name|PKCS12_SAFEBAG
modifier|*
name|bag
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|)
function_decl|;
name|int
name|PKCS12_add_friendlyname_uni
parameter_list|(
name|PKCS12_SAFEBAG
modifier|*
name|bag
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|)
function_decl|;
name|int
name|PKCS8_add_keyusage
parameter_list|(
name|PKCS8_PRIV_KEY_INFO
modifier|*
name|p8
parameter_list|,
name|int
name|usage
parameter_list|)
function_decl|;
name|ASN1_TYPE
modifier|*
name|PKCS12_get_attr_gen
argument_list|(
name|STACK_OF
argument_list|(
name|X509_ATTRIBUTE
argument_list|)
operator|*
name|attrs
argument_list|,
name|int
name|attr_nid
argument_list|)
decl_stmt|;
name|char
modifier|*
name|PKCS12_get_friendlyname
parameter_list|(
name|PKCS12_SAFEBAG
modifier|*
name|bag
parameter_list|)
function_decl|;
name|unsigned
name|char
modifier|*
name|PKCS12_pbe_crypt
parameter_list|(
name|X509_ALGOR
modifier|*
name|algor
parameter_list|,
specifier|const
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|,
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|int
name|inlen
parameter_list|,
name|unsigned
name|char
modifier|*
modifier|*
name|data
parameter_list|,
name|int
modifier|*
name|datalen
parameter_list|,
name|int
name|en_de
parameter_list|)
function_decl|;
name|void
modifier|*
name|PKCS12_item_decrypt_d2i
parameter_list|(
name|X509_ALGOR
modifier|*
name|algor
parameter_list|,
specifier|const
name|ASN1_ITEM
modifier|*
name|it
parameter_list|,
specifier|const
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|,
name|ASN1_OCTET_STRING
modifier|*
name|oct
parameter_list|,
name|int
name|zbuf
parameter_list|)
function_decl|;
name|ASN1_OCTET_STRING
modifier|*
name|PKCS12_item_i2d_encrypt
parameter_list|(
name|X509_ALGOR
modifier|*
name|algor
parameter_list|,
specifier|const
name|ASN1_ITEM
modifier|*
name|it
parameter_list|,
specifier|const
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|,
name|void
modifier|*
name|obj
parameter_list|,
name|int
name|zbuf
parameter_list|)
function_decl|;
name|PKCS12
modifier|*
name|PKCS12_init
parameter_list|(
name|int
name|mode
parameter_list|)
function_decl|;
name|int
name|PKCS12_key_gen_asc
parameter_list|(
specifier|const
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|,
name|unsigned
name|char
modifier|*
name|salt
parameter_list|,
name|int
name|saltlen
parameter_list|,
name|int
name|id
parameter_list|,
name|int
name|iter
parameter_list|,
name|int
name|n
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
specifier|const
name|EVP_MD
modifier|*
name|md_type
parameter_list|)
function_decl|;
name|int
name|PKCS12_key_gen_uni
parameter_list|(
name|unsigned
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|,
name|unsigned
name|char
modifier|*
name|salt
parameter_list|,
name|int
name|saltlen
parameter_list|,
name|int
name|id
parameter_list|,
name|int
name|iter
parameter_list|,
name|int
name|n
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
specifier|const
name|EVP_MD
modifier|*
name|md_type
parameter_list|)
function_decl|;
name|int
name|PKCS12_PBE_keyivgen
parameter_list|(
name|EVP_CIPHER_CTX
modifier|*
name|ctx
parameter_list|,
specifier|const
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|,
name|ASN1_TYPE
modifier|*
name|param
parameter_list|,
specifier|const
name|EVP_CIPHER
modifier|*
name|cipher
parameter_list|,
specifier|const
name|EVP_MD
modifier|*
name|md_type
parameter_list|,
name|int
name|en_de
parameter_list|)
function_decl|;
name|int
name|PKCS12_gen_mac
parameter_list|(
name|PKCS12
modifier|*
name|p12
parameter_list|,
specifier|const
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|,
name|unsigned
name|char
modifier|*
name|mac
parameter_list|,
name|unsigned
name|int
modifier|*
name|maclen
parameter_list|)
function_decl|;
name|int
name|PKCS12_verify_mac
parameter_list|(
name|PKCS12
modifier|*
name|p12
parameter_list|,
specifier|const
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|)
function_decl|;
name|int
name|PKCS12_set_mac
parameter_list|(
name|PKCS12
modifier|*
name|p12
parameter_list|,
specifier|const
name|char
modifier|*
name|pass
parameter_list|,
name|int
name|passlen
parameter_list|,
name|unsigned
name|char
modifier|*
name|salt
parameter_list|,
name|int
name|saltlen
parameter_list|,
name|int
name|iter
parameter_list|,
specifier|const
name|EVP_MD
modifier|*
name|md_type
parameter_list|)
function_decl|;
name|int
name|PKCS12_setup_mac
parameter_list|(
name|PKCS12
modifier|*
name|p12
parameter_list|,
name|int
name|iter
parameter_list|,
name|unsigned
name|char
modifier|*
name|salt
parameter_list|,
name|int
name|saltlen
parameter_list|,
specifier|const
name|EVP_MD
modifier|*
name|md_type
parameter_list|)
function_decl|;
name|unsigned
name|char
modifier|*
name|asc2uni
parameter_list|(
specifier|const
name|char
modifier|*
name|asc
parameter_list|,
name|int
name|asclen
parameter_list|,
name|unsigned
name|char
modifier|*
modifier|*
name|uni
parameter_list|,
name|int
modifier|*
name|unilen
parameter_list|)
function_decl|;
name|char
modifier|*
name|uni2asc
parameter_list|(
name|unsigned
name|char
modifier|*
name|uni
parameter_list|,
name|int
name|unilen
parameter_list|)
function_decl|;
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|PKCS12
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|PKCS12_MAC_DATA
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|PKCS12_SAFEBAG
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|PKCS12_BAGS
argument_list|)
name|DECLARE_ASN1_ITEM
argument_list|(
argument|PKCS12_SAFEBAGS
argument_list|)
name|DECLARE_ASN1_ITEM
argument_list|(
argument|PKCS12_AUTHSAFES
argument_list|)
name|void
name|PKCS12_PBE_add
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
name|PKCS12_parse
argument_list|(
name|PKCS12
operator|*
name|p12
argument_list|,
specifier|const
name|char
operator|*
name|pass
argument_list|,
name|EVP_PKEY
operator|*
operator|*
name|pkey
argument_list|,
name|X509
operator|*
operator|*
name|cert
argument_list|,
name|STACK_OF
argument_list|(
name|X509
argument_list|)
operator|*
operator|*
name|ca
argument_list|)
decl_stmt|;
name|PKCS12
modifier|*
name|PKCS12_create
argument_list|(
name|char
operator|*
name|pass
argument_list|,
name|char
operator|*
name|name
argument_list|,
name|EVP_PKEY
operator|*
name|pkey
argument_list|,
name|X509
operator|*
name|cert
argument_list|,
name|STACK_OF
argument_list|(
name|X509
argument_list|)
operator|*
name|ca
argument_list|,
name|int
name|nid_key
argument_list|,
name|int
name|nid_cert
argument_list|,
name|int
name|iter
argument_list|,
name|int
name|mac_iter
argument_list|,
name|int
name|keytype
argument_list|)
decl_stmt|;
name|PKCS12_SAFEBAG
modifier|*
name|PKCS12_add_cert
argument_list|(
name|STACK_OF
argument_list|(
name|PKCS12_SAFEBAG
argument_list|)
operator|*
operator|*
name|pbags
argument_list|,
name|X509
operator|*
name|cert
argument_list|)
decl_stmt|;
name|PKCS12_SAFEBAG
modifier|*
name|PKCS12_add_key
argument_list|(
name|STACK_OF
argument_list|(
name|PKCS12_SAFEBAG
argument_list|)
operator|*
operator|*
name|pbags
argument_list|,
name|EVP_PKEY
operator|*
name|key
argument_list|,
name|int
name|key_usage
argument_list|,
name|int
name|iter
argument_list|,
name|int
name|key_nid
argument_list|,
name|char
operator|*
name|pass
argument_list|)
decl_stmt|;
name|int
name|PKCS12_add_safe
argument_list|(
name|STACK_OF
argument_list|(
name|PKCS7
argument_list|)
operator|*
operator|*
name|psafes
argument_list|,
name|STACK_OF
argument_list|(
name|PKCS12_SAFEBAG
argument_list|)
operator|*
name|bags
argument_list|,
name|int
name|safe_nid
argument_list|,
name|int
name|iter
argument_list|,
name|char
operator|*
name|pass
argument_list|)
decl_stmt|;
name|PKCS12
modifier|*
name|PKCS12_add_safes
argument_list|(
name|STACK_OF
argument_list|(
name|PKCS7
argument_list|)
operator|*
name|safes
argument_list|,
name|int
name|p7_nid
argument_list|)
decl_stmt|;
name|int
name|i2d_PKCS12_bio
parameter_list|(
name|BIO
modifier|*
name|bp
parameter_list|,
name|PKCS12
modifier|*
name|p12
parameter_list|)
function_decl|;
name|int
name|i2d_PKCS12_fp
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|,
name|PKCS12
modifier|*
name|p12
parameter_list|)
function_decl|;
name|PKCS12
modifier|*
name|d2i_PKCS12_bio
parameter_list|(
name|BIO
modifier|*
name|bp
parameter_list|,
name|PKCS12
modifier|*
modifier|*
name|p12
parameter_list|)
function_decl|;
name|PKCS12
modifier|*
name|d2i_PKCS12_fp
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|,
name|PKCS12
modifier|*
modifier|*
name|p12
parameter_list|)
function_decl|;
name|int
name|PKCS12_newpass
parameter_list|(
name|PKCS12
modifier|*
name|p12
parameter_list|,
name|char
modifier|*
name|oldpass
parameter_list|,
name|char
modifier|*
name|newpass
parameter_list|)
function_decl|;
comment|/* BEGIN ERROR CODES */
comment|/* The following lines are auto generated by the script mkerr.pl. Any changes  * made after this point may be overwritten when the script is next run.  */
name|void
name|ERR_load_PKCS12_strings
parameter_list|(
name|void
parameter_list|)
function_decl|;
comment|/* Error codes for the PKCS12 functions. */
comment|/* Function codes. */
define|#
directive|define
name|PKCS12_F_PARSE_BAG
value|129
define|#
directive|define
name|PKCS12_F_PARSE_BAGS
value|103
define|#
directive|define
name|PKCS12_F_PKCS12_ADD_FRIENDLYNAME
value|100
define|#
directive|define
name|PKCS12_F_PKCS12_ADD_FRIENDLYNAME_ASC
value|127
define|#
directive|define
name|PKCS12_F_PKCS12_ADD_FRIENDLYNAME_UNI
value|102
define|#
directive|define
name|PKCS12_F_PKCS12_ADD_LOCALKEYID
value|104
define|#
directive|define
name|PKCS12_F_PKCS12_CREATE
value|105
define|#
directive|define
name|PKCS12_F_PKCS12_GEN_MAC
value|107
define|#
directive|define
name|PKCS12_F_PKCS12_INIT
value|109
define|#
directive|define
name|PKCS12_F_PKCS12_ITEM_DECRYPT_D2I
value|106
define|#
directive|define
name|PKCS12_F_PKCS12_ITEM_I2D_ENCRYPT
value|108
define|#
directive|define
name|PKCS12_F_PKCS12_ITEM_PACK_SAFEBAG
value|117
define|#
directive|define
name|PKCS12_F_PKCS12_KEY_GEN_ASC
value|110
define|#
directive|define
name|PKCS12_F_PKCS12_KEY_GEN_UNI
value|111
define|#
directive|define
name|PKCS12_F_PKCS12_MAKE_KEYBAG
value|112
define|#
directive|define
name|PKCS12_F_PKCS12_MAKE_SHKEYBAG
value|113
define|#
directive|define
name|PKCS12_F_PKCS12_NEWPASS
value|128
define|#
directive|define
name|PKCS12_F_PKCS12_PACK_P7DATA
value|114
define|#
directive|define
name|PKCS12_F_PKCS12_PACK_P7ENCDATA
value|115
define|#
directive|define
name|PKCS12_F_PKCS12_PARSE
value|118
define|#
directive|define
name|PKCS12_F_PKCS12_PBE_CRYPT
value|119
define|#
directive|define
name|PKCS12_F_PKCS12_PBE_KEYIVGEN
value|120
define|#
directive|define
name|PKCS12_F_PKCS12_SETUP_MAC
value|122
define|#
directive|define
name|PKCS12_F_PKCS12_SET_MAC
value|123
define|#
directive|define
name|PKCS12_F_PKCS12_UNPACK_AUTHSAFES
value|130
define|#
directive|define
name|PKCS12_F_PKCS12_UNPACK_P7DATA
value|131
define|#
directive|define
name|PKCS12_F_PKCS12_VERIFY_MAC
value|126
define|#
directive|define
name|PKCS12_F_PKCS8_ADD_KEYUSAGE
value|124
define|#
directive|define
name|PKCS12_F_PKCS8_ENCRYPT
value|125
comment|/* Reason codes. */
define|#
directive|define
name|PKCS12_R_CANT_PACK_STRUCTURE
value|100
define|#
directive|define
name|PKCS12_R_CONTENT_TYPE_NOT_DATA
value|121
define|#
directive|define
name|PKCS12_R_DECODE_ERROR
value|101
define|#
directive|define
name|PKCS12_R_ENCODE_ERROR
value|102
define|#
directive|define
name|PKCS12_R_ENCRYPT_ERROR
value|103
define|#
directive|define
name|PKCS12_R_ERROR_SETTING_ENCRYPTED_DATA_TYPE
value|120
define|#
directive|define
name|PKCS12_R_INVALID_NULL_ARGUMENT
value|104
define|#
directive|define
name|PKCS12_R_INVALID_NULL_PKCS12_POINTER
value|105
define|#
directive|define
name|PKCS12_R_IV_GEN_ERROR
value|106
define|#
directive|define
name|PKCS12_R_KEY_GEN_ERROR
value|107
define|#
directive|define
name|PKCS12_R_MAC_ABSENT
value|108
define|#
directive|define
name|PKCS12_R_MAC_GENERATION_ERROR
value|109
define|#
directive|define
name|PKCS12_R_MAC_SETUP_ERROR
value|110
define|#
directive|define
name|PKCS12_R_MAC_STRING_SET_ERROR
value|111
define|#
directive|define
name|PKCS12_R_MAC_VERIFY_ERROR
value|112
define|#
directive|define
name|PKCS12_R_MAC_VERIFY_FAILURE
value|113
define|#
directive|define
name|PKCS12_R_PARSE_ERROR
value|114
define|#
directive|define
name|PKCS12_R_PKCS12_ALGOR_CIPHERINIT_ERROR
value|115
define|#
directive|define
name|PKCS12_R_PKCS12_CIPHERFINAL_ERROR
value|116
define|#
directive|define
name|PKCS12_R_PKCS12_PBE_CRYPT_ERROR
value|117
define|#
directive|define
name|PKCS12_R_UNKNOWN_DIGEST_ALGORITHM
value|118
define|#
directive|define
name|PKCS12_R_UNSUPPORTED_PKCS12_MODE
value|119
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

