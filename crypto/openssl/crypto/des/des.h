begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* crypto/des/des.h */
end_comment

begin_comment
comment|/* Copyright (C) 1995-1997 Eric Young (eay@cryptsoft.com)  * All rights reserved.  *  * This package is an SSL implementation written  * by Eric Young (eay@cryptsoft.com).  * The implementation was written so as to conform with Netscapes SSL.  *  * This library is free for commercial and non-commercial use as long as  * the following conditions are aheared to.  The following conditions  * apply to all code found in this distribution, be it the RC4, RSA,  * lhash, DES, etc., code; not just the SSL code.  The SSL documentation  * included with this distribution is covered by the same copyright terms  * except that the holder is Tim Hudson (tjh@cryptsoft.com).  *  * Copyright remains Eric Young's, and as such any Copyright notices in  * the code are not to be removed.  * If this package is used in a product, Eric Young should be given attribution  * as the author of the parts of the library used.  * This can be in the form of a textual message at program startup or  * in documentation (online or textual) provided with the package.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *    "This product includes cryptographic software written by  *     Eric Young (eay@cryptsoft.com)"  *    The word 'cryptographic' can be left out if the rouines from the library  *    being used are not cryptographic related :-).  * 4. If you include any Windows specific code (or a derivative thereof) from  *    the apps directory (application code) you must include an acknowledgement:  *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"  *  * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * The licence and distribution terms for any publically available version or  * derivative of this code cannot be changed.  i.e. this code cannot simply be  * copied and put under another distribution licence  * [including the GNU Public Licence.]  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HEADER_NEW_DES_H
end_ifndef

begin_define
define|#
directive|define
name|HEADER_NEW_DES_H
end_define

begin_include
include|#
directive|include
file|<openssl/e_os2.h>
end_include

begin_comment
comment|/* OPENSSL_EXTERN, OPENSSL_NO_DES, DES_LONG                                  * (via openssl/opensslconf.h */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|OPENSSL_NO_DES
end_ifdef

begin_error
error|#
directive|error
error|DES is disabled.
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|OPENSSL_BUILD_SHLIBCRYPTO
end_ifdef

begin_undef
undef|#
directive|undef
name|OPENSSL_EXTERN
end_undef

begin_define
define|#
directive|define
name|OPENSSL_EXTERN
value|OPENSSL_EXPORT
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
typedef|typedef
name|unsigned
name|char
name|DES_cblock
index|[
literal|8
index|]
typedef|;
typedef|typedef
comment|/* const */
name|unsigned
name|char
name|const_DES_cblock
index|[
literal|8
index|]
typedef|;
comment|/*  * With "const", gcc 2.8.1 on Solaris thinks that DES_cblock * and  * const_DES_cblock * are incompatible pointer types.  */
typedef|typedef
struct|struct
name|DES_ks
block|{
union|union
block|{
name|DES_cblock
name|cblock
decl_stmt|;
comment|/*          * make sure things are correct size on machines with 8 byte longs          */
name|DES_LONG
name|deslong
index|[
literal|2
index|]
decl_stmt|;
block|}
name|ks
index|[
literal|16
index|]
union|;
block|}
name|DES_key_schedule
typedef|;
ifndef|#
directive|ifndef
name|OPENSSL_DISABLE_OLD_DES_SUPPORT
ifndef|#
directive|ifndef
name|OPENSSL_ENABLE_OLD_DES_SUPPORT
define|#
directive|define
name|OPENSSL_ENABLE_OLD_DES_SUPPORT
endif|#
directive|endif
endif|#
directive|endif
ifdef|#
directive|ifdef
name|OPENSSL_ENABLE_OLD_DES_SUPPORT
include|#
directive|include
file|<openssl/des_old.h>
endif|#
directive|endif
define|#
directive|define
name|DES_KEY_SZ
value|(sizeof(DES_cblock))
define|#
directive|define
name|DES_SCHEDULE_SZ
value|(sizeof(DES_key_schedule))
define|#
directive|define
name|DES_ENCRYPT
value|1
define|#
directive|define
name|DES_DECRYPT
value|0
define|#
directive|define
name|DES_CBC_MODE
value|0
define|#
directive|define
name|DES_PCBC_MODE
value|1
define|#
directive|define
name|DES_ecb2_encrypt
parameter_list|(
name|i
parameter_list|,
name|o
parameter_list|,
name|k1
parameter_list|,
name|k2
parameter_list|,
name|e
parameter_list|)
define|\
value|DES_ecb3_encrypt((i),(o),(k1),(k2),(k1),(e))
define|#
directive|define
name|DES_ede2_cbc_encrypt
parameter_list|(
name|i
parameter_list|,
name|o
parameter_list|,
name|l
parameter_list|,
name|k1
parameter_list|,
name|k2
parameter_list|,
name|iv
parameter_list|,
name|e
parameter_list|)
define|\
value|DES_ede3_cbc_encrypt((i),(o),(l),(k1),(k2),(k1),(iv),(e))
define|#
directive|define
name|DES_ede2_cfb64_encrypt
parameter_list|(
name|i
parameter_list|,
name|o
parameter_list|,
name|l
parameter_list|,
name|k1
parameter_list|,
name|k2
parameter_list|,
name|iv
parameter_list|,
name|n
parameter_list|,
name|e
parameter_list|)
define|\
value|DES_ede3_cfb64_encrypt((i),(o),(l),(k1),(k2),(k1),(iv),(n),(e))
define|#
directive|define
name|DES_ede2_ofb64_encrypt
parameter_list|(
name|i
parameter_list|,
name|o
parameter_list|,
name|l
parameter_list|,
name|k1
parameter_list|,
name|k2
parameter_list|,
name|iv
parameter_list|,
name|n
parameter_list|)
define|\
value|DES_ede3_ofb64_encrypt((i),(o),(l),(k1),(k2),(k1),(iv),(n))
name|OPENSSL_DECLARE_GLOBAL
argument_list|(
name|int
argument_list|,
name|DES_check_key
argument_list|)
expr_stmt|;
comment|/* defaults to false */
define|#
directive|define
name|DES_check_key
value|OPENSSL_GLOBAL_REF(DES_check_key)
name|OPENSSL_DECLARE_GLOBAL
argument_list|(
name|int
argument_list|,
name|DES_rw_mode
argument_list|)
expr_stmt|;
comment|/* defaults to DES_PCBC_MODE */
define|#
directive|define
name|DES_rw_mode
value|OPENSSL_GLOBAL_REF(DES_rw_mode)
specifier|const
name|char
modifier|*
name|DES_options
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|DES_ecb3_encrypt
parameter_list|(
name|const_DES_cblock
modifier|*
name|input
parameter_list|,
name|DES_cblock
modifier|*
name|output
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks1
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks2
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks3
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|DES_LONG
name|DES_cbc_cksum
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|input
parameter_list|,
name|DES_cblock
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|,
name|const_DES_cblock
modifier|*
name|ivec
parameter_list|)
function_decl|;
comment|/* DES_cbc_encrypt does not update the IV!  Use DES_ncbc_encrypt instead. */
name|void
name|DES_cbc_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|input
parameter_list|,
name|unsigned
name|char
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|,
name|DES_cblock
modifier|*
name|ivec
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|DES_ncbc_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|input
parameter_list|,
name|unsigned
name|char
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|,
name|DES_cblock
modifier|*
name|ivec
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|DES_xcbc_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|input
parameter_list|,
name|unsigned
name|char
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|,
name|DES_cblock
modifier|*
name|ivec
parameter_list|,
name|const_DES_cblock
modifier|*
name|inw
parameter_list|,
name|const_DES_cblock
modifier|*
name|outw
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|DES_cfb_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|int
name|numbits
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|,
name|DES_cblock
modifier|*
name|ivec
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|DES_ecb_encrypt
parameter_list|(
name|const_DES_cblock
modifier|*
name|input
parameter_list|,
name|DES_cblock
modifier|*
name|output
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
comment|/*  * This is the DES encryption function that gets called by just about every  * other DES routine in the library.  You should not use this function except  * to implement 'modes' of DES.  I say this because the functions that call  * this routine do the conversion from 'char *' to long, and this needs to be  * done to make sure 'non-aligned' memory access do not occur.  The  * characters are loaded 'little endian'. Data is a pointer to 2 unsigned  * long's and ks is the DES_key_schedule to use.  enc, is non zero specifies  * encryption, zero if decryption.  */
name|void
name|DES_encrypt1
parameter_list|(
name|DES_LONG
modifier|*
name|data
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
comment|/*  * This functions is the same as DES_encrypt1() except that the DES initial  * permutation (IP) and final permutation (FP) have been left out.  As for  * DES_encrypt1(), you should not use this function. It is used by the  * routines in the library that implement triple DES. IP() DES_encrypt2()  * DES_encrypt2() DES_encrypt2() FP() is the same as DES_encrypt1()  * DES_encrypt1() DES_encrypt1() except faster :-).  */
name|void
name|DES_encrypt2
parameter_list|(
name|DES_LONG
modifier|*
name|data
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|DES_encrypt3
parameter_list|(
name|DES_LONG
modifier|*
name|data
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks1
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks2
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks3
parameter_list|)
function_decl|;
name|void
name|DES_decrypt3
parameter_list|(
name|DES_LONG
modifier|*
name|data
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks1
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks2
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks3
parameter_list|)
function_decl|;
name|void
name|DES_ede3_cbc_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|input
parameter_list|,
name|unsigned
name|char
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks1
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks2
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks3
parameter_list|,
name|DES_cblock
modifier|*
name|ivec
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|DES_ede3_cbcm_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks1
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks2
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks3
parameter_list|,
name|DES_cblock
modifier|*
name|ivec1
parameter_list|,
name|DES_cblock
modifier|*
name|ivec2
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|DES_ede3_cfb64_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks1
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks2
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks3
parameter_list|,
name|DES_cblock
modifier|*
name|ivec
parameter_list|,
name|int
modifier|*
name|num
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|DES_ede3_cfb_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|int
name|numbits
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks1
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks2
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks3
parameter_list|,
name|DES_cblock
modifier|*
name|ivec
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|DES_ede3_ofb64_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks1
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks2
parameter_list|,
name|DES_key_schedule
modifier|*
name|ks3
parameter_list|,
name|DES_cblock
modifier|*
name|ivec
parameter_list|,
name|int
modifier|*
name|num
parameter_list|)
function_decl|;
if|#
directive|if
literal|0
block|void DES_xwhite_in2out(const_DES_cblock *DES_key, const_DES_cblock *in_white,                        DES_cblock *out_white);
endif|#
directive|endif
name|int
name|DES_enc_read
parameter_list|(
name|int
name|fd
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|int
name|len
parameter_list|,
name|DES_key_schedule
modifier|*
name|sched
parameter_list|,
name|DES_cblock
modifier|*
name|iv
parameter_list|)
function_decl|;
name|int
name|DES_enc_write
parameter_list|(
name|int
name|fd
parameter_list|,
specifier|const
name|void
modifier|*
name|buf
parameter_list|,
name|int
name|len
parameter_list|,
name|DES_key_schedule
modifier|*
name|sched
parameter_list|,
name|DES_cblock
modifier|*
name|iv
parameter_list|)
function_decl|;
name|char
modifier|*
name|DES_fcrypt
parameter_list|(
specifier|const
name|char
modifier|*
name|buf
parameter_list|,
specifier|const
name|char
modifier|*
name|salt
parameter_list|,
name|char
modifier|*
name|ret
parameter_list|)
function_decl|;
name|char
modifier|*
name|DES_crypt
parameter_list|(
specifier|const
name|char
modifier|*
name|buf
parameter_list|,
specifier|const
name|char
modifier|*
name|salt
parameter_list|)
function_decl|;
name|void
name|DES_ofb_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|int
name|numbits
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|,
name|DES_cblock
modifier|*
name|ivec
parameter_list|)
function_decl|;
name|void
name|DES_pcbc_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|input
parameter_list|,
name|unsigned
name|char
modifier|*
name|output
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|,
name|DES_cblock
modifier|*
name|ivec
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|DES_LONG
name|DES_quad_cksum
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|input
parameter_list|,
name|DES_cblock
name|output
index|[]
parameter_list|,
name|long
name|length
parameter_list|,
name|int
name|out_count
parameter_list|,
name|DES_cblock
modifier|*
name|seed
parameter_list|)
function_decl|;
name|int
name|DES_random_key
parameter_list|(
name|DES_cblock
modifier|*
name|ret
parameter_list|)
function_decl|;
name|void
name|DES_set_odd_parity
parameter_list|(
name|DES_cblock
modifier|*
name|key
parameter_list|)
function_decl|;
name|int
name|DES_check_key_parity
parameter_list|(
name|const_DES_cblock
modifier|*
name|key
parameter_list|)
function_decl|;
name|int
name|DES_is_weak_key
parameter_list|(
name|const_DES_cblock
modifier|*
name|key
parameter_list|)
function_decl|;
comment|/*  * DES_set_key (= set_key = DES_key_sched = key_sched) calls  * DES_set_key_checked if global variable DES_check_key is set,  * DES_set_key_unchecked otherwise.  */
name|int
name|DES_set_key
parameter_list|(
name|const_DES_cblock
modifier|*
name|key
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|)
function_decl|;
name|int
name|DES_key_sched
parameter_list|(
name|const_DES_cblock
modifier|*
name|key
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|)
function_decl|;
name|int
name|DES_set_key_checked
parameter_list|(
name|const_DES_cblock
modifier|*
name|key
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|)
function_decl|;
name|void
name|DES_set_key_unchecked
parameter_list|(
name|const_DES_cblock
modifier|*
name|key
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|OPENSSL_FIPS
name|void
name|private_DES_set_key_unchecked
parameter_list|(
name|const_DES_cblock
modifier|*
name|key
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|)
function_decl|;
endif|#
directive|endif
name|void
name|DES_string_to_key
parameter_list|(
specifier|const
name|char
modifier|*
name|str
parameter_list|,
name|DES_cblock
modifier|*
name|key
parameter_list|)
function_decl|;
name|void
name|DES_string_to_2keys
parameter_list|(
specifier|const
name|char
modifier|*
name|str
parameter_list|,
name|DES_cblock
modifier|*
name|key1
parameter_list|,
name|DES_cblock
modifier|*
name|key2
parameter_list|)
function_decl|;
name|void
name|DES_cfb64_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|,
name|DES_cblock
modifier|*
name|ivec
parameter_list|,
name|int
modifier|*
name|num
parameter_list|,
name|int
name|enc
parameter_list|)
function_decl|;
name|void
name|DES_ofb64_encrypt
parameter_list|(
specifier|const
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|char
modifier|*
name|out
parameter_list|,
name|long
name|length
parameter_list|,
name|DES_key_schedule
modifier|*
name|schedule
parameter_list|,
name|DES_cblock
modifier|*
name|ivec
parameter_list|,
name|int
modifier|*
name|num
parameter_list|)
function_decl|;
name|int
name|DES_read_password
parameter_list|(
name|DES_cblock
modifier|*
name|key
parameter_list|,
specifier|const
name|char
modifier|*
name|prompt
parameter_list|,
name|int
name|verify
parameter_list|)
function_decl|;
name|int
name|DES_read_2passwords
parameter_list|(
name|DES_cblock
modifier|*
name|key1
parameter_list|,
name|DES_cblock
modifier|*
name|key2
parameter_list|,
specifier|const
name|char
modifier|*
name|prompt
parameter_list|,
name|int
name|verify
parameter_list|)
function_decl|;
define|#
directive|define
name|DES_fixup_key_parity
value|DES_set_odd_parity
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

