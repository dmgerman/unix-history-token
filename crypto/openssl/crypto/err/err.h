begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* crypto/err/err.h */
end_comment

begin_comment
comment|/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)  * All rights reserved.  *  * This package is an SSL implementation written  * by Eric Young (eay@cryptsoft.com).  * The implementation was written so as to conform with Netscapes SSL.  *   * This library is free for commercial and non-commercial use as long as  * the following conditions are aheared to.  The following conditions  * apply to all code found in this distribution, be it the RC4, RSA,  * lhash, DES, etc., code; not just the SSL code.  The SSL documentation  * included with this distribution is covered by the same copyright terms  * except that the holder is Tim Hudson (tjh@cryptsoft.com).  *   * Copyright remains Eric Young's, and as such any Copyright notices in  * the code are not to be removed.  * If this package is used in a product, Eric Young should be given attribution  * as the author of the parts of the library used.  * This can be in the form of a textual message at program startup or  * in documentation (online or textual) provided with the package.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *    "This product includes cryptographic software written by  *     Eric Young (eay@cryptsoft.com)"  *    The word 'cryptographic' can be left out if the rouines from the library  *    being used are not cryptographic related :-).  * 4. If you include any Windows specific code (or a derivative thereof) from   *    the apps directory (application code) you must include an acknowledgement:  *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"  *   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *   * The licence and distribution terms for any publically available version or  * derivative of this code cannot be changed.  i.e. this code cannot simply be  * copied and put under another distribution licence  * [including the GNU Public Licence.]  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HEADER_ERR_H
end_ifndef

begin_define
define|#
directive|define
name|HEADER_ERR_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
ifndef|#
directive|ifndef
name|NO_FP_API
include|#
directive|include
file|<stdio.h>
endif|#
directive|endif
comment|/* The following is a bit of a trick to help the object files only contain  * the 'name of the file' string once.  Since 'err.h' is protected by the  * HEADER_ERR_H stuff, this should be included only once per file. */
define|#
directive|define
name|ERR_file_name
value|__FILE__
ifndef|#
directive|ifndef
name|NO_ERR
define|#
directive|define
name|ERR_PUT_error
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|,
name|c
parameter_list|,
name|d
parameter_list|,
name|e
parameter_list|)
value|ERR_put_error(a,b,c,d,e)
else|#
directive|else
define|#
directive|define
name|ERR_PUT_error
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|,
name|c
parameter_list|,
name|d
parameter_list|,
name|e
parameter_list|)
value|ERR_put_error(a,b,c,NULL,0)
endif|#
directive|endif
include|#
directive|include
file|<errno.h>
define|#
directive|define
name|ERR_TXT_MALLOCED
value|0x01
define|#
directive|define
name|ERR_TXT_STRING
value|0x02
define|#
directive|define
name|ERR_NUM_ERRORS
value|16
typedef|typedef
struct|struct
name|err_state_st
block|{
name|unsigned
name|long
name|pid
decl_stmt|;
name|unsigned
name|long
name|err_buffer
index|[
name|ERR_NUM_ERRORS
index|]
decl_stmt|;
name|char
modifier|*
name|err_data
index|[
name|ERR_NUM_ERRORS
index|]
decl_stmt|;
name|int
name|err_data_flags
index|[
name|ERR_NUM_ERRORS
index|]
decl_stmt|;
specifier|const
name|char
modifier|*
name|err_file
index|[
name|ERR_NUM_ERRORS
index|]
decl_stmt|;
name|int
name|err_line
index|[
name|ERR_NUM_ERRORS
index|]
decl_stmt|;
name|int
name|top
decl_stmt|,
name|bottom
decl_stmt|;
block|}
name|ERR_STATE
typedef|;
comment|/* library */
define|#
directive|define
name|ERR_LIB_NONE
value|1
define|#
directive|define
name|ERR_LIB_SYS
value|2
define|#
directive|define
name|ERR_LIB_BN
value|3
define|#
directive|define
name|ERR_LIB_RSA
value|4
define|#
directive|define
name|ERR_LIB_DH
value|5
define|#
directive|define
name|ERR_LIB_EVP
value|6
define|#
directive|define
name|ERR_LIB_BUF
value|7
define|#
directive|define
name|ERR_LIB_OBJ
value|8
define|#
directive|define
name|ERR_LIB_PEM
value|9
define|#
directive|define
name|ERR_LIB_DSA
value|10
define|#
directive|define
name|ERR_LIB_X509
value|11
define|#
directive|define
name|ERR_LIB_METH
value|12
define|#
directive|define
name|ERR_LIB_ASN1
value|13
define|#
directive|define
name|ERR_LIB_CONF
value|14
define|#
directive|define
name|ERR_LIB_CRYPTO
value|15
define|#
directive|define
name|ERR_LIB_SSL
value|20
define|#
directive|define
name|ERR_LIB_SSL23
value|21
define|#
directive|define
name|ERR_LIB_SSL2
value|22
define|#
directive|define
name|ERR_LIB_SSL3
value|23
define|#
directive|define
name|ERR_LIB_RSAREF
value|30
define|#
directive|define
name|ERR_LIB_PROXY
value|31
define|#
directive|define
name|ERR_LIB_BIO
value|32
define|#
directive|define
name|ERR_LIB_PKCS7
value|33
define|#
directive|define
name|ERR_LIB_X509V3
value|34
define|#
directive|define
name|ERR_LIB_PKCS12
value|35
define|#
directive|define
name|ERR_LIB_RAND
value|36
define|#
directive|define
name|ERR_LIB_USER
value|128
define|#
directive|define
name|SYSerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_SYS,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|BNerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_BN,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|RSAerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_RSA,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|DHerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_DH,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|EVPerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_EVP,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|BUFerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_BUF,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|BIOerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_BIO,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|OBJerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_OBJ,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|PEMerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_PEM,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|DSAerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_DSA,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|X509err
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_X509,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|METHerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_METH,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|ASN1err
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_ASN1,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|CONFerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_CONF,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|CRYPTOerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_CRYPTO,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|SSLerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_SSL,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|SSL23err
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_SSL23,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|SSL2err
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_SSL2,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|SSL3err
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_SSL3,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|RSAREFerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_RSAREF,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|PROXYerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_PROXY,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|PKCS7err
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_PKCS7,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|X509V3err
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_X509V3,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|PKCS12err
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_PKCS12,(f),(r),ERR_file_name,__LINE__)
define|#
directive|define
name|RANDerr
parameter_list|(
name|f
parameter_list|,
name|r
parameter_list|)
value|ERR_PUT_error(ERR_LIB_RAND,(f),(r),ERR_file_name,__LINE__)
comment|/* Borland C seems too stupid to be able to shift and do longs in  * the pre-processor :-( */
define|#
directive|define
name|ERR_PACK
parameter_list|(
name|l
parameter_list|,
name|f
parameter_list|,
name|r
parameter_list|)
value|(((((unsigned long)l)&0xffL)*0x1000000)| \ 				((((unsigned long)f)&0xfffL)*0x1000)| \ 				((((unsigned long)r)&0xfffL)))
define|#
directive|define
name|ERR_GET_LIB
parameter_list|(
name|l
parameter_list|)
value|(int)((((unsigned long)l)>>24L)&0xffL)
define|#
directive|define
name|ERR_GET_FUNC
parameter_list|(
name|l
parameter_list|)
value|(int)((((unsigned long)l)>>12L)&0xfffL)
define|#
directive|define
name|ERR_GET_REASON
parameter_list|(
name|l
parameter_list|)
value|(int)((l)&0xfffL)
define|#
directive|define
name|ERR_FATAL_ERROR
parameter_list|(
name|l
parameter_list|)
value|(int)((l)&ERR_R_FATAL)
comment|/* OS functions */
define|#
directive|define
name|SYS_F_FOPEN
value|1
define|#
directive|define
name|SYS_F_CONNECT
value|2
define|#
directive|define
name|SYS_F_GETSERVBYNAME
value|3
define|#
directive|define
name|SYS_F_SOCKET
value|4
define|#
directive|define
name|SYS_F_IOCTLSOCKET
value|5
define|#
directive|define
name|SYS_F_BIND
value|6
define|#
directive|define
name|SYS_F_LISTEN
value|7
define|#
directive|define
name|SYS_F_ACCEPT
value|8
define|#
directive|define
name|SYS_F_WSASTARTUP
value|9
comment|/* Winsock stuff */
define|#
directive|define
name|SYS_F_OPENDIR
value|10
define|#
directive|define
name|ERR_R_FATAL
value|32
comment|/* reasons */
define|#
directive|define
name|ERR_R_SYS_LIB
value|ERR_LIB_SYS
define|#
directive|define
name|ERR_R_BN_LIB
value|ERR_LIB_BN
define|#
directive|define
name|ERR_R_RSA_LIB
value|ERR_LIB_RSA
define|#
directive|define
name|ERR_R_DSA_LIB
value|ERR_LIB_DSA
define|#
directive|define
name|ERR_R_DH_LIB
value|ERR_LIB_DH
define|#
directive|define
name|ERR_R_EVP_LIB
value|ERR_LIB_EVP
define|#
directive|define
name|ERR_R_BUF_LIB
value|ERR_LIB_BUF
define|#
directive|define
name|ERR_R_BIO_LIB
value|ERR_LIB_BIO
define|#
directive|define
name|ERR_R_OBJ_LIB
value|ERR_LIB_OBJ
define|#
directive|define
name|ERR_R_PEM_LIB
value|ERR_LIB_PEM
define|#
directive|define
name|ERR_R_X509_LIB
value|ERR_LIB_X509
define|#
directive|define
name|ERR_R_METH_LIB
value|ERR_LIB_METH
define|#
directive|define
name|ERR_R_ASN1_LIB
value|ERR_LIB_ASN1
define|#
directive|define
name|ERR_R_CONF_LIB
value|ERR_LIB_CONF
define|#
directive|define
name|ERR_R_CRYPTO_LIB
value|ERR_LIB_CRYPTO
define|#
directive|define
name|ERR_R_SSL_LIB
value|ERR_LIB_SSL
define|#
directive|define
name|ERR_R_SSL23_LIB
value|ERR_LIB_SSL23
define|#
directive|define
name|ERR_R_SSL2_LIB
value|ERR_LIB_SSL2
define|#
directive|define
name|ERR_R_SSL3_LIB
value|ERR_LIB_SSL3
define|#
directive|define
name|ERR_R_PROXY_LIB
value|ERR_LIB_PROXY
define|#
directive|define
name|ERR_R_BIO_LIB
value|ERR_LIB_BIO
define|#
directive|define
name|ERR_R_PKCS7_LIB
value|ERR_LIB_PKCS7
define|#
directive|define
name|ERR_R_PKCS12_LIB
value|ERR_LIB_PKCS12
comment|/* fatal error */
define|#
directive|define
name|ERR_R_MALLOC_FAILURE
value|(1|ERR_R_FATAL)
define|#
directive|define
name|ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED
value|(2|ERR_R_FATAL)
define|#
directive|define
name|ERR_R_PASSED_NULL_PARAMETER
value|(3|ERR_R_FATAL)
define|#
directive|define
name|ERR_R_NESTED_ASN1_ERROR
value|(4)
define|#
directive|define
name|ERR_R_BAD_ASN1_OBJECT_HEADER
value|(5)
define|#
directive|define
name|ERR_R_BAD_GET_ASN1_OBJECT_CALL
value|(6)
define|#
directive|define
name|ERR_R_EXPECTING_AN_ASN1_SEQUENCE
value|(7)
define|#
directive|define
name|ERR_R_ASN1_LENGTH_MISMATCH
value|(8)
define|#
directive|define
name|ERR_R_MISSING_ASN1_EOS
value|(9)
typedef|typedef
struct|struct
name|ERR_string_data_st
block|{
name|unsigned
name|long
name|error
decl_stmt|;
specifier|const
name|char
modifier|*
name|string
decl_stmt|;
block|}
name|ERR_STRING_DATA
typedef|;
name|void
name|ERR_put_error
parameter_list|(
name|int
name|lib
parameter_list|,
name|int
name|func
parameter_list|,
name|int
name|reason
parameter_list|,
specifier|const
name|char
modifier|*
name|file
parameter_list|,
name|int
name|line
parameter_list|)
function_decl|;
name|void
name|ERR_set_error_data
parameter_list|(
name|char
modifier|*
name|data
parameter_list|,
name|int
name|flags
parameter_list|)
function_decl|;
name|unsigned
name|long
name|ERR_get_error
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|unsigned
name|long
name|ERR_get_error_line
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
name|file
parameter_list|,
name|int
modifier|*
name|line
parameter_list|)
function_decl|;
name|unsigned
name|long
name|ERR_get_error_line_data
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
name|file
parameter_list|,
name|int
modifier|*
name|line
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|data
parameter_list|,
name|int
modifier|*
name|flags
parameter_list|)
function_decl|;
name|unsigned
name|long
name|ERR_peek_error
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|unsigned
name|long
name|ERR_peek_error_line
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
name|file
parameter_list|,
name|int
modifier|*
name|line
parameter_list|)
function_decl|;
name|unsigned
name|long
name|ERR_peek_error_line_data
parameter_list|(
specifier|const
name|char
modifier|*
modifier|*
name|file
parameter_list|,
name|int
modifier|*
name|line
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|data
parameter_list|,
name|int
modifier|*
name|flags
parameter_list|)
function_decl|;
name|void
name|ERR_clear_error
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|char
modifier|*
name|ERR_error_string
parameter_list|(
name|unsigned
name|long
name|e
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
name|ERR_lib_error_string
parameter_list|(
name|unsigned
name|long
name|e
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
name|ERR_func_error_string
parameter_list|(
name|unsigned
name|long
name|e
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
name|ERR_reason_error_string
parameter_list|(
name|unsigned
name|long
name|e
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|NO_FP_API
name|void
name|ERR_print_errors_fp
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|)
function_decl|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|HEADER_BIO_H
name|void
name|ERR_print_errors
parameter_list|(
name|BIO
modifier|*
name|bp
parameter_list|)
function_decl|;
name|void
name|ERR_add_error_data
parameter_list|(
name|int
name|num
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
endif|#
directive|endif
name|void
name|ERR_load_strings
parameter_list|(
name|int
name|lib
parameter_list|,
name|ERR_STRING_DATA
name|str
index|[]
parameter_list|)
function_decl|;
name|void
name|ERR_load_ERR_strings
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|ERR_load_crypto_strings
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|ERR_free_strings
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|ERR_remove_state
parameter_list|(
name|unsigned
name|long
name|pid
parameter_list|)
function_decl|;
comment|/* if zero we look it up */
name|ERR_STATE
modifier|*
name|ERR_get_state
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|HEADER_LHASH_H
name|LHASH
modifier|*
name|ERR_get_string_table
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|LHASH
modifier|*
name|ERR_get_err_state_table
parameter_list|(
name|void
parameter_list|)
function_decl|;
else|#
directive|else
name|char
modifier|*
name|ERR_get_string_table
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|char
modifier|*
name|ERR_get_err_state_table
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
name|int
name|ERR_get_next_error_library
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

