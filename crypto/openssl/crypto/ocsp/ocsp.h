begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* ocsp.h */
end_comment

begin_comment
comment|/* Written by Tom Titchener<Tom_Titchener@groove.net> for the OpenSSL  * project. */
end_comment

begin_comment
comment|/* History:    This file was transfered to Richard Levitte from CertCo by Kathy    Weinhold in mid-spring 2000 to be included in OpenSSL or released    as a patch kit. */
end_comment

begin_comment
comment|/* ====================================================================  * Copyright (c) 1998-2000 The OpenSSL Project.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.   *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in  *    the documentation and/or other materials provided with the  *    distribution.  *  * 3. All advertising materials mentioning features or use of this  *    software must display the following acknowledgment:  *    "This product includes software developed by the OpenSSL Project  *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"  *  * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to  *    endorse or promote products derived from this software without  *    prior written permission. For written permission, please contact  *    openssl-core@openssl.org.  *  * 5. Products derived from this software may not be called "OpenSSL"  *    nor may "OpenSSL" appear in their names without prior written  *    permission of the OpenSSL Project.  *  * 6. Redistributions of any form whatsoever must retain the following  *    acknowledgment:  *    "This product includes software developed by the OpenSSL Project  *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"  *  * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY  * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR  * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED  * OF THE POSSIBILITY OF SUCH DAMAGE.  * ====================================================================  *  * This product includes cryptographic software written by Eric Young  * (eay@cryptsoft.com).  This product includes software written by Tim  * Hudson (tjh@cryptsoft.com).  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HEADER_OCSP_H
end_ifndef

begin_define
define|#
directive|define
name|HEADER_OCSP_H
end_define

begin_include
include|#
directive|include
file|<openssl/x509.h>
end_include

begin_include
include|#
directive|include
file|<openssl/x509v3.h>
end_include

begin_include
include|#
directive|include
file|<openssl/safestack.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* Various flags and values */
define|#
directive|define
name|OCSP_DEFAULT_NONCE_LENGTH
value|16
define|#
directive|define
name|OCSP_NOCERTS
value|0x1
define|#
directive|define
name|OCSP_NOINTERN
value|0x2
define|#
directive|define
name|OCSP_NOSIGS
value|0x4
define|#
directive|define
name|OCSP_NOCHAIN
value|0x8
define|#
directive|define
name|OCSP_NOVERIFY
value|0x10
define|#
directive|define
name|OCSP_NOEXPLICIT
value|0x20
define|#
directive|define
name|OCSP_NOCASIGN
value|0x40
define|#
directive|define
name|OCSP_NODELEGATED
value|0x80
define|#
directive|define
name|OCSP_NOCHECKS
value|0x100
define|#
directive|define
name|OCSP_TRUSTOTHER
value|0x200
define|#
directive|define
name|OCSP_RESPID_KEY
value|0x400
define|#
directive|define
name|OCSP_NOTIME
value|0x800
comment|/*   CertID ::= SEQUENCE {  *       hashAlgorithm            AlgorithmIdentifier,  *       issuerNameHash     OCTET STRING, -- Hash of Issuer's DN  *       issuerKeyHash      OCTET STRING, -- Hash of Issuers public key (excluding the tag& length fields)  *       serialNumber       CertificateSerialNumber }  */
typedef|typedef
struct|struct
name|ocsp_cert_id_st
block|{
name|X509_ALGOR
modifier|*
name|hashAlgorithm
decl_stmt|;
name|ASN1_OCTET_STRING
modifier|*
name|issuerNameHash
decl_stmt|;
name|ASN1_OCTET_STRING
modifier|*
name|issuerKeyHash
decl_stmt|;
name|ASN1_INTEGER
modifier|*
name|serialNumber
decl_stmt|;
block|}
name|OCSP_CERTID
typedef|;
name|DECLARE_STACK_OF
argument_list|(
argument|OCSP_CERTID
argument_list|)
comment|/*   Request ::=     SEQUENCE {  *       reqCert                    CertID,  *       singleRequestExtensions    [0] EXPLICIT Extensions OPTIONAL }  */
typedef|typedef
struct|struct
name|ocsp_one_request_st
block|{
name|OCSP_CERTID
modifier|*
name|reqCert
decl_stmt|;
name|STACK_OF
argument_list|(
name|X509_EXTENSION
argument_list|)
operator|*
name|singleRequestExtensions
expr_stmt|;
block|}
name|OCSP_ONEREQ
typedef|;
name|DECLARE_STACK_OF
argument_list|(
argument|OCSP_ONEREQ
argument_list|)
name|DECLARE_ASN1_SET_OF
argument_list|(
argument|OCSP_ONEREQ
argument_list|)
comment|/*   TBSRequest      ::=     SEQUENCE {  *       version             [0] EXPLICIT Version DEFAULT v1,  *       requestorName       [1] EXPLICIT GeneralName OPTIONAL,  *       requestList             SEQUENCE OF Request,  *       requestExtensions   [2] EXPLICIT Extensions OPTIONAL }  */
typedef|typedef
struct|struct
name|ocsp_req_info_st
block|{
name|ASN1_INTEGER
modifier|*
name|version
decl_stmt|;
name|GENERAL_NAME
modifier|*
name|requestorName
decl_stmt|;
name|STACK_OF
argument_list|(
name|OCSP_ONEREQ
argument_list|)
operator|*
name|requestList
expr_stmt|;
name|STACK_OF
argument_list|(
name|X509_EXTENSION
argument_list|)
operator|*
name|requestExtensions
expr_stmt|;
block|}
name|OCSP_REQINFO
typedef|;
comment|/*   Signature       ::=     SEQUENCE {  *       signatureAlgorithm   AlgorithmIdentifier,  *       signature            BIT STRING,  *       certs                [0] EXPLICIT SEQUENCE OF Certificate OPTIONAL }  */
typedef|typedef
struct|struct
name|ocsp_signature_st
block|{
name|X509_ALGOR
modifier|*
name|signatureAlgorithm
decl_stmt|;
name|ASN1_BIT_STRING
modifier|*
name|signature
decl_stmt|;
name|STACK_OF
argument_list|(
name|X509
argument_list|)
operator|*
name|certs
expr_stmt|;
block|}
name|OCSP_SIGNATURE
typedef|;
comment|/*   OCSPRequest     ::=     SEQUENCE {  *       tbsRequest                  TBSRequest,  *       optionalSignature   [0]     EXPLICIT Signature OPTIONAL }  */
typedef|typedef
struct|struct
name|ocsp_request_st
block|{
name|OCSP_REQINFO
modifier|*
name|tbsRequest
decl_stmt|;
name|OCSP_SIGNATURE
modifier|*
name|optionalSignature
decl_stmt|;
comment|/* OPTIONAL */
block|}
name|OCSP_REQUEST
typedef|;
comment|/*   OCSPResponseStatus ::= ENUMERATED {  *       successful            (0),      --Response has valid confirmations  *       malformedRequest      (1),      --Illegal confirmation request  *       internalError         (2),      --Internal error in issuer  *       tryLater              (3),      --Try again later  *                                       --(4) is not used  *       sigRequired           (5),      --Must sign the request  *       unauthorized          (6)       --Request unauthorized  *   }  */
define|#
directive|define
name|OCSP_RESPONSE_STATUS_SUCCESSFUL
value|0
define|#
directive|define
name|OCSP_RESPONSE_STATUS_MALFORMEDREQUEST
value|1
define|#
directive|define
name|OCSP_RESPONSE_STATUS_INTERNALERROR
value|2
define|#
directive|define
name|OCSP_RESPONSE_STATUS_TRYLATER
value|3
define|#
directive|define
name|OCSP_RESPONSE_STATUS_SIGREQUIRED
value|5
define|#
directive|define
name|OCSP_RESPONSE_STATUS_UNAUTHORIZED
value|6
comment|/*   ResponseBytes ::=       SEQUENCE {  *       responseType   OBJECT IDENTIFIER,  *       response       OCTET STRING }  */
typedef|typedef
struct|struct
name|ocsp_resp_bytes_st
block|{
name|ASN1_OBJECT
modifier|*
name|responseType
decl_stmt|;
name|ASN1_OCTET_STRING
modifier|*
name|response
decl_stmt|;
block|}
name|OCSP_RESPBYTES
typedef|;
comment|/*   OCSPResponse ::= SEQUENCE {  *      responseStatus         OCSPResponseStatus,  *      responseBytes          [0] EXPLICIT ResponseBytes OPTIONAL }  */
typedef|typedef
struct|struct
name|ocsp_response_st
block|{
name|ASN1_ENUMERATED
modifier|*
name|responseStatus
decl_stmt|;
name|OCSP_RESPBYTES
modifier|*
name|responseBytes
decl_stmt|;
block|}
name|OCSP_RESPONSE
typedef|;
comment|/*   ResponderID ::= CHOICE {  *      byName   [1] Name,  *      byKey    [2] KeyHash }  */
define|#
directive|define
name|V_OCSP_RESPID_NAME
value|0
define|#
directive|define
name|V_OCSP_RESPID_KEY
value|1
typedef|typedef
struct|struct
name|ocsp_responder_id_st
block|{
name|int
name|type
decl_stmt|;
union|union
block|{
name|X509_NAME
modifier|*
name|byName
decl_stmt|;
name|ASN1_OCTET_STRING
modifier|*
name|byKey
decl_stmt|;
block|}
name|value
union|;
block|}
name|OCSP_RESPID
typedef|;
comment|/*   KeyHash ::= OCTET STRING --SHA-1 hash of responder's public key  *                            --(excluding the tag and length fields)  */
comment|/*   RevokedInfo ::= SEQUENCE {  *       revocationTime              GeneralizedTime,  *       revocationReason    [0]     EXPLICIT CRLReason OPTIONAL }  */
typedef|typedef
struct|struct
name|ocsp_revoked_info_st
block|{
name|ASN1_GENERALIZEDTIME
modifier|*
name|revocationTime
decl_stmt|;
name|ASN1_ENUMERATED
modifier|*
name|revocationReason
decl_stmt|;
block|}
name|OCSP_REVOKEDINFO
typedef|;
comment|/*   CertStatus ::= CHOICE {  *       good                [0]     IMPLICIT NULL,  *       revoked             [1]     IMPLICIT RevokedInfo,  *       unknown             [2]     IMPLICIT UnknownInfo }  */
define|#
directive|define
name|V_OCSP_CERTSTATUS_GOOD
value|0
define|#
directive|define
name|V_OCSP_CERTSTATUS_REVOKED
value|1
define|#
directive|define
name|V_OCSP_CERTSTATUS_UNKNOWN
value|2
typedef|typedef
struct|struct
name|ocsp_cert_status_st
block|{
name|int
name|type
decl_stmt|;
union|union
block|{
name|ASN1_NULL
modifier|*
name|good
decl_stmt|;
name|OCSP_REVOKEDINFO
modifier|*
name|revoked
decl_stmt|;
name|ASN1_NULL
modifier|*
name|unknown
decl_stmt|;
block|}
name|value
union|;
block|}
name|OCSP_CERTSTATUS
typedef|;
comment|/*   SingleResponse ::= SEQUENCE {  *      certID                       CertID,  *      certStatus                   CertStatus,  *      thisUpdate                   GeneralizedTime,  *      nextUpdate           [0]     EXPLICIT GeneralizedTime OPTIONAL,  *      singleExtensions     [1]     EXPLICIT Extensions OPTIONAL }  */
typedef|typedef
struct|struct
name|ocsp_single_response_st
block|{
name|OCSP_CERTID
modifier|*
name|certId
decl_stmt|;
name|OCSP_CERTSTATUS
modifier|*
name|certStatus
decl_stmt|;
name|ASN1_GENERALIZEDTIME
modifier|*
name|thisUpdate
decl_stmt|;
name|ASN1_GENERALIZEDTIME
modifier|*
name|nextUpdate
decl_stmt|;
name|STACK_OF
argument_list|(
name|X509_EXTENSION
argument_list|)
operator|*
name|singleExtensions
expr_stmt|;
block|}
name|OCSP_SINGLERESP
typedef|;
name|DECLARE_STACK_OF
argument_list|(
argument|OCSP_SINGLERESP
argument_list|)
name|DECLARE_ASN1_SET_OF
argument_list|(
argument|OCSP_SINGLERESP
argument_list|)
comment|/*   ResponseData ::= SEQUENCE {  *      version              [0] EXPLICIT Version DEFAULT v1,  *      responderID              ResponderID,  *      producedAt               GeneralizedTime,  *      responses                SEQUENCE OF SingleResponse,  *      responseExtensions   [1] EXPLICIT Extensions OPTIONAL }  */
typedef|typedef
struct|struct
name|ocsp_response_data_st
block|{
name|ASN1_INTEGER
modifier|*
name|version
decl_stmt|;
name|OCSP_RESPID
modifier|*
name|responderId
decl_stmt|;
name|ASN1_GENERALIZEDTIME
modifier|*
name|producedAt
decl_stmt|;
name|STACK_OF
argument_list|(
name|OCSP_SINGLERESP
argument_list|)
operator|*
name|responses
expr_stmt|;
name|STACK_OF
argument_list|(
name|X509_EXTENSION
argument_list|)
operator|*
name|responseExtensions
expr_stmt|;
block|}
name|OCSP_RESPDATA
typedef|;
comment|/*   BasicOCSPResponse       ::= SEQUENCE {  *      tbsResponseData      ResponseData,  *      signatureAlgorithm   AlgorithmIdentifier,  *      signature            BIT STRING,  *      certs                [0] EXPLICIT SEQUENCE OF Certificate OPTIONAL }  */
comment|/* Note 1:      The value for "signature" is specified in the OCSP rfc2560 as follows:      "The value for the signature SHALL be computed on the hash of the DER      encoding ResponseData."  This means that you must hash the DER-encoded      tbsResponseData, and then run it through a crypto-signing function, which      will (at least w/RSA) do a hash-'n'-private-encrypt operation.  This seems      a bit odd, but that's the spec.  Also note that the data structures do not      leave anywhere to independently specify the algorithm used for the initial      hash. So, we look at the signature-specification algorithm, and try to do      something intelligent.	-- Kathy Weinhold, CertCo */
comment|/* Note 2:      It seems that the mentioned passage from RFC 2560 (section 4.2.1) is open      for interpretation.  I've done tests against another responder, and found      that it doesn't do the double hashing that the RFC seems to say one      should.  Therefore, all relevant functions take a flag saying which      variant should be used.	-- Richard Levitte, OpenSSL team and CeloCom */
typedef|typedef
struct|struct
name|ocsp_basic_response_st
block|{
name|OCSP_RESPDATA
modifier|*
name|tbsResponseData
decl_stmt|;
name|X509_ALGOR
modifier|*
name|signatureAlgorithm
decl_stmt|;
name|ASN1_BIT_STRING
modifier|*
name|signature
decl_stmt|;
name|STACK_OF
argument_list|(
name|X509
argument_list|)
operator|*
name|certs
expr_stmt|;
block|}
name|OCSP_BASICRESP
typedef|;
comment|/*  *   CRLReason ::= ENUMERATED {  *        unspecified             (0),  *        keyCompromise           (1),  *        cACompromise            (2),  *        affiliationChanged      (3),  *        superseded              (4),  *        cessationOfOperation    (5),  *        certificateHold         (6),  *        removeFromCRL           (8) }  */
define|#
directive|define
name|OCSP_REVOKED_STATUS_NOSTATUS
value|-1
define|#
directive|define
name|OCSP_REVOKED_STATUS_UNSPECIFIED
value|0
define|#
directive|define
name|OCSP_REVOKED_STATUS_KEYCOMPROMISE
value|1
define|#
directive|define
name|OCSP_REVOKED_STATUS_CACOMPROMISE
value|2
define|#
directive|define
name|OCSP_REVOKED_STATUS_AFFILIATIONCHANGED
value|3
define|#
directive|define
name|OCSP_REVOKED_STATUS_SUPERSEDED
value|4
define|#
directive|define
name|OCSP_REVOKED_STATUS_CESSATIONOFOPERATION
value|5
define|#
directive|define
name|OCSP_REVOKED_STATUS_CERTIFICATEHOLD
value|6
define|#
directive|define
name|OCSP_REVOKED_STATUS_REMOVEFROMCRL
value|8
comment|/* CrlID ::= SEQUENCE {  *     crlUrl               [0]     EXPLICIT IA5String OPTIONAL,  *     crlNum               [1]     EXPLICIT INTEGER OPTIONAL,  *     crlTime              [2]     EXPLICIT GeneralizedTime OPTIONAL }  */
typedef|typedef
struct|struct
name|ocsp_crl_id_st
block|{
name|ASN1_IA5STRING
modifier|*
name|crlUrl
decl_stmt|;
name|ASN1_INTEGER
modifier|*
name|crlNum
decl_stmt|;
name|ASN1_GENERALIZEDTIME
modifier|*
name|crlTime
decl_stmt|;
block|}
name|OCSP_CRLID
typedef|;
comment|/* ServiceLocator ::= SEQUENCE {  *      issuer    Name,  *      locator   AuthorityInfoAccessSyntax OPTIONAL }  */
typedef|typedef
struct|struct
name|ocsp_service_locator_st
block|{
name|X509_NAME
modifier|*
name|issuer
decl_stmt|;
name|STACK_OF
argument_list|(
name|ACCESS_DESCRIPTION
argument_list|)
operator|*
name|locator
expr_stmt|;
block|}
name|OCSP_SERVICELOC
typedef|;
define|#
directive|define
name|PEM_STRING_OCSP_REQUEST
value|"OCSP REQUEST"
define|#
directive|define
name|PEM_STRING_OCSP_RESPONSE
value|"OCSP RESPONSE"
define|#
directive|define
name|d2i_OCSP_REQUEST_bio
parameter_list|(
name|bp
parameter_list|,
name|p
parameter_list|)
value|ASN1_d2i_bio_of(OCSP_REQUEST,OCSP_REQUEST_new,d2i_OCSP_REQUEST,bp,p)
define|#
directive|define
name|d2i_OCSP_RESPONSE_bio
parameter_list|(
name|bp
parameter_list|,
name|p
parameter_list|)
value|ASN1_d2i_bio_of(OCSP_RESPONSE,OCSP_RESPONSE_new,d2i_OCSP_RESPONSE,bp,p)
define|#
directive|define
name|PEM_read_bio_OCSP_REQUEST
parameter_list|(
name|bp
parameter_list|,
name|x
parameter_list|,
name|cb
parameter_list|)
value|(OCSP_REQUEST *)PEM_ASN1_read_bio( \      (char *(*)())d2i_OCSP_REQUEST,PEM_STRING_OCSP_REQUEST,bp,(char **)x,cb,NULL)
define|#
directive|define
name|PEM_read_bio_OCSP_RESPONSE
parameter_list|(
name|bp
parameter_list|,
name|x
parameter_list|,
name|cb
parameter_list|)
value|(OCSP_RESPONSE *)PEM_ASN1_read_bio(\      (char *(*)())d2i_OCSP_RESPONSE,PEM_STRING_OCSP_RESPONSE,bp,(char **)x,cb,NULL)
define|#
directive|define
name|PEM_write_bio_OCSP_REQUEST
parameter_list|(
name|bp
parameter_list|,
name|o
parameter_list|)
define|\
value|PEM_ASN1_write_bio((int (*)())i2d_OCSP_REQUEST,PEM_STRING_OCSP_REQUEST,\ 			bp,(char *)o, NULL,NULL,0,NULL,NULL)
define|#
directive|define
name|PEM_write_bio_OCSP_RESPONSE
parameter_list|(
name|bp
parameter_list|,
name|o
parameter_list|)
define|\
value|PEM_ASN1_write_bio((int (*)())i2d_OCSP_RESPONSE,PEM_STRING_OCSP_RESPONSE,\ 			bp,(char *)o, NULL,NULL,0,NULL,NULL)
define|#
directive|define
name|i2d_OCSP_RESPONSE_bio
parameter_list|(
name|bp
parameter_list|,
name|o
parameter_list|)
value|ASN1_i2d_bio_of(OCSP_RESPONSE,i2d_OCSP_RESPONSE,bp,o)
define|#
directive|define
name|i2d_OCSP_REQUEST_bio
parameter_list|(
name|bp
parameter_list|,
name|o
parameter_list|)
value|ASN1_i2d_bio_of(OCSP_REQUEST,i2d_OCSP_REQUEST,bp,o)
define|#
directive|define
name|OCSP_REQUEST_sign
parameter_list|(
name|o
parameter_list|,
name|pkey
parameter_list|,
name|md
parameter_list|)
define|\
value|ASN1_item_sign(ASN1_ITEM_rptr(OCSP_REQINFO),\ 		o->optionalSignature->signatureAlgorithm,NULL,\ 	        o->optionalSignature->signature,o->tbsRequest,pkey,md)
define|#
directive|define
name|OCSP_BASICRESP_sign
parameter_list|(
name|o
parameter_list|,
name|pkey
parameter_list|,
name|md
parameter_list|,
name|d
parameter_list|)
define|\
value|ASN1_item_sign(ASN1_ITEM_rptr(OCSP_RESPDATA),o->signatureAlgorithm,NULL,\ 		o->signature,o->tbsResponseData,pkey,md)
define|#
directive|define
name|OCSP_REQUEST_verify
parameter_list|(
name|a
parameter_list|,
name|r
parameter_list|)
value|ASN1_item_verify(ASN1_ITEM_rptr(OCSP_REQINFO),\         a->optionalSignature->signatureAlgorithm,\ 	a->optionalSignature->signature,a->tbsRequest,r)
define|#
directive|define
name|OCSP_BASICRESP_verify
parameter_list|(
name|a
parameter_list|,
name|r
parameter_list|,
name|d
parameter_list|)
value|ASN1_item_verify(ASN1_ITEM_rptr(OCSP_RESPDATA),\ 	a->signatureAlgorithm,a->signature,a->tbsResponseData,r)
define|#
directive|define
name|ASN1_BIT_STRING_digest
parameter_list|(
name|data
parameter_list|,
name|type
parameter_list|,
name|md
parameter_list|,
name|len
parameter_list|)
define|\
value|ASN1_item_digest(ASN1_ITEM_rptr(ASN1_BIT_STRING),type,data,md,len)
define|#
directive|define
name|OCSP_CERTID_dup
parameter_list|(
name|cid
parameter_list|)
value|ASN1_dup_of(OCSP_CERTID,i2d_OCSP_CERTID,d2i_OCSP_CERTID,cid)
define|#
directive|define
name|OCSP_CERTSTATUS_dup
parameter_list|(
name|cs
parameter_list|)
define|\
value|(OCSP_CERTSTATUS*)ASN1_dup((int(*)())i2d_OCSP_CERTSTATUS,\ 		(char *(*)())d2i_OCSP_CERTSTATUS,(char *)(cs))
name|OCSP_RESPONSE
modifier|*
name|OCSP_sendreq_bio
parameter_list|(
name|BIO
modifier|*
name|b
parameter_list|,
name|char
modifier|*
name|path
parameter_list|,
name|OCSP_REQUEST
modifier|*
name|req
parameter_list|)
function_decl|;
name|OCSP_CERTID
modifier|*
name|OCSP_cert_to_id
parameter_list|(
specifier|const
name|EVP_MD
modifier|*
name|dgst
parameter_list|,
name|X509
modifier|*
name|subject
parameter_list|,
name|X509
modifier|*
name|issuer
parameter_list|)
function_decl|;
name|OCSP_CERTID
modifier|*
name|OCSP_cert_id_new
parameter_list|(
specifier|const
name|EVP_MD
modifier|*
name|dgst
parameter_list|,
name|X509_NAME
modifier|*
name|issuerName
parameter_list|,
name|ASN1_BIT_STRING
modifier|*
name|issuerKey
parameter_list|,
name|ASN1_INTEGER
modifier|*
name|serialNumber
parameter_list|)
function_decl|;
name|OCSP_ONEREQ
modifier|*
name|OCSP_request_add0_id
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|req
parameter_list|,
name|OCSP_CERTID
modifier|*
name|cid
parameter_list|)
function_decl|;
name|int
name|OCSP_request_add1_nonce
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|req
parameter_list|,
name|unsigned
name|char
modifier|*
name|val
parameter_list|,
name|int
name|len
parameter_list|)
function_decl|;
name|int
name|OCSP_basic_add1_nonce
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|resp
parameter_list|,
name|unsigned
name|char
modifier|*
name|val
parameter_list|,
name|int
name|len
parameter_list|)
function_decl|;
name|int
name|OCSP_check_nonce
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|req
parameter_list|,
name|OCSP_BASICRESP
modifier|*
name|bs
parameter_list|)
function_decl|;
name|int
name|OCSP_copy_nonce
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|resp
parameter_list|,
name|OCSP_REQUEST
modifier|*
name|req
parameter_list|)
function_decl|;
name|int
name|OCSP_request_set1_name
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|req
parameter_list|,
name|X509_NAME
modifier|*
name|nm
parameter_list|)
function_decl|;
name|int
name|OCSP_request_add1_cert
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|req
parameter_list|,
name|X509
modifier|*
name|cert
parameter_list|)
function_decl|;
name|int
name|OCSP_request_sign
argument_list|(
name|OCSP_REQUEST
operator|*
name|req
argument_list|,
name|X509
operator|*
name|signer
argument_list|,
name|EVP_PKEY
operator|*
name|key
argument_list|,
specifier|const
name|EVP_MD
operator|*
name|dgst
argument_list|,
name|STACK_OF
argument_list|(
name|X509
argument_list|)
operator|*
name|certs
argument_list|,
name|unsigned
name|long
name|flags
argument_list|)
decl_stmt|;
name|int
name|OCSP_response_status
parameter_list|(
name|OCSP_RESPONSE
modifier|*
name|resp
parameter_list|)
function_decl|;
name|OCSP_BASICRESP
modifier|*
name|OCSP_response_get1_basic
parameter_list|(
name|OCSP_RESPONSE
modifier|*
name|resp
parameter_list|)
function_decl|;
name|int
name|OCSP_resp_count
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|bs
parameter_list|)
function_decl|;
name|OCSP_SINGLERESP
modifier|*
name|OCSP_resp_get0
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|bs
parameter_list|,
name|int
name|idx
parameter_list|)
function_decl|;
name|int
name|OCSP_resp_find
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|bs
parameter_list|,
name|OCSP_CERTID
modifier|*
name|id
parameter_list|,
name|int
name|last
parameter_list|)
function_decl|;
name|int
name|OCSP_single_get0_status
parameter_list|(
name|OCSP_SINGLERESP
modifier|*
name|single
parameter_list|,
name|int
modifier|*
name|reason
parameter_list|,
name|ASN1_GENERALIZEDTIME
modifier|*
modifier|*
name|revtime
parameter_list|,
name|ASN1_GENERALIZEDTIME
modifier|*
modifier|*
name|thisupd
parameter_list|,
name|ASN1_GENERALIZEDTIME
modifier|*
modifier|*
name|nextupd
parameter_list|)
function_decl|;
name|int
name|OCSP_resp_find_status
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|bs
parameter_list|,
name|OCSP_CERTID
modifier|*
name|id
parameter_list|,
name|int
modifier|*
name|status
parameter_list|,
name|int
modifier|*
name|reason
parameter_list|,
name|ASN1_GENERALIZEDTIME
modifier|*
modifier|*
name|revtime
parameter_list|,
name|ASN1_GENERALIZEDTIME
modifier|*
modifier|*
name|thisupd
parameter_list|,
name|ASN1_GENERALIZEDTIME
modifier|*
modifier|*
name|nextupd
parameter_list|)
function_decl|;
name|int
name|OCSP_check_validity
parameter_list|(
name|ASN1_GENERALIZEDTIME
modifier|*
name|thisupd
parameter_list|,
name|ASN1_GENERALIZEDTIME
modifier|*
name|nextupd
parameter_list|,
name|long
name|sec
parameter_list|,
name|long
name|maxsec
parameter_list|)
function_decl|;
name|int
name|OCSP_request_verify
argument_list|(
name|OCSP_REQUEST
operator|*
name|req
argument_list|,
name|STACK_OF
argument_list|(
name|X509
argument_list|)
operator|*
name|certs
argument_list|,
name|X509_STORE
operator|*
name|store
argument_list|,
name|unsigned
name|long
name|flags
argument_list|)
decl_stmt|;
name|int
name|OCSP_parse_url
parameter_list|(
name|char
modifier|*
name|url
parameter_list|,
name|char
modifier|*
modifier|*
name|phost
parameter_list|,
name|char
modifier|*
modifier|*
name|pport
parameter_list|,
name|char
modifier|*
modifier|*
name|ppath
parameter_list|,
name|int
modifier|*
name|pssl
parameter_list|)
function_decl|;
name|int
name|OCSP_id_issuer_cmp
parameter_list|(
name|OCSP_CERTID
modifier|*
name|a
parameter_list|,
name|OCSP_CERTID
modifier|*
name|b
parameter_list|)
function_decl|;
name|int
name|OCSP_id_cmp
parameter_list|(
name|OCSP_CERTID
modifier|*
name|a
parameter_list|,
name|OCSP_CERTID
modifier|*
name|b
parameter_list|)
function_decl|;
name|int
name|OCSP_request_onereq_count
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|req
parameter_list|)
function_decl|;
name|OCSP_ONEREQ
modifier|*
name|OCSP_request_onereq_get0
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|req
parameter_list|,
name|int
name|i
parameter_list|)
function_decl|;
name|OCSP_CERTID
modifier|*
name|OCSP_onereq_get0_id
parameter_list|(
name|OCSP_ONEREQ
modifier|*
name|one
parameter_list|)
function_decl|;
name|int
name|OCSP_id_get0_info
parameter_list|(
name|ASN1_OCTET_STRING
modifier|*
modifier|*
name|piNameHash
parameter_list|,
name|ASN1_OBJECT
modifier|*
modifier|*
name|pmd
parameter_list|,
name|ASN1_OCTET_STRING
modifier|*
modifier|*
name|pikeyHash
parameter_list|,
name|ASN1_INTEGER
modifier|*
modifier|*
name|pserial
parameter_list|,
name|OCSP_CERTID
modifier|*
name|cid
parameter_list|)
function_decl|;
name|int
name|OCSP_request_is_signed
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|req
parameter_list|)
function_decl|;
name|OCSP_RESPONSE
modifier|*
name|OCSP_response_create
parameter_list|(
name|int
name|status
parameter_list|,
name|OCSP_BASICRESP
modifier|*
name|bs
parameter_list|)
function_decl|;
name|OCSP_SINGLERESP
modifier|*
name|OCSP_basic_add1_status
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|rsp
parameter_list|,
name|OCSP_CERTID
modifier|*
name|cid
parameter_list|,
name|int
name|status
parameter_list|,
name|int
name|reason
parameter_list|,
name|ASN1_TIME
modifier|*
name|revtime
parameter_list|,
name|ASN1_TIME
modifier|*
name|thisupd
parameter_list|,
name|ASN1_TIME
modifier|*
name|nextupd
parameter_list|)
function_decl|;
name|int
name|OCSP_basic_add1_cert
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|resp
parameter_list|,
name|X509
modifier|*
name|cert
parameter_list|)
function_decl|;
name|int
name|OCSP_basic_sign
argument_list|(
name|OCSP_BASICRESP
operator|*
name|brsp
argument_list|,
name|X509
operator|*
name|signer
argument_list|,
name|EVP_PKEY
operator|*
name|key
argument_list|,
specifier|const
name|EVP_MD
operator|*
name|dgst
argument_list|,
name|STACK_OF
argument_list|(
name|X509
argument_list|)
operator|*
name|certs
argument_list|,
name|unsigned
name|long
name|flags
argument_list|)
decl_stmt|;
name|ASN1_STRING
modifier|*
name|ASN1_STRING_encode
argument_list|(
name|ASN1_STRING
operator|*
name|s
argument_list|,
name|i2d_of_void
operator|*
name|i2d
argument_list|,
name|void
operator|*
name|data
argument_list|,
name|STACK_OF
argument_list|(
name|ASN1_OBJECT
argument_list|)
operator|*
name|sk
argument_list|)
decl_stmt|;
define|#
directive|define
name|ASN1_STRING_encode_of
parameter_list|(
name|type
parameter_list|,
name|s
parameter_list|,
name|i2d
parameter_list|,
name|data
parameter_list|,
name|sk
parameter_list|)
define|\
value|(ASN1_STRING_encode((s), (i2d_of_void *)(i2d), (data), (STACK_OF(ASN1_OBJECT) *)(sk)))
name|X509_EXTENSION
modifier|*
name|OCSP_crlID_new
parameter_list|(
name|char
modifier|*
name|url
parameter_list|,
name|long
modifier|*
name|n
parameter_list|,
name|char
modifier|*
name|tim
parameter_list|)
function_decl|;
name|X509_EXTENSION
modifier|*
name|OCSP_accept_responses_new
parameter_list|(
name|char
modifier|*
modifier|*
name|oids
parameter_list|)
function_decl|;
name|X509_EXTENSION
modifier|*
name|OCSP_archive_cutoff_new
parameter_list|(
name|char
modifier|*
name|tim
parameter_list|)
function_decl|;
name|X509_EXTENSION
modifier|*
name|OCSP_url_svcloc_new
parameter_list|(
name|X509_NAME
modifier|*
name|issuer
parameter_list|,
name|char
modifier|*
modifier|*
name|urls
parameter_list|)
function_decl|;
name|int
name|OCSP_REQUEST_get_ext_count
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|x
parameter_list|)
function_decl|;
name|int
name|OCSP_REQUEST_get_ext_by_NID
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|x
parameter_list|,
name|int
name|nid
parameter_list|,
name|int
name|lastpos
parameter_list|)
function_decl|;
name|int
name|OCSP_REQUEST_get_ext_by_OBJ
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|x
parameter_list|,
name|ASN1_OBJECT
modifier|*
name|obj
parameter_list|,
name|int
name|lastpos
parameter_list|)
function_decl|;
name|int
name|OCSP_REQUEST_get_ext_by_critical
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|x
parameter_list|,
name|int
name|crit
parameter_list|,
name|int
name|lastpos
parameter_list|)
function_decl|;
name|X509_EXTENSION
modifier|*
name|OCSP_REQUEST_get_ext
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|x
parameter_list|,
name|int
name|loc
parameter_list|)
function_decl|;
name|X509_EXTENSION
modifier|*
name|OCSP_REQUEST_delete_ext
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|x
parameter_list|,
name|int
name|loc
parameter_list|)
function_decl|;
name|void
modifier|*
name|OCSP_REQUEST_get1_ext_d2i
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|x
parameter_list|,
name|int
name|nid
parameter_list|,
name|int
modifier|*
name|crit
parameter_list|,
name|int
modifier|*
name|idx
parameter_list|)
function_decl|;
name|int
name|OCSP_REQUEST_add1_ext_i2d
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|x
parameter_list|,
name|int
name|nid
parameter_list|,
name|void
modifier|*
name|value
parameter_list|,
name|int
name|crit
parameter_list|,
name|unsigned
name|long
name|flags
parameter_list|)
function_decl|;
name|int
name|OCSP_REQUEST_add_ext
parameter_list|(
name|OCSP_REQUEST
modifier|*
name|x
parameter_list|,
name|X509_EXTENSION
modifier|*
name|ex
parameter_list|,
name|int
name|loc
parameter_list|)
function_decl|;
name|int
name|OCSP_ONEREQ_get_ext_count
parameter_list|(
name|OCSP_ONEREQ
modifier|*
name|x
parameter_list|)
function_decl|;
name|int
name|OCSP_ONEREQ_get_ext_by_NID
parameter_list|(
name|OCSP_ONEREQ
modifier|*
name|x
parameter_list|,
name|int
name|nid
parameter_list|,
name|int
name|lastpos
parameter_list|)
function_decl|;
name|int
name|OCSP_ONEREQ_get_ext_by_OBJ
parameter_list|(
name|OCSP_ONEREQ
modifier|*
name|x
parameter_list|,
name|ASN1_OBJECT
modifier|*
name|obj
parameter_list|,
name|int
name|lastpos
parameter_list|)
function_decl|;
name|int
name|OCSP_ONEREQ_get_ext_by_critical
parameter_list|(
name|OCSP_ONEREQ
modifier|*
name|x
parameter_list|,
name|int
name|crit
parameter_list|,
name|int
name|lastpos
parameter_list|)
function_decl|;
name|X509_EXTENSION
modifier|*
name|OCSP_ONEREQ_get_ext
parameter_list|(
name|OCSP_ONEREQ
modifier|*
name|x
parameter_list|,
name|int
name|loc
parameter_list|)
function_decl|;
name|X509_EXTENSION
modifier|*
name|OCSP_ONEREQ_delete_ext
parameter_list|(
name|OCSP_ONEREQ
modifier|*
name|x
parameter_list|,
name|int
name|loc
parameter_list|)
function_decl|;
name|void
modifier|*
name|OCSP_ONEREQ_get1_ext_d2i
parameter_list|(
name|OCSP_ONEREQ
modifier|*
name|x
parameter_list|,
name|int
name|nid
parameter_list|,
name|int
modifier|*
name|crit
parameter_list|,
name|int
modifier|*
name|idx
parameter_list|)
function_decl|;
name|int
name|OCSP_ONEREQ_add1_ext_i2d
parameter_list|(
name|OCSP_ONEREQ
modifier|*
name|x
parameter_list|,
name|int
name|nid
parameter_list|,
name|void
modifier|*
name|value
parameter_list|,
name|int
name|crit
parameter_list|,
name|unsigned
name|long
name|flags
parameter_list|)
function_decl|;
name|int
name|OCSP_ONEREQ_add_ext
parameter_list|(
name|OCSP_ONEREQ
modifier|*
name|x
parameter_list|,
name|X509_EXTENSION
modifier|*
name|ex
parameter_list|,
name|int
name|loc
parameter_list|)
function_decl|;
name|int
name|OCSP_BASICRESP_get_ext_count
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|x
parameter_list|)
function_decl|;
name|int
name|OCSP_BASICRESP_get_ext_by_NID
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|x
parameter_list|,
name|int
name|nid
parameter_list|,
name|int
name|lastpos
parameter_list|)
function_decl|;
name|int
name|OCSP_BASICRESP_get_ext_by_OBJ
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|x
parameter_list|,
name|ASN1_OBJECT
modifier|*
name|obj
parameter_list|,
name|int
name|lastpos
parameter_list|)
function_decl|;
name|int
name|OCSP_BASICRESP_get_ext_by_critical
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|x
parameter_list|,
name|int
name|crit
parameter_list|,
name|int
name|lastpos
parameter_list|)
function_decl|;
name|X509_EXTENSION
modifier|*
name|OCSP_BASICRESP_get_ext
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|x
parameter_list|,
name|int
name|loc
parameter_list|)
function_decl|;
name|X509_EXTENSION
modifier|*
name|OCSP_BASICRESP_delete_ext
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|x
parameter_list|,
name|int
name|loc
parameter_list|)
function_decl|;
name|void
modifier|*
name|OCSP_BASICRESP_get1_ext_d2i
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|x
parameter_list|,
name|int
name|nid
parameter_list|,
name|int
modifier|*
name|crit
parameter_list|,
name|int
modifier|*
name|idx
parameter_list|)
function_decl|;
name|int
name|OCSP_BASICRESP_add1_ext_i2d
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|x
parameter_list|,
name|int
name|nid
parameter_list|,
name|void
modifier|*
name|value
parameter_list|,
name|int
name|crit
parameter_list|,
name|unsigned
name|long
name|flags
parameter_list|)
function_decl|;
name|int
name|OCSP_BASICRESP_add_ext
parameter_list|(
name|OCSP_BASICRESP
modifier|*
name|x
parameter_list|,
name|X509_EXTENSION
modifier|*
name|ex
parameter_list|,
name|int
name|loc
parameter_list|)
function_decl|;
name|int
name|OCSP_SINGLERESP_get_ext_count
parameter_list|(
name|OCSP_SINGLERESP
modifier|*
name|x
parameter_list|)
function_decl|;
name|int
name|OCSP_SINGLERESP_get_ext_by_NID
parameter_list|(
name|OCSP_SINGLERESP
modifier|*
name|x
parameter_list|,
name|int
name|nid
parameter_list|,
name|int
name|lastpos
parameter_list|)
function_decl|;
name|int
name|OCSP_SINGLERESP_get_ext_by_OBJ
parameter_list|(
name|OCSP_SINGLERESP
modifier|*
name|x
parameter_list|,
name|ASN1_OBJECT
modifier|*
name|obj
parameter_list|,
name|int
name|lastpos
parameter_list|)
function_decl|;
name|int
name|OCSP_SINGLERESP_get_ext_by_critical
parameter_list|(
name|OCSP_SINGLERESP
modifier|*
name|x
parameter_list|,
name|int
name|crit
parameter_list|,
name|int
name|lastpos
parameter_list|)
function_decl|;
name|X509_EXTENSION
modifier|*
name|OCSP_SINGLERESP_get_ext
parameter_list|(
name|OCSP_SINGLERESP
modifier|*
name|x
parameter_list|,
name|int
name|loc
parameter_list|)
function_decl|;
name|X509_EXTENSION
modifier|*
name|OCSP_SINGLERESP_delete_ext
parameter_list|(
name|OCSP_SINGLERESP
modifier|*
name|x
parameter_list|,
name|int
name|loc
parameter_list|)
function_decl|;
name|void
modifier|*
name|OCSP_SINGLERESP_get1_ext_d2i
parameter_list|(
name|OCSP_SINGLERESP
modifier|*
name|x
parameter_list|,
name|int
name|nid
parameter_list|,
name|int
modifier|*
name|crit
parameter_list|,
name|int
modifier|*
name|idx
parameter_list|)
function_decl|;
name|int
name|OCSP_SINGLERESP_add1_ext_i2d
parameter_list|(
name|OCSP_SINGLERESP
modifier|*
name|x
parameter_list|,
name|int
name|nid
parameter_list|,
name|void
modifier|*
name|value
parameter_list|,
name|int
name|crit
parameter_list|,
name|unsigned
name|long
name|flags
parameter_list|)
function_decl|;
name|int
name|OCSP_SINGLERESP_add_ext
parameter_list|(
name|OCSP_SINGLERESP
modifier|*
name|x
parameter_list|,
name|X509_EXTENSION
modifier|*
name|ex
parameter_list|,
name|int
name|loc
parameter_list|)
function_decl|;
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_SINGLERESP
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_CERTSTATUS
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_REVOKEDINFO
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_BASICRESP
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_RESPDATA
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_RESPID
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_RESPONSE
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_RESPBYTES
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_ONEREQ
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_CERTID
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_REQUEST
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_SIGNATURE
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_REQINFO
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_CRLID
argument_list|)
name|DECLARE_ASN1_FUNCTIONS
argument_list|(
argument|OCSP_SERVICELOC
argument_list|)
name|char
modifier|*
name|OCSP_response_status_str
parameter_list|(
name|long
name|s
parameter_list|)
function_decl|;
name|char
modifier|*
name|OCSP_cert_status_str
parameter_list|(
name|long
name|s
parameter_list|)
function_decl|;
name|char
modifier|*
name|OCSP_crl_reason_str
parameter_list|(
name|long
name|s
parameter_list|)
function_decl|;
name|int
name|OCSP_REQUEST_print
parameter_list|(
name|BIO
modifier|*
name|bp
parameter_list|,
name|OCSP_REQUEST
modifier|*
name|a
parameter_list|,
name|unsigned
name|long
name|flags
parameter_list|)
function_decl|;
name|int
name|OCSP_RESPONSE_print
parameter_list|(
name|BIO
modifier|*
name|bp
parameter_list|,
name|OCSP_RESPONSE
modifier|*
name|o
parameter_list|,
name|unsigned
name|long
name|flags
parameter_list|)
function_decl|;
name|int
name|OCSP_basic_verify
argument_list|(
name|OCSP_BASICRESP
operator|*
name|bs
argument_list|,
name|STACK_OF
argument_list|(
name|X509
argument_list|)
operator|*
name|certs
argument_list|,
name|X509_STORE
operator|*
name|st
argument_list|,
name|unsigned
name|long
name|flags
argument_list|)
decl_stmt|;
comment|/* BEGIN ERROR CODES */
comment|/* The following lines are auto generated by the script mkerr.pl. Any changes  * made after this point may be overwritten when the script is next run.  */
name|void
name|ERR_load_OCSP_strings
parameter_list|(
name|void
parameter_list|)
function_decl|;
comment|/* Error codes for the OCSP functions. */
comment|/* Function codes. */
define|#
directive|define
name|OCSP_F_ASN1_STRING_ENCODE
value|100
define|#
directive|define
name|OCSP_F_D2I_OCSP_NONCE
value|102
define|#
directive|define
name|OCSP_F_OCSP_BASIC_ADD1_STATUS
value|103
define|#
directive|define
name|OCSP_F_OCSP_BASIC_SIGN
value|104
define|#
directive|define
name|OCSP_F_OCSP_BASIC_VERIFY
value|105
define|#
directive|define
name|OCSP_F_OCSP_CERT_ID_NEW
value|101
define|#
directive|define
name|OCSP_F_OCSP_CHECK_DELEGATED
value|106
define|#
directive|define
name|OCSP_F_OCSP_CHECK_IDS
value|107
define|#
directive|define
name|OCSP_F_OCSP_CHECK_ISSUER
value|108
define|#
directive|define
name|OCSP_F_OCSP_CHECK_VALIDITY
value|115
define|#
directive|define
name|OCSP_F_OCSP_MATCH_ISSUERID
value|109
define|#
directive|define
name|OCSP_F_OCSP_PARSE_URL
value|114
define|#
directive|define
name|OCSP_F_OCSP_REQUEST_SIGN
value|110
define|#
directive|define
name|OCSP_F_OCSP_REQUEST_VERIFY
value|116
define|#
directive|define
name|OCSP_F_OCSP_RESPONSE_GET1_BASIC
value|111
define|#
directive|define
name|OCSP_F_OCSP_SENDREQ_BIO
value|112
define|#
directive|define
name|OCSP_F_REQUEST_VERIFY
value|113
comment|/* Reason codes. */
define|#
directive|define
name|OCSP_R_BAD_DATA
value|100
define|#
directive|define
name|OCSP_R_CERTIFICATE_VERIFY_ERROR
value|101
define|#
directive|define
name|OCSP_R_DIGEST_ERR
value|102
define|#
directive|define
name|OCSP_R_ERROR_IN_NEXTUPDATE_FIELD
value|122
define|#
directive|define
name|OCSP_R_ERROR_IN_THISUPDATE_FIELD
value|123
define|#
directive|define
name|OCSP_R_ERROR_PARSING_URL
value|121
define|#
directive|define
name|OCSP_R_MISSING_OCSPSIGNING_USAGE
value|103
define|#
directive|define
name|OCSP_R_NEXTUPDATE_BEFORE_THISUPDATE
value|124
define|#
directive|define
name|OCSP_R_NOT_BASIC_RESPONSE
value|104
define|#
directive|define
name|OCSP_R_NO_CERTIFICATES_IN_CHAIN
value|105
define|#
directive|define
name|OCSP_R_NO_CONTENT
value|106
define|#
directive|define
name|OCSP_R_NO_PUBLIC_KEY
value|107
define|#
directive|define
name|OCSP_R_NO_RESPONSE_DATA
value|108
define|#
directive|define
name|OCSP_R_NO_REVOKED_TIME
value|109
define|#
directive|define
name|OCSP_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE
value|110
define|#
directive|define
name|OCSP_R_REQUEST_NOT_SIGNED
value|128
define|#
directive|define
name|OCSP_R_RESPONSE_CONTAINS_NO_REVOCATION_DATA
value|111
define|#
directive|define
name|OCSP_R_ROOT_CA_NOT_TRUSTED
value|112
define|#
directive|define
name|OCSP_R_SERVER_READ_ERROR
value|113
define|#
directive|define
name|OCSP_R_SERVER_RESPONSE_ERROR
value|114
define|#
directive|define
name|OCSP_R_SERVER_RESPONSE_PARSE_ERROR
value|115
define|#
directive|define
name|OCSP_R_SERVER_WRITE_ERROR
value|116
define|#
directive|define
name|OCSP_R_SIGNATURE_FAILURE
value|117
define|#
directive|define
name|OCSP_R_SIGNER_CERTIFICATE_NOT_FOUND
value|118
define|#
directive|define
name|OCSP_R_STATUS_EXPIRED
value|125
define|#
directive|define
name|OCSP_R_STATUS_NOT_YET_VALID
value|126
define|#
directive|define
name|OCSP_R_STATUS_TOO_OLD
value|127
define|#
directive|define
name|OCSP_R_UNKNOWN_MESSAGE_DIGEST
value|119
define|#
directive|define
name|OCSP_R_UNKNOWN_NID
value|120
define|#
directive|define
name|OCSP_R_UNSUPPORTED_REQUESTORNAME_TYPE
value|129
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

