begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* crypto/dh/dh.h */
end_comment

begin_comment
comment|/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)  * All rights reserved.  *  * This package is an SSL implementation written  * by Eric Young (eay@cryptsoft.com).  * The implementation was written so as to conform with Netscapes SSL.  *   * This library is free for commercial and non-commercial use as long as  * the following conditions are aheared to.  The following conditions  * apply to all code found in this distribution, be it the RC4, RSA,  * lhash, DES, etc., code; not just the SSL code.  The SSL documentation  * included with this distribution is covered by the same copyright terms  * except that the holder is Tim Hudson (tjh@cryptsoft.com).  *   * Copyright remains Eric Young's, and as such any Copyright notices in  * the code are not to be removed.  * If this package is used in a product, Eric Young should be given attribution  * as the author of the parts of the library used.  * This can be in the form of a textual message at program startup or  * in documentation (online or textual) provided with the package.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *    "This product includes cryptographic software written by  *     Eric Young (eay@cryptsoft.com)"  *    The word 'cryptographic' can be left out if the rouines from the library  *    being used are not cryptographic related :-).  * 4. If you include any Windows specific code (or a derivative thereof) from   *    the apps directory (application code) you must include an acknowledgement:  *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"  *   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *   * The licence and distribution terms for any publically available version or  * derivative of this code cannot be changed.  i.e. this code cannot simply be  * copied and put under another distribution licence  * [including the GNU Public Licence.]  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HEADER_DH_H
end_ifndef

begin_define
define|#
directive|define
name|HEADER_DH_H
end_define

begin_include
include|#
directive|include
file|<openssl/e_os2.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|OPENSSL_NO_DH
end_ifdef

begin_error
error|#
directive|error
error|DH is disabled.
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|OPENSSL_NO_BIO
end_ifndef

begin_include
include|#
directive|include
file|<openssl/bio.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<openssl/ossl_typ.h>
end_include

begin_ifndef
ifndef|#
directive|ifndef
name|OPENSSL_NO_DEPRECATED
end_ifndef

begin_include
include|#
directive|include
file|<openssl/bn.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|OPENSSL_DH_MAX_MODULUS_BITS
end_ifndef

begin_define
define|#
directive|define
name|OPENSSL_DH_MAX_MODULUS_BITS
value|10000
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|OPENSSL_DH_FIPS_MIN_MODULUS_BITS
value|1024
end_define

begin_define
define|#
directive|define
name|DH_FLAG_CACHE_MONT_P
value|0x01
end_define

begin_define
define|#
directive|define
name|DH_FLAG_NO_EXP_CONSTTIME
value|0x02
end_define

begin_comment
comment|/* new with 0.9.7h; the built-in DH                                        * implementation now uses constant time                                        * modular exponentiation for secret exponents                                        * by default. This flag causes the                                        * faster variable sliding window method to                                        * be used for all exponents.                                        */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* Already defined in ossl_typ.h */
comment|/* typedef struct dh_st DH; */
comment|/* typedef struct dh_method DH_METHOD; */
struct|struct
name|dh_method
block|{
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
comment|/* Methods here */
name|int
function_decl|(
modifier|*
name|generate_key
function_decl|)
parameter_list|(
name|DH
modifier|*
name|dh
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|compute_key
function_decl|)
parameter_list|(
name|unsigned
name|char
modifier|*
name|key
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|pub_key
parameter_list|,
name|DH
modifier|*
name|dh
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|bn_mod_exp
function_decl|)
parameter_list|(
specifier|const
name|DH
modifier|*
name|dh
parameter_list|,
name|BIGNUM
modifier|*
name|r
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|a
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|p
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|m
parameter_list|,
name|BN_CTX
modifier|*
name|ctx
parameter_list|,
name|BN_MONT_CTX
modifier|*
name|m_ctx
parameter_list|)
function_decl|;
comment|/* Can be null */
name|int
function_decl|(
modifier|*
name|init
function_decl|)
parameter_list|(
name|DH
modifier|*
name|dh
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|finish
function_decl|)
parameter_list|(
name|DH
modifier|*
name|dh
parameter_list|)
function_decl|;
name|int
name|flags
decl_stmt|;
name|char
modifier|*
name|app_data
decl_stmt|;
comment|/* If this is non-NULL, it will be used to generate parameters */
name|int
function_decl|(
modifier|*
name|generate_params
function_decl|)
parameter_list|(
name|DH
modifier|*
name|dh
parameter_list|,
name|int
name|prime_len
parameter_list|,
name|int
name|generator
parameter_list|,
name|BN_GENCB
modifier|*
name|cb
parameter_list|)
function_decl|;
block|}
struct|;
struct|struct
name|dh_st
block|{
comment|/* This first argument is used to pick up errors when 	 * a DH is passed instead of a EVP_PKEY */
name|int
name|pad
decl_stmt|;
name|int
name|version
decl_stmt|;
name|BIGNUM
modifier|*
name|p
decl_stmt|;
name|BIGNUM
modifier|*
name|g
decl_stmt|;
name|long
name|length
decl_stmt|;
comment|/* optional */
name|BIGNUM
modifier|*
name|pub_key
decl_stmt|;
comment|/* g^x */
name|BIGNUM
modifier|*
name|priv_key
decl_stmt|;
comment|/* x */
name|int
name|flags
decl_stmt|;
name|BN_MONT_CTX
modifier|*
name|method_mont_p
decl_stmt|;
comment|/* Place holders if we want to do X9.42 DH */
name|BIGNUM
modifier|*
name|q
decl_stmt|;
name|BIGNUM
modifier|*
name|j
decl_stmt|;
name|unsigned
name|char
modifier|*
name|seed
decl_stmt|;
name|int
name|seedlen
decl_stmt|;
name|BIGNUM
modifier|*
name|counter
decl_stmt|;
name|int
name|references
decl_stmt|;
name|CRYPTO_EX_DATA
name|ex_data
decl_stmt|;
specifier|const
name|DH_METHOD
modifier|*
name|meth
decl_stmt|;
name|ENGINE
modifier|*
name|engine
decl_stmt|;
block|}
struct|;
define|#
directive|define
name|DH_GENERATOR_2
value|2
comment|/* #define DH_GENERATOR_3	3 */
define|#
directive|define
name|DH_GENERATOR_5
value|5
comment|/* DH_check error codes */
define|#
directive|define
name|DH_CHECK_P_NOT_PRIME
value|0x01
define|#
directive|define
name|DH_CHECK_P_NOT_SAFE_PRIME
value|0x02
define|#
directive|define
name|DH_UNABLE_TO_CHECK_GENERATOR
value|0x04
define|#
directive|define
name|DH_NOT_SUITABLE_GENERATOR
value|0x08
comment|/* DH_check_pub_key error codes */
define|#
directive|define
name|DH_CHECK_PUBKEY_TOO_SMALL
value|0x01
define|#
directive|define
name|DH_CHECK_PUBKEY_TOO_LARGE
value|0x02
comment|/* primes p where (p-1)/2 is prime too are called "safe"; we define    this for backward compatibility: */
define|#
directive|define
name|DH_CHECK_P_NOT_STRONG_PRIME
value|DH_CHECK_P_NOT_SAFE_PRIME
define|#
directive|define
name|DHparams_dup
parameter_list|(
name|x
parameter_list|)
value|ASN1_dup_of_const(DH,i2d_DHparams,d2i_DHparams,x)
define|#
directive|define
name|d2i_DHparams_fp
parameter_list|(
name|fp
parameter_list|,
name|x
parameter_list|)
value|(DH *)ASN1_d2i_fp((char *(*)())DH_new, \ 		(char *(*)())d2i_DHparams,(fp),(unsigned char **)(x))
define|#
directive|define
name|i2d_DHparams_fp
parameter_list|(
name|fp
parameter_list|,
name|x
parameter_list|)
value|ASN1_i2d_fp(i2d_DHparams,(fp), \ 		(unsigned char *)(x))
define|#
directive|define
name|d2i_DHparams_bio
parameter_list|(
name|bp
parameter_list|,
name|x
parameter_list|)
value|ASN1_d2i_bio_of(DH,DH_new,d2i_DHparams,bp,x)
define|#
directive|define
name|i2d_DHparams_bio
parameter_list|(
name|bp
parameter_list|,
name|x
parameter_list|)
value|ASN1_i2d_bio_of_const(DH,i2d_DHparams,bp,x)
specifier|const
name|DH_METHOD
modifier|*
name|DH_OpenSSL
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|OPENSSL_FIPS
name|DH
modifier|*
name|FIPS_dh_new
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|FIPS_dh_free
parameter_list|(
name|DH
modifier|*
name|dh
parameter_list|)
function_decl|;
endif|#
directive|endif
name|void
name|DH_set_default_method
parameter_list|(
specifier|const
name|DH_METHOD
modifier|*
name|meth
parameter_list|)
function_decl|;
specifier|const
name|DH_METHOD
modifier|*
name|DH_get_default_method
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|int
name|DH_set_method
parameter_list|(
name|DH
modifier|*
name|dh
parameter_list|,
specifier|const
name|DH_METHOD
modifier|*
name|meth
parameter_list|)
function_decl|;
name|DH
modifier|*
name|DH_new_method
parameter_list|(
name|ENGINE
modifier|*
name|engine
parameter_list|)
function_decl|;
name|DH
modifier|*
name|DH_new
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|DH_free
parameter_list|(
name|DH
modifier|*
name|dh
parameter_list|)
function_decl|;
name|int
name|DH_up_ref
parameter_list|(
name|DH
modifier|*
name|dh
parameter_list|)
function_decl|;
name|int
name|DH_size
parameter_list|(
specifier|const
name|DH
modifier|*
name|dh
parameter_list|)
function_decl|;
name|int
name|DH_get_ex_new_index
parameter_list|(
name|long
name|argl
parameter_list|,
name|void
modifier|*
name|argp
parameter_list|,
name|CRYPTO_EX_new
modifier|*
name|new_func
parameter_list|,
name|CRYPTO_EX_dup
modifier|*
name|dup_func
parameter_list|,
name|CRYPTO_EX_free
modifier|*
name|free_func
parameter_list|)
function_decl|;
name|int
name|DH_set_ex_data
parameter_list|(
name|DH
modifier|*
name|d
parameter_list|,
name|int
name|idx
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|)
function_decl|;
name|void
modifier|*
name|DH_get_ex_data
parameter_list|(
name|DH
modifier|*
name|d
parameter_list|,
name|int
name|idx
parameter_list|)
function_decl|;
comment|/* Deprecated version */
ifndef|#
directive|ifndef
name|OPENSSL_NO_DEPRECATED
name|DH
modifier|*
name|DH_generate_parameters
parameter_list|(
name|int
name|prime_len
parameter_list|,
name|int
name|generator
parameter_list|,
name|void
function_decl|(
modifier|*
name|callback
function_decl|)
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|)
parameter_list|,
name|void
modifier|*
name|cb_arg
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* !defined(OPENSSL_NO_DEPRECATED) */
comment|/* New version */
name|int
name|DH_generate_parameters_ex
parameter_list|(
name|DH
modifier|*
name|dh
parameter_list|,
name|int
name|prime_len
parameter_list|,
name|int
name|generator
parameter_list|,
name|BN_GENCB
modifier|*
name|cb
parameter_list|)
function_decl|;
name|int
name|DH_check
parameter_list|(
specifier|const
name|DH
modifier|*
name|dh
parameter_list|,
name|int
modifier|*
name|codes
parameter_list|)
function_decl|;
name|int
name|DH_check_pub_key
parameter_list|(
specifier|const
name|DH
modifier|*
name|dh
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|pub_key
parameter_list|,
name|int
modifier|*
name|codes
parameter_list|)
function_decl|;
name|int
name|DH_generate_key
parameter_list|(
name|DH
modifier|*
name|dh
parameter_list|)
function_decl|;
name|int
name|DH_compute_key
parameter_list|(
name|unsigned
name|char
modifier|*
name|key
parameter_list|,
specifier|const
name|BIGNUM
modifier|*
name|pub_key
parameter_list|,
name|DH
modifier|*
name|dh
parameter_list|)
function_decl|;
name|DH
modifier|*
name|d2i_DHparams
parameter_list|(
name|DH
modifier|*
modifier|*
name|a
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
modifier|*
name|pp
parameter_list|,
name|long
name|length
parameter_list|)
function_decl|;
name|int
name|i2d_DHparams
parameter_list|(
specifier|const
name|DH
modifier|*
name|a
parameter_list|,
name|unsigned
name|char
modifier|*
modifier|*
name|pp
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|OPENSSL_NO_FP_API
name|int
name|DHparams_print_fp
parameter_list|(
name|FILE
modifier|*
name|fp
parameter_list|,
specifier|const
name|DH
modifier|*
name|x
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_BIO
name|int
name|DHparams_print
parameter_list|(
name|BIO
modifier|*
name|bp
parameter_list|,
specifier|const
name|DH
modifier|*
name|x
parameter_list|)
function_decl|;
else|#
directive|else
name|int
name|DHparams_print
parameter_list|(
name|char
modifier|*
name|bp
parameter_list|,
specifier|const
name|DH
modifier|*
name|x
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* BEGIN ERROR CODES */
comment|/* The following lines are auto generated by the script mkerr.pl. Any changes  * made after this point may be overwritten when the script is next run.  */
name|void
name|ERR_load_DH_strings
parameter_list|(
name|void
parameter_list|)
function_decl|;
comment|/* Error codes for the DH functions. */
comment|/* Function codes. */
define|#
directive|define
name|DH_F_COMPUTE_KEY
value|102
define|#
directive|define
name|DH_F_DHPARAMS_PRINT
value|100
define|#
directive|define
name|DH_F_DHPARAMS_PRINT_FP
value|101
define|#
directive|define
name|DH_F_DH_BUILTIN_GENPARAMS
value|106
define|#
directive|define
name|DH_F_DH_COMPUTE_KEY
value|107
define|#
directive|define
name|DH_F_DH_GENERATE_KEY
value|108
define|#
directive|define
name|DH_F_DH_GENERATE_PARAMETERS
value|109
define|#
directive|define
name|DH_F_DH_NEW_METHOD
value|105
define|#
directive|define
name|DH_F_GENERATE_KEY
value|103
define|#
directive|define
name|DH_F_GENERATE_PARAMETERS
value|104
comment|/* Reason codes. */
define|#
directive|define
name|DH_R_BAD_GENERATOR
value|101
define|#
directive|define
name|DH_R_INVALID_PUBKEY
value|102
define|#
directive|define
name|DH_R_KEY_SIZE_TOO_SMALL
value|104
define|#
directive|define
name|DH_R_MODULUS_TOO_LARGE
value|103
define|#
directive|define
name|DH_R_NO_PRIVATE_VALUE
value|100
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

