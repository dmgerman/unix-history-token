begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* rsaref/rsaref.h */
end_comment

begin_comment
comment|/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)  * All rights reserved.  *  * This package is an SSL implementation written  * by Eric Young (eay@cryptsoft.com).  * The implementation was written so as to conform with Netscapes SSL.  *   * This library is free for commercial and non-commercial use as long as  * the following conditions are aheared to.  The following conditions  * apply to all code found in this distribution, be it the RC4, RSA,  * lhash, DES, etc., code; not just the SSL code.  The SSL documentation  * included with this distribution is covered by the same copyright terms  * except that the holder is Tim Hudson (tjh@cryptsoft.com).  *   * Copyright remains Eric Young's, and as such any Copyright notices in  * the code are not to be removed.  * If this package is used in a product, Eric Young should be given attribution  * as the author of the parts of the library used.  * This can be in the form of a textual message at program startup or  * in documentation (online or textual) provided with the package.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *    "This product includes cryptographic software written by  *     Eric Young (eay@cryptsoft.com)"  *    The word 'cryptographic' can be left out if the rouines from the library  *    being used are not cryptographic related :-).  * 4. If you include any Windows specific code (or a derivative thereof) from   *    the apps directory (application code) you must include an acknowledgement:  *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"  *   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *   * The licence and distribution terms for any publically available version or  * derivative of this code cannot be changed.  i.e. this code cannot simply be  * copied and put under another distribution licence  * [including the GNU Public Licence.]  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HEADER_RSAREF_H
end_ifndef

begin_define
define|#
directive|define
name|HEADER_RSAREF_H
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|NO_RSA
end_ifndef

begin_include
include|#
directive|include
file|<openssl/rsa.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* RSAeuro */
comment|/*#define  RSAref_MAX_BITS		2048*/
comment|/* RSAref */
define|#
directive|define
name|RSAref_MAX_BITS
value|1024
define|#
directive|define
name|RSAref_MIN_BITS
value|508
define|#
directive|define
name|RSAref_MAX_LEN
value|((RSAref_MAX_BITS+7)/8)
define|#
directive|define
name|RSAref_MAX_PBITS
value|(RSAref_MAX_BITS+1)/2
define|#
directive|define
name|RSAref_MAX_PLEN
value|((RSAref_MAX_PBITS+7)/8)
typedef|typedef
struct|struct
name|RSArefPublicKey_st
block|{
name|unsigned
name|int
name|bits
decl_stmt|;
name|unsigned
name|char
name|m
index|[
name|RSAref_MAX_LEN
index|]
decl_stmt|;
name|unsigned
name|char
name|e
index|[
name|RSAref_MAX_LEN
index|]
decl_stmt|;
block|}
name|RSArefPublicKey
typedef|;
typedef|typedef
struct|struct
name|RSArefPrivateKey_st
block|{
name|unsigned
name|int
name|bits
decl_stmt|;
name|unsigned
name|char
name|m
index|[
name|RSAref_MAX_LEN
index|]
decl_stmt|;
name|unsigned
name|char
name|e
index|[
name|RSAref_MAX_LEN
index|]
decl_stmt|;
name|unsigned
name|char
name|d
index|[
name|RSAref_MAX_LEN
index|]
decl_stmt|;
name|unsigned
name|char
name|prime
index|[
literal|2
index|]
index|[
name|RSAref_MAX_PLEN
index|]
decl_stmt|;
comment|/* p& q */
name|unsigned
name|char
name|pexp
index|[
literal|2
index|]
index|[
name|RSAref_MAX_PLEN
index|]
decl_stmt|;
comment|/* dmp1& dmq1 */
name|unsigned
name|char
name|coef
index|[
name|RSAref_MAX_PLEN
index|]
decl_stmt|;
comment|/* iqmp */
block|}
name|RSArefPrivateKey
typedef|;
typedef|typedef
struct|struct
name|RSARandomState_st
block|{
name|unsigned
name|int
name|needed
decl_stmt|;
name|unsigned
name|char
name|state
index|[
literal|16
index|]
decl_stmt|;
name|unsigned
name|int
name|outputnum
decl_stmt|;
name|unsigned
name|char
name|output
index|[
literal|16
index|]
decl_stmt|;
block|}
name|RSARandomState
typedef|;
define|#
directive|define
name|RE_CONTENT_ENCODING
value|0x0400
define|#
directive|define
name|RE_DATA
value|0x0401
define|#
directive|define
name|RE_DIGEST_ALGORITHM
value|0x0402
define|#
directive|define
name|RE_ENCODING
value|0x0403
define|#
directive|define
name|RE_KEY
value|0x0404
define|#
directive|define
name|RE_KEY_ENCODING
value|0x0405
define|#
directive|define
name|RE_LEN
value|0x0406
define|#
directive|define
name|RE_MODULUS_LEN
value|0x0407
define|#
directive|define
name|RE_NEED_RANDOM
value|0x0408
define|#
directive|define
name|RE_PRIVATE_KEY
value|0x0409
define|#
directive|define
name|RE_PUBLIC_KEY
value|0x040a
define|#
directive|define
name|RE_SIGNATURE
value|0x040b
define|#
directive|define
name|RE_SIGNATURE_ENCODING
value|0x040c
define|#
directive|define
name|RE_ENCRYPTION_ALGORITHM
value|0x040d
name|int
name|RSAPrivateDecrypt
parameter_list|(
name|unsigned
name|char
modifier|*
name|to
parameter_list|,
name|int
modifier|*
name|outlen
parameter_list|,
name|unsigned
name|char
modifier|*
name|from
parameter_list|,
name|int
name|len
parameter_list|,
name|RSArefPrivateKey
modifier|*
name|RSAkey
parameter_list|)
function_decl|;
name|int
name|RSAPrivateEncrypt
parameter_list|(
name|unsigned
name|char
modifier|*
name|to
parameter_list|,
name|int
modifier|*
name|outlen
parameter_list|,
name|unsigned
name|char
modifier|*
name|from
parameter_list|,
name|int
name|len
parameter_list|,
name|RSArefPrivateKey
modifier|*
name|RSAkey
parameter_list|)
function_decl|;
name|int
name|RSAPublicDecrypt
parameter_list|(
name|unsigned
name|char
modifier|*
name|to
parameter_list|,
name|int
modifier|*
name|outlen
parameter_list|,
name|unsigned
name|char
modifier|*
name|from
parameter_list|,
name|int
name|len
parameter_list|,
name|RSArefPublicKey
modifier|*
name|RSAkey
parameter_list|)
function_decl|;
name|int
name|RSAPublicEncrypt
parameter_list|(
name|unsigned
name|char
modifier|*
name|to
parameter_list|,
name|int
modifier|*
name|outlen
parameter_list|,
name|unsigned
name|char
modifier|*
name|from
parameter_list|,
name|int
name|len
parameter_list|,
name|RSArefPublicKey
modifier|*
name|RSAkey
parameter_list|,
name|RSARandomState
modifier|*
name|rnd
parameter_list|)
function_decl|;
name|int
name|R_RandomInit
parameter_list|(
name|RSARandomState
modifier|*
name|rnd
parameter_list|)
function_decl|;
name|int
name|R_GetRandomBytesNeeded
parameter_list|(
name|unsigned
name|int
modifier|*
parameter_list|,
name|RSARandomState
modifier|*
name|rnd
parameter_list|)
function_decl|;
name|int
name|R_RandomUpdate
parameter_list|(
name|RSARandomState
modifier|*
name|rnd
parameter_list|,
name|unsigned
name|char
modifier|*
name|data
parameter_list|,
name|unsigned
name|int
name|n
parameter_list|)
function_decl|;
name|int
name|R_RandomFinal
parameter_list|(
name|RSARandomState
modifier|*
name|rnd
parameter_list|)
function_decl|;
name|RSA_METHOD
modifier|*
name|RSA_PKCS1_RSAref
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* BEGIN ERROR CODES */
comment|/* The following lines are auto generated by the script mkerr.pl. Any changes  * made after this point may be overwritten when the script is next run.  */
name|void
name|ERR_load_RSAREF_strings
parameter_list|(
name|void
parameter_list|)
function_decl|;
comment|/* Error codes for the RSAREF functions. */
comment|/* Function codes. */
define|#
directive|define
name|RSAREF_F_BN_REF_MOD_EXP
value|100
define|#
directive|define
name|RSAREF_F_RSAREF_BN2BIN
value|101
define|#
directive|define
name|RSAREF_F_RSA_BN2BIN
value|102
define|#
directive|define
name|RSAREF_F_RSA_PRIVATE_DECRYPT
value|103
define|#
directive|define
name|RSAREF_F_RSA_PRIVATE_ENCRYPT
value|104
define|#
directive|define
name|RSAREF_F_RSA_PUBLIC_DECRYPT
value|105
define|#
directive|define
name|RSAREF_F_RSA_PUBLIC_ENCRYPT
value|106
define|#
directive|define
name|RSAREF_F_RSA_REF_BN2BIN
value|107
define|#
directive|define
name|RSAREF_F_RSA_REF_MOD_EXP
value|108
define|#
directive|define
name|RSAREF_F_RSA_REF_PRIVATE_DECRYPT
value|109
define|#
directive|define
name|RSAREF_F_RSA_REF_PRIVATE_ENCRYPT
value|110
define|#
directive|define
name|RSAREF_F_RSA_REF_PUBLIC_DECRYPT
value|111
define|#
directive|define
name|RSAREF_F_RSA_REF_PUBLIC_ENCRYPT
value|112
comment|/* Reason codes. */
define|#
directive|define
name|RSAREF_R_CONTENT_ENCODING
value|0x0400
define|#
directive|define
name|RSAREF_R_DATA
value|0x0401
define|#
directive|define
name|RSAREF_R_DIGEST_ALGORITHM
value|0x0402
define|#
directive|define
name|RSAREF_R_ENCODING
value|0x0403
define|#
directive|define
name|RSAREF_R_ENCRYPTION_ALGORITHM
value|0x040d
define|#
directive|define
name|RSAREF_R_KEY
value|0x0404
define|#
directive|define
name|RSAREF_R_KEY_ENCODING
value|0x0405
define|#
directive|define
name|RSAREF_R_LEN
value|0x0406
define|#
directive|define
name|RSAREF_R_MODULUS_LEN
value|0x0407
define|#
directive|define
name|RSAREF_R_NEED_RANDOM
value|0x0408
define|#
directive|define
name|RSAREF_R_PRIVATE_KEY
value|0x0409
define|#
directive|define
name|RSAREF_R_PUBLIC_KEY
value|0x040a
define|#
directive|define
name|RSAREF_R_SIGNATURE
value|0x040b
define|#
directive|define
name|RSAREF_R_SIGNATURE_ENCODING
value|0x040c
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

