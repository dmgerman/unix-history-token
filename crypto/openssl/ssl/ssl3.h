begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* ssl/ssl3.h */
end_comment

begin_comment
comment|/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)  * All rights reserved.  *  * This package is an SSL implementation written  * by Eric Young (eay@cryptsoft.com).  * The implementation was written so as to conform with Netscapes SSL.  *  * This library is free for commercial and non-commercial use as long as  * the following conditions are aheared to.  The following conditions  * apply to all code found in this distribution, be it the RC4, RSA,  * lhash, DES, etc., code; not just the SSL code.  The SSL documentation  * included with this distribution is covered by the same copyright terms  * except that the holder is Tim Hudson (tjh@cryptsoft.com).  *  * Copyright remains Eric Young's, and as such any Copyright notices in  * the code are not to be removed.  * If this package is used in a product, Eric Young should be given attribution  * as the author of the parts of the library used.  * This can be in the form of a textual message at program startup or  * in documentation (online or textual) provided with the package.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *    "This product includes cryptographic software written by  *     Eric Young (eay@cryptsoft.com)"  *    The word 'cryptographic' can be left out if the rouines from the library  *    being used are not cryptographic related :-).  * 4. If you include any Windows specific code (or a derivative thereof) from  *    the apps directory (application code) you must include an acknowledgement:  *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"  *  * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * The licence and distribution terms for any publically available version or  * derivative of this code cannot be changed.  i.e. this code cannot simply be  * copied and put under another distribution licence  * [including the GNU Public Licence.]  */
end_comment

begin_comment
comment|/* ====================================================================  * Copyright (c) 1998-2002 The OpenSSL Project.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in  *    the documentation and/or other materials provided with the  *    distribution.  *  * 3. All advertising materials mentioning features or use of this  *    software must display the following acknowledgment:  *    "This product includes software developed by the OpenSSL Project  *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"  *  * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to  *    endorse or promote products derived from this software without  *    prior written permission. For written permission, please contact  *    openssl-core@openssl.org.  *  * 5. Products derived from this software may not be called "OpenSSL"  *    nor may "OpenSSL" appear in their names without prior written  *    permission of the OpenSSL Project.  *  * 6. Redistributions of any form whatsoever must retain the following  *    acknowledgment:  *    "This product includes software developed by the OpenSSL Project  *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"  *  * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY  * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR  * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED  * OF THE POSSIBILITY OF SUCH DAMAGE.  * ====================================================================  *  * This product includes cryptographic software written by Eric Young  * (eay@cryptsoft.com).  This product includes software written by Tim  * Hudson (tjh@cryptsoft.com).  *  */
end_comment

begin_comment
comment|/* ====================================================================  * Copyright 2002 Sun Microsystems, Inc. ALL RIGHTS RESERVED.  * ECC cipher suite support in OpenSSL originally developed by  * SUN MICROSYSTEMS, INC., and contributed to the OpenSSL project.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|HEADER_SSL3_H
end_ifndef

begin_define
define|#
directive|define
name|HEADER_SSL3_H
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|OPENSSL_NO_COMP
end_ifndef

begin_include
include|#
directive|include
file|<openssl/comp.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<openssl/buffer.h>
end_include

begin_include
include|#
directive|include
file|<openssl/evp.h>
end_include

begin_include
include|#
directive|include
file|<openssl/ssl.h>
end_include

begin_include
include|#
directive|include
file|<openssl/pq_compat.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/*  * Signalling cipher suite value from RFC 5746  * (TLS_EMPTY_RENEGOTIATION_INFO_SCSV)  */
define|#
directive|define
name|SSL3_CK_SCSV
value|0x030000FF
comment|/*  * Signalling cipher suite value from draft-ietf-tls-downgrade-scsv-00  * (TLS_FALLBACK_SCSV)  */
define|#
directive|define
name|SSL3_CK_FALLBACK_SCSV
value|0x03005600
define|#
directive|define
name|SSL3_CK_RSA_NULL_MD5
value|0x03000001
define|#
directive|define
name|SSL3_CK_RSA_NULL_SHA
value|0x03000002
define|#
directive|define
name|SSL3_CK_RSA_RC4_40_MD5
value|0x03000003
define|#
directive|define
name|SSL3_CK_RSA_RC4_128_MD5
value|0x03000004
define|#
directive|define
name|SSL3_CK_RSA_RC4_128_SHA
value|0x03000005
define|#
directive|define
name|SSL3_CK_RSA_RC2_40_MD5
value|0x03000006
define|#
directive|define
name|SSL3_CK_RSA_IDEA_128_SHA
value|0x03000007
define|#
directive|define
name|SSL3_CK_RSA_DES_40_CBC_SHA
value|0x03000008
define|#
directive|define
name|SSL3_CK_RSA_DES_64_CBC_SHA
value|0x03000009
define|#
directive|define
name|SSL3_CK_RSA_DES_192_CBC3_SHA
value|0x0300000A
define|#
directive|define
name|SSL3_CK_DH_DSS_DES_40_CBC_SHA
value|0x0300000B
define|#
directive|define
name|SSL3_CK_DH_DSS_DES_64_CBC_SHA
value|0x0300000C
define|#
directive|define
name|SSL3_CK_DH_DSS_DES_192_CBC3_SHA
value|0x0300000D
define|#
directive|define
name|SSL3_CK_DH_RSA_DES_40_CBC_SHA
value|0x0300000E
define|#
directive|define
name|SSL3_CK_DH_RSA_DES_64_CBC_SHA
value|0x0300000F
define|#
directive|define
name|SSL3_CK_DH_RSA_DES_192_CBC3_SHA
value|0x03000010
define|#
directive|define
name|SSL3_CK_EDH_DSS_DES_40_CBC_SHA
value|0x03000011
define|#
directive|define
name|SSL3_CK_EDH_DSS_DES_64_CBC_SHA
value|0x03000012
define|#
directive|define
name|SSL3_CK_EDH_DSS_DES_192_CBC3_SHA
value|0x03000013
define|#
directive|define
name|SSL3_CK_EDH_RSA_DES_40_CBC_SHA
value|0x03000014
define|#
directive|define
name|SSL3_CK_EDH_RSA_DES_64_CBC_SHA
value|0x03000015
define|#
directive|define
name|SSL3_CK_EDH_RSA_DES_192_CBC3_SHA
value|0x03000016
define|#
directive|define
name|SSL3_CK_ADH_RC4_40_MD5
value|0x03000017
define|#
directive|define
name|SSL3_CK_ADH_RC4_128_MD5
value|0x03000018
define|#
directive|define
name|SSL3_CK_ADH_DES_40_CBC_SHA
value|0x03000019
define|#
directive|define
name|SSL3_CK_ADH_DES_64_CBC_SHA
value|0x0300001A
define|#
directive|define
name|SSL3_CK_ADH_DES_192_CBC_SHA
value|0x0300001B
define|#
directive|define
name|SSL3_CK_FZA_DMS_NULL_SHA
value|0x0300001C
define|#
directive|define
name|SSL3_CK_FZA_DMS_FZA_SHA
value|0x0300001D
if|#
directive|if
literal|0
comment|/* Because it clashes with KRB5, is never                                  * used any more, and is safe to remove                                  * according to David Hopwood                                  *<david.hopwood@zetnet.co.uk> of the                                  * ietf-tls list */
define|#
directive|define
name|SSL3_CK_FZA_DMS_RC4_SHA
value|0x0300001E
endif|#
directive|endif
comment|/*  * VRS Additional Kerberos5 entries  */
define|#
directive|define
name|SSL3_CK_KRB5_DES_64_CBC_SHA
value|0x0300001E
define|#
directive|define
name|SSL3_CK_KRB5_DES_192_CBC3_SHA
value|0x0300001F
define|#
directive|define
name|SSL3_CK_KRB5_RC4_128_SHA
value|0x03000020
define|#
directive|define
name|SSL3_CK_KRB5_IDEA_128_CBC_SHA
value|0x03000021
define|#
directive|define
name|SSL3_CK_KRB5_DES_64_CBC_MD5
value|0x03000022
define|#
directive|define
name|SSL3_CK_KRB5_DES_192_CBC3_MD5
value|0x03000023
define|#
directive|define
name|SSL3_CK_KRB5_RC4_128_MD5
value|0x03000024
define|#
directive|define
name|SSL3_CK_KRB5_IDEA_128_CBC_MD5
value|0x03000025
define|#
directive|define
name|SSL3_CK_KRB5_DES_40_CBC_SHA
value|0x03000026
define|#
directive|define
name|SSL3_CK_KRB5_RC2_40_CBC_SHA
value|0x03000027
define|#
directive|define
name|SSL3_CK_KRB5_RC4_40_SHA
value|0x03000028
define|#
directive|define
name|SSL3_CK_KRB5_DES_40_CBC_MD5
value|0x03000029
define|#
directive|define
name|SSL3_CK_KRB5_RC2_40_CBC_MD5
value|0x0300002A
define|#
directive|define
name|SSL3_CK_KRB5_RC4_40_MD5
value|0x0300002B
define|#
directive|define
name|SSL3_TXT_RSA_NULL_MD5
value|"NULL-MD5"
define|#
directive|define
name|SSL3_TXT_RSA_NULL_SHA
value|"NULL-SHA"
define|#
directive|define
name|SSL3_TXT_RSA_RC4_40_MD5
value|"EXP-RC4-MD5"
define|#
directive|define
name|SSL3_TXT_RSA_RC4_128_MD5
value|"RC4-MD5"
define|#
directive|define
name|SSL3_TXT_RSA_RC4_128_SHA
value|"RC4-SHA"
define|#
directive|define
name|SSL3_TXT_RSA_RC2_40_MD5
value|"EXP-RC2-CBC-MD5"
define|#
directive|define
name|SSL3_TXT_RSA_IDEA_128_SHA
value|"IDEA-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_RSA_DES_40_CBC_SHA
value|"EXP-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_RSA_DES_64_CBC_SHA
value|"DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_RSA_DES_192_CBC3_SHA
value|"DES-CBC3-SHA"
define|#
directive|define
name|SSL3_TXT_DH_DSS_DES_40_CBC_SHA
value|"EXP-DH-DSS-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_DH_DSS_DES_64_CBC_SHA
value|"DH-DSS-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_DH_DSS_DES_192_CBC3_SHA
value|"DH-DSS-DES-CBC3-SHA"
define|#
directive|define
name|SSL3_TXT_DH_RSA_DES_40_CBC_SHA
value|"EXP-DH-RSA-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_DH_RSA_DES_64_CBC_SHA
value|"DH-RSA-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_DH_RSA_DES_192_CBC3_SHA
value|"DH-RSA-DES-CBC3-SHA"
define|#
directive|define
name|SSL3_TXT_EDH_DSS_DES_40_CBC_SHA
value|"EXP-EDH-DSS-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_EDH_DSS_DES_64_CBC_SHA
value|"EDH-DSS-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_EDH_DSS_DES_192_CBC3_SHA
value|"EDH-DSS-DES-CBC3-SHA"
define|#
directive|define
name|SSL3_TXT_EDH_RSA_DES_40_CBC_SHA
value|"EXP-EDH-RSA-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_EDH_RSA_DES_64_CBC_SHA
value|"EDH-RSA-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_EDH_RSA_DES_192_CBC3_SHA
value|"EDH-RSA-DES-CBC3-SHA"
define|#
directive|define
name|SSL3_TXT_ADH_RC4_40_MD5
value|"EXP-ADH-RC4-MD5"
define|#
directive|define
name|SSL3_TXT_ADH_RC4_128_MD5
value|"ADH-RC4-MD5"
define|#
directive|define
name|SSL3_TXT_ADH_DES_40_CBC_SHA
value|"EXP-ADH-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_ADH_DES_64_CBC_SHA
value|"ADH-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_ADH_DES_192_CBC_SHA
value|"ADH-DES-CBC3-SHA"
define|#
directive|define
name|SSL3_TXT_FZA_DMS_NULL_SHA
value|"FZA-NULL-SHA"
define|#
directive|define
name|SSL3_TXT_FZA_DMS_FZA_SHA
value|"FZA-FZA-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_FZA_DMS_RC4_SHA
value|"FZA-RC4-SHA"
define|#
directive|define
name|SSL3_TXT_KRB5_DES_64_CBC_SHA
value|"KRB5-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_KRB5_DES_192_CBC3_SHA
value|"KRB5-DES-CBC3-SHA"
define|#
directive|define
name|SSL3_TXT_KRB5_RC4_128_SHA
value|"KRB5-RC4-SHA"
define|#
directive|define
name|SSL3_TXT_KRB5_IDEA_128_CBC_SHA
value|"KRB5-IDEA-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_KRB5_DES_64_CBC_MD5
value|"KRB5-DES-CBC-MD5"
define|#
directive|define
name|SSL3_TXT_KRB5_DES_192_CBC3_MD5
value|"KRB5-DES-CBC3-MD5"
define|#
directive|define
name|SSL3_TXT_KRB5_RC4_128_MD5
value|"KRB5-RC4-MD5"
define|#
directive|define
name|SSL3_TXT_KRB5_IDEA_128_CBC_MD5
value|"KRB5-IDEA-CBC-MD5"
define|#
directive|define
name|SSL3_TXT_KRB5_DES_40_CBC_SHA
value|"EXP-KRB5-DES-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_KRB5_RC2_40_CBC_SHA
value|"EXP-KRB5-RC2-CBC-SHA"
define|#
directive|define
name|SSL3_TXT_KRB5_RC4_40_SHA
value|"EXP-KRB5-RC4-SHA"
define|#
directive|define
name|SSL3_TXT_KRB5_DES_40_CBC_MD5
value|"EXP-KRB5-DES-CBC-MD5"
define|#
directive|define
name|SSL3_TXT_KRB5_RC2_40_CBC_MD5
value|"EXP-KRB5-RC2-CBC-MD5"
define|#
directive|define
name|SSL3_TXT_KRB5_RC4_40_MD5
value|"EXP-KRB5-RC4-MD5"
define|#
directive|define
name|SSL3_SSL_SESSION_ID_LENGTH
value|32
define|#
directive|define
name|SSL3_MAX_SSL_SESSION_ID_LENGTH
value|32
define|#
directive|define
name|SSL3_MASTER_SECRET_SIZE
value|48
define|#
directive|define
name|SSL3_RANDOM_SIZE
value|32
define|#
directive|define
name|SSL3_SESSION_ID_SIZE
value|32
define|#
directive|define
name|SSL3_RT_HEADER_LENGTH
value|5
comment|/* Due to MS stuffing up, this can change.... */
if|#
directive|if
name|defined
argument_list|(
name|OPENSSL_SYS_WIN16
argument_list|)
operator|||
expr|\
operator|(
name|defined
argument_list|(
name|OPENSSL_SYS_MSDOS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|OPENSSL_SYS_WIN32
argument_list|)
operator|)
define|#
directive|define
name|SSL3_RT_MAX_EXTRA
value|(14000)
else|#
directive|else
define|#
directive|define
name|SSL3_RT_MAX_EXTRA
value|(16384)
endif|#
directive|endif
define|#
directive|define
name|SSL3_RT_MAX_PLAIN_LENGTH
value|16384
ifdef|#
directive|ifdef
name|OPENSSL_NO_COMP
define|#
directive|define
name|SSL3_RT_MAX_COMPRESSED_LENGTH
value|SSL3_RT_MAX_PLAIN_LENGTH
else|#
directive|else
define|#
directive|define
name|SSL3_RT_MAX_COMPRESSED_LENGTH
value|(1024+SSL3_RT_MAX_PLAIN_LENGTH)
endif|#
directive|endif
define|#
directive|define
name|SSL3_RT_MAX_ENCRYPTED_LENGTH
value|(1024+SSL3_RT_MAX_COMPRESSED_LENGTH)
define|#
directive|define
name|SSL3_RT_MAX_PACKET_SIZE
value|(SSL3_RT_MAX_ENCRYPTED_LENGTH+SSL3_RT_HEADER_LENGTH)
define|#
directive|define
name|SSL3_RT_MAX_DATA_SIZE
value|(1024*1024)
define|#
directive|define
name|SSL3_MD_CLIENT_FINISHED_CONST
value|"\x43\x4C\x4E\x54"
define|#
directive|define
name|SSL3_MD_SERVER_FINISHED_CONST
value|"\x53\x52\x56\x52"
define|#
directive|define
name|SSL3_VERSION
value|0x0300
define|#
directive|define
name|SSL3_VERSION_MAJOR
value|0x03
define|#
directive|define
name|SSL3_VERSION_MINOR
value|0x00
define|#
directive|define
name|SSL3_RT_CHANGE_CIPHER_SPEC
value|20
define|#
directive|define
name|SSL3_RT_ALERT
value|21
define|#
directive|define
name|SSL3_RT_HANDSHAKE
value|22
define|#
directive|define
name|SSL3_RT_APPLICATION_DATA
value|23
define|#
directive|define
name|SSL3_AL_WARNING
value|1
define|#
directive|define
name|SSL3_AL_FATAL
value|2
define|#
directive|define
name|SSL3_AD_CLOSE_NOTIFY
value|0
define|#
directive|define
name|SSL3_AD_UNEXPECTED_MESSAGE
value|10
comment|/* fatal */
define|#
directive|define
name|SSL3_AD_BAD_RECORD_MAC
value|20
comment|/* fatal */
define|#
directive|define
name|SSL3_AD_DECOMPRESSION_FAILURE
value|30
comment|/* fatal */
define|#
directive|define
name|SSL3_AD_HANDSHAKE_FAILURE
value|40
comment|/* fatal */
define|#
directive|define
name|SSL3_AD_NO_CERTIFICATE
value|41
define|#
directive|define
name|SSL3_AD_BAD_CERTIFICATE
value|42
define|#
directive|define
name|SSL3_AD_UNSUPPORTED_CERTIFICATE
value|43
define|#
directive|define
name|SSL3_AD_CERTIFICATE_REVOKED
value|44
define|#
directive|define
name|SSL3_AD_CERTIFICATE_EXPIRED
value|45
define|#
directive|define
name|SSL3_AD_CERTIFICATE_UNKNOWN
value|46
define|#
directive|define
name|SSL3_AD_ILLEGAL_PARAMETER
value|47
comment|/* fatal */
typedef|typedef
struct|struct
name|ssl3_record_st
block|{
comment|/* type of record */
comment|/*      * r      */
name|int
name|type
decl_stmt|;
comment|/* How many bytes available */
comment|/*      * rw      */
name|unsigned
name|int
name|length
decl_stmt|;
comment|/* read/write offset into 'buf' */
comment|/*      * r      */
name|unsigned
name|int
name|off
decl_stmt|;
comment|/* pointer to the record data */
comment|/*      * rw      */
name|unsigned
name|char
modifier|*
name|data
decl_stmt|;
comment|/* where the decode bytes are */
comment|/*      * rw      */
name|unsigned
name|char
modifier|*
name|input
decl_stmt|;
comment|/* only used with decompression - malloc()ed */
comment|/*      * r      */
name|unsigned
name|char
modifier|*
name|comp
decl_stmt|;
comment|/* epoch number, needed by DTLS1 */
comment|/*      * r      */
name|unsigned
name|long
name|epoch
decl_stmt|;
comment|/* sequence number, needed by DTLS1 */
comment|/*      * r      */
name|PQ_64BIT
name|seq_num
decl_stmt|;
block|}
name|SSL3_RECORD
typedef|;
typedef|typedef
struct|struct
name|ssl3_buffer_st
block|{
comment|/* at least SSL3_RT_MAX_PACKET_SIZE bytes, see ssl3_setup_buffers() */
name|unsigned
name|char
modifier|*
name|buf
decl_stmt|;
comment|/* buffer size */
name|size_t
name|len
decl_stmt|;
comment|/* where to 'copy from' */
name|int
name|offset
decl_stmt|;
comment|/* how many bytes left */
name|int
name|left
decl_stmt|;
block|}
name|SSL3_BUFFER
typedef|;
define|#
directive|define
name|SSL3_CT_RSA_SIGN
value|1
define|#
directive|define
name|SSL3_CT_DSS_SIGN
value|2
define|#
directive|define
name|SSL3_CT_RSA_FIXED_DH
value|3
define|#
directive|define
name|SSL3_CT_DSS_FIXED_DH
value|4
define|#
directive|define
name|SSL3_CT_RSA_EPHEMERAL_DH
value|5
define|#
directive|define
name|SSL3_CT_DSS_EPHEMERAL_DH
value|6
define|#
directive|define
name|SSL3_CT_FORTEZZA_DMS
value|20
comment|/*  * SSL3_CT_NUMBER is used to size arrays and it must be large enough to  * contain all of the cert types defined either for SSLv3 and TLSv1.  */
define|#
directive|define
name|SSL3_CT_NUMBER
value|7
define|#
directive|define
name|SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS
value|0x0001
define|#
directive|define
name|SSL3_FLAGS_DELAY_CLIENT_FINISHED
value|0x0002
define|#
directive|define
name|SSL3_FLAGS_POP_BUFFER
value|0x0004
define|#
directive|define
name|TLS1_FLAGS_TLS_PADDING_BUG
value|0x0008
define|#
directive|define
name|SSL3_FLAGS_CCS_OK
value|0x0080
comment|/*  * SSL3_FLAGS_SGC_RESTART_DONE is set when we restart a handshake because of  * MS SGC and so prevents us from restarting the handshake in a loop. It's  * reset on a renegotiation, so effectively limits the client to one restart  * per negotiation. This limits the possibility of a DDoS attack where the  * client handshakes in a loop using SGC to restart. Servers which permit  * renegotiation can still be effected, but we can't prevent that.  */
define|#
directive|define
name|SSL3_FLAGS_SGC_RESTART_DONE
value|0x0040
typedef|typedef
struct|struct
name|ssl3_state_st
block|{
name|long
name|flags
decl_stmt|;
name|int
name|delay_buf_pop_ret
decl_stmt|;
name|unsigned
name|char
name|read_sequence
index|[
literal|8
index|]
decl_stmt|;
name|unsigned
name|char
name|read_mac_secret
index|[
name|EVP_MAX_MD_SIZE
index|]
decl_stmt|;
name|unsigned
name|char
name|write_sequence
index|[
literal|8
index|]
decl_stmt|;
name|unsigned
name|char
name|write_mac_secret
index|[
name|EVP_MAX_MD_SIZE
index|]
decl_stmt|;
name|unsigned
name|char
name|server_random
index|[
name|SSL3_RANDOM_SIZE
index|]
decl_stmt|;
name|unsigned
name|char
name|client_random
index|[
name|SSL3_RANDOM_SIZE
index|]
decl_stmt|;
comment|/* flags for countermeasure against known-IV weakness */
name|int
name|need_empty_fragments
decl_stmt|;
name|int
name|empty_fragment_done
decl_stmt|;
name|SSL3_BUFFER
name|rbuf
decl_stmt|;
comment|/* read IO goes into here */
name|SSL3_BUFFER
name|wbuf
decl_stmt|;
comment|/* write IO goes into here */
name|SSL3_RECORD
name|rrec
decl_stmt|;
comment|/* each decoded record goes in here */
name|SSL3_RECORD
name|wrec
decl_stmt|;
comment|/* goes out from here */
comment|/*      * storage for Alert/Handshake protocol data received but not yet      * processed by ssl3_read_bytes:      */
name|unsigned
name|char
name|alert_fragment
index|[
literal|2
index|]
decl_stmt|;
name|unsigned
name|int
name|alert_fragment_len
decl_stmt|;
name|unsigned
name|char
name|handshake_fragment
index|[
literal|4
index|]
decl_stmt|;
name|unsigned
name|int
name|handshake_fragment_len
decl_stmt|;
comment|/* partial write - check the numbers match */
name|unsigned
name|int
name|wnum
decl_stmt|;
comment|/* number of bytes sent so far */
name|int
name|wpend_tot
decl_stmt|;
comment|/* number bytes written */
name|int
name|wpend_type
decl_stmt|;
name|int
name|wpend_ret
decl_stmt|;
comment|/* number of bytes submitted */
specifier|const
name|unsigned
name|char
modifier|*
name|wpend_buf
decl_stmt|;
comment|/* used during startup, digest all incoming/outgoing packets */
name|EVP_MD_CTX
name|finish_dgst1
decl_stmt|;
name|EVP_MD_CTX
name|finish_dgst2
decl_stmt|;
comment|/*      * this is set whenerver we see a change_cipher_spec message come in when      * we are not looking for one      */
name|int
name|change_cipher_spec
decl_stmt|;
name|int
name|warn_alert
decl_stmt|;
name|int
name|fatal_alert
decl_stmt|;
comment|/*      * we allow one fatal and one warning alert to be outstanding, send close      * alert via the warning alert      */
name|int
name|alert_dispatch
decl_stmt|;
name|unsigned
name|char
name|send_alert
index|[
literal|2
index|]
decl_stmt|;
comment|/*      * This flag is set when we should renegotiate ASAP, basically when there      * is no more data in the read or write buffers      */
name|int
name|renegotiate
decl_stmt|;
name|int
name|total_renegotiations
decl_stmt|;
name|int
name|num_renegotiations
decl_stmt|;
name|int
name|in_read_app_data
decl_stmt|;
struct|struct
block|{
comment|/* actually only needs to be 16+20 */
name|unsigned
name|char
name|cert_verify_md
index|[
name|EVP_MAX_MD_SIZE
operator|*
literal|2
index|]
decl_stmt|;
comment|/* actually only need to be 16+20 for SSLv3 and 12 for TLS */
name|unsigned
name|char
name|finish_md
index|[
name|EVP_MAX_MD_SIZE
operator|*
literal|2
index|]
decl_stmt|;
name|int
name|finish_md_len
decl_stmt|;
name|unsigned
name|char
name|peer_finish_md
index|[
name|EVP_MAX_MD_SIZE
operator|*
literal|2
index|]
decl_stmt|;
name|int
name|peer_finish_md_len
decl_stmt|;
name|unsigned
name|long
name|message_size
decl_stmt|;
name|int
name|message_type
decl_stmt|;
comment|/* used to hold the new cipher we are going to use */
name|SSL_CIPHER
modifier|*
name|new_cipher
decl_stmt|;
ifndef|#
directive|ifndef
name|OPENSSL_NO_DH
name|DH
modifier|*
name|dh
decl_stmt|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|OPENSSL_NO_ECDH
name|EC_KEY
modifier|*
name|ecdh
decl_stmt|;
comment|/* holds short lived ECDH key */
endif|#
directive|endif
comment|/* used when SSL_ST_FLUSH_DATA is entered */
name|int
name|next_state
decl_stmt|;
name|int
name|reuse_message
decl_stmt|;
comment|/* used for certificate requests */
name|int
name|cert_req
decl_stmt|;
name|int
name|ctype_num
decl_stmt|;
name|char
name|ctype
index|[
name|SSL3_CT_NUMBER
index|]
decl_stmt|;
name|STACK_OF
argument_list|(
name|X509_NAME
argument_list|)
operator|*
name|ca_names
expr_stmt|;
name|int
name|use_rsa_tmp
decl_stmt|;
name|int
name|key_block_length
decl_stmt|;
name|unsigned
name|char
modifier|*
name|key_block
decl_stmt|;
specifier|const
name|EVP_CIPHER
modifier|*
name|new_sym_enc
decl_stmt|;
specifier|const
name|EVP_MD
modifier|*
name|new_hash
decl_stmt|;
ifndef|#
directive|ifndef
name|OPENSSL_NO_COMP
specifier|const
name|SSL_COMP
modifier|*
name|new_compression
decl_stmt|;
else|#
directive|else
name|char
modifier|*
name|new_compression
decl_stmt|;
endif|#
directive|endif
name|int
name|cert_request
decl_stmt|;
block|}
name|tmp
struct|;
comment|/* Connection binding to prevent renegotiation attacks */
name|unsigned
name|char
name|previous_client_finished
index|[
name|EVP_MAX_MD_SIZE
index|]
decl_stmt|;
name|unsigned
name|char
name|previous_client_finished_len
decl_stmt|;
name|unsigned
name|char
name|previous_server_finished
index|[
name|EVP_MAX_MD_SIZE
index|]
decl_stmt|;
name|unsigned
name|char
name|previous_server_finished_len
decl_stmt|;
name|int
name|send_connection_binding
decl_stmt|;
comment|/* TODOEKR */
ifndef|#
directive|ifndef
name|OPENSSL_NO_TLSEXT
ifndef|#
directive|ifndef
name|OPENSSL_NO_EC
comment|/*      * This is set to true if we believe that this is a version of Safari      * running on OS X 10.6 or newer. We wish to know this because Safari on      * 10.8 .. 10.8.3 has broken ECDHE-ECDSA support.      */
name|char
name|is_probably_safari
decl_stmt|;
endif|#
directive|endif
comment|/* !OPENSSL_NO_EC */
endif|#
directive|endif
comment|/* !OPENSSL_NO_TLSEXT */
block|}
name|SSL3_STATE
typedef|;
comment|/* SSLv3 */
comment|/*  * client  */
comment|/* extra state */
define|#
directive|define
name|SSL3_ST_CW_FLUSH
value|(0x100|SSL_ST_CONNECT)
comment|/* write to server */
define|#
directive|define
name|SSL3_ST_CW_CLNT_HELLO_A
value|(0x110|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CW_CLNT_HELLO_B
value|(0x111|SSL_ST_CONNECT)
comment|/* read from server */
define|#
directive|define
name|SSL3_ST_CR_SRVR_HELLO_A
value|(0x120|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_SRVR_HELLO_B
value|(0x121|SSL_ST_CONNECT)
define|#
directive|define
name|DTLS1_ST_CR_HELLO_VERIFY_REQUEST_A
value|(0x126|SSL_ST_CONNECT)
define|#
directive|define
name|DTLS1_ST_CR_HELLO_VERIFY_REQUEST_B
value|(0x127|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_CERT_A
value|(0x130|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_CERT_B
value|(0x131|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_KEY_EXCH_A
value|(0x140|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_KEY_EXCH_B
value|(0x141|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_CERT_REQ_A
value|(0x150|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_CERT_REQ_B
value|(0x151|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_SRVR_DONE_A
value|(0x160|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_SRVR_DONE_B
value|(0x161|SSL_ST_CONNECT)
comment|/* write to server */
define|#
directive|define
name|SSL3_ST_CW_CERT_A
value|(0x170|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CW_CERT_B
value|(0x171|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CW_CERT_C
value|(0x172|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CW_CERT_D
value|(0x173|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CW_KEY_EXCH_A
value|(0x180|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CW_KEY_EXCH_B
value|(0x181|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CW_CERT_VRFY_A
value|(0x190|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CW_CERT_VRFY_B
value|(0x191|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CW_CHANGE_A
value|(0x1A0|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CW_CHANGE_B
value|(0x1A1|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CW_FINISHED_A
value|(0x1B0|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CW_FINISHED_B
value|(0x1B1|SSL_ST_CONNECT)
comment|/* read from server */
define|#
directive|define
name|SSL3_ST_CR_CHANGE_A
value|(0x1C0|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_CHANGE_B
value|(0x1C1|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_FINISHED_A
value|(0x1D0|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_FINISHED_B
value|(0x1D1|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_SESSION_TICKET_A
value|(0x1E0|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_SESSION_TICKET_B
value|(0x1E1|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_CERT_STATUS_A
value|(0x1F0|SSL_ST_CONNECT)
define|#
directive|define
name|SSL3_ST_CR_CERT_STATUS_B
value|(0x1F1|SSL_ST_CONNECT)
comment|/* server */
comment|/* extra state */
define|#
directive|define
name|SSL3_ST_SW_FLUSH
value|(0x100|SSL_ST_ACCEPT)
comment|/* read from client */
comment|/* Do not change the number values, they do matter */
define|#
directive|define
name|SSL3_ST_SR_CLNT_HELLO_A
value|(0x110|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SR_CLNT_HELLO_B
value|(0x111|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SR_CLNT_HELLO_C
value|(0x112|SSL_ST_ACCEPT)
comment|/* write to client */
define|#
directive|define
name|DTLS1_ST_SW_HELLO_VERIFY_REQUEST_A
value|(0x113|SSL_ST_ACCEPT)
define|#
directive|define
name|DTLS1_ST_SW_HELLO_VERIFY_REQUEST_B
value|(0x114|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_HELLO_REQ_A
value|(0x120|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_HELLO_REQ_B
value|(0x121|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_HELLO_REQ_C
value|(0x122|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_SRVR_HELLO_A
value|(0x130|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_SRVR_HELLO_B
value|(0x131|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_CERT_A
value|(0x140|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_CERT_B
value|(0x141|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_KEY_EXCH_A
value|(0x150|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_KEY_EXCH_B
value|(0x151|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_CERT_REQ_A
value|(0x160|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_CERT_REQ_B
value|(0x161|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_SRVR_DONE_A
value|(0x170|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_SRVR_DONE_B
value|(0x171|SSL_ST_ACCEPT)
comment|/* read from client */
define|#
directive|define
name|SSL3_ST_SR_CERT_A
value|(0x180|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SR_CERT_B
value|(0x181|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SR_KEY_EXCH_A
value|(0x190|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SR_KEY_EXCH_B
value|(0x191|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SR_CERT_VRFY_A
value|(0x1A0|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SR_CERT_VRFY_B
value|(0x1A1|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SR_CHANGE_A
value|(0x1B0|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SR_CHANGE_B
value|(0x1B1|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SR_FINISHED_A
value|(0x1C0|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SR_FINISHED_B
value|(0x1C1|SSL_ST_ACCEPT)
comment|/* write to client */
define|#
directive|define
name|SSL3_ST_SW_CHANGE_A
value|(0x1D0|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_CHANGE_B
value|(0x1D1|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_FINISHED_A
value|(0x1E0|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_FINISHED_B
value|(0x1E1|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_SESSION_TICKET_A
value|(0x1F0|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_SESSION_TICKET_B
value|(0x1F1|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_CERT_STATUS_A
value|(0x200|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_ST_SW_CERT_STATUS_B
value|(0x201|SSL_ST_ACCEPT)
define|#
directive|define
name|SSL3_MT_HELLO_REQUEST
value|0
define|#
directive|define
name|SSL3_MT_CLIENT_HELLO
value|1
define|#
directive|define
name|SSL3_MT_SERVER_HELLO
value|2
define|#
directive|define
name|SSL3_MT_NEWSESSION_TICKET
value|4
define|#
directive|define
name|SSL3_MT_CERTIFICATE
value|11
define|#
directive|define
name|SSL3_MT_SERVER_KEY_EXCHANGE
value|12
define|#
directive|define
name|SSL3_MT_CERTIFICATE_REQUEST
value|13
define|#
directive|define
name|SSL3_MT_SERVER_DONE
value|14
define|#
directive|define
name|SSL3_MT_CERTIFICATE_VERIFY
value|15
define|#
directive|define
name|SSL3_MT_CLIENT_KEY_EXCHANGE
value|16
define|#
directive|define
name|SSL3_MT_FINISHED
value|20
define|#
directive|define
name|SSL3_MT_CERTIFICATE_STATUS
value|22
define|#
directive|define
name|DTLS1_MT_HELLO_VERIFY_REQUEST
value|3
define|#
directive|define
name|SSL3_MT_CCS
value|1
comment|/* These are used when changing over to a new cipher */
define|#
directive|define
name|SSL3_CC_READ
value|0x01
define|#
directive|define
name|SSL3_CC_WRITE
value|0x02
define|#
directive|define
name|SSL3_CC_CLIENT
value|0x10
define|#
directive|define
name|SSL3_CC_SERVER
value|0x20
define|#
directive|define
name|SSL3_CHANGE_CIPHER_CLIENT_WRITE
value|(SSL3_CC_CLIENT|SSL3_CC_WRITE)
define|#
directive|define
name|SSL3_CHANGE_CIPHER_SERVER_READ
value|(SSL3_CC_SERVER|SSL3_CC_READ)
define|#
directive|define
name|SSL3_CHANGE_CIPHER_CLIENT_READ
value|(SSL3_CC_CLIENT|SSL3_CC_READ)
define|#
directive|define
name|SSL3_CHANGE_CIPHER_SERVER_WRITE
value|(SSL3_CC_SERVER|SSL3_CC_WRITE)
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

