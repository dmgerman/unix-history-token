begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/**********************************************************************/
end_comment

begin_comment
comment|/*                                                                    */
end_comment

begin_comment
comment|/*  Prototypes of the CCA verbs used by the 4758 CCA openssl driver   */
end_comment

begin_comment
comment|/*                                                                    */
end_comment

begin_comment
comment|/*  Maurice Gittens<maurice@gittens.nl>                              */
end_comment

begin_comment
comment|/*                                                                    */
end_comment

begin_comment
comment|/**********************************************************************/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__HW_4758_CCA__
end_ifndef

begin_define
define|#
directive|define
name|__HW_4758_CCA__
end_define

begin_comment
comment|/*  *  Only WIN32 support for now  */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|WIN32
argument_list|)
end_if

begin_define
define|#
directive|define
name|CCA_LIB_NAME
value|"CSUNSAPI"
end_define

begin_define
define|#
directive|define
name|CSNDPKX
value|"CSNDPKX_32"
end_define

begin_define
define|#
directive|define
name|CSNDKRR
value|"CSNDKRR_32"
end_define

begin_define
define|#
directive|define
name|CSNDPKE
value|"CSNDPKE_32"
end_define

begin_define
define|#
directive|define
name|CSNDPKD
value|"CSNDPKD_32"
end_define

begin_define
define|#
directive|define
name|CSNDDSV
value|"CSNDDSV_32"
end_define

begin_define
define|#
directive|define
name|CSNDDSG
value|"CSNDDSG_32"
end_define

begin_define
define|#
directive|define
name|CSNBRNG
value|"CSNBRNG_32"
end_define

begin_define
define|#
directive|define
name|SECURITYAPI
value|__stdcall
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/*      * Fixme!! Find out the values of these constants for other platforms.      */
end_comment

begin_define
define|#
directive|define
name|CCA_LIB_NAME
value|"CSUNSAPI"
end_define

begin_define
define|#
directive|define
name|CSNDPKX
value|"CSNDPKX"
end_define

begin_define
define|#
directive|define
name|CSNDKRR
value|"CSNDKRR"
end_define

begin_define
define|#
directive|define
name|CSNDPKE
value|"CSNDPKE"
end_define

begin_define
define|#
directive|define
name|CSNDPKD
value|"CSNDPKD"
end_define

begin_define
define|#
directive|define
name|CSNDDSV
value|"CSNDDSV"
end_define

begin_define
define|#
directive|define
name|CSNDDSG
value|"CSNDDSG"
end_define

begin_define
define|#
directive|define
name|CSNBRNG
value|"CSNBRNG"
end_define

begin_define
define|#
directive|define
name|SECURITYAPI
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * security API prototypes  */
end_comment

begin_comment
comment|/* PKA Key Record Read */
end_comment

begin_typedef
typedef|typedef
name|void
function_decl|(
name|SECURITYAPI
modifier|*
name|F_KEYRECORDREAD
function_decl|)
parameter_list|(
name|long
modifier|*
name|return_code
parameter_list|,
name|long
modifier|*
name|reason_code
parameter_list|,
name|long
modifier|*
name|exit_data_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|exit_data
parameter_list|,
name|long
modifier|*
name|rule_array_count
parameter_list|,
name|unsigned
name|char
modifier|*
name|rule_array
parameter_list|,
name|unsigned
name|char
modifier|*
name|key_label
parameter_list|,
name|long
modifier|*
name|key_token_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|key_token
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/* Random Number Generate */
end_comment

begin_typedef
typedef|typedef
name|void
function_decl|(
name|SECURITYAPI
modifier|*
name|F_RANDOMNUMBERGENERATE
function_decl|)
parameter_list|(
name|long
modifier|*
name|return_code
parameter_list|,
name|long
modifier|*
name|reason_code
parameter_list|,
name|long
modifier|*
name|exit_data_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|exit_data
parameter_list|,
name|unsigned
name|char
modifier|*
name|form
parameter_list|,
name|unsigned
name|char
modifier|*
name|random_number
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/* Digital Signature Generate */
end_comment

begin_typedef
typedef|typedef
name|void
function_decl|(
name|SECURITYAPI
modifier|*
name|F_DIGITALSIGNATUREGENERATE
function_decl|)
parameter_list|(
name|long
modifier|*
name|return_code
parameter_list|,
name|long
modifier|*
name|reason_code
parameter_list|,
name|long
modifier|*
name|exit_data_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|exit_data
parameter_list|,
name|long
modifier|*
name|rule_array_count
parameter_list|,
name|unsigned
name|char
modifier|*
name|rule_array
parameter_list|,
name|long
modifier|*
name|PKA_private_key_id_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|PKA_private_key_id
parameter_list|,
name|long
modifier|*
name|hash_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|hash
parameter_list|,
name|long
modifier|*
name|signature_field_length
parameter_list|,
name|long
modifier|*
name|signature_bit_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|signature_field
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/* Digital Signature Verify */
end_comment

begin_typedef
typedef|typedef
name|void
function_decl|(
name|SECURITYAPI
modifier|*
name|F_DIGITALSIGNATUREVERIFY
function_decl|)
parameter_list|(
name|long
modifier|*
name|return_code
parameter_list|,
name|long
modifier|*
name|reason_code
parameter_list|,
name|long
modifier|*
name|exit_data_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|exit_data
parameter_list|,
name|long
modifier|*
name|rule_array_count
parameter_list|,
name|unsigned
name|char
modifier|*
name|rule_array
parameter_list|,
name|long
modifier|*
name|PKA_public_key_id_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|PKA_public_key_id
parameter_list|,
name|long
modifier|*
name|hash_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|hash
parameter_list|,
name|long
modifier|*
name|signature_field_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|signature_field
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/* PKA Public Key Extract */
end_comment

begin_typedef
typedef|typedef
name|void
function_decl|(
name|SECURITYAPI
modifier|*
name|F_PUBLICKEYEXTRACT
function_decl|)
parameter_list|(
name|long
modifier|*
name|return_code
parameter_list|,
name|long
modifier|*
name|reason_code
parameter_list|,
name|long
modifier|*
name|exit_data_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|exit_data
parameter_list|,
name|long
modifier|*
name|rule_array_count
parameter_list|,
name|unsigned
name|char
modifier|*
name|rule_array
parameter_list|,
name|long
modifier|*
name|source_key_identifier_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|source_key_identifier
parameter_list|,
name|long
modifier|*
name|target_key_token_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|target_key_token
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/* PKA Encrypt */
end_comment

begin_typedef
typedef|typedef
name|void
function_decl|(
name|SECURITYAPI
modifier|*
name|F_PKAENCRYPT
function_decl|)
parameter_list|(
name|long
modifier|*
name|return_code
parameter_list|,
name|long
modifier|*
name|reason_code
parameter_list|,
name|long
modifier|*
name|exit_data_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|exit_data
parameter_list|,
name|long
modifier|*
name|rule_array_count
parameter_list|,
name|unsigned
name|char
modifier|*
name|rule_array
parameter_list|,
name|long
modifier|*
name|key_value_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|key_value
parameter_list|,
name|long
modifier|*
name|data_struct_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|data_struct
parameter_list|,
name|long
modifier|*
name|RSA_public_key_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|RSA_public_key
parameter_list|,
name|long
modifier|*
name|RSA_encipher_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|RSA_encipher
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/* PKA Decrypt */
end_comment

begin_typedef
typedef|typedef
name|void
function_decl|(
name|SECURITYAPI
modifier|*
name|F_PKADECRYPT
function_decl|)
parameter_list|(
name|long
modifier|*
name|return_code
parameter_list|,
name|long
modifier|*
name|reason_code
parameter_list|,
name|long
modifier|*
name|exit_data_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|exit_data
parameter_list|,
name|long
modifier|*
name|rule_array_count
parameter_list|,
name|unsigned
name|char
modifier|*
name|rule_array
parameter_list|,
name|long
modifier|*
name|enciphered_key_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|enciphered_key
parameter_list|,
name|long
modifier|*
name|data_struct_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|data_struct
parameter_list|,
name|long
modifier|*
name|RSA_private_key_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|RSA_private_key
parameter_list|,
name|long
modifier|*
name|key_value_length
parameter_list|,
name|unsigned
name|char
modifier|*
name|key_value
parameter_list|)
function_decl|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

end_unit

