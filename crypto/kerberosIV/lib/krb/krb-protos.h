begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1997, 1998, 1999 Kungliga Tekniska HÃ¶gskolan  * (Royal Institute of Technology, Stockholm, Sweden).   * All rights reserved.   *  * Redistribution and use in source and binary forms, with or without   * modification, are permitted provided that the following conditions   * are met:   *  * 1. Redistributions of source code must retain the above copyright   *    notice, this list of conditions and the following disclaimer.   *  * 2. Redistributions in binary form must reproduce the above copyright   *    notice, this list of conditions and the following disclaimer in the   *    documentation and/or other materials provided with the distribution.   *  * 3. Neither the name of the Institute nor the names of its contributors   *    may be used to endorse or promote products derived from this software   *    without specific prior written permission.   *  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF   * SUCH DAMAGE.   */
end_comment

begin_comment
comment|/* $Id: krb-protos.h,v 1.24.2.1 2000/06/23 03:32:04 assar Exp $ */
end_comment

begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__krb_protos_h__
end_ifndef

begin_define
define|#
directive|define
name|__krb_protos_h__
end_define

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__STDC__
argument_list|)
operator|||
name|defined
argument_list|(
name|_MSC_VER
argument_list|)
end_if

begin_include
include|#
directive|include
file|<stdarg.h>
end_include

begin_ifndef
ifndef|#
directive|ifndef
name|__P
end_ifndef

begin_define
define|#
directive|define
name|__P
parameter_list|(
name|x
parameter_list|)
value|x
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_else
else|#
directive|else
end_else

begin_ifndef
ifndef|#
directive|ifndef
name|__P
end_ifndef

begin_define
define|#
directive|define
name|__P
parameter_list|(
name|x
parameter_list|)
value|()
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|__STDC__
end_ifdef

begin_struct_decl
struct_decl|struct
name|in_addr
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|sockaddr_in
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|timeval
struct_decl|;
end_struct_decl

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|KRB_LIB_FUNCTION
end_ifndef

begin_if
if|#
directive|if
name|defined
argument_list|(
name|__BORLANDC__
argument_list|)
end_if

begin_define
define|#
directive|define
name|KRB_LIB_FUNCTION
end_define

begin_comment
comment|/* not-ready-definition-yet */
end_comment

begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|_MSC_VER
argument_list|)
end_elif

begin_define
define|#
directive|define
name|KRB_LIB_FUNCTION
end_define

begin_comment
comment|/* not-ready-definition-yet2 */
end_comment

begin_else
else|#
directive|else
end_else

begin_define
define|#
directive|define
name|KRB_LIB_FUNCTION
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|void
name|KRB_LIB_FUNCTION
name|afs_string_to_key
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|str
operator|,
specifier|const
name|char
operator|*
name|cell
operator|,
name|des_cblock
operator|*
name|key
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|create_ciph
name|__P
argument_list|(
operator|(
name|KTEXT
name|c
operator|,
name|unsigned
name|char
operator|*
name|session
operator|,
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|u_int32_t
name|life
operator|,
name|int
name|kvno
operator|,
name|KTEXT
name|tkt
operator|,
name|u_int32_t
name|kdc_time
operator|,
name|des_cblock
operator|*
name|key
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|cr_err_reply
name|__P
argument_list|(
operator|(
name|KTEXT
name|pkt
operator|,
name|char
operator|*
name|pname
operator|,
name|char
operator|*
name|pinst
operator|,
name|char
operator|*
name|prealm
operator|,
name|u_int32_t
name|time_ws
operator|,
name|u_int32_t
name|e
operator|,
name|char
operator|*
name|e_string
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|decomp_ticket
name|__P
argument_list|(
operator|(
name|KTEXT
name|tkt
operator|,
name|unsigned
name|char
operator|*
name|flags
operator|,
name|char
operator|*
name|pname
operator|,
name|char
operator|*
name|pinstance
operator|,
name|char
operator|*
name|prealm
operator|,
name|u_int32_t
operator|*
name|paddress
operator|,
name|unsigned
name|char
operator|*
name|session
operator|,
name|int
operator|*
name|life
operator|,
name|u_int32_t
operator|*
name|time_sec
operator|,
name|char
operator|*
name|sname
operator|,
name|char
operator|*
name|sinstance
operator|,
name|des_cblock
operator|*
name|key
operator|,
name|des_key_schedule
name|schedule
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|dest_tkt
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|get_ad_tkt
name|__P
argument_list|(
operator|(
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|sinstance
operator|,
name|char
operator|*
name|realm
operator|,
name|int
name|lifetime
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|getst
name|__P
argument_list|(
operator|(
name|int
name|fd
operator|,
name|char
operator|*
name|s
operator|,
name|int
name|n
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|in_tkt
name|__P
argument_list|(
operator|(
name|char
operator|*
name|pname
operator|,
name|char
operator|*
name|pinst
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|k_get_all_addrs
name|__P
argument_list|(
operator|(
expr|struct
name|in_addr
operator|*
operator|*
name|l
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|k_gethostname
name|__P
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|int
name|namelen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|k_getportbyname
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|service
operator|,
specifier|const
name|char
operator|*
name|proto
operator|,
name|int
name|default_port
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|k_getsockinst
name|__P
argument_list|(
operator|(
name|int
name|fd
operator|,
name|char
operator|*
name|inst
operator|,
name|size_t
name|inst_size
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|k_isinst
name|__P
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|k_isname
name|__P
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|k_isrealm
name|__P
argument_list|(
operator|(
name|char
operator|*
name|s
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|tm
modifier|*
name|KRB_LIB_FUNCTION
name|k_localtime
name|__P
argument_list|(
operator|(
name|u_int32_t
operator|*
name|tp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|kname_parse
name|__P
argument_list|(
operator|(
name|char
operator|*
name|np
operator|,
name|char
operator|*
name|ip
operator|,
name|char
operator|*
name|rp
operator|,
name|char
operator|*
name|fullname
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_atime_to_life
name|__P
argument_list|(
operator|(
name|char
operator|*
name|atime
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_check_auth
name|__P
argument_list|(
operator|(
name|KTEXT
name|packet
operator|,
name|u_int32_t
name|checksum
operator|,
name|MSG_DAT
operator|*
name|msg_data
operator|,
name|des_cblock
operator|*
name|session
operator|,
name|des_key_schedule
name|schedule
operator|,
expr|struct
name|sockaddr_in
operator|*
name|laddr
operator|,
expr|struct
name|sockaddr_in
operator|*
name|faddr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_check_tm
name|__P
argument_list|(
operator|(
expr|struct
name|tm
name|tm
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|KTEXT
name|KRB_LIB_FUNCTION
name|krb_create_death_packet
name|__P
argument_list|(
operator|(
name|char
operator|*
name|a_name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_create_ticket
name|__P
argument_list|(
operator|(
name|KTEXT
name|tkt
operator|,
name|unsigned
name|char
name|flags
operator|,
name|char
operator|*
name|pname
operator|,
name|char
operator|*
name|pinstance
operator|,
name|char
operator|*
name|prealm
operator|,
name|int32_t
name|paddress
operator|,
name|void
operator|*
name|session
operator|,
name|int16_t
name|life
operator|,
name|int32_t
name|time_sec
operator|,
name|char
operator|*
name|sname
operator|,
name|char
operator|*
name|sinstance
operator|,
name|des_cblock
operator|*
name|key
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_decode_as_rep
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|user
operator|,
name|char
operator|*
name|instance
operator|,
comment|/* INOUT parameter */
specifier|const
name|char
operator|*
name|realm
operator|,
specifier|const
name|char
operator|*
name|service
operator|,
specifier|const
name|char
operator|*
name|sinstance
operator|,
name|key_proc_t
name|key_proc
operator|,
name|decrypt_proc_t
name|decrypt_proc
operator|,
specifier|const
name|void
operator|*
name|arg
operator|,
name|KTEXT
name|as_rep
operator|,
name|CREDENTIALS
operator|*
name|cred
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_disable_debug
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_enable_debug
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_equiv
name|__P
argument_list|(
operator|(
name|u_int32_t
name|a
operator|,
name|u_int32_t
name|b
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_address
name|__P
argument_list|(
operator|(
name|void
operator|*
name|from
operator|,
name|u_int32_t
operator|*
name|to
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_admhst
name|__P
argument_list|(
operator|(
name|char
operator|*
name|host
operator|,
name|char
operator|*
name|realm
operator|,
name|int
name|nth
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_config_bool
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|variable
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|const
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_get_config_string
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|variable
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_cred
name|__P
argument_list|(
operator|(
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|CREDENTIALS
operator|*
name|c
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_default_principal
name|__P
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_get_default_realm
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|const
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_get_default_tkt_root
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|const
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_get_default_keyfile
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|const
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_get_err_text
name|__P
argument_list|(
operator|(
name|int
name|code
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|krb_host
modifier|*
name|KRB_LIB_FUNCTION
name|krb_get_host
name|__P
argument_list|(
operator|(
name|int
name|nth
operator|,
specifier|const
name|char
operator|*
name|realm
operator|,
name|int
name|admin
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_in_tkt
name|__P
argument_list|(
operator|(
name|char
operator|*
name|user
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|sinstance
operator|,
name|int
name|life
operator|,
name|key_proc_t
name|key_proc
operator|,
name|decrypt_proc_t
name|decrypt_proc
operator|,
name|void
operator|*
name|arg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_int
name|__P
argument_list|(
operator|(
name|void
operator|*
name|f
operator|,
name|u_int32_t
operator|*
name|to
operator|,
name|int
name|size
operator|,
name|int
name|lsb
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_kdc_time_diff
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_krbconf
name|__P
argument_list|(
operator|(
name|int
name|num
operator|,
name|char
operator|*
name|buf
operator|,
name|size_t
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_krbextra
name|__P
argument_list|(
operator|(
name|int
name|num
operator|,
name|char
operator|*
name|buf
operator|,
name|size_t
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_krbhst
name|__P
argument_list|(
operator|(
name|char
operator|*
name|host
operator|,
name|char
operator|*
name|realm
operator|,
name|int
name|nth
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_krbrealms
name|__P
argument_list|(
operator|(
name|int
name|num
operator|,
name|char
operator|*
name|buf
operator|,
name|size_t
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_lrealm
name|__P
argument_list|(
operator|(
name|char
operator|*
name|r
operator|,
name|int
name|n
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_nir
name|__P
argument_list|(
operator|(
name|void
operator|*
name|from
operator|,
name|char
operator|*
name|name
operator|,
name|size_t
name|name_len
operator|,
name|char
operator|*
name|instance
operator|,
name|size_t
name|instance_len
operator|,
name|char
operator|*
name|realm
operator|,
name|size_t
name|realm_len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_get_phost
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|alias
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_pw_in_tkt
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|user
operator|,
specifier|const
name|char
operator|*
name|instance
operator|,
specifier|const
name|char
operator|*
name|realm
operator|,
specifier|const
name|char
operator|*
name|service
operator|,
specifier|const
name|char
operator|*
name|sinstance
operator|,
name|int
name|life
operator|,
specifier|const
name|char
operator|*
name|password
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_pw_in_tkt2
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|user
operator|,
specifier|const
name|char
operator|*
name|instance
operator|,
specifier|const
name|char
operator|*
name|realm
operator|,
specifier|const
name|char
operator|*
name|service
operator|,
specifier|const
name|char
operator|*
name|sinstance
operator|,
name|int
name|life
operator|,
specifier|const
name|char
operator|*
name|password
operator|,
name|des_cblock
operator|*
name|key
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_string
name|__P
argument_list|(
operator|(
name|void
operator|*
name|from
operator|,
name|char
operator|*
name|to
operator|,
name|size_t
name|to_size
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_svc_in_tkt
name|__P
argument_list|(
operator|(
name|char
operator|*
name|user
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|sinstance
operator|,
name|int
name|life
operator|,
name|char
operator|*
name|srvtab
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_tf_fullname
name|__P
argument_list|(
operator|(
name|char
operator|*
name|ticket_file
operator|,
name|char
operator|*
name|name
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_get_tf_realm
name|__P
argument_list|(
operator|(
name|char
operator|*
name|ticket_file
operator|,
name|char
operator|*
name|realm
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|KRB_LIB_FUNCTION
name|krb_kdctimeofday
name|__P
argument_list|(
operator|(
expr|struct
name|timeval
operator|*
name|tv
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_kntoln
name|__P
argument_list|(
operator|(
name|AUTH_DAT
operator|*
name|ad
operator|,
name|char
operator|*
name|lname
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_kuserok
name|__P
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|char
operator|*
name|luser
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_life_to_atime
name|__P
argument_list|(
operator|(
name|int
name|life
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|u_int32_t
name|KRB_LIB_FUNCTION
name|krb_life_to_time
name|__P
argument_list|(
operator|(
name|u_int32_t
name|start
operator|,
name|int
name|life_
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_lsb_antinet_ulong_cmp
name|__P
argument_list|(
operator|(
name|u_int32_t
name|x
operator|,
name|u_int32_t
name|y
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_lsb_antinet_ushort_cmp
name|__P
argument_list|(
operator|(
name|u_int16_t
name|x
operator|,
name|u_int16_t
name|y
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_mk_as_req
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|user
operator|,
specifier|const
name|char
operator|*
name|instance
operator|,
specifier|const
name|char
operator|*
name|realm
operator|,
specifier|const
name|char
operator|*
name|service
operator|,
specifier|const
name|char
operator|*
name|sinstance
operator|,
name|int
name|life
operator|,
name|KTEXT
name|cip
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_mk_auth
name|__P
argument_list|(
operator|(
name|int32_t
name|options
operator|,
name|KTEXT
name|ticket
operator|,
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|u_int32_t
name|checksum
operator|,
name|char
operator|*
name|version
operator|,
name|KTEXT
name|buf
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int32_t
name|KRB_LIB_FUNCTION
name|krb_mk_err
name|__P
argument_list|(
operator|(
name|u_char
operator|*
name|p
operator|,
name|int32_t
name|e
operator|,
name|char
operator|*
name|e_string
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int32_t
name|KRB_LIB_FUNCTION
name|krb_mk_priv
name|__P
argument_list|(
operator|(
name|void
operator|*
name|in
operator|,
name|void
operator|*
name|out
operator|,
name|u_int32_t
name|length
operator|,
name|des_key_schedule
name|schedule
operator|,
name|des_cblock
operator|*
name|key
operator|,
expr|struct
name|sockaddr_in
operator|*
name|sender
operator|,
expr|struct
name|sockaddr_in
operator|*
name|receiver
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_mk_req
name|__P
argument_list|(
operator|(
name|KTEXT
name|authent
operator|,
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|int32_t
name|checksum
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int32_t
name|KRB_LIB_FUNCTION
name|krb_mk_safe
name|__P
argument_list|(
operator|(
name|void
operator|*
name|in
operator|,
name|void
operator|*
name|out
operator|,
name|u_int32_t
name|length
operator|,
name|des_cblock
operator|*
name|key
operator|,
expr|struct
name|sockaddr_in
operator|*
name|sender
operator|,
expr|struct
name|sockaddr_in
operator|*
name|receiver
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_net_read
name|__P
argument_list|(
operator|(
name|int
name|fd
operator|,
name|void
operator|*
name|v
operator|,
name|size_t
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_net_write
name|__P
argument_list|(
operator|(
name|int
name|fd
operator|,
specifier|const
name|void
operator|*
name|v
operator|,
name|size_t
name|len
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_parse_name
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|fullname
operator|,
name|krb_principal
operator|*
name|principal
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_put_address
name|__P
argument_list|(
operator|(
name|u_int32_t
name|addr
operator|,
name|void
operator|*
name|to
operator|,
name|size_t
name|rem
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_put_int
name|__P
argument_list|(
operator|(
name|u_int32_t
name|from
operator|,
name|void
operator|*
name|to
operator|,
name|size_t
name|rem
operator|,
name|int
name|size
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_put_nir
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|name
operator|,
specifier|const
name|char
operator|*
name|instance
operator|,
specifier|const
name|char
operator|*
name|realm
operator|,
name|void
operator|*
name|to
operator|,
name|size_t
name|rem
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_put_string
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|from
operator|,
name|void
operator|*
name|to
operator|,
name|size_t
name|rem
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_rd_err
name|__P
argument_list|(
operator|(
name|u_char
operator|*
name|in
operator|,
name|u_int32_t
name|in_length
operator|,
name|int32_t
operator|*
name|code
operator|,
name|MSG_DAT
operator|*
name|m_data
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int32_t
name|KRB_LIB_FUNCTION
name|krb_rd_priv
name|__P
argument_list|(
operator|(
name|void
operator|*
name|in
operator|,
name|u_int32_t
name|in_length
operator|,
name|des_key_schedule
name|schedule
operator|,
name|des_cblock
operator|*
name|key
operator|,
expr|struct
name|sockaddr_in
operator|*
name|sender
operator|,
expr|struct
name|sockaddr_in
operator|*
name|receiver
operator|,
name|MSG_DAT
operator|*
name|m_data
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_rd_req
name|__P
argument_list|(
operator|(
name|KTEXT
name|authent
operator|,
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|instance
operator|,
name|int32_t
name|from_addr
operator|,
name|AUTH_DAT
operator|*
name|ad
operator|,
name|char
operator|*
name|fn
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int32_t
name|KRB_LIB_FUNCTION
name|krb_rd_safe
name|__P
argument_list|(
operator|(
name|void
operator|*
name|in
operator|,
name|u_int32_t
name|in_length
operator|,
name|des_cblock
operator|*
name|key
operator|,
expr|struct
name|sockaddr_in
operator|*
name|sender
operator|,
expr|struct
name|sockaddr_in
operator|*
name|receiver
operator|,
name|MSG_DAT
operator|*
name|m_data
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_realm_parse
name|__P
argument_list|(
operator|(
name|char
operator|*
name|realm
operator|,
name|int
name|length
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_realmofhost
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|host
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_recvauth
name|__P
argument_list|(
operator|(
name|int32_t
name|options
operator|,
name|int
name|fd
operator|,
name|KTEXT
name|ticket
operator|,
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|instance
operator|,
expr|struct
name|sockaddr_in
operator|*
name|faddr
operator|,
expr|struct
name|sockaddr_in
operator|*
name|laddr
operator|,
name|AUTH_DAT
operator|*
name|kdata
operator|,
name|char
operator|*
name|filename
operator|,
name|des_key_schedule
name|schedule
operator|,
name|char
operator|*
name|version
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_sendauth
name|__P
argument_list|(
operator|(
name|int32_t
name|options
operator|,
name|int
name|fd
operator|,
name|KTEXT
name|ticket
operator|,
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|u_int32_t
name|checksum
operator|,
name|MSG_DAT
operator|*
name|msg_data
operator|,
name|CREDENTIALS
operator|*
name|cred
operator|,
name|des_key_schedule
name|schedule
operator|,
expr|struct
name|sockaddr_in
operator|*
name|laddr
operator|,
expr|struct
name|sockaddr_in
operator|*
name|faddr
operator|,
name|char
operator|*
name|version
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|KRB_LIB_FUNCTION
name|krb_set_kdc_time_diff
name|__P
argument_list|(
operator|(
name|int
name|diff
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_set_key
name|__P
argument_list|(
operator|(
name|void
operator|*
name|key
operator|,
name|int
name|cvt
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_set_lifetime
name|__P
argument_list|(
operator|(
name|int
name|newval
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|KRB_LIB_FUNCTION
name|krb_set_tkt_string
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|val
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|const
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_stime
name|__P
argument_list|(
operator|(
name|time_t
operator|*
name|t
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_time_to_life
name|__P
argument_list|(
operator|(
name|u_int32_t
name|start
operator|,
name|u_int32_t
name|end
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_unparse_name
name|__P
argument_list|(
operator|(
name|krb_principal
operator|*
name|pr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_unparse_name_long
name|__P
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_unparse_name_long_r
name|__P
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|char
operator|*
name|fullname
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|krb_unparse_name_r
name|__P
argument_list|(
operator|(
name|krb_principal
operator|*
name|pr
operator|,
name|char
operator|*
name|fullname
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_use_admin_server
name|__P
argument_list|(
operator|(
name|int
name|flag
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_verify_user
name|__P
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|char
operator|*
name|password
operator|,
name|int
name|secure
operator|,
name|char
operator|*
name|linstance
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_verify_user_srvtab
name|__P
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|char
operator|*
name|password
operator|,
name|int
name|secure
operator|,
name|char
operator|*
name|linstance
operator|,
name|char
operator|*
name|srvtab
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|kuserok
name|__P
argument_list|(
operator|(
name|AUTH_DAT
operator|*
name|auth
operator|,
name|char
operator|*
name|luser
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|u_int32_t
name|KRB_LIB_FUNCTION
name|lsb_time
name|__P
argument_list|(
operator|(
name|time_t
name|t
operator|,
expr|struct
name|sockaddr_in
operator|*
name|src
operator|,
expr|struct
name|sockaddr_in
operator|*
name|dst
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|const
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|month_sname
name|__P
argument_list|(
operator|(
name|int
name|n
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|passwd_to_5key
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|user
operator|,
specifier|const
name|char
operator|*
name|instance
operator|,
specifier|const
name|char
operator|*
name|realm
operator|,
specifier|const
name|void
operator|*
name|passwd
operator|,
name|des_cblock
operator|*
name|key
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|passwd_to_afskey
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|user
operator|,
specifier|const
name|char
operator|*
name|instance
operator|,
specifier|const
name|char
operator|*
name|realm
operator|,
specifier|const
name|void
operator|*
name|passwd
operator|,
name|des_cblock
operator|*
name|key
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|passwd_to_key
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|user
operator|,
specifier|const
name|char
operator|*
name|instance
operator|,
specifier|const
name|char
operator|*
name|realm
operator|,
specifier|const
name|void
operator|*
name|passwd
operator|,
name|des_cblock
operator|*
name|key
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|read_service_key
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|instance
operator|,
specifier|const
name|char
operator|*
name|realm
operator|,
name|int
name|kvno
operator|,
specifier|const
name|char
operator|*
name|file
operator|,
name|void
operator|*
name|key
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|save_credentials
name|__P
argument_list|(
operator|(
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|unsigned
name|char
operator|*
name|session
operator|,
name|int
name|lifetime
operator|,
name|int
name|kvno
operator|,
name|KTEXT
name|ticket
operator|,
name|int32_t
name|issue_date
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|send_to_kdc
name|__P
argument_list|(
operator|(
name|KTEXT
name|pkt
operator|,
name|KTEXT
name|rpkt
operator|,
specifier|const
name|char
operator|*
name|realm
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|srvtab_to_key
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|user
operator|,
name|char
operator|*
name|instance
operator|,
comment|/* INOUT parameter */
specifier|const
name|char
operator|*
name|realm
operator|,
specifier|const
name|void
operator|*
name|srvtab
operator|,
name|des_cblock
operator|*
name|key
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|KRB_LIB_FUNCTION
name|tf_close
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|tf_create
name|__P
argument_list|(
operator|(
name|char
operator|*
name|tf_name
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|tf_get_cred
name|__P
argument_list|(
operator|(
name|CREDENTIALS
operator|*
name|c
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|tf_get_cred_addr
name|__P
argument_list|(
operator|(
name|char
operator|*
name|realm
operator|,
name|size_t
name|realm_sz
operator|,
expr|struct
name|in_addr
operator|*
name|addr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|tf_get_pinst
name|__P
argument_list|(
operator|(
name|char
operator|*
name|inst
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|tf_get_pname
name|__P
argument_list|(
operator|(
name|char
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|tf_init
name|__P
argument_list|(
operator|(
name|char
operator|*
name|tf_name
operator|,
name|int
name|rw
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|tf_put_pinst
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|inst
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|tf_put_pname
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|p
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|tf_save_cred
name|__P
argument_list|(
operator|(
name|char
operator|*
name|service
operator|,
name|char
operator|*
name|instance
operator|,
name|char
operator|*
name|realm
operator|,
name|unsigned
name|char
operator|*
name|session
operator|,
name|int
name|lifetime
operator|,
name|int
name|kvno
operator|,
name|KTEXT
name|ticket
operator|,
name|u_int32_t
name|issue_date
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|tf_setup
name|__P
argument_list|(
operator|(
name|CREDENTIALS
operator|*
name|cred
operator|,
specifier|const
name|char
operator|*
name|pname
operator|,
specifier|const
name|char
operator|*
name|pinst
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|tf_get_addr
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|realm
operator|,
expr|struct
name|in_addr
operator|*
name|addr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|tf_store_addr
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|realm
operator|,
expr|struct
name|in_addr
operator|*
name|addr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|KRB_LIB_FUNCTION
name|tkt_string
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|KRB_LIB_FUNCTION
name|krb_add_our_ip_for_realm
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|user
operator|,
specifier|const
name|char
operator|*
name|instance
operator|,
specifier|const
name|char
operator|*
name|realm
operator|,
specifier|const
name|char
operator|*
name|password
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __krb_protos_h__ */
end_comment

end_unit

