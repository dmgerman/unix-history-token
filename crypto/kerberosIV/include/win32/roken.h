begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* This is (as usual) a generated file,    it is also machine dependent */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__ROKEN_H__
end_ifndef

begin_define
define|#
directive|define
name|__ROKEN_H__
end_define

begin_comment
comment|/* -*- C -*- */
end_comment

begin_comment
comment|/*  * Copyright (c) 1995, 1996, 1997, 1998, 1999 Kungliga Tekniska HÃ¶gskolan  * (Royal Institute of Technology, Stockholm, Sweden).  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *   * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *   * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *   * 3. Neither the name of the Institute nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_comment
comment|/* $Id: roken.h,v 1.8 1999/12/02 16:58:36 joda Exp $ */
end_comment

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_include
include|#
directive|include
file|<stdlib.h>
end_include

begin_include
include|#
directive|include
file|<stdarg.h>
end_include

begin_include
include|#
directive|include
file|<string.h>
end_include

begin_include
include|#
directive|include
file|<signal.h>
end_include

begin_include
include|#
directive|include
file|<time.h>
end_include

begin_define
define|#
directive|define
name|ROKEN_LIB_FUNCTION
end_define

begin_include
include|#
directive|include
file|<roken-common.h>
end_include

begin_function_decl
name|int
name|putenv
parameter_list|(
specifier|const
name|char
modifier|*
name|string
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|setenv
parameter_list|(
specifier|const
name|char
modifier|*
name|var
parameter_list|,
specifier|const
name|char
modifier|*
name|val
parameter_list|,
name|int
name|rewrite
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|unsetenv
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|getusershell
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|endusershell
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|snprintf
parameter_list|(
name|char
modifier|*
name|str
parameter_list|,
name|size_t
name|sz
parameter_list|,
specifier|const
name|char
modifier|*
name|format
parameter_list|,
modifier|...
parameter_list|)
function_decl|__attribute__
parameter_list|(
function_decl|(format
parameter_list|(
name|printf
parameter_list|,
function_decl|3
operator|,
function_decl|4
end_function_decl

begin_empty_stmt
unit|)))
empty_stmt|;
end_empty_stmt

begin_function_decl
name|int
name|vsnprintf
parameter_list|(
name|char
modifier|*
name|str
parameter_list|,
name|size_t
name|sz
parameter_list|,
specifier|const
name|char
modifier|*
name|format
parameter_list|,
name|va_list
name|ap
parameter_list|)
function_decl|__attribute__
parameter_list|(
function_decl|(format
parameter_list|(
name|printf
parameter_list|,
function_decl|3
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)))
empty_stmt|;
end_empty_stmt

begin_function_decl
name|int
name|asprintf
parameter_list|(
name|char
modifier|*
modifier|*
name|ret
parameter_list|,
specifier|const
name|char
modifier|*
name|format
parameter_list|,
modifier|...
parameter_list|)
function_decl|__attribute__
parameter_list|(
function_decl|(format
parameter_list|(
name|printf
parameter_list|,
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_empty_stmt
unit|)))
empty_stmt|;
end_empty_stmt

begin_function_decl
name|int
name|vasprintf
parameter_list|(
name|char
modifier|*
modifier|*
name|ret
parameter_list|,
specifier|const
name|char
modifier|*
name|format
parameter_list|,
name|va_list
name|ap
parameter_list|)
function_decl|__attribute__
parameter_list|(
function_decl|(format
parameter_list|(
name|printf
parameter_list|,
function_decl|2
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)))
empty_stmt|;
end_empty_stmt

begin_function_decl
name|int
name|asnprintf
parameter_list|(
name|char
modifier|*
modifier|*
name|ret
parameter_list|,
name|size_t
name|max_sz
parameter_list|,
specifier|const
name|char
modifier|*
name|format
parameter_list|,
modifier|...
parameter_list|)
function_decl|__attribute__
parameter_list|(
function_decl|(format
parameter_list|(
name|printf
parameter_list|,
function_decl|3
operator|,
function_decl|4
end_function_decl

begin_empty_stmt
unit|)))
empty_stmt|;
end_empty_stmt

begin_function_decl
name|int
name|vasnprintf
parameter_list|(
name|char
modifier|*
modifier|*
name|ret
parameter_list|,
name|size_t
name|max_sz
parameter_list|,
specifier|const
name|char
modifier|*
name|format
parameter_list|,
name|va_list
name|ap
parameter_list|)
function_decl|__attribute__
parameter_list|(
function_decl|(format
parameter_list|(
name|printf
parameter_list|,
function_decl|3
operator|,
function_decl|0
end_function_decl

begin_empty_stmt
unit|)))
empty_stmt|;
end_empty_stmt

begin_function_decl
name|char
modifier|*
name|strdup
parameter_list|(
specifier|const
name|char
modifier|*
name|old
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|strlwr
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|strnlen
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|strsep
parameter_list|(
name|char
modifier|*
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|strcasecmp
parameter_list|(
specifier|const
name|char
modifier|*
name|s1
parameter_list|,
specifier|const
name|char
modifier|*
name|s2
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|strupr
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|strlcpy
parameter_list|(
name|char
modifier|*
name|dst
parameter_list|,
specifier|const
name|char
modifier|*
name|src
parameter_list|,
name|size_t
name|dst_sz
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|strlcat
parameter_list|(
name|char
modifier|*
name|dst
parameter_list|,
specifier|const
name|char
modifier|*
name|src
parameter_list|,
name|size_t
name|dst_sz
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|getdtablesize
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|strerror
parameter_list|(
name|int
name|eno
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* This causes a fatal error under Psoriasis */
end_comment

begin_function_decl
specifier|const
name|char
modifier|*
name|hstrerror
parameter_list|(
name|int
name|herr
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|int
name|h_errno
decl_stmt|;
end_decl_stmt

begin_function_decl
name|int
name|inet_aton
parameter_list|(
specifier|const
name|char
modifier|*
name|cp
parameter_list|,
name|struct
name|in_addr
modifier|*
name|adr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|getcwd
parameter_list|(
name|char
modifier|*
name|path
parameter_list|,
name|size_t
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|seteuid
parameter_list|(
name|uid_t
name|euid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|setegid
parameter_list|(
name|gid_t
name|egid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|lstat
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|struct
name|stat
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mkstemp
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|initgroups
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|gid_t
name|basegid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fchown
parameter_list|(
name|int
name|fd
parameter_list|,
name|uid_t
name|owner
parameter_list|,
name|gid_t
name|group
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|daemon
parameter_list|(
name|int
name|nochdir
parameter_list|,
name|int
name|noclose
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|innetgr
parameter_list|(
specifier|const
name|char
modifier|*
name|netgroup
parameter_list|,
specifier|const
name|char
modifier|*
name|machine
parameter_list|,
specifier|const
name|char
modifier|*
name|user
parameter_list|,
specifier|const
name|char
modifier|*
name|domain
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|chown
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|uid_t
name|owner
parameter_list|,
name|gid_t
name|group
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|rcmd
parameter_list|(
name|char
modifier|*
modifier|*
name|ahost
parameter_list|,
name|unsigned
name|short
name|inport
parameter_list|,
specifier|const
name|char
modifier|*
name|locuser
parameter_list|,
specifier|const
name|char
modifier|*
name|remuser
parameter_list|,
specifier|const
name|char
modifier|*
name|cmd
parameter_list|,
name|int
modifier|*
name|fd2p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|innetgr
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|iruserok
parameter_list|(
name|unsigned
name|raddr
parameter_list|,
name|int
name|superuser
parameter_list|,
specifier|const
name|char
modifier|*
name|ruser
parameter_list|,
specifier|const
name|char
modifier|*
name|luser
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|gethostname
parameter_list|(
name|char
modifier|*
name|name
parameter_list|,
name|int
name|namelen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ssize_t
name|writev
parameter_list|(
name|int
name|d
parameter_list|,
specifier|const
name|struct
name|iovec
modifier|*
name|iov
parameter_list|,
name|int
name|iovcnt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ssize_t
name|readv
parameter_list|(
name|int
name|d
parameter_list|,
specifier|const
name|struct
name|iovec
modifier|*
name|iov
parameter_list|,
name|int
name|iovcnt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mkstemp
parameter_list|(
name|char
modifier|*
name|template
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|LOCK_SH
value|1
end_define

begin_comment
comment|/* Shared lock */
end_comment

begin_define
define|#
directive|define
name|LOCK_EX
value|2
end_define

begin_comment
comment|/* Exclusive lock */
end_comment

begin_define
define|#
directive|define
name|LOCK_NB
value|4
end_define

begin_comment
comment|/* Don't block when locking */
end_comment

begin_define
define|#
directive|define
name|LOCK_UN
value|8
end_define

begin_comment
comment|/* Unlock */
end_comment

begin_function_decl
name|int
name|flock
parameter_list|(
name|int
name|fd
parameter_list|,
name|int
name|operation
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|time_t
name|tm2time
parameter_list|(
name|struct
name|tm
name|tm
parameter_list|,
name|int
name|local
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|unix_verify_user
parameter_list|(
name|char
modifier|*
name|user
parameter_list|,
name|char
modifier|*
name|password
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|inaddr2str
parameter_list|(
name|struct
name|in_addr
name|addr
parameter_list|,
name|char
modifier|*
name|s
parameter_list|,
name|size_t
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mini_inetd
parameter_list|(
name|int
name|port
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|roken_concat
parameter_list|(
name|char
modifier|*
name|s
parameter_list|,
name|size_t
name|len
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|roken_mconcat
parameter_list|(
name|char
modifier|*
modifier|*
name|s
parameter_list|,
name|size_t
name|max_len
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|roken_vconcat
parameter_list|(
name|char
modifier|*
name|s
parameter_list|,
name|size_t
name|len
parameter_list|,
name|va_list
name|args
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|roken_vmconcat
parameter_list|(
name|char
modifier|*
modifier|*
name|s
parameter_list|,
name|size_t
name|max_len
parameter_list|,
name|va_list
name|args
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ssize_t
name|net_write
parameter_list|(
name|int
name|fd
parameter_list|,
specifier|const
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|nbytes
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ssize_t
name|net_read
parameter_list|(
name|int
name|fd
parameter_list|,
name|void
modifier|*
name|buf
parameter_list|,
name|size_t
name|nbytes
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|issuid
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_struct
struct|struct
name|winsize
block|{
name|unsigned
name|short
name|ws_row
decl_stmt|,
name|ws_col
decl_stmt|;
name|unsigned
name|short
name|ws_xpixel
decl_stmt|,
name|ws_ypixel
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|get_window_size
parameter_list|(
name|int
name|fd
parameter_list|,
name|struct
name|winsize
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vsyslog
parameter_list|(
name|int
name|pri
parameter_list|,
specifier|const
name|char
modifier|*
name|fmt
parameter_list|,
name|va_list
name|ap
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|optarg
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|optind
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|opterr
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|char
modifier|*
name|__progname
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
modifier|*
name|environ
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * kludges and such  */
end_comment

begin_function_decl
name|int
name|roken_gethostby_setup
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|hostent
modifier|*
name|roken_gethostbyname
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|hostent
modifier|*
name|roken_gethostbyaddr
parameter_list|(
specifier|const
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|roken_getservbyname
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
value|getservbyname((char *)x, (char *)y)
end_define

begin_define
define|#
directive|define
name|roken_openlog
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|,
name|c
parameter_list|)
value|openlog((char *)a,b,c)
end_define

begin_function_decl
name|void
name|set_progname
parameter_list|(
name|char
modifier|*
name|argv0
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __ROKEN_H__ */
end_comment

end_unit

