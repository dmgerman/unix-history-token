begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$OpenBSD: monitor_wrap.h,v 1.11 2003/08/28 12:54:34 markus Exp $	*/
end_comment

begin_comment
comment|/*  * Copyright 2002 Niels Provos<provos@citi.umich.edu>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MM_WRAP_H_
end_ifndef

begin_define
define|#
directive|define
name|_MM_WRAP_H_
end_define

begin_include
include|#
directive|include
file|"key.h"
end_include

begin_include
include|#
directive|include
file|"buffer.h"
end_include

begin_decl_stmt
specifier|extern
name|int
name|use_privsep
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|PRIVSEP
parameter_list|(
name|x
parameter_list|)
value|(use_privsep ? mm_##x : x)
end_define

begin_enum
enum|enum
name|mm_keytype
block|{
name|MM_NOKEY
block|,
name|MM_HOSTKEY
block|,
name|MM_USERKEY
block|,
name|MM_RSAHOSTKEY
block|,
name|MM_RSAUSERKEY
block|}
enum|;
end_enum

begin_struct_decl
struct_decl|struct
name|monitor
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|mm_master
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|passwd
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|Authctxt
struct_decl|;
end_struct_decl

begin_function_decl
name|DH
modifier|*
name|mm_choose_dh
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_key_sign
parameter_list|(
name|Key
modifier|*
parameter_list|,
name|u_char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|u_int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mm_inform_authserv
parameter_list|(
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|passwd
modifier|*
name|mm_getpwnamallow
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|mm_auth2_read_banner
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_auth_password
parameter_list|(
name|struct
name|Authctxt
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_key_allowed
parameter_list|(
name|enum
name|mm_keytype
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_user_key_allowed
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|,
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_hostbased_key_allowed
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_auth_rhosts_rsa_key_allowed
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_key_verify
parameter_list|(
name|Key
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|u_int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_auth_rsa_key_allowed
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|Key
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_auth_rsa_verify_response
parameter_list|(
name|Key
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|BIGNUM
modifier|*
name|mm_auth_rsa_generate_challenge
parameter_list|(
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|GSSAPI
end_ifdef

begin_include
include|#
directive|include
file|"ssh-gss.h"
end_include

begin_function_decl
name|OM_uint32
name|mm_ssh_gssapi_server_ctx
parameter_list|(
name|Gssctxt
modifier|*
modifier|*
name|ctxt
parameter_list|,
name|gss_OID
name|oid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|OM_uint32
name|mm_ssh_gssapi_accept_ctx
parameter_list|(
name|Gssctxt
modifier|*
name|ctxt
parameter_list|,
name|gss_buffer_desc
modifier|*
name|recv
parameter_list|,
name|gss_buffer_desc
modifier|*
name|send
parameter_list|,
name|OM_uint32
modifier|*
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_ssh_gssapi_userok
parameter_list|(
name|char
modifier|*
name|user
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|USE_PAM
end_ifdef

begin_function_decl
name|void
name|mm_start_pam
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u_int
name|mm_do_pam_account
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|mm_sshpam_init_ctx
parameter_list|(
name|struct
name|Authctxt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_sshpam_query
parameter_list|(
name|void
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_sshpam_respond
parameter_list|(
name|void
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mm_sshpam_free_ctx
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|mm_terminate
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_pty_allocate
parameter_list|(
name|int
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mm_session_pty_cleanup2
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* SSHv1 interfaces */
end_comment

begin_function_decl
name|void
name|mm_ssh1_session_id
parameter_list|(
name|u_char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_ssh1_session_key
parameter_list|(
name|BIGNUM
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Key export functions */
end_comment

begin_function_decl
name|struct
name|Newkeys
modifier|*
name|mm_newkeys_from_blob
parameter_list|(
name|u_char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_newkeys_to_blob
parameter_list|(
name|int
parameter_list|,
name|u_char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|monitor_apply_keystate
parameter_list|(
name|struct
name|monitor
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mm_get_keystate
parameter_list|(
name|struct
name|monitor
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mm_send_keystate
parameter_list|(
name|struct
name|monitor
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* bsdauth */
end_comment

begin_function_decl
name|int
name|mm_bsdauth_query
parameter_list|(
name|void
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_bsdauth_respond
parameter_list|(
name|void
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* skey */
end_comment

begin_function_decl
name|int
name|mm_skey_query
parameter_list|(
name|void
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mm_skey_respond
parameter_list|(
name|void
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* zlib allocation hooks */
end_comment

begin_function_decl
name|void
modifier|*
name|mm_zalloc
parameter_list|(
name|struct
name|mm_master
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|u_int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mm_zfree
parameter_list|(
name|struct
name|mm_master
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mm_init_compression
parameter_list|(
name|struct
name|mm_master
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _MM_H_ */
end_comment

end_unit

