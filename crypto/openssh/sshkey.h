begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $OpenBSD: sshkey.h,v 1.9 2015/08/04 05:23:06 djm Exp $ */
end_comment

begin_comment
comment|/*  * Copyright (c) 2000, 2001 Markus Friedl.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SSHKEY_H
end_ifndef

begin_define
define|#
directive|define
name|SSHKEY_H
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|WITH_OPENSSL
end_ifdef

begin_include
include|#
directive|include
file|<openssl/rsa.h>
end_include

begin_include
include|#
directive|include
file|<openssl/dsa.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|OPENSSL_HAS_ECC
end_ifdef

begin_include
include|#
directive|include
file|<openssl/ec.h>
end_include

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* OPENSSL_HAS_ECC */
end_comment

begin_define
define|#
directive|define
name|EC_KEY
value|void
end_define

begin_define
define|#
directive|define
name|EC_GROUP
value|void
end_define

begin_define
define|#
directive|define
name|EC_POINT
value|void
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* OPENSSL_HAS_ECC */
end_comment

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* WITH_OPENSSL */
end_comment

begin_define
define|#
directive|define
name|RSA
value|void
end_define

begin_define
define|#
directive|define
name|DSA
value|void
end_define

begin_define
define|#
directive|define
name|EC_KEY
value|void
end_define

begin_define
define|#
directive|define
name|EC_GROUP
value|void
end_define

begin_define
define|#
directive|define
name|EC_POINT
value|void
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* WITH_OPENSSL */
end_comment

begin_define
define|#
directive|define
name|SSH_RSA_MINIMUM_MODULUS_SIZE
value|768
end_define

begin_define
define|#
directive|define
name|SSH_KEY_MAX_SIGN_DATA_SIZE
value|(1<< 20)
end_define

begin_struct_decl
struct_decl|struct
name|sshbuf
struct_decl|;
end_struct_decl

begin_comment
comment|/* Key types */
end_comment

begin_enum
enum|enum
name|sshkey_types
block|{
name|KEY_RSA1
block|,
name|KEY_RSA
block|,
name|KEY_DSA
block|,
name|KEY_ECDSA
block|,
name|KEY_ED25519
block|,
name|KEY_RSA_CERT
block|,
name|KEY_DSA_CERT
block|,
name|KEY_ECDSA_CERT
block|,
name|KEY_ED25519_CERT
block|,
name|KEY_UNSPEC
block|}
enum|;
end_enum

begin_comment
comment|/* Default fingerprint hash */
end_comment

begin_define
define|#
directive|define
name|SSH_FP_HASH_DEFAULT
value|SSH_DIGEST_SHA256
end_define

begin_comment
comment|/* Fingerprint representation formats */
end_comment

begin_enum
enum|enum
name|sshkey_fp_rep
block|{
name|SSH_FP_DEFAULT
init|=
literal|0
block|,
name|SSH_FP_HEX
block|,
name|SSH_FP_BASE64
block|,
name|SSH_FP_BUBBLEBABBLE
block|,
name|SSH_FP_RANDOMART
block|}
enum|;
end_enum

begin_comment
comment|/* key is stored in external hardware */
end_comment

begin_define
define|#
directive|define
name|SSHKEY_FLAG_EXT
value|0x0001
end_define

begin_define
define|#
directive|define
name|SSHKEY_CERT_MAX_PRINCIPALS
value|256
end_define

begin_comment
comment|/* XXX opaquify? */
end_comment

begin_struct
struct|struct
name|sshkey_cert
block|{
name|struct
name|sshbuf
modifier|*
name|certblob
decl_stmt|;
comment|/* Kept around for use on wire */
name|u_int
name|type
decl_stmt|;
comment|/* SSH2_CERT_TYPE_USER or SSH2_CERT_TYPE_HOST */
name|u_int64_t
name|serial
decl_stmt|;
name|char
modifier|*
name|key_id
decl_stmt|;
name|u_int
name|nprincipals
decl_stmt|;
name|char
modifier|*
modifier|*
name|principals
decl_stmt|;
name|u_int64_t
name|valid_after
decl_stmt|,
name|valid_before
decl_stmt|;
name|struct
name|sshbuf
modifier|*
name|critical
decl_stmt|;
name|struct
name|sshbuf
modifier|*
name|extensions
decl_stmt|;
name|struct
name|sshkey
modifier|*
name|signature_key
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* XXX opaquify? */
end_comment

begin_struct
struct|struct
name|sshkey
block|{
name|int
name|type
decl_stmt|;
name|int
name|flags
decl_stmt|;
name|RSA
modifier|*
name|rsa
decl_stmt|;
name|DSA
modifier|*
name|dsa
decl_stmt|;
name|int
name|ecdsa_nid
decl_stmt|;
comment|/* NID of curve */
name|EC_KEY
modifier|*
name|ecdsa
decl_stmt|;
name|u_char
modifier|*
name|ed25519_sk
decl_stmt|;
name|u_char
modifier|*
name|ed25519_pk
decl_stmt|;
name|struct
name|sshkey_cert
modifier|*
name|cert
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|ED25519_SK_SZ
value|crypto_sign_ed25519_SECRETKEYBYTES
end_define

begin_define
define|#
directive|define
name|ED25519_PK_SZ
value|crypto_sign_ed25519_PUBLICKEYBYTES
end_define

begin_function_decl
name|struct
name|sshkey
modifier|*
name|sshkey_new
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_add_private
parameter_list|(
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|sshkey
modifier|*
name|sshkey_new_private
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sshkey_free
parameter_list|(
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_demote
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|struct
name|sshkey
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_equal_public
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_equal
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|sshkey_fingerprint
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|int
parameter_list|,
name|enum
name|sshkey_fp_rep
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_fingerprint_raw
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
name|k
parameter_list|,
name|int
parameter_list|,
name|u_char
modifier|*
modifier|*
name|retp
parameter_list|,
name|size_t
modifier|*
name|lenp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|sshkey_type
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|sshkey_cert_type
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_write
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|FILE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_read
parameter_list|(
name|struct
name|sshkey
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u_int
name|sshkey_size
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_generate
parameter_list|(
name|int
name|type
parameter_list|,
name|u_int
name|bits
parameter_list|,
name|struct
name|sshkey
modifier|*
modifier|*
name|keyp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_from_private
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|struct
name|sshkey
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_type_from_name
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_is_cert
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_type_is_cert
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_type_plain
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_to_certified
parameter_list|(
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_drop_cert
parameter_list|(
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_certify
parameter_list|(
name|struct
name|sshkey
modifier|*
parameter_list|,
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_cert_copy
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_cert_check_authority
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_ecdsa_nid_from_name
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_curve_name_to_nid
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|sshkey_curve_nid_to_name
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|u_int
name|sshkey_curve_nid_to_bits
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_ecdsa_bits_to_nid
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_ecdsa_key_to_nid
parameter_list|(
name|EC_KEY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_ec_nid_to_hash_alg
parameter_list|(
name|int
name|nid
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_ec_validate_public
parameter_list|(
specifier|const
name|EC_GROUP
modifier|*
parameter_list|,
specifier|const
name|EC_POINT
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_ec_validate_private
parameter_list|(
specifier|const
name|EC_KEY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|sshkey_ssh_name
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|sshkey_ssh_name_plain
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_names_valid2
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|key_alg_list
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_from_blob
parameter_list|(
specifier|const
name|u_char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|struct
name|sshkey
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_fromb
parameter_list|(
name|struct
name|sshbuf
modifier|*
parameter_list|,
name|struct
name|sshkey
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_froms
parameter_list|(
name|struct
name|sshbuf
modifier|*
parameter_list|,
name|struct
name|sshkey
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_to_blob
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|u_char
modifier|*
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_to_base64
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_putb
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|struct
name|sshbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_puts
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|struct
name|sshbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_plain_to_blob
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|u_char
modifier|*
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_putb_plain
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|struct
name|sshbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_sign
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
name|u_char
modifier|*
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|,
specifier|const
name|u_char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|u_int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_verify
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
parameter_list|,
specifier|const
name|u_char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
specifier|const
name|u_char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|u_int
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* for debug */
end_comment

begin_function_decl
name|void
name|sshkey_dump_ec_point
parameter_list|(
specifier|const
name|EC_GROUP
modifier|*
parameter_list|,
specifier|const
name|EC_POINT
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sshkey_dump_ec_key
parameter_list|(
specifier|const
name|EC_KEY
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* private key parsing and serialisation */
end_comment

begin_function_decl
name|int
name|sshkey_private_serialize
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
name|key
parameter_list|,
name|struct
name|sshbuf
modifier|*
name|buf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_private_deserialize
parameter_list|(
name|struct
name|sshbuf
modifier|*
name|buf
parameter_list|,
name|struct
name|sshkey
modifier|*
modifier|*
name|keyp
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* private key file format parsing and serialisation */
end_comment

begin_function_decl
name|int
name|sshkey_private_to_fileblob
parameter_list|(
name|struct
name|sshkey
modifier|*
name|key
parameter_list|,
name|struct
name|sshbuf
modifier|*
name|blob
parameter_list|,
specifier|const
name|char
modifier|*
name|passphrase
parameter_list|,
specifier|const
name|char
modifier|*
name|comment
parameter_list|,
name|int
name|force_new_format
parameter_list|,
specifier|const
name|char
modifier|*
name|new_format_cipher
parameter_list|,
name|int
name|new_format_rounds
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_parse_public_rsa1_fileblob
parameter_list|(
name|struct
name|sshbuf
modifier|*
name|blob
parameter_list|,
name|struct
name|sshkey
modifier|*
modifier|*
name|keyp
parameter_list|,
name|char
modifier|*
modifier|*
name|commentp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_parse_private_fileblob
parameter_list|(
name|struct
name|sshbuf
modifier|*
name|buffer
parameter_list|,
specifier|const
name|char
modifier|*
name|passphrase
parameter_list|,
specifier|const
name|char
modifier|*
name|filename
parameter_list|,
name|struct
name|sshkey
modifier|*
modifier|*
name|keyp
parameter_list|,
name|char
modifier|*
modifier|*
name|commentp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sshkey_parse_private_fileblob_type
parameter_list|(
name|struct
name|sshbuf
modifier|*
name|blob
parameter_list|,
name|int
name|type
parameter_list|,
specifier|const
name|char
modifier|*
name|passphrase
parameter_list|,
name|struct
name|sshkey
modifier|*
modifier|*
name|keyp
parameter_list|,
name|char
modifier|*
modifier|*
name|commentp
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|SSHKEY_INTERNAL
end_ifdef

begin_function_decl
name|int
name|ssh_rsa_sign
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
name|key
parameter_list|,
name|u_char
modifier|*
modifier|*
name|sigp
parameter_list|,
name|size_t
modifier|*
name|lenp
parameter_list|,
specifier|const
name|u_char
modifier|*
name|data
parameter_list|,
name|size_t
name|datalen
parameter_list|,
name|u_int
name|compat
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ssh_rsa_verify
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
name|key
parameter_list|,
specifier|const
name|u_char
modifier|*
name|signature
parameter_list|,
name|size_t
name|signaturelen
parameter_list|,
specifier|const
name|u_char
modifier|*
name|data
parameter_list|,
name|size_t
name|datalen
parameter_list|,
name|u_int
name|compat
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ssh_dss_sign
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
name|key
parameter_list|,
name|u_char
modifier|*
modifier|*
name|sigp
parameter_list|,
name|size_t
modifier|*
name|lenp
parameter_list|,
specifier|const
name|u_char
modifier|*
name|data
parameter_list|,
name|size_t
name|datalen
parameter_list|,
name|u_int
name|compat
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ssh_dss_verify
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
name|key
parameter_list|,
specifier|const
name|u_char
modifier|*
name|signature
parameter_list|,
name|size_t
name|signaturelen
parameter_list|,
specifier|const
name|u_char
modifier|*
name|data
parameter_list|,
name|size_t
name|datalen
parameter_list|,
name|u_int
name|compat
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ssh_ecdsa_sign
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
name|key
parameter_list|,
name|u_char
modifier|*
modifier|*
name|sigp
parameter_list|,
name|size_t
modifier|*
name|lenp
parameter_list|,
specifier|const
name|u_char
modifier|*
name|data
parameter_list|,
name|size_t
name|datalen
parameter_list|,
name|u_int
name|compat
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ssh_ecdsa_verify
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
name|key
parameter_list|,
specifier|const
name|u_char
modifier|*
name|signature
parameter_list|,
name|size_t
name|signaturelen
parameter_list|,
specifier|const
name|u_char
modifier|*
name|data
parameter_list|,
name|size_t
name|datalen
parameter_list|,
name|u_int
name|compat
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ssh_ed25519_sign
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
name|key
parameter_list|,
name|u_char
modifier|*
modifier|*
name|sigp
parameter_list|,
name|size_t
modifier|*
name|lenp
parameter_list|,
specifier|const
name|u_char
modifier|*
name|data
parameter_list|,
name|size_t
name|datalen
parameter_list|,
name|u_int
name|compat
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ssh_ed25519_verify
parameter_list|(
specifier|const
name|struct
name|sshkey
modifier|*
name|key
parameter_list|,
specifier|const
name|u_char
modifier|*
name|signature
parameter_list|,
name|size_t
name|signaturelen
parameter_list|,
specifier|const
name|u_char
modifier|*
name|data
parameter_list|,
name|size_t
name|datalen
parameter_list|,
name|u_int
name|compat
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|WITH_OPENSSL
argument_list|)
end_if

begin_undef
undef|#
directive|undef
name|RSA
end_undef

begin_undef
undef|#
directive|undef
name|DSA
end_undef

begin_undef
undef|#
directive|undef
name|EC_KEY
end_undef

begin_undef
undef|#
directive|undef
name|EC_GROUP
end_undef

begin_undef
undef|#
directive|undef
name|EC_POINT
end_undef

begin_elif
elif|#
directive|elif
operator|!
name|defined
argument_list|(
name|OPENSSL_HAS_ECC
argument_list|)
end_elif

begin_undef
undef|#
directive|undef
name|EC_KEY
end_undef

begin_undef
undef|#
directive|undef
name|EC_GROUP
end_undef

begin_undef
undef|#
directive|undef
name|EC_POINT
end_undef

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* SSHKEY_H */
end_comment

end_unit

