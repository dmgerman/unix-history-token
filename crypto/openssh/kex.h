begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2000 Markus Friedl.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *      This product includes software developed by Markus Friedl.  * 4. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|KEX_H
end_ifndef

begin_define
define|#
directive|define
name|KEX_H
end_define

begin_define
define|#
directive|define
name|KEX_DH1
value|"diffie-hellman-group1-sha1"
end_define

begin_define
define|#
directive|define
name|KEX_DSS
value|"ssh-dss"
end_define

begin_enum
enum|enum
name|kex_init_proposals
block|{
name|PROPOSAL_KEX_ALGS
block|,
name|PROPOSAL_SERVER_HOST_KEY_ALGS
block|,
name|PROPOSAL_ENC_ALGS_CTOS
block|,
name|PROPOSAL_ENC_ALGS_STOC
block|,
name|PROPOSAL_MAC_ALGS_CTOS
block|,
name|PROPOSAL_MAC_ALGS_STOC
block|,
name|PROPOSAL_COMP_ALGS_CTOS
block|,
name|PROPOSAL_COMP_ALGS_STOC
block|,
name|PROPOSAL_LANG_CTOS
block|,
name|PROPOSAL_LANG_STOC
block|,
name|PROPOSAL_MAX
block|}
enum|;
end_enum

begin_enum
enum|enum
name|kex_modes
block|{
name|MODE_IN
block|,
name|MODE_OUT
block|,
name|MODE_MAX
block|}
enum|;
end_enum

begin_typedef
typedef|typedef
name|struct
name|Kex
name|Kex
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|Mac
name|Mac
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|Comp
name|Comp
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|Enc
name|Enc
typedef|;
end_typedef

begin_struct
struct|struct
name|Enc
block|{
name|int
name|type
decl_stmt|;
name|int
name|enabled
decl_stmt|;
name|int
name|block_size
decl_stmt|;
name|unsigned
name|char
modifier|*
name|key
decl_stmt|;
name|unsigned
name|char
modifier|*
name|iv
decl_stmt|;
name|int
name|key_len
decl_stmt|;
name|int
name|iv_len
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|Mac
block|{
name|EVP_MD
modifier|*
name|md
decl_stmt|;
name|int
name|enabled
decl_stmt|;
name|int
name|mac_len
decl_stmt|;
name|unsigned
name|char
modifier|*
name|key
decl_stmt|;
name|int
name|key_len
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|Comp
block|{
name|int
name|type
decl_stmt|;
name|int
name|enabled
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|Kex
block|{
name|Enc
name|enc
index|[
name|MODE_MAX
index|]
decl_stmt|;
name|Mac
name|mac
index|[
name|MODE_MAX
index|]
decl_stmt|;
name|Comp
name|comp
index|[
name|MODE_MAX
index|]
decl_stmt|;
name|int
name|we_need
decl_stmt|;
name|int
name|server
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
name|char
modifier|*
name|hostkeyalg
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|Buffer
modifier|*
name|kex_init
parameter_list|(
name|char
modifier|*
name|myproposal
index|[
name|PROPOSAL_MAX
index|]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kex_exchange_kexinit
parameter_list|(
name|Buffer
modifier|*
name|my_kexinit
parameter_list|,
name|Buffer
modifier|*
name|peer_kexint
parameter_list|,
name|char
modifier|*
name|peer_proposal
index|[
name|PROPOSAL_MAX
index|]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Kex
modifier|*
name|kex_choose_conf
parameter_list|(
name|char
modifier|*
name|cprop
index|[
name|PROPOSAL_MAX
index|]
parameter_list|,
name|char
modifier|*
name|sprop
index|[
name|PROPOSAL_MAX
index|]
parameter_list|,
name|int
name|server
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|kex_derive_keys
parameter_list|(
name|Kex
modifier|*
name|k
parameter_list|,
name|unsigned
name|char
modifier|*
name|hash
parameter_list|,
name|BIGNUM
modifier|*
name|shared_secret
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|packet_set_kex
parameter_list|(
name|Kex
modifier|*
name|k
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|dh_pub_is_valid
parameter_list|(
name|DH
modifier|*
name|dh
parameter_list|,
name|BIGNUM
modifier|*
name|dh_pub
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|DH
modifier|*
name|dh_new_group1
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|char
modifier|*
name|kex_hash
parameter_list|(
name|char
modifier|*
name|client_version_string
parameter_list|,
name|char
modifier|*
name|server_version_string
parameter_list|,
name|char
modifier|*
name|ckexinit
parameter_list|,
name|int
name|ckexinitlen
parameter_list|,
name|char
modifier|*
name|skexinit
parameter_list|,
name|int
name|skexinitlen
parameter_list|,
name|char
modifier|*
name|serverhostkeyblob
parameter_list|,
name|int
name|sbloblen
parameter_list|,
name|BIGNUM
modifier|*
name|client_dh_pub
parameter_list|,
name|BIGNUM
modifier|*
name|server_dh_pub
parameter_list|,
name|BIGNUM
modifier|*
name|shared_secret
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

