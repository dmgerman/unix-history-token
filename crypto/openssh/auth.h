begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $OpenBSD: auth.h,v 1.77 2014/01/29 06:18:35 djm Exp $ */
end_comment

begin_comment
comment|/*  * Copyright (c) 2000 Markus Friedl.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|AUTH_H
end_ifndef

begin_define
define|#
directive|define
name|AUTH_H
end_define

begin_include
include|#
directive|include
file|<signal.h>
end_include

begin_include
include|#
directive|include
file|<openssl/rsa.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|HAVE_LOGIN_CAP
end_ifdef

begin_include
include|#
directive|include
file|<login_cap.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|BSD_AUTH
end_ifdef

begin_include
include|#
directive|include
file|<bsd_auth.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|KRB5
end_ifdef

begin_include
include|#
directive|include
file|<krb5.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_typedef
typedef|typedef
name|struct
name|Authctxt
name|Authctxt
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|Authmethod
name|Authmethod
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|KbdintDevice
name|KbdintDevice
typedef|;
end_typedef

begin_struct
struct|struct
name|Authctxt
block|{
name|sig_atomic_t
name|success
decl_stmt|;
name|int
name|authenticated
decl_stmt|;
comment|/* authenticated and alarms cancelled */
name|int
name|postponed
decl_stmt|;
comment|/* authentication needs another step */
name|int
name|valid
decl_stmt|;
comment|/* user exists and is allowed to login */
name|int
name|attempt
decl_stmt|;
name|int
name|failures
decl_stmt|;
name|int
name|server_caused_failure
decl_stmt|;
name|int
name|force_pwchange
decl_stmt|;
name|char
modifier|*
name|user
decl_stmt|;
comment|/* username sent by the client */
name|char
modifier|*
name|service
decl_stmt|;
name|struct
name|passwd
modifier|*
name|pw
decl_stmt|;
comment|/* set if 'valid' */
name|char
modifier|*
name|style
decl_stmt|;
name|void
modifier|*
name|kbdintctxt
decl_stmt|;
name|char
modifier|*
name|info
decl_stmt|;
comment|/* Extra info for next auth_log */
ifdef|#
directive|ifdef
name|BSD_AUTH
name|auth_session_t
modifier|*
name|as
decl_stmt|;
endif|#
directive|endif
name|char
modifier|*
modifier|*
name|auth_methods
decl_stmt|;
comment|/* modified from server config */
name|u_int
name|num_auth_methods
decl_stmt|;
ifdef|#
directive|ifdef
name|KRB5
name|krb5_context
name|krb5_ctx
decl_stmt|;
name|krb5_ccache
name|krb5_fwd_ccache
decl_stmt|;
name|krb5_principal
name|krb5_user
decl_stmt|;
name|char
modifier|*
name|krb5_ticket_file
decl_stmt|;
name|char
modifier|*
name|krb5_ccname
decl_stmt|;
endif|#
directive|endif
name|Buffer
modifier|*
name|loginmsg
decl_stmt|;
name|void
modifier|*
name|methoddata
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Every authentication method has to handle authentication requests for  * non-existing users, or for users that are not allowed to login. In this  * case 'valid' is set to 0, but 'user' points to the username requested by  * the client.  */
end_comment

begin_struct
struct|struct
name|Authmethod
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|int
function_decl|(
modifier|*
name|userauth
function_decl|)
parameter_list|(
name|Authctxt
modifier|*
name|authctxt
parameter_list|)
function_decl|;
name|int
modifier|*
name|enabled
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  * Keyboard interactive device:  * init_ctx	returns: non NULL upon success  * query	returns: 0 - success, otherwise failure  * respond	returns: 0 - success, 1 - need further interaction,  *		otherwise - failure  */
end_comment

begin_struct
struct|struct
name|KbdintDevice
block|{
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|void
modifier|*
function_decl|(
modifier|*
name|init_ctx
function_decl|)
parameter_list|(
name|Authctxt
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|query
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|char
modifier|*
modifier|*
name|name
parameter_list|,
name|char
modifier|*
modifier|*
name|infotxt
parameter_list|,
name|u_int
modifier|*
name|numprompts
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
name|prompts
parameter_list|,
name|u_int
modifier|*
modifier|*
name|echo_on
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|respond
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|,
name|u_int
name|numresp
parameter_list|,
name|char
modifier|*
modifier|*
name|responses
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|free_ctx
function_decl|)
parameter_list|(
name|void
modifier|*
name|ctx
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|auth_rhosts
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_rhosts2
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_rhosts_rsa
parameter_list|(
name|Authctxt
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_password
parameter_list|(
name|Authctxt
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_rsa
parameter_list|(
name|Authctxt
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_rsa_challenge_dialog
parameter_list|(
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|BIGNUM
modifier|*
name|auth_rsa_generate_challenge
parameter_list|(
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_rsa_verify_response
parameter_list|(
name|Key
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|u_char
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_rsa_key_allowed
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|,
name|BIGNUM
modifier|*
parameter_list|,
name|Key
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_rhosts_rsa_key_allowed
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|hostbased_key_allowed
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|user_key_allowed
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|,
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|pubkey_auth_info
parameter_list|(
name|Authctxt
modifier|*
parameter_list|,
specifier|const
name|Key
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|__attribute__
parameter_list|(
function_decl|(__format__
parameter_list|(
name|printf
parameter_list|,
function_decl|3
operator|,
function_decl|4
end_function_decl

begin_empty_stmt
unit|)))
empty_stmt|;
end_empty_stmt

begin_struct_decl
struct_decl|struct
name|stat
struct_decl|;
end_struct_decl

begin_function_decl
name|int
name|auth_secure_path
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|stat
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|uid_t
parameter_list|,
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|KRB5
end_ifdef

begin_function_decl
name|int
name|auth_krb5
parameter_list|(
name|Authctxt
modifier|*
name|authctxt
parameter_list|,
name|krb5_data
modifier|*
name|auth
parameter_list|,
name|char
modifier|*
modifier|*
name|client
parameter_list|,
name|krb5_data
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_krb5_tgt
parameter_list|(
name|Authctxt
modifier|*
name|authctxt
parameter_list|,
name|krb5_data
modifier|*
name|tgt
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_krb5_password
parameter_list|(
name|Authctxt
modifier|*
name|authctxt
parameter_list|,
specifier|const
name|char
modifier|*
name|password
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|krb5_cleanup_proc
parameter_list|(
name|Authctxt
modifier|*
name|authctxt
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* KRB5 */
end_comment

begin_if
if|#
directive|if
name|defined
argument_list|(
name|USE_SHADOW
argument_list|)
operator|&&
name|defined
argument_list|(
name|HAS_SHADOW_EXPIRE
argument_list|)
end_if

begin_include
include|#
directive|include
file|<shadow.h>
end_include

begin_function_decl
name|int
name|auth_shadow_acctexpired
parameter_list|(
name|struct
name|spwd
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_shadow_pwexpired
parameter_list|(
name|Authctxt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|"auth-pam.h"
end_include

begin_include
include|#
directive|include
file|"audit.h"
end_include

begin_function_decl
name|void
name|remove_kbdint_device
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|disable_forwarding
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|do_authentication
parameter_list|(
name|Authctxt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|do_authentication2
parameter_list|(
name|Authctxt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|auth_info
parameter_list|(
name|Authctxt
modifier|*
name|authctxt
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|__attribute__
parameter_list|(
function_decl|(__format__
parameter_list|(
name|printf
parameter_list|,
function_decl|2
operator|,
function_decl|3
end_function_decl

begin_expr_stmt
unit|)))
name|__attribute__
argument_list|(
operator|(
name|__nonnull__
argument_list|(
literal|2
argument_list|)
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function_decl
name|void
name|auth_log
parameter_list|(
name|Authctxt
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|userauth_finish
parameter_list|(
name|Authctxt
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_root_allowed
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|userauth_send_banner
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|auth2_read_banner
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth2_methods_valid
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth2_update_methods_lists
parameter_list|(
name|Authctxt
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth2_setup_methods_lists
parameter_list|(
name|Authctxt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth2_method_allowed
parameter_list|(
name|Authctxt
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|privsep_challenge_enable
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth2_challenge
parameter_list|(
name|Authctxt
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|auth2_challenge_stop
parameter_list|(
name|Authctxt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bsdauth_query
parameter_list|(
name|void
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|bsdauth_respond
parameter_list|(
name|void
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|skey_query
parameter_list|(
name|void
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|skey_respond
parameter_list|(
name|void
modifier|*
parameter_list|,
name|u_int
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|allowed_user
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|passwd
modifier|*
name|getpwnamallow
parameter_list|(
specifier|const
name|char
modifier|*
name|user
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|get_challenge
parameter_list|(
name|Authctxt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|verify_response
parameter_list|(
name|Authctxt
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|abandon_challenge_response
parameter_list|(
name|Authctxt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|expand_authorized_keys
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
name|pw
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|authorized_principals_file
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|FILE
modifier|*
name|auth_openkeyfile
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|FILE
modifier|*
name|auth_openprincipals
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_key_is_revoked
parameter_list|(
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|HostStatus
name|check_key_in_hostfiles
parameter_list|(
name|struct
name|passwd
modifier|*
parameter_list|,
name|Key
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* hostkey handling */
end_comment

begin_function_decl
name|Key
modifier|*
name|get_hostkey_by_index
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Key
modifier|*
name|get_hostkey_public_by_index
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Key
modifier|*
name|get_hostkey_public_by_type
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|Key
modifier|*
name|get_hostkey_private_by_type
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|get_hostkey_index
parameter_list|(
name|Key
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ssh1_session_key
parameter_list|(
name|BIGNUM
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sshd_hostkey_sign
parameter_list|(
name|Key
modifier|*
parameter_list|,
name|Key
modifier|*
parameter_list|,
name|u_char
modifier|*
modifier|*
parameter_list|,
name|u_int
modifier|*
parameter_list|,
name|u_char
modifier|*
parameter_list|,
name|u_int
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* debug messages during authentication */
end_comment

begin_function_decl
name|void
name|auth_debug_add
parameter_list|(
specifier|const
name|char
modifier|*
name|fmt
parameter_list|,
modifier|...
parameter_list|)
function_decl|__attribute__
parameter_list|(
function_decl|(format
parameter_list|(
name|printf
parameter_list|,
function_decl|1
operator|,
function_decl|2
end_function_decl

begin_empty_stmt
unit|)))
empty_stmt|;
end_empty_stmt

begin_function_decl
name|void
name|auth_debug_send
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|auth_debug_reset
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|passwd
modifier|*
name|fakepw
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|sys_auth_passwd
parameter_list|(
name|Authctxt
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|AUTH_FAIL_MSG
value|"Too many authentication failures for %.100s"
end_define

begin_define
define|#
directive|define
name|SKEY_PROMPT
value|"\nS/Key Password: "
end_define

begin_if
if|#
directive|if
name|defined
argument_list|(
name|KRB5
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|HEIMDAL
argument_list|)
end_if

begin_include
include|#
directive|include
file|<krb5.h>
end_include

begin_function_decl
name|krb5_error_code
name|ssh_krb5_cc_gen
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

