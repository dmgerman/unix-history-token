begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $OpenBSD: monitor.h,v 1.17 2012/12/02 20:34:10 djm Exp $ */
end_comment

begin_comment
comment|/*  * Copyright 2002 Niels Provos<provos@citi.umich.edu>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_MONITOR_H_
end_ifndef

begin_define
define|#
directive|define
name|_MONITOR_H_
end_define

begin_comment
comment|/* Please keep *_REQ_* values on even numbers and *_ANS_* on odd numbers */
end_comment

begin_enum
enum|enum
name|monitor_reqtype
block|{
name|MONITOR_REQ_MODULI
init|=
literal|0
block|,
name|MONITOR_ANS_MODULI
init|=
literal|1
block|,
name|MONITOR_REQ_FREE
init|=
literal|2
block|,
name|MONITOR_REQ_AUTHSERV
init|=
literal|4
block|,
name|MONITOR_REQ_SIGN
init|=
literal|6
block|,
name|MONITOR_ANS_SIGN
init|=
literal|7
block|,
name|MONITOR_REQ_PWNAM
init|=
literal|8
block|,
name|MONITOR_ANS_PWNAM
init|=
literal|9
block|,
name|MONITOR_REQ_AUTH2_READ_BANNER
init|=
literal|10
block|,
name|MONITOR_ANS_AUTH2_READ_BANNER
init|=
literal|11
block|,
name|MONITOR_REQ_AUTHPASSWORD
init|=
literal|12
block|,
name|MONITOR_ANS_AUTHPASSWORD
init|=
literal|13
block|,
name|MONITOR_REQ_BSDAUTHQUERY
init|=
literal|14
block|,
name|MONITOR_ANS_BSDAUTHQUERY
init|=
literal|15
block|,
name|MONITOR_REQ_BSDAUTHRESPOND
init|=
literal|16
block|,
name|MONITOR_ANS_BSDAUTHRESPOND
init|=
literal|17
block|,
name|MONITOR_REQ_SKEYQUERY
init|=
literal|18
block|,
name|MONITOR_ANS_SKEYQUERY
init|=
literal|19
block|,
name|MONITOR_REQ_SKEYRESPOND
init|=
literal|20
block|,
name|MONITOR_ANS_SKEYRESPOND
init|=
literal|21
block|,
name|MONITOR_REQ_KEYALLOWED
init|=
literal|22
block|,
name|MONITOR_ANS_KEYALLOWED
init|=
literal|23
block|,
name|MONITOR_REQ_KEYVERIFY
init|=
literal|24
block|,
name|MONITOR_ANS_KEYVERIFY
init|=
literal|25
block|,
name|MONITOR_REQ_KEYEXPORT
init|=
literal|26
block|,
name|MONITOR_REQ_PTY
init|=
literal|28
block|,
name|MONITOR_ANS_PTY
init|=
literal|29
block|,
name|MONITOR_REQ_PTYCLEANUP
init|=
literal|30
block|,
name|MONITOR_REQ_SESSKEY
init|=
literal|32
block|,
name|MONITOR_ANS_SESSKEY
init|=
literal|33
block|,
name|MONITOR_REQ_SESSID
init|=
literal|34
block|,
name|MONITOR_REQ_RSAKEYALLOWED
init|=
literal|36
block|,
name|MONITOR_ANS_RSAKEYALLOWED
init|=
literal|37
block|,
name|MONITOR_REQ_RSACHALLENGE
init|=
literal|38
block|,
name|MONITOR_ANS_RSACHALLENGE
init|=
literal|39
block|,
name|MONITOR_REQ_RSARESPONSE
init|=
literal|40
block|,
name|MONITOR_ANS_RSARESPONSE
init|=
literal|41
block|,
name|MONITOR_REQ_GSSSETUP
init|=
literal|42
block|,
name|MONITOR_ANS_GSSSETUP
init|=
literal|43
block|,
name|MONITOR_REQ_GSSSTEP
init|=
literal|44
block|,
name|MONITOR_ANS_GSSSTEP
init|=
literal|45
block|,
name|MONITOR_REQ_GSSUSEROK
init|=
literal|46
block|,
name|MONITOR_ANS_GSSUSEROK
init|=
literal|47
block|,
name|MONITOR_REQ_GSSCHECKMIC
init|=
literal|48
block|,
name|MONITOR_ANS_GSSCHECKMIC
init|=
literal|49
block|,
name|MONITOR_REQ_TERM
init|=
literal|50
block|,
name|MONITOR_REQ_JPAKE_STEP1
init|=
literal|52
block|,
name|MONITOR_ANS_JPAKE_STEP1
init|=
literal|53
block|,
name|MONITOR_REQ_JPAKE_GET_PWDATA
init|=
literal|54
block|,
name|MONITOR_ANS_JPAKE_GET_PWDATA
init|=
literal|55
block|,
name|MONITOR_REQ_JPAKE_STEP2
init|=
literal|56
block|,
name|MONITOR_ANS_JPAKE_STEP2
init|=
literal|57
block|,
name|MONITOR_REQ_JPAKE_KEY_CONFIRM
init|=
literal|58
block|,
name|MONITOR_ANS_JPAKE_KEY_CONFIRM
init|=
literal|59
block|,
name|MONITOR_REQ_JPAKE_CHECK_CONFIRM
init|=
literal|60
block|,
name|MONITOR_ANS_JPAKE_CHECK_CONFIRM
init|=
literal|61
block|,
name|MONITOR_REQ_PAM_START
init|=
literal|100
block|,
name|MONITOR_REQ_PAM_ACCOUNT
init|=
literal|102
block|,
name|MONITOR_ANS_PAM_ACCOUNT
init|=
literal|103
block|,
name|MONITOR_REQ_PAM_INIT_CTX
init|=
literal|104
block|,
name|MONITOR_ANS_PAM_INIT_CTX
init|=
literal|105
block|,
name|MONITOR_REQ_PAM_QUERY
init|=
literal|106
block|,
name|MONITOR_ANS_PAM_QUERY
init|=
literal|107
block|,
name|MONITOR_REQ_PAM_RESPOND
init|=
literal|108
block|,
name|MONITOR_ANS_PAM_RESPOND
init|=
literal|109
block|,
name|MONITOR_REQ_PAM_FREE_CTX
init|=
literal|110
block|,
name|MONITOR_ANS_PAM_FREE_CTX
init|=
literal|111
block|,
name|MONITOR_REQ_AUDIT_EVENT
init|=
literal|112
block|,
name|MONITOR_REQ_AUDIT_COMMAND
init|=
literal|113
block|,  }
enum|;
end_enum

begin_struct_decl
struct_decl|struct
name|mm_master
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|monitor
block|{
name|int
name|m_recvfd
decl_stmt|;
name|int
name|m_sendfd
decl_stmt|;
name|int
name|m_log_recvfd
decl_stmt|;
name|int
name|m_log_sendfd
decl_stmt|;
name|struct
name|mm_master
modifier|*
name|m_zback
decl_stmt|;
name|struct
name|mm_master
modifier|*
name|m_zlib
decl_stmt|;
name|struct
name|Kex
modifier|*
modifier|*
name|m_pkex
decl_stmt|;
name|pid_t
name|m_pid
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|struct
name|monitor
modifier|*
name|monitor_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|monitor_reinit
parameter_list|(
name|struct
name|monitor
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|monitor_sync
parameter_list|(
name|struct
name|monitor
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_struct_decl
struct_decl|struct
name|Authctxt
struct_decl|;
end_struct_decl

begin_function_decl
name|void
name|monitor_child_preauth
parameter_list|(
name|struct
name|Authctxt
modifier|*
parameter_list|,
name|struct
name|monitor
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|monitor_child_postauth
parameter_list|(
name|struct
name|monitor
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_struct_decl
struct_decl|struct
name|mon_table
struct_decl|;
end_struct_decl

begin_function_decl
name|int
name|monitor_read
parameter_list|(
name|struct
name|monitor
modifier|*
parameter_list|,
name|struct
name|mon_table
modifier|*
parameter_list|,
name|struct
name|mon_table
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Prototypes for request sending and receiving */
end_comment

begin_function_decl
name|void
name|mm_request_send
parameter_list|(
name|int
parameter_list|,
name|enum
name|monitor_reqtype
parameter_list|,
name|Buffer
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mm_request_receive
parameter_list|(
name|int
parameter_list|,
name|Buffer
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mm_request_receive_expect
parameter_list|(
name|int
parameter_list|,
name|enum
name|monitor_reqtype
parameter_list|,
name|Buffer
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _MONITOR_H_ */
end_comment

end_unit

