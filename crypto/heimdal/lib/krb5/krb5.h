begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1997 - 2001 Kungliga Tekniska HÃ¶gskolan  * (Royal Institute of Technology, Stockholm, Sweden).   * All rights reserved.   *  * Redistribution and use in source and binary forms, with or without   * modification, are permitted provided that the following conditions   * are met:   *  * 1. Redistributions of source code must retain the above copyright   *    notice, this list of conditions and the following disclaimer.   *  * 2. Redistributions in binary form must reproduce the above copyright   *    notice, this list of conditions and the following disclaimer in the   *    documentation and/or other materials provided with the distribution.   *  * 3. Neither the name of the Institute nor the names of its contributors   *    may be used to endorse or promote products derived from this software   *    without specific prior written permission.   *  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF   * SUCH DAMAGE.   */
end_comment

begin_comment
comment|/* $Id: krb5.h,v 1.197 2001/09/27 01:31:53 assar Exp $ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__KRB5_H__
end_ifndef

begin_define
define|#
directive|define
name|__KRB5_H__
end_define

begin_include
include|#
directive|include
file|<time.h>
end_include

begin_include
include|#
directive|include
file|<krb5-types.h>
end_include

begin_include
include|#
directive|include
file|<asn1_err.h>
end_include

begin_include
include|#
directive|include
file|<krb5_err.h>
end_include

begin_include
include|#
directive|include
file|<heim_err.h>
end_include

begin_include
include|#
directive|include
file|<k524_err.h>
end_include

begin_include
include|#
directive|include
file|<krb5_asn1.h>
end_include

begin_comment
comment|/* simple constants */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|TRUE
end_ifndef

begin_define
define|#
directive|define
name|TRUE
value|1
end_define

begin_define
define|#
directive|define
name|FALSE
value|0
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_typedef
typedef|typedef
name|int
name|krb5_boolean
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|int32_t
name|krb5_error_code
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|int
name|krb5_kvno
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|u_int32_t
name|krb5_flags
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|void
modifier|*
name|krb5_pointer
typedef|;
end_typedef

begin_typedef
typedef|typedef
specifier|const
name|void
modifier|*
name|krb5_const_pointer
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|octet_string
name|krb5_data
typedef|;
end_typedef

begin_struct_decl
struct_decl|struct
name|krb5_crypto_data
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|struct
name|krb5_crypto_data
modifier|*
name|krb5_crypto
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|CKSUMTYPE
name|krb5_cksumtype
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|Checksum
name|krb5_checksum
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|ENCTYPE
name|krb5_enctype
typedef|;
end_typedef

begin_comment
comment|/* alternative names */
end_comment

begin_enum
enum|enum
block|{
name|ENCTYPE_NULL
init|=
name|ETYPE_NULL
block|,
name|ENCTYPE_DES_CBC_CRC
init|=
name|ETYPE_DES_CBC_CRC
block|,
name|ENCTYPE_DES_CBC_MD4
init|=
name|ETYPE_DES_CBC_MD4
block|,
name|ENCTYPE_DES_CBC_MD5
init|=
name|ETYPE_DES_CBC_MD5
block|,
name|ENCTYPE_DES3_CBC_MD5
init|=
name|ETYPE_DES3_CBC_MD5
block|,
name|ENCTYPE_OLD_DES3_CBC_SHA1
init|=
name|ETYPE_OLD_DES3_CBC_SHA1
block|,
name|ENCTYPE_SIGN_DSA_GENERATE
init|=
name|ETYPE_SIGN_DSA_GENERATE
block|,
name|ENCTYPE_ENCRYPT_RSA_PRIV
init|=
name|ETYPE_ENCRYPT_RSA_PRIV
block|,
name|ENCTYPE_ENCRYPT_RSA_PUB
init|=
name|ETYPE_ENCRYPT_RSA_PUB
block|,
name|ENCTYPE_DES3_CBC_SHA1
init|=
name|ETYPE_DES3_CBC_SHA1
block|,
name|ENCTYPE_ARCFOUR_HMAC_MD5
init|=
name|ETYPE_ARCFOUR_HMAC_MD5
block|,
name|ENCTYPE_ARCFOUR_HMAC_MD5_56
init|=
name|ETYPE_ARCFOUR_HMAC_MD5_56
block|,
name|ENCTYPE_ENCTYPE_PK_CROSS
init|=
name|ETYPE_ENCTYPE_PK_CROSS
block|,
name|ENCTYPE_DES_CBC_NONE
init|=
name|ETYPE_DES_CBC_NONE
block|,
name|ENCTYPE_DES3_CBC_NONE
init|=
name|ETYPE_DES3_CBC_NONE
block|,
name|ENCTYPE_DES_CFB64_NONE
init|=
name|ETYPE_DES_CFB64_NONE
block|,
name|ENCTYPE_DES_PCBC_NONE
init|=
name|ETYPE_DES_PCBC_NONE
block|,
name|ENCTYPE_DES3_CBC_NONE_IVEC
init|=
name|ETYPE_DES3_CBC_NONE_IVEC
block|}
enum|;
end_enum

begin_typedef
typedef|typedef
name|PADATA_TYPE
name|krb5_preauthtype
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|krb5_key_usage
block|{
name|KRB5_KU_PA_ENC_TIMESTAMP
init|=
literal|1
block|,
comment|/* AS-REQ PA-ENC-TIMESTAMP padata timestamp, encrypted with the        client key (section 5.4.1) */
name|KRB5_KU_TICKET
init|=
literal|2
block|,
comment|/* AS-REP Ticket and TGS-REP Ticket (includes tgs session key or        application session key), encrypted with the service key        (section 5.4.2) */
name|KRB5_KU_AS_REP_ENC_PART
init|=
literal|3
block|,
comment|/* AS-REP encrypted part (includes tgs session key or application        session key), encrypted with the client key (section 5.4.2) */
name|KRB5_KU_TGS_REQ_AUTH_DAT_SESSION
init|=
literal|4
block|,
comment|/* TGS-REQ KDC-REQ-BODY AuthorizationData, encrypted with the tgs        session key (section 5.4.1) */
name|KRB5_KU_TGS_REQ_AUTH_DAT_SUBKEY
init|=
literal|5
block|,
comment|/* TGS-REQ KDC-REQ-BODY AuthorizationData, encrypted with the tgs           authenticator subkey (section 5.4.1) */
name|KRB5_KU_TGS_REQ_AUTH_CKSUM
init|=
literal|6
block|,
comment|/* TGS-REQ PA-TGS-REQ padata AP-REQ Authenticator cksum, keyed        with the tgs session key (sections 5.3.2, 5.4.1) */
name|KRB5_KU_TGS_REQ_AUTH
init|=
literal|7
block|,
comment|/* TGS-REQ PA-TGS-REQ padata AP-REQ Authenticator (includes tgs        authenticator subkey), encrypted with the tgs session key        (section 5.3.2) */
name|KRB5_KU_TGS_REP_ENC_PART_SESSION
init|=
literal|8
block|,
comment|/* TGS-REP encrypted part (includes application session key),        encrypted with the tgs session key (section 5.4.2) */
name|KRB5_KU_TGS_REP_ENC_PART_SUB_KEY
init|=
literal|9
block|,
comment|/* TGS-REP encrypted part (includes application session key),        encrypted with the tgs authenticator subkey (section 5.4.2) */
name|KRB5_KU_AP_REQ_AUTH_CKSUM
init|=
literal|10
block|,
comment|/* AP-REQ Authenticator cksum, keyed with the application session        key (section 5.3.2) */
name|KRB5_KU_AP_REQ_AUTH
init|=
literal|11
block|,
comment|/* AP-REQ Authenticator (includes application authenticator        subkey), encrypted with the application session key (section        5.3.2) */
name|KRB5_KU_AP_REQ_ENC_PART
init|=
literal|12
block|,
comment|/* AP-REP encrypted part (includes application session subkey),        encrypted with the application session key (section 5.5.2) */
name|KRB5_KU_KRB_PRIV
init|=
literal|13
block|,
comment|/* KRB-PRIV encrypted part, encrypted with a key chosen by the        application (section 5.7.1) */
name|KRB5_KU_KRB_CRED
init|=
literal|14
block|,
comment|/* KRB-CRED encrypted part, encrypted with a key chosen by the        application (section 5.8.1) */
name|KRB5_KU_KRB_SAFE_CKSUM
init|=
literal|15
block|,
comment|/* KRB-SAFE cksum, keyed with a key chosen by the application        (section 5.6.1) */
name|KRB5_KU_OTHER_ENCRYPTED
init|=
literal|16
block|,
comment|/* Data which is defined in some specification outside of        Kerberos to be encrypted using an RFC1510 encryption type. */
name|KRB5_KU_OTHER_CKSUM
init|=
literal|17
block|,
comment|/* Data which is defined in some specification outside of        Kerberos to be checksummed using an RFC1510 checksum type. */
name|KRB5_KU_KRB_ERROR
init|=
literal|18
block|,
comment|/* Krb-error checksum */
name|KRB5_KU_AD_KDC_ISSUED
init|=
literal|19
block|,
comment|/* AD-KDCIssued checksum */
name|KRB5_KU_MANDATORY_TICKET_EXTENSION
init|=
literal|20
block|,
comment|/* Checksum for Mandatory Ticket Extensions */
name|KRB5_KU_AUTH_DATA_TICKET_EXTENSION
init|=
literal|21
block|,
comment|/* Checksum in Authorization Data in Ticket Extensions */
name|KRB5_KU_USAGE_SEAL
init|=
literal|22
block|,
comment|/* seal in GSSAPI krb5 mechanism */
name|KRB5_KU_USAGE_SIGN
init|=
literal|23
block|,
comment|/* sign in GSSAPI krb5 mechanism */
name|KRB5_KU_USAGE_SEQ
init|=
literal|24
comment|/* SEQ in GSSAPI krb5 mechanism */
block|}
name|krb5_key_usage
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|krb5_key_usage
name|krb5_keyusage
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|krb5_salttype
block|{
name|KRB5_PW_SALT
init|=
name|KRB5_PADATA_PW_SALT
block|,
name|KRB5_AFS3_SALT
init|=
name|KRB5_PADATA_AFS3_SALT
block|}
name|krb5_salttype
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|krb5_salt
block|{
name|krb5_salttype
name|salttype
decl_stmt|;
name|krb5_data
name|saltvalue
decl_stmt|;
block|}
name|krb5_salt
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|ETYPE_INFO
name|krb5_preauthinfo
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|krb5_preauthtype
name|type
decl_stmt|;
name|krb5_preauthinfo
name|info
decl_stmt|;
comment|/* list of preauthinfo for this type */
block|}
name|krb5_preauthdata_entry
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|krb5_preauthdata
block|{
name|unsigned
name|len
decl_stmt|;
name|krb5_preauthdata_entry
modifier|*
name|val
decl_stmt|;
block|}
name|krb5_preauthdata
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|krb5_address_type
block|{
name|KRB5_ADDRESS_INET
init|=
literal|2
block|,
name|KRB5_ADDRESS_INET6
init|=
literal|24
block|,
name|KRB5_ADDRESS_ADDRPORT
init|=
literal|256
block|,
name|KRB5_ADDRESS_IPPORT
init|=
literal|257
block|}
name|krb5_address_type
typedef|;
end_typedef

begin_enum
enum|enum
block|{
name|AP_OPTS_USE_SESSION_KEY
init|=
literal|1
block|,
name|AP_OPTS_MUTUAL_REQUIRED
init|=
literal|2
block|}
enum|;
end_enum

begin_typedef
typedef|typedef
name|HostAddress
name|krb5_address
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|HostAddresses
name|krb5_addresses
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
name|krb5_keytype
block|{
name|KEYTYPE_NULL
init|=
literal|0
block|,
name|KEYTYPE_DES
init|=
literal|1
block|,
name|KEYTYPE_DES3
init|=
literal|7
block|,
name|KEYTYPE_ARCFOUR
init|=
literal|23
block|}
name|krb5_keytype
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|EncryptionKey
name|krb5_keyblock
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|AP_REQ
name|krb5_ap_req
typedef|;
end_typedef

begin_struct_decl
struct_decl|struct
name|krb5_cc_ops
struct_decl|;
end_struct_decl

begin_define
define|#
directive|define
name|KRB5_DEFAULT_CCFILE_ROOT
value|"/tmp/krb5cc_"
end_define

begin_define
define|#
directive|define
name|KRB5_DEFAULT_CCROOT
value|"FILE:" KRB5_DEFAULT_CCFILE_ROOT
end_define

begin_define
define|#
directive|define
name|KRB5_ACCEPT_NULL_ADDRESSES
parameter_list|(
name|C
parameter_list|)
define|\
value|krb5_config_get_bool_default((C), NULL, TRUE, 			 \ 				 "libdefaults", "accept_null_addresses", \ 				 NULL)
end_define

begin_typedef
typedef|typedef
name|void
modifier|*
name|krb5_cc_cursor
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|krb5_ccache_data
block|{
specifier|const
name|struct
name|krb5_cc_ops
modifier|*
name|ops
decl_stmt|;
name|krb5_data
name|data
decl_stmt|;
block|}
name|krb5_ccache_data
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|krb5_ccache_data
modifier|*
name|krb5_ccache
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|krb5_context_data
modifier|*
name|krb5_context
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|Realm
name|krb5_realm
typedef|;
end_typedef

begin_typedef
typedef|typedef
specifier|const
name|char
modifier|*
name|krb5_const_realm
typedef|;
end_typedef

begin_comment
comment|/* stupid language */
end_comment

begin_define
define|#
directive|define
name|krb5_realm_length
parameter_list|(
name|r
parameter_list|)
value|strlen(r)
end_define

begin_define
define|#
directive|define
name|krb5_realm_data
parameter_list|(
name|r
parameter_list|)
value|(r)
end_define

begin_typedef
typedef|typedef
name|Principal
name|krb5_principal_data
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|struct
name|Principal
modifier|*
name|krb5_principal
typedef|;
end_typedef

begin_typedef
typedef|typedef
specifier|const
name|struct
name|Principal
modifier|*
name|krb5_const_principal
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|time_t
name|krb5_deltat
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|time_t
name|krb5_timestamp
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|krb5_times
block|{
name|krb5_timestamp
name|authtime
decl_stmt|;
name|krb5_timestamp
name|starttime
decl_stmt|;
name|krb5_timestamp
name|endtime
decl_stmt|;
name|krb5_timestamp
name|renew_till
decl_stmt|;
block|}
name|krb5_times
typedef|;
end_typedef

begin_typedef
typedef|typedef
union|union
block|{
name|TicketFlags
name|b
decl_stmt|;
name|krb5_flags
name|i
decl_stmt|;
block|}
name|krb5_ticket_flags
typedef|;
end_typedef

begin_comment
comment|/* options for krb5_get_in_tkt() */
end_comment

begin_define
define|#
directive|define
name|KDC_OPT_FORWARDABLE
value|(1<< 1)
end_define

begin_define
define|#
directive|define
name|KDC_OPT_FORWARDED
value|(1<< 2)
end_define

begin_define
define|#
directive|define
name|KDC_OPT_PROXIABLE
value|(1<< 3)
end_define

begin_define
define|#
directive|define
name|KDC_OPT_PROXY
value|(1<< 4)
end_define

begin_define
define|#
directive|define
name|KDC_OPT_ALLOW_POSTDATE
value|(1<< 5)
end_define

begin_define
define|#
directive|define
name|KDC_OPT_POSTDATED
value|(1<< 6)
end_define

begin_define
define|#
directive|define
name|KDC_OPT_RENEWABLE
value|(1<< 8)
end_define

begin_define
define|#
directive|define
name|KDC_OPT_REQUEST_ANONYMOUS
value|(1<< 14)
end_define

begin_define
define|#
directive|define
name|KDC_OPT_DISABLE_TRANSITED_CHECK
value|(1<< 26)
end_define

begin_define
define|#
directive|define
name|KDC_OPT_RENEWABLE_OK
value|(1<< 27)
end_define

begin_define
define|#
directive|define
name|KDC_OPT_ENC_TKT_IN_SKEY
value|(1<< 28)
end_define

begin_define
define|#
directive|define
name|KDC_OPT_RENEW
value|(1<< 30)
end_define

begin_define
define|#
directive|define
name|KDC_OPT_VALIDATE
value|(1<< 31)
end_define

begin_typedef
typedef|typedef
union|union
block|{
name|KDCOptions
name|b
decl_stmt|;
name|krb5_flags
name|i
decl_stmt|;
block|}
name|krb5_kdc_flags
typedef|;
end_typedef

begin_comment
comment|/* flags for krb5_verify_ap_req */
end_comment

begin_define
define|#
directive|define
name|KRB5_VERIFY_AP_REQ_IGNORE_INVALID
value|(1<< 0)
end_define

begin_define
define|#
directive|define
name|KRB5_GC_CACHED
value|(1U<< 0)
end_define

begin_define
define|#
directive|define
name|KRB5_GC_USER_USER
value|(1U<< 1)
end_define

begin_comment
comment|/* constants for compare_creds (and cc_retrieve_cred) */
end_comment

begin_define
define|#
directive|define
name|KRB5_TC_DONT_MATCH_REALM
value|(1U<< 31)
end_define

begin_define
define|#
directive|define
name|KRB5_TC_MATCH_KEYTYPE
value|(1U<< 30)
end_define

begin_typedef
typedef|typedef
name|AuthorizationData
name|krb5_authdata
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|KRB_ERROR
name|krb5_error
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|krb5_creds
block|{
name|krb5_principal
name|client
decl_stmt|;
name|krb5_principal
name|server
decl_stmt|;
name|krb5_keyblock
name|session
decl_stmt|;
name|krb5_times
name|times
decl_stmt|;
name|krb5_data
name|ticket
decl_stmt|;
name|krb5_data
name|second_ticket
decl_stmt|;
name|krb5_authdata
name|authdata
decl_stmt|;
name|krb5_addresses
name|addresses
decl_stmt|;
name|krb5_ticket_flags
name|flags
decl_stmt|;
block|}
name|krb5_creds
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|krb5_cc_ops
block|{
name|char
modifier|*
name|prefix
decl_stmt|;
name|char
modifier|*
function_decl|(
modifier|*
name|get_name
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|resolve
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|gen_new
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|init
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|,
name|krb5_principal
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|destroy
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|close
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|store
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|,
name|krb5_creds
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|retrieve
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|,
name|krb5_flags
parameter_list|,
name|krb5_creds
modifier|*
parameter_list|,
name|krb5_creds
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|get_princ
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|,
name|krb5_principal
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|get_first
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|,
name|krb5_cc_cursor
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|get_next
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|,
name|krb5_cc_cursor
modifier|*
parameter_list|,
name|krb5_creds
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|end_get
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|,
name|krb5_cc_cursor
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|remove_cred
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|,
name|krb5_flags
parameter_list|,
name|krb5_creds
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|set_flags
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|,
name|krb5_flags
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|get_version
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_ccache
parameter_list|)
function_decl|;
block|}
name|krb5_cc_ops
typedef|;
end_typedef

begin_struct_decl
struct_decl|struct
name|krb5_log_facility
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|krb5_config_binding
block|{
enum|enum
block|{
name|krb5_config_string
block|,
name|krb5_config_list
block|}
name|type
enum|;
name|char
modifier|*
name|name
decl_stmt|;
name|struct
name|krb5_config_binding
modifier|*
name|next
decl_stmt|;
union|union
block|{
name|char
modifier|*
name|string
decl_stmt|;
name|struct
name|krb5_config_binding
modifier|*
name|list
decl_stmt|;
name|void
modifier|*
name|generic
decl_stmt|;
block|}
name|u
union|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|krb5_config_binding
name|krb5_config_binding
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|krb5_config_binding
name|krb5_config_section
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|krb5_context_data
block|{
name|krb5_enctype
modifier|*
name|etypes
decl_stmt|;
name|krb5_enctype
modifier|*
name|etypes_des
decl_stmt|;
name|char
modifier|*
modifier|*
name|default_realms
decl_stmt|;
name|time_t
name|max_skew
decl_stmt|;
name|time_t
name|kdc_timeout
decl_stmt|;
name|unsigned
name|max_retries
decl_stmt|;
name|int32_t
name|kdc_sec_offset
decl_stmt|;
name|int32_t
name|kdc_usec_offset
decl_stmt|;
name|krb5_config_section
modifier|*
name|cf
decl_stmt|;
name|struct
name|et_list
modifier|*
name|et_list
decl_stmt|;
name|struct
name|krb5_log_facility
modifier|*
name|warn_dest
decl_stmt|;
name|krb5_cc_ops
modifier|*
name|cc_ops
decl_stmt|;
name|int
name|num_cc_ops
decl_stmt|;
specifier|const
name|char
modifier|*
name|http_proxy
decl_stmt|;
specifier|const
name|char
modifier|*
name|time_fmt
decl_stmt|;
name|krb5_boolean
name|log_utc
decl_stmt|;
specifier|const
name|char
modifier|*
name|default_keytab
decl_stmt|;
specifier|const
name|char
modifier|*
name|default_keytab_modify
decl_stmt|;
name|krb5_boolean
name|use_admin_kdc
decl_stmt|;
name|krb5_addresses
modifier|*
name|extra_addresses
decl_stmt|;
name|krb5_boolean
name|scan_interfaces
decl_stmt|;
comment|/* `ifconfig -a' */
name|krb5_boolean
name|srv_lookup
decl_stmt|;
comment|/* do SRV lookups */
name|krb5_boolean
name|srv_try_txt
decl_stmt|;
comment|/* try TXT records also */
name|int32_t
name|fcache_vno
decl_stmt|;
comment|/* create cache files w/ this                                            version */
name|int
name|num_kt_types
decl_stmt|;
comment|/* # of registered keytab types */
name|struct
name|krb5_keytab_data
modifier|*
name|kt_types
decl_stmt|;
comment|/* registered keytab types */
specifier|const
name|char
modifier|*
name|date_fmt
decl_stmt|;
name|char
modifier|*
name|error_string
decl_stmt|;
name|char
name|error_buf
index|[
literal|256
index|]
decl_stmt|;
name|krb5_addresses
modifier|*
name|ignore_addresses
decl_stmt|;
block|}
name|krb5_context_data
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|krb5_ticket
block|{
name|EncTicketPart
name|ticket
decl_stmt|;
name|krb5_principal
name|client
decl_stmt|;
name|krb5_principal
name|server
decl_stmt|;
block|}
name|krb5_ticket
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|Authenticator
name|krb5_authenticator_data
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|krb5_authenticator_data
modifier|*
name|krb5_authenticator
typedef|;
end_typedef

begin_struct_decl
struct_decl|struct
name|krb5_rcache_data
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|struct
name|krb5_rcache_data
modifier|*
name|krb5_rcache
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|Authenticator
name|krb5_donot_replay
typedef|;
end_typedef

begin_define
define|#
directive|define
name|KRB5_STORAGE_HOST_BYTEORDER
value|0x01
end_define

begin_comment
comment|/* old */
end_comment

begin_define
define|#
directive|define
name|KRB5_STORAGE_PRINCIPAL_WRONG_NUM_COMPONENTS
value|0x02
end_define

begin_define
define|#
directive|define
name|KRB5_STORAGE_PRINCIPAL_NO_NAME_TYPE
value|0x04
end_define

begin_define
define|#
directive|define
name|KRB5_STORAGE_KEYBLOCK_KEYTYPE_TWICE
value|0x08
end_define

begin_define
define|#
directive|define
name|KRB5_STORAGE_BYTEORDER_MASK
value|0x60
end_define

begin_define
define|#
directive|define
name|KRB5_STORAGE_BYTEORDER_BE
value|0x00
end_define

begin_comment
comment|/* default */
end_comment

begin_define
define|#
directive|define
name|KRB5_STORAGE_BYTEORDER_LE
value|0x20
end_define

begin_define
define|#
directive|define
name|KRB5_STORAGE_BYTEORDER_HOST
value|0x40
end_define

begin_typedef
typedef|typedef
struct|struct
name|krb5_storage
block|{
name|void
modifier|*
name|data
decl_stmt|;
name|ssize_t
function_decl|(
modifier|*
name|fetch
function_decl|)
parameter_list|(
name|struct
name|krb5_storage
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
name|ssize_t
function_decl|(
modifier|*
name|store
function_decl|)
parameter_list|(
name|struct
name|krb5_storage
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
name|off_t
function_decl|(
modifier|*
name|seek
function_decl|)
parameter_list|(
name|struct
name|krb5_storage
modifier|*
parameter_list|,
name|off_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|free
function_decl|)
parameter_list|(
name|struct
name|krb5_storage
modifier|*
parameter_list|)
function_decl|;
name|krb5_flags
name|flags
decl_stmt|;
block|}
name|krb5_storage
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|krb5_keytab_entry
block|{
name|krb5_principal
name|principal
decl_stmt|;
name|krb5_kvno
name|vno
decl_stmt|;
name|krb5_keyblock
name|keyblock
decl_stmt|;
name|u_int32_t
name|timestamp
decl_stmt|;
block|}
name|krb5_keytab_entry
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|krb5_kt_cursor
block|{
name|int
name|fd
decl_stmt|;
name|krb5_storage
modifier|*
name|sp
decl_stmt|;
name|void
modifier|*
name|data
decl_stmt|;
block|}
name|krb5_kt_cursor
typedef|;
end_typedef

begin_struct_decl
struct_decl|struct
name|krb5_keytab_data
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|struct
name|krb5_keytab_data
modifier|*
name|krb5_keytab
typedef|;
end_typedef

begin_struct
struct|struct
name|krb5_keytab_data
block|{
name|char
modifier|*
name|prefix
decl_stmt|;
name|krb5_error_code
function_decl|(
modifier|*
name|resolve
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|krb5_keytab
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|get_name
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_keytab
parameter_list|,
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|close
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_keytab
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|get
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_keytab
parameter_list|,
name|krb5_const_principal
parameter_list|,
name|krb5_kvno
parameter_list|,
name|krb5_enctype
parameter_list|,
name|krb5_keytab_entry
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|start_seq_get
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_keytab
parameter_list|,
name|krb5_kt_cursor
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|next_entry
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_keytab
parameter_list|,
name|krb5_keytab_entry
modifier|*
parameter_list|,
name|krb5_kt_cursor
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|end_seq_get
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_keytab
parameter_list|,
name|krb5_kt_cursor
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|add
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_keytab
parameter_list|,
name|krb5_keytab_entry
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|remove
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|krb5_keytab
parameter_list|,
name|krb5_keytab_entry
modifier|*
parameter_list|)
function_decl|;
name|void
modifier|*
name|data
decl_stmt|;
name|int32_t
name|version
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|krb5_keytab_data
name|krb5_kt_ops
typedef|;
end_typedef

begin_struct
struct|struct
name|krb5_keytab_key_proc_args
block|{
name|krb5_keytab
name|keytab
decl_stmt|;
name|krb5_principal
name|principal
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|krb5_keytab_key_proc_args
name|krb5_keytab_key_proc_args
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|krb5_replay_data
block|{
name|krb5_timestamp
name|timestamp
decl_stmt|;
name|u_int32_t
name|usec
decl_stmt|;
name|u_int32_t
name|seq
decl_stmt|;
block|}
name|krb5_replay_data
typedef|;
end_typedef

begin_comment
comment|/* flags for krb5_auth_con_setflags */
end_comment

begin_enum
enum|enum
block|{
name|KRB5_AUTH_CONTEXT_DO_TIME
init|=
literal|1
block|,
name|KRB5_AUTH_CONTEXT_RET_TIME
init|=
literal|2
block|,
name|KRB5_AUTH_CONTEXT_DO_SEQUENCE
init|=
literal|4
block|,
name|KRB5_AUTH_CONTEXT_RET_SEQUENCE
init|=
literal|8
block|,
name|KRB5_AUTH_CONTEXT_PERMIT_ALL
init|=
literal|16
block|}
enum|;
end_enum

begin_comment
comment|/* flags for krb5_auth_con_genaddrs */
end_comment

begin_enum
enum|enum
block|{
name|KRB5_AUTH_CONTEXT_GENERATE_LOCAL_ADDR
init|=
literal|1
block|,
name|KRB5_AUTH_CONTEXT_GENERATE_LOCAL_FULL_ADDR
init|=
literal|3
block|,
name|KRB5_AUTH_CONTEXT_GENERATE_REMOTE_ADDR
init|=
literal|4
block|,
name|KRB5_AUTH_CONTEXT_GENERATE_REMOTE_FULL_ADDR
init|=
literal|12
block|}
enum|;
end_enum

begin_typedef
typedef|typedef
struct|struct
name|krb5_auth_context_data
block|{
name|unsigned
name|int
name|flags
decl_stmt|;
name|krb5_address
modifier|*
name|local_address
decl_stmt|;
name|krb5_address
modifier|*
name|remote_address
decl_stmt|;
name|int16_t
name|local_port
decl_stmt|;
name|int16_t
name|remote_port
decl_stmt|;
name|krb5_keyblock
modifier|*
name|keyblock
decl_stmt|;
name|krb5_keyblock
modifier|*
name|local_subkey
decl_stmt|;
name|krb5_keyblock
modifier|*
name|remote_subkey
decl_stmt|;
name|u_int32_t
name|local_seqnumber
decl_stmt|;
name|u_int32_t
name|remote_seqnumber
decl_stmt|;
name|krb5_authenticator
name|authenticator
decl_stmt|;
name|krb5_pointer
name|i_vector
decl_stmt|;
name|krb5_rcache
name|rcache
decl_stmt|;
name|krb5_keytype
name|keytype
decl_stmt|;
comment|/* Â¿requested key type ? */
name|krb5_cksumtype
name|cksumtype
decl_stmt|;
comment|/* Â¡requested checksum type! */
block|}
name|krb5_auth_context_data
operator|,
typedef|*
name|krb5_auth_context
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|KDC_REP
name|kdc_rep
decl_stmt|;
name|EncKDCRepPart
name|enc_part
decl_stmt|;
name|KRB_ERROR
name|error
decl_stmt|;
block|}
name|krb5_kdc_rep
typedef|;
end_typedef

begin_decl_stmt
specifier|extern
specifier|const
name|char
modifier|*
name|heimdal_version
decl_stmt|,
modifier|*
name|heimdal_long_version
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|krb5_log_log_func_t
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|krb5_log_close_func_t
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|krb5_log_facility
block|{
specifier|const
name|char
modifier|*
name|program
decl_stmt|;
name|int
name|len
decl_stmt|;
name|struct
name|facility
modifier|*
name|val
decl_stmt|;
block|}
name|krb5_log_facility
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|EncAPRepPart
name|krb5_ap_rep_enc_part
typedef|;
end_typedef

begin_define
define|#
directive|define
name|KRB5_RECVAUTH_IGNORE_VERSION
value|1
end_define

begin_define
define|#
directive|define
name|KRB5_SENDAUTH_VERSION
value|"KRB5_SENDAUTH_V1.0"
end_define

begin_define
define|#
directive|define
name|KRB5_TGS_NAME_SIZE
value|(6)
end_define

begin_define
define|#
directive|define
name|KRB5_TGS_NAME
value|("krbtgt")
end_define

begin_comment
comment|/* variables */
end_comment

begin_decl_stmt
specifier|extern
specifier|const
name|char
name|krb5_config_file
index|[]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|char
name|krb5_defkeyname
index|[]
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
enum|enum
block|{
name|KRB5_PROMPT_TYPE_PASSWORD
init|=
literal|0x1
block|,
name|KRB5_PROMPT_TYPE_NEW_PASSWORD
init|=
literal|0x2
block|,
name|KRB5_PROMPT_TYPE_NEW_PASSWORD_AGAIN
init|=
literal|0x3
block|,
name|KRB5_PROMPT_TYPE_PREAUTH
init|=
literal|0x4
block|}
name|krb5_prompt_type
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_krb5_prompt
block|{
name|char
modifier|*
name|prompt
decl_stmt|;
name|int
name|hidden
decl_stmt|;
name|krb5_data
modifier|*
name|reply
decl_stmt|;
name|krb5_prompt_type
name|type
decl_stmt|;
block|}
name|krb5_prompt
typedef|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|krb5_prompter_fct
function_decl|)
parameter_list|(
name|krb5_context
name|context
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
name|banner
parameter_list|,
name|int
name|num_prompts
parameter_list|,
name|krb5_prompt
name|prompts
index|[]
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|krb5_error_code
function_decl|(
modifier|*
name|krb5_key_proc
function_decl|)
parameter_list|(
name|krb5_context
name|context
parameter_list|,
name|krb5_enctype
name|type
parameter_list|,
name|krb5_salt
name|salt
parameter_list|,
name|krb5_const_pointer
name|keyseed
parameter_list|,
name|krb5_keyblock
modifier|*
modifier|*
name|key
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|krb5_error_code
function_decl|(
modifier|*
name|krb5_decrypt_proc
function_decl|)
parameter_list|(
name|krb5_context
name|context
parameter_list|,
name|krb5_keyblock
modifier|*
name|key
parameter_list|,
name|krb5_key_usage
name|usage
parameter_list|,
name|krb5_const_pointer
name|decrypt_arg
parameter_list|,
name|krb5_kdc_rep
modifier|*
name|dec_rep
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_krb5_get_init_creds_opt
block|{
name|krb5_flags
name|flags
decl_stmt|;
name|krb5_deltat
name|tkt_life
decl_stmt|;
name|krb5_deltat
name|renew_life
decl_stmt|;
name|int
name|forwardable
decl_stmt|;
name|int
name|proxiable
decl_stmt|;
name|int
name|anonymous
decl_stmt|;
name|krb5_enctype
modifier|*
name|etype_list
decl_stmt|;
name|int
name|etype_list_length
decl_stmt|;
name|krb5_addresses
modifier|*
name|address_list
decl_stmt|;
if|#
directive|if
literal|0
comment|/* this is the MIT-way */
block|krb5_address **address_list;
endif|#
directive|endif
comment|/* XXX the next three should not be used, as they may be        removed later */
name|krb5_preauthtype
modifier|*
name|preauth_list
decl_stmt|;
name|int
name|preauth_list_length
decl_stmt|;
name|krb5_data
modifier|*
name|salt
decl_stmt|;
block|}
name|krb5_get_init_creds_opt
typedef|;
end_typedef

begin_define
define|#
directive|define
name|KRB5_GET_INIT_CREDS_OPT_TKT_LIFE
value|0x0001
end_define

begin_define
define|#
directive|define
name|KRB5_GET_INIT_CREDS_OPT_RENEW_LIFE
value|0x0002
end_define

begin_define
define|#
directive|define
name|KRB5_GET_INIT_CREDS_OPT_FORWARDABLE
value|0x0004
end_define

begin_define
define|#
directive|define
name|KRB5_GET_INIT_CREDS_OPT_PROXIABLE
value|0x0008
end_define

begin_define
define|#
directive|define
name|KRB5_GET_INIT_CREDS_OPT_ETYPE_LIST
value|0x0010
end_define

begin_define
define|#
directive|define
name|KRB5_GET_INIT_CREDS_OPT_ADDRESS_LIST
value|0x0020
end_define

begin_define
define|#
directive|define
name|KRB5_GET_INIT_CREDS_OPT_PREAUTH_LIST
value|0x0040
end_define

begin_define
define|#
directive|define
name|KRB5_GET_INIT_CREDS_OPT_SALT
value|0x0080
end_define

begin_define
define|#
directive|define
name|KRB5_GET_INIT_CREDS_OPT_ANONYMOUS
value|0x0100
end_define

begin_typedef
typedef|typedef
struct|struct
name|_krb5_verify_init_creds_opt
block|{
name|krb5_flags
name|flags
decl_stmt|;
name|int
name|ap_req_nofail
decl_stmt|;
block|}
name|krb5_verify_init_creds_opt
typedef|;
end_typedef

begin_define
define|#
directive|define
name|KRB5_VERIFY_INIT_CREDS_OPT_AP_REQ_NOFAIL
value|0x0001
end_define

begin_typedef
typedef|typedef
struct|struct
name|krb5_verify_opt
block|{
name|unsigned
name|int
name|flags
decl_stmt|;
name|krb5_ccache
name|ccache
decl_stmt|;
name|krb5_keytab
name|keytab
decl_stmt|;
name|krb5_boolean
name|secure
decl_stmt|;
specifier|const
name|char
modifier|*
name|service
decl_stmt|;
block|}
name|krb5_verify_opt
typedef|;
end_typedef

begin_define
define|#
directive|define
name|KRB5_VERIFY_LREALMS
value|1
end_define

begin_define
define|#
directive|define
name|KRB5_VERIFY_NO_ADDRESSES
value|2
end_define

begin_decl_stmt
specifier|extern
specifier|const
name|krb5_cc_ops
name|krb5_fcc_ops
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|krb5_cc_ops
name|krb5_mcc_ops
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|krb5_kt_ops
name|krb5_fkt_ops
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|krb5_kt_ops
name|krb5_mkt_ops
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|krb5_kt_ops
name|krb5_akf_ops
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|krb5_kt_ops
name|krb4_fkt_ops
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|krb5_kt_ops
name|krb5_srvtab_fkt_ops
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
specifier|const
name|krb5_kt_ops
name|krb5_any_ops
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|KRB5_KPASSWD_SUCCESS
value|0
end_define

begin_define
define|#
directive|define
name|KRB5_KPASSWD_MALFORMED
value|1
end_define

begin_define
define|#
directive|define
name|KRB5_KPASSWD_HARDERROR
value|2
end_define

begin_define
define|#
directive|define
name|KRB5_KPASSWD_AUTHERROR
value|3
end_define

begin_define
define|#
directive|define
name|KRB5_KPASSWD_SOFTERROR
value|4
end_define

begin_define
define|#
directive|define
name|KPASSWD_PORT
value|464
end_define

begin_comment
comment|/* types for the new krbhst interface */
end_comment

begin_struct_decl
struct_decl|struct
name|krb5_krbhst_data
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|struct
name|krb5_krbhst_data
modifier|*
name|krb5_krbhst_handle
typedef|;
end_typedef

begin_define
define|#
directive|define
name|KRB5_KRBHST_KDC
value|1
end_define

begin_define
define|#
directive|define
name|KRB5_KRBHST_ADMIN
value|2
end_define

begin_define
define|#
directive|define
name|KRB5_KRBHST_CHANGEPW
value|3
end_define

begin_define
define|#
directive|define
name|KRB5_KRBHST_KRB524
value|4
end_define

begin_typedef
typedef|typedef
struct|struct
name|krb5_krbhst_info
block|{
enum|enum
block|{
name|KRB5_KRBHST_UDP
block|,
name|KRB5_KRBHST_TCP
block|,
name|KRB5_KRBHST_HTTP
block|}
name|proto
enum|;
name|unsigned
name|short
name|port
decl_stmt|;
name|unsigned
name|short
name|def_port
decl_stmt|;
name|struct
name|addrinfo
modifier|*
name|ai
decl_stmt|;
name|struct
name|krb5_krbhst_info
modifier|*
name|next
decl_stmt|;
name|char
name|hostname
index|[
literal|1
index|]
decl_stmt|;
comment|/* has to come last */
block|}
name|krb5_krbhst_info
typedef|;
end_typedef

begin_struct_decl
struct_decl|struct
name|credentials
struct_decl|;
end_struct_decl

begin_comment
comment|/* this is to keep the compiler happy */
end_comment

begin_struct_decl
struct_decl|struct
name|getargs
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|sockaddr
struct_decl|;
end_struct_decl

begin_include
include|#
directive|include
file|<krb5-protos.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __KRB5_H__ */
end_comment

end_unit

