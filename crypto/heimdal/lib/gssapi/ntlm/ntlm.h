begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2006 - 2007 Kungliga Tekniska HÃ¶gskolan  * (Royal Institute of Technology, Stockholm, Sweden).   * All rights reserved.   *  * Redistribution and use in source and binary forms, with or without   * modification, are permitted provided that the following conditions   * are met:   *  * 1. Redistributions of source code must retain the above copyright   *    notice, this list of conditions and the following disclaimer.   *  * 2. Redistributions in binary form must reproduce the above copyright   *    notice, this list of conditions and the following disclaimer in the   *    documentation and/or other materials provided with the distribution.   *  * 3. Neither the name of the Institute nor the names of its contributors   *    may be used to endorse or promote products derived from this software   *    without specific prior written permission.   *  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF   * SUCH DAMAGE.   */
end_comment

begin_comment
comment|/* $Id: ntlm.h 22373 2007-12-28 18:36:06Z lha $ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|NTLM_NTLM_H
end_ifndef

begin_define
define|#
directive|define
name|NTLM_NTLM_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|HAVE_CONFIG_H
end_ifdef

begin_include
include|#
directive|include
file|<config.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_include
include|#
directive|include
file|<stdlib.h>
end_include

begin_include
include|#
directive|include
file|<assert.h>
end_include

begin_include
include|#
directive|include
file|<string.h>
end_include

begin_include
include|#
directive|include
file|<errno.h>
end_include

begin_include
include|#
directive|include
file|<gssapi.h>
end_include

begin_include
include|#
directive|include
file|<gssapi_mech.h>
end_include

begin_include
include|#
directive|include
file|<krb5.h>
end_include

begin_include
include|#
directive|include
file|<roken.h>
end_include

begin_include
include|#
directive|include
file|<heim_threads.h>
end_include

begin_include
include|#
directive|include
file|<heimntlm.h>
end_include

begin_include
include|#
directive|include
file|"crypto-headers.h"
end_include

begin_typedef
typedef|typedef
name|OM_uint32
function_decl|(
modifier|*
name|ntlm_interface_init
function_decl|)
parameter_list|(
name|OM_uint32
modifier|*
parameter_list|,
name|void
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|OM_uint32
function_decl|(
modifier|*
name|ntlm_interface_destroy
function_decl|)
parameter_list|(
name|OM_uint32
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|int
function_decl|(
modifier|*
name|ntlm_interface_probe
function_decl|)
parameter_list|(
name|OM_uint32
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|OM_uint32
function_decl|(
modifier|*
name|ntlm_interface_type2
function_decl|)
parameter_list|(
name|OM_uint32
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|uint32_t
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|uint32_t
modifier|*
parameter_list|,
name|struct
name|ntlm_buf
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|OM_uint32
function_decl|(
modifier|*
name|ntlm_interface_type3
function_decl|)
parameter_list|(
name|OM_uint32
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
specifier|const
name|struct
name|ntlm_type3
modifier|*
parameter_list|,
name|struct
name|ntlm_buf
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|ntlm_interface_free_buffer
function_decl|)
parameter_list|(
name|struct
name|ntlm_buf
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|ntlm_server_interface
block|{
name|ntlm_interface_init
name|nsi_init
decl_stmt|;
name|ntlm_interface_destroy
name|nsi_destroy
decl_stmt|;
name|ntlm_interface_probe
name|nsi_probe
decl_stmt|;
name|ntlm_interface_type2
name|nsi_type2
decl_stmt|;
name|ntlm_interface_type3
name|nsi_type3
decl_stmt|;
name|ntlm_interface_free_buffer
name|nsi_free_buffer
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ntlmv2_key
block|{
name|uint32_t
name|seq
decl_stmt|;
name|RC4_KEY
name|sealkey
decl_stmt|;
name|RC4_KEY
modifier|*
name|signsealkey
decl_stmt|;
name|unsigned
name|char
name|signkey
index|[
literal|16
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|ntlm_server_interface
name|ntlmsspi_kdc_digest
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
struct|struct
name|ntlm_cred
block|{
name|gss_cred_usage_t
name|usage
decl_stmt|;
name|char
modifier|*
name|username
decl_stmt|;
name|char
modifier|*
name|domain
decl_stmt|;
name|struct
name|ntlm_buf
name|key
decl_stmt|;
block|}
typedef|*
name|ntlm_cred
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|struct
name|ntlm_server_interface
modifier|*
name|server
decl_stmt|;
name|void
modifier|*
name|ictx
decl_stmt|;
name|ntlm_cred
name|client
decl_stmt|;
name|OM_uint32
name|gssflags
decl_stmt|;
name|uint32_t
name|flags
decl_stmt|;
name|uint32_t
name|status
decl_stmt|;
define|#
directive|define
name|STATUS_OPEN
value|1
define|#
directive|define
name|STATUS_CLIENT
value|2
define|#
directive|define
name|STATUS_SESSIONKEY
value|4
name|krb5_data
name|sessionkey
decl_stmt|;
union|union
block|{
struct|struct
block|{
struct|struct
block|{
name|uint32_t
name|seq
decl_stmt|;
name|RC4_KEY
name|key
decl_stmt|;
block|}
name|crypto_send
struct|,
name|crypto_recv
struct|;
block|}
name|v1
struct|;
struct|struct
block|{
name|struct
name|ntlmv2_key
name|send
decl_stmt|,
name|recv
decl_stmt|;
block|}
name|v2
struct|;
block|}
name|u
union|;
block|}
typedef|*
name|ntlm_ctx
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|char
modifier|*
name|user
decl_stmt|;
name|char
modifier|*
name|domain
decl_stmt|;
block|}
typedef|*
name|ntlm_name
typedef|;
end_typedef

begin_include
include|#
directive|include
file|<ntlm/ntlm-private.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* NTLM_NTLM_H */
end_comment

end_unit

