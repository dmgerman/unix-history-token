begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1997 - 2007 Kungliga Tekniska HÃ¶gskolan  * (Royal Institute of Technology, Stockholm, Sweden).   * All rights reserved.   *  * Redistribution and use in source and binary forms, with or without   * modification, are permitted provided that the following conditions   * are met:   *  * 1. Redistributions of source code must retain the above copyright   *    notice, this list of conditions and the following disclaimer.   *  * 2. Redistributions in binary form must reproduce the above copyright   *    notice, this list of conditions and the following disclaimer in the   *    documentation and/or other materials provided with the distribution.   *  * 3. Neither the name of the Institute nor the names of its contributors   *    may be used to endorse or promote products derived from this software   *    without specific prior written permission.   *  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF   * SUCH DAMAGE.   */
end_comment

begin_comment
comment|/* $Id: hdb.h 22198 2007-12-07 13:09:25Z lha $ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__HDB_H__
end_ifndef

begin_define
define|#
directive|define
name|__HDB_H__
end_define

begin_include
include|#
directive|include
file|<hdb_err.h>
end_include

begin_include
include|#
directive|include
file|<heim_asn1.h>
end_include

begin_include
include|#
directive|include
file|<hdb_asn1.h>
end_include

begin_struct_decl
struct_decl|struct
name|hdb_dbinfo
struct_decl|;
end_struct_decl

begin_enum
enum|enum
name|hdb_lockop
block|{
name|HDB_RLOCK
block|,
name|HDB_WLOCK
block|}
enum|;
end_enum

begin_comment
comment|/* flags for various functions */
end_comment

begin_define
define|#
directive|define
name|HDB_F_DECRYPT
value|1
end_define

begin_comment
comment|/* decrypt keys */
end_comment

begin_define
define|#
directive|define
name|HDB_F_REPLACE
value|2
end_define

begin_comment
comment|/* replace entry */
end_comment

begin_define
define|#
directive|define
name|HDB_F_GET_CLIENT
value|4
end_define

begin_comment
comment|/* fetch client */
end_comment

begin_define
define|#
directive|define
name|HDB_F_GET_SERVER
value|8
end_define

begin_comment
comment|/* fetch server */
end_comment

begin_define
define|#
directive|define
name|HDB_F_GET_KRBTGT
value|16
end_define

begin_comment
comment|/* fetch krbtgt */
end_comment

begin_define
define|#
directive|define
name|HDB_F_GET_ANY
value|28
end_define

begin_comment
comment|/* fetch any of client,server,krbtgt */
end_comment

begin_define
define|#
directive|define
name|HDB_F_CANON
value|32
end_define

begin_comment
comment|/* want canonicalition */
end_comment

begin_comment
comment|/* key usage for master key */
end_comment

begin_define
define|#
directive|define
name|HDB_KU_MKEY
value|0x484442
end_define

begin_typedef
typedef|typedef
name|struct
name|hdb_master_key_data
modifier|*
name|hdb_master_key
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|hdb_entry_ex
block|{
name|void
modifier|*
name|ctx
decl_stmt|;
name|hdb_entry
name|entry
decl_stmt|;
name|void
function_decl|(
modifier|*
name|free_entry
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|hdb_entry_ex
modifier|*
parameter_list|)
function_decl|;
block|}
name|hdb_entry_ex
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|HDB
block|{
name|void
modifier|*
name|hdb_db
decl_stmt|;
name|void
modifier|*
name|hdb_dbc
decl_stmt|;
name|char
modifier|*
name|hdb_name
decl_stmt|;
name|int
name|hdb_master_key_set
decl_stmt|;
name|hdb_master_key
name|hdb_master_key
decl_stmt|;
name|int
name|hdb_openp
decl_stmt|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb_open
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|,
name|int
parameter_list|,
name|mode_t
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb_close
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|hdb_free
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|,
name|hdb_entry_ex
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb_fetch
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|,
name|krb5_const_principal
parameter_list|,
name|unsigned
parameter_list|,
name|hdb_entry_ex
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb_store
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|,
name|unsigned
parameter_list|,
name|hdb_entry_ex
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb_remove
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|,
name|krb5_const_principal
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb_firstkey
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|,
name|unsigned
parameter_list|,
name|hdb_entry_ex
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb_nextkey
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|,
name|unsigned
parameter_list|,
name|hdb_entry_ex
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb_lock
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|,
name|int
name|operation
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb_unlock
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb_rename
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb__get
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|,
name|krb5_data
parameter_list|,
name|krb5_data
modifier|*
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb__put
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|,
name|int
parameter_list|,
name|krb5_data
parameter_list|,
name|krb5_data
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb__del
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|,
name|krb5_data
parameter_list|)
function_decl|;
name|krb5_error_code
function_decl|(
modifier|*
name|hdb_destroy
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|struct
name|HDB
modifier|*
parameter_list|)
function_decl|;
block|}
name|HDB
typedef|;
end_typedef

begin_define
define|#
directive|define
name|HDB_INTERFACE_VERSION
value|4
end_define

begin_struct
struct|struct
name|hdb_so_method
block|{
name|int
name|version
decl_stmt|;
specifier|const
name|char
modifier|*
name|prefix
decl_stmt|;
name|krb5_error_code
function_decl|(
modifier|*
name|create
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|HDB
modifier|*
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
name|filename
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|krb5_error_code
function_decl|(
modifier|*
name|hdb_foreach_func_t
function_decl|)
parameter_list|(
name|krb5_context
parameter_list|,
name|HDB
modifier|*
parameter_list|,
name|hdb_entry_ex
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_decl_stmt
specifier|extern
name|krb5_kt_ops
name|hdb_kt_ops
decl_stmt|;
end_decl_stmt

begin_include
include|#
directive|include
file|<hdb-protos.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __HDB_H__ */
end_comment

end_unit

