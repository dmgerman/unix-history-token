begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1997-2000 Kungliga Tekniska HÃ¶gskolan  * (Royal Institute of Technology, Stockholm, Sweden).  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * 3. Neither the name of the Institute nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  */
end_comment

begin_comment
comment|/* $Id$ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__kadm5_privatex_h__
end_ifndef

begin_define
define|#
directive|define
name|__kadm5_privatex_h__
end_define

begin_struct
struct|struct
name|kadm_func
block|{
name|kadm5_ret_t
function_decl|(
modifier|*
name|chpass_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|krb5_principal
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|create_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|kadm5_principal_ent_t
parameter_list|,
name|uint32_t
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|delete_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|krb5_principal
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|destroy
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|flush
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|get_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|krb5_principal
parameter_list|,
name|kadm5_principal_ent_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|get_principals
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|get_privs
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|uint32_t
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|modify_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|kadm5_principal_ent_t
parameter_list|,
name|uint32_t
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|randkey_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|krb5_principal
parameter_list|,
name|krb5_keyblock
modifier|*
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|rename_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|krb5_principal
parameter_list|,
name|krb5_principal
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|chpass_principal_with_key
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|krb5_principal
parameter_list|,
name|int
parameter_list|,
name|krb5_key_data
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_comment
comment|/* XXX should be integrated */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|kadm5_common_context
block|{
name|krb5_context
name|context
decl_stmt|;
name|krb5_boolean
name|my_context
decl_stmt|;
name|struct
name|kadm_func
name|funcs
decl_stmt|;
name|void
modifier|*
name|data
decl_stmt|;
block|}
name|kadm5_common_context
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|kadm5_log_peer
block|{
name|int
name|fd
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
name|krb5_auth_context
name|ac
decl_stmt|;
name|struct
name|kadm5_log_peer
modifier|*
name|next
decl_stmt|;
block|}
name|kadm5_log_peer
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|kadm5_log_context
block|{
name|char
modifier|*
name|log_file
decl_stmt|;
name|int
name|log_fd
decl_stmt|;
name|uint32_t
name|version
decl_stmt|;
ifndef|#
directive|ifndef
name|NO_UNIX_SOCKETS
name|struct
name|sockaddr_un
name|socket_name
decl_stmt|;
else|#
directive|else
name|struct
name|addrinfo
modifier|*
name|socket_info
decl_stmt|;
endif|#
directive|endif
name|krb5_socket_t
name|socket_fd
decl_stmt|;
block|}
name|kadm5_log_context
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|kadm5_server_context
block|{
name|krb5_context
name|context
decl_stmt|;
name|krb5_boolean
name|my_context
decl_stmt|;
name|struct
name|kadm_func
name|funcs
decl_stmt|;
comment|/* */
name|kadm5_config_params
name|config
decl_stmt|;
name|HDB
modifier|*
name|db
decl_stmt|;
name|krb5_principal
name|caller
decl_stmt|;
name|unsigned
name|acl_flags
decl_stmt|;
name|kadm5_log_context
name|log_context
decl_stmt|;
block|}
name|kadm5_server_context
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|kadm5_client_context
block|{
name|krb5_context
name|context
decl_stmt|;
name|krb5_boolean
name|my_context
decl_stmt|;
name|struct
name|kadm_func
name|funcs
decl_stmt|;
comment|/* */
name|krb5_auth_context
name|ac
decl_stmt|;
name|char
modifier|*
name|realm
decl_stmt|;
name|char
modifier|*
name|admin_server
decl_stmt|;
name|int
name|kadmind_port
decl_stmt|;
name|int
name|sock
decl_stmt|;
name|char
modifier|*
name|client_name
decl_stmt|;
name|char
modifier|*
name|service_name
decl_stmt|;
name|krb5_prompter_fct
name|prompter
decl_stmt|;
specifier|const
name|char
modifier|*
name|keytab
decl_stmt|;
name|krb5_ccache
name|ccache
decl_stmt|;
name|kadm5_config_params
modifier|*
name|realm_params
decl_stmt|;
block|}
name|kadm5_client_context
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|kadm5_ad_context
block|{
name|krb5_context
name|context
decl_stmt|;
name|krb5_boolean
name|my_context
decl_stmt|;
name|struct
name|kadm_func
name|funcs
decl_stmt|;
comment|/* */
name|kadm5_config_params
name|config
decl_stmt|;
name|krb5_principal
name|caller
decl_stmt|;
name|krb5_ccache
name|ccache
decl_stmt|;
name|char
modifier|*
name|client_name
decl_stmt|;
name|char
modifier|*
name|realm
decl_stmt|;
name|void
modifier|*
name|ldap_conn
decl_stmt|;
name|char
modifier|*
name|base_dn
decl_stmt|;
block|}
name|kadm5_ad_context
typedef|;
end_typedef

begin_enum
enum|enum
name|kadm_ops
block|{
name|kadm_get
block|,
name|kadm_delete
block|,
name|kadm_create
block|,
name|kadm_rename
block|,
name|kadm_chpass
block|,
name|kadm_modify
block|,
name|kadm_randkey
block|,
name|kadm_get_privs
block|,
name|kadm_get_princs
block|,
name|kadm_chpass_with_key
block|,
name|kadm_nop
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|KADMIN_APPL_VERSION
value|"KADM0.1"
end_define

begin_define
define|#
directive|define
name|KADMIN_OLD_APPL_VERSION
value|"KADM0.0"
end_define

begin_include
include|#
directive|include
file|"kadm5-private.h"
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __kadm5_privatex_h__ */
end_comment

end_unit

