begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1997-1999 Kungliga Tekniska HÃ¶gskolan  * (Royal Institute of Technology, Stockholm, Sweden).   * All rights reserved.   *  * Redistribution and use in source and binary forms, with or without   * modification, are permitted provided that the following conditions   * are met:   *  * 1. Redistributions of source code must retain the above copyright   *    notice, this list of conditions and the following disclaimer.   *  * 2. Redistributions in binary form must reproduce the above copyright   *    notice, this list of conditions and the following disclaimer in the   *    documentation and/or other materials provided with the distribution.   *  * 3. Neither the name of the Institute nor the names of its contributors   *    may be used to endorse or promote products derived from this software   *    without specific prior written permission.   *  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF   * SUCH DAMAGE.   */
end_comment

begin_comment
comment|/* $Id: private.h,v 1.10 1999/12/04 23:09:34 assar Exp $ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__kadm5_private_h__
end_ifndef

begin_define
define|#
directive|define
name|__kadm5_private_h__
end_define

begin_struct
struct|struct
name|kadm_func
block|{
name|kadm5_ret_t
function_decl|(
modifier|*
name|chpass_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|krb5_principal
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|create_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|kadm5_principal_ent_t
parameter_list|,
name|u_int32_t
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|delete_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|krb5_principal
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|destroy
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|flush
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|get_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|krb5_principal
parameter_list|,
name|kadm5_principal_ent_t
parameter_list|,
name|u_int32_t
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|get_principals
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|get_privs
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|u_int32_t
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|modify_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|kadm5_principal_ent_t
parameter_list|,
name|u_int32_t
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|randkey_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|krb5_principal
parameter_list|,
name|krb5_keyblock
modifier|*
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
name|kadm5_ret_t
function_decl|(
modifier|*
name|rename_principal
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|krb5_principal
parameter_list|,
name|krb5_principal
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_comment
comment|/* XXX should be integrated */
end_comment

begin_typedef
typedef|typedef
struct|struct
name|kadm5_common_context
block|{
name|krb5_context
name|context
decl_stmt|;
name|krb5_boolean
name|my_context
decl_stmt|;
name|struct
name|kadm_func
name|funcs
decl_stmt|;
name|void
modifier|*
name|data
decl_stmt|;
block|}
name|kadm5_common_context
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|kadm5_log_peer
block|{
name|int
name|fd
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
name|krb5_auth_context
name|ac
decl_stmt|;
name|struct
name|kadm5_log_peer
modifier|*
name|next
decl_stmt|;
block|}
name|kadm5_log_peer
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|kadm5_log_context
block|{
name|char
modifier|*
name|log_file
decl_stmt|;
name|int
name|log_fd
decl_stmt|;
name|u_int32_t
name|version
decl_stmt|;
name|struct
name|sockaddr_un
name|socket_name
decl_stmt|;
name|int
name|socket_fd
decl_stmt|;
block|}
name|kadm5_log_context
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|kadm5_server_context
block|{
name|krb5_context
name|context
decl_stmt|;
name|krb5_boolean
name|my_context
decl_stmt|;
name|struct
name|kadm_func
name|funcs
decl_stmt|;
comment|/* */
name|kadm5_config_params
name|config
decl_stmt|;
name|HDB
modifier|*
name|db
decl_stmt|;
name|krb5_principal
name|caller
decl_stmt|;
name|unsigned
name|acl_flags
decl_stmt|;
name|kadm5_log_context
name|log_context
decl_stmt|;
block|}
name|kadm5_server_context
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|kadm5_client_context
block|{
name|krb5_context
name|context
decl_stmt|;
name|krb5_boolean
name|my_context
decl_stmt|;
name|struct
name|kadm_func
name|funcs
decl_stmt|;
comment|/* */
name|krb5_auth_context
name|ac
decl_stmt|;
name|char
modifier|*
name|realm
decl_stmt|;
name|char
modifier|*
name|admin_server
decl_stmt|;
name|int
name|kadmind_port
decl_stmt|;
name|int
name|sock
decl_stmt|;
block|}
name|kadm5_client_context
typedef|;
end_typedef

begin_enum
enum|enum
name|kadm_ops
block|{
name|kadm_get
block|,
name|kadm_delete
block|,
name|kadm_create
block|,
name|kadm_rename
block|,
name|kadm_chpass
block|,
name|kadm_modify
block|,
name|kadm_randkey
block|,
name|kadm_get_privs
block|,
name|kadm_get_princs
block|}
enum|;
end_enum

begin_define
define|#
directive|define
name|KADMIN_APPL_VERSION
value|"KADM0.1"
end_define

begin_define
define|#
directive|define
name|KADMIN_OLD_APPL_VERSION
value|"KADM0.0"
end_define

begin_define
define|#
directive|define
name|KADM5_LOG_SIGNAL
value|HDB_DB_DIR "/signal"
end_define

begin_function_decl
name|kadm5_ret_t
name|_kadm5_privs_to_string
parameter_list|(
name|u_int32_t
parameter_list|,
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|_kadm5_string_to_privs
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|u_int32_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|HDB
modifier|*
name|_kadm5_s_get_db
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_acl_check_permission
name|__P
argument_list|(
operator|(
name|kadm5_server_context
operator|*
name|context
operator|,
name|unsigned
name|op
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_acl_init
name|__P
argument_list|(
operator|(
name|kadm5_server_context
operator|*
name|context
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_c_init_context
name|__P
argument_list|(
operator|(
name|kadm5_client_context
operator|*
operator|*
name|ctx
operator|,
name|kadm5_config_params
operator|*
name|params
operator|,
name|krb5_context
name|context
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_client_recv
name|__P
argument_list|(
operator|(
name|kadm5_client_context
operator|*
name|context
operator|,
name|krb5_data
operator|*
name|reply
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_client_send
name|__P
argument_list|(
operator|(
name|kadm5_client_context
operator|*
name|context
operator|,
name|krb5_storage
operator|*
name|sp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_error_code
name|__P
argument_list|(
operator|(
name|kadm5_ret_t
name|code
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_s_init_context
name|__P
argument_list|(
operator|(
name|kadm5_server_context
operator|*
operator|*
name|ctx
operator|,
name|kadm5_config_params
operator|*
name|params
operator|,
name|krb5_context
name|context
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_set_keys
name|__P
argument_list|(
operator|(
name|kadm5_server_context
operator|*
name|context
operator|,
name|hdb_entry
operator|*
name|ent
operator|,
specifier|const
name|char
operator|*
name|password
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_set_keys2
name|__P
argument_list|(
operator|(
name|hdb_entry
operator|*
name|ent
operator|,
name|int16_t
name|n_key_data
operator|,
name|krb5_key_data
operator|*
name|key_data
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_set_keys_randomly
name|__P
argument_list|(
operator|(
name|kadm5_server_context
operator|*
name|context
operator|,
name|hdb_entry
operator|*
name|ent
operator|,
name|krb5_keyblock
operator|*
operator|*
name|new_keys
operator|,
name|int
operator|*
name|n_keys
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_set_modifier
name|__P
argument_list|(
operator|(
name|kadm5_server_context
operator|*
name|context
operator|,
name|hdb_entry
operator|*
name|ent
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_setup_entry
name|__P
argument_list|(
operator|(
name|hdb_entry
operator|*
name|ent
operator|,
name|u_int32_t
name|mask
operator|,
name|kadm5_principal_ent_t
name|princ
operator|,
name|u_int32_t
name|princ_mask
operator|,
name|kadm5_principal_ent_t
name|def
operator|,
name|u_int32_t
name|def_mask
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_get_version
parameter_list|(
name|int
name|fd
parameter_list|,
name|u_int32_t
modifier|*
name|ver
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_init
parameter_list|(
name|kadm5_server_context
modifier|*
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_create
parameter_list|(
name|kadm5_server_context
modifier|*
name|context
parameter_list|,
name|hdb_entry
modifier|*
name|ent
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_delete
parameter_list|(
name|kadm5_server_context
modifier|*
name|context
parameter_list|,
name|krb5_principal
name|princ
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_rename
parameter_list|(
name|kadm5_server_context
modifier|*
name|context
parameter_list|,
name|krb5_principal
name|source
parameter_list|,
name|hdb_entry
modifier|*
name|ent
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_modify
parameter_list|(
name|kadm5_server_context
modifier|*
name|context
parameter_list|,
name|hdb_entry
modifier|*
name|ent
parameter_list|,
name|u_int32_t
name|mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_end
parameter_list|(
name|kadm5_server_context
modifier|*
name|context
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_foreach
parameter_list|(
name|kadm5_server_context
modifier|*
name|context
parameter_list|,
name|void
function_decl|(
modifier|*
name|func
function_decl|)
parameter_list|(
name|kadm5_server_context
modifier|*
name|server_context
parameter_list|,
name|u_int32_t
name|ver
parameter_list|,
name|time_t
name|timestamp
parameter_list|,
name|enum
name|kadm_ops
name|op
parameter_list|,
name|u_int32_t
name|len
parameter_list|,
name|krb5_storage
modifier|*
name|sp
parameter_list|)
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_replay_create
parameter_list|(
name|kadm5_server_context
modifier|*
name|context
parameter_list|,
name|u_int32_t
name|ver
parameter_list|,
name|u_int32_t
name|len
parameter_list|,
name|krb5_storage
modifier|*
name|sp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_replay_delete
parameter_list|(
name|kadm5_server_context
modifier|*
name|context
parameter_list|,
name|u_int32_t
name|ver
parameter_list|,
name|u_int32_t
name|len
parameter_list|,
name|krb5_storage
modifier|*
name|sp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_replay_rename
parameter_list|(
name|kadm5_server_context
modifier|*
name|context
parameter_list|,
name|u_int32_t
name|ver
parameter_list|,
name|u_int32_t
name|len
parameter_list|,
name|krb5_storage
modifier|*
name|sp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_replay_modify
parameter_list|(
name|kadm5_server_context
modifier|*
name|context
parameter_list|,
name|u_int32_t
name|ver
parameter_list|,
name|u_int32_t
name|len
parameter_list|,
name|krb5_storage
modifier|*
name|sp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_replay
parameter_list|(
name|kadm5_server_context
modifier|*
name|context
parameter_list|,
name|enum
name|kadm_ops
name|op
parameter_list|,
name|u_int32_t
name|ver
parameter_list|,
name|u_int32_t
name|len
parameter_list|,
name|krb5_storage
modifier|*
name|sp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|krb5_storage
modifier|*
name|kadm5_log_goto_end
parameter_list|(
name|int
name|fd
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|kadm5_ret_t
name|kadm5_log_previous
parameter_list|(
name|krb5_storage
modifier|*
name|sp
parameter_list|,
name|u_int32_t
modifier|*
name|ver
parameter_list|,
name|time_t
modifier|*
name|timestamp
parameter_list|,
name|enum
name|kadm_ops
modifier|*
name|op
parameter_list|,
name|u_int32_t
modifier|*
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_marshal_params
name|__P
argument_list|(
operator|(
name|krb5_context
name|context
operator|,
name|kadm5_config_params
operator|*
name|params
operator|,
name|krb5_data
operator|*
name|out
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|kadm5_ret_t
name|_kadm5_unmarshal_params
name|__P
argument_list|(
operator|(
name|krb5_context
name|context
operator|,
name|krb5_data
operator|*
name|in
operator|,
name|kadm5_config_params
operator|*
name|params
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __kadm5_private_h__ */
end_comment

end_unit

