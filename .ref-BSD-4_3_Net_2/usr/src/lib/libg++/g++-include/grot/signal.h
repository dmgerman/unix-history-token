begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// This may look like C code, but it is really -*- C++ -*-
end_comment

begin_comment
comment|/*  Copyright (C) 1989 Free Software Foundation     written by Doug Lea (dl@rocky.oswego.edu)  This file is part of GNU CC.  GNU CC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.  No author or distributor accepts responsibility to anyone for the consequences of using it or for whether it serves any particular purpose or works at all, unless he says so in writing.  Refer to the GNU CC General Public License for full details.  Everyone is granted permission to copy, modify and redistribute GNU CC, but only under the conditions described in the GNU CC General Public License.   A copy of this license is supposed to have been given to you along with GNU CC so you can know your rights and responsibilities.  It should be in a file named COPYING.  Among other things, the copyright notice and this notice must be preserved on all copies.   */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_signal_h
end_ifndef

begin_ifdef
ifdef|#
directive|ifdef
name|__GNUG__
end_ifdef

begin_pragma
pragma|#
directive|pragma
name|once
end_pragma

begin_pragma
pragma|#
directive|pragma
name|interface
end_pragma

begin_endif
endif|#
directive|endif
end_endif

begin_extern
extern|extern
literal|"C"
block|{
comment|// This #define KERNEL hack gets around bad function prototypes on most
comment|// systems. If not, you need to do some real work...
ifndef|#
directive|ifndef
name|masscomp
define|#
directive|define
name|KERNEL
endif|#
directive|endif
include|#
directive|include
file|<
comment|//
include|usr/include/sys/signal.h>
ifndef|#
directive|ifndef
name|masscomp
undef|#
directive|undef
name|KERNEL
endif|#
directive|endif
ifndef|#
directive|ifndef
name|_signal_h
define|#
directive|define
name|_signal_h
value|1
endif|#
directive|endif
comment|// The Interviews folks call this SignalHandler. Might as well conform.
comment|// Beware: some systems think that SignalHandler returns int.
typedef|typedef
name|void
function_decl|(
modifier|*
name|SignalHandler
function_decl|)
parameter_list|(
modifier|...
parameter_list|)
function_decl|;
specifier|extern
name|SignalHandler
name|signal
parameter_list|(
name|int
name|sig
parameter_list|,
name|SignalHandler
name|action
parameter_list|)
function_decl|;
specifier|extern
name|SignalHandler
name|sigset
parameter_list|(
name|int
name|sig
parameter_list|,
name|SignalHandler
name|action
parameter_list|)
function_decl|;
specifier|extern
name|SignalHandler
name|ssignal
parameter_list|(
name|int
name|sig
parameter_list|,
name|SignalHandler
name|action
parameter_list|)
function_decl|;
specifier|extern
name|int
name|gsignal
parameter_list|(
name|int
name|sig
parameter_list|)
function_decl|;
specifier|extern
name|int
name|kill
parameter_list|(
name|int
name|pid
parameter_list|,
name|int
name|sig
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|hpux
comment|// Interviews folks claim that hpux doesn't like these
specifier|extern
name|int
name|sigsetmask
parameter_list|(
name|int
name|mask
parameter_list|)
function_decl|;
specifier|extern
name|int
name|sigblock
parameter_list|(
name|int
name|mask
parameter_list|)
function_decl|;
specifier|extern
name|int
name|sigpause
parameter_list|(
name|int
name|mask
parameter_list|)
function_decl|;
specifier|extern
name|int
name|sigvec
parameter_list|(
name|int
name|sig
parameter_list|,
name|struct
name|sigvec
modifier|*
name|v
parameter_list|,
name|struct
name|sigvec
modifier|*
name|prev
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|// The Interviews version also has these ...
define|#
directive|define
name|SignalBad
value|((SignalHandler)-1)
define|#
directive|define
name|SignalDefault
value|((SignalHandler)0)
define|#
directive|define
name|SignalIgnore
value|((SignalHandler)1)
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

end_unit

