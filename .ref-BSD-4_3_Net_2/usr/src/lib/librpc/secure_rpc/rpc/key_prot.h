begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	@(#)key_prot.h	2.1 88/08/07 4.0 RPCSRC; from  1.4 87/03/10 Copyr 1986 Sun Micro */
end_comment

begin_comment
comment|/*  * Copyright (c) 1988 by Sun Microsystems, Inc.  */
end_comment

begin_comment
comment|/*  * Sun RPC is a product of Sun Microsystems, Inc. and is provided for  * unrestricted use provided that this legend is included on all tape  * media and as a part of the software program in whole or part.  Users  * may copy or modify Sun RPC without charge, but are not authorized  * to license or distribute it to anyone else except as part of a product or  * program developed by the user.  *   * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE  * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR  * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.  *   * Sun RPC is provided with no support and without any obligation on the  * part of Sun Microsystems, Inc. to assist in its use, correction,  * modification or enhancement.  *   * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE  * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC  * OR ANY PART THEREOF.  *   * In no event will Sun Microsystems, Inc. be liable for any lost revenue  * or profits or other special, indirect and consequential damages, even if  * Sun has been advised of the possibility of such damages.  *   * Sun Microsystems, Inc.  * 2550 Garcia Avenue  * Mountain View, California  94043  */
end_comment

begin_comment
comment|/*   * Compiled from key_prot.x using rpcgen.  * DO NOT EDIT THIS FILE!  * This is NOT source code!  */
end_comment

begin_define
define|#
directive|define
name|KEY_PROG
value|100029
end_define

begin_define
define|#
directive|define
name|KEY_VERS
value|1
end_define

begin_define
define|#
directive|define
name|KEY_SET
value|1
end_define

begin_define
define|#
directive|define
name|KEY_ENCRYPT
value|2
end_define

begin_define
define|#
directive|define
name|KEY_DECRYPT
value|3
end_define

begin_define
define|#
directive|define
name|KEY_GEN
value|4
end_define

begin_define
define|#
directive|define
name|KEY_GETCRED
value|5
end_define

begin_define
define|#
directive|define
name|PROOT
value|3
end_define

begin_define
define|#
directive|define
name|HEXMODULUS
value|"d4a0ba0250b6fd2ec626e7efd637df76c716e22d0944b88b"
end_define

begin_define
define|#
directive|define
name|HEXKEYBYTES
value|48
end_define

begin_define
define|#
directive|define
name|KEYSIZE
value|192
end_define

begin_define
define|#
directive|define
name|KEYBYTES
value|24
end_define

begin_define
define|#
directive|define
name|KEYCHECKSUMSIZE
value|16
end_define

begin_enum
enum|enum
name|keystatus
block|{
name|KEY_SUCCESS
init|=
literal|0
block|,
name|KEY_NOSECRET
init|=
literal|1
block|,
name|KEY_UNKNOWN
init|=
literal|2
block|,
name|KEY_SYSTEMERR
init|=
literal|3
block|, }
enum|;
end_enum

begin_typedef
typedef|typedef
name|enum
name|keystatus
name|keystatus
typedef|;
end_typedef

begin_function_decl
name|bool_t
name|xdr_keystatus
parameter_list|()
function_decl|;
end_function_decl

begin_typedef
typedef|typedef
name|char
name|keybuf
index|[
name|HEXKEYBYTES
index|]
typedef|;
end_typedef

begin_function_decl
name|bool_t
name|xdr_keybuf
parameter_list|()
function_decl|;
end_function_decl

begin_typedef
typedef|typedef
name|char
modifier|*
name|netnamestr
typedef|;
end_typedef

begin_function_decl
name|bool_t
name|xdr_netnamestr
parameter_list|()
function_decl|;
end_function_decl

begin_struct
struct|struct
name|cryptkeyarg
block|{
name|netnamestr
name|remotename
decl_stmt|;
name|des_block
name|deskey
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|cryptkeyarg
name|cryptkeyarg
typedef|;
end_typedef

begin_function_decl
name|bool_t
name|xdr_cryptkeyarg
parameter_list|()
function_decl|;
end_function_decl

begin_struct
struct|struct
name|cryptkeyres
block|{
name|keystatus
name|status
decl_stmt|;
union|union
block|{
name|des_block
name|deskey
decl_stmt|;
block|}
name|cryptkeyres_u
union|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|cryptkeyres
name|cryptkeyres
typedef|;
end_typedef

begin_function_decl
name|bool_t
name|xdr_cryptkeyres
parameter_list|()
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|MAXGIDS
value|16
end_define

begin_struct
struct|struct
name|unixcred
block|{
name|int
name|uid
decl_stmt|;
name|int
name|gid
decl_stmt|;
struct|struct
block|{
name|u_int
name|gids_len
decl_stmt|;
name|int
modifier|*
name|gids_val
decl_stmt|;
block|}
name|gids
struct|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|unixcred
name|unixcred
typedef|;
end_typedef

begin_function_decl
name|bool_t
name|xdr_unixcred
parameter_list|()
function_decl|;
end_function_decl

begin_struct
struct|struct
name|getcredres
block|{
name|keystatus
name|status
decl_stmt|;
union|union
block|{
name|unixcred
name|cred
decl_stmt|;
block|}
name|getcredres_u
union|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|getcredres
name|getcredres
typedef|;
end_typedef

begin_function_decl
name|bool_t
name|xdr_getcredres
parameter_list|()
function_decl|;
end_function_decl

end_unit

