begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* dsargument.h - structures for argument and result */
end_comment

begin_comment
comment|/*  * $Header: /f/osi/h/quipu/RCS/dsargument.h,v 7.3 91/02/22 09:25:49 mrose Interim $  *  *  * $Log:	dsargument.h,v $  * Revision 7.3  91/02/22  09:25:49  mrose  * Interim 6.8  *   * Revision 7.2  90/11/20  15:30:40  mrose  * cjr  *   * Revision 7.1  90/07/09  14:38:30  mrose  * sync  *   * Revision 7.0  89/11/23  21:56:32  mrose  * Release 6.0  *   */
end_comment

begin_comment
comment|/*  *				  NOTICE  *  *    Acquisition, use, and distribution of this module and related  *    materials are subject to the restrictions of a license agreement.  *    Consult the Preface in the User's Manual for the full terms of  *    this agreement.  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|QUIPUDSARG
end_ifndef

begin_define
define|#
directive|define
name|QUIPUDSARG
end_define

begin_include
include|#
directive|include
file|"quipu/entry.h"
end_include

begin_comment
comment|/* for getedb stuff */
end_comment

begin_comment
comment|/* CN_CTX values used by high level decoders */
end_comment

begin_define
define|#
directive|define
name|CN_CTX_UNKNOWN
value|0
end_define

begin_define
define|#
directive|define
name|CN_CTX_X500_DAP
value|1
end_define

begin_define
define|#
directive|define
name|CN_CTX_X500_DSP
value|2
end_define

begin_define
define|#
directive|define
name|CN_CTX_QUIPU_DSP
value|3
end_define

begin_struct
struct|struct
name|DSArgument
block|{
name|int
name|arg_type
decl_stmt|;
define|#
directive|define
name|ds_recog_op
parameter_list|(
name|a
parameter_list|)
value|((a>= OP_READ)&& (a<= OP_MODIFYRDN))
define|#
directive|define
name|qu_recog_op
parameter_list|(
name|a
parameter_list|)
value|((a>= OP_READ)&& (a<= OP_GETEDB))
union|union
block|{
name|struct
name|ds_read_arg
name|arg_un_read
decl_stmt|;
name|struct
name|ds_compare_arg
name|arg_un_compare
decl_stmt|;
name|struct
name|ds_abandon_arg
name|arg_un_abandon
decl_stmt|;
name|struct
name|ds_list_arg
name|arg_un_list
decl_stmt|;
name|struct
name|ds_search_arg
name|arg_un_search
decl_stmt|;
name|struct
name|ds_addentry_arg
name|arg_un_addentry
decl_stmt|;
name|struct
name|ds_removeentry_arg
name|arg_un_removeentry
decl_stmt|;
name|struct
name|ds_modifyentry_arg
name|arg_un_modifyentry
decl_stmt|;
name|struct
name|ds_modifyrdn_arg
name|arg_un_modifyrdn
decl_stmt|;
name|struct
name|getedb_arg
name|arg_un_getedb
decl_stmt|;
block|}
name|arg_un
union|;
define|#
directive|define
name|arg_rd
value|arg_un.arg_un_read
define|#
directive|define
name|arg_cm
value|arg_un.arg_un_compare
define|#
directive|define
name|arg_ab
value|arg_un.arg_un_abandon
define|#
directive|define
name|arg_ls
value|arg_un.arg_un_list
define|#
directive|define
name|arg_sr
value|arg_un.arg_un_search
define|#
directive|define
name|arg_ad
value|arg_un.arg_un_addentry
define|#
directive|define
name|arg_rm
value|arg_un.arg_un_removeentry
define|#
directive|define
name|arg_me
value|arg_un.arg_un_modifyentry
define|#
directive|define
name|arg_mr
value|arg_un.arg_un_modifyrdn
define|#
directive|define
name|arg_ge
value|arg_un.arg_un_getedb
block|}
struct|;
end_struct

begin_struct
struct|struct
name|DSResult
block|{
name|int
name|result_type
decl_stmt|;
comment|/* same values as for DSArgument                */
union|union
block|{
name|struct
name|ds_read_result
name|result_un_read
decl_stmt|;
name|struct
name|ds_compare_result
name|result_un_compare
decl_stmt|;
name|struct
name|ds_list_result
name|result_un_list
decl_stmt|;
name|struct
name|ds_search_result
name|result_un_search
decl_stmt|;
name|struct
name|getedb_result
name|result_un_getedb
decl_stmt|;
block|}
name|result_un
union|;
define|#
directive|define
name|res_rd
value|result_un.result_un_read
define|#
directive|define
name|res_cm
value|result_un.result_un_compare
define|#
directive|define
name|res_ls
value|result_un.result_un_list
define|#
directive|define
name|res_sr
value|result_un.result_un_search
define|#
directive|define
name|res_ge
value|result_un.result_un_getedb
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
struct|struct
name|cross_ref
block|{
name|DN
name|xref_dn
decl_stmt|;
name|struct
name|access_point
modifier|*
name|xref_ap
decl_stmt|;
name|struct
name|cross_ref
modifier|*
name|xref_next
decl_stmt|;
block|}
name|CrossRefs
typedef|;
end_typedef

begin_define
define|#
directive|define
name|NULLXREF
value|((struct cross_ref *) NULL)
end_define

begin_typedef
typedef|typedef
struct|struct
name|chain_arg
block|{
name|DN
name|cha_originator
decl_stmt|;
name|DN
name|cha_target
decl_stmt|;
name|struct
name|op_progress
name|cha_progress
decl_stmt|;
name|struct
name|trace_info
modifier|*
name|cha_trace
decl_stmt|;
name|char
name|cha_aliasderef
decl_stmt|;
name|int
name|cha_aliasedrdns
decl_stmt|;
name|char
name|cha_entryonly
decl_stmt|;
name|int
name|cha_returnrefs
decl_stmt|;
name|int
name|cha_reftype
decl_stmt|;
name|PE
name|cha_domaininfo
decl_stmt|;
name|char
modifier|*
name|cha_timelimit
decl_stmt|;
name|struct
name|security_parms
modifier|*
name|cha_security
decl_stmt|;
block|}
typedef|*
name|ChainingArg
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|chain_res
block|{
name|PE
name|chr_domaininfo
decl_stmt|;
name|struct
name|cross_ref
modifier|*
name|chr_crossrefs
decl_stmt|;
name|struct
name|security_parms
modifier|*
name|chr_security
decl_stmt|;
block|}
typedef|*
name|ChainingRes
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|ds_op_arg
block|{
name|struct
name|chain_arg
name|dca_charg
decl_stmt|;
name|struct
name|DSArgument
name|dca_dsarg
decl_stmt|;
name|int
name|dca_choice
decl_stmt|;
name|struct
name|alg_id
modifier|*
name|dca_alg
decl_stmt|;
name|int
name|dca_len
decl_stmt|;
name|char
modifier|*
name|dca_bit
decl_stmt|;
block|}
name|OPArgument
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|ds_op_res
block|{
name|struct
name|chain_res
name|dcr_chres
decl_stmt|;
name|struct
name|DSResult
name|dcr_dsres
decl_stmt|;
name|int
name|dcr_choice
decl_stmt|;
name|struct
name|alg_id
modifier|*
name|dcr_alg
decl_stmt|;
name|int
name|dcr_len
decl_stmt|;
name|char
modifier|*
name|dcr_bit
decl_stmt|;
block|}
name|OPResult
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

end_unit

