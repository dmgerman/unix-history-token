begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C++ -*-
end_comment

begin_comment
comment|//===------------------- support/xlocale/xlocale.h ------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is dual licensed under the MIT and the University of Illinois Open
end_comment

begin_comment
comment|// Source Licenses. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|// This is a shared implementation of a shim to provide extended locale support
end_comment

begin_comment
comment|// on top of libc's that don't support it (like Android's bionic, and Newlib).
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// The 'illusion' only works when the specified locale is "C" or "POSIX", but
end_comment

begin_comment
comment|// that's about as good as we can do without implementing full xlocale support
end_comment

begin_comment
comment|// in the underlying libc.
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_LIBCPP_SUPPORT_XLOCALE_XLOCALE_H
end_ifndef

begin_define
define|#
directive|define
name|_LIBCPP_SUPPORT_XLOCALE_XLOCALE_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
specifier|static
specifier|inline
name|int
name|isalnum_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|isalnum
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isalpha_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|isalpha
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isblank_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|isblank
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iscntrl_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iscntrl
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isdigit_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|isdigit
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isgraph_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|isgraph
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|islower_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|islower
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isprint_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|isprint
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|ispunct_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|ispunct
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isspace_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|isspace
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isupper_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|isupper
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isxdigit_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|isxdigit
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswalnum_l
parameter_list|(
name|wint_t
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iswalnum
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswalpha_l
parameter_list|(
name|wint_t
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iswalpha
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswblank_l
parameter_list|(
name|wint_t
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iswblank
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswcntrl_l
parameter_list|(
name|wint_t
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iswcntrl
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswdigit_l
parameter_list|(
name|wint_t
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iswdigit
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswgraph_l
parameter_list|(
name|wint_t
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iswgraph
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswlower_l
parameter_list|(
name|wint_t
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iswlower
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswprint_l
parameter_list|(
name|wint_t
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iswprint
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswpunct_l
parameter_list|(
name|wint_t
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iswpunct
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswspace_l
parameter_list|(
name|wint_t
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iswspace
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswupper_l
parameter_list|(
name|wint_t
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iswupper
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswxdigit_l
parameter_list|(
name|wint_t
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|iswxdigit
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|toupper_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|toupper
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|tolower_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|tolower
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|towupper_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|towupper
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|towlower_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|towlower
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|strcoll_l
parameter_list|(
specifier|const
name|char
modifier|*
name|s1
parameter_list|,
specifier|const
name|char
modifier|*
name|s2
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|strcoll
argument_list|(
name|s1
argument_list|,
name|s2
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|size_t
name|strxfrm_l
parameter_list|(
name|char
modifier|*
name|dest
parameter_list|,
specifier|const
name|char
modifier|*
name|src
parameter_list|,
name|size_t
name|n
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|strxfrm
argument_list|(
name|dest
argument_list|,
name|src
argument_list|,
name|n
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|size_t
name|strftime_l
parameter_list|(
name|char
modifier|*
name|s
parameter_list|,
name|size_t
name|max
parameter_list|,
specifier|const
name|char
modifier|*
name|format
parameter_list|,
specifier|const
name|struct
name|tm
modifier|*
name|tm
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|strftime
argument_list|(
name|s
argument_list|,
name|max
argument_list|,
name|format
argument_list|,
name|tm
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|wcscoll_l
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|ws1
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|ws2
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|wcscoll
argument_list|(
name|ws1
argument_list|,
name|ws2
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|size_t
name|wcsxfrm_l
parameter_list|(
name|wchar_t
modifier|*
name|dest
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|src
parameter_list|,
name|size_t
name|n
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|wcsxfrm
argument_list|(
name|dest
argument_list|,
name|src
argument_list|,
name|n
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|long
name|double
name|strtold_l
parameter_list|(
specifier|const
name|char
modifier|*
name|nptr
parameter_list|,
name|char
modifier|*
modifier|*
name|endptr
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|strtold
argument_list|(
name|nptr
argument_list|,
name|endptr
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|long
name|long
name|strtoll_l
parameter_list|(
specifier|const
name|char
modifier|*
name|nptr
parameter_list|,
name|char
modifier|*
modifier|*
name|endptr
parameter_list|,
name|int
name|base
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|strtoll
argument_list|(
name|nptr
argument_list|,
name|endptr
argument_list|,
name|base
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|unsigned
name|long
name|long
name|strtoull_l
parameter_list|(
specifier|const
name|char
modifier|*
name|nptr
parameter_list|,
name|char
modifier|*
modifier|*
name|endptr
parameter_list|,
name|int
name|base
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|strtoull
argument_list|(
name|nptr
argument_list|,
name|endptr
argument_list|,
name|base
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|long
name|long
name|wcstoll_l
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|nptr
parameter_list|,
name|wchar_t
modifier|*
modifier|*
name|endptr
parameter_list|,
name|int
name|base
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|wcstoll
argument_list|(
name|nptr
argument_list|,
name|endptr
argument_list|,
name|base
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|unsigned
name|long
name|long
name|wcstoull_l
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|nptr
parameter_list|,
name|wchar_t
modifier|*
modifier|*
name|endptr
parameter_list|,
name|int
name|base
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|wcstoull
argument_list|(
name|nptr
argument_list|,
name|endptr
argument_list|,
name|base
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|long
name|double
name|wcstold_l
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|nptr
parameter_list|,
name|wchar_t
modifier|*
modifier|*
name|endptr
parameter_list|,
name|locale_t
parameter_list|)
block|{
return|return
name|wcstold
argument_list|(
name|nptr
argument_list|,
name|endptr
argument_list|)
return|;
block|}
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// _LIBCPP_SUPPORT_XLOCALE_XLOCALE_H
end_comment

end_unit

