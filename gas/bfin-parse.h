begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* A Bison parser, made by GNU Bison 2.1.  */
end_comment

begin_comment
comment|/* Skeleton parser for Yacc-like parsing with Bison,    Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.     This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2, or (at your option)    any later version.     This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 51 Franklin Street, Fifth Floor,    Boston, MA 02110-1301, USA.  */
end_comment

begin_comment
comment|/* As a special exception, when this file is copied by Bison into a    Bison output file, you may use that output file without restriction.    This special exception was added by the Free Software Foundation    in version 1.24 of Bison.  */
end_comment

begin_comment
comment|/* Tokens.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|YYTOKENTYPE
end_ifndef

begin_define
define|#
directive|define
name|YYTOKENTYPE
end_define

begin_comment
comment|/* Put the tokens into the symbol table, so that GDB and other debuggers       know about them.  */
end_comment

begin_enum
enum|enum
name|yytokentype
block|{
name|BYTEOP16P
init|=
literal|258
block|,
name|BYTEOP16M
init|=
literal|259
block|,
name|BYTEOP1P
init|=
literal|260
block|,
name|BYTEOP2P
init|=
literal|261
block|,
name|BYTEOP2M
init|=
literal|262
block|,
name|BYTEOP3P
init|=
literal|263
block|,
name|BYTEUNPACK
init|=
literal|264
block|,
name|BYTEPACK
init|=
literal|265
block|,
name|PACK
init|=
literal|266
block|,
name|SAA
init|=
literal|267
block|,
name|ALIGN8
init|=
literal|268
block|,
name|ALIGN16
init|=
literal|269
block|,
name|ALIGN24
init|=
literal|270
block|,
name|VIT_MAX
init|=
literal|271
block|,
name|EXTRACT
init|=
literal|272
block|,
name|DEPOSIT
init|=
literal|273
block|,
name|EXPADJ
init|=
literal|274
block|,
name|SEARCH
init|=
literal|275
block|,
name|ONES
init|=
literal|276
block|,
name|SIGN
init|=
literal|277
block|,
name|SIGNBITS
init|=
literal|278
block|,
name|LINK
init|=
literal|279
block|,
name|UNLINK
init|=
literal|280
block|,
name|REG
init|=
literal|281
block|,
name|PC
init|=
literal|282
block|,
name|CCREG
init|=
literal|283
block|,
name|BYTE_DREG
init|=
literal|284
block|,
name|REG_A_DOUBLE_ZERO
init|=
literal|285
block|,
name|REG_A_DOUBLE_ONE
init|=
literal|286
block|,
name|A_ZERO_DOT_L
init|=
literal|287
block|,
name|A_ZERO_DOT_H
init|=
literal|288
block|,
name|A_ONE_DOT_L
init|=
literal|289
block|,
name|A_ONE_DOT_H
init|=
literal|290
block|,
name|HALF_REG
init|=
literal|291
block|,
name|NOP
init|=
literal|292
block|,
name|RTI
init|=
literal|293
block|,
name|RTS
init|=
literal|294
block|,
name|RTX
init|=
literal|295
block|,
name|RTN
init|=
literal|296
block|,
name|RTE
init|=
literal|297
block|,
name|HLT
init|=
literal|298
block|,
name|IDLE
init|=
literal|299
block|,
name|STI
init|=
literal|300
block|,
name|CLI
init|=
literal|301
block|,
name|CSYNC
init|=
literal|302
block|,
name|SSYNC
init|=
literal|303
block|,
name|EMUEXCPT
init|=
literal|304
block|,
name|RAISE
init|=
literal|305
block|,
name|EXCPT
init|=
literal|306
block|,
name|LSETUP
init|=
literal|307
block|,
name|LOOP
init|=
literal|308
block|,
name|LOOP_BEGIN
init|=
literal|309
block|,
name|LOOP_END
init|=
literal|310
block|,
name|DISALGNEXCPT
init|=
literal|311
block|,
name|JUMP
init|=
literal|312
block|,
name|JUMP_DOT_S
init|=
literal|313
block|,
name|JUMP_DOT_L
init|=
literal|314
block|,
name|CALL
init|=
literal|315
block|,
name|ABORT
init|=
literal|316
block|,
name|NOT
init|=
literal|317
block|,
name|TILDA
init|=
literal|318
block|,
name|BANG
init|=
literal|319
block|,
name|AMPERSAND
init|=
literal|320
block|,
name|BAR
init|=
literal|321
block|,
name|PERCENT
init|=
literal|322
block|,
name|CARET
init|=
literal|323
block|,
name|BXOR
init|=
literal|324
block|,
name|MINUS
init|=
literal|325
block|,
name|PLUS
init|=
literal|326
block|,
name|STAR
init|=
literal|327
block|,
name|SLASH
init|=
literal|328
block|,
name|NEG
init|=
literal|329
block|,
name|MIN
init|=
literal|330
block|,
name|MAX
init|=
literal|331
block|,
name|ABS
init|=
literal|332
block|,
name|DOUBLE_BAR
init|=
literal|333
block|,
name|_PLUS_BAR_PLUS
init|=
literal|334
block|,
name|_PLUS_BAR_MINUS
init|=
literal|335
block|,
name|_MINUS_BAR_PLUS
init|=
literal|336
block|,
name|_MINUS_BAR_MINUS
init|=
literal|337
block|,
name|_MINUS_MINUS
init|=
literal|338
block|,
name|_PLUS_PLUS
init|=
literal|339
block|,
name|SHIFT
init|=
literal|340
block|,
name|LSHIFT
init|=
literal|341
block|,
name|ASHIFT
init|=
literal|342
block|,
name|BXORSHIFT
init|=
literal|343
block|,
name|_GREATER_GREATER_GREATER_THAN_ASSIGN
init|=
literal|344
block|,
name|ROT
init|=
literal|345
block|,
name|LESS_LESS
init|=
literal|346
block|,
name|GREATER_GREATER
init|=
literal|347
block|,
name|_GREATER_GREATER_GREATER
init|=
literal|348
block|,
name|_LESS_LESS_ASSIGN
init|=
literal|349
block|,
name|_GREATER_GREATER_ASSIGN
init|=
literal|350
block|,
name|DIVS
init|=
literal|351
block|,
name|DIVQ
init|=
literal|352
block|,
name|ASSIGN
init|=
literal|353
block|,
name|_STAR_ASSIGN
init|=
literal|354
block|,
name|_BAR_ASSIGN
init|=
literal|355
block|,
name|_CARET_ASSIGN
init|=
literal|356
block|,
name|_AMPERSAND_ASSIGN
init|=
literal|357
block|,
name|_MINUS_ASSIGN
init|=
literal|358
block|,
name|_PLUS_ASSIGN
init|=
literal|359
block|,
name|_ASSIGN_BANG
init|=
literal|360
block|,
name|_LESS_THAN_ASSIGN
init|=
literal|361
block|,
name|_ASSIGN_ASSIGN
init|=
literal|362
block|,
name|GE
init|=
literal|363
block|,
name|LT
init|=
literal|364
block|,
name|LE
init|=
literal|365
block|,
name|GT
init|=
literal|366
block|,
name|LESS_THAN
init|=
literal|367
block|,
name|FLUSHINV
init|=
literal|368
block|,
name|FLUSH
init|=
literal|369
block|,
name|IFLUSH
init|=
literal|370
block|,
name|PREFETCH
init|=
literal|371
block|,
name|PRNT
init|=
literal|372
block|,
name|OUTC
init|=
literal|373
block|,
name|WHATREG
init|=
literal|374
block|,
name|TESTSET
init|=
literal|375
block|,
name|ASL
init|=
literal|376
block|,
name|ASR
init|=
literal|377
block|,
name|B
init|=
literal|378
block|,
name|W
init|=
literal|379
block|,
name|NS
init|=
literal|380
block|,
name|S
init|=
literal|381
block|,
name|CO
init|=
literal|382
block|,
name|SCO
init|=
literal|383
block|,
name|TH
init|=
literal|384
block|,
name|TL
init|=
literal|385
block|,
name|BP
init|=
literal|386
block|,
name|BREV
init|=
literal|387
block|,
name|X
init|=
literal|388
block|,
name|Z
init|=
literal|389
block|,
name|M
init|=
literal|390
block|,
name|MMOD
init|=
literal|391
block|,
name|R
init|=
literal|392
block|,
name|RND
init|=
literal|393
block|,
name|RNDL
init|=
literal|394
block|,
name|RNDH
init|=
literal|395
block|,
name|RND12
init|=
literal|396
block|,
name|RND20
init|=
literal|397
block|,
name|V
init|=
literal|398
block|,
name|LO
init|=
literal|399
block|,
name|HI
init|=
literal|400
block|,
name|BITTGL
init|=
literal|401
block|,
name|BITCLR
init|=
literal|402
block|,
name|BITSET
init|=
literal|403
block|,
name|BITTST
init|=
literal|404
block|,
name|BITMUX
init|=
literal|405
block|,
name|DBGAL
init|=
literal|406
block|,
name|DBGAH
init|=
literal|407
block|,
name|DBGHALT
init|=
literal|408
block|,
name|DBG
init|=
literal|409
block|,
name|DBGA
init|=
literal|410
block|,
name|DBGCMPLX
init|=
literal|411
block|,
name|IF
init|=
literal|412
block|,
name|COMMA
init|=
literal|413
block|,
name|BY
init|=
literal|414
block|,
name|COLON
init|=
literal|415
block|,
name|SEMICOLON
init|=
literal|416
block|,
name|RPAREN
init|=
literal|417
block|,
name|LPAREN
init|=
literal|418
block|,
name|LBRACK
init|=
literal|419
block|,
name|RBRACK
init|=
literal|420
block|,
name|STATUS_REG
init|=
literal|421
block|,
name|MNOP
init|=
literal|422
block|,
name|SYMBOL
init|=
literal|423
block|,
name|NUMBER
init|=
literal|424
block|,
name|GOT
init|=
literal|425
block|,
name|GOT17M4
init|=
literal|426
block|,
name|FUNCDESC_GOT17M4
init|=
literal|427
block|,
name|AT
init|=
literal|428
block|,
name|PLTPC
init|=
literal|429
block|}
enum|;
end_enum

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Tokens.  */
end_comment

begin_define
define|#
directive|define
name|BYTEOP16P
value|258
end_define

begin_define
define|#
directive|define
name|BYTEOP16M
value|259
end_define

begin_define
define|#
directive|define
name|BYTEOP1P
value|260
end_define

begin_define
define|#
directive|define
name|BYTEOP2P
value|261
end_define

begin_define
define|#
directive|define
name|BYTEOP2M
value|262
end_define

begin_define
define|#
directive|define
name|BYTEOP3P
value|263
end_define

begin_define
define|#
directive|define
name|BYTEUNPACK
value|264
end_define

begin_define
define|#
directive|define
name|BYTEPACK
value|265
end_define

begin_define
define|#
directive|define
name|PACK
value|266
end_define

begin_define
define|#
directive|define
name|SAA
value|267
end_define

begin_define
define|#
directive|define
name|ALIGN8
value|268
end_define

begin_define
define|#
directive|define
name|ALIGN16
value|269
end_define

begin_define
define|#
directive|define
name|ALIGN24
value|270
end_define

begin_define
define|#
directive|define
name|VIT_MAX
value|271
end_define

begin_define
define|#
directive|define
name|EXTRACT
value|272
end_define

begin_define
define|#
directive|define
name|DEPOSIT
value|273
end_define

begin_define
define|#
directive|define
name|EXPADJ
value|274
end_define

begin_define
define|#
directive|define
name|SEARCH
value|275
end_define

begin_define
define|#
directive|define
name|ONES
value|276
end_define

begin_define
define|#
directive|define
name|SIGN
value|277
end_define

begin_define
define|#
directive|define
name|SIGNBITS
value|278
end_define

begin_define
define|#
directive|define
name|LINK
value|279
end_define

begin_define
define|#
directive|define
name|UNLINK
value|280
end_define

begin_define
define|#
directive|define
name|REG
value|281
end_define

begin_define
define|#
directive|define
name|PC
value|282
end_define

begin_define
define|#
directive|define
name|CCREG
value|283
end_define

begin_define
define|#
directive|define
name|BYTE_DREG
value|284
end_define

begin_define
define|#
directive|define
name|REG_A_DOUBLE_ZERO
value|285
end_define

begin_define
define|#
directive|define
name|REG_A_DOUBLE_ONE
value|286
end_define

begin_define
define|#
directive|define
name|A_ZERO_DOT_L
value|287
end_define

begin_define
define|#
directive|define
name|A_ZERO_DOT_H
value|288
end_define

begin_define
define|#
directive|define
name|A_ONE_DOT_L
value|289
end_define

begin_define
define|#
directive|define
name|A_ONE_DOT_H
value|290
end_define

begin_define
define|#
directive|define
name|HALF_REG
value|291
end_define

begin_define
define|#
directive|define
name|NOP
value|292
end_define

begin_define
define|#
directive|define
name|RTI
value|293
end_define

begin_define
define|#
directive|define
name|RTS
value|294
end_define

begin_define
define|#
directive|define
name|RTX
value|295
end_define

begin_define
define|#
directive|define
name|RTN
value|296
end_define

begin_define
define|#
directive|define
name|RTE
value|297
end_define

begin_define
define|#
directive|define
name|HLT
value|298
end_define

begin_define
define|#
directive|define
name|IDLE
value|299
end_define

begin_define
define|#
directive|define
name|STI
value|300
end_define

begin_define
define|#
directive|define
name|CLI
value|301
end_define

begin_define
define|#
directive|define
name|CSYNC
value|302
end_define

begin_define
define|#
directive|define
name|SSYNC
value|303
end_define

begin_define
define|#
directive|define
name|EMUEXCPT
value|304
end_define

begin_define
define|#
directive|define
name|RAISE
value|305
end_define

begin_define
define|#
directive|define
name|EXCPT
value|306
end_define

begin_define
define|#
directive|define
name|LSETUP
value|307
end_define

begin_define
define|#
directive|define
name|LOOP
value|308
end_define

begin_define
define|#
directive|define
name|LOOP_BEGIN
value|309
end_define

begin_define
define|#
directive|define
name|LOOP_END
value|310
end_define

begin_define
define|#
directive|define
name|DISALGNEXCPT
value|311
end_define

begin_define
define|#
directive|define
name|JUMP
value|312
end_define

begin_define
define|#
directive|define
name|JUMP_DOT_S
value|313
end_define

begin_define
define|#
directive|define
name|JUMP_DOT_L
value|314
end_define

begin_define
define|#
directive|define
name|CALL
value|315
end_define

begin_define
define|#
directive|define
name|ABORT
value|316
end_define

begin_define
define|#
directive|define
name|NOT
value|317
end_define

begin_define
define|#
directive|define
name|TILDA
value|318
end_define

begin_define
define|#
directive|define
name|BANG
value|319
end_define

begin_define
define|#
directive|define
name|AMPERSAND
value|320
end_define

begin_define
define|#
directive|define
name|BAR
value|321
end_define

begin_define
define|#
directive|define
name|PERCENT
value|322
end_define

begin_define
define|#
directive|define
name|CARET
value|323
end_define

begin_define
define|#
directive|define
name|BXOR
value|324
end_define

begin_define
define|#
directive|define
name|MINUS
value|325
end_define

begin_define
define|#
directive|define
name|PLUS
value|326
end_define

begin_define
define|#
directive|define
name|STAR
value|327
end_define

begin_define
define|#
directive|define
name|SLASH
value|328
end_define

begin_define
define|#
directive|define
name|NEG
value|329
end_define

begin_define
define|#
directive|define
name|MIN
value|330
end_define

begin_define
define|#
directive|define
name|MAX
value|331
end_define

begin_define
define|#
directive|define
name|ABS
value|332
end_define

begin_define
define|#
directive|define
name|DOUBLE_BAR
value|333
end_define

begin_define
define|#
directive|define
name|_PLUS_BAR_PLUS
value|334
end_define

begin_define
define|#
directive|define
name|_PLUS_BAR_MINUS
value|335
end_define

begin_define
define|#
directive|define
name|_MINUS_BAR_PLUS
value|336
end_define

begin_define
define|#
directive|define
name|_MINUS_BAR_MINUS
value|337
end_define

begin_define
define|#
directive|define
name|_MINUS_MINUS
value|338
end_define

begin_define
define|#
directive|define
name|_PLUS_PLUS
value|339
end_define

begin_define
define|#
directive|define
name|SHIFT
value|340
end_define

begin_define
define|#
directive|define
name|LSHIFT
value|341
end_define

begin_define
define|#
directive|define
name|ASHIFT
value|342
end_define

begin_define
define|#
directive|define
name|BXORSHIFT
value|343
end_define

begin_define
define|#
directive|define
name|_GREATER_GREATER_GREATER_THAN_ASSIGN
value|344
end_define

begin_define
define|#
directive|define
name|ROT
value|345
end_define

begin_define
define|#
directive|define
name|LESS_LESS
value|346
end_define

begin_define
define|#
directive|define
name|GREATER_GREATER
value|347
end_define

begin_define
define|#
directive|define
name|_GREATER_GREATER_GREATER
value|348
end_define

begin_define
define|#
directive|define
name|_LESS_LESS_ASSIGN
value|349
end_define

begin_define
define|#
directive|define
name|_GREATER_GREATER_ASSIGN
value|350
end_define

begin_define
define|#
directive|define
name|DIVS
value|351
end_define

begin_define
define|#
directive|define
name|DIVQ
value|352
end_define

begin_define
define|#
directive|define
name|ASSIGN
value|353
end_define

begin_define
define|#
directive|define
name|_STAR_ASSIGN
value|354
end_define

begin_define
define|#
directive|define
name|_BAR_ASSIGN
value|355
end_define

begin_define
define|#
directive|define
name|_CARET_ASSIGN
value|356
end_define

begin_define
define|#
directive|define
name|_AMPERSAND_ASSIGN
value|357
end_define

begin_define
define|#
directive|define
name|_MINUS_ASSIGN
value|358
end_define

begin_define
define|#
directive|define
name|_PLUS_ASSIGN
value|359
end_define

begin_define
define|#
directive|define
name|_ASSIGN_BANG
value|360
end_define

begin_define
define|#
directive|define
name|_LESS_THAN_ASSIGN
value|361
end_define

begin_define
define|#
directive|define
name|_ASSIGN_ASSIGN
value|362
end_define

begin_define
define|#
directive|define
name|GE
value|363
end_define

begin_define
define|#
directive|define
name|LT
value|364
end_define

begin_define
define|#
directive|define
name|LE
value|365
end_define

begin_define
define|#
directive|define
name|GT
value|366
end_define

begin_define
define|#
directive|define
name|LESS_THAN
value|367
end_define

begin_define
define|#
directive|define
name|FLUSHINV
value|368
end_define

begin_define
define|#
directive|define
name|FLUSH
value|369
end_define

begin_define
define|#
directive|define
name|IFLUSH
value|370
end_define

begin_define
define|#
directive|define
name|PREFETCH
value|371
end_define

begin_define
define|#
directive|define
name|PRNT
value|372
end_define

begin_define
define|#
directive|define
name|OUTC
value|373
end_define

begin_define
define|#
directive|define
name|WHATREG
value|374
end_define

begin_define
define|#
directive|define
name|TESTSET
value|375
end_define

begin_define
define|#
directive|define
name|ASL
value|376
end_define

begin_define
define|#
directive|define
name|ASR
value|377
end_define

begin_define
define|#
directive|define
name|B
value|378
end_define

begin_define
define|#
directive|define
name|W
value|379
end_define

begin_define
define|#
directive|define
name|NS
value|380
end_define

begin_define
define|#
directive|define
name|S
value|381
end_define

begin_define
define|#
directive|define
name|CO
value|382
end_define

begin_define
define|#
directive|define
name|SCO
value|383
end_define

begin_define
define|#
directive|define
name|TH
value|384
end_define

begin_define
define|#
directive|define
name|TL
value|385
end_define

begin_define
define|#
directive|define
name|BP
value|386
end_define

begin_define
define|#
directive|define
name|BREV
value|387
end_define

begin_define
define|#
directive|define
name|X
value|388
end_define

begin_define
define|#
directive|define
name|Z
value|389
end_define

begin_define
define|#
directive|define
name|M
value|390
end_define

begin_define
define|#
directive|define
name|MMOD
value|391
end_define

begin_define
define|#
directive|define
name|R
value|392
end_define

begin_define
define|#
directive|define
name|RND
value|393
end_define

begin_define
define|#
directive|define
name|RNDL
value|394
end_define

begin_define
define|#
directive|define
name|RNDH
value|395
end_define

begin_define
define|#
directive|define
name|RND12
value|396
end_define

begin_define
define|#
directive|define
name|RND20
value|397
end_define

begin_define
define|#
directive|define
name|V
value|398
end_define

begin_define
define|#
directive|define
name|LO
value|399
end_define

begin_define
define|#
directive|define
name|HI
value|400
end_define

begin_define
define|#
directive|define
name|BITTGL
value|401
end_define

begin_define
define|#
directive|define
name|BITCLR
value|402
end_define

begin_define
define|#
directive|define
name|BITSET
value|403
end_define

begin_define
define|#
directive|define
name|BITTST
value|404
end_define

begin_define
define|#
directive|define
name|BITMUX
value|405
end_define

begin_define
define|#
directive|define
name|DBGAL
value|406
end_define

begin_define
define|#
directive|define
name|DBGAH
value|407
end_define

begin_define
define|#
directive|define
name|DBGHALT
value|408
end_define

begin_define
define|#
directive|define
name|DBG
value|409
end_define

begin_define
define|#
directive|define
name|DBGA
value|410
end_define

begin_define
define|#
directive|define
name|DBGCMPLX
value|411
end_define

begin_define
define|#
directive|define
name|IF
value|412
end_define

begin_define
define|#
directive|define
name|COMMA
value|413
end_define

begin_define
define|#
directive|define
name|BY
value|414
end_define

begin_define
define|#
directive|define
name|COLON
value|415
end_define

begin_define
define|#
directive|define
name|SEMICOLON
value|416
end_define

begin_define
define|#
directive|define
name|RPAREN
value|417
end_define

begin_define
define|#
directive|define
name|LPAREN
value|418
end_define

begin_define
define|#
directive|define
name|LBRACK
value|419
end_define

begin_define
define|#
directive|define
name|RBRACK
value|420
end_define

begin_define
define|#
directive|define
name|STATUS_REG
value|421
end_define

begin_define
define|#
directive|define
name|MNOP
value|422
end_define

begin_define
define|#
directive|define
name|SYMBOL
value|423
end_define

begin_define
define|#
directive|define
name|NUMBER
value|424
end_define

begin_define
define|#
directive|define
name|GOT
value|425
end_define

begin_define
define|#
directive|define
name|GOT17M4
value|426
end_define

begin_define
define|#
directive|define
name|FUNCDESC_GOT17M4
value|427
end_define

begin_define
define|#
directive|define
name|AT
value|428
end_define

begin_define
define|#
directive|define
name|PLTPC
value|429
end_define

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|YYSTYPE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|YYSTYPE_IS_DECLARED
argument_list|)
end_if

begin_line
line|#
directive|line
number|366
file|"bfin-parse.y"
end_line

begin_typedef
typedef|typedef
union|union
name|YYSTYPE
block|{
name|INSTR_T
name|instr
decl_stmt|;
name|Expr_Node
modifier|*
name|expr
decl_stmt|;
name|SYMBOL_T
name|symbol
decl_stmt|;
name|long
name|value
decl_stmt|;
name|Register
name|reg
decl_stmt|;
name|Macfunc
name|macfunc
decl_stmt|;
struct|struct
block|{
name|int
name|r0
decl_stmt|;
name|int
name|s0
decl_stmt|;
name|int
name|x0
decl_stmt|;
name|int
name|aop
decl_stmt|;
block|}
name|modcodes
struct|;
struct|struct
block|{
name|int
name|r0
decl_stmt|;
block|}
name|r0
struct|;
name|Opt_mode
name|mod
decl_stmt|;
block|}
name|YYSTYPE
typedef|;
end_typedef

begin_comment
comment|/* Line 1447 of yacc.c.  */
end_comment

begin_line
line|#
directive|line
number|398
file|"bfin-parse.h"
end_line

begin_define
define|#
directive|define
name|yystype
value|YYSTYPE
end_define

begin_comment
comment|/* obsolescent; will be withdrawn */
end_comment

begin_define
define|#
directive|define
name|YYSTYPE_IS_DECLARED
value|1
end_define

begin_define
define|#
directive|define
name|YYSTYPE_IS_TRIVIAL
value|1
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|extern
name|YYSTYPE
name|yylval
decl_stmt|;
end_decl_stmt

end_unit

