begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/**  * stdexcept.h - provides a stub version of<stdexcept>, which defines enough  * of the exceptions for the runtime to use.    */
end_comment

begin_decl_stmt
name|namespace
name|std
block|{
name|class
name|exception
block|{
name|public
label|:
name|exception
argument_list|()
name|throw
argument_list|()
expr_stmt|;
name|exception
argument_list|(
argument|const exception&
argument_list|)
name|throw
argument_list|()
expr_stmt|;
name|exception
modifier|&
name|operator
init|=
operator|(
specifier|const
name|exception
operator|&
operator|)
name|throw
argument_list|()
decl_stmt|;
name|virtual
operator|~
name|exception
argument_list|()
expr_stmt|;
name|virtual
specifier|const
name|char
operator|*
name|what
argument_list|()
specifier|const
name|throw
argument_list|()
expr_stmt|;
block|}
empty_stmt|;
comment|/** 	 * Bad allocation exception.  Thrown by ::operator new() if it fails. 	 */
name|class
name|bad_alloc
range|:
name|public
name|exception
block|{
name|public
operator|:
name|bad_alloc
argument_list|()
name|throw
argument_list|()
block|;
name|bad_alloc
argument_list|(
argument|const bad_alloc&
argument_list|)
name|throw
argument_list|()
block|;
name|bad_alloc
operator|&
name|operator
operator|=
operator|(
specifier|const
name|bad_alloc
operator|&
operator|)
name|throw
argument_list|()
block|;
operator|~
name|bad_alloc
argument_list|()
block|;
name|virtual
specifier|const
name|char
operator|*
name|what
argument_list|()
specifier|const
name|throw
argument_list|()
block|; 	}
decl_stmt|;
comment|/** 	 * Bad cast exception.  Thrown by the __cxa_bad_cast() helper function. 	 */
name|class
name|bad_cast
range|:
name|public
name|exception
block|{
name|public
operator|:
name|bad_cast
argument_list|()
name|throw
argument_list|()
block|;
name|bad_cast
argument_list|(
argument|const bad_cast&
argument_list|)
name|throw
argument_list|()
block|;
name|bad_cast
operator|&
name|operator
operator|=
operator|(
specifier|const
name|bad_cast
operator|&
operator|)
name|throw
argument_list|()
block|;
name|virtual
operator|~
name|bad_cast
argument_list|()
block|;
name|virtual
specifier|const
name|char
operator|*
name|what
argument_list|()
specifier|const
name|throw
argument_list|()
block|; 	}
decl_stmt|;
comment|/** 	 * Bad typeidexception.  Thrown by the __cxa_bad_typeid() helper function. 	 */
name|class
name|bad_typeid
range|:
name|public
name|exception
block|{
name|public
operator|:
name|bad_typeid
argument_list|()
name|throw
argument_list|()
block|;
name|bad_typeid
argument_list|(
argument|const bad_typeid&__rhs
argument_list|)
name|throw
argument_list|()
block|;
name|virtual
operator|~
name|bad_typeid
argument_list|()
block|;
name|bad_typeid
operator|&
name|operator
operator|=
operator|(
specifier|const
name|bad_typeid
operator|&
name|__rhs
operator|)
name|throw
argument_list|()
block|;
name|virtual
specifier|const
name|char
operator|*
name|what
argument_list|()
specifier|const
name|throw
argument_list|()
block|; 	}
decl_stmt|;
block|}
end_decl_stmt

begin_comment
comment|// namespace std
end_comment

end_unit

