begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1993 The Regents of the University of California.  * All rights reserved.  *  * This code is derived from software contributed to Berkeley by  * Peter McIlroy.  *  * %sccs.include.redist.c%  *  *	@(#)extern.h	5.1 (Berkeley) %G%  */
end_comment

begin_decl_stmt
name|void
name|append
name|__P
argument_list|(
operator|(
name|u_char
operator|*
operator|*
operator|,
name|int
operator|,
name|int
operator|,
name|FILE
operator|*
operator|,
name|void
argument_list|(
operator|*
argument_list|)
argument_list|()
operator|,
expr|struct
name|field
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|concat
name|__P
argument_list|(
operator|(
name|FILE
operator|*
operator|,
name|FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|length_t
name|enterkey
name|__P
argument_list|(
operator|(
expr|struct
name|recheader
operator|*
operator|,
name|DBT
operator|*
operator|,
name|int
operator|,
expr|struct
name|field
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|fixit
name|__P
argument_list|(
operator|(
name|int
operator|*
operator|,
name|char
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|fldreset
name|__P
argument_list|(
operator|(
expr|struct
name|field
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|FILE
modifier|*
name|ftmp
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|fmerge
name|__P
argument_list|(
operator|(
name|int
operator|,
expr|union
name|f_handle
operator|,
name|int
operator|,
name|int
argument_list|(
operator|*
argument_list|)
argument_list|()
operator|,
name|FILE
operator|*
operator|,
name|void
argument_list|(
operator|*
argument_list|)
argument_list|()
operator|,
expr|struct
name|field
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|fsort
name|__P
argument_list|(
operator|(
name|int
operator|,
name|int
operator|,
expr|union
name|f_handle
operator|,
name|int
operator|,
name|FILE
operator|*
operator|,
expr|struct
name|field
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|geteasy
name|__P
argument_list|(
operator|(
name|int
operator|,
expr|union
name|f_handle
operator|,
name|int
operator|,
expr|struct
name|recheader
operator|*
operator|,
name|u_char
operator|*
operator|,
expr|struct
name|field
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|getnext
name|__P
argument_list|(
operator|(
name|int
operator|,
expr|union
name|f_handle
operator|,
name|int
operator|,
expr|struct
name|recheader
operator|*
operator|,
name|u_char
operator|*
operator|,
expr|struct
name|field
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|makekey
name|__P
argument_list|(
operator|(
name|int
operator|,
expr|union
name|f_handle
operator|,
name|int
operator|,
expr|struct
name|recheader
operator|*
operator|,
name|u_char
operator|*
operator|,
expr|struct
name|field
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|makeline
name|__P
argument_list|(
operator|(
name|int
operator|,
expr|union
name|f_handle
operator|,
name|int
operator|,
expr|struct
name|recheader
operator|*
operator|,
name|u_char
operator|*
operator|,
expr|struct
name|field
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|merge
name|__P
argument_list|(
operator|(
name|int
operator|,
name|int
operator|,
name|int
argument_list|(
operator|*
argument_list|)
argument_list|()
operator|,
name|FILE
operator|*
operator|,
name|void
argument_list|(
operator|*
argument_list|)
argument_list|()
operator|,
expr|struct
name|field
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|num_init
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|onepass
name|__P
argument_list|(
operator|(
name|u_char
operator|*
operator|*
operator|,
name|int
operator|,
name|long
operator|,
name|long
operator|*
operator|,
name|u_char
operator|*
operator|,
name|FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|optval
name|__P
argument_list|(
operator|(
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|order
name|__P
argument_list|(
operator|(
expr|union
name|f_handle
operator|,
name|int
argument_list|(
operator|*
argument_list|)
argument_list|()
operator|,
expr|struct
name|field
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|putline
name|__P
argument_list|(
operator|(
expr|struct
name|recheader
operator|*
operator|,
name|FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|putrec
name|__P
argument_list|(
operator|(
expr|struct
name|recheader
operator|*
operator|,
name|FILE
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|rd_append
name|__P
argument_list|(
operator|(
name|int
operator|,
expr|union
name|f_handle
operator|,
name|int
operator|,
name|FILE
operator|*
operator|,
name|u_char
operator|*
operator|,
name|u_char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|seq
name|__P
argument_list|(
operator|(
name|FILE
operator|*
operator|,
name|DBT
operator|*
operator|,
name|DBT
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|setfield
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|,
expr|struct
name|field
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|settables
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

end_unit

