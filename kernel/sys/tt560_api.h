begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/***********************************************************************  *  *  Module:  ttime_api.h  *  *  Author:  SIS  1998  *           LM NE&SS 2001  *  *  Description  *  *      This header file contains data necessary for the API to the  *      True Time board. This contains all of the structure definitions  *      for the individual registers.  *  ***********************************************************************/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|TTIME_API_H
end_ifndef

begin_define
define|#
directive|define
name|TTIME_API_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|CPP
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
include|#
directive|include
file|<time.h>
typedef|typedef
struct|struct
block|{
name|unsigned
name|int
name|micro_sec
decl_stmt|;
name|unsigned
name|int
name|milli_sec
decl_stmt|;
name|struct
name|tm
name|gps_tm
decl_stmt|;
block|}
name|gps_time_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|char
name|reserved_1
decl_stmt|;
name|unsigned
name|unit_ms
range|:
literal|4
decl_stmt|;
name|unsigned
name|filler_0
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_ms
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_ms
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_hour
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_hour
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_day
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_day
range|:
literal|4
decl_stmt|;
name|unsigned
name|filler_1
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_day
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_year
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_year
range|:
literal|4
decl_stmt|;
name|unsigned
name|thou_year
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_year
range|:
literal|4
decl_stmt|;
name|unsigned
name|char
name|reserved_2
index|[
literal|2
index|]
decl_stmt|;
block|}
name|preset_time_reg_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|n_d0
range|:
literal|2
decl_stmt|;
name|unsigned
name|antenna_short_stat
range|:
literal|1
decl_stmt|;
comment|/* 0 = fault */
name|unsigned
name|antenna_open_stat
range|:
literal|1
decl_stmt|;
comment|/* 0 = fault */
name|unsigned
name|n_d1
range|:
literal|1
decl_stmt|;
name|unsigned
name|rate_gen_pulse_stat
range|:
literal|1
decl_stmt|;
name|unsigned
name|time_cmp_pulse_stat
range|:
literal|1
decl_stmt|;
name|unsigned
name|ext_event_stat
range|:
literal|1
decl_stmt|;
block|}
name|hw_stat_reg_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|tens_us
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_us
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_ms
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_us
range|:
literal|4
decl_stmt|;
name|unsigned
name|char
name|hw_stat
decl_stmt|;
comment|/* hw_stat_reg_t hw_stat; */
name|unsigned
name|char
name|reserved_3
decl_stmt|;
name|unsigned
name|hun_ms
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_ms
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_hour
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_hour
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_day
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_day
range|:
literal|4
decl_stmt|;
name|unsigned
name|status
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_day
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_year
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_year
range|:
literal|4
decl_stmt|;
name|unsigned
name|thou_year
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_year
range|:
literal|4
decl_stmt|;
block|}
name|time_freeze_reg_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|char
name|off_low
decl_stmt|;
name|unsigned
name|char
name|off_high
decl_stmt|;
name|unsigned
name|char
name|reserved_4
index|[
literal|2
index|]
decl_stmt|;
block|}
name|sync_gen_off_reg_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|tens_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_hour
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_hour
range|:
literal|4
decl_stmt|;
name|unsigned
name|char
name|sign_ascii
decl_stmt|;
comment|/* '+' or '-' */
name|unsigned
name|char
name|reserved_5
decl_stmt|;
block|}
name|local_off_t
typedef|;
comment|/*  *  This structure can be used for both the position freeze  *  and position preset registers.  */
typedef|typedef
struct|struct
block|{
name|unsigned
name|lat_tens_degee
range|:
literal|4
decl_stmt|;
name|unsigned
name|lat_unit_degee
range|:
literal|4
decl_stmt|;
name|unsigned
name|filler_0
range|:
literal|4
decl_stmt|;
name|unsigned
name|lat_hun_degree
range|:
literal|4
decl_stmt|;
name|unsigned
name|lat_tens_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|lat_unit_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|char
name|lat_north_south
decl_stmt|;
comment|/* 'N' or 'S' */
name|unsigned
name|filler_1
range|:
literal|4
decl_stmt|;
name|unsigned
name|lat_tenth_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|lat_tens_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|lat_unit_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|long_tens_degree
range|:
literal|4
decl_stmt|;
name|unsigned
name|long_unit_degree
range|:
literal|4
decl_stmt|;
name|unsigned
name|filler_2
range|:
literal|4
decl_stmt|;
name|unsigned
name|long_hun_degree
range|:
literal|4
decl_stmt|;
name|unsigned
name|long_tens_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|long_unit_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|char
name|long_east_west
decl_stmt|;
comment|/* 'E' or 'W' */
name|unsigned
name|filler_3
range|:
literal|4
decl_stmt|;
name|unsigned
name|long_tenth_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|long_tens_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|long_unit_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|elv_tens_km
range|:
literal|4
decl_stmt|;
name|unsigned
name|elv_unit_km
range|:
literal|4
decl_stmt|;
name|unsigned
name|char
name|elv_sign
decl_stmt|;
comment|/* '+' or '-' */
name|unsigned
name|elv_unit_m
range|:
literal|4
decl_stmt|;
name|unsigned
name|elv_tenth_m
range|:
literal|4
decl_stmt|;
name|unsigned
name|elv_hun_m
range|:
literal|4
decl_stmt|;
name|unsigned
name|elv_tens_m
range|:
literal|4
decl_stmt|;
block|}
name|pos_reg_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|char
name|prn1_tens_units
decl_stmt|;
name|unsigned
name|char
name|prn1_reserved
decl_stmt|;
name|unsigned
name|char
name|lvl1_tenths_hundredths
decl_stmt|;
name|unsigned
name|char
name|lvl1_tens_units
decl_stmt|;
name|unsigned
name|char
name|prn2_tens_units
decl_stmt|;
name|unsigned
name|char
name|prn2_reserved
decl_stmt|;
name|unsigned
name|char
name|lvl2_tenths_hundredths
decl_stmt|;
name|unsigned
name|char
name|lvl2_tens_units
decl_stmt|;
name|unsigned
name|char
name|prn3_tens_units
decl_stmt|;
name|unsigned
name|char
name|prn3_reserved
decl_stmt|;
name|unsigned
name|char
name|lvl3_tenths_hundredths
decl_stmt|;
name|unsigned
name|char
name|lvl3_tens_units
decl_stmt|;
name|unsigned
name|char
name|prn4_tens_units
decl_stmt|;
name|unsigned
name|char
name|prn4_reserved
decl_stmt|;
name|unsigned
name|char
name|lvl4_tenths_hundredths
decl_stmt|;
name|unsigned
name|char
name|lvl4_tens_units
decl_stmt|;
name|unsigned
name|char
name|prn5_tens_units
decl_stmt|;
name|unsigned
name|char
name|prn5_reserved
decl_stmt|;
name|unsigned
name|char
name|lvl5_tenths_hundredths
decl_stmt|;
name|unsigned
name|char
name|lvl5_tens_units
decl_stmt|;
name|unsigned
name|char
name|prn6_tens_units
decl_stmt|;
name|unsigned
name|char
name|prn6_reserved
decl_stmt|;
name|unsigned
name|char
name|lvl6_tenths_hundredths
decl_stmt|;
name|unsigned
name|char
name|lvl6_tens_units
decl_stmt|;
name|unsigned
name|char
name|flag
decl_stmt|;
name|unsigned
name|char
name|reserved
index|[
literal|3
index|]
decl_stmt|;
block|}
name|sig_levels_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|tens_us
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_us
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_ms
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_us
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_ms
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_ms
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_hour
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_hour
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_day
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_day
range|:
literal|4
decl_stmt|;
name|unsigned
name|stat
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_day
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_year
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_year
range|:
literal|4
decl_stmt|;
name|unsigned
name|thou_year
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_year
range|:
literal|4
decl_stmt|;
name|unsigned
name|char
name|reserved_5
index|[
literal|2
index|]
decl_stmt|;
block|}
name|ext_time_event_reg_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|tens_us
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_us
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_ms
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_us
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_ms
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_ms
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_sec
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_min
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_hour
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_hour
range|:
literal|4
decl_stmt|;
name|unsigned
name|tens_day
range|:
literal|4
decl_stmt|;
name|unsigned
name|unit_day
range|:
literal|4
decl_stmt|;
name|unsigned
name|mask
range|:
literal|4
decl_stmt|;
name|unsigned
name|hun_day
range|:
literal|4
decl_stmt|;
block|}
name|time_cmp_reg_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|char
name|err_stat
decl_stmt|;
name|unsigned
name|char
name|no_def
decl_stmt|;
name|unsigned
name|char
name|oscillator_stat
index|[
literal|2
index|]
decl_stmt|;
block|}
name|diag_reg_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|res
range|:
literal|2
decl_stmt|;
name|unsigned
name|rate_int_mask
range|:
literal|1
decl_stmt|;
name|unsigned
name|cmp_int_mask
range|:
literal|1
decl_stmt|;
name|unsigned
name|ext_int_mask
range|:
literal|1
decl_stmt|;
name|unsigned
name|rate_stat_clr
range|:
literal|1
decl_stmt|;
name|unsigned
name|cmp_stat_clr
range|:
literal|1
decl_stmt|;
name|unsigned
name|ext_stat_clr
range|:
literal|1
decl_stmt|;
name|unsigned
name|char
name|reserved
index|[
literal|3
index|]
decl_stmt|;
block|}
name|hw_ctl_reg_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|preset_pos_rdy
range|:
literal|1
decl_stmt|;
name|unsigned
name|sel_pps_ref
range|:
literal|1
decl_stmt|;
name|unsigned
name|sel_gps_ref
range|:
literal|1
decl_stmt|;
name|unsigned
name|sel_time_code
range|:
literal|1
decl_stmt|;
name|unsigned
name|gen_stp_run
range|:
literal|1
decl_stmt|;
name|unsigned
name|preset_time_rdy
range|:
literal|1
decl_stmt|;
name|unsigned
name|dst
range|:
literal|1
decl_stmt|;
name|unsigned
name|mode_sel
range|:
literal|1
decl_stmt|;
name|unsigned
name|ctl_am_dc
range|:
literal|1
decl_stmt|;
name|unsigned
name|reserved
range|:
literal|3
decl_stmt|;
name|unsigned
name|input_code
range|:
literal|4
decl_stmt|;
name|unsigned
name|char
name|rate_reserved
decl_stmt|;
name|unsigned
name|rate_flag
range|:
literal|4
decl_stmt|;
name|unsigned
name|rate_reserved1
range|:
literal|4
decl_stmt|;
block|}
name|conf_reg_t
typedef|;
typedef|typedef
struct|struct
block|{
name|unsigned
name|char
name|mem_reserved
index|[
literal|0xf8
index|]
decl_stmt|;
name|hw_ctl_reg_t
name|hw_ctl_reg
decl_stmt|;
name|time_freeze_reg_t
name|time_freeze_reg
decl_stmt|;
name|pos_reg_t
name|pos_freeze_reg
decl_stmt|;
name|conf_reg_t
name|conf_reg
decl_stmt|;
name|diag_reg_t
name|diag_reg
decl_stmt|;
name|local_off_t
name|local_offset
decl_stmt|;
name|sync_gen_off_reg_t
name|sync_gen_offset
decl_stmt|;
name|unsigned
name|char
name|reserved
index|[
literal|4
index|]
decl_stmt|;
name|unsigned
name|char
name|config_reg2_ctl
decl_stmt|;
name|unsigned
name|char
name|reserved2
index|[
literal|11
index|]
decl_stmt|;
name|time_cmp_reg_t
name|time_compare_reg
decl_stmt|;
name|unsigned
name|char
name|reserved3
index|[
literal|24
index|]
decl_stmt|;
name|preset_time_reg_t
name|preset_time_reg
decl_stmt|;
name|pos_reg_t
name|preset_pos_reg
decl_stmt|;
name|ext_time_event_reg_t
name|extern_time_event_reg
decl_stmt|;
name|unsigned
name|char
name|reserved4
index|[
literal|24
index|]
decl_stmt|;
name|sig_levels_t
name|signal_levels_reg
decl_stmt|;
name|unsigned
name|char
name|reserved5
index|[
literal|12
index|]
decl_stmt|;
block|}
name|tt_mem_space_t
typedef|;
define|#
directive|define
name|TTIME_MEMORY_SIZE
value|0x200
comment|/*  *  Defines for register offsets  */
define|#
directive|define
name|HW_CTL_REG
value|0x0f8
define|#
directive|define
name|TIME_FREEZE_REG
value|0x0fc
define|#
directive|define
name|HW_STAT_REG
value|0x0fe
define|#
directive|define
name|POS_FREEZE_REG
value|0x108
define|#
directive|define
name|CONFIG_REG_1
value|0x118
define|#
directive|define
name|DIAG_REG
value|0x11c
define|#
directive|define
name|LOCAL_OFF_REG
value|0x120
define|#
directive|define
name|SYNC_GEN_OFF_REG
value|0x124
define|#
directive|define
name|CONFIG_REG_2
value|0x12c
define|#
directive|define
name|TIME_CMP_REG
value|0x138
define|#
directive|define
name|PRESET_TIME_REG
value|0x158
define|#
directive|define
name|PRESET_POS_REG
value|0x164
define|#
directive|define
name|EXT_EVENT_REG
value|0x174
define|#
directive|define
name|SIG_LVL_PRN1
value|0x198
define|#
directive|define
name|SIG_LVL_PRN2
value|0x19c
define|#
directive|define
name|SIG_LVL_PRN3
value|0x1a0
define|#
directive|define
name|SIG_LVL_PRN4
value|0x1a4
define|#
directive|define
name|SIG_LVL_PRN5
value|0x1a8
define|#
directive|define
name|SIG_LVL_PRN6
value|0x1ac
define|#
directive|define
name|SIG_LVL_FLAG
value|0x1b0
comment|/*  *  Defines for accessing the hardware status register.  */
define|#
directive|define
name|HW_STAT_ANTENNA_SHORT
value|0
comment|/* access the antenna short bit */
define|#
directive|define
name|HW_STAT_ANTENNA_OPEN
value|1
comment|/* access the antenna open bit */
define|#
directive|define
name|HW_STAT_RATE_GEN_PULSE_STAT
value|2
comment|/* access the rate gen pulse bit */
define|#
directive|define
name|HW_STAT_TIME_CMP_PULSE_STAT
value|3
comment|/* access the time cmp bit */
define|#
directive|define
name|HW_STAT_EXT_EVENT_STAT
value|4
comment|/* access the external event bit */
comment|/*  *  Defines for accessing the hardware control register  */
define|#
directive|define
name|HW_CTL_RATE_INT_MASK
value|0
comment|/* access rate generator int mask */
define|#
directive|define
name|HW_CTL_CMP_INT_MASK
value|1
comment|/* access compare interrupt mask */
define|#
directive|define
name|HW_CTL_EXT_INT_MASK
value|2
comment|/* access external event interrupt mask */
define|#
directive|define
name|HW_CTL_RATE_GEN_INT_CLEAR
value|3
comment|/* access rate gen. interrupt clear field */
define|#
directive|define
name|HW_CTL_TIME_CMP_INT_CLEAR
value|4
comment|/* access time cmp interrupt clear field */
define|#
directive|define
name|HW_CTL_EXT_EVENT_INT_CLEAR
value|5
comment|/* access external event int clear field */
comment|/*  *  Defines for configuration register bit fields.  */
define|#
directive|define
name|PRESET_POS_RDY_BIT
value|0
comment|/* access the preset pos. rdy. bit */
define|#
directive|define
name|SEL_1_PPS_REF_BIT
value|1
comment|/* access the select 1 pps reference bit */
define|#
directive|define
name|SEL_GPS_REF_BIT
value|2
comment|/* access the select gps reference bit */
define|#
directive|define
name|SEL_TIME_CODE_REF_BIT
value|3
comment|/* access the select time code reference bit */
define|#
directive|define
name|GEN_STOP_BIT
value|4
comment|/* access the generator start/stop bit */
define|#
directive|define
name|PRESET_TIME_RDY_BIT
value|5
comment|/* access the preset time ready bit */
define|#
directive|define
name|DST_BIT
value|6
comment|/* access the DST bit */
define|#
directive|define
name|MODE_SEL_BIT
value|7
comment|/* access the mode select bit */
define|#
directive|define
name|AM_DC_BIT
value|8
comment|/* access the code bits AM/DC bit */
define|#
directive|define
name|IN_CODE_SEL_BIT
value|9
comment|/* access the input code select bit */
define|#
directive|define
name|FLAG_BIT
value|10
comment|/* access the flag bit */
comment|/*  * The following defines are used to set modes in the   * configuration register.  */
define|#
directive|define
name|CONF_SET_AM
value|0
comment|/* Set code to AM   */
define|#
directive|define
name|CONF_SET_DC
value|1
comment|/* Set code to DC   */
define|#
directive|define
name|CONF_SET_IRIG_B
value|0
comment|/* Set code IRIG B  */
define|#
directive|define
name|CONF_SET_IRIG_A
value|1
comment|/* Set code IRIG A  */
define|#
directive|define
name|CONF_FLAG_DISABLE
value|0
comment|/* Disable pulse        */
define|#
directive|define
name|CONF_FLAG_10K_PPS
value|1
comment|/* Set rate to 10k PPS  */
define|#
directive|define
name|CONF_FLAG_1K_PPS
value|2
comment|/* Set rate to 1k PPS   */
define|#
directive|define
name|CONF_FLAG_100_PPS
value|3
comment|/* Set rate to 100 PPS  */
define|#
directive|define
name|CONF_FLAG_10_PPS
value|4
comment|/* Set rate to 10 PPS   */
define|#
directive|define
name|CONF_FLAG_1_PPS
value|5
comment|/* Set rate to 1 PPS    */
comment|/*  *  Defines for read commands  */
define|#
directive|define
name|TT_RD_FREEZE_REG
value|0x01
define|#
directive|define
name|TT_RD_HW_CTL_REG
value|0x02
define|#
directive|define
name|TT_RD_CNFG_REG
value|0x03
define|#
directive|define
name|TT_RD_DIAG_REG
value|0x04
define|#
directive|define
name|TT_RD_LCL_OFFSET
value|0x05
define|#
directive|define
name|TT_RD_SYNC_GEN_OFF
value|0x06
define|#
directive|define
name|TT_RD_CNFG_REG_2
value|0x07
define|#
directive|define
name|TT_RD_TIME_CMP_REG
value|0x08
define|#
directive|define
name|TT_RD_PRESET_REG
value|0x09
define|#
directive|define
name|TT_RD_EXT_EVNT_REG
value|0x0a
define|#
directive|define
name|TT_RD_SIG_LVL_REG
value|0x0b
comment|/*  *  Defines for write commands  */
define|#
directive|define
name|TT_WRT_FREEZE_REG
value|0x0c
define|#
directive|define
name|TT_WRT_HW_CTL_REG
value|0x0d
define|#
directive|define
name|TT_WRT_CNFG_REG
value|0x0e
define|#
directive|define
name|TT_WRT_DIAG_REG
value|0x0f
define|#
directive|define
name|TT_WRT_LCL_OFFSET
value|0x10
define|#
directive|define
name|TT_WRT_SYNC_GEN_OFF
value|0x11
define|#
directive|define
name|TT_WRT_CNFG_REG_2
value|0x12
define|#
directive|define
name|TT_WRT_TIME_CMP_REG
value|0x13
define|#
directive|define
name|TT_WRT_PRESET_REG
value|0x14
define|#
directive|define
name|TT_WRT_EXT_EVNT_REG
value|0x15
define|#
directive|define
name|TT_WRT_SIG_LVL_REG
value|0x16
comment|/*  *  Define the length of the buffers to move (in 32 bit words).  */
define|#
directive|define
name|HW_CTL_REG_LEN
value|1
define|#
directive|define
name|CNFG_REG_1_LEN
value|1
define|#
directive|define
name|DIAG_REG_LEN
value|1
define|#
directive|define
name|LCL_OFFSET_LEN
value|1
define|#
directive|define
name|SYNC_GEN_OFF_LEN
value|1
define|#
directive|define
name|CNFG_REG_2_LEN
value|1
define|#
directive|define
name|TIME_CMP_REG_LEN
value|2
define|#
directive|define
name|PRESET_TIME_REG_LEN
value|3
define|#
directive|define
name|PRESET_POS_REG_LEN
value|4
define|#
directive|define
name|PRESET_REG_LEN
value|(PRESET_TIME_REG_LEN+PRESET_POS_REG_LEN)
define|#
directive|define
name|TIME_FREEZE_REG_LEN
value|3
define|#
directive|define
name|POSN_FREEZE_REG_LEN
value|4
define|#
directive|define
name|FREEZE_REG_LEN
value|(TIME_FREEZE_REG_LEN+POSN_FREEZE_REG_LEN)
define|#
directive|define
name|EXT_EVNT_REG_LEN
value|3
define|#
directive|define
name|SIG_LVL_REG_LEN
value|7
define|#
directive|define
name|GPS_TIME_LEN
value|7
comment|/*  * Define BCD - INT - BCD macros.  */
define|#
directive|define
name|BCDTOI
parameter_list|(
name|a
parameter_list|)
value|( ( ( ( (a)& 0xf0 )>> 4 ) * 10 )  + ( (a)& 0x0f ) )
define|#
directive|define
name|ITOBCD
parameter_list|(
name|a
parameter_list|)
value|( ( ( (           (a) ) / 10)<< 4 ) + ( (           (a) ) % 10) )
define|#
directive|define
name|LTOBCD
parameter_list|(
name|a
parameter_list|)
value|( ( ( ( (uint64_t)(a) ) / 10)<< 4 ) + ( ( (uint64_t)(a) ) % 10) )
specifier|extern
name|int
name|init_560
parameter_list|(                      )
function_decl|;
specifier|extern
name|void
name|close_560
parameter_list|(                      )
function_decl|;
specifier|extern
name|int
name|write_hw_ctl_reg
parameter_list|(
name|hw_ctl_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|write_hw_ctl_reg_bitfield
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|int
name|read_conf_reg
parameter_list|(
name|conf_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|read_conf_reg_bitfield
parameter_list|(
name|int
parameter_list|)
function_decl|;
specifier|extern
name|int
name|write_conf_reg
parameter_list|(
name|conf_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|write_conf_reg_bitfield
parameter_list|(
name|int
parameter_list|,
name|unsigned
name|char
parameter_list|)
function_decl|;
specifier|extern
name|int
name|read_hw_stat_reg_bitfield
parameter_list|(
name|int
parameter_list|)
function_decl|;
specifier|extern
name|int
name|read_local_offset_reg
parameter_list|(
name|local_off_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|write_local_offset_reg
parameter_list|(
name|local_off_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|read_sync_offset_reg
parameter_list|(
name|sync_gen_off_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|write_sync_offset_reg
parameter_list|(
name|sync_gen_off_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|read_time_cmp_reg
parameter_list|(
name|time_cmp_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|write_time_cmp_reg
parameter_list|(
name|time_cmp_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|read_preset_time_reg
parameter_list|(
name|preset_time_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|write_preset_time_reg
parameter_list|(
name|preset_time_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|reset_time
parameter_list|(                      )
function_decl|;
specifier|extern
name|int
name|set_new_time
parameter_list|(
name|preset_time_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|read_preset_position_reg
parameter_list|(
name|pos_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|write_preset_position_reg
parameter_list|(
name|pos_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|read_external_event_reg
parameter_list|(
name|ext_time_event_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|read_signal_level_reg
parameter_list|(
name|sig_levels_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|freeze_time
parameter_list|(                      )
function_decl|;
specifier|extern
name|int
name|snapshot_time
parameter_list|(
name|time_freeze_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|read_position_freeze_reg
parameter_list|(
name|pos_reg_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|read_diag_reg
parameter_list|(
name|diag_reg_t
modifier|*
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|CPP
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

