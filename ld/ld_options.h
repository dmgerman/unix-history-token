begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2010-2013 Kai Wang  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $Id: ld_options.h 3405 2016-02-14 10:56:34Z jkoshy $  */
end_comment

begin_enum
enum|enum
name|ld_dash
block|{
name|ONE_DASH
block|,
name|TWO_DASH
block|,
name|ANY_DASH
block|}
enum|;
end_enum

begin_enum
enum|enum
name|ld_arg
block|{
name|NO_ARG
block|,
name|REQ_ARG
block|,
name|OPT_ARG
block|}
enum|;
end_enum

begin_enum
enum|enum
name|ld_key
block|{
name|KEY_ACCEPT_UNKNOWN
init|=
literal|0x10000
block|,
name|KEY_ALLOW_SHLIB_UNDEF
block|,
name|KEY_ASSERT
block|,
name|KEY_AS_NEEDED
block|,
name|KEY_BUILD_ID
block|,
name|KEY_CHECK_SECTIONS
block|,
name|KEY_CREF
block|,
name|KEY_DEFSYM
block|,
name|KEY_DEMANGLE
block|,
name|KEY_DISABLE_NEW_DTAGS
block|,
name|KEY_DYNAMIC
block|,
name|KEY_EB
block|,
name|KEY_EL
block|,
name|KEY_EH_FRAME_HDR
block|,
name|KEY_ENABLE_NEW_DTAGS
block|,
name|KEY_ERR_UNRESOLVE_SYM
block|,
name|KEY_FATAL_WARNINGS
block|,
name|KEY_FINI
block|,
name|KEY_GC_SECTIONS
block|,
name|KEY_GROUP
block|,
name|KEY_HASH_STYLE
block|,
name|KEY_HELP
block|,
name|KEY_INIT
block|,
name|KEY_MAP
block|,
name|KEY_NO_AS_NEEDED
block|,
name|KEY_NO_CHECK_SECTIONS
block|,
name|KEY_NO_DEFINE_COMMON
block|,
name|KEY_NO_DEMANGLE
block|,
name|KEY_NO_GC_SECTIONS
block|,
name|KEY_NO_KEEP_MEMORY
block|,
name|KEY_NO_OMAGIC
block|,
name|KEY_NO_PRINT_GC_SECTIONS
block|,
name|KEY_NO_SHLIB_UNDEF
block|,
name|KEY_NO_STDLIB
block|,
name|KEY_NO_UNDEF_VERSION
block|,
name|KEY_NO_UNKNOWN
block|,
name|KEY_NO_WHOLE_ARCHIVE
block|,
name|KEY_NO_WARN_MISMATCH
block|,
name|KEY_RPATH
block|,
name|KEY_RPATH_LINK
block|,
name|KEY_RUNPATH
block|,
name|KEY_SECTION_START
block|,
name|KEY_OFORMAT
block|,
name|KEY_PIE
block|,
name|KEY_PRINT_GC_SECTIONS
block|,
name|KEY_QMAGIC
block|,
name|KEY_QY
block|,
name|KEY_RELAX
block|,
name|KEY_RETAIN_SYM_FILE
block|,
name|KEY_SHARED
block|,
name|KEY_SORT_COMMON
block|,
name|KEY_SPLIT_BY_FILE
block|,
name|KEY_SPLIT_BY_RELOC
block|,
name|KEY_STATIC
block|,
name|KEY_STATS
block|,
name|KEY_SYMBOLIC
block|,
name|KEY_SYMBOLIC_FUNC
block|,
name|KEY_TBSS
block|,
name|KEY_TDATA
block|,
name|KEY_TTEXT
block|,
name|KEY_TRADITIONAL_FORMAT
block|,
name|KEY_UNRESOLVED_SYMBOLS
block|,
name|KEY_UNIQUE
block|,
name|KEY_UR
block|,
name|KEY_VERBOSE
block|,
name|KEY_VERSION_SCRIPT
block|,
name|KEY_WARN_COMMON
block|,
name|KEY_WARN_CONSTRUCTORS
block|,
name|KEY_WARN_MULTIPLE_GP
block|,
name|KEY_WARN_ONCE
block|,
name|KEY_WARN_SECTION_ALIGN
block|,
name|KEY_WARN_SHARED_TEXTREL
block|,
name|KEY_WARN_UNRESOLVE_SYM
block|,
name|KEY_WHOLE_ARCHIVE
block|,
name|KEY_WRAP
block|,
name|KEY_Z_DEFAULT_EXTRACT
block|,
name|KEY_Z_DEFS
block|,
name|KEY_Z_EXEC_STACK
block|,
name|KEY_Z_IGNORE
block|,
name|KEY_Z_INIT_FIRST
block|,
name|KEY_Z_LAZYLOAD
block|,
name|KEY_Z_MULDEFS
block|,
name|KEY_Z_NOW
block|,
name|KEY_Z_NO_DEFAULT_LIB
block|,
name|KEY_Z_NO_DEFS
block|,
name|KEY_Z_NO_DELETE
block|,
name|KEY_Z_NO_DLOPEN
block|,
name|KEY_Z_NO_EXEC_STACK
block|,
name|KEY_Z_NO_LAZYLOAD
block|,
name|KEY_Z_ORIGIN
block|,
name|KEY_Z_RECORD
block|,
name|KEY_Z_SYSTEM_LIBRARY
block|,
name|KEY_Z_WEAK_EXTRACT
block|,
name|KEY_FILE
init|=
literal|0x10000000
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|ld_option
block|{
specifier|const
name|char
modifier|*
name|lo_long
decl_stmt|;
name|int
name|lo_key
decl_stmt|;
name|enum
name|ld_dash
name|lo_dash
decl_stmt|;
name|enum
name|ld_arg
name|lo_arg
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|ld_wildcard_sort
block|{
name|LWS_NONE
block|,
name|LWS_NAME
block|,
name|LWS_ALIGN
block|,
name|LWS_NAME_ALIGN
block|,
name|LWS_ALIGN_NAME
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|ld_wildcard
block|{
name|char
modifier|*
name|lw_name
decl_stmt|;
comment|/* wildcard */
name|enum
name|ld_wildcard_sort
name|lw_sort
decl_stmt|;
comment|/* sort mode */
block|}
struct|;
end_struct

begin_function_decl
name|void
name|ld_options_parse
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ld_wildcard
modifier|*
name|ld_wildcard_alloc
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_wildcard_free
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

end_unit

