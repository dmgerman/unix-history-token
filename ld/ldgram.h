begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* A Bison parser, made by GNU Bison 2.1.  */
end_comment

begin_comment
comment|/* Skeleton parser for Yacc-like parsing with Bison,    Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.     This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2, or (at your option)    any later version.     This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 51 Franklin Street, Fifth Floor,    Boston, MA 02110-1301, USA.  */
end_comment

begin_comment
comment|/* As a special exception, when this file is copied by Bison into a    Bison output file, you may use that output file without restriction.    This special exception was added by the Free Software Foundation    in version 1.24 of Bison.  */
end_comment

begin_comment
comment|/* Tokens.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|YYTOKENTYPE
end_ifndef

begin_define
define|#
directive|define
name|YYTOKENTYPE
end_define

begin_comment
comment|/* Put the tokens into the symbol table, so that GDB and other debuggers       know about them.  */
end_comment

begin_enum
enum|enum
name|yytokentype
block|{
name|INT
init|=
literal|258
block|,
name|NAME
init|=
literal|259
block|,
name|LNAME
init|=
literal|260
block|,
name|OREQ
init|=
literal|261
block|,
name|ANDEQ
init|=
literal|262
block|,
name|RSHIFTEQ
init|=
literal|263
block|,
name|LSHIFTEQ
init|=
literal|264
block|,
name|DIVEQ
init|=
literal|265
block|,
name|MULTEQ
init|=
literal|266
block|,
name|MINUSEQ
init|=
literal|267
block|,
name|PLUSEQ
init|=
literal|268
block|,
name|OROR
init|=
literal|269
block|,
name|ANDAND
init|=
literal|270
block|,
name|NE
init|=
literal|271
block|,
name|EQ
init|=
literal|272
block|,
name|GE
init|=
literal|273
block|,
name|LE
init|=
literal|274
block|,
name|RSHIFT
init|=
literal|275
block|,
name|LSHIFT
init|=
literal|276
block|,
name|UNARY
init|=
literal|277
block|,
name|END
init|=
literal|278
block|,
name|ALIGN_K
init|=
literal|279
block|,
name|BLOCK
init|=
literal|280
block|,
name|BIND
init|=
literal|281
block|,
name|QUAD
init|=
literal|282
block|,
name|SQUAD
init|=
literal|283
block|,
name|LONG
init|=
literal|284
block|,
name|SHORT
init|=
literal|285
block|,
name|BYTE
init|=
literal|286
block|,
name|SECTIONS
init|=
literal|287
block|,
name|PHDRS
init|=
literal|288
block|,
name|DATA_SEGMENT_ALIGN
init|=
literal|289
block|,
name|DATA_SEGMENT_RELRO_END
init|=
literal|290
block|,
name|DATA_SEGMENT_END
init|=
literal|291
block|,
name|SORT_BY_NAME
init|=
literal|292
block|,
name|SORT_BY_ALIGNMENT
init|=
literal|293
block|,
name|SIZEOF_HEADERS
init|=
literal|294
block|,
name|OUTPUT_FORMAT
init|=
literal|295
block|,
name|FORCE_COMMON_ALLOCATION
init|=
literal|296
block|,
name|OUTPUT_ARCH
init|=
literal|297
block|,
name|INHIBIT_COMMON_ALLOCATION
init|=
literal|298
block|,
name|SEGMENT_START
init|=
literal|299
block|,
name|INCLUDE
init|=
literal|300
block|,
name|MEMORY
init|=
literal|301
block|,
name|DEFSYMEND
init|=
literal|302
block|,
name|NOLOAD
init|=
literal|303
block|,
name|DSECT
init|=
literal|304
block|,
name|COPY
init|=
literal|305
block|,
name|INFO
init|=
literal|306
block|,
name|OVERLAY
init|=
literal|307
block|,
name|DEFINED
init|=
literal|308
block|,
name|TARGET_K
init|=
literal|309
block|,
name|SEARCH_DIR
init|=
literal|310
block|,
name|MAP
init|=
literal|311
block|,
name|ENTRY
init|=
literal|312
block|,
name|NEXT
init|=
literal|313
block|,
name|SIZEOF
init|=
literal|314
block|,
name|ADDR
init|=
literal|315
block|,
name|LOADADDR
init|=
literal|316
block|,
name|MAX_K
init|=
literal|317
block|,
name|MIN_K
init|=
literal|318
block|,
name|STARTUP
init|=
literal|319
block|,
name|HLL
init|=
literal|320
block|,
name|SYSLIB
init|=
literal|321
block|,
name|FLOAT
init|=
literal|322
block|,
name|NOFLOAT
init|=
literal|323
block|,
name|NOCROSSREFS
init|=
literal|324
block|,
name|ORIGIN
init|=
literal|325
block|,
name|FILL
init|=
literal|326
block|,
name|LENGTH
init|=
literal|327
block|,
name|CREATE_OBJECT_SYMBOLS
init|=
literal|328
block|,
name|INPUT
init|=
literal|329
block|,
name|GROUP
init|=
literal|330
block|,
name|OUTPUT
init|=
literal|331
block|,
name|CONSTRUCTORS
init|=
literal|332
block|,
name|ALIGNMOD
init|=
literal|333
block|,
name|AT
init|=
literal|334
block|,
name|SUBALIGN
init|=
literal|335
block|,
name|PROVIDE
init|=
literal|336
block|,
name|PROVIDE_HIDDEN
init|=
literal|337
block|,
name|AS_NEEDED
init|=
literal|338
block|,
name|CHIP
init|=
literal|339
block|,
name|LIST
init|=
literal|340
block|,
name|SECT
init|=
literal|341
block|,
name|ABSOLUTE
init|=
literal|342
block|,
name|LOAD
init|=
literal|343
block|,
name|NEWLINE
init|=
literal|344
block|,
name|ENDWORD
init|=
literal|345
block|,
name|ORDER
init|=
literal|346
block|,
name|NAMEWORD
init|=
literal|347
block|,
name|ASSERT_K
init|=
literal|348
block|,
name|FORMAT
init|=
literal|349
block|,
name|PUBLIC
init|=
literal|350
block|,
name|BASE
init|=
literal|351
block|,
name|ALIAS
init|=
literal|352
block|,
name|TRUNCATE
init|=
literal|353
block|,
name|REL
init|=
literal|354
block|,
name|INPUT_SCRIPT
init|=
literal|355
block|,
name|INPUT_MRI_SCRIPT
init|=
literal|356
block|,
name|INPUT_DEFSYM
init|=
literal|357
block|,
name|CASE
init|=
literal|358
block|,
name|EXTERN
init|=
literal|359
block|,
name|START
init|=
literal|360
block|,
name|VERS_TAG
init|=
literal|361
block|,
name|VERS_IDENTIFIER
init|=
literal|362
block|,
name|GLOBAL
init|=
literal|363
block|,
name|LOCAL
init|=
literal|364
block|,
name|VERSIONK
init|=
literal|365
block|,
name|INPUT_VERSION_SCRIPT
init|=
literal|366
block|,
name|KEEP
init|=
literal|367
block|,
name|ONLY_IF_RO
init|=
literal|368
block|,
name|ONLY_IF_RW
init|=
literal|369
block|,
name|SPECIAL
init|=
literal|370
block|,
name|EXCLUDE_FILE
init|=
literal|371
block|}
enum|;
end_enum

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Tokens.  */
end_comment

begin_define
define|#
directive|define
name|INT
value|258
end_define

begin_define
define|#
directive|define
name|NAME
value|259
end_define

begin_define
define|#
directive|define
name|LNAME
value|260
end_define

begin_define
define|#
directive|define
name|OREQ
value|261
end_define

begin_define
define|#
directive|define
name|ANDEQ
value|262
end_define

begin_define
define|#
directive|define
name|RSHIFTEQ
value|263
end_define

begin_define
define|#
directive|define
name|LSHIFTEQ
value|264
end_define

begin_define
define|#
directive|define
name|DIVEQ
value|265
end_define

begin_define
define|#
directive|define
name|MULTEQ
value|266
end_define

begin_define
define|#
directive|define
name|MINUSEQ
value|267
end_define

begin_define
define|#
directive|define
name|PLUSEQ
value|268
end_define

begin_define
define|#
directive|define
name|OROR
value|269
end_define

begin_define
define|#
directive|define
name|ANDAND
value|270
end_define

begin_define
define|#
directive|define
name|NE
value|271
end_define

begin_define
define|#
directive|define
name|EQ
value|272
end_define

begin_define
define|#
directive|define
name|GE
value|273
end_define

begin_define
define|#
directive|define
name|LE
value|274
end_define

begin_define
define|#
directive|define
name|RSHIFT
value|275
end_define

begin_define
define|#
directive|define
name|LSHIFT
value|276
end_define

begin_define
define|#
directive|define
name|UNARY
value|277
end_define

begin_define
define|#
directive|define
name|END
value|278
end_define

begin_define
define|#
directive|define
name|ALIGN_K
value|279
end_define

begin_define
define|#
directive|define
name|BLOCK
value|280
end_define

begin_define
define|#
directive|define
name|BIND
value|281
end_define

begin_define
define|#
directive|define
name|QUAD
value|282
end_define

begin_define
define|#
directive|define
name|SQUAD
value|283
end_define

begin_define
define|#
directive|define
name|LONG
value|284
end_define

begin_define
define|#
directive|define
name|SHORT
value|285
end_define

begin_define
define|#
directive|define
name|BYTE
value|286
end_define

begin_define
define|#
directive|define
name|SECTIONS
value|287
end_define

begin_define
define|#
directive|define
name|PHDRS
value|288
end_define

begin_define
define|#
directive|define
name|DATA_SEGMENT_ALIGN
value|289
end_define

begin_define
define|#
directive|define
name|DATA_SEGMENT_RELRO_END
value|290
end_define

begin_define
define|#
directive|define
name|DATA_SEGMENT_END
value|291
end_define

begin_define
define|#
directive|define
name|SORT_BY_NAME
value|292
end_define

begin_define
define|#
directive|define
name|SORT_BY_ALIGNMENT
value|293
end_define

begin_define
define|#
directive|define
name|SIZEOF_HEADERS
value|294
end_define

begin_define
define|#
directive|define
name|OUTPUT_FORMAT
value|295
end_define

begin_define
define|#
directive|define
name|FORCE_COMMON_ALLOCATION
value|296
end_define

begin_define
define|#
directive|define
name|OUTPUT_ARCH
value|297
end_define

begin_define
define|#
directive|define
name|INHIBIT_COMMON_ALLOCATION
value|298
end_define

begin_define
define|#
directive|define
name|SEGMENT_START
value|299
end_define

begin_define
define|#
directive|define
name|INCLUDE
value|300
end_define

begin_define
define|#
directive|define
name|MEMORY
value|301
end_define

begin_define
define|#
directive|define
name|DEFSYMEND
value|302
end_define

begin_define
define|#
directive|define
name|NOLOAD
value|303
end_define

begin_define
define|#
directive|define
name|DSECT
value|304
end_define

begin_define
define|#
directive|define
name|COPY
value|305
end_define

begin_define
define|#
directive|define
name|INFO
value|306
end_define

begin_define
define|#
directive|define
name|OVERLAY
value|307
end_define

begin_define
define|#
directive|define
name|DEFINED
value|308
end_define

begin_define
define|#
directive|define
name|TARGET_K
value|309
end_define

begin_define
define|#
directive|define
name|SEARCH_DIR
value|310
end_define

begin_define
define|#
directive|define
name|MAP
value|311
end_define

begin_define
define|#
directive|define
name|ENTRY
value|312
end_define

begin_define
define|#
directive|define
name|NEXT
value|313
end_define

begin_define
define|#
directive|define
name|SIZEOF
value|314
end_define

begin_define
define|#
directive|define
name|ADDR
value|315
end_define

begin_define
define|#
directive|define
name|LOADADDR
value|316
end_define

begin_define
define|#
directive|define
name|MAX_K
value|317
end_define

begin_define
define|#
directive|define
name|MIN_K
value|318
end_define

begin_define
define|#
directive|define
name|STARTUP
value|319
end_define

begin_define
define|#
directive|define
name|HLL
value|320
end_define

begin_define
define|#
directive|define
name|SYSLIB
value|321
end_define

begin_define
define|#
directive|define
name|FLOAT
value|322
end_define

begin_define
define|#
directive|define
name|NOFLOAT
value|323
end_define

begin_define
define|#
directive|define
name|NOCROSSREFS
value|324
end_define

begin_define
define|#
directive|define
name|ORIGIN
value|325
end_define

begin_define
define|#
directive|define
name|FILL
value|326
end_define

begin_define
define|#
directive|define
name|LENGTH
value|327
end_define

begin_define
define|#
directive|define
name|CREATE_OBJECT_SYMBOLS
value|328
end_define

begin_define
define|#
directive|define
name|INPUT
value|329
end_define

begin_define
define|#
directive|define
name|GROUP
value|330
end_define

begin_define
define|#
directive|define
name|OUTPUT
value|331
end_define

begin_define
define|#
directive|define
name|CONSTRUCTORS
value|332
end_define

begin_define
define|#
directive|define
name|ALIGNMOD
value|333
end_define

begin_define
define|#
directive|define
name|AT
value|334
end_define

begin_define
define|#
directive|define
name|SUBALIGN
value|335
end_define

begin_define
define|#
directive|define
name|PROVIDE
value|336
end_define

begin_define
define|#
directive|define
name|PROVIDE_HIDDEN
value|337
end_define

begin_define
define|#
directive|define
name|AS_NEEDED
value|338
end_define

begin_define
define|#
directive|define
name|CHIP
value|339
end_define

begin_define
define|#
directive|define
name|LIST
value|340
end_define

begin_define
define|#
directive|define
name|SECT
value|341
end_define

begin_define
define|#
directive|define
name|ABSOLUTE
value|342
end_define

begin_define
define|#
directive|define
name|LOAD
value|343
end_define

begin_define
define|#
directive|define
name|NEWLINE
value|344
end_define

begin_define
define|#
directive|define
name|ENDWORD
value|345
end_define

begin_define
define|#
directive|define
name|ORDER
value|346
end_define

begin_define
define|#
directive|define
name|NAMEWORD
value|347
end_define

begin_define
define|#
directive|define
name|ASSERT_K
value|348
end_define

begin_define
define|#
directive|define
name|FORMAT
value|349
end_define

begin_define
define|#
directive|define
name|PUBLIC
value|350
end_define

begin_define
define|#
directive|define
name|BASE
value|351
end_define

begin_define
define|#
directive|define
name|ALIAS
value|352
end_define

begin_define
define|#
directive|define
name|TRUNCATE
value|353
end_define

begin_define
define|#
directive|define
name|REL
value|354
end_define

begin_define
define|#
directive|define
name|INPUT_SCRIPT
value|355
end_define

begin_define
define|#
directive|define
name|INPUT_MRI_SCRIPT
value|356
end_define

begin_define
define|#
directive|define
name|INPUT_DEFSYM
value|357
end_define

begin_define
define|#
directive|define
name|CASE
value|358
end_define

begin_define
define|#
directive|define
name|EXTERN
value|359
end_define

begin_define
define|#
directive|define
name|START
value|360
end_define

begin_define
define|#
directive|define
name|VERS_TAG
value|361
end_define

begin_define
define|#
directive|define
name|VERS_IDENTIFIER
value|362
end_define

begin_define
define|#
directive|define
name|GLOBAL
value|363
end_define

begin_define
define|#
directive|define
name|LOCAL
value|364
end_define

begin_define
define|#
directive|define
name|VERSIONK
value|365
end_define

begin_define
define|#
directive|define
name|INPUT_VERSION_SCRIPT
value|366
end_define

begin_define
define|#
directive|define
name|KEEP
value|367
end_define

begin_define
define|#
directive|define
name|ONLY_IF_RO
value|368
end_define

begin_define
define|#
directive|define
name|ONLY_IF_RW
value|369
end_define

begin_define
define|#
directive|define
name|SPECIAL
value|370
end_define

begin_define
define|#
directive|define
name|EXCLUDE_FILE
value|371
end_define

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|YYSTYPE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|YYSTYPE_IS_DECLARED
argument_list|)
end_if

begin_line
line|#
directive|line
number|65
file|"ldgram.y"
end_line

begin_typedef
typedef|typedef
union|union
name|YYSTYPE
block|{
name|bfd_vma
name|integer
decl_stmt|;
struct|struct
name|big_int
block|{
name|bfd_vma
name|integer
decl_stmt|;
name|char
modifier|*
name|str
decl_stmt|;
block|}
name|bigint
struct|;
name|fill_type
modifier|*
name|fill
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
specifier|const
name|char
modifier|*
name|cname
decl_stmt|;
name|struct
name|wildcard_spec
name|wildcard
decl_stmt|;
name|struct
name|wildcard_list
modifier|*
name|wildcard_list
decl_stmt|;
name|struct
name|name_list
modifier|*
name|name_list
decl_stmt|;
name|int
name|token
decl_stmt|;
name|union
name|etree_union
modifier|*
name|etree
decl_stmt|;
struct|struct
name|phdr_info
block|{
name|bfd_boolean
name|filehdr
decl_stmt|;
name|bfd_boolean
name|phdrs
decl_stmt|;
name|union
name|etree_union
modifier|*
name|at
decl_stmt|;
name|union
name|etree_union
modifier|*
name|flags
decl_stmt|;
block|}
name|phdr
struct|;
name|struct
name|lang_nocrossref
modifier|*
name|nocrossref
decl_stmt|;
name|struct
name|lang_output_section_phdr_list
modifier|*
name|section_phdr
decl_stmt|;
name|struct
name|bfd_elf_version_deps
modifier|*
name|deflist
decl_stmt|;
name|struct
name|bfd_elf_version_expr
modifier|*
name|versyms
decl_stmt|;
name|struct
name|bfd_elf_version_tree
modifier|*
name|versnode
decl_stmt|;
block|}
name|YYSTYPE
typedef|;
end_typedef

begin_comment
comment|/* Line 1447 of yacc.c.  */
end_comment

begin_line
line|#
directive|line
number|299
file|"ldgram.h"
end_line

begin_define
define|#
directive|define
name|yystype
value|YYSTYPE
end_define

begin_comment
comment|/* obsolescent; will be withdrawn */
end_comment

begin_define
define|#
directive|define
name|YYSTYPE_IS_DECLARED
value|1
end_define

begin_define
define|#
directive|define
name|YYSTYPE_IS_TRIVIAL
value|1
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|extern
name|YYSTYPE
name|yylval
decl_stmt|;
end_decl_stmt

end_unit

