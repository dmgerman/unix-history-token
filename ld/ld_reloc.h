begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2012,2013 Kai Wang  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $Id: ld_reloc.h 2898 2013-01-15 23:05:59Z kaiwang27 $  */
end_comment

begin_struct_decl
struct_decl|struct
name|ld_symbol
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ld_input_section
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ld_output_section
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|ld_reloc_entry
block|{
name|struct
name|ld_input_section
modifier|*
name|lre_tis
decl_stmt|;
comment|/* input section to apply to */
name|struct
name|ld_symbol
modifier|*
name|lre_sym
decl_stmt|;
comment|/* reloc symbol */
name|uint64_t
name|lre_type
decl_stmt|;
comment|/* reloc type */
name|uint64_t
name|lre_offset
decl_stmt|;
comment|/* reloc offset */
name|uint64_t
name|lre_addend
decl_stmt|;
comment|/* reloc addend */
name|STAILQ_ENTRY
argument_list|(
argument|ld_reloc_entry
argument_list|)
name|lre_next
expr_stmt|;
comment|/* next reloc */
block|}
struct|;
end_struct

begin_expr_stmt
name|STAILQ_HEAD
argument_list|(
name|ld_reloc_entry_head
argument_list|,
name|ld_reloc_entry
argument_list|)
expr_stmt|;
end_expr_stmt

begin_enum
enum|enum
name|ld_tls_relax
block|{
name|TLS_RELAX_NONE
block|,
name|TLS_RELAX_INIT_EXEC
block|,
name|TLS_RELAX_LOCAL_EXEC
block|}
enum|;
end_enum

begin_function_decl
name|void
name|ld_reloc_create_entry
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|ld_input_section
modifier|*
parameter_list|,
name|uint64_t
parameter_list|,
name|struct
name|ld_symbol
modifier|*
parameter_list|,
name|uint64_t
parameter_list|,
name|int64_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_reloc_deferred_scan
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_reloc_finalize
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_output_section
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_reloc_finalize_dynamic
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_output
modifier|*
parameter_list|,
name|struct
name|ld_output_section
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_reloc_gc_sections
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_reloc_join
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_output_section
modifier|*
parameter_list|,
name|struct
name|ld_input_section
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_reloc_sort
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_output_section
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_reloc_load
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_reloc_process_input_section
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_input_section
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ld_reloc_require_plt
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_reloc_entry
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ld_reloc_require_copy_reloc
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_reloc_entry
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ld_reloc_require_dynamic_reloc
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_reloc_entry
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ld_reloc_require_glob_dat
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_reloc_entry
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ld_reloc_relative_relax
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_reloc_entry
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|ld_reloc_serialize
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_output_section
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

end_unit

