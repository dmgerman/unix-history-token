begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2010-2013 Kai Wang  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $Id: ld_path.h 2930 2013-03-17 22:54:26Z kaiwang27 $  */
end_comment

begin_enum
enum|enum
name|ld_path_type
block|{
name|LPT_L
block|,
name|LPT_RPATH
block|,
name|LPT_RPATH_LINK
block|, }
enum|;
end_enum

begin_struct
struct|struct
name|ld_path
block|{
name|char
modifier|*
name|lp_path
decl_stmt|;
name|STAILQ_ENTRY
argument_list|(
argument|ld_path
argument_list|)
name|lp_next
expr_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|void
name|ld_path_add
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|enum
name|ld_path_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_path_add_multiple
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|enum
name|ld_path_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_path_cleanup
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|ld_path_join_rpath
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_path_search_file
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_file
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_path_search_library
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ld_path_search_dso_needed
parameter_list|(
name|struct
name|ld
modifier|*
parameter_list|,
name|struct
name|ld_file
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

end_unit

