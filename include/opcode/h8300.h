begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Opcode table for the H8/300    Copyright 1991, 1992, 1993, 1994, 1996, 1997, 1998, 2000, 2002, 2003, 2004    Free Software Foundation, Inc.    Written by Steve Chamberlain<sac@cygnus.com>.        This file is part of GDB, the GNU Debugger and GAS, the GNU Assembler.        This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2 of the License, or    (at your option) any later version.        This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.        You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA    02111-1307, USA.  */
end_comment

begin_comment
comment|/* Instructions are stored as a sequence of nibbles.    If the nibble has value 15 or less than the representation is complete.    Otherwise, we record what it contains with several flags.  */
end_comment

begin_typedef
typedef|typedef
name|int
name|op_type
typedef|;
end_typedef

begin_enum
enum|enum
name|h8_flags
block|{
name|L_2
init|=
literal|0x10
block|,
name|L_3
init|=
literal|0x20
block|,
comment|/* 3 bit constant, zero not accepted.  */
name|L_3NZ
init|=
literal|0x30
block|,
name|L_4
init|=
literal|0x40
block|,
name|L_5
init|=
literal|0x50
block|,
name|L_8
init|=
literal|0x60
block|,
name|L_8U
init|=
literal|0x70
block|,
name|L_16
init|=
literal|0x80
block|,
name|L_16U
init|=
literal|0x90
block|,
name|L_24
init|=
literal|0xA0
block|,
name|L_32
init|=
literal|0xB0
block|,
name|L_P
init|=
literal|0xC0
block|,
comment|/* Mask to isolate the L_x size bits.  */
name|SIZE
init|=
literal|0xF0
block|,
name|REG
init|=
literal|0x0100
block|,
name|ABS
init|=
literal|0x0200
block|,
name|MEMIND
init|=
literal|0x0300
block|,
name|IMM
init|=
literal|0x0400
block|,
name|DISP
init|=
literal|0x0500
block|,
name|IND
init|=
literal|0x0600
block|,
name|POSTINC
init|=
literal|0x0700
block|,
name|POSTDEC
init|=
literal|0x0800
block|,
name|PREINC
init|=
literal|0x0900
block|,
name|PREDEC
init|=
literal|0x0A00
block|,
name|PCREL
init|=
literal|0x0B00
block|,
name|KBIT
init|=
literal|0x0C00
block|,
name|DBIT
init|=
literal|0x0D00
block|,
name|CONST_2
init|=
literal|0x0E00
block|,
name|CONST_4
init|=
literal|0x0F00
block|,
name|CONST_8
init|=
literal|0x1000
block|,
name|CONST_16
init|=
literal|0x1100
block|,
name|INDEXB
init|=
literal|0x1200
block|,
name|INDEXW
init|=
literal|0x1300
block|,
name|INDEXL
init|=
literal|0x1400
block|,
name|PCIDXB
init|=
literal|0x1500
block|,
name|PCIDXW
init|=
literal|0x1600
block|,
name|PCIDXL
init|=
literal|0x1700
block|,
name|VECIND
init|=
literal|0x1800
block|,
name|LOWREG
init|=
literal|0x1900
block|,
name|DATA
init|=
literal|0x2000
block|,
comment|/* Synonyms.  */
name|INC
init|=
name|POSTINC
block|,
name|DEC
init|=
name|PREDEC
block|,
comment|/* Control Registers.  */
name|CCR
init|=
literal|0x4000
block|,
name|EXR
init|=
literal|0x4100
block|,
name|MACH
init|=
literal|0x4200
block|,
name|MACL
init|=
literal|0x4300
block|,
name|RESERV1
init|=
literal|0x4400
block|,
name|RESERV2
init|=
literal|0x4500
block|,
name|VBR
init|=
literal|0x4600
block|,
name|SBR
init|=
literal|0x4700
block|,
name|MACREG
init|=
literal|0x4800
block|,
name|CCR_EXR
init|=
literal|0x4900
block|,
name|VBR_SBR
init|=
literal|0x4A00
block|,
name|CC_EX_VB_SB
init|=
literal|0x4B00
block|,
name|RESERV3
init|=
literal|0x4C00
block|,
name|RESERV4
init|=
literal|0x4D00
block|,
name|RESERV5
init|=
literal|0x4E00
block|,
name|RESERV6
init|=
literal|0x4F00
block|,
comment|/* Mask to isolate the addressing mode bits (REG .. PREDEC).  */
name|MODE
init|=
literal|0x7F00
block|,
name|CTRL
init|=
literal|0x4000
block|,
name|NO_SYMBOLS
init|=
literal|0x8000
block|,
name|SRC
init|=
literal|0x10000
block|,
name|DST
init|=
literal|0x20000
block|,
name|OP3
init|=
literal|0x40000
block|,
name|MEMRELAX
init|=
literal|0x80000
block|,
comment|/* Move insn which may relax.  */
name|DISPREG
init|=
literal|0x100000
block|,
name|IGNORE
init|=
literal|0x200000
block|,
name|ABSJMP
init|=
literal|0x400000
block|,
name|B00
init|=
literal|0x800000
block|,
comment|/* Bit 0 must be low.   */
name|B01
init|=
literal|0x1000000
block|,
comment|/* Bit 0 must be high.  */
name|B10
init|=
literal|0x2000000
block|,
comment|/* Bit 1 must be low.   */
name|B11
init|=
literal|0x4000000
block|,
comment|/* Bit 1 must be high.  */
name|B20
init|=
literal|0x8000000
block|,
comment|/* Bit 2 must be low.   */
name|B21
init|=
literal|0x10000000
block|,
comment|/* Bit 2 must be high.  */
name|B30
init|=
literal|0x20000000
block|,
comment|/* Bit 3 must be low.   */
name|B31
init|=
literal|0x40000000
block|,
comment|/* Bit 3 must be high.  */
name|E
init|=
literal|0x80000000
block|,
comment|/* End of nibble sequence.  */
comment|/* Immediates smaller than 8 bits are always unsigned.  */
name|IMM3
init|=
name|IMM
operator||
name|L_3
block|,
name|IMM4
init|=
name|IMM
operator||
name|L_4
block|,
name|IMM5
init|=
name|IMM
operator||
name|L_5
block|,
name|IMM3NZ
init|=
name|IMM
operator||
name|L_3NZ
block|,
name|IMM2
init|=
name|IMM
operator||
name|L_2
block|,
name|IMM8
init|=
name|IMM
operator||
name|SRC
operator||
name|L_8
block|,
name|IMM8U
init|=
name|IMM
operator||
name|SRC
operator||
name|L_8U
block|,
name|IMM16
init|=
name|IMM
operator||
name|SRC
operator||
name|L_16
block|,
name|IMM16U
init|=
name|IMM
operator||
name|SRC
operator||
name|L_16U
block|,
name|IMM32
init|=
name|IMM
operator||
name|SRC
operator||
name|L_32
block|,
name|IMM3NZ_NS
init|=
name|IMM3NZ
operator||
name|NO_SYMBOLS
block|,
name|IMM4_NS
init|=
name|IMM4
operator||
name|NO_SYMBOLS
block|,
name|IMM8U_NS
init|=
name|IMM8U
operator||
name|NO_SYMBOLS
block|,
name|IMM16U_NS
init|=
name|IMM16U
operator||
name|NO_SYMBOLS
block|,
name|RD8
init|=
name|DST
operator||
name|L_8
operator||
name|REG
block|,
name|RD16
init|=
name|DST
operator||
name|L_16
operator||
name|REG
block|,
name|RD32
init|=
name|DST
operator||
name|L_32
operator||
name|REG
block|,
name|R3_8
init|=
name|OP3
operator||
name|L_8
operator||
name|REG
block|,
name|R3_16
init|=
name|OP3
operator||
name|L_16
operator||
name|REG
block|,
name|R3_32
init|=
name|OP3
operator||
name|L_32
operator||
name|REG
block|,
name|RS8
init|=
name|SRC
operator||
name|L_8
operator||
name|REG
block|,
name|RS16
init|=
name|SRC
operator||
name|L_16
operator||
name|REG
block|,
name|RS32
init|=
name|SRC
operator||
name|L_32
operator||
name|REG
block|,
name|RSP
init|=
name|SRC
operator||
name|L_P
operator||
name|REG
block|,
name|RDP
init|=
name|DST
operator||
name|L_P
operator||
name|REG
block|,
name|PCREL8
init|=
name|PCREL
operator||
name|L_8
block|,
name|PCREL16
init|=
name|PCREL
operator||
name|L_16
block|,
name|OP3PCREL8
init|=
name|OP3
operator||
name|PCREL
operator||
name|L_8
block|,
name|OP3PCREL16
init|=
name|OP3
operator||
name|PCREL
operator||
name|L_16
block|,
name|INDEXB16
init|=
name|INDEXB
operator||
name|L_16
block|,
name|INDEXW16
init|=
name|INDEXW
operator||
name|L_16
block|,
name|INDEXL16
init|=
name|INDEXL
operator||
name|L_16
block|,
name|INDEXB16D
init|=
name|INDEXB
operator||
name|L_16
operator||
name|DST
block|,
name|INDEXW16D
init|=
name|INDEXW
operator||
name|L_16
operator||
name|DST
block|,
name|INDEXL16D
init|=
name|INDEXL
operator||
name|L_16
operator||
name|DST
block|,
name|INDEXB32
init|=
name|INDEXB
operator||
name|L_32
block|,
name|INDEXW32
init|=
name|INDEXW
operator||
name|L_32
block|,
name|INDEXL32
init|=
name|INDEXL
operator||
name|L_32
block|,
name|INDEXB32D
init|=
name|INDEXB
operator||
name|L_32
operator||
name|DST
block|,
name|INDEXW32D
init|=
name|INDEXW
operator||
name|L_32
operator||
name|DST
block|,
name|INDEXL32D
init|=
name|INDEXL
operator||
name|L_32
operator||
name|DST
block|,
name|DISP2SRC
init|=
name|DISP
operator||
name|L_2
operator||
name|SRC
block|,
name|DISP16SRC
init|=
name|DISP
operator||
name|L_16
operator||
name|SRC
block|,
name|DISP32SRC
init|=
name|DISP
operator||
name|L_32
operator||
name|SRC
block|,
name|DISP2DST
init|=
name|DISP
operator||
name|L_2
operator||
name|DST
block|,
name|DISP16DST
init|=
name|DISP
operator||
name|L_16
operator||
name|DST
block|,
name|DISP32DST
init|=
name|DISP
operator||
name|L_32
operator||
name|DST
block|,
name|DSTDISPREG
init|=
name|DST
operator||
name|DISPREG
block|,
name|SRCDISPREG
init|=
name|SRC
operator||
name|DISPREG
block|,
name|ABS8SRC
init|=
name|SRC
operator||
name|ABS
operator||
name|L_8
block|,
name|ABS16SRC
init|=
name|SRC
operator||
name|ABS
operator||
name|L_16U
block|,
name|ABS24SRC
init|=
name|SRC
operator||
name|ABS
operator||
name|L_24
block|,
name|ABS32SRC
init|=
name|SRC
operator||
name|ABS
operator||
name|L_32
block|,
name|ABS8DST
init|=
name|DST
operator||
name|ABS
operator||
name|L_8
block|,
name|ABS16DST
init|=
name|DST
operator||
name|ABS
operator||
name|L_16U
block|,
name|ABS24DST
init|=
name|DST
operator||
name|ABS
operator||
name|L_24
block|,
name|ABS32DST
init|=
name|DST
operator||
name|ABS
operator||
name|L_32
block|,
name|ABS8OP3
init|=
name|OP3
operator||
name|ABS
operator||
name|L_8
block|,
name|ABS16OP3
init|=
name|OP3
operator||
name|ABS
operator||
name|L_16U
block|,
name|ABS24OP3
init|=
name|OP3
operator||
name|ABS
operator||
name|L_24
block|,
name|ABS32OP3
init|=
name|OP3
operator||
name|ABS
operator||
name|L_32
block|,
name|RDDEC
init|=
name|DST
operator||
name|DEC
block|,
name|RSINC
init|=
name|SRC
operator||
name|INC
block|,
name|RDINC
init|=
name|DST
operator||
name|INC
block|,
name|RSPOSTINC
init|=
name|SRC
operator||
name|POSTINC
block|,
name|RDPOSTINC
init|=
name|DST
operator||
name|POSTINC
block|,
name|RSPREINC
init|=
name|SRC
operator||
name|PREINC
block|,
name|RDPREINC
init|=
name|DST
operator||
name|PREINC
block|,
name|RSPOSTDEC
init|=
name|SRC
operator||
name|POSTDEC
block|,
name|RDPOSTDEC
init|=
name|DST
operator||
name|POSTDEC
block|,
name|RSPREDEC
init|=
name|SRC
operator||
name|PREDEC
block|,
name|RDPREDEC
init|=
name|DST
operator||
name|PREDEC
block|,
name|RSIND
init|=
name|SRC
operator||
name|IND
block|,
name|RDIND
init|=
name|DST
operator||
name|IND
block|,
name|R3_IND
init|=
name|OP3
operator||
name|IND
block|,
define|#
directive|define
name|MS32
value|(SRC | L_32 | MACREG)
define|#
directive|define
name|MD32
value|(DST | L_32 | MACREG)
if|#
directive|if
literal|1
name|OR8
init|=
name|RS8
block|,
comment|/* ??? OR as in One Register.  */
name|OR16
init|=
name|RS16
block|,
name|OR32
init|=
name|RS32
block|,
else|#
directive|else
name|OR8
init|=
name|RD8
block|,
name|OR16
init|=
name|RD16
block|,
name|OR32
init|=
name|RD32
endif|#
directive|endif
block|}
enum|;
end_enum

begin_enum
enum|enum
name|ctrlreg
block|{
name|C_CCR
init|=
literal|0
block|,
name|C_EXR
init|=
literal|1
block|,
name|C_MACH
init|=
literal|2
block|,
name|C_MACL
init|=
literal|3
block|,
name|C_VBR
init|=
literal|6
block|,
name|C_SBR
init|=
literal|7
block|}
enum|;
end_enum

begin_enum
enum|enum
block|{
name|MAX_CODE_NIBBLES
init|=
literal|33
block|}
enum|;
end_enum

begin_struct
struct|struct
name|code
block|{
name|op_type
name|nib
index|[
name|MAX_CODE_NIBBLES
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|arg
block|{
name|op_type
name|nib
index|[
literal|3
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* Availability of instructions on processor models.  */
end_comment

begin_enum
enum|enum
name|h8_model
block|{
name|AV_H8
block|,
name|AV_H8H
block|,
name|AV_H8S
block|,
name|AV_H8SX
block|}
enum|;
end_enum

begin_struct
struct|struct
name|h8_opcode
block|{
name|int
name|how
decl_stmt|;
name|enum
name|h8_model
name|available
decl_stmt|;
name|int
name|time
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
name|struct
name|arg
name|args
decl_stmt|;
name|struct
name|code
name|data
decl_stmt|;
block|}
struct|;
end_struct

begin_ifdef
ifdef|#
directive|ifdef
name|DEFINE_TABLE
end_ifdef

begin_define
define|#
directive|define
name|DATA2
value|DATA, DATA
end_define

begin_define
define|#
directive|define
name|DATA3
value|DATA, DATA, DATA
end_define

begin_define
define|#
directive|define
name|DATA5
value|DATA, DATA, DATA, DATA, DATA
end_define

begin_define
define|#
directive|define
name|DATA7
value|DATA, DATA, DATA, DATA, DATA, DATA, DATA
end_define

begin_define
define|#
directive|define
name|IMM8LIST
value|IMM8,   DATA
end_define

begin_define
define|#
directive|define
name|IMM16LIST
value|IMM16,  DATA3
end_define

begin_define
define|#
directive|define
name|IMM16ULIST
value|IMM16U, DATA3
end_define

begin_define
define|#
directive|define
name|IMM24LIST
value|IMM24,  DATA5
end_define

begin_define
define|#
directive|define
name|IMM32LIST
value|IMM32,  DATA7
end_define

begin_define
define|#
directive|define
name|DISP16LIST
value|DISP | L_16, DATA3
end_define

begin_define
define|#
directive|define
name|DISP24LIST
value|DISP | L_24, DATA5
end_define

begin_define
define|#
directive|define
name|DISP32LIST
value|DISP | L_32, DATA7
end_define

begin_define
define|#
directive|define
name|ABS8LIST
value|ABS  | L_8,   DATA
end_define

begin_define
define|#
directive|define
name|ABS16LIST
value|ABS  | L_16U, DATA3
end_define

begin_define
define|#
directive|define
name|ABS24LIST
value|ABS  | L_24,  DATA5
end_define

begin_define
define|#
directive|define
name|ABS32LIST
value|ABS  | L_32,  DATA7
end_define

begin_define
define|#
directive|define
name|DSTABS8LIST
value|DST | ABS | L_8,   DATA
end_define

begin_define
define|#
directive|define
name|DSTABS16LIST
value|DST | ABS | L_16U, DATA3
end_define

begin_define
define|#
directive|define
name|DSTABS24LIST
value|DST | ABS | L_24,  DATA5
end_define

begin_define
define|#
directive|define
name|DSTABS32LIST
value|DST | ABS | L_32,  DATA7
end_define

begin_define
define|#
directive|define
name|OP3ABS8LIST
value|OP3 | ABS | L_8,  DATA
end_define

begin_define
define|#
directive|define
name|OP3ABS16LIST
value|OP3 | ABS | L_16, DATA3
end_define

begin_define
define|#
directive|define
name|OP3ABS24LIST
value|OP3 | ABS | L_24, DATA5
end_define

begin_define
define|#
directive|define
name|OP3ABS32LIST
value|OP3 | ABS | L_32, DATA7
end_define

begin_define
define|#
directive|define
name|DSTDISP16LIST
value|DST | DISP | L_16, DATA3
end_define

begin_define
define|#
directive|define
name|DSTDISP24LIST
value|DST | DISP | L_24, DATA5
end_define

begin_define
define|#
directive|define
name|DSTDISP32LIST
value|DST | DISP | L_32, DATA7
end_define

begin_define
define|#
directive|define
name|A16LIST
value|L_16,  DATA3
end_define

begin_define
define|#
directive|define
name|A24LIST
value|L_24,  DATA5
end_define

begin_define
define|#
directive|define
name|A32LIST
value|L_32,  DATA7
end_define

begin_comment
comment|/* Extended Operand Prefixes:  */
end_comment

begin_define
define|#
directive|define
name|PREFIX_010
value|0x0, 0x1, 0x0
end_define

begin_define
define|#
directive|define
name|PREFIX_015
value|0x0, 0x1, 0x5
end_define

begin_define
define|#
directive|define
name|PREFIX_017
value|0x0, 0x1, 0x7
end_define

begin_define
define|#
directive|define
name|PREFIX_0100
value|0x0, 0x1, 0x0, 0x0
end_define

begin_define
define|#
directive|define
name|PREFIX_010_D2
value|0x0, 0x1, 0x0, B30 | B21 | DISP2SRC
end_define

begin_define
define|#
directive|define
name|PREFIX_0101
value|0x0, 0x1, 0x0, 0x1
end_define

begin_define
define|#
directive|define
name|PREFIX_0102
value|0x0, 0x1, 0x0, 0x2
end_define

begin_define
define|#
directive|define
name|PREFIX_0103
value|0x0, 0x1, 0x0, 0x3
end_define

begin_define
define|#
directive|define
name|PREFIX_0104
value|0x0, 0x1, 0x0, 0x4
end_define

begin_define
define|#
directive|define
name|PREFIX_0105
value|0x0, 0x1, 0x0, 0x5
end_define

begin_define
define|#
directive|define
name|PREFIX_0106
value|0x0, 0x1, 0x0, 0x6
end_define

begin_define
define|#
directive|define
name|PREFIX_0107
value|0x0, 0x1, 0x0, 0x7
end_define

begin_define
define|#
directive|define
name|PREFIX_0108
value|0x0, 0x1, 0x0, 0x8
end_define

begin_define
define|#
directive|define
name|PREFIX_0109
value|0x0, 0x1, 0x0, 0x9
end_define

begin_define
define|#
directive|define
name|PREFIX_010A
value|0x0, 0x1, 0x0, 0xa
end_define

begin_define
define|#
directive|define
name|PREFIX_010D
value|0x0, 0x1, 0x0, 0xd
end_define

begin_define
define|#
directive|define
name|PREFIX_010E
value|0x0, 0x1, 0x0, 0xe
end_define

begin_define
define|#
directive|define
name|PREFIX_0150
value|0x0, 0x1, 0x5, 0x0
end_define

begin_define
define|#
directive|define
name|PREFIX_015_D2
value|0x0, 0x1, 0x5, B30 | B21 | DISP2SRC
end_define

begin_define
define|#
directive|define
name|PREFIX_0151
value|0x0, 0x1, 0x5, 0x1
end_define

begin_define
define|#
directive|define
name|PREFIX_0152
value|0x0, 0x1, 0x5, 0x2
end_define

begin_define
define|#
directive|define
name|PREFIX_0153
value|0x0, 0x1, 0x5, 0x3
end_define

begin_define
define|#
directive|define
name|PREFIX_0154
value|0x0, 0x1, 0x5, 0x4
end_define

begin_define
define|#
directive|define
name|PREFIX_0155
value|0x0, 0x1, 0x5, 0x5
end_define

begin_define
define|#
directive|define
name|PREFIX_0156
value|0x0, 0x1, 0x5, 0x6
end_define

begin_define
define|#
directive|define
name|PREFIX_0157
value|0x0, 0x1, 0x5, 0x7
end_define

begin_define
define|#
directive|define
name|PREFIX_0158
value|0x0, 0x1, 0x5, 0x8
end_define

begin_define
define|#
directive|define
name|PREFIX_0159
value|0x0, 0x1, 0x5, 0x9
end_define

begin_define
define|#
directive|define
name|PREFIX_015A
value|0x0, 0x1, 0x5, 0xa
end_define

begin_define
define|#
directive|define
name|PREFIX_015D
value|0x0, 0x1, 0x5, 0xd
end_define

begin_define
define|#
directive|define
name|PREFIX_015E
value|0x0, 0x1, 0x5, 0xe
end_define

begin_define
define|#
directive|define
name|PREFIX_015F
value|0x0, 0x1, 0x5, 0xf
end_define

begin_define
define|#
directive|define
name|PREFIX_0170
value|0x0, 0x1, 0x7, 0x0
end_define

begin_define
define|#
directive|define
name|PREFIX_017_D2S
value|0x0, 0x1, 0x7, B30 | B21 | DISP2SRC
end_define

begin_define
define|#
directive|define
name|PREFIX_017_D2D
value|0x0, 0x1, 0x7, B30 | B21 | DISP2DST
end_define

begin_define
define|#
directive|define
name|PREFIX_0171
value|0x0, 0x1, 0x7, 0x1
end_define

begin_define
define|#
directive|define
name|PREFIX_0172
value|0x0, 0x1, 0x7, 0x2
end_define

begin_define
define|#
directive|define
name|PREFIX_0173
value|0x0, 0x1, 0x7, 0x3
end_define

begin_define
define|#
directive|define
name|PREFIX_0174
value|0x0, 0x1, 0x7, 0x4
end_define

begin_define
define|#
directive|define
name|PREFIX_0175
value|0x0, 0x1, 0x7, 0x5
end_define

begin_define
define|#
directive|define
name|PREFIX_0176
value|0x0, 0x1, 0x7, 0x6
end_define

begin_define
define|#
directive|define
name|PREFIX_0177
value|0x0, 0x1, 0x7, 0x7
end_define

begin_define
define|#
directive|define
name|PREFIX_0178
value|0x0, 0x1, 0x7, 0x8
end_define

begin_define
define|#
directive|define
name|PREFIX_0179
value|0x0, 0x1, 0x7, 0x9
end_define

begin_define
define|#
directive|define
name|PREFIX_017A
value|0x0, 0x1, 0x7, 0xa
end_define

begin_define
define|#
directive|define
name|PREFIX_017D
value|0x0, 0x1, 0x7, 0xd
end_define

begin_define
define|#
directive|define
name|PREFIX_017E
value|0x0, 0x1, 0x7, 0xe
end_define

begin_define
define|#
directive|define
name|PREFIX_017F
value|0x0, 0x1, 0x7, 0xf
end_define

begin_define
define|#
directive|define
name|PREFIX_6A15
value|0x6, 0xa, 0x1, 0x5
end_define

begin_define
define|#
directive|define
name|PREFIX_6A35
value|0x6, 0xa, 0x3, 0x5
end_define

begin_define
define|#
directive|define
name|PREFIX_6B15
value|0x6, 0xb, 0x1, 0x5
end_define

begin_define
define|#
directive|define
name|PREFIX_6B35
value|0x6, 0xb, 0x3, 0x5
end_define

begin_define
define|#
directive|define
name|PREFIX_78R4
value|0x7, 0x8, B31 | DISPREG, 0x4
end_define

begin_define
define|#
directive|define
name|PREFIX_78R5
value|0x7, 0x8, B31 | DISPREG, 0x5
end_define

begin_define
define|#
directive|define
name|PREFIX_78R6
value|0x7, 0x8, B31 | DISPREG, 0x6
end_define

begin_define
define|#
directive|define
name|PREFIX_78R7
value|0x7, 0x8, B31 | DISPREG, 0x7
end_define

begin_define
define|#
directive|define
name|PREFIX_78R4W
value|0x7, 0x8, B30 | DISPREG, 0x4
end_define

begin_define
define|#
directive|define
name|PREFIX_78R5W
value|0x7, 0x8, B30 | DISPREG, 0x5
end_define

begin_define
define|#
directive|define
name|PREFIX_78R6W
value|0x7, 0x8, B30 | DISPREG, 0x6
end_define

begin_define
define|#
directive|define
name|PREFIX_78R7W
value|0x7, 0x8, B30 | DISPREG, 0x7
end_define

begin_define
define|#
directive|define
name|PREFIX_78R4WD
value|0x7, 0x8, B30 | DSTDISPREG, 0x4
end_define

begin_define
define|#
directive|define
name|PREFIX_78R5WD
value|0x7, 0x8, B30 | DSTDISPREG, 0x5
end_define

begin_define
define|#
directive|define
name|PREFIX_78R6WD
value|0x7, 0x8, B30 | DSTDISPREG, 0x6
end_define

begin_define
define|#
directive|define
name|PREFIX_78R7WD
value|0x7, 0x8, B30 | DSTDISPREG, 0x7
end_define

begin_define
define|#
directive|define
name|PREFIX_7974
value|0x7, 0x9, 0x7, 0x4
end_define

begin_define
define|#
directive|define
name|PREFIX_7A74
value|0x7, 0xa, 0x7, 0x4
end_define

begin_define
define|#
directive|define
name|PREFIX_7A7C
value|0x7, 0xa, 0x7, 0xc
end_define

begin_comment
comment|/* Source standard fragment:  */
end_comment

begin_define
define|#
directive|define
name|FROM_IND
value|0, RSIND
end_define

begin_define
define|#
directive|define
name|FROM_POSTINC
value|8, RSPOSTINC
end_define

begin_define
define|#
directive|define
name|FROM_POSTDEC
value|10, RSPOSTDEC
end_define

begin_define
define|#
directive|define
name|FROM_PREINC
value|9, RSPREINC
end_define

begin_define
define|#
directive|define
name|FROM_PREDEC
value|11, RSPREDEC
end_define

begin_define
define|#
directive|define
name|FROM_DISP2
value|B30 | B20 | DISP2SRC, DISPREG
end_define

begin_define
define|#
directive|define
name|FROM_DISP16
value|12, B30 | DISPREG
end_define

begin_define
define|#
directive|define
name|FROM_DISP32
value|12, B31 | DISPREG
end_define

begin_define
define|#
directive|define
name|FROM_DISP16B
value|13, B30 | DISPREG
end_define

begin_define
define|#
directive|define
name|FROM_DISP16W
value|14, B30 | DISPREG
end_define

begin_define
define|#
directive|define
name|FROM_DISP16L
value|15, B30 | DISPREG
end_define

begin_define
define|#
directive|define
name|FROM_DISP32B
value|13, B31 | DISPREG
end_define

begin_define
define|#
directive|define
name|FROM_DISP32W
value|14, B31 | DISPREG
end_define

begin_define
define|#
directive|define
name|FROM_DISP32L
value|15, B31 | DISPREG
end_define

begin_define
define|#
directive|define
name|FROM_ABS16
value|4, B30 | IGNORE
end_define

begin_define
define|#
directive|define
name|FROM_ABS32
value|4, B31 | IGNORE
end_define

begin_comment
comment|/* Destination standard fragment:  */
end_comment

begin_define
define|#
directive|define
name|TO_IND
value|0, RDIND
end_define

begin_define
define|#
directive|define
name|TO_IND_MOV
value|0, RDIND | B30
end_define

begin_define
define|#
directive|define
name|TO_POSTINC
value|8, RDPOSTINC
end_define

begin_define
define|#
directive|define
name|TO_POSTINC_MOV
value|8, RDPOSTINC | B30
end_define

begin_define
define|#
directive|define
name|TO_POSTDEC
value|10, RDPOSTDEC
end_define

begin_define
define|#
directive|define
name|TO_POSTDEC_MOV
value|10, RDPOSTDEC | B30
end_define

begin_define
define|#
directive|define
name|TO_PREINC
value|9, RDPREINC
end_define

begin_define
define|#
directive|define
name|TO_PREINC_MOV
value|9, RDPREINC  | B30
end_define

begin_define
define|#
directive|define
name|TO_PREDEC
value|11, RDPREDEC
end_define

begin_define
define|#
directive|define
name|TO_PREDEC_MOV
value|11, RDPREDEC  | B30
end_define

begin_define
define|#
directive|define
name|TO_DISP2
value|B30 | B20 | DISP2DST, DSTDISPREG
end_define

begin_define
define|#
directive|define
name|TO_DISP2_MOV
value|B30 | B20 | DISP2DST, DSTDISPREG | B30
end_define

begin_define
define|#
directive|define
name|TO_DISP16
value|12, B30 | DSTDISPREG
end_define

begin_define
define|#
directive|define
name|TO_DISP32
value|12, B31 | DSTDISPREG
end_define

begin_define
define|#
directive|define
name|TO_DISP16B
value|13, B30 | DSTDISPREG
end_define

begin_define
define|#
directive|define
name|TO_DISP16W
value|14, B30 | DSTDISPREG
end_define

begin_define
define|#
directive|define
name|TO_DISP16L
value|15, B30 | DSTDISPREG
end_define

begin_define
define|#
directive|define
name|TO_DISP32B
value|13, B31 | DSTDISPREG
end_define

begin_define
define|#
directive|define
name|TO_DISP32W
value|14, B31 | DSTDISPREG
end_define

begin_define
define|#
directive|define
name|TO_DISP32L
value|15, B31 | DSTDISPREG
end_define

begin_define
define|#
directive|define
name|TO_ABS16
value|4, B30 | IGNORE
end_define

begin_define
define|#
directive|define
name|TO_ABS32
value|4, B31 | IGNORE
end_define

begin_comment
comment|/* Source fragment for three-word instruction:  */
end_comment

begin_define
define|#
directive|define
name|TFROM_IND
value|6,  9, B30 | RSIND, 12
end_define

begin_define
define|#
directive|define
name|TFROM_DISP2
value|6,  9, B30 | DISPREG, 12
end_define

begin_define
define|#
directive|define
name|TFROM_ABS16
value|6, 11, B30 | B20 | B10 | IGNORE, 12, ABS16LIST
end_define

begin_define
define|#
directive|define
name|TFROM_ABS32
value|6, 11, B30 | B20 | B11 | IGNORE, 12, ABS32LIST
end_define

begin_define
define|#
directive|define
name|TFROM_POSTINC
value|6, 13, B30 | RSPOSTINC, 12
end_define

begin_define
define|#
directive|define
name|TFROM_PREINC
value|6, 13, B30 | RSPREINC, 12
end_define

begin_define
define|#
directive|define
name|TFROM_POSTDEC
value|6, 13, B30 | RSPOSTDEC, 12
end_define

begin_define
define|#
directive|define
name|TFROM_PREDEC
value|6, 13, B30 | RSPREDEC, 12
end_define

begin_define
define|#
directive|define
name|TFROM_DISP16
value|6, 15, B30 | DISPREG, 12, DISP16LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP32
value|6, 11, 2, 12, DISP32LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP16B
value|6, 15, B30 | DISPREG, 12, DISP16LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP16W
value|6, 15, B30 | DISPREG, 12, DISP16LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP16L
value|6, 15, B30 | DISPREG, 12, DISP16LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP32B
value|6, 11, 2, 12, DISP32LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP32W
value|6, 11, 2, 12, DISP32LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP32L
value|6, 11, 2, 12, DISP32LIST
end_define

begin_define
define|#
directive|define
name|TFROM_ABS16W
value|6, 11, 1, 12, ABS16LIST
end_define

begin_define
define|#
directive|define
name|TFROM_ABS32W
value|6, 11, 3, 12, ABS32LIST
end_define

begin_comment
comment|/* Source fragment for three-word instruction:  */
end_comment

begin_define
define|#
directive|define
name|TFROM_IND_B
value|6,  8, B30 | RSIND, 12
end_define

begin_define
define|#
directive|define
name|TFROM_ABS16_B
value|6, 10, B30 | B20 | B10 | IGNORE, 12, ABS16LIST
end_define

begin_define
define|#
directive|define
name|TFROM_ABS32_B
value|6, 10, B30 | B20 | B11 | IGNORE, 12, ABS32LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP2_B
value|6,  8, B30 | DISPREG, 12
end_define

begin_define
define|#
directive|define
name|TFROM_POSTINC_B
value|6, 12, B30 | RSPOSTINC, 12
end_define

begin_define
define|#
directive|define
name|TFROM_PREINC_B
value|6, 12, B30 | RSPREINC, 12
end_define

begin_define
define|#
directive|define
name|TFROM_POSTDEC_B
value|6, 12, B30 | RSPOSTDEC, 12
end_define

begin_define
define|#
directive|define
name|TFROM_PREDEC_B
value|6, 12, B30 | RSPREDEC, 12
end_define

begin_define
define|#
directive|define
name|TFROM_DISP16_B
value|6, 14, B30 | DISPREG, 12, DISP16LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP32_B
value|6, 10, 2, 12, DISP32LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP16B_B
value|6, 14, B30 | DISPREG, 12, DISP16LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP16W_B
value|6, 14, B30 | DISPREG, 12, DISP16LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP16L_B
value|6, 14, B30 | DISPREG, 12, DISP16LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP32B_B
value|6, 10, 2, 12, DISP32LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP32W_B
value|6, 10, 2, 12, DISP32LIST
end_define

begin_define
define|#
directive|define
name|TFROM_DISP32L_B
value|6, 10, 2, 12, DISP32LIST
end_define

begin_define
define|#
directive|define
name|TFROM_ABS16W_B
value|6, 10, 1, 12, ABS16LIST
end_define

begin_define
define|#
directive|define
name|TFROM_ABS32W_B
value|6, 10, 3, 12, ABS32LIST
end_define

begin_comment
comment|/* Extended Operand Class Expanders:  */
end_comment

begin_define
define|#
directive|define
name|MOVFROM_STD
parameter_list|(
name|CODE
parameter_list|,
name|PREFIX
parameter_list|,
name|NAME
parameter_list|,
name|SRC
parameter_list|,
name|SRC_INFIX
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{SRC, RDIND,     E}},  {{PREFIX, SRC_INFIX, TO_IND_MOV,     E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTINC, E}},  {{PREFIX, SRC_INFIX, TO_POSTINC_MOV, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTDEC, E}},  {{PREFIX, SRC_INFIX, TO_POSTDEC_MOV, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREINC,  E}},  {{PREFIX, SRC_INFIX, TO_PREINC_MOV,  E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREDEC,  E}},  {{PREFIX, SRC_INFIX, TO_PREDEC_MOV,  E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP2DST,  E}},  {{PREFIX, SRC_INFIX, TO_DISP2_MOV,   E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP16DST, E}},  {{PREFIX, SRC_INFIX, TO_DISP16,  DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP32DST, E}},  {{PREFIX, SRC_INFIX, TO_DISP32,  DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB16D, E}},  {{PREFIX, SRC_INFIX, TO_DISP16B, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW16D, E}},  {{PREFIX, SRC_INFIX, TO_DISP16W, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL16D, E}},  {{PREFIX, SRC_INFIX, TO_DISP16L, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB32D, E}},  {{PREFIX, SRC_INFIX, TO_DISP32B, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW32D, E}},  {{PREFIX, SRC_INFIX, TO_DISP32W, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL32D, E}},  {{PREFIX, SRC_INFIX, TO_DISP32L, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, ABS16DST,  E}},  {{PREFIX, SRC_INFIX, TO_ABS16,   DSTABS16LIST,  E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, ABS32DST,  E}},  {{PREFIX, SRC_INFIX, TO_ABS32,   DSTABS32LIST,  E}}}
end_define

begin_define
define|#
directive|define
name|MOVFROM_AD
parameter_list|(
name|CODE
parameter_list|,
name|PREFIX
parameter_list|,
name|NAME
parameter_list|,
name|SRC
parameter_list|,
name|SRC_INFIX
parameter_list|,
name|SRC_SUFFIX
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{SRC, RDIND,     E}},  {{PREFIX, SRC_INFIX, TO_IND_MOV,     SRC_SUFFIX, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTINC, E}},  {{PREFIX, SRC_INFIX, TO_POSTINC_MOV, SRC_SUFFIX, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTDEC, E}},  {{PREFIX, SRC_INFIX, TO_POSTDEC_MOV, SRC_SUFFIX, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREINC,  E}},  {{PREFIX, SRC_INFIX, TO_PREINC_MOV,  SRC_SUFFIX, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREDEC,  E}},  {{PREFIX, SRC_INFIX, TO_PREDEC_MOV,  SRC_SUFFIX, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP2DST,  E}},  {{PREFIX, SRC_INFIX, TO_DISP2_MOV,   SRC_SUFFIX, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP16DST, E}},  {{PREFIX, SRC_INFIX, TO_DISP16,  SRC_SUFFIX, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP32DST, E}},  {{PREFIX, SRC_INFIX, TO_DISP32,  SRC_SUFFIX, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB16D, E}},  {{PREFIX, SRC_INFIX, TO_DISP16B, SRC_SUFFIX, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW16D, E}},  {{PREFIX, SRC_INFIX, TO_DISP16W, SRC_SUFFIX, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL16D, E}},  {{PREFIX, SRC_INFIX, TO_DISP16L, SRC_SUFFIX, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB32D, E}},  {{PREFIX, SRC_INFIX, TO_DISP32B, SRC_SUFFIX, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW32D, E}},  {{PREFIX, SRC_INFIX, TO_DISP32W, SRC_SUFFIX, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL32D, E}},  {{PREFIX, SRC_INFIX, TO_DISP32L, SRC_SUFFIX, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, ABS16DST,  E}},  {{PREFIX, SRC_INFIX, TO_ABS16,   SRC_SUFFIX, DSTABS16LIST,  E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, ABS32DST,  E}},  {{PREFIX, SRC_INFIX, TO_ABS32,   SRC_SUFFIX, DSTABS32LIST,  E}}}
end_define

begin_define
define|#
directive|define
name|MOVFROM_IMM8
parameter_list|(
name|CODE
parameter_list|,
name|PREFIX
parameter_list|,
name|NAME
parameter_list|,
name|SRC
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{SRC, RDIND,     E}},  {{PREFIX,  0, RDIND,     IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTINC, E}},  {{PREFIX,  8, RDPOSTINC, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTDEC, E}},  {{PREFIX, 10, RDPOSTDEC, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREINC,  E}},  {{PREFIX,  9, RDPREINC,  IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREDEC,  E}},  {{PREFIX, 11, RDPREDEC,  IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP2DST,  E}},  {{PREFIX, B30 | B20 | DISP2DST, DSTDISPREG, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP16DST, E}},  {{PREFIX, 12, B30 | DSTDISPREG, IMM8LIST, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP32DST, E}},  {{PREFIX, 12, B31 | DSTDISPREG, IMM8LIST, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB16D, E}},  {{PREFIX, 13, B30 | DSTDISPREG, IMM8LIST, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW16D, E}},  {{PREFIX, 14, B30 | DSTDISPREG, IMM8LIST, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL16D, E}},  {{PREFIX, 15, B30 | DSTDISPREG, IMM8LIST, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB32D, E}},  {{PREFIX, 13, B31 | DSTDISPREG, IMM8LIST, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW32D, E}},  {{PREFIX, 14, B31 | DSTDISPREG, IMM8LIST, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL32D, E}},  {{PREFIX, 15, B31 | DSTDISPREG, IMM8LIST, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, ABS16DST,  E}},  {{PREFIX,  4, B30 | IGNORE,     IMM8LIST, DSTABS16LIST,  E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, ABS32DST,  E}},  {{PREFIX,  4, B31 | IGNORE,     IMM8LIST, DSTABS32LIST,  E}}}
end_define

begin_define
define|#
directive|define
name|MOVFROM_IMM
parameter_list|(
name|CODE
parameter_list|,
name|PREFIX
parameter_list|,
name|NAME
parameter_list|,
name|SRC
parameter_list|,
name|LIST
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{SRC, RDIND,     E}},  {{PREFIX, LIST,  0, RDIND,     DATA2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTINC, E}},  {{PREFIX, LIST,  8, RDPOSTINC, DATA2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTDEC, E}},  {{PREFIX, LIST, 10, RDPOSTDEC, DATA2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREINC,  E}},  {{PREFIX, LIST,  9, RDPREINC,  DATA2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREDEC,  E}},  {{PREFIX, LIST, 11, RDPREDEC,  DATA2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP2DST,  E}},  {{PREFIX, LIST, B30 | B20 | DISP2DST, DSTDISPREG, DATA2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP16DST, E}},  {{PREFIX, LIST, 12, B30 | DSTDISPREG, DATA2, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP32DST, E}},  {{PREFIX, LIST, 12, B31 | DSTDISPREG, DATA2, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB16D, E}},  {{PREFIX, LIST, 13, B30 | DSTDISPREG, DATA2, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW16D, E}},  {{PREFIX, LIST, 14, B30 | DSTDISPREG, DATA2, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL16D, E}},  {{PREFIX, LIST, 15, B30 | DSTDISPREG, DATA2, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB32D, E}},  {{PREFIX, LIST, 13, B31 | DSTDISPREG, DATA2, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW32D, E}},  {{PREFIX, LIST, 14, B31 | DSTDISPREG, DATA2, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL32D, E}},  {{PREFIX, LIST, 15, B31 | DSTDISPREG, DATA2, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, ABS16DST,  E}},  {{PREFIX, LIST,  4, B30 | IGNORE,     DATA2, DSTABS16LIST,  E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, ABS32DST,  E}},  {{PREFIX, LIST,  4, B31 | IGNORE,     DATA2, DSTABS32LIST,  E}}}
end_define

begin_define
define|#
directive|define
name|MOVFROM_REG_BW
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|SRC
parameter_list|,
name|PREFIX
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|,
name|OP4
parameter_list|,
name|RELAX16
parameter_list|)
define|\
value|{CODE, AV_H8,   4, NAME, {{SRC, RDIND,     E}}, {{                              6, OP1, B31 | RDIND,      SRC,                E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTINC, E}}, {{PREFIX, 3,                    6, OP3, B31 | RDPOSTINC,  SRC,                E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTDEC, E}}, {{PREFIX, 1,                    6, OP3, B31 | RDPOSTDEC,  SRC,                E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREINC,  E}}, {{PREFIX, 2,                    6, OP3, B31 | RDPREINC,   SRC,                E}}}, \   {CODE, AV_H8,   6, NAME, {{SRC, RDPREDEC,  E}}, {{                              6, OP3, B31 | RDPREDEC,   SRC,                E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP2DST,  E}}, {{PREFIX, B30 | B20 | DISP2DST, 6, OP1, B31 | DSTDISPREG, SRC,                E}}}, \   {CODE, AV_H8,   6, NAME, {{SRC, DISP16DST, E}}, {{                              6, OP4, B31 | DSTDISPREG, SRC, DSTDISP16LIST, E}}}, \   {CODE, AV_H8,   6, NAME, {{SRC, DISP32DST, E}}, {{7, 8, B30 | DSTDISPREG, 0,    6, OP2, 10,               SRC, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB16D, E}}, {{PREFIX, 1,                    6, OP4, B31 | DSTDISPREG, SRC, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW16D, E}}, {{PREFIX, 2,                    6, OP4, B31 | DSTDISPREG, SRC, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL16D, E}}, {{PREFIX, 3,                    6, OP4, B31 | DSTDISPREG, SRC, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB32D, E}}, {{7, 8, B30 | DSTDISPREG, 1,    6, OP2, 10,               SRC, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW32D, E}}, {{7, 8, B30 | DSTDISPREG, 2,    6, OP2, 10,               SRC, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL32D, E}}, {{7, 8, B30 | DSTDISPREG, 3,    6, OP2, 10,               SRC, DSTDISP32LIST, E}}}, \   {CODE, AV_H8,   4, NAME, {{SRC, ABS16DST,  E}}, {{                              6, OP2, 8,                SRC, RELAX16  | DSTABS16LIST, E}}}, \   {CODE, AV_H8,   6, NAME, {{SRC, ABS32DST,  E}}, {{                              6, OP2, 10,               SRC, MEMRELAX | DSTABS32LIST, E}}}
end_define

begin_define
define|#
directive|define
name|MOVTO_REG_BW
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|DST
parameter_list|,
name|PREFIX
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|,
name|OP4
parameter_list|,
name|RELAX16
parameter_list|)
define|\
value|{CODE, AV_H8,   4, NAME, {{RSIND,     DST, E}}, {{                              6, OP1, B30 | RSIND,     DST,             E}}}, \   {CODE, AV_H8,   6, NAME, {{RSPOSTINC, DST, E}}, {{                              6, OP3, B30 | RSPOSTINC, DST,             E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPOSTDEC, DST, E}}, {{PREFIX, 2,                    6, OP3, B30 | RSPOSTDEC, DST,             E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPREINC,  DST, E}}, {{PREFIX, 1,                    6, OP3, B30 | RSPREINC,  DST,             E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPREDEC,  DST, E}}, {{PREFIX, 3,                    6, OP3, B30 | RSPREDEC,  DST,             E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP2SRC,  DST, E}}, {{PREFIX, B30 | B20 | DISP2SRC, 6, OP1, B30 | DISPREG,   DST,             E}}}, \   {CODE, AV_H8,   6, NAME, {{DISP16SRC, DST, E}}, {{                              6, OP4, B30 | DISPREG,   DST, DISP16LIST, E}}}, \   {CODE, AV_H8,   6, NAME, {{DISP32SRC, DST, E}}, {{7, 8, B30 | DISPREG, 0,       6, OP2, 2,               DST, DISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXB16,  DST, E}}, {{PREFIX, 1,                    6, OP4, B30 | DISPREG,   DST, DISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXW16,  DST, E}}, {{PREFIX, 2,                    6, OP4, B30 | DISPREG,   DST, DISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXL16,  DST, E}}, {{PREFIX, 3,                    6, OP4, B30 | DISPREG,   DST, DISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXB32,  DST, E}}, {{7, 8, B30 | DISPREG, 1,       6, OP2, 2,               DST, DISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXW32,  DST, E}}, {{7, 8, B30 | DISPREG, 2,       6, OP2, 2,               DST, DISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXL32,  DST, E}}, {{7, 8, B30 | DISPREG, 3,       6, OP2, 2,               DST, DISP32LIST, E}}}, \   {CODE, AV_H8,   4, NAME, {{ABS16SRC,  DST, E}}, {{                              6, OP2, 0,               DST, RELAX16  | ABS16LIST, E}}}, \   {CODE, AV_H8,   6, NAME, {{ABS32SRC,  DST, E}}, {{                              6, OP2, 2,               DST, MEMRELAX | ABS32LIST, E}}}
end_define

begin_comment
comment|/* Expansion macros for two-word (plus data) instructions.  */
end_comment

begin_comment
comment|/* Expansion from one source to "standard" destinations.  */
end_comment

begin_define
define|#
directive|define
name|EXPAND2_STD_SRC
parameter_list|(
name|CODE
parameter_list|,
name|WEIGHT
parameter_list|,
name|NAME
parameter_list|,
name|SRC
parameter_list|,
name|PREFIX
parameter_list|,
name|NIB1
parameter_list|,
name|NIB2
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTINC, E}}, {{PREFIX, TO_POSTINC, NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTDEC, E}}, {{PREFIX, TO_POSTDEC, NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREINC,  E}}, {{PREFIX, TO_PREINC,  NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREDEC,  E}}, {{PREFIX, TO_PREDEC,  NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP2DST,  E}}, {{PREFIX, TO_DISP2,   NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP16DST, E}}, {{PREFIX, TO_DISP16,  NIB1, NIB2, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP32DST, E}}, {{PREFIX, TO_DISP32,  NIB1, NIB2, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB16D, E}}, {{PREFIX, TO_DISP16B, NIB1, NIB2, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW16D, E}}, {{PREFIX, TO_DISP16W, NIB1, NIB2, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL16D, E}}, {{PREFIX, TO_DISP16L, NIB1, NIB2, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB32D, E}}, {{PREFIX, TO_DISP32B, NIB1, NIB2, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW32D, E}}, {{PREFIX, TO_DISP32W, NIB1, NIB2, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL32D, E}}, {{PREFIX, TO_DISP32L, NIB1, NIB2, DSTDISP32LIST, E}}}
end_define

begin_comment
comment|/* Expansion from one destination to "standard" sources.  */
end_comment

begin_define
define|#
directive|define
name|EXPAND2_STD_DST
parameter_list|(
name|CODE
parameter_list|,
name|WEIGHT
parameter_list|,
name|NAME
parameter_list|,
name|DST
parameter_list|,
name|PREFIX
parameter_list|,
name|NIB1
parameter_list|,
name|NIB2
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{RSPOSTINC, DST, E}}, {{PREFIX, FROM_POSTINC, NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPOSTDEC, DST, E}}, {{PREFIX, FROM_POSTDEC, NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPREINC,  DST, E}}, {{PREFIX, FROM_PREINC,  NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPREDEC,  DST, E}}, {{PREFIX, FROM_PREDEC,  NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP2SRC,  DST, E}}, {{PREFIX, FROM_DISP2,   NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP16SRC, DST, E}}, {{PREFIX, FROM_DISP16,  NIB1, NIB2, DISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP32SRC, DST, E}}, {{PREFIX, FROM_DISP32,  NIB1, NIB2, DISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXB16,  DST, E}}, {{PREFIX, FROM_DISP16B, NIB1, NIB2, DISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXW16,  DST, E}}, {{PREFIX, FROM_DISP16W, NIB1, NIB2, DISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXL16,  DST, E}}, {{PREFIX, FROM_DISP16L, NIB1, NIB2, DISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXB32,  DST, E}}, {{PREFIX, FROM_DISP32B, NIB1, NIB2, DISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXW32,  DST, E}}, {{PREFIX, FROM_DISP32W, NIB1, NIB2, DISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXL32,  DST, E}}, {{PREFIX, FROM_DISP32L, NIB1, NIB2, DISP32LIST, E}}}
end_define

begin_comment
comment|/* Expansion from immediate source to "standard" destinations.  */
end_comment

begin_define
define|#
directive|define
name|EXPAND2_STD_IMM
parameter_list|(
name|CODE
parameter_list|,
name|WEIGHT
parameter_list|,
name|NAME
parameter_list|,
name|SRC
parameter_list|,
name|PREFIX
parameter_list|,
name|OPCODE
parameter_list|,
name|IGN
parameter_list|,
name|IMMLIST
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTINC, E}}, {{PREFIX, TO_POSTINC, OPCODE, IGN, IMMLIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTDEC, E}}, {{PREFIX, TO_POSTDEC, OPCODE, IGN, IMMLIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREINC,  E}}, {{PREFIX, TO_PREINC,  OPCODE, IGN, IMMLIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREDEC,  E}}, {{PREFIX, TO_PREDEC,  OPCODE, IGN, IMMLIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP2DST,  E}}, {{PREFIX, TO_DISP2,   OPCODE, IGN, IMMLIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP16DST, E}}, {{PREFIX, TO_DISP16,  OPCODE, IGN, DSTDISP16LIST, IMMLIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP32DST, E}}, {{PREFIX, TO_DISP32,  OPCODE, IGN, DSTDISP32LIST, IMMLIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB16D, E}}, {{PREFIX, TO_DISP16B, OPCODE, IGN, DSTDISP16LIST, IMMLIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW16D, E}}, {{PREFIX, TO_DISP16W, OPCODE, IGN, DSTDISP16LIST, IMMLIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL16D, E}}, {{PREFIX, TO_DISP16L, OPCODE, IGN, DSTDISP16LIST, IMMLIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB32D, E}}, {{PREFIX, TO_DISP32B, OPCODE, IGN, DSTDISP32LIST, IMMLIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW32D, E}}, {{PREFIX, TO_DISP32W, OPCODE, IGN, DSTDISP32LIST, IMMLIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL32D, E}}, {{PREFIX, TO_DISP32L, OPCODE, IGN, DSTDISP32LIST, IMMLIST, E}}}
end_define

begin_comment
comment|/* Expansion from abs/disp source to "standard" destinations.  */
end_comment

begin_define
define|#
directive|define
name|EXPAND2_STD_ABSDISP
parameter_list|(
name|CODE
parameter_list|,
name|WEIGHT
parameter_list|,
name|NAME
parameter_list|,
name|SRC
parameter_list|,
name|PREFIX
parameter_list|,
name|DSTLIST
parameter_list|,
name|NIB1
parameter_list|,
name|NIB2
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTINC, E}}, {{PREFIX, DSTLIST, TO_POSTINC, NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTDEC, E}}, {{PREFIX, DSTLIST, TO_POSTDEC, NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREINC,  E}}, {{PREFIX, DSTLIST, TO_PREINC,  NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREDEC,  E}}, {{PREFIX, DSTLIST, TO_PREDEC,  NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP2DST,  E}}, {{PREFIX, DSTLIST, TO_DISP2,   NIB1, NIB2, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP16DST, E}}, {{PREFIX, DSTLIST, TO_DISP16,  NIB1, NIB2, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP32DST, E}}, {{PREFIX, DSTLIST, TO_DISP32,  NIB1, NIB2, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB16D, E}}, {{PREFIX, DSTLIST, TO_DISP16B, NIB1, NIB2, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW16D, E}}, {{PREFIX, DSTLIST, TO_DISP16W, NIB1, NIB2, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL16D, E}}, {{PREFIX, DSTLIST, TO_DISP16L, NIB1, NIB2, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB32D, E}}, {{PREFIX, DSTLIST, TO_DISP32B, NIB1, NIB2, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW32D, E}}, {{PREFIX, DSTLIST, TO_DISP32W, NIB1, NIB2, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL32D, E}}, {{PREFIX, DSTLIST, TO_DISP32L, NIB1, NIB2, DSTDISP32LIST, E}}}
end_define

begin_comment
comment|/* Expansion from ind source to "standard" destinations.  */
end_comment

begin_define
define|#
directive|define
name|EXPAND2_STD_IND
parameter_list|(
name|CODE
parameter_list|,
name|WEIGHT
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|,
name|BIT
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{RSIND, RDPOSTINC, E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_POSTINC, OPCODE, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, RDPOSTDEC, E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_POSTDEC, OPCODE, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, RDPREINC,  E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_PREINC,  OPCODE, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, RDPREDEC,  E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_PREDEC,  OPCODE, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, DISP2DST,  E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_DISP2,   OPCODE, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, DISP16DST, E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_DISP16,  OPCODE, IGNORE, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, DISP32DST, E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_DISP32,  OPCODE, IGNORE, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, INDEXB16D, E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_DISP16B, OPCODE, IGNORE, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, INDEXW16D, E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_DISP16W, OPCODE, IGNORE, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, INDEXL16D, E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_DISP16L, OPCODE, IGNORE, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, INDEXB32D, E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_DISP32B, OPCODE, IGNORE, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, INDEXW32D, E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_DISP32W, OPCODE, IGNORE, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, INDEXL32D, E}}, {{0x7, 0xc, BIT | RSIND, 0x5, TO_DISP32L, OPCODE, IGNORE, DSTDISP32LIST, E}}}
end_define

begin_comment
comment|/* Expansion macros for three word (plus data) instructions.  */
end_comment

begin_define
define|#
directive|define
name|EXPAND3_STD_SRC
parameter_list|(
name|CODE
parameter_list|,
name|WEIGHT
parameter_list|,
name|NAME
parameter_list|,
name|SRC
parameter_list|,
name|PREFIX
parameter_list|,
name|INFIX
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTINC, E}}, {{PREFIX, INFIX,  8, RDPOSTINC, OPCODE, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTDEC, E}}, {{PREFIX, INFIX, 10, RDPOSTDEC, OPCODE, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREINC,  E}}, {{PREFIX, INFIX,  9, RDPREINC,  OPCODE, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREDEC,  E}}, {{PREFIX, INFIX, 11, RDPREDEC,  OPCODE, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP2DST,  E}}, {{PREFIX, INFIX, B30 | B20 | DISP2DST, DSTDISPREG, OPCODE, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP16DST, E}}, {{PREFIX, INFIX, 12, B30 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP32DST, E}}, {{PREFIX, INFIX, 12, B31 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB16D, E}}, {{PREFIX, INFIX, 13, B30 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW16D, E}}, {{PREFIX, INFIX, 14, B30 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL16D, E}}, {{PREFIX, INFIX, 15, B30 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB32D, E}}, {{PREFIX, INFIX, 13, B31 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW32D, E}}, {{PREFIX, INFIX, 14, B31 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL32D, E}}, {{PREFIX, INFIX, 15, B31 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP32LIST, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND3_L_SRC
parameter_list|(
name|CODE
parameter_list|,
name|WEIGHT
parameter_list|,
name|NAME
parameter_list|,
name|SRC
parameter_list|,
name|PREFIX
parameter_list|,
name|INFIX
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{SRC, RDIND,     E}}, {{PREFIX, INFIX,  0, RDIND,     OPCODE, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTINC, E}}, {{PREFIX, INFIX,  8, RDPOSTINC, OPCODE, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPOSTDEC, E}}, {{PREFIX, INFIX, 10, RDPOSTDEC, OPCODE, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREINC,  E}}, {{PREFIX, INFIX,  9, RDPREINC,  OPCODE, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, RDPREDEC,  E}}, {{PREFIX, INFIX, 11, RDPREDEC,  OPCODE, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP2DST,  E}}, {{PREFIX, INFIX, B30 | B20 | DISP2DST, DSTDISPREG, OPCODE, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP16DST, E}}, {{PREFIX, INFIX, 12, B30 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, DISP32DST, E}}, {{PREFIX, INFIX, 12, B31 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB16D, E}}, {{PREFIX, INFIX, 13, B30 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW16D, E}}, {{PREFIX, INFIX, 14, B30 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL16D, E}}, {{PREFIX, INFIX, 15, B30 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXB32D, E}}, {{PREFIX, INFIX, 13, B31 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXW32D, E}}, {{PREFIX, INFIX, 14, B31 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, INDEXL32D, E}}, {{PREFIX, INFIX, 15, B31 | DSTDISPREG, OPCODE, B30 | IGNORE, DSTDISP32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, ABS16DST,  E}}, {{PREFIX, INFIX,  4, B30 | IGNORE,     OPCODE, B30 | IGNORE, DSTABS16LIST,  E}}}, \   {CODE, AV_H8SX, 0, NAME, {{SRC, ABS32DST,  E}}, {{PREFIX, INFIX,  4, B31 | IGNORE,     OPCODE, B30 | IGNORE, DSTABS32LIST,  E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_STD_MATRIX_L
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|EXPAND3_L_SRC (CODE, 6, NAME, RSIND,     PREFIX_0104,   TFROM_IND,     OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, RSPOSTINC, PREFIX_0104,   TFROM_POSTINC, OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, RSPOSTDEC, PREFIX_0106,   TFROM_POSTDEC, OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, RSPREINC,  PREFIX_0105,   TFROM_PREINC,  OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, RSPREDEC,  PREFIX_0107,   TFROM_PREDEC,  OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, DISP2SRC,  PREFIX_010_D2, TFROM_DISP2,   OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, DISP16SRC, PREFIX_0104,   TFROM_DISP16,  OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, DISP32SRC, PREFIX_78R4,   TFROM_DISP32,  OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, INDEXB16,  PREFIX_0105,   TFROM_DISP16B, OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, INDEXW16,  PREFIX_0106,   TFROM_DISP16W, OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, INDEXL16,  PREFIX_0107,   TFROM_DISP16L, OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, INDEXB32,  PREFIX_78R5,   TFROM_DISP32B, OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, INDEXW32,  PREFIX_78R6,   TFROM_DISP32W, OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, INDEXL32,  PREFIX_78R7,   TFROM_DISP32L, OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, ABS16SRC,  PREFIX_0104,   TFROM_ABS16,   OPCODE), \   EXPAND3_L_SRC (CODE, 6, NAME, ABS32SRC,  PREFIX_0104,   TFROM_ABS32,   OPCODE)
end_define

begin_define
define|#
directive|define
name|EXPAND_STD_MATRIX_W
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|EXPAND3_L_SRC (CODE, 4, NAME, RSPOSTINC, PREFIX_0154,   TFROM_POSTINC, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, RSPOSTDEC, PREFIX_0156,   TFROM_POSTDEC, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, RSPREINC,  PREFIX_0155,   TFROM_PREINC,  OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, RSPREDEC,  PREFIX_0157,   TFROM_PREDEC,  OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, DISP2SRC,  PREFIX_015_D2, TFROM_DISP2,   OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, DISP16SRC, PREFIX_0154,   TFROM_DISP16,  OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, DISP32SRC, PREFIX_78R4W,  TFROM_DISP32,  OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, INDEXB16,  PREFIX_0155,   TFROM_DISP16B, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, INDEXW16,  PREFIX_0156,   TFROM_DISP16W, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, INDEXL16,  PREFIX_0157,   TFROM_DISP16L, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, INDEXB32,  PREFIX_78R5W,  TFROM_DISP32B, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, INDEXW32,  PREFIX_78R6W,  TFROM_DISP32W, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, INDEXL32,  PREFIX_78R7W,  TFROM_DISP32L, OPCODE)
end_define

begin_define
define|#
directive|define
name|EXPAND_STD_MATRIX_B
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|EXPAND3_L_SRC (CODE, 4, NAME, RSPOSTINC, PREFIX_0174,    TFROM_POSTINC_B, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, RSPOSTDEC, PREFIX_0176,    TFROM_POSTDEC_B, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, RSPREINC,  PREFIX_0175,    TFROM_PREINC_B,  OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, RSPREDEC,  PREFIX_0177,    TFROM_PREDEC_B,  OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, DISP2SRC,  PREFIX_017_D2S, TFROM_DISP2_B,   OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, DISP16SRC, PREFIX_0174,    TFROM_DISP16_B,  OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, DISP32SRC, PREFIX_78R4W,   TFROM_DISP32_B,  OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, INDEXB16,  PREFIX_0175,    TFROM_DISP16B_B, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, INDEXW16,  PREFIX_0176,    TFROM_DISP16W_B, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, INDEXL16,  PREFIX_0177,    TFROM_DISP16L_B, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, INDEXB32,  PREFIX_78R5W,   TFROM_DISP32B_B, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, INDEXW32,  PREFIX_78R6W,   TFROM_DISP32W_B, OPCODE), \   EXPAND3_L_SRC (CODE, 4, NAME, INDEXL32,  PREFIX_78R7W,   TFROM_DISP32L_B, OPCODE)
end_define

begin_comment
comment|/* Use the expansion macros to fill out the opcode table.  */
end_comment

begin_define
define|#
directive|define
name|EXPAND_FROM_REG8
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{RS8, RDIND,     E}}, {{0x7, 0xd, B30 | RDIND, IGNORE,             OP1, OP2, RS8, IGNORE, E}}}, \   EXPAND2_STD_SRC (CODE, 2, NAME, RS8, PREFIX_0179, OP3, RS8), \   {CODE, AV_H8SX, 0, NAME, {{RS8, ABS8DST,   E}}, {{0x7, 0xf, DSTABS8LIST,                     OP1, OP2, RS8, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RS8, ABS16DST,  E}}, {{0x6, 0xa, 0x1, B31 | IGNORE, DSTABS16LIST, OP1, OP2, RS8, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RS8, ABS32DST,  E}}, {{0x6, 0xa, 0x3, B31 | IGNORE, DSTABS32LIST, OP1, OP2, RS8, IGNORE, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_TO_REG8
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{RSIND, RD8,     E}}, {{0x7, 0xc, B30 | RSIND, IGNORE,          OP1, OP2, IGNORE, RD8, E}}}, \   EXPAND2_STD_DST (CODE, 2, NAME, RD8, PREFIX_017A, OP3, RD8), \   {CODE, AV_H8SX, 0, NAME, {{ABS8SRC,  RD8,  E}}, {{0x7, 0xe, ABS8LIST,                     OP1, OP2, IGNORE, RD8, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS16SRC, RD8,  E}}, {{0x6, 0xa, 0x1, B30 | IGNORE, ABS16LIST, OP1, OP2, IGNORE, RD8, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS32SRC, RD8,  E}}, {{0x6, 0xa, 0x3, B30 | IGNORE, ABS32LIST, OP1, OP2, IGNORE, RD8, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_FROM_IND8
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{RSIND, RDIND,    E}}, {{0x7, 0xc, B30 | RSIND, 0x5, TO_IND,   OPCODE, IGNORE, E}}}, \   EXPAND2_STD_IND (CODE, 2, NAME, OPCODE, B30), \   {CODE, AV_H8SX, 0, NAME, {{RSIND, ABS16DST, E}}, {{0x7, 0xc, B30 | RSIND, 0x5, TO_ABS16, OPCODE, IGNORE, DSTABS16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, ABS32DST, E}}, {{0x7, 0xc, B30 | RSIND, 0x5, TO_ABS32, OPCODE, IGNORE, DSTABS32LIST, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_FROM_ABS16_B
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{ABS16SRC, RDIND,    E}}, {{PREFIX_6A15, ABS16LIST, TO_IND,   OPCODE, IGNORE, E}}}, \   EXPAND2_STD_ABSDISP (CODE, 2, NAME, ABS16SRC, PREFIX_6A15, ABS16LIST, OPCODE, IGNORE), \   {CODE, AV_H8SX, 0, NAME, {{ABS16SRC, ABS16DST, E}}, {{PREFIX_6A15, ABS16LIST, TO_ABS16, OPCODE, IGNORE, DSTABS16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS16SRC, ABS32DST, E}}, {{PREFIX_6A15, ABS16LIST, TO_ABS32, OPCODE, IGNORE, DSTABS32LIST, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_FROM_ABS32_B
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{ABS32SRC, RDIND,    E}}, {{PREFIX_6A35, ABS32LIST, TO_IND,   OPCODE, IGNORE, E}}}, \   EXPAND2_STD_ABSDISP (CODE, 2, NAME, ABS32SRC, PREFIX_6A35, ABS32LIST, OPCODE, IGNORE), \   {CODE, AV_H8SX, 0, NAME, {{ABS32SRC, ABS16DST, E}}, {{PREFIX_6A35, ABS32LIST, TO_ABS16, OPCODE, IGNORE, DSTABS16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS32SRC, ABS32DST, E}}, {{PREFIX_6A35, ABS32LIST, TO_ABS32, OPCODE, IGNORE, DSTABS32LIST, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_FROM_IMM16_W
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{IMM16, RDIND,    E}}, {{PREFIX_015E, TO_IND, OPCODE, IGNORE, IMM16LIST, E}}}, \   EXPAND2_STD_IMM (CODE, 2, NAME, IMM16, PREFIX_015E, OPCODE, IGNORE, IMM16LIST), \   {CODE, AV_H8SX, 0, NAME, {{IMM16, ABS16DST, E}}, {{PREFIX_015E, TO_ABS16, OPCODE, IGNORE, DSTABS16LIST, IMM16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM16, ABS32DST, E}}, {{PREFIX_015E, TO_ABS32, OPCODE, IGNORE, DSTABS32LIST, IMM16LIST, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_FROM_REG16
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|)
define|\
value|{CODE, AV_H8,   2, NAME, {{RS16, RDIND,    E}}, {{0x7, 0xd, B31 | RDIND, IGNORE,             OP1, OP2, RS16, IGNORE, E}}}, \   EXPAND2_STD_SRC (CODE, 2, NAME, RS16, PREFIX_0159, OP3, RS16), \   {CODE, AV_H8SX, 0, NAME, {{RS16, ABS16DST, E}}, {{0x6, 0xb, 0x1, B31 | IGNORE, DSTABS16LIST, OP1, OP2, RS16, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RS16, ABS32DST, E}}, {{0x6, 0xb, 0x3, B31 | IGNORE, DSTABS32LIST, OP1, OP2, RS16, IGNORE, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_TO_REG16
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{RSIND, RD16,    E}}, {{0x7, 0xc, B31 | RSIND, IGNORE,          OP1, OP2, IGNORE, RD16, E}}}, \   EXPAND2_STD_DST (CODE, 2, NAME, RD16, PREFIX_015A, OP3, RD16), \   {CODE, AV_H8SX, 0, NAME, {{ABS16SRC, RD16, E}}, {{0x6, 0xb, 0x1, B30 | IGNORE, ABS16LIST, OP1, OP2, IGNORE, RD16, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS32SRC, RD16, E}}, {{0x6, 0xb, 0x3, B30 | IGNORE, ABS32LIST, OP1, OP2, IGNORE, RD16, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_FROM_IND16
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{RSIND, RDIND,    E}}, {{0x7, 0xc, B31 | RSIND, 0x5, TO_IND, OPCODE, IGNORE, E}}}, \   EXPAND2_STD_IND (CODE, 2, NAME, OPCODE, B31), \   {CODE, AV_H8SX, 0, NAME, {{RSIND, ABS16DST, E}}, {{0x7, 0xc, B31 | RSIND, 0x5, TO_ABS16, OPCODE, IGNORE, DSTABS16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND, ABS32DST, E}}, {{0x7, 0xc, B31 | RSIND, 0x5, TO_ABS32, OPCODE, IGNORE, DSTABS32LIST, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_FROM_ABS16_W
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{ABS16SRC, RDIND,    E}}, {{PREFIX_6B15, ABS16LIST, TO_IND,   OPCODE, IGNORE, E}}}, \   EXPAND2_STD_ABSDISP (CODE, 2, NAME, ABS16SRC, PREFIX_6B15, ABS16LIST, OPCODE, IGNORE), \   {CODE, AV_H8SX, 0, NAME, {{ABS16SRC, ABS16DST, E}}, {{PREFIX_6B15, ABS16LIST, TO_ABS16, OPCODE, IGNORE, DSTABS16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS16SRC, ABS32DST, E}}, {{PREFIX_6B15, ABS16LIST, TO_ABS32, OPCODE, IGNORE, DSTABS32LIST, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_FROM_ABS32_W
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{ABS32SRC, RDIND,    E}}, {{PREFIX_6B35, ABS32LIST, TO_IND,   OPCODE, IGNORE, E}}}, \   EXPAND2_STD_ABSDISP (CODE, 2, NAME, ABS32SRC, PREFIX_6B35, ABS32LIST, OPCODE, IGNORE), \   {CODE, AV_H8SX, 0, NAME, {{ABS32SRC, ABS16DST, E}}, {{PREFIX_6B35, ABS32LIST, TO_ABS16, OPCODE, IGNORE, DSTABS16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS32SRC, ABS32DST, E}}, {{PREFIX_6B35, ABS32LIST, TO_ABS32, OPCODE, IGNORE, DSTABS32LIST, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_FROM_IMM16_L
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{IMM16U_NS, RDIND,    E}}, {{PREFIX_010E, TO_IND, OPCODE, B30 | IGNORE, IMM16ULIST, E}}}, \   EXPAND2_STD_IMM (CODE, 2, NAME, IMM16U_NS, PREFIX_010E, OPCODE, B30 | IGNORE, IMM16ULIST), \   {CODE, AV_H8SX, 0, NAME, {{IMM16U_NS, ABS16DST, E}}, {{PREFIX_010E, TO_ABS16, OPCODE, B30 | IGNORE, DSTABS16LIST, IMM16ULIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM16U_NS, ABS32DST, E}}, {{PREFIX_010E, TO_ABS32, OPCODE, B30 | IGNORE, DSTABS32LIST, IMM16ULIST, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_FROM_IMM32_L
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{IMM32, RDIND,    E}}, {{PREFIX_010E, TO_IND, OPCODE, B31 | IGNORE, IMM32LIST, E}}}, \   EXPAND2_STD_IMM (CODE, 2, NAME, IMM32, PREFIX_010E, OPCODE, B31 | IGNORE, IMM32LIST), \   {CODE, AV_H8SX, 0, NAME, {{IMM32, ABS16DST, E}}, {{PREFIX_010E, TO_ABS16, OPCODE, B31 | IGNORE, DSTABS16LIST, IMM32LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM32, ABS32DST, E}}, {{PREFIX_010E, TO_ABS32, OPCODE, B31 | IGNORE, DSTABS32LIST, IMM32LIST, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_FROM_REG32
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{RS32, RDIND,    E}}, {{PREFIX_0109, TO_IND,   OPCODE, B30 | RS32, E}}}, \   EXPAND2_STD_SRC (CODE, 2, NAME, RS32, PREFIX_0109, OPCODE, B30 | RS32), \   {CODE, AV_H8SX, 0, NAME, {{RS32, ABS16DST, E}}, {{PREFIX_0109, TO_ABS16, OPCODE, B30 | RS32, DSTABS16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RS32, ABS32DST, E}}, {{PREFIX_0109, TO_ABS32, OPCODE, B30 | RS32, DSTABS32LIST, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_TO_REG32
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OPCODE
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{RSIND, RD32,    E}}, {{PREFIX_010A, FROM_IND,   OPCODE, B30 | RD32, E}}}, \   EXPAND2_STD_DST (CODE, 2, NAME, RD32, PREFIX_010A, OPCODE, B30 | RD32), \   {CODE, AV_H8SX, 0, NAME, {{ABS16SRC, RD32, E}}, {{PREFIX_010A, FROM_ABS16, OPCODE, B30 | RD32, ABS16LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS32SRC, RD32, E}}, {{PREFIX_010A, FROM_ABS32, OPCODE, B30 | RD32, ABS32LIST, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_TWOOP_B
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|,
name|OP4
parameter_list|,
name|BIT
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{IMM8, RDIND,     E}}, {{0x7, 0xd,                 B30 | RDIND,            IGNORE,                      OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, RDPOSTINC, E}}, {{PREFIX_0174,    0x6, 0xc, B30 | RDPOSTINC,  B31 | B20 | IGNORE,                OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, RDPOSTDEC, E}}, {{PREFIX_0176,    0x6, 0xc, B30 | RDPOSTDEC,  B31 | B20 | IGNORE,                OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, RDPREINC,  E}}, {{PREFIX_0175,    0x6, 0xc, B30 | RDPREINC,   B31 | B20 | IGNORE,                OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, RDPREDEC,  E}}, {{PREFIX_0177,    0x6, 0xc, B30 | RDPREDEC,   B31 | B20 | IGNORE,                OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, DISP2DST,  E}}, {{PREFIX_017_D2D, 0x6, 0x8, B30 | DSTDISPREG, B31 | B20 | IGNORE,                OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, DISP16DST, E}}, {{PREFIX_0174,    0x6, 0xe, B30 | DSTDISPREG, B31 | B20 | IGNORE, DSTDISP16LIST, OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, DISP32DST, E}}, {{PREFIX_78R4WD,  0x6, 0xa, 2,                B31 | B20 | IGNORE, DSTDISP32LIST, OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, INDEXB16D, E}}, {{PREFIX_0175,    0x6, 0xe, B30 | DSTDISPREG, B31 | B20 | IGNORE, DSTDISP16LIST, OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, INDEXW16D, E}}, {{PREFIX_0176,    0x6, 0xe, B30 | DSTDISPREG, B31 | B20 | IGNORE, DSTDISP16LIST, OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, INDEXL16D, E}}, {{PREFIX_0177,    0x6, 0xe, B30 | DSTDISPREG, B31 | B20 | IGNORE, DSTDISP16LIST, OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, INDEXB32D, E}}, {{PREFIX_78R5WD,  0x6, 0xa, 2,                B31 | B20 | IGNORE, DSTDISP32LIST, OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, INDEXW32D, E}}, {{PREFIX_78R6WD,  0x6, 0xa, 2,                B31 | B20 | IGNORE, DSTDISP32LIST, OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, INDEXL32D, E}}, {{PREFIX_78R7WD,  0x6, 0xa, 2,                B31 | B20 | IGNORE, DSTDISP32LIST, OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, ABS8DST,   E}}, {{0x7, 0xf,                                                       DSTABS8LIST,   OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, ABS16DST,  E}}, {{0x6, 0xa, 0x1,                              B31 | B20 | IGNORE, DSTABS16LIST,  OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{IMM8, ABS32DST,  E}}, {{0x6, 0xa, 0x3,                              B31 | B20 | IGNORE, DSTABS32LIST,  OP1, BIT | IGNORE, IMM8LIST, E}}}, \   {CODE, AV_H8,   2, NAME, {{RS8,  RD8,       E}}, {{OP2, OP3, RS8, RD8, E}}}, \   EXPAND_FROM_REG8      (CODE, NAME, OP2, OP3, OP4), \   EXPAND_TO_REG8        (CODE, NAME, OP2, OP3, OP4), \   EXPAND_FROM_IND8      (CODE, NAME, OP4), \   EXPAND_STD_MATRIX_B   (CODE, NAME, OP4), \   EXPAND_FROM_ABS16_B   (CODE, NAME, OP4), \   EXPAND_FROM_ABS32_B   (CODE, NAME, OP4)
end_define

begin_define
define|#
directive|define
name|EXPAND_TWOOP_W
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|)
define|\
value|{CODE, AV_H8H,  6, NAME, {{IMM16, RD16, E}}, {{0x7, 0x9, OP3, RD16, IMM16LIST, E}}}, \   EXPAND_FROM_IMM16_W   (CODE, NAME, OP3), \   EXPAND_FROM_REG16     (CODE, NAME, OP1, OP2, OP3), \   EXPAND_TO_REG16       (CODE, NAME, OP1, OP2, OP3), \   EXPAND_FROM_IND16     (CODE, NAME, OP3), \   EXPAND_STD_MATRIX_W   (CODE, NAME, OP3), \   EXPAND_FROM_ABS16_W   (CODE, NAME, OP3), \   EXPAND_FROM_ABS32_W   (CODE, NAME, OP3)
end_define

begin_define
define|#
directive|define
name|EXPAND_TWOOP_L
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|OP1
parameter_list|)
define|\
value|{CODE, AV_H8SX, 0, NAME, {{IMM16U_NS, RD32, E}}, {{0x7, 0xa, OP1, B31 | RD32, IMM16ULIST, E}}}, \   {CODE, AV_H8H,  6, NAME, {{IMM32,     RD32, E}}, {{0x7, 0xa, OP1, B30 | RD32, IMM32LIST,  E}}}, \   EXPAND_FROM_IMM16_L   (CODE, NAME, OP1), \   EXPAND_FROM_IMM32_L   (CODE, NAME, OP1), \   EXPAND_FROM_REG32     (CODE, NAME, OP1), \   EXPAND_TO_REG32       (CODE, NAME, OP1), \   EXPAND_STD_MATRIX_L   (CODE, NAME, OP1)
end_define

begin_comment
comment|/* Old expanders:  */
end_comment

begin_define
define|#
directive|define
name|BITOP
parameter_list|(
name|code
parameter_list|,
name|imm
parameter_list|,
name|name
parameter_list|,
name|op00
parameter_list|,
name|op01
parameter_list|,
name|op10
parameter_list|,
name|op11
parameter_list|,
name|op20
parameter_list|,
name|op21
parameter_list|,
name|op30
parameter_list|,
name|op4
parameter_list|)
define|\
value|{code, AV_H8,  2, name, {{imm, RD8,      E}}, {{op00, op01, imm,  RD8,   E}}}, \   {code, AV_H8,  6, name, {{imm, RDIND,    E}}, {{op10, op11, B30 | RDIND, 0,  op00, op01, imm, 0, E}}}, \   {code, AV_H8,  6, name, {{imm, ABS8DST,  E}}, {{op20, op21, DSTABS8LIST,     op00, op01, imm, 0, E}}}, \   {code, AV_H8S, 6, name, {{imm, ABS16DST, E}}, {{0x6,  0xa,  0x1,  op30, DST | MEMRELAX | ABS16LIST , op00, op01, imm, op4, E}}}, \   {code, AV_H8S, 6, name, {{imm, ABS32DST, E}}, {{0x6,  0xa,  0x3,  op30, DST | MEMRELAX | ABS32LIST , op00, op01, imm, op4, E}}}
end_define

begin_define
define|#
directive|define
name|BITOP_B
parameter_list|(
name|code
parameter_list|,
name|imm
parameter_list|,
name|name
parameter_list|,
name|op00
parameter_list|,
name|op01
parameter_list|,
name|op10
parameter_list|,
name|op11
parameter_list|,
name|op20
parameter_list|,
name|op21
parameter_list|,
name|op30
parameter_list|,
name|op4
parameter_list|)
define|\
value|{code, AV_H8SX, 0, name, {{imm, RDIND,    E}}, {{op10, op11, B30 | RDIND, 0,  op00, op01, imm, op4, E}}}, \   {code, AV_H8SX, 0, name, {{imm, ABS8DST,  E}}, {{op20, op21, DSTABS8LIST,     op00, op01, imm, op4, E}}}, \   {code, AV_H8SX, 0, name, {{imm, ABS16DST, E}}, {{0x6,  0xa,  0x1,  op30, DST | ABS16LIST, op00, op01, imm, op4, E}}}, \   {code, AV_H8SX, 0, name, {{imm, ABS32DST, E}}, {{0x6,  0xa,  0x3,  op30, DST | ABS32LIST, op00, op01, imm, op4, E}}}
end_define

begin_define
define|#
directive|define
name|EBITOP
parameter_list|(
name|code
parameter_list|,
name|imm
parameter_list|,
name|name
parameter_list|,
name|op00
parameter_list|,
name|op01
parameter_list|,
name|op10
parameter_list|,
name|op11
parameter_list|,
name|op20
parameter_list|,
name|op21
parameter_list|,
name|op30
parameter_list|,
name|op4
parameter_list|)
define|\
value|BITOP(code, imm, name, op00+1, op01, op10, op11, op20, op21, op30, op4), \   BITOP(code, RS8, name, op00,   op01, op10, op11, op20, op21, op30, op4)
end_define

begin_define
define|#
directive|define
name|EBITOP_B
parameter_list|(
name|code
parameter_list|,
name|imm
parameter_list|,
name|name
parameter_list|,
name|op00
parameter_list|,
name|op01
parameter_list|,
name|op10
parameter_list|,
name|op11
parameter_list|,
name|op20
parameter_list|,
name|op21
parameter_list|,
name|op30
parameter_list|,
name|op4
parameter_list|)
define|\
value|BITOP_B(code, imm, name, op00+1, op01, op10, op11, op20, op21, op30, op4), \   BITOP_B(code, RS8, name, op00,   op01, op10, op11, op20, op21, op30, op4)
end_define

begin_define
define|#
directive|define
name|WTWOP
parameter_list|(
name|code
parameter_list|,
name|name
parameter_list|,
name|op1
parameter_list|,
name|op2
parameter_list|)
define|\
value|{code, AV_H8, 2, name, {{RS16, RD16, E}}, {{op1, op2, RS16, RD16, E}}}
end_define

begin_define
define|#
directive|define
name|BRANCH
parameter_list|(
name|code
parameter_list|,
name|name
parameter_list|,
name|op
parameter_list|)
define|\
value|{code, AV_H8H, 6, name, {{PCREL16, E}}, {{0x5, 0x8, op, 0x0, PCREL16, DATA3 | B00, E}}}, \   {code, AV_H8,  4, name, {{PCREL8,  E}}, {{0x4, op,           PCREL8,  DATA  | B00, E}}}
end_define

begin_define
define|#
directive|define
name|UNOP
parameter_list|(
name|code
parameter_list|,
name|name
parameter_list|,
name|op1
parameter_list|,
name|op2
parameter_list|)
define|\
value|{code, AV_H8, 2, name, {{OR8, E}}, {{op1, op2, 0, OR8, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_UNOP_STD_B
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|PREFIX
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|)
define|\
value|{CODE, AV_H8,   2, NAME, {{OR8,       E}}, {{                                                                  OP1, OP2, OP3, OR8,    E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND,     E}}, {{           7, 13, B30 | RSIND,             IGNORE,                OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPOSTINC, E}}, {{PREFIX, 4, 6, 12, B30 | RSPOSTINC,   B31 | IGNORE,                OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPOSTDEC, E}}, {{PREFIX, 6, 6, 12, B30 | RSPOSTDEC,   B31 | IGNORE,                OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPREINC,  E}}, {{PREFIX, 5, 6, 12, B30 | RSPREINC,    B31 | IGNORE,                OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPREDEC,  E}}, {{PREFIX, 7, 6, 12, B30 | RSPREDEC,    B31 | IGNORE,                OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP2SRC,  E}}, {{PREFIX, B30 | B21 | DISP2SRC, 6,  8, B30 | DISPREG, B31 | IGNORE, OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP16SRC, E}}, {{PREFIX, 4, 6, 14, B30 | DISPREG,     B31 | IGNORE,  DISP16LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP32SRC, E}}, {{7, 8, B30 | DISPREG, 4,    6, 10, 2, B31 | IGNORE,  DISP32LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXB16,  E}}, {{PREFIX, 5, 6, 14, B30 | DISPREG,     B31 | IGNORE,  DISP16LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXW16,  E}}, {{PREFIX, 6, 6, 14, B30 | DISPREG,     B31 | IGNORE,  DISP16LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXL16,  E}}, {{PREFIX, 7, 6, 14, B30 | DISPREG,     B31 | IGNORE,  DISP16LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXB32,  E}}, {{7, 8, B30 | DISPREG, 5,    6, 10, 2, B31 | IGNORE,  DISP32LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXW32,  E}}, {{7, 8, B30 | DISPREG, 6,    6, 10, 2, B31 | IGNORE,  DISP32LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXL32,  E}}, {{7, 8, B30 | DISPREG, 7,    6, 10, 2, B31 | IGNORE,  DISP32LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS8SRC,   E}}, {{                           7, 15,                   ABS8LIST,     OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS16SRC,  E}}, {{                           6, 10, 1, B31 | IGNORE,  ABS16LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS32SRC,  E}}, {{                           6, 10, 3, B31 | IGNORE,  ABS32LIST,    OP1, OP2, OP3, IGNORE, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_UNOP_STD_W
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|PREFIX
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|)
define|\
value|{CODE, AV_H8H,  2, NAME, {{OR16,      E}}, {{                                                                  OP1, OP2, OP3, OR16,   E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND,     E}}, {{           7, 13, B31 | RSIND,             IGNORE,                OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPOSTINC, E}}, {{PREFIX, 4, 6, 13, B30 | RSPOSTINC,   B31 | IGNORE,                OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPOSTDEC, E}}, {{PREFIX, 6, 6, 13, B30 | RSPOSTDEC,   B31 | IGNORE,                OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPREINC,  E}}, {{PREFIX, 5, 6, 13, B30 | RSPREINC,    B31 | IGNORE,                OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPREDEC,  E}}, {{PREFIX, 7, 6, 13, B30 | RSPREDEC,    B31 | IGNORE,                OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP2SRC,  E}}, {{PREFIX, B30 | B21 | DISP2SRC, 6,  9, B30 | DISPREG, B31 | IGNORE, OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP16SRC, E}}, {{PREFIX, 4, 6, 15, B30 | DISPREG,     B31 | IGNORE,  DISP16LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP32SRC, E}}, {{7, 8, B30 | DISPREG, 4,    6, 11, 2, B31 | IGNORE,  DISP32LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXB16,  E}}, {{PREFIX, 5, 6, 15, B30 | DISPREG,     B31 | IGNORE,  DISP16LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXW16,  E}}, {{PREFIX, 6, 6, 15, B30 | DISPREG,     B31 | IGNORE,  DISP16LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXL16,  E}}, {{PREFIX, 7, 6, 15, B30 | DISPREG,     B31 | IGNORE,  DISP16LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXB32,  E}}, {{7, 8, B30 | DISPREG, 5,    6, 11, 2, B31 | IGNORE,  DISP32LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXW32,  E}}, {{7, 8, B30 | DISPREG, 6,    6, 11, 2, B31 | IGNORE,  DISP32LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXL32,  E}}, {{7, 8, B30 | DISPREG, 7,    6, 11, 2, B31 | IGNORE,  DISP32LIST,   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS16SRC,  E}}, {{                           6, 11, 1, B31 | IGNORE,  ABS16LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS32SRC,  E}}, {{                           6, 11, 3, B31 | IGNORE,  ABS32LIST,    OP1, OP2, OP3, IGNORE, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_UNOP_STD_L
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|PREFIX
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|)
define|\
value|{CODE, AV_H8H,  2, NAME, {{OR32,      E}}, {{                                                                  OP1, OP2, OP3, B30 | OR32,   E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSIND,     E}}, {{PREFIX, 4, 6,  9, B30 | RSIND,       B31 | IGNORE,                OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPOSTINC, E}}, {{PREFIX, 4, 6, 13, B30 | RSPOSTINC,   B31 | IGNORE,                OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPOSTDEC, E}}, {{PREFIX, 6, 6, 13, B30 | RSPOSTDEC,   B31 | IGNORE,                OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPREINC,  E}}, {{PREFIX, 5, 6, 13, B30 | RSPREINC,    B31 | IGNORE,                OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{RSPREDEC,  E}}, {{PREFIX, 7, 6, 13, B30 | RSPREDEC,    B31 | IGNORE,                OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP2SRC,  E}}, {{PREFIX, B30 | B21 | DISP2SRC, 6,  9, B30 | DISPREG, B31 | IGNORE, OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP16SRC, E}}, {{PREFIX, 4, 6, 15, B30 | DISPREG,     B31 | IGNORE,  DISP16LIST,   OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{DISP32SRC, E}}, {{7, 8, B31 | DISPREG, 4,    6, 11, 2, B31 | IGNORE,  DISP32LIST,   OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXB16,  E}}, {{PREFIX, 5, 6, 15, B30 | DISPREG,     B31 | IGNORE,  DISP16LIST,   OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXW16,  E}}, {{PREFIX, 6, 6, 15, B30 | DISPREG,     B31 | IGNORE,  DISP16LIST,   OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXL16,  E}}, {{PREFIX, 7, 6, 15, B30 | DISPREG,     B31 | IGNORE,  DISP16LIST,   OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXB32,  E}}, {{7, 8, B31 | DISPREG, 5,    6, 11, 2, B31 | IGNORE,  DISP32LIST,   OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXW32,  E}}, {{7, 8, B31 | DISPREG, 6,    6, 11, 2, B31 | IGNORE,  DISP32LIST,   OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{INDEXL32,  E}}, {{7, 8, B31 | DISPREG, 7,    6, 11, 2, B31 | IGNORE,  DISP32LIST,   OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS16SRC,  E}}, {{PREFIX, 4,                 6, 11, 0, B31 | IGNORE,  ABS16LIST,    OP1, OP2, OP3, B30 | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{ABS32SRC,  E}}, {{PREFIX, 4,                 6, 11, 2, B31 | IGNORE,  ABS32LIST,    OP1, OP2, OP3, B30 | IGNORE, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_UNOP_EXTENDED_B
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|CONST
parameter_list|,
name|PREFIX
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|)
define|\
value|{CODE, AV_H8,   2, NAME, {{CONST, RD8,       E}}, {{                                                                     OP1, OP2, OP3, RD8,    E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDIND,     E}}, {{           7, 13, B30 | RDIND,             IGNORE,                   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDPOSTINC, E}}, {{PREFIX, 4, 6, 12, B30 | RDPOSTINC,   B31 | IGNORE,                   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDPOSTDEC, E}}, {{PREFIX, 6, 6, 12, B30 | RDPOSTDEC,   B31 | IGNORE,                   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDPREINC,  E}}, {{PREFIX, 5, 6, 12, B30 | RDPREINC,    B31 | IGNORE,                   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDPREDEC,  E}}, {{PREFIX, 7, 6, 12, B30 | RDPREDEC,    B31 | IGNORE,                   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, DISP2DST,  E}}, {{PREFIX, B30 | B21 | DISP2DST, 6,  8, B30 | DSTDISPREG, B31 | IGNORE, OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, DISP16DST, E}}, {{PREFIX, 4, 6, 14, B30 | DSTDISPREG,  B31 | IGNORE, DSTDISP16LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, DISP32DST, E}}, {{7, 8, B30 | DSTDISPREG, 4, 6, 10, 2, B31 | IGNORE, DSTDISP32LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXB16D, E}}, {{PREFIX, 5, 6, 14, B30 | DSTDISPREG,  B31 | IGNORE, DSTDISP16LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXW16D, E}}, {{PREFIX, 6, 6, 14, B30 | DSTDISPREG,  B31 | IGNORE, DSTDISP16LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXL16D, E}}, {{PREFIX, 7, 6, 14, B30 | DSTDISPREG,  B31 | IGNORE, DSTDISP16LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXB32D, E}}, {{7, 8, B30 | DSTDISPREG, 5, 6, 10, 2, B31 | IGNORE, DSTDISP32LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXW32D, E}}, {{7, 8, B30 | DSTDISPREG, 6, 6, 10, 2, B31 | IGNORE, DSTDISP32LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXL32D, E}}, {{7, 8, B30 | DSTDISPREG, 7, 6, 10, 2, B31 | IGNORE, DSTDISP32LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, ABS8DST,   E}}, {{                           7, 15,                  DSTABS8LIST,      OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, ABS16DST,  E}}, {{                           6, 10, 1, B31 | IGNORE, DSTABS16LIST,     OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, ABS32DST,  E}}, {{                           6, 10, 3, B31 | IGNORE, DSTABS32LIST,     OP1, OP2, OP3, IGNORE, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_UNOP_EXTENDED_W
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|CONST
parameter_list|,
name|PREFIX
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|)
define|\
value|{CODE, AV_H8,   2, NAME, {{CONST, RD16,      E}}, {{                                                                     OP1, OP2, OP3, RD16,   E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDIND,     E}}, {{           7, 13, B31 | RDIND,             IGNORE,                   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDPOSTINC, E}}, {{PREFIX, 4, 6, 13, B30 | RDPOSTINC,   B31 | IGNORE,                   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDPOSTDEC, E}}, {{PREFIX, 6, 6, 13, B30 | RDPOSTDEC,   B31 | IGNORE,                   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDPREINC,  E}}, {{PREFIX, 5, 6, 13, B30 | RDPREINC,    B31 | IGNORE,                   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDPREDEC,  E}}, {{PREFIX, 7, 6, 13, B30 | RDPREDEC,    B31 | IGNORE,                   OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, DISP2DST,  E}}, {{PREFIX, B30 | B21 | DISP2DST, 6,  9, B30 | DSTDISPREG, B31 | IGNORE, OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, DISP16DST, E}}, {{PREFIX, 4, 6, 15, B30 | DSTDISPREG,  B31 | IGNORE, DSTDISP16LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, DISP32DST, E}}, {{7, 8, B30 | DSTDISPREG, 4, 6, 11, 2, B31 | IGNORE, DSTDISP32LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXB16D, E}}, {{PREFIX, 5, 6, 15, B30 | DSTDISPREG,  B31 | IGNORE, DSTDISP16LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXW16D, E}}, {{PREFIX, 6, 6, 15, B30 | DSTDISPREG,  B31 | IGNORE, DSTDISP16LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXL16D, E}}, {{PREFIX, 7, 6, 15, B30 | DSTDISPREG,  B31 | IGNORE, DSTDISP16LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXB32D, E}}, {{7, 8, B30 | DSTDISPREG, 5, 6, 11, 2, B31 | IGNORE, DSTDISP32LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXW32D, E}}, {{7, 8, B30 | DSTDISPREG, 6, 6, 11, 2, B31 | IGNORE, DSTDISP32LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXL32D, E}}, {{7, 8, B30 | DSTDISPREG, 7, 6, 11, 2, B31 | IGNORE, DSTDISP32LIST,    OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, ABS16DST,  E}}, {{                           6, 11, 1, B31 | IGNORE, DSTABS16LIST,     OP1, OP2, OP3, IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, ABS32DST,  E}}, {{                           6, 11, 3, B31 | IGNORE, DSTABS32LIST,     OP1, OP2, OP3, IGNORE, E}}}
end_define

begin_define
define|#
directive|define
name|EXPAND_UNOP_EXTENDED_L
parameter_list|(
name|CODE
parameter_list|,
name|NAME
parameter_list|,
name|CONST
parameter_list|,
name|PREFIX
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|,
name|OP3
parameter_list|,
name|BIT
parameter_list|)
define|\
value|{CODE, AV_H8,   2, NAME, {{CONST, RD32,      E}}, {{                                                                     OP1, OP2, OP3, BIT | RD32,   E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDIND,     E}}, {{PREFIX, 4, 6,  9, B30 | RDIND,       B31 | IGNORE,                   OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDPOSTINC, E}}, {{PREFIX, 4, 6, 13, B30 | RDPOSTINC,   B31 | IGNORE,                   OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDPOSTDEC, E}}, {{PREFIX, 6, 6, 13, B30 | RDPOSTDEC,   B31 | IGNORE,                   OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDPREINC,  E}}, {{PREFIX, 5, 6, 13, B30 | RDPREINC,    B31 | IGNORE,                   OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, RDPREDEC,  E}}, {{PREFIX, 7, 6, 13, B30 | RDPREDEC,    B31 | IGNORE,                   OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, DISP2DST,  E}}, {{PREFIX, B30 | B21 | DISP2DST, 6,  9, B30 | DSTDISPREG, B31 | IGNORE, OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, DISP16DST, E}}, {{PREFIX, 4, 6, 15, B30 | DSTDISPREG,  B31 | IGNORE, DSTDISP16LIST,    OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, DISP32DST, E}}, {{7, 8, B31 | DSTDISPREG, 4, 6, 11, 2, B31 | IGNORE, DSTDISP32LIST,    OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXB16D, E}}, {{PREFIX, 5, 6, 15, B30 | DSTDISPREG,  B31 | IGNORE, DSTDISP16LIST,    OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXW16D, E}}, {{PREFIX, 6, 6, 15, B30 | DSTDISPREG,  B31 | IGNORE, DSTDISP16LIST,    OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXL16D, E}}, {{PREFIX, 7, 6, 15, B30 | DSTDISPREG,  B31 | IGNORE, DSTDISP16LIST,    OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXB32D, E}}, {{7, 8, B31 | DSTDISPREG, 5, 6, 11, 2, B31 | IGNORE, DSTDISP32LIST,    OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXW32D, E}}, {{7, 8, B31 | DSTDISPREG, 6, 6, 11, 2, B31 | IGNORE, DSTDISP32LIST,    OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, INDEXL32D, E}}, {{7, 8, B31 | DSTDISPREG, 7, 6, 11, 2, B31 | IGNORE, DSTDISP32LIST,    OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, ABS16DST,  E}}, {{PREFIX, 4,                 6, 11, 0, B31 | IGNORE, DSTABS16LIST,     OP1, OP2, OP3, BIT | IGNORE, E}}}, \   {CODE, AV_H8SX, 0, NAME, {{CONST, ABS32DST,  E}}, {{PREFIX, 4,                 6, 11, 2, B31 | IGNORE, DSTABS32LIST,     OP1, OP2, OP3, BIT | IGNORE, E}}}
end_define

begin_define
define|#
directive|define
name|PREFIXLDC
value|0x0, 0x1, 0x4, B30 | CCR_EXR | DST
end_define

begin_define
define|#
directive|define
name|PREFIXSTC
value|0x0, 0x1, 0x4, B30 | CCR_EXR | SRC
end_define

begin_define
define|#
directive|define
name|O
parameter_list|(
name|op
parameter_list|,
name|size
parameter_list|)
value|(op * 4 + size)
end_define

begin_define
define|#
directive|define
name|OP_SIZE
parameter_list|(
name|HOW
parameter_list|)
value|(HOW % 4)
end_define

begin_define
define|#
directive|define
name|OP_KIND
parameter_list|(
name|HOW
parameter_list|)
value|(HOW / 4)
end_define

begin_enum
enum|enum
name|h8_asm_codes
block|{
name|O_RECOMPILE
init|=
literal|0
block|,
name|O_ADD
block|,
name|O_ADDX
block|,
name|O_AND
block|,
name|O_BAND
block|,
name|O_BRA
block|,
name|O_BRAB
block|,
name|O_BRAW
block|,
name|O_BRAL
block|,
name|O_BRAS
block|,
name|O_BRABC
block|,
name|O_BRABS
block|,
name|O_BSRBC
block|,
name|O_BSRBS
block|,
name|O_BRN
block|,
name|O_BHI
block|,
name|O_BLS
block|,
name|O_BCC
block|,
name|O_BCS
block|,
name|O_BNE
block|,
name|O_BVC
block|,
name|O_BVS
block|,
name|O_BPL
block|,
name|O_BMI
block|,
name|O_BGE
block|,
name|O_BLT
block|,
name|O_BGT
block|,
name|O_BLE
block|,
name|O_ANDC
block|,
name|O_BEQ
block|,
name|O_BCLR
block|,
name|O_BCLREQ
block|,
name|O_BCLRNE
block|,
name|O_BSETEQ
block|,
name|O_BSETNE
block|,
name|O_BFLD
block|,
name|O_BFST
block|,
name|O_BIAND
block|,
name|O_BILD
block|,
name|O_BIOR
block|,
name|O_BIXOR
block|,
name|O_BIST
block|,
name|O_BISTZ
block|,
name|O_BLD
block|,
name|O_BNOT
block|,
name|O_BOR
block|,
name|O_BSET
block|,
name|O_BSR
block|,
name|O_BXOR
block|,
name|O_CMP
block|,
name|O_DAA
block|,
name|O_DAS
block|,
name|O_DEC
block|,
name|O_DIVU
block|,
name|O_DIVS
block|,
name|O_DIVXU
block|,
name|O_DIVXS
block|,
name|O_INC
block|,
name|O_LDC
block|,
name|O_MOV
block|,
name|O_MOVAB
block|,
name|O_MOVAW
block|,
name|O_MOVAL
block|,
name|O_MOVMD
block|,
name|O_MOVSD
block|,
name|O_OR
block|,
name|O_ROTL
block|,
name|O_ROTR
block|,
name|O_ROTXL
block|,
name|O_ROTXR
block|,
name|O_BPT
block|,
name|O_SHAL
block|,
name|O_SHAR
block|,
name|O_SHLL
block|,
name|O_SHLR
block|,
name|O_SUB
block|,
name|O_SUBS
block|,
name|O_TRAPA
block|,
name|O_XOR
block|,
name|O_XORC
block|,
name|O_BST
block|,
name|O_BSTZ
block|,
name|O_BTST
block|,
name|O_EEPMOV
block|,
name|O_EXTS
block|,
name|O_EXTU
block|,
name|O_JMP
block|,
name|O_JSR
block|,
name|O_MULU
block|,
name|O_MULUU
block|,
name|O_MULS
block|,
name|O_MULSU
block|,
name|O_MULXU
block|,
name|O_MULXS
block|,
name|O_NOP
block|,
name|O_NOT
block|,
name|O_ORC
block|,
name|O_RTE
block|,
name|O_RTEL
block|,
name|O_STC
block|,
name|O_SUBX
block|,
name|O_NEG
block|,
name|O_RTS
block|,
name|O_RTSL
block|,
name|O_SLEEP
block|,
name|O_ILL
block|,
name|O_ADDS
block|,
name|O_SYSCALL
block|,
name|O_TAS
block|,
name|O_CLRMAC
block|,
name|O_LDMAC
block|,
name|O_MAC
block|,
name|O_LDM
block|,
name|O_STM
block|,
name|O_STMAC
block|,
name|O_LAST
block|,
comment|/* Change made for System Call processing.  */
name|O_SYS_CREAT
block|,
name|O_SYS_OPEN
block|,
name|O_SYS_READ
block|,
name|O_SYS_WRITE
block|,
name|O_SYS_LSEEK
block|,
name|O_SYS_CLOSE
block|,
name|O_SYS_STAT
block|,
name|O_SYS_FSTAT
block|,
comment|/* Space reserved for future file I/O system calls.  */
name|O_SYS_CMDLINE
comment|/* End of System Call specific Changes.  */
block|}
enum|;
end_enum

begin_enum
enum|enum
name|h8_size
block|{
name|SB
init|=
literal|0
block|,
name|SW
init|=
literal|1
block|,
name|SL
init|=
literal|2
block|,
name|SN
init|=
literal|3
block|}
enum|;
end_enum

begin_comment
comment|/* FIXME: Lots of insns have "E, 0, 0, 0, 0" in the nibble code sequences.    Methinks the zeroes aren't necessary.  Once confirmed, nuke 'em.  */
end_comment

begin_decl_stmt
name|struct
name|h8_opcode
name|h8_opcodes
index|[]
init|=
block|{
block|{
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"add.b"
block|,
block|{
block|{
name|IMM8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x8
block|,
name|RD8
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_B
argument_list|(
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"add.b"
argument_list|,
literal|0x8
argument_list|,
literal|0x0
argument_list|,
literal|0x8
argument_list|,
literal|0x1
argument_list|,
literal|0
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8
block|,
literal|6
block|,
literal|"add.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x9
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"add.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0xa
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"add.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xd
block|,
name|B31
operator||
name|RDIND
block|,
name|IGNORE
block|,
literal|0x0
block|,
literal|0xa
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"add.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|ABS16DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xb
block|,
literal|0x1
block|,
name|B31
operator||
name|IGNORE
block|,
name|DSTABS16LIST
block|,
literal|0x0
block|,
literal|0xa
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"add.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|ABS32DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xb
block|,
literal|0x3
block|,
name|B31
operator||
name|IGNORE
block|,
name|DSTABS32LIST
block|,
literal|0x0
block|,
literal|0xa
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_W
argument_list|(
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"add.w"
argument_list|,
literal|0x0
argument_list|,
literal|0x9
argument_list|,
literal|0x1
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"add.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0xa
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"add.l"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0xa
block|,
name|B31
operator||
name|IMM3NZ
block|,
name|B31
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_L
argument_list|(
name|O
argument_list|(
name|O_ADD
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"add.l"
argument_list|,
literal|0x1
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_ADDS
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"adds"
block|,
block|{
block|{
name|KBIT
block|,
name|RDP
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0xB
block|,
name|KBIT
block|,
name|RDP
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"addx"
block|,
block|{
block|{
name|IMM8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x9
block|,
name|RD8
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.b"
block|,
block|{
block|{
name|IMM8
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xd
block|,
name|B30
operator||
name|RDIND
block|,
name|IGNORE
block|,
literal|0x9
block|,
name|IGNORE
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.b"
block|,
block|{
block|{
name|IMM8
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0176
block|,
literal|0x6
block|,
literal|0xc
block|,
name|B30
operator||
name|RDPOSTDEC
block|,
name|B31
operator||
name|IGNORE
block|,
literal|0x9
block|,
name|IGNORE
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"addx"
block|,
block|{
block|{
name|RS8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0xe
block|,
name|RS8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.b"
block|,
block|{
block|{
name|RS8
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xd
block|,
name|B30
operator||
name|RDIND
block|,
name|IGNORE
block|,
literal|0x0
block|,
literal|0xe
block|,
name|RS8
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.b"
block|,
block|{
block|{
name|RS8
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0176
block|,
literal|0x6
block|,
literal|0xc
block|,
name|B30
operator||
name|RDPOSTDEC
block|,
name|B31
operator||
name|IGNORE
block|,
literal|0x0
block|,
literal|0xe
block|,
name|RS8
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.b"
block|,
block|{
block|{
name|RSIND
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xc
block|,
name|B30
operator||
name|RSIND
block|,
name|IGNORE
block|,
literal|0x0
block|,
literal|0xe
block|,
name|IGNORE
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.b"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0176
block|,
literal|0x6
block|,
literal|0xc
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
name|B30
operator||
name|B20
operator||
name|IGNORE
block|,
literal|0x0
block|,
literal|0xe
block|,
name|IGNORE
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.b"
block|,
block|{
block|{
name|RSIND
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0174
block|,
literal|0x6
block|,
literal|0x8
block|,
name|B30
operator||
name|RSIND
block|,
literal|0xd
block|,
literal|0x0
block|,
name|RDIND
block|,
literal|0x1
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.b"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0176
block|,
literal|0x6
block|,
literal|0xc
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
literal|0xd
block|,
literal|0xa
block|,
name|RDPOSTDEC
block|,
literal|0x1
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.w"
block|,
block|{
block|{
name|IMM16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0151
block|,
literal|0x7
block|,
literal|0x9
block|,
literal|0x1
block|,
name|RD16
block|,
name|IMM16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.w"
block|,
block|{
block|{
name|IMM16
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xd
block|,
name|B31
operator||
name|RDIND
block|,
name|B01
operator||
name|IGNORE
block|,
literal|0x7
block|,
literal|0x9
block|,
literal|0x1
block|,
name|IGNORE
block|,
name|IMM16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.w"
block|,
block|{
block|{
name|IMM16
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0156
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RDPOSTDEC
block|,
name|B31
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x7
block|,
literal|0x9
block|,
literal|0x1
block|,
name|IGNORE
block|,
name|IMM16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0151
block|,
literal|0x0
block|,
literal|0x9
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.w"
block|,
block|{
block|{
name|RS16
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xd
block|,
name|B31
operator||
name|RDIND
block|,
name|B01
operator||
name|IGNORE
block|,
literal|0x0
block|,
literal|0x9
block|,
name|RS16
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.w"
block|,
block|{
block|{
name|RS16
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0156
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RDPOSTDEC
block|,
name|B31
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x0
block|,
literal|0x9
block|,
name|RS16
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.w"
block|,
block|{
block|{
name|RSIND
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xc
block|,
name|B31
operator||
name|RSIND
block|,
name|B01
operator||
name|IGNORE
block|,
literal|0x0
block|,
literal|0x9
block|,
name|IGNORE
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.w"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0156
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
name|B30
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x0
block|,
literal|0x9
block|,
name|IGNORE
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.w"
block|,
block|{
block|{
name|RSIND
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0154
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RSIND
block|,
literal|0xd
block|,
literal|0x0
block|,
name|RDIND
block|,
literal|0x1
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.w"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0156
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
literal|0xd
block|,
literal|0xa
block|,
name|RDPOSTDEC
block|,
literal|0x1
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.l"
block|,
block|{
block|{
name|IMM32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0101
block|,
literal|0x7
block|,
literal|0xa
block|,
literal|0x1
block|,
name|RD32
block|,
name|IMM32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.l"
block|,
block|{
block|{
name|IMM32
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0104
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RDIND
block|,
name|B31
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x7
block|,
literal|0xa
block|,
literal|0x1
block|,
name|IGNORE
block|,
name|IMM32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.l"
block|,
block|{
block|{
name|IMM32
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0106
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RDPOSTDEC
block|,
name|B31
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x7
block|,
literal|0xa
block|,
literal|0x1
block|,
name|IGNORE
block|,
name|IMM32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0101
block|,
literal|0x0
block|,
literal|0xa
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.l"
block|,
block|{
block|{
name|RS32
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0104
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RDIND
block|,
name|B31
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x0
block|,
literal|0xa
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.l"
block|,
block|{
block|{
name|RS32
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0106
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RDPOSTDEC
block|,
name|B31
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x0
block|,
literal|0xa
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.l"
block|,
block|{
block|{
name|RSIND
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0104
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RSIND
block|,
name|B30
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x0
block|,
literal|0xa
block|,
name|B31
operator||
name|IGNORE
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.l"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0106
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
name|B30
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x0
block|,
literal|0xa
block|,
name|B31
operator||
name|IGNORE
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.l"
block|,
block|{
block|{
name|RSIND
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0104
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RSIND
block|,
literal|0xd
block|,
literal|0x0
block|,
name|RDIND
block|,
literal|0x1
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ADDX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"addx.l"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0106
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
literal|0xd
block|,
literal|0xa
block|,
name|RDPOSTDEC
block|,
literal|0x1
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_AND
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"and.b"
block|,
block|{
block|{
name|IMM8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0xe
block|,
name|RD8
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_B
argument_list|(
name|O
argument_list|(
name|O_AND
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"and.b"
argument_list|,
literal|0xe
argument_list|,
literal|0x1
argument_list|,
literal|0x6
argument_list|,
literal|0x6
argument_list|,
literal|0
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_AND
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"and.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0x6
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_W
argument_list|(
name|O
argument_list|(
name|O_AND
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"and.w"
argument_list|,
literal|0x6
argument_list|,
literal|0x6
argument_list|,
literal|0x6
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_AND
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"and.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xF
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0x6
block|,
name|B30
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_L
argument_list|(
name|O
argument_list|(
name|O_AND
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"and.l"
argument_list|,
literal|0x6
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_ANDC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"andc"
block|,
block|{
block|{
name|IMM8
block|,
name|CCR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x6
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ANDC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"andc"
block|,
block|{
block|{
name|IMM8
block|,
name|EXR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0x4
block|,
name|EXR
operator||
name|DST
block|,
literal|0x0
block|,
literal|0x6
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BRA
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bra"
argument_list|,
literal|0x0
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_BRAB
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra"
block|,
block|{
block|{
name|LOWREG
operator||
name|L_8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x9
block|,
name|LOWREG
operator||
name|L_8
operator||
name|B30
block|,
literal|0x5
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRAW
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra"
block|,
block|{
block|{
name|LOWREG
operator||
name|L_16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x9
block|,
name|LOWREG
operator||
name|L_16
operator||
name|B30
block|,
literal|0x6
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRAL
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra"
block|,
block|{
block|{
name|RS32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x9
block|,
name|RS32
operator||
name|B30
block|,
literal|0x7
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bc"
block|,
block|{
block|{
name|IMM3
block|,
name|RDIND
block|,
name|OP3PCREL8
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xC
block|,
name|B30
operator||
name|RDIND
block|,
literal|0x0
block|,
literal|0x4
block|,
name|B30
operator||
name|IMM3
block|,
name|OP3PCREL8
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bc"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS8DST
block|,
name|OP3PCREL8
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xE
block|,
name|DSTABS8LIST
block|,
literal|0x4
block|,
name|B30
operator||
name|IMM3
block|,
name|OP3PCREL8
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bc"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS16DST
block|,
name|OP3PCREL8
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x1
block|,
literal|0x0
block|,
name|DSTABS16LIST
block|,
literal|0x4
block|,
name|B30
operator||
name|IMM3
block|,
name|OP3PCREL8
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bc"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS32DST
block|,
name|OP3PCREL8
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x3
block|,
literal|0x0
block|,
name|DSTABS32LIST
block|,
literal|0x4
block|,
name|B30
operator||
name|IMM3
block|,
name|OP3PCREL8
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bs"
block|,
block|{
block|{
name|IMM3
block|,
name|RDIND
block|,
name|OP3PCREL8
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xC
block|,
name|B30
operator||
name|RDIND
block|,
literal|0x0
block|,
literal|0x4
block|,
name|B31
operator||
name|IMM3
block|,
name|OP3PCREL8
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bs"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS8DST
block|,
name|OP3PCREL8
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xE
block|,
name|DSTABS8LIST
block|,
literal|0x4
block|,
name|B31
operator||
name|IMM3
block|,
name|OP3PCREL8
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bs"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS16DST
block|,
name|OP3PCREL8
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x1
block|,
literal|0x0
block|,
name|DSTABS16LIST
block|,
literal|0x4
block|,
name|B31
operator||
name|IMM3
block|,
name|OP3PCREL8
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bs"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS32DST
block|,
name|OP3PCREL8
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x3
block|,
literal|0x0
block|,
name|DSTABS32LIST
block|,
literal|0x4
block|,
name|B31
operator||
name|IMM3
block|,
name|OP3PCREL8
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bc"
block|,
block|{
block|{
name|IMM3
block|,
name|RDIND
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xC
block|,
name|B30
operator||
name|RDIND
block|,
literal|0x0
block|,
literal|0x5
block|,
literal|0x8
block|,
name|B30
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bc"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS8DST
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xE
block|,
name|DSTABS8LIST
block|,
literal|0x5
block|,
literal|0x8
block|,
name|B30
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bc"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS16DST
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x1
block|,
literal|0x0
block|,
name|DSTABS16LIST
block|,
literal|0x5
block|,
literal|0x8
block|,
name|B30
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bc"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS32DST
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x3
block|,
literal|0x0
block|,
name|DSTABS32LIST
block|,
literal|0x5
block|,
literal|0x8
block|,
name|B30
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bs"
block|,
block|{
block|{
name|IMM3
block|,
name|RDIND
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xC
block|,
name|B30
operator||
name|RDIND
block|,
literal|0x0
block|,
literal|0x5
block|,
literal|0x8
block|,
name|B31
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bs"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS8DST
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xE
block|,
name|DSTABS8LIST
block|,
literal|0x5
block|,
literal|0x8
block|,
name|B31
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bs"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS16DST
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x1
block|,
literal|0x0
block|,
name|DSTABS16LIST
block|,
literal|0x5
block|,
literal|0x8
block|,
name|B31
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRABS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/bs"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS32DST
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x3
block|,
literal|0x0
block|,
name|DSTABS32LIST
block|,
literal|0x5
block|,
literal|0x8
block|,
name|B31
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BRAS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bra/s"
block|,
block|{
block|{
name|PCREL8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x4
block|,
literal|0x0
block|,
name|PCREL8
block|,
name|DATA
operator||
name|B01
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSRBC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bsr/bc"
block|,
block|{
block|{
name|IMM3
block|,
name|RDIND
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xC
block|,
name|B30
operator||
name|RDIND
block|,
literal|0x0
block|,
literal|0x5
block|,
literal|0xC
block|,
name|B30
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSRBC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bsr/bc"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS8DST
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xE
block|,
name|DSTABS8LIST
block|,
literal|0x5
block|,
literal|0xC
block|,
name|B30
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSRBC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bsr/bc"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS16DST
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x1
block|,
literal|0x0
block|,
name|DSTABS16LIST
block|,
literal|0x5
block|,
literal|0xC
block|,
name|B30
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSRBC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bsr/bc"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS32DST
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x3
block|,
literal|0x0
block|,
name|DSTABS32LIST
block|,
literal|0x5
block|,
literal|0xC
block|,
name|B30
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSRBS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bsr/bs"
block|,
block|{
block|{
name|IMM3
block|,
name|RDIND
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xC
block|,
name|B30
operator||
name|RDIND
block|,
literal|0x0
block|,
literal|0x5
block|,
literal|0xC
block|,
name|B31
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSRBS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bsr/bs"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS8DST
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xE
block|,
name|DSTABS8LIST
block|,
literal|0x5
block|,
literal|0xC
block|,
name|B31
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSRBS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bsr/bs"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS16DST
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x1
block|,
literal|0x0
block|,
name|DSTABS16LIST
block|,
literal|0x5
block|,
literal|0xC
block|,
name|B31
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSRBS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bsr/bs"
block|,
block|{
block|{
name|IMM3
block|,
name|ABS32DST
block|,
name|OP3PCREL16
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x3
block|,
literal|0x0
block|,
name|DSTABS32LIST
block|,
literal|0x5
block|,
literal|0xC
block|,
name|B31
operator||
name|IMM3
block|,
literal|0x0
block|,
name|OP3PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BRA
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bt"
argument_list|,
literal|0x0
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BRN
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"brn"
argument_list|,
literal|0x1
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BRN
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bf"
argument_list|,
literal|0x1
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BHI
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bhi"
argument_list|,
literal|0x2
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BLS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bls"
argument_list|,
literal|0x3
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BCC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bcc"
argument_list|,
literal|0x4
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BCC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bhs"
argument_list|,
literal|0x4
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BCS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bcs"
argument_list|,
literal|0x5
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BCS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"blo"
argument_list|,
literal|0x5
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BNE
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bne"
argument_list|,
literal|0x6
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BEQ
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"beq"
argument_list|,
literal|0x7
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BVC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bvc"
argument_list|,
literal|0x8
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BVS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bvs"
argument_list|,
literal|0x9
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BPL
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bpl"
argument_list|,
literal|0xA
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BMI
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bmi"
argument_list|,
literal|0xB
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BGE
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bge"
argument_list|,
literal|0xC
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BLT
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"blt"
argument_list|,
literal|0xD
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BGT
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"bgt"
argument_list|,
literal|0xE
argument_list|)
block|,
name|BRANCH
argument_list|(
name|O
argument_list|(
name|O_BLE
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"ble"
argument_list|,
literal|0xF
argument_list|)
block|,
name|EBITOP
argument_list|(
name|O
argument_list|(
name|O_BCLR
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bclr"
argument_list|,
literal|0x6
argument_list|,
literal|0x2
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|,
literal|0x8
argument_list|,
literal|0
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BAND
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"band"
argument_list|,
literal|0x7
argument_list|,
literal|0x6
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|,
literal|0x0
argument_list|,
literal|0
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BIAND
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B31
argument_list|,
literal|"biand"
argument_list|,
literal|0x7
argument_list|,
literal|0x6
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|,
literal|0x0
argument_list|,
literal|0
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BILD
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B31
argument_list|,
literal|"bild"
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|,
literal|0x0
argument_list|,
literal|0
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BIOR
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B31
argument_list|,
literal|"bior"
argument_list|,
literal|0x7
argument_list|,
literal|0x4
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|,
literal|0x0
argument_list|,
literal|0
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BIST
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B31
argument_list|,
literal|"bist"
argument_list|,
literal|0x6
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|,
literal|0x8
argument_list|,
literal|0
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BIXOR
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B31
argument_list|,
literal|"bixor"
argument_list|,
literal|0x7
argument_list|,
literal|0x5
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|,
literal|0x0
argument_list|,
literal|0
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BLD
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bld"
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|,
literal|0x0
argument_list|,
literal|0
argument_list|)
block|,
name|EBITOP
argument_list|(
name|O
argument_list|(
name|O_BNOT
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bnot"
argument_list|,
literal|0x6
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|,
literal|0x8
argument_list|,
literal|0
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BOR
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bor"
argument_list|,
literal|0x7
argument_list|,
literal|0x4
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|,
literal|0x0
argument_list|,
literal|0
argument_list|)
block|,
name|EBITOP
argument_list|(
name|O
argument_list|(
name|O_BSET
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bset"
argument_list|,
literal|0x6
argument_list|,
literal|0x0
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|,
literal|0x8
argument_list|,
literal|0
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BST
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bst"
argument_list|,
literal|0x6
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|,
literal|0x8
argument_list|,
literal|0
argument_list|)
block|,
name|EBITOP
argument_list|(
name|O
argument_list|(
name|O_BTST
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"btst"
argument_list|,
literal|0x6
argument_list|,
literal|0x3
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|,
literal|0x0
argument_list|,
literal|0
argument_list|)
block|,
name|BITOP
argument_list|(
name|O
argument_list|(
name|O_BXOR
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bxor"
argument_list|,
literal|0x7
argument_list|,
literal|0x5
argument_list|,
literal|0x7
argument_list|,
literal|0xC
argument_list|,
literal|0x7
argument_list|,
literal|0xE
argument_list|,
literal|0x0
argument_list|,
literal|0
argument_list|)
block|,
name|EBITOP_B
argument_list|(
name|O
argument_list|(
name|O_BCLREQ
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bclr/eq"
argument_list|,
literal|0x6
argument_list|,
literal|0x2
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|,
literal|0x8
argument_list|,
literal|0x7
argument_list|)
block|,
name|EBITOP_B
argument_list|(
name|O
argument_list|(
name|O_BCLRNE
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bclr/ne"
argument_list|,
literal|0x6
argument_list|,
literal|0x2
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|,
literal|0x8
argument_list|,
literal|0x6
argument_list|)
block|,
name|EBITOP_B
argument_list|(
name|O
argument_list|(
name|O_BSETEQ
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bset/eq"
argument_list|,
literal|0x6
argument_list|,
literal|0x0
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|,
literal|0x8
argument_list|,
literal|0x7
argument_list|)
block|,
name|EBITOP_B
argument_list|(
name|O
argument_list|(
name|O_BSETNE
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bset/ne"
argument_list|,
literal|0x6
argument_list|,
literal|0x0
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|,
literal|0x8
argument_list|,
literal|0x6
argument_list|)
block|,
name|BITOP_B
argument_list|(
name|O
argument_list|(
name|O_BISTZ
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B31
argument_list|,
literal|"bistz"
argument_list|,
literal|0x6
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|,
literal|0x8
argument_list|,
literal|0x7
argument_list|)
block|,
name|BITOP_B
argument_list|(
name|O
argument_list|(
name|O_BSTZ
argument_list|,
name|SB
argument_list|)
argument_list|,
name|IMM3
operator||
name|B30
argument_list|,
literal|"bstz"
argument_list|,
literal|0x6
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|,
literal|0xD
argument_list|,
literal|0x7
argument_list|,
literal|0xF
argument_list|,
literal|0x8
argument_list|,
literal|0x7
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_BFLD
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bfld"
block|,
block|{
block|{
name|IMM8
block|,
name|RDIND
block|,
name|R3_8
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xC
block|,
name|B30
operator||
name|RDIND
block|,
literal|0x0
block|,
literal|0xF
block|,
name|R3_8
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BFLD
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bfld"
block|,
block|{
block|{
name|IMM8
block|,
name|ABS8DST
block|,
name|R3_8
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xE
block|,
name|DSTABS8LIST
block|,
literal|0xF
block|,
name|R3_8
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BFLD
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bfld"
block|,
block|{
block|{
name|IMM8
block|,
name|ABS16DST
block|,
name|R3_8
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x1
block|,
literal|0x0
block|,
name|DSTABS16LIST
block|,
literal|0xF
block|,
name|R3_8
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BFLD
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bfld"
block|,
block|{
block|{
name|IMM8
block|,
name|ABS32DST
block|,
name|R3_8
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x3
block|,
literal|0x0
block|,
name|DSTABS32LIST
block|,
literal|0xF
block|,
name|R3_8
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
comment|/* Because the assembler treats SRC, DST and OP3 as ordinals,       I must designate the second argument, an immediate value, as DST.      May God have mercy on my soul.  */
block|{
name|O
argument_list|(
name|O_BFST
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bfst"
block|,
block|{
block|{
name|RS8
block|,
name|DST
operator||
name|IMM8
block|,
name|R3_IND
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xD
block|,
name|B30
operator||
name|R3_IND
block|,
literal|0x0
block|,
literal|0xF
block|,
name|RS8
block|,
name|DST
operator||
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BFST
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bfst"
block|,
block|{
block|{
name|RS8
block|,
name|DST
operator||
name|IMM8
block|,
name|ABS8OP3
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xF
block|,
name|OP3ABS8LIST
block|,
literal|0xF
block|,
name|RS8
block|,
name|DST
operator||
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BFST
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bfst"
block|,
block|{
block|{
name|RS8
block|,
name|DST
operator||
name|IMM8
block|,
name|ABS16OP3
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x1
block|,
literal|0x8
block|,
name|OP3ABS16LIST
block|,
literal|0xF
block|,
name|RS8
block|,
name|DST
operator||
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BFST
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bfst"
block|,
block|{
block|{
name|RS8
block|,
name|DST
operator||
name|IMM8
block|,
name|ABS32OP3
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x3
block|,
literal|0x8
block|,
name|OP3ABS32LIST
block|,
literal|0xF
block|,
name|RS8
block|,
name|DST
operator||
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSR
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|6
block|,
literal|"bsr"
block|,
block|{
block|{
name|PCREL8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x5
block|,
name|PCREL8
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSR
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|6
block|,
literal|"bsr"
block|,
block|{
block|{
name|PCREL16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0xC
block|,
literal|0x0
block|,
literal|0x0
block|,
name|PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSR
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bsr"
block|,
block|{
block|{
name|LOWREG
operator||
name|L_8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0xd
block|,
name|B30
operator||
name|LOWREG
operator||
name|L_8
block|,
literal|0x5
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSR
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bsr"
block|,
block|{
block|{
name|LOWREG
operator||
name|L_16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0xd
block|,
name|B30
operator||
name|LOWREG
operator||
name|L_16
block|,
literal|0x6
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_BSR
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"bsr"
block|,
block|{
block|{
name|OR32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0xd
block|,
name|B30
operator||
name|OR32
block|,
literal|0x7
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"cmp.b"
block|,
block|{
block|{
name|IMM8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0xa
block|,
name|RD8
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_B
argument_list|(
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"cmp.b"
argument_list|,
literal|0xa
argument_list|,
literal|0x1
argument_list|,
literal|0xc
argument_list|,
literal|0x2
argument_list|,
name|B00
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"cmp.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x1
block|,
literal|0xd
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"cmp.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x1
block|,
literal|0xf
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"cmp.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xd
block|,
name|B31
operator||
name|RDIND
block|,
name|IGNORE
block|,
literal|0x1
block|,
literal|0xf
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"cmp.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|ABS16DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xb
block|,
literal|0x1
block|,
name|B31
operator||
name|IGNORE
block|,
name|DSTABS16LIST
block|,
literal|0x1
block|,
literal|0xf
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"cmp.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|ABS32DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xb
block|,
literal|0x3
block|,
name|B31
operator||
name|IGNORE
block|,
name|DSTABS32LIST
block|,
literal|0x1
block|,
literal|0xf
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_W
argument_list|(
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"cmp.w"
argument_list|,
literal|0x1
argument_list|,
literal|0xd
argument_list|,
literal|0x2
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"cmp.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x1
block|,
literal|0xf
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"cmp.l"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x1
block|,
literal|0xf
block|,
name|B31
operator||
name|IMM3NZ
block|,
name|B31
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_L
argument_list|(
name|O
argument_list|(
name|O_CMP
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"cmp.l"
argument_list|,
literal|0x2
argument_list|)
block|,
name|UNOP
argument_list|(
name|O
argument_list|(
name|O_DAA
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"daa"
argument_list|,
literal|0x0
argument_list|,
literal|0xF
argument_list|)
block|,
name|UNOP
argument_list|(
name|O
argument_list|(
name|O_DAS
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"das"
argument_list|,
literal|0x1
argument_list|,
literal|0xF
argument_list|)
block|,
name|UNOP
argument_list|(
name|O
argument_list|(
name|O_DEC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"dec.b"
argument_list|,
literal|0x1
argument_list|,
literal|0xA
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_DEC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"dec.w"
block|,
block|{
block|{
name|DBIT
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x1
block|,
literal|0xB
block|,
literal|0x5
operator||
name|DBIT
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DEC
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"dec.l"
block|,
block|{
block|{
name|DBIT
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x1
block|,
literal|0xB
block|,
literal|0x7
operator||
name|DBIT
block|,
name|RD32
operator||
name|B30
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVS
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"divs.w"
block|,
block|{
block|{
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xd
block|,
literal|0x6
block|,
literal|0x5
block|,
literal|0x1
block|,
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVS
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"divs.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xd
block|,
literal|0x2
block|,
literal|0x5
block|,
literal|0x1
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVS
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"divs.l"
block|,
block|{
block|{
name|IMM4
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xd
block|,
literal|0x6
block|,
literal|0x5
block|,
literal|0x3
block|,
name|IMM4
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVS
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"divs.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xd
block|,
literal|0x2
block|,
literal|0x5
block|,
literal|0x3
block|,
name|B30
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVU
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"divu.w"
block|,
block|{
block|{
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xd
block|,
literal|0xe
block|,
literal|0x5
block|,
literal|0x1
block|,
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVU
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"divu.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xd
block|,
literal|0xa
block|,
literal|0x5
block|,
literal|0x1
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVU
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"divu.l"
block|,
block|{
block|{
name|IMM4
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xd
block|,
literal|0xe
block|,
literal|0x5
block|,
literal|0x3
block|,
name|IMM4
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVU
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"divu.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xd
block|,
literal|0xa
block|,
literal|0x5
block|,
literal|0x3
block|,
name|B30
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVXS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"divxs.b"
block|,
block|{
block|{
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xD
block|,
literal|0x4
block|,
literal|0x5
block|,
literal|0x1
block|,
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVXS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8H
block|,
literal|13
block|,
literal|"divxs.b"
block|,
block|{
block|{
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xD
block|,
literal|0x0
block|,
literal|0x5
block|,
literal|0x1
block|,
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVXS
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"divxs.w"
block|,
block|{
block|{
name|IMM4
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xD
block|,
literal|0x4
block|,
literal|0x5
block|,
literal|0x3
block|,
name|IMM4
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVXS
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|21
block|,
literal|"divxs.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xD
block|,
literal|0x0
block|,
literal|0x5
block|,
literal|0x3
block|,
name|RS16
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVXU
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"divxu.b"
block|,
block|{
block|{
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xD
block|,
literal|0xC
block|,
literal|0x5
block|,
literal|0x1
block|,
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVXU
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|13
block|,
literal|"divxu.b"
block|,
block|{
block|{
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x1
block|,
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVXU
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"divxu.w"
block|,
block|{
block|{
name|IMM4
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xD
block|,
literal|0xC
block|,
literal|0x5
block|,
literal|0x3
block|,
name|IMM4
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_DIVXU
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|21
block|,
literal|"divxu.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x3
block|,
name|RS16
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_EEPMOV
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|4
block|,
literal|"eepmov.b"
block|,
block|{
block|{
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xB
block|,
literal|0x5
block|,
literal|0xC
block|,
literal|0x5
block|,
literal|0x9
block|,
literal|0x8
block|,
literal|0xF
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_EEPMOV
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|4
block|,
literal|"eepmov.w"
block|,
block|{
block|{
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xB
block|,
literal|0xD
block|,
literal|0x4
block|,
literal|0x5
block|,
literal|0x9
block|,
literal|0x8
block|,
literal|0xF
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_STD_W
argument_list|(
name|O
argument_list|(
name|O_EXTS
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"exts.w"
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0xd
argument_list|)
block|,
name|EXPAND_UNOP_STD_L
argument_list|(
name|O
argument_list|(
name|O_EXTS
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"exts.l"
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0xf
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_EXTS
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"exts.l"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0xe
argument_list|,
literal|0
argument_list|)
block|,
name|EXPAND_UNOP_STD_W
argument_list|(
name|O
argument_list|(
name|O_EXTU
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"extu.w"
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0x5
argument_list|)
block|,
name|EXPAND_UNOP_STD_L
argument_list|(
name|O
argument_list|(
name|O_EXTU
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"extu.l"
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0x7
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_EXTU
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"extu.l"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0x6
argument_list|,
literal|0
argument_list|)
block|,
name|UNOP
argument_list|(
name|O
argument_list|(
name|O_INC
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"inc"
argument_list|,
literal|0x0
argument_list|,
literal|0xA
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_INC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"inc.w"
block|,
block|{
block|{
name|DBIT
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0xB
block|,
literal|0x5
operator||
name|DBIT
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_INC
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"inc.l"
block|,
block|{
block|{
name|DBIT
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0xB
block|,
literal|0x7
operator||
name|DBIT
block|,
name|RD32
operator||
name|B30
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_JMP
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8
block|,
literal|4
block|,
literal|"jmp"
block|,
block|{
block|{
name|RSIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x9
block|,
name|B30
operator||
name|RSIND
block|,
literal|0x0
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_JMP
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8
block|,
literal|6
block|,
literal|"jmp"
block|,
block|{
block|{
name|ABSJMP
operator||
name|L_24
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0xA
block|,
name|SRC
operator||
name|ABSJMP
operator||
name|L_24
block|,
name|DATA5
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_JMP
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"jmp"
block|,
block|{
block|{
name|ABSJMP
operator||
name|L_32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x9
block|,
literal|0x0
block|,
literal|0x8
block|,
name|ABSJMP
operator||
name|L_32
block|,
name|DATA7
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_JMP
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8
block|,
literal|8
block|,
literal|"jmp"
block|,
block|{
block|{
name|MEMIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0xB
block|,
name|SRC
operator||
name|MEMIND
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_JMP
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"jmp"
block|,
block|{
block|{
name|VECIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x9
block|,
name|B31
operator||
name|SRC
operator||
name|VECIND
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_JSR
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8
block|,
literal|6
block|,
literal|"jsr"
block|,
block|{
block|{
name|RSIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0xD
block|,
name|B30
operator||
name|RSIND
block|,
literal|0x0
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_JSR
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8
block|,
literal|8
block|,
literal|"jsr"
block|,
block|{
block|{
name|ABSJMP
operator||
name|L_24
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0xE
block|,
name|SRC
operator||
name|ABSJMP
operator||
name|L_24
block|,
name|DATA5
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_JSR
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"jsr"
block|,
block|{
block|{
name|ABSJMP
operator||
name|L_32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0xD
block|,
literal|0x0
block|,
literal|0x8
block|,
name|ABSJMP
operator||
name|L_32
block|,
name|DATA7
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_JSR
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8
block|,
literal|8
block|,
literal|"jsr"
block|,
block|{
block|{
name|MEMIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0xF
block|,
name|SRC
operator||
name|MEMIND
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_JSR
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8
block|,
literal|8
block|,
literal|"jsr"
block|,
block|{
block|{
name|VECIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0xD
block|,
name|SRC
operator||
name|VECIND
block|,
name|DATA
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|IMM8
block|,
name|CCR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x7
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|IMM8
block|,
name|EXR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0x4
block|,
name|EXR
operator||
name|DST
block|,
literal|0x0
block|,
literal|0x7
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|RS8
block|,
name|CCR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x3
block|,
name|B30
operator||
name|CCR
operator||
name|DST
block|,
name|RS8
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|RS8
block|,
name|EXR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x3
block|,
name|B30
operator||
name|EXR
operator||
name|DST
block|,
name|RS8
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|RSIND
block|,
name|CCR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RSIND
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|RSIND
block|,
name|EXR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RSIND
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|RSPOSTINC
block|,
name|CCR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xD
block|,
name|B30
operator||
name|RSPOSTINC
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|RSPOSTINC
block|,
name|EXR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xD
block|,
name|B30
operator||
name|RSPOSTINC
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|DISP16SRC
block|,
name|CCR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xF
block|,
name|B30
operator||
name|DISPREG
block|,
name|IGNORE
block|,
name|SRC
operator||
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|DISP16SRC
block|,
name|EXR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xF
block|,
name|B30
operator||
name|DISPREG
block|,
name|IGNORE
block|,
name|SRC
operator||
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|DISP32SRC
block|,
name|CCR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXLDC
block|,
literal|0x7
block|,
literal|0x8
block|,
name|B30
operator||
name|DISPREG
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x2
block|,
name|IGNORE
block|,
name|SRC
operator||
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|DISP32SRC
block|,
name|EXR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXLDC
block|,
literal|0x7
block|,
literal|0x8
block|,
name|B30
operator||
name|DISPREG
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x2
block|,
name|IGNORE
block|,
name|SRC
operator||
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|ABS16SRC
block|,
name|CCR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x0
block|,
name|IGNORE
block|,
name|SRC
operator||
name|ABS16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|ABS16SRC
block|,
name|EXR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x0
block|,
name|IGNORE
block|,
name|SRC
operator||
name|ABS16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|ABS32SRC
block|,
name|CCR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x2
block|,
name|IGNORE
block|,
name|SRC
operator||
name|MEMRELAX
operator||
name|ABS32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"ldc"
block|,
block|{
block|{
name|ABS32SRC
block|,
name|EXR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXLDC
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x2
block|,
name|IGNORE
block|,
name|SRC
operator||
name|MEMRELAX
operator||
name|ABS32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDC
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"ldc"
block|,
block|{
block|{
name|RS32
block|,
name|B30
operator||
name|VBR_SBR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x3
block|,
name|B30
operator||
name|VBR_SBR
operator||
name|DST
block|,
name|RS32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"mov.b"
block|,
block|{
block|{
name|IMM8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0xF
block|,
name|RD8
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.b"
block|,
block|{
block|{
name|IMM4_NS
block|,
name|ABS16DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xa
block|,
literal|0xd
block|,
name|IMM4
block|,
name|DSTABS16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.b"
block|,
block|{
block|{
name|IMM4_NS
block|,
name|ABS32DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xa
block|,
literal|0xf
block|,
name|IMM4
block|,
name|DSTABS32LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|MOVFROM_IMM8
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_017D
argument_list|,
literal|"mov.b"
argument_list|,
name|IMM8
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"mov.b"
block|,
block|{
block|{
name|RS8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0xC
block|,
name|RS8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
name|MOVFROM_REG_BW
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"mov.b"
argument_list|,
name|RS8
argument_list|,
name|PREFIX_017
argument_list|,
literal|8
argument_list|,
literal|10
argument_list|,
literal|12
argument_list|,
literal|14
argument_list|,
name|MEMRELAX
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|4
block|,
literal|"mov.b"
block|,
block|{
block|{
name|RS8
block|,
name|ABS8DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x3
block|,
name|RS8
block|,
name|DSTABS8LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|MOVTO_REG_BW
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"mov.b"
argument_list|,
name|RD8
argument_list|,
name|PREFIX_017
argument_list|,
literal|8
argument_list|,
literal|10
argument_list|,
literal|12
argument_list|,
literal|14
argument_list|,
name|MEMRELAX
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|4
block|,
literal|"mov.b"
block|,
block|{
block|{
name|ABS8SRC
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x2
block|,
name|RD8
block|,
name|ABS8LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|RSIND
argument_list|,
name|FROM_IND
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|RSPOSTINC
argument_list|,
name|FROM_POSTINC
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|RSPOSTDEC
argument_list|,
name|FROM_POSTDEC
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|RSPREINC
argument_list|,
name|FROM_PREINC
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|RSPREDEC
argument_list|,
name|FROM_PREDEC
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|DISP2SRC
argument_list|,
name|FROM_DISP2
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|DISP16SRC
argument_list|,
name|FROM_DISP16
argument_list|,
name|DISP16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|DISP32SRC
argument_list|,
name|FROM_DISP32
argument_list|,
name|DISP32LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|INDEXB16
argument_list|,
name|FROM_DISP16B
argument_list|,
name|DISP16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|INDEXW16
argument_list|,
name|FROM_DISP16W
argument_list|,
name|DISP16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|INDEXL16
argument_list|,
name|FROM_DISP16L
argument_list|,
name|DISP16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|INDEXB32
argument_list|,
name|FROM_DISP32B
argument_list|,
name|DISP32LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|INDEXW32
argument_list|,
name|FROM_DISP32W
argument_list|,
name|DISP32LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|INDEXL32
argument_list|,
name|FROM_DISP32L
argument_list|,
name|DISP32LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|ABS16SRC
argument_list|,
name|FROM_ABS16
argument_list|,
name|ABS16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
argument_list|,
name|PREFIX_0178
argument_list|,
literal|"mov.b"
argument_list|,
name|ABS32SRC
argument_list|,
name|FROM_ABS32
argument_list|,
name|ABS32LIST
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0xf
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8
block|,
literal|4
block|,
literal|"mov.w"
block|,
block|{
block|{
name|IMM16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x9
block|,
literal|0x0
block|,
name|RD16
block|,
name|IMM16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.w"
block|,
block|{
block|{
name|IMM4_NS
block|,
name|ABS16DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xb
block|,
literal|0xd
block|,
name|IMM4
block|,
name|DSTABS16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.w"
block|,
block|{
block|{
name|IMM4_NS
block|,
name|ABS32DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xb
block|,
literal|0xf
block|,
name|IMM4
block|,
name|DSTABS32LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|MOVFROM_IMM8
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_015D
argument_list|,
literal|"mov.w"
argument_list|,
name|IMM8U_NS
argument_list|)
block|,
name|MOVFROM_IMM
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_7974
argument_list|,
literal|"mov.w"
argument_list|,
name|IMM16
argument_list|,
name|IMM16LIST
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"mov.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0xD
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
name|MOVFROM_REG_BW
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"mov.w"
argument_list|,
name|RS16
argument_list|,
name|PREFIX_015
argument_list|,
literal|9
argument_list|,
literal|11
argument_list|,
literal|13
argument_list|,
literal|15
argument_list|,
literal|0
argument_list|)
block|,
name|MOVTO_REG_BW
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"mov.w"
argument_list|,
name|RD16
argument_list|,
name|PREFIX_015
argument_list|,
literal|9
argument_list|,
literal|11
argument_list|,
literal|13
argument_list|,
literal|15
argument_list|,
literal|0
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|RSIND
argument_list|,
name|FROM_IND
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|RSPOSTINC
argument_list|,
name|FROM_POSTINC
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|RSPOSTDEC
argument_list|,
name|FROM_POSTDEC
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|RSPREINC
argument_list|,
name|FROM_PREINC
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|RSPREDEC
argument_list|,
name|FROM_PREDEC
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|DISP2SRC
argument_list|,
name|FROM_DISP2
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|DISP16SRC
argument_list|,
name|FROM_DISP16
argument_list|,
name|DISP16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|DISP32SRC
argument_list|,
name|FROM_DISP32
argument_list|,
name|DISP32LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|INDEXB16
argument_list|,
name|FROM_DISP16B
argument_list|,
name|DISP16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|INDEXW16
argument_list|,
name|FROM_DISP16W
argument_list|,
name|DISP16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|INDEXL16
argument_list|,
name|FROM_DISP16L
argument_list|,
name|DISP16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|INDEXB32
argument_list|,
name|FROM_DISP32B
argument_list|,
name|DISP32LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|INDEXW32
argument_list|,
name|FROM_DISP32W
argument_list|,
name|DISP32LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|INDEXL32
argument_list|,
name|FROM_DISP32L
argument_list|,
name|DISP32LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|ABS16SRC
argument_list|,
name|FROM_ABS16
argument_list|,
name|ABS16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
argument_list|,
name|PREFIX_0158
argument_list|,
literal|"mov.w"
argument_list|,
name|ABS32SRC
argument_list|,
name|FROM_ABS32
argument_list|,
name|ABS32LIST
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0xf
block|,
name|B31
operator||
name|IMM3NZ
block|,
name|B31
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
name|MOVFROM_IMM8
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_010D
argument_list|,
literal|"mov.l"
argument_list|,
name|IMM8U_NS
argument_list|)
block|,
name|MOVFROM_IMM
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_7A7C
argument_list|,
literal|"mov.l"
argument_list|,
name|IMM16U_NS
argument_list|,
name|IMM16ULIST
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|IMM16U_NS
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xa
block|,
literal|0x0
block|,
name|B31
operator||
name|RD32
block|,
name|IMM16ULIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|4
block|,
literal|"mov.l"
block|,
block|{
block|{
name|IMM32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xa
block|,
literal|0x0
block|,
name|B30
operator||
name|RD32
block|,
name|IMM32LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|MOVFROM_IMM
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_7A74
argument_list|,
literal|"mov.l"
argument_list|,
name|IMM32
argument_list|,
name|IMM32LIST
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0xf
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B31
operator||
name|RDIND
block|,
name|B30
operator||
name|RS32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|RDPOSTINC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0103
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B31
operator||
name|RDPOSTINC
block|,
name|RS32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0101
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B31
operator||
name|RDPOSTDEC
block|,
name|RS32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|RDPREINC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0102
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B31
operator||
name|RDPREINC
block|,
name|RS32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|RDPREDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B31
operator||
name|RDPREDEC
block|,
name|RS32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|DISP2DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_010
block|,
name|B30
operator||
name|B20
operator||
name|DISP2DST
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B31
operator||
name|DSTDISPREG
block|,
name|RS32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|DISP16DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x6
block|,
literal|0xf
block|,
name|B31
operator||
name|DSTDISPREG
block|,
name|RS32
block|,
name|DSTDISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|DISP32DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|B31
operator||
name|DSTDISPREG
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0xa
block|,
name|RS32
block|,
name|DSTDISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|DISP32DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x7
block|,
literal|0x8
block|,
name|B31
operator||
name|DSTDISPREG
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0xa
block|,
name|RS32
block|,
name|DSTDISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|INDEXB16D
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0101
block|,
literal|0x6
block|,
literal|0xf
block|,
name|B31
operator||
name|DSTDISPREG
block|,
name|RS32
block|,
name|DSTDISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|INDEXW16D
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0102
block|,
literal|0x6
block|,
literal|0xf
block|,
name|B31
operator||
name|DSTDISPREG
block|,
name|RS32
block|,
name|DSTDISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|INDEXL16D
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0103
block|,
literal|0x6
block|,
literal|0xf
block|,
name|B31
operator||
name|DSTDISPREG
block|,
name|RS32
block|,
name|DSTDISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|INDEXB32D
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|B31
operator||
name|DSTDISPREG
block|,
literal|0x1
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0xa
block|,
name|RS32
block|,
name|DSTDISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|INDEXW32D
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|B31
operator||
name|DSTDISPREG
block|,
literal|0x2
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0xa
block|,
name|RS32
block|,
name|DSTDISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|INDEXL32D
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|B31
operator||
name|DSTDISPREG
block|,
literal|0x3
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0xa
block|,
name|RS32
block|,
name|DSTDISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|ABS16DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0x8
block|,
name|RS32
block|,
name|DSTABS16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RS32
block|,
name|ABS32DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0xa
block|,
name|RS32
block|,
name|MEMRELAX
operator||
name|DSTABS32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|4
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RSIND
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RSIND
block|,
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RSPOSTINC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPOSTINC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0102
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RSPREINC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0101
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPREINC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|RSPREDEC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0103
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPREDEC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|DISP2SRC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_010
block|,
name|B30
operator||
name|B20
operator||
name|DISP2SRC
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|DISPREG
block|,
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|DISP16SRC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x6
block|,
literal|0xf
block|,
name|B30
operator||
name|DISPREG
block|,
name|RD32
block|,
name|SRC
operator||
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|DISP32SRC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|B31
operator||
name|DISPREG
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0x2
block|,
name|RD32
block|,
name|SRC
operator||
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|DISP32SRC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x7
block|,
literal|0x8
block|,
name|B30
operator||
name|DISPREG
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0x2
block|,
name|RD32
block|,
name|SRC
operator||
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|INDEXB16
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0101
block|,
literal|0x6
block|,
literal|0xf
block|,
name|B30
operator||
name|DISPREG
block|,
name|RD32
block|,
name|SRC
operator||
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|INDEXW16
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0102
block|,
literal|0x6
block|,
literal|0xf
block|,
name|B30
operator||
name|DISPREG
block|,
name|RD32
block|,
name|SRC
operator||
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|INDEXL16
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0103
block|,
literal|0x6
block|,
literal|0xf
block|,
name|B30
operator||
name|DISPREG
block|,
name|RD32
block|,
name|SRC
operator||
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|INDEXB32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|B31
operator||
name|DISPREG
block|,
literal|0x1
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0x2
block|,
name|RD32
block|,
name|SRC
operator||
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|INDEXW32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|B31
operator||
name|DISPREG
block|,
literal|0x2
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0x2
block|,
name|RD32
block|,
name|SRC
operator||
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mov.l"
block|,
block|{
block|{
name|INDEXL32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|B31
operator||
name|DISPREG
block|,
literal|0x3
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0x2
block|,
name|RD32
block|,
name|SRC
operator||
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|ABS16SRC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0x0
block|,
name|RD32
block|,
name|SRC
operator||
name|ABS16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"mov.l"
block|,
block|{
block|{
name|ABS32SRC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x6
block|,
literal|0xb
block|,
literal|0x2
block|,
name|RD32
block|,
name|SRC
operator||
name|MEMRELAX
operator||
name|ABS32LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|RSIND
argument_list|,
name|FROM_IND
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|RSPOSTINC
argument_list|,
name|FROM_POSTINC
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|RSPOSTDEC
argument_list|,
name|FROM_POSTDEC
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|RSPREINC
argument_list|,
name|FROM_PREINC
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|RSPREDEC
argument_list|,
name|FROM_PREDEC
argument_list|)
block|,
name|MOVFROM_STD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|DISP2SRC
argument_list|,
name|FROM_DISP2
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|DISP16SRC
argument_list|,
name|FROM_DISP16
argument_list|,
name|DISP16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|DISP32SRC
argument_list|,
name|FROM_DISP32
argument_list|,
name|DISP32LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|INDEXB16
argument_list|,
name|FROM_DISP16B
argument_list|,
name|DISP16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|INDEXW16
argument_list|,
name|FROM_DISP16W
argument_list|,
name|DISP16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|INDEXL16
argument_list|,
name|FROM_DISP16L
argument_list|,
name|DISP16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|INDEXB32
argument_list|,
name|FROM_DISP32B
argument_list|,
name|DISP32LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|INDEXW32
argument_list|,
name|FROM_DISP32W
argument_list|,
name|DISP32LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|INDEXL32
argument_list|,
name|FROM_DISP32L
argument_list|,
name|DISP32LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|ABS16SRC
argument_list|,
name|FROM_ABS16
argument_list|,
name|ABS16LIST
argument_list|)
block|,
name|MOVFROM_AD
argument_list|(
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
argument_list|,
name|PREFIX_0108
argument_list|,
literal|"mov.l"
argument_list|,
name|ABS32SRC
argument_list|,
name|FROM_ABS32
argument_list|,
name|ABS32LIST
argument_list|)
block|,
define|#
directive|define
name|DO_MOVA1
parameter_list|(
name|TYPE
parameter_list|,
name|OP0
parameter_list|,
name|OP1
parameter_list|)
define|\
value|{O (O_MOVAB, SL), AV_H8SX, 0, "mova/b.l", {{INDEXB16, TYPE, R3_32}}, {{PREFIX_017F, OP0, OP1, 0x8, B30 | R3_32, DISP16LIST, E}}}, \   {O (O_MOVAB, SL), AV_H8SX, 0, "mova/b.l", {{INDEXW16, TYPE, R3_32}}, {{PREFIX_015F, OP0, OP1, 0x9, B30 | R3_32, DISP16LIST, E}}}, \   {O (O_MOVAW, SL), AV_H8SX, 0, "mova/w.l", {{INDEXB16, TYPE, R3_32}}, {{PREFIX_017F, OP0, OP1, 0xA, B30 | R3_32, DISP16LIST, E}}}, \   {O (O_MOVAW, SL), AV_H8SX, 0, "mova/w.l", {{INDEXW16, TYPE, R3_32}}, {{PREFIX_015F, OP0, OP1, 0xB, B30 | R3_32, DISP16LIST, E}}}, \   {O (O_MOVAL, SL), AV_H8SX, 0, "mova/l.l", {{INDEXB16, TYPE, R3_32}}, {{PREFIX_017F, OP0, OP1, 0xC, B30 | R3_32, DISP16LIST, E}}}, \   {O (O_MOVAL, SL), AV_H8SX, 0, "mova/l.l", {{INDEXW16, TYPE, R3_32}}, {{PREFIX_015F, OP0, OP1, 0xD, B30 | R3_32, DISP16LIST, E}}}, \ \   {O (O_MOVAB, SL), AV_H8SX, 0, "mova/b.l", {{INDEXB32, TYPE, R3_32}}, {{PREFIX_017F, OP0, OP1, 0x8, B31 | R3_32, DISP32LIST, E}}}, \   {O (O_MOVAB, SL), AV_H8SX, 0, "mova/b.l", {{INDEXW32, TYPE, R3_32}}, {{PREFIX_015F, OP0, OP1, 0x9, B31 | R3_32, DISP32LIST, E}}}, \   {O (O_MOVAW, SL), AV_H8SX, 0, "mova/w.l", {{INDEXB32, TYPE, R3_32}}, {{PREFIX_017F, OP0, OP1, 0xA, B31 | R3_32, DISP32LIST, E}}}, \   {O (O_MOVAW, SL), AV_H8SX, 0, "mova/w.l", {{INDEXW32, TYPE, R3_32}}, {{PREFIX_015F, OP0, OP1, 0xB, B31 | R3_32, DISP32LIST, E}}}, \   {O (O_MOVAL, SL), AV_H8SX, 0, "mova/l.l", {{INDEXB32, TYPE, R3_32}}, {{PREFIX_017F, OP0, OP1, 0xC, B31 | R3_32, DISP32LIST, E}}}, \   {O (O_MOVAL, SL), AV_H8SX, 0, "mova/l.l", {{INDEXW32, TYPE, R3_32}}, {{PREFIX_015F, OP0, OP1, 0xD, B31 | R3_32, DISP32LIST, E}}}
define|#
directive|define
name|DO_MOVA2
parameter_list|(
name|TYPE
parameter_list|,
name|OP0
parameter_list|,
name|OP1
parameter_list|,
name|OP2
parameter_list|)
define|\
value|{O (O_MOVAB, SL), AV_H8SX, 0, "mova/b.l", {{INDEXB16, TYPE, R3_32}}, {{PREFIX_017F, OP0, OP1, 0x8, B30 | R3_32, OP2, DISP16LIST, E}}}, \   {O (O_MOVAB, SL), AV_H8SX, 0, "mova/b.l", {{INDEXW16, TYPE, R3_32}}, {{PREFIX_015F, OP0, OP1, 0x9, B30 | R3_32, OP2, DISP16LIST, E}}}, \   {O (O_MOVAW, SL), AV_H8SX, 0, "mova/w.l", {{INDEXB16, TYPE, R3_32}}, {{PREFIX_017F, OP0, OP1, 0xA, B30 | R3_32, OP2, DISP16LIST, E}}}, \   {O (O_MOVAW, SL), AV_H8SX, 0, "mova/w.l", {{INDEXW16, TYPE, R3_32}}, {{PREFIX_015F, OP0, OP1, 0xB, B30 | R3_32, OP2, DISP16LIST, E}}}, \   {O (O_MOVAL, SL), AV_H8SX, 0, "mova/l.l", {{INDEXB16, TYPE, R3_32}}, {{PREFIX_017F, OP0, OP1, 0xC, B30 | R3_32, OP2, DISP16LIST, E}}}, \   {O (O_MOVAL, SL), AV_H8SX, 0, "mova/l.l", {{INDEXW16, TYPE, R3_32}}, {{PREFIX_015F, OP0, OP1, 0xD, B30 | R3_32, OP2, DISP16LIST, E}}}, \ \   {O (O_MOVAB, SL), AV_H8SX, 0, "mova/b.l", {{INDEXB32, TYPE, R3_32}}, {{PREFIX_017F, OP0, OP1, 0x8, B31 | R3_32, OP2, DISP32LIST, E}}}, \   {O (O_MOVAB, SL), AV_H8SX, 0, "mova/b.l", {{INDEXW32, TYPE, R3_32}}, {{PREFIX_015F, OP0, OP1, 0x9, B31 | R3_32, OP2, DISP32LIST, E}}}, \   {O (O_MOVAW, SL), AV_H8SX, 0, "mova/w.l", {{INDEXB32, TYPE, R3_32}}, {{PREFIX_017F, OP0, OP1, 0xA, B31 | R3_32, OP2, DISP32LIST, E}}}, \   {O (O_MOVAW, SL), AV_H8SX, 0, "mova/w.l", {{INDEXW32, TYPE, R3_32}}, {{PREFIX_015F, OP0, OP1, 0xB, B31 | R3_32, OP2, DISP32LIST, E}}}, \   {O (O_MOVAL, SL), AV_H8SX, 0, "mova/l.l", {{INDEXB32, TYPE, R3_32}}, {{PREFIX_017F, OP0, OP1, 0xC, B31 | R3_32, OP2, DISP32LIST, E}}}, \   {O (O_MOVAL, SL), AV_H8SX, 0, "mova/l.l", {{INDEXW32, TYPE, R3_32}}, {{PREFIX_015F, OP0, OP1, 0xD, B31 | R3_32, OP2, DISP32LIST, E}}}
block|{
name|O
argument_list|(
name|O_MOVAB
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/b.l"
block|,
block|{
block|{
name|INDEXB16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0x8
block|,
name|B31
operator||
name|DISPREG
block|,
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAB
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/b.l"
block|,
block|{
block|{
name|INDEXW16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0x9
block|,
name|B31
operator||
name|DISPREG
block|,
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAW
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/w.l"
block|,
block|{
block|{
name|INDEXB16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0xA
block|,
name|B31
operator||
name|DISPREG
block|,
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAW
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/w.l"
block|,
block|{
block|{
name|INDEXW16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0xB
block|,
name|B31
operator||
name|DISPREG
block|,
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAL
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/l.l"
block|,
block|{
block|{
name|INDEXB16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0xC
block|,
name|B31
operator||
name|DISPREG
block|,
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAL
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/l.l"
block|,
block|{
block|{
name|INDEXW16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0xD
block|,
name|B31
operator||
name|DISPREG
block|,
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAB
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/b.l"
block|,
block|{
block|{
name|INDEXB32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0x8
block|,
name|B30
operator||
name|DISPREG
block|,
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAB
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/b.l"
block|,
block|{
block|{
name|INDEXW32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0x9
block|,
name|B30
operator||
name|DISPREG
block|,
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAW
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/w.l"
block|,
block|{
block|{
name|INDEXB32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0xA
block|,
name|B30
operator||
name|DISPREG
block|,
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAW
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/w.l"
block|,
block|{
block|{
name|INDEXW32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0xB
block|,
name|B30
operator||
name|DISPREG
block|,
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAL
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/l.l"
block|,
block|{
block|{
name|INDEXB32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0xC
block|,
name|B30
operator||
name|DISPREG
block|,
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAL
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/l.l"
block|,
block|{
block|{
name|INDEXW32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0xD
block|,
name|B30
operator||
name|DISPREG
block|,
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAB
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/b.l"
block|,
block|{
block|{
name|INDEXB16
block|,
name|RD8
block|,
name|R3_32
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RD8
block|,
literal|0x8
block|,
literal|0x7
block|,
literal|0xA
block|,
literal|0x8
block|,
name|B31
operator||
name|R3_32
block|,
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAB
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/b.l"
block|,
block|{
block|{
name|INDEXW16
block|,
name|RD16
block|,
name|R3_32
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RD16
block|,
literal|0x9
block|,
literal|0x7
block|,
literal|0xA
block|,
literal|0x9
block|,
name|B31
operator||
name|R3_32
block|,
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAW
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/w.l"
block|,
block|{
block|{
name|INDEXB16
block|,
name|RD8
block|,
name|R3_32
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RD8
block|,
literal|0x8
block|,
literal|0x7
block|,
literal|0xA
block|,
literal|0xA
block|,
name|B31
operator||
name|R3_32
block|,
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAW
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/w.l"
block|,
block|{
block|{
name|INDEXW16
block|,
name|RD16
block|,
name|R3_32
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RD16
block|,
literal|0x9
block|,
literal|0x7
block|,
literal|0xA
block|,
literal|0xB
block|,
name|B31
operator||
name|R3_32
block|,
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAL
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/l.l"
block|,
block|{
block|{
name|INDEXB16
block|,
name|RD8
block|,
name|R3_32
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RD8
block|,
literal|0x8
block|,
literal|0x7
block|,
literal|0xA
block|,
literal|0xC
block|,
name|B31
operator||
name|R3_32
block|,
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAL
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/l.l"
block|,
block|{
block|{
name|INDEXW16
block|,
name|RD16
block|,
name|R3_32
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RD16
block|,
literal|0x9
block|,
literal|0x7
block|,
literal|0xA
block|,
literal|0xD
block|,
name|B31
operator||
name|R3_32
block|,
name|DISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAB
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/b.l"
block|,
block|{
block|{
name|INDEXB32
block|,
name|RD8
block|,
name|R3_32
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RD8
block|,
literal|0x8
block|,
literal|0x7
block|,
literal|0xA
block|,
literal|0x8
block|,
name|B30
operator||
name|R3_32
block|,
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAB
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/b.l"
block|,
block|{
block|{
name|INDEXW32
block|,
name|RD16
block|,
name|R3_32
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RD16
block|,
literal|0x9
block|,
literal|0x7
block|,
literal|0xA
block|,
literal|0x9
block|,
name|B30
operator||
name|R3_32
block|,
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAW
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/w.l"
block|,
block|{
block|{
name|INDEXB32
block|,
name|RD8
block|,
name|R3_32
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RD8
block|,
literal|0x8
block|,
literal|0x7
block|,
literal|0xA
block|,
literal|0xA
block|,
name|B30
operator||
name|R3_32
block|,
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAW
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/w.l"
block|,
block|{
block|{
name|INDEXW32
block|,
name|RD16
block|,
name|R3_32
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RD16
block|,
literal|0x9
block|,
literal|0x7
block|,
literal|0xA
block|,
literal|0xB
block|,
name|B30
operator||
name|R3_32
block|,
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAL
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/l.l"
block|,
block|{
block|{
name|INDEXB32
block|,
name|RD8
block|,
name|R3_32
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RD8
block|,
literal|0x8
block|,
literal|0x7
block|,
literal|0xA
block|,
literal|0xC
block|,
name|B30
operator||
name|R3_32
block|,
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVAL
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mova/l.l"
block|,
block|{
block|{
name|INDEXW32
block|,
name|RD16
block|,
name|R3_32
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RD16
block|,
literal|0x9
block|,
literal|0x7
block|,
literal|0xA
block|,
literal|0xD
block|,
name|B30
operator||
name|R3_32
block|,
name|DISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|DO_MOVA1
argument_list|(
name|RDIND
argument_list|,
literal|0x0
argument_list|,
name|B30
operator||
name|RDIND
argument_list|)
block|,
name|DO_MOVA1
argument_list|(
name|RDPOSTINC
argument_list|,
literal|0x8
argument_list|,
name|B30
operator||
name|RDPOSTINC
argument_list|)
block|,
name|DO_MOVA1
argument_list|(
name|RDPOSTDEC
argument_list|,
literal|0xA
argument_list|,
name|B30
operator||
name|RDPOSTDEC
argument_list|)
block|,
name|DO_MOVA1
argument_list|(
name|RDPREINC
argument_list|,
literal|0x9
argument_list|,
name|B30
operator||
name|RDPREINC
argument_list|)
block|,
name|DO_MOVA1
argument_list|(
name|RDPREDEC
argument_list|,
literal|0xB
argument_list|,
name|B30
operator||
name|RDPREDEC
argument_list|)
block|,
name|DO_MOVA1
argument_list|(
name|DISP2DST
argument_list|,
name|B30
operator||
name|B20
operator||
name|DISP2DST
argument_list|,
name|B30
operator||
name|DSTDISPREG
argument_list|)
block|,
name|DO_MOVA2
argument_list|(
name|DISP16DST
argument_list|,
literal|0xC
argument_list|,
name|B30
operator||
name|DSTDISPREG
argument_list|,
name|DSTDISP16LIST
argument_list|)
block|,
name|DO_MOVA2
argument_list|(
name|DISP32DST
argument_list|,
literal|0xC
argument_list|,
name|B31
operator||
name|DSTDISPREG
argument_list|,
name|DSTDISP32LIST
argument_list|)
block|,
name|DO_MOVA2
argument_list|(
name|INDEXB16D
argument_list|,
literal|0xD
argument_list|,
name|B30
operator||
name|DSTDISPREG
argument_list|,
name|DSTDISP16LIST
argument_list|)
block|,
name|DO_MOVA2
argument_list|(
name|INDEXW16D
argument_list|,
literal|0xE
argument_list|,
name|B30
operator||
name|DSTDISPREG
argument_list|,
name|DSTDISP16LIST
argument_list|)
block|,
name|DO_MOVA2
argument_list|(
name|INDEXL16D
argument_list|,
literal|0xF
argument_list|,
name|B30
operator||
name|DSTDISPREG
argument_list|,
name|DSTDISP16LIST
argument_list|)
block|,
name|DO_MOVA2
argument_list|(
name|INDEXB32D
argument_list|,
literal|0xD
argument_list|,
name|B31
operator||
name|DSTDISPREG
argument_list|,
name|DSTDISP32LIST
argument_list|)
block|,
name|DO_MOVA2
argument_list|(
name|INDEXW32D
argument_list|,
literal|0xE
argument_list|,
name|B31
operator||
name|DSTDISPREG
argument_list|,
name|DSTDISP32LIST
argument_list|)
block|,
name|DO_MOVA2
argument_list|(
name|INDEXL32D
argument_list|,
literal|0xF
argument_list|,
name|B31
operator||
name|DSTDISPREG
argument_list|,
name|DSTDISP32LIST
argument_list|)
block|,
name|DO_MOVA2
argument_list|(
name|ABS16DST
argument_list|,
literal|0x4
argument_list|,
literal|0x0
argument_list|,
name|DSTABS16LIST
argument_list|)
block|,
name|DO_MOVA2
argument_list|(
name|ABS32DST
argument_list|,
literal|0x4
argument_list|,
literal|0x8
argument_list|,
name|DSTABS32LIST
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|10
block|,
literal|"movfpe"
block|,
block|{
block|{
name|ABS16SRC
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0x4
block|,
name|RD8
block|,
name|ABS16SRC
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|10
block|,
literal|"movtpe"
block|,
block|{
block|{
name|RS8
block|,
name|ABS16DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xA
block|,
literal|0xC
block|,
name|RS8
block|,
name|ABS16DST
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVMD
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"movmd.b"
block|,
block|{
block|{
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xb
block|,
literal|0x9
block|,
literal|0x4
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVMD
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"movmd.w"
block|,
block|{
block|{
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xb
block|,
literal|0xa
block|,
literal|0x4
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVMD
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"movmd.l"
block|,
block|{
block|{
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xb
block|,
literal|0xb
block|,
literal|0x4
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOVSD
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"movsd.b"
block|,
block|{
block|{
name|PCREL16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xb
block|,
literal|0x8
block|,
literal|0x4
block|,
name|PCREL16
block|,
name|DATA3
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULS
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"muls.w"
block|,
block|{
block|{
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0x6
block|,
literal|0x5
block|,
literal|0x0
block|,
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULS
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"muls.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0x2
block|,
literal|0x5
block|,
literal|0x0
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULS
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"muls.l"
block|,
block|{
block|{
name|IMM4
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0x6
block|,
literal|0x5
block|,
literal|0x2
block|,
name|IMM4
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULS
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"muls.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0x2
block|,
literal|0x5
block|,
literal|0x2
block|,
name|B30
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULU
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mulu.w"
block|,
block|{
block|{
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0xe
block|,
literal|0x5
block|,
literal|0x0
block|,
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULU
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mulu.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0xa
block|,
literal|0x5
block|,
literal|0x0
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULU
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mulu.l"
block|,
block|{
block|{
name|IMM4
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0xe
block|,
literal|0x5
block|,
literal|0x2
block|,
name|IMM4
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULU
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mulu.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0xa
block|,
literal|0x5
block|,
literal|0x2
block|,
name|B30
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULSU
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"muls/u.l"
block|,
block|{
block|{
name|IMM4
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0x7
block|,
literal|0x5
block|,
literal|0x2
block|,
name|IMM4
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULSU
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"muls/u.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0x3
block|,
literal|0x5
block|,
literal|0x2
block|,
name|B30
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULUU
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mulu/u.l"
block|,
block|{
block|{
name|IMM4
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0xf
block|,
literal|0x5
block|,
literal|0x2
block|,
name|IMM4
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULUU
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mulu/u.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0xb
block|,
literal|0x5
block|,
literal|0x2
block|,
name|B30
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULXS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mulxs.b"
block|,
block|{
block|{
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0x4
block|,
literal|0x5
block|,
literal|0x0
block|,
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULXS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8H
block|,
literal|20
block|,
literal|"mulxs.b"
block|,
block|{
block|{
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0x0
block|,
literal|0x5
block|,
literal|0x0
block|,
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULXS
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mulxs.w"
block|,
block|{
block|{
name|IMM4
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0x4
block|,
literal|0x5
block|,
literal|0x2
block|,
name|IMM4
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULXS
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|20
block|,
literal|"mulxs.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0x0
block|,
literal|0x5
block|,
literal|0x2
block|,
name|RS16
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULXU
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mulxu.b"
block|,
block|{
block|{
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0xc
block|,
literal|0x5
block|,
literal|0x0
block|,
name|IMM4
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULXU
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|14
block|,
literal|"mulxu.b"
block|,
block|{
block|{
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x0
block|,
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULXU
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"mulxu.w"
block|,
block|{
block|{
name|IMM4
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xc
block|,
literal|0xc
block|,
literal|0x5
block|,
literal|0x2
block|,
name|IMM4
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MULXU
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|14
block|,
literal|"mulxu.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x2
block|,
name|RS16
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_STD_B
argument_list|(
name|O
argument_list|(
name|O_NEG
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"neg.b"
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0x8
argument_list|)
block|,
name|EXPAND_UNOP_STD_W
argument_list|(
name|O
argument_list|(
name|O_NEG
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"neg.w"
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0x9
argument_list|)
block|,
name|EXPAND_UNOP_STD_L
argument_list|(
name|O
argument_list|(
name|O_NEG
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"neg.l"
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0xb
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_NOP
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"nop"
block|,
block|{
block|{
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x0
block|,
literal|0x0
block|,
literal|0x0
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_STD_B
argument_list|(
name|O
argument_list|(
name|O_NOT
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"not.b"
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0x0
argument_list|)
block|,
name|EXPAND_UNOP_STD_W
argument_list|(
name|O
argument_list|(
name|O_NOT
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"not.w"
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0x1
argument_list|)
block|,
name|EXPAND_UNOP_STD_L
argument_list|(
name|O
argument_list|(
name|O_NOT
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"not.l"
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
literal|0x3
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_OR
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"or.b"
block|,
block|{
block|{
name|IMM8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0xc
block|,
name|RD8
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_B
argument_list|(
name|O
argument_list|(
name|O_OR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"or.b"
argument_list|,
literal|0xc
argument_list|,
literal|0x1
argument_list|,
literal|0x4
argument_list|,
literal|0x4
argument_list|,
literal|0
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_OR
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"or.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0x4
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_W
argument_list|(
name|O
argument_list|(
name|O_OR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"or.w"
argument_list|,
literal|0x6
argument_list|,
literal|0x4
argument_list|,
literal|0x4
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_OR
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"or.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xF
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0x4
block|,
name|B30
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_L
argument_list|(
name|O
argument_list|(
name|O_OR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"or.l"
argument_list|,
literal|0x4
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_ORC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"orc"
block|,
block|{
block|{
name|IMM8
block|,
name|CCR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x4
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_ORC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"orc"
block|,
block|{
block|{
name|IMM8
block|,
name|EXR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0x4
block|,
name|EXR
operator||
name|DST
block|,
literal|0x0
block|,
literal|0x4
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8
block|,
literal|6
block|,
literal|"pop.w"
block|,
block|{
block|{
name|OR16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xD
block|,
literal|0x7
block|,
name|OR16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"pop.l"
block|,
block|{
block|{
name|OR32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x6
block|,
literal|0xD
block|,
literal|0x7
block|,
name|OR32
operator||
name|B30
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8
block|,
literal|6
block|,
literal|"push.w"
block|,
block|{
block|{
name|OR16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xD
block|,
literal|0xF
block|,
name|OR16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MOV
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"push.l"
block|,
block|{
block|{
name|OR32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0100
block|,
literal|0x6
block|,
literal|0xD
block|,
literal|0xF
block|,
name|OR32
operator||
name|B30
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_STD_B
argument_list|(
name|O
argument_list|(
name|O_ROTL
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"rotl.b"
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0x8
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_B
argument_list|(
name|O
argument_list|(
name|O_ROTL
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"rotl.b"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0xc
argument_list|)
block|,
name|EXPAND_UNOP_STD_W
argument_list|(
name|O
argument_list|(
name|O_ROTL
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"rotl.w"
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0x9
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_W
argument_list|(
name|O
argument_list|(
name|O_ROTL
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"rotl.w"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0xd
argument_list|)
block|,
name|EXPAND_UNOP_STD_L
argument_list|(
name|O
argument_list|(
name|O_ROTL
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"rotl.l"
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0xb
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_ROTL
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"rotl.l"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0xf
argument_list|,
name|B30
argument_list|)
block|,
name|EXPAND_UNOP_STD_B
argument_list|(
name|O
argument_list|(
name|O_ROTR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"rotr.b"
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0x8
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_B
argument_list|(
name|O
argument_list|(
name|O_ROTR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"rotr.b"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0xc
argument_list|)
block|,
name|EXPAND_UNOP_STD_W
argument_list|(
name|O
argument_list|(
name|O_ROTR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"rotr.w"
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0x9
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_W
argument_list|(
name|O
argument_list|(
name|O_ROTR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"rotr.w"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0xd
argument_list|)
block|,
name|EXPAND_UNOP_STD_L
argument_list|(
name|O
argument_list|(
name|O_ROTR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"rotr.l"
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0xb
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_ROTR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"rotr.l"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0xf
argument_list|,
name|B30
argument_list|)
block|,
name|EXPAND_UNOP_STD_B
argument_list|(
name|O
argument_list|(
name|O_ROTXL
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"rotxl.b"
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0x0
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_B
argument_list|(
name|O
argument_list|(
name|O_ROTXL
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"rotxl.b"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0x4
argument_list|)
block|,
name|EXPAND_UNOP_STD_W
argument_list|(
name|O
argument_list|(
name|O_ROTXL
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"rotxl.w"
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0x1
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_W
argument_list|(
name|O
argument_list|(
name|O_ROTXL
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"rotxl.w"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0x5
argument_list|)
block|,
name|EXPAND_UNOP_STD_L
argument_list|(
name|O
argument_list|(
name|O_ROTXL
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"rotxl.l"
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0x3
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_ROTXL
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"rotxl.l"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|,
literal|0x7
argument_list|,
name|B30
argument_list|)
block|,
name|EXPAND_UNOP_STD_B
argument_list|(
name|O
argument_list|(
name|O_ROTXR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"rotxr.b"
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0x0
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_B
argument_list|(
name|O
argument_list|(
name|O_ROTXR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"rotxr.b"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0x4
argument_list|)
block|,
name|EXPAND_UNOP_STD_W
argument_list|(
name|O
argument_list|(
name|O_ROTXR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"rotxr.w"
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0x1
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_W
argument_list|(
name|O
argument_list|(
name|O_ROTXR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"rotxr.w"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0x5
argument_list|)
block|,
name|EXPAND_UNOP_STD_L
argument_list|(
name|O
argument_list|(
name|O_ROTXR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"rotxr.l"
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0x3
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_ROTXR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"rotxr.l"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
literal|0x7
argument_list|,
name|B30
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_BPT
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8
block|,
literal|10
block|,
literal|"bpt"
block|,
block|{
block|{
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xA
block|,
literal|0xF
block|,
literal|0xF
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_RTE
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8
block|,
literal|10
block|,
literal|"rte"
block|,
block|{
block|{
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x6
block|,
literal|0x7
block|,
literal|0x0
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_RTS
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8
block|,
literal|8
block|,
literal|"rts"
block|,
block|{
block|{
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x4
block|,
literal|0x7
block|,
literal|0x0
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_RTEL
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"rte/l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x6
block|,
name|RS32
operator||
name|B30
block|,
name|RD32
operator||
name|B30
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_RTSL
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"rts/l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x4
block|,
name|RS32
operator||
name|B30
block|,
name|RD32
operator||
name|B30
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_STD_B
argument_list|(
name|O
argument_list|(
name|O_SHAL
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"shal.b"
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x8
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_B
argument_list|(
name|O
argument_list|(
name|O_SHAL
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"shal.b"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0xc
argument_list|)
block|,
name|EXPAND_UNOP_STD_W
argument_list|(
name|O
argument_list|(
name|O_SHAL
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"shal.w"
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x9
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_W
argument_list|(
name|O
argument_list|(
name|O_SHAL
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"shal.w"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0xd
argument_list|)
block|,
name|EXPAND_UNOP_STD_L
argument_list|(
name|O
argument_list|(
name|O_SHAL
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shal.l"
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0xb
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_SHAL
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shal.l"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0xf
argument_list|,
name|B30
argument_list|)
block|,
name|EXPAND_UNOP_STD_B
argument_list|(
name|O
argument_list|(
name|O_SHAR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"shar.b"
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x8
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_B
argument_list|(
name|O
argument_list|(
name|O_SHAR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"shar.b"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0xc
argument_list|)
block|,
name|EXPAND_UNOP_STD_W
argument_list|(
name|O
argument_list|(
name|O_SHAR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"shar.w"
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x9
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_W
argument_list|(
name|O
argument_list|(
name|O_SHAR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"shar.w"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0xd
argument_list|)
block|,
name|EXPAND_UNOP_STD_L
argument_list|(
name|O
argument_list|(
name|O_SHAR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shar.l"
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0xb
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_SHAR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shar.l"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0xf
argument_list|,
name|B30
argument_list|)
block|,
name|EXPAND_UNOP_STD_B
argument_list|(
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"shll.b"
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x0
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"shll.b"
block|,
block|{
block|{
name|RS8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RS8
block|,
literal|0x8
block|,
literal|0x1
block|,
literal|0x0
block|,
literal|0x0
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_EXTENDED_B
argument_list|(
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"shll.b"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x4
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_B
argument_list|(
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"shll.b"
argument_list|,
name|CONST_4
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0xa
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"shll.b"
block|,
block|{
block|{
name|IMM5
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x3
block|,
name|B31
operator||
name|IMM5
block|,
name|DATA
block|,
literal|0x1
block|,
literal|0x0
block|,
literal|0x0
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_STD_W
argument_list|(
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"shll.w"
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x1
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"shll.w"
block|,
block|{
block|{
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RS8
block|,
literal|0x8
block|,
literal|0x1
block|,
literal|0x0
block|,
literal|0x1
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_EXTENDED_W
argument_list|(
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"shll.w"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x5
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_W
argument_list|(
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"shll.w"
argument_list|,
name|CONST_4
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x2
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_W
argument_list|(
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"shll.w"
argument_list|,
name|CONST_8
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x6
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"shll.w"
block|,
block|{
block|{
name|IMM5
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x3
block|,
name|B31
operator||
name|IMM5
block|,
name|DATA
block|,
literal|0x1
block|,
literal|0x0
block|,
literal|0x1
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_STD_L
argument_list|(
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shll.l"
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x3
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"shll.l"
block|,
block|{
block|{
name|RS8
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RS8
block|,
literal|0x8
block|,
literal|0x1
block|,
literal|0x0
block|,
literal|0x3
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shll.l"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x7
argument_list|,
name|B30
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shll.l"
argument_list|,
name|CONST_4
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x3
argument_list|,
name|B31
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shll.l"
argument_list|,
name|CONST_8
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0x7
argument_list|,
name|B31
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shll.l"
argument_list|,
name|CONST_16
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|,
literal|0xf
argument_list|,
name|B31
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SHLL
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"shll.l"
block|,
block|{
block|{
name|IMM5
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x3
block|,
name|B31
operator||
name|IMM5
block|,
name|DATA
block|,
literal|0x1
block|,
literal|0x0
block|,
literal|0x3
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_STD_B
argument_list|(
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"shlr.b"
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x0
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"shlr.b"
block|,
block|{
block|{
name|RS8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RS8
block|,
literal|0x8
block|,
literal|0x1
block|,
literal|0x1
block|,
literal|0x0
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_EXTENDED_B
argument_list|(
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"shlr.b"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x4
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_B
argument_list|(
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"shlr.b"
argument_list|,
name|CONST_4
argument_list|,
name|PREFIX_017
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0xa
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"shlr.b"
block|,
block|{
block|{
name|IMM5
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x3
block|,
name|B31
operator||
name|IMM5
block|,
name|DATA
block|,
literal|0x1
block|,
literal|0x1
block|,
literal|0x0
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_STD_W
argument_list|(
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"shlr.w"
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"shlr.w"
block|,
block|{
block|{
name|RS8
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RS8
block|,
literal|0x8
block|,
literal|0x1
block|,
literal|0x1
block|,
literal|0x1
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_EXTENDED_W
argument_list|(
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"shlr.w"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x5
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_W
argument_list|(
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"shlr.w"
argument_list|,
name|CONST_4
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x2
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_W
argument_list|(
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"shlr.w"
argument_list|,
name|CONST_8
argument_list|,
name|PREFIX_015
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x6
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"shlr.w"
block|,
block|{
block|{
name|IMM5
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x3
block|,
name|B31
operator||
name|IMM5
block|,
name|DATA
block|,
literal|0x1
block|,
literal|0x1
block|,
literal|0x1
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_STD_L
argument_list|(
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shlr.l"
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"shlr.l"
block|,
block|{
block|{
name|RS8
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0x8
block|,
name|RS8
block|,
literal|0x8
block|,
literal|0x1
block|,
literal|0x1
block|,
literal|0x3
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shlr.l"
argument_list|,
name|CONST_2
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
name|B30
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shlr.l"
argument_list|,
name|CONST_4
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x3
argument_list|,
name|B31
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shlr.l"
argument_list|,
name|CONST_8
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0x7
argument_list|,
name|B31
argument_list|)
block|,
name|EXPAND_UNOP_EXTENDED_L
argument_list|(
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"shlr.l"
argument_list|,
name|CONST_16
argument_list|,
name|PREFIX_010
argument_list|,
literal|0x1
argument_list|,
literal|0x1
argument_list|,
literal|0xf
argument_list|,
name|B31
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SHLR
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"shlr.l"
block|,
block|{
block|{
name|IMM5
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x3
block|,
name|B31
operator||
name|IMM5
block|,
name|DATA
block|,
literal|0x1
block|,
literal|0x1
block|,
literal|0x3
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SLEEP
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"sleep"
block|,
block|{
block|{
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0x8
block|,
literal|0x0
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|CCR
operator||
name|SRC
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x2
block|,
name|B30
operator||
name|CCR
operator||
name|SRC
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|EXR
operator||
name|SRC
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x2
block|,
name|B30
operator||
name|EXR
operator||
name|SRC
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|CCR
operator||
name|SRC
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXSTC
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B31
operator||
name|RDIND
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|EXR
operator||
name|SRC
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXSTC
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B31
operator||
name|RDIND
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|CCR
operator||
name|SRC
block|,
name|RDPREDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXSTC
block|,
literal|0x6
block|,
literal|0xD
block|,
name|B31
operator||
name|RDPREDEC
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|EXR
operator||
name|SRC
block|,
name|RDPREDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXSTC
block|,
literal|0x6
block|,
literal|0xD
block|,
name|B31
operator||
name|RDPREDEC
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|CCR
operator||
name|SRC
block|,
name|DISP16DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXSTC
block|,
literal|0x6
block|,
literal|0xF
block|,
name|B31
operator||
name|DSTDISPREG
block|,
name|IGNORE
block|,
name|DSTDISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|EXR
operator||
name|SRC
block|,
name|DISP16DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXSTC
block|,
literal|0x6
block|,
literal|0xF
block|,
name|B31
operator||
name|DSTDISPREG
block|,
name|IGNORE
block|,
name|DSTDISP16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|CCR
operator||
name|SRC
block|,
name|DISP32DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXSTC
block|,
literal|0x7
block|,
literal|0x8
block|,
name|B30
operator||
name|DSTDISPREG
block|,
literal|0
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0xA
block|,
name|IGNORE
block|,
name|DSTDISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|EXR
operator||
name|SRC
block|,
name|DISP32DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXSTC
block|,
literal|0x7
block|,
literal|0x8
block|,
name|B30
operator||
name|DSTDISPREG
block|,
literal|0
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0xA
block|,
name|IGNORE
block|,
name|DSTDISP32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|CCR
operator||
name|SRC
block|,
name|ABS16DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXSTC
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x8
block|,
name|IGNORE
block|,
name|DST
operator||
name|ABS16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|EXR
operator||
name|SRC
block|,
name|ABS16DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXSTC
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0x8
block|,
name|IGNORE
block|,
name|DST
operator||
name|ABS16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|CCR
operator||
name|SRC
block|,
name|ABS32DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXSTC
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0xA
block|,
name|IGNORE
block|,
name|DST
operator||
name|MEMRELAX
operator||
name|ABS32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"stc"
block|,
block|{
block|{
name|EXR
operator||
name|SRC
block|,
name|ABS32DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIXSTC
block|,
literal|0x6
block|,
literal|0xB
block|,
literal|0xA
block|,
name|IGNORE
block|,
name|DST
operator||
name|MEMRELAX
operator||
name|ABS32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STC
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"stc"
block|,
block|{
block|{
name|B30
operator||
name|VBR_SBR
operator||
name|SRC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x2
block|,
name|B30
operator||
name|VBR_SBR
operator||
name|SRC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_B
argument_list|(
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"sub.b"
argument_list|,
literal|0xa
argument_list|,
literal|0x1
argument_list|,
literal|0x8
argument_list|,
literal|0x3
argument_list|,
name|B01
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"sub.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x1
block|,
literal|0x9
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"sub.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x1
block|,
literal|0xa
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"sub.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xd
block|,
name|B31
operator||
name|RDIND
block|,
name|IGNORE
block|,
literal|0x1
block|,
literal|0xa
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"sub.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|ABS16DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xb
block|,
literal|0x1
block|,
name|B31
operator||
name|IGNORE
block|,
name|DSTABS16LIST
block|,
literal|0x1
block|,
literal|0xa
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"sub.w"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|ABS32DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0xb
block|,
literal|0x3
block|,
name|B31
operator||
name|IGNORE
block|,
name|DSTABS32LIST
block|,
literal|0x1
block|,
literal|0xa
block|,
name|B30
operator||
name|IMM3NZ
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_W
argument_list|(
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"sub.w"
argument_list|,
literal|0x1
argument_list|,
literal|0x9
argument_list|,
literal|0x3
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"sub.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x1
block|,
literal|0xa
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"sub.l"
block|,
block|{
block|{
name|IMM3NZ_NS
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x1
block|,
literal|0xa
block|,
name|B31
operator||
name|IMM3NZ
block|,
name|B31
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_L
argument_list|(
name|O
argument_list|(
name|O_SUB
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"sub.l"
argument_list|,
literal|0x3
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_SUBS
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"subs"
block|,
block|{
block|{
name|KBIT
block|,
name|RDP
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x1
block|,
literal|0xB
block|,
name|KBIT
block|,
name|RDP
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"subx"
block|,
block|{
block|{
name|IMM8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0xb
block|,
name|RD8
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.b"
block|,
block|{
block|{
name|IMM8
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xd
block|,
name|B30
operator||
name|RDIND
block|,
name|IGNORE
block|,
literal|0xb
block|,
name|IGNORE
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.b"
block|,
block|{
block|{
name|IMM8
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0176
block|,
literal|0x6
block|,
literal|0xc
block|,
name|B30
operator||
name|RDPOSTDEC
block|,
name|B31
operator||
name|IGNORE
block|,
literal|0xb
block|,
name|IGNORE
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"subx"
block|,
block|{
block|{
name|RS8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x1
block|,
literal|0xe
block|,
name|RS8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.b"
block|,
block|{
block|{
name|RS8
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xd
block|,
name|B30
operator||
name|RDIND
block|,
name|IGNORE
block|,
literal|0x1
block|,
literal|0xe
block|,
name|RS8
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.b"
block|,
block|{
block|{
name|RS8
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0176
block|,
literal|0x6
block|,
literal|0xc
block|,
name|B30
operator||
name|RDPOSTDEC
block|,
name|B31
operator||
name|IGNORE
block|,
literal|0x1
block|,
literal|0xe
block|,
name|RS8
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.b"
block|,
block|{
block|{
name|RSIND
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xc
block|,
name|B30
operator||
name|RSIND
block|,
name|IGNORE
block|,
literal|0x1
block|,
literal|0xe
block|,
name|IGNORE
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.b"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0176
block|,
literal|0x6
block|,
literal|0xc
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
name|B30
operator||
name|B20
operator||
name|IGNORE
block|,
literal|0x1
block|,
literal|0xe
block|,
name|IGNORE
block|,
name|RD8
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.b"
block|,
block|{
block|{
name|RSIND
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0174
block|,
literal|0x6
block|,
literal|0x8
block|,
name|B30
operator||
name|RSIND
block|,
literal|0xd
block|,
literal|0x0
block|,
name|RDIND
block|,
literal|0x3
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.b"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0176
block|,
literal|0x6
block|,
literal|0xc
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
literal|0xd
block|,
literal|0xa
block|,
name|RDPOSTDEC
block|,
literal|0x3
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.w"
block|,
block|{
block|{
name|IMM16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0151
block|,
literal|0x7
block|,
literal|0x9
block|,
literal|0x3
block|,
name|RD16
block|,
name|IMM16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.w"
block|,
block|{
block|{
name|IMM16
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xd
block|,
name|B31
operator||
name|RDIND
block|,
name|B01
operator||
name|IGNORE
block|,
literal|0x7
block|,
literal|0x9
block|,
literal|0x3
block|,
name|IGNORE
block|,
name|IMM16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.w"
block|,
block|{
block|{
name|IMM16
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0156
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RDPOSTDEC
block|,
name|B31
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x7
block|,
literal|0x9
block|,
literal|0x3
block|,
name|IGNORE
block|,
name|IMM16LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0151
block|,
literal|0x1
block|,
literal|0x9
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.w"
block|,
block|{
block|{
name|RS16
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xd
block|,
name|B31
operator||
name|RDIND
block|,
name|B01
operator||
name|IGNORE
block|,
literal|0x1
block|,
literal|0x9
block|,
name|RS16
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.w"
block|,
block|{
block|{
name|RS16
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0156
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RDPOSTDEC
block|,
name|B31
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x1
block|,
literal|0x9
block|,
name|RS16
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.w"
block|,
block|{
block|{
name|RSIND
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x7
block|,
literal|0xc
block|,
name|B31
operator||
name|RSIND
block|,
name|B01
operator||
name|IGNORE
block|,
literal|0x1
block|,
literal|0x9
block|,
name|IGNORE
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.w"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0156
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
name|B30
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x1
block|,
literal|0x9
block|,
name|IGNORE
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.w"
block|,
block|{
block|{
name|RSIND
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0154
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RSIND
block|,
literal|0xd
block|,
literal|0x0
block|,
name|RDIND
block|,
literal|0x3
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.w"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0156
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
literal|0xd
block|,
literal|0xa
block|,
name|RDPOSTDEC
block|,
literal|0x3
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.l"
block|,
block|{
block|{
name|IMM32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0101
block|,
literal|0x7
block|,
literal|0xa
block|,
literal|0x3
block|,
name|RD32
block|,
name|IMM32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.l"
block|,
block|{
block|{
name|IMM32
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0104
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RDIND
block|,
name|B31
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x7
block|,
literal|0xa
block|,
literal|0x3
block|,
name|IGNORE
block|,
name|IMM32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.l"
block|,
block|{
block|{
name|IMM32
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0106
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RDPOSTDEC
block|,
name|B31
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x7
block|,
literal|0xa
block|,
literal|0x3
block|,
name|IGNORE
block|,
name|IMM32LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0101
block|,
literal|0x1
block|,
literal|0xa
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.l"
block|,
block|{
block|{
name|RS32
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0104
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RDIND
block|,
name|B31
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x1
block|,
literal|0xa
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.l"
block|,
block|{
block|{
name|RS32
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0106
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RDPOSTDEC
block|,
name|B31
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x1
block|,
literal|0xa
block|,
name|B31
operator||
name|RS32
block|,
name|B30
operator||
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.l"
block|,
block|{
block|{
name|RSIND
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0104
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RSIND
block|,
name|B30
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x1
block|,
literal|0xa
block|,
name|B31
operator||
name|IGNORE
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.l"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0106
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
name|B30
operator||
name|B20
operator||
name|B01
operator||
name|IGNORE
block|,
literal|0x1
block|,
literal|0xa
block|,
name|B31
operator||
name|IGNORE
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.l"
block|,
block|{
block|{
name|RSIND
block|,
name|RDIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0104
block|,
literal|0x6
block|,
literal|0x9
block|,
name|B30
operator||
name|RSIND
block|,
literal|0xd
block|,
literal|0x0
block|,
name|RDIND
block|,
literal|0x3
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_SUBX
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8SX
block|,
literal|0
block|,
literal|"subx.l"
block|,
block|{
block|{
name|RSPOSTDEC
block|,
name|RDPOSTDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
name|PREFIX_0106
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPOSTDEC
block|,
literal|0xd
block|,
literal|0xa
block|,
name|RDPOSTDEC
block|,
literal|0x3
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_TRAPA
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"trapa"
block|,
block|{
block|{
name|IMM2
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x5
block|,
literal|0x7
block|,
name|IMM2
block|,
name|IGNORE
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_TAS
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"tas"
block|,
block|{
block|{
name|RSIND
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xe
block|,
literal|0x0
block|,
literal|0x7
block|,
literal|0xb
block|,
name|B30
operator||
name|RSIND
block|,
literal|0xc
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_XOR
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"xor.b"
block|,
block|{
block|{
name|IMM8
block|,
name|RD8
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0xd
block|,
name|RD8
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_B
argument_list|(
name|O
argument_list|(
name|O_XOR
argument_list|,
name|SB
argument_list|)
argument_list|,
literal|"xor.b"
argument_list|,
literal|0xd
argument_list|,
literal|0x1
argument_list|,
literal|0x5
argument_list|,
literal|0x5
argument_list|,
literal|0
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_XOR
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"xor.w"
block|,
block|{
block|{
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x6
block|,
literal|0x5
block|,
name|RS16
block|,
name|RD16
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_W
argument_list|(
name|O
argument_list|(
name|O_XOR
argument_list|,
name|SW
argument_list|)
argument_list|,
literal|"xor.w"
argument_list|,
literal|0x6
argument_list|,
literal|0x5
argument_list|,
literal|0x5
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_XOR
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|2
block|,
literal|"xor.l"
block|,
block|{
block|{
name|RS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xF
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0x5
block|,
name|B30
operator||
name|RS32
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
name|EXPAND_TWOOP_L
argument_list|(
name|O
argument_list|(
name|O_XOR
argument_list|,
name|SL
argument_list|)
argument_list|,
literal|"xor.l"
argument_list|,
literal|0x5
argument_list|)
block|,
block|{
name|O
argument_list|(
name|O_XORC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8
block|,
literal|2
block|,
literal|"xorc"
block|,
block|{
block|{
name|IMM8
block|,
name|CCR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x5
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_XORC
argument_list|,
name|SB
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"xorc"
block|,
block|{
block|{
name|IMM8
block|,
name|EXR
operator||
name|DST
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0x4
block|,
name|EXR
operator||
name|DST
block|,
literal|0x0
block|,
literal|0x5
block|,
name|IMM8LIST
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_CLRMAC
argument_list|,
name|SN
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"clrmac"
block|,
block|{
block|{
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0xa
block|,
literal|0x0
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_MAC
argument_list|,
name|SW
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"mac"
block|,
block|{
block|{
name|RSPOSTINC
block|,
name|RDPOSTINC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
literal|0x6
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xd
block|,
name|B30
operator||
name|RSPOSTINC
block|,
name|B30
operator||
name|RDPOSTINC
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDMAC
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"ldmac"
block|,
block|{
block|{
name|RS32
block|,
name|MD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x3
block|,
name|MD32
block|,
name|RS32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STMAC
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8S
block|,
literal|2
block|,
literal|"stmac"
block|,
block|{
block|{
name|MS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x2
block|,
name|MS32
block|,
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_LDM
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"ldm.l"
block|,
block|{
block|{
name|RSPOSTINC
block|,
name|RD32
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
name|DATA
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xD
block|,
literal|0x7
block|,
name|B30
operator||
name|RD32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
name|O
argument_list|(
name|O_STM
argument_list|,
name|SL
argument_list|)
block|,
name|AV_H8H
block|,
literal|6
block|,
literal|"stm.l"
block|,
block|{
block|{
name|RS32
block|,
name|RDPREDEC
block|,
name|E
block|}
block|}
block|,
block|{
block|{
literal|0x0
block|,
literal|0x1
block|,
name|DATA
block|,
literal|0x0
block|,
literal|0x6
block|,
literal|0xD
block|,
literal|0xF
block|,
name|B30
operator||
name|RS32
block|,
name|E
block|}
block|}
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|,
name|NULL
block|,
block|{
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|}
block|,
block|{
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|}
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_else
else|#
directive|else
end_else

begin_decl_stmt
specifier|extern
specifier|const
name|struct
name|h8_opcode
name|h8_opcodes
index|[]
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

