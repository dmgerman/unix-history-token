begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* score-inst.h -- Score Instructions Table    Copyright 2006 Free Software Foundation, Inc.    Contributed by:     Mei Ligang (ligang@sunnorth.com.cn)    Pei-Lin Tsai (pltsai@sunplus.com)     This file is part of GAS, the GNU Assembler.     GAS is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2, or (at your option)    any later version.     GAS is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License    along with GAS; see the file COPYING.  If not, write to the Free    Software Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA    02110-1301, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SCORE_INST_H
end_ifndef

begin_define
define|#
directive|define
name|SCORE_INST_H
end_define

begin_define
define|#
directive|define
name|LDST_UNALIGN_MASK
value|0x0000007f
end_define

begin_define
define|#
directive|define
name|UA_LCB
value|0x00000060
end_define

begin_define
define|#
directive|define
name|UA_LCW
value|0x00000062
end_define

begin_define
define|#
directive|define
name|UA_LCE
value|0x00000066
end_define

begin_define
define|#
directive|define
name|UA_SCB
value|0x00000068
end_define

begin_define
define|#
directive|define
name|UA_SCW
value|0x0000006a
end_define

begin_define
define|#
directive|define
name|UA_SCE
value|0x0000006e
end_define

begin_define
define|#
directive|define
name|UA_LL
value|0x0000000c
end_define

begin_define
define|#
directive|define
name|UA_SC
value|0x0000000e
end_define

begin_define
define|#
directive|define
name|LDST16_RR_MASK
value|0x0000000f
end_define

begin_define
define|#
directive|define
name|N16_LW
value|8
end_define

begin_define
define|#
directive|define
name|N16_LH
value|9
end_define

begin_define
define|#
directive|define
name|N16_POP
value|10
end_define

begin_define
define|#
directive|define
name|N16_LBU
value|11
end_define

begin_define
define|#
directive|define
name|N16_SW
value|12
end_define

begin_define
define|#
directive|define
name|N16_SH
value|13
end_define

begin_define
define|#
directive|define
name|N16_PUSH
value|14
end_define

begin_define
define|#
directive|define
name|N16_SB
value|15
end_define

begin_define
define|#
directive|define
name|LDST16_RI_MASK
value|0x7007
end_define

begin_define
define|#
directive|define
name|N16_LWP
value|0x7000
end_define

begin_define
define|#
directive|define
name|N16_LHP
value|0x7001
end_define

begin_define
define|#
directive|define
name|N16_LBUP
value|0x7003
end_define

begin_define
define|#
directive|define
name|N16_SWP
value|0x7004
end_define

begin_define
define|#
directive|define
name|N16_SHP
value|0x7005
end_define

begin_define
define|#
directive|define
name|N16_SBP
value|0x7007
end_define

begin_define
define|#
directive|define
name|N16_LIU
value|0x5000
end_define

begin_define
define|#
directive|define
name|OPC_PSEUDOLDST_MASK
value|0x00000007
end_define

begin_enum
enum|enum
block|{
name|INSN_LW
init|=
literal|0
block|,
name|INSN_LH
init|=
literal|1
block|,
name|INSN_LHU
init|=
literal|2
block|,
name|INSN_LB
init|=
literal|3
block|,
name|INSN_SW
init|=
literal|4
block|,
name|INSN_SH
init|=
literal|5
block|,
name|INSN_LBU
init|=
literal|6
block|,
name|INSN_SB
init|=
literal|7
block|, }
enum|;
end_enum

begin_comment
comment|/* Sub opcdoe opcode.  */
end_comment

begin_enum
enum|enum
block|{
name|INSN16_LBU
init|=
literal|11
block|,
name|INSN16_LH
init|=
literal|9
block|,
name|INSN16_LW
init|=
literal|8
block|,
name|INSN16_SB
init|=
literal|15
block|,
name|INSN16_SH
init|=
literal|13
block|,
name|INSN16_SW
init|=
literal|12
block|, }
enum|;
end_enum

begin_enum
enum|enum
block|{
name|LDST_NOUPDATE
init|=
literal|0
block|,
name|LDST_PRE
init|=
literal|1
block|,
name|LDST_POST
init|=
literal|2
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|score_insn_type
block|{
name|Rd_I4
block|,
name|Rd_I5
block|,
name|Rd_rvalueBP_I5
block|,
name|Rd_lvalueBP_I5
block|,
name|Rd_Rs_I5
block|,
name|x_Rs_I5
block|,
name|x_I5_x
block|,
name|Rd_I8
block|,
name|Rd_Rs_I14
block|,
name|I15
block|,
name|Rd_I16
block|,
name|Rd_rvalueRs_SI10
block|,
name|Rd_lvalueRs_SI10
block|,
name|Rd_rvalueRs_preSI12
block|,
name|Rd_rvalueRs_postSI12
block|,
name|Rd_lvalueRs_preSI12
block|,
name|Rd_lvalueRs_postSI12
block|,
name|Rd_Rs_SI14
block|,
name|Rd_rvalueRs_SI15
block|,
name|Rd_lvalueRs_SI15
block|,
name|Rd_SI16
block|,
name|PC_DISP8div2
block|,
name|PC_DISP11div2
block|,
name|PC_DISP19div2
block|,
name|PC_DISP24div2
block|,
name|Rd_Rs_Rs
block|,
name|x_Rs_x
block|,
name|x_Rs_Rs
block|,
name|Rd_Rs_x
block|,
name|Rd_x_Rs
block|,
name|Rd_x_x
block|,
name|Rd_Rs
block|,
name|Rd_HighRs
block|,
name|Rd_lvalueRs
block|,
name|Rd_rvalueRs
block|,
name|Rd_lvalue32Rs
block|,
name|Rd_rvalue32Rs
block|,
name|x_Rs
block|,
name|NO_OPD
block|,
name|NO16_OPD
block|,
name|OP5_rvalueRs_SI15
block|,
name|I5_Rs_Rs_I5_OP5
block|,
name|x_rvalueRs_post4
block|,
name|Rd_rvalueRs_post4
block|,
name|Rd_x_I5
block|,
name|Rd_lvalueRs_post4
block|,
name|x_lvalueRs_post4
block|,
name|Rd_LowRs
block|,
name|Rd_Rs_Rs_imm
block|,
name|Insn_Type_PCE
block|,
name|Insn_Type_SYN
block|,
name|Insn_GP
block|,
name|Insn_PIC
block|,
name|Insn_internal
block|, }
enum|;
end_enum

begin_enum
enum|enum
name|score_data_type
block|{
name|_IMM4
init|=
literal|0
block|,
name|_IMM5
block|,
name|_IMM8
block|,
name|_IMM14
block|,
name|_IMM15
block|,
name|_IMM16
block|,
name|_SIMM10
init|=
literal|6
block|,
name|_SIMM12
block|,
name|_SIMM14
block|,
name|_SIMM15
block|,
name|_SIMM16
block|,
name|_SIMM14_NEG
init|=
literal|11
block|,
name|_IMM16_NEG
block|,
name|_SIMM16_NEG
block|,
name|_IMM20
block|,
name|_IMM25
block|,
name|_DISP8div2
init|=
literal|16
block|,
name|_DISP11div2
block|,
name|_DISP19div2
block|,
name|_DISP24div2
block|,
name|_VALUE
block|,
name|_VALUE_HI16
block|,
name|_VALUE_LO16
block|,
name|_VALUE_LDST_LO16
init|=
literal|23
block|,
name|_SIMM16_LA
block|,
name|_IMM5_RSHIFT_1
block|,
name|_IMM5_RSHIFT_2
block|,
name|_SIMM16_LA_POS
block|,
name|_IMM5_RANGE_8_31
block|,
name|_IMM10_RSHIFT_2
block|,
name|_GP_IMM15
init|=
literal|30
block|,
name|_GP_IMM14
init|=
literal|31
block|,
name|_SIMM16_pic
init|=
literal|42
block|,
comment|/* Index in score_df_range.  */
name|_IMM16_LO16_pic
init|=
literal|43
block|,
name|_IMM16_pic
init|=
literal|44
block|, }
enum|;
end_enum

begin_define
define|#
directive|define
name|REG_TMP
value|1
end_define

begin_define
define|#
directive|define
name|OP_REG_TYPE
value|(1<< 6)
end_define

begin_define
define|#
directive|define
name|OP_IMM_TYPE
value|(1<< 7)
end_define

begin_define
define|#
directive|define
name|OP_SH_REGD
value|(OP_REG_TYPE |20)
end_define

begin_define
define|#
directive|define
name|OP_SH_REGS1
value|(OP_REG_TYPE |15)
end_define

begin_define
define|#
directive|define
name|OP_SH_REGS2
value|(OP_REG_TYPE |10)
end_define

begin_define
define|#
directive|define
name|OP_SH_I
value|(OP_IMM_TYPE | 1)
end_define

begin_define
define|#
directive|define
name|OP_SH_RI15
value|(OP_IMM_TYPE | 0)
end_define

begin_define
define|#
directive|define
name|OP_SH_I12
value|(OP_IMM_TYPE | 3)
end_define

begin_define
define|#
directive|define
name|OP_SH_DISP24
value|(OP_IMM_TYPE | 1)
end_define

begin_define
define|#
directive|define
name|OP_SH_DISP19_p1
value|(OP_IMM_TYPE |15)
end_define

begin_define
define|#
directive|define
name|OP_SH_DISP19_p2
value|(OP_IMM_TYPE | 1)
end_define

begin_define
define|#
directive|define
name|OP_SH_I5
value|(OP_IMM_TYPE |10)
end_define

begin_define
define|#
directive|define
name|OP_SH_I10
value|(OP_IMM_TYPE | 5)
end_define

begin_define
define|#
directive|define
name|OP_SH_COPID
value|(OP_IMM_TYPE | 5)
end_define

begin_define
define|#
directive|define
name|OP_SH_TRAPI5
value|(OP_IMM_TYPE |15)
end_define

begin_define
define|#
directive|define
name|OP_SH_I15
value|(OP_IMM_TYPE |10)
end_define

begin_define
define|#
directive|define
name|OP16_SH_REGD
value|(OP_REG_TYPE | 8)
end_define

begin_define
define|#
directive|define
name|OP16_SH_REGS1
value|(OP_REG_TYPE | 4)
end_define

begin_define
define|#
directive|define
name|OP16_SH_I45
value|(OP_IMM_TYPE | 3)
end_define

begin_define
define|#
directive|define
name|OP16_SH_I8
value|(OP_IMM_TYPE | 0)
end_define

begin_define
define|#
directive|define
name|OP16_SH_DISP8
value|(OP_IMM_TYPE | 0)
end_define

begin_define
define|#
directive|define
name|OP16_SH_DISP11
value|(OP_IMM_TYPE | 1)
end_define

begin_struct
struct|struct
name|datafield_range
block|{
name|int
name|data_type
decl_stmt|;
name|int
name|bits
decl_stmt|;
name|int
name|range
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
name|struct
name|datafield_range
name|score_df_range
index|[]
init|=
block|{
block|{
name|_IMM4
block|,
literal|4
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|4
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (     0 ~ 15   ) */
block|{
name|_IMM5
block|,
literal|5
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|5
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (     0 ~ 31   ) */
block|{
name|_IMM8
block|,
literal|8
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|8
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (     0 ~ 255  ) */
block|{
name|_IMM14
block|,
literal|14
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|14
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (     0 ~ 16383) */
block|{
name|_IMM15
block|,
literal|15
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|15
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (     0 ~ 32767) */
block|{
name|_IMM16
block|,
literal|16
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|16
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (     0 ~ 65535) */
block|{
name|_SIMM10
block|,
literal|10
block|,
block|{
operator|-
operator|(
literal|1
operator|<<
literal|9
operator|)
block|,
operator|(
literal|1
operator|<<
literal|9
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (  -512 ~ 511  ) */
block|{
name|_SIMM12
block|,
literal|12
block|,
block|{
operator|-
operator|(
literal|1
operator|<<
literal|11
operator|)
block|,
operator|(
literal|1
operator|<<
literal|11
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* ( -2048 ~ 2047 ) */
block|{
name|_SIMM14
block|,
literal|14
block|,
block|{
operator|-
operator|(
literal|1
operator|<<
literal|13
operator|)
block|,
operator|(
literal|1
operator|<<
literal|13
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* ( -8192 ~ 8191 ) */
block|{
name|_SIMM15
block|,
literal|15
block|,
block|{
operator|-
operator|(
literal|1
operator|<<
literal|14
operator|)
block|,
operator|(
literal|1
operator|<<
literal|14
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (-16384 ~ 16383) */
block|{
name|_SIMM16
block|,
literal|16
block|,
block|{
operator|-
operator|(
literal|1
operator|<<
literal|15
operator|)
block|,
operator|(
literal|1
operator|<<
literal|15
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (-32768 ~ 32767) */
block|{
name|_SIMM14_NEG
block|,
literal|14
block|,
block|{
operator|-
operator|(
literal|1
operator|<<
literal|13
operator|)
block|,
operator|(
literal|1
operator|<<
literal|13
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* ( -8191 ~ 8192 ) */
block|{
name|_IMM16_NEG
block|,
literal|16
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|16
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (-65535 ~ 0    ) */
block|{
name|_SIMM16_NEG
block|,
literal|16
block|,
block|{
operator|-
operator|(
literal|1
operator|<<
literal|15
operator|)
block|,
operator|(
literal|1
operator|<<
literal|15
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (-32768 ~ 32767) */
block|{
name|_IMM20
block|,
literal|20
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|20
operator|)
operator|-
literal|1
block|}
block|}
block|,
block|{
name|_IMM25
block|,
literal|25
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|25
operator|)
operator|-
literal|1
block|}
block|}
block|,
block|{
name|_DISP8div2
block|,
literal|8
block|,
block|{
operator|-
operator|(
literal|1
operator|<<
literal|8
operator|)
block|,
operator|(
literal|1
operator|<<
literal|8
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (  -256 ~ 255  ) */
block|{
name|_DISP11div2
block|,
literal|11
block|,
block|{
literal|0
block|,
literal|0
block|}
block|}
block|,
block|{
name|_DISP19div2
block|,
literal|19
block|,
block|{
operator|-
operator|(
literal|1
operator|<<
literal|19
operator|)
block|,
operator|(
literal|1
operator|<<
literal|19
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (-524288 ~ 524287) */
block|{
name|_DISP24div2
block|,
literal|24
block|,
block|{
literal|0
block|,
literal|0
block|}
block|}
block|,
block|{
name|_VALUE
block|,
literal|32
block|,
block|{
literal|0
block|,
operator|(
operator|(
name|unsigned
name|int
operator|)
literal|1
operator|<<
literal|31
operator|)
operator|-
literal|1
block|}
block|}
block|,
block|{
name|_VALUE_HI16
block|,
literal|16
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|16
operator|)
operator|-
literal|1
block|}
block|}
block|,
block|{
name|_VALUE_LO16
block|,
literal|16
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|16
operator|)
operator|-
literal|1
block|}
block|}
block|,
block|{
name|_VALUE_LDST_LO16
block|,
literal|16
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|16
operator|)
operator|-
literal|1
block|}
block|}
block|,
block|{
name|_SIMM16_LA
block|,
literal|16
block|,
block|{
operator|-
operator|(
literal|1
operator|<<
literal|15
operator|)
block|,
operator|(
literal|1
operator|<<
literal|15
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (-32768 ~ 32767) */
block|{
name|_IMM5_RSHIFT_1
block|,
literal|5
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|6
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (     0 ~ 63   ) */
block|{
name|_IMM5_RSHIFT_2
block|,
literal|5
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|7
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (     0 ~ 127  ) */
block|{
name|_SIMM16_LA_POS
block|,
literal|16
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|15
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (     0 ~ 32767) */
block|{
name|_IMM5_RANGE_8_31
block|,
literal|5
block|,
block|{
literal|8
block|,
literal|31
block|}
block|}
block|,
comment|/* But for cop0 the valid data : (8 ~ 31). */
block|{
name|_IMM10_RSHIFT_2
block|,
literal|10
block|,
block|{
operator|-
operator|(
literal|1
operator|<<
literal|11
operator|)
block|,
operator|(
literal|1
operator|<<
literal|11
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* For ldc#, stc#. */
block|{
name|_SIMM10
block|,
literal|10
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|10
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* ( -1024 ~ 1023 ) */
block|{
name|_SIMM12
block|,
literal|12
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|12
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* ( -2048 ~ 2047 ) */
block|{
name|_SIMM14
block|,
literal|14
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|14
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* ( -8192 ~ 8191 ) */
block|{
name|_SIMM15
block|,
literal|15
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|15
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (-16384 ~ 16383) */
block|{
name|_SIMM16
block|,
literal|16
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|16
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (-65536 ~ 65536) */
block|{
name|_SIMM14_NEG
block|,
literal|14
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|16
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* ( -8191 ~ 8192 ) */
block|{
name|_IMM16_NEG
block|,
literal|16
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|16
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* ( 65535 ~ 0    ) */
block|{
name|_SIMM16_NEG
block|,
literal|16
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|16
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* ( 65535 ~ 0    ) */
block|{
name|_IMM20
block|,
literal|20
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|20
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (-32768 ~ 32767) */
block|{
name|_IMM25
block|,
literal|25
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|25
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (-32768 ~ 32767) */
block|{
name|_GP_IMM15
block|,
literal|15
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|15
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (     0 ~ 65535) */
block|{
name|_GP_IMM14
block|,
literal|14
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|14
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (     0 ~ 65535) */
block|{
name|_SIMM16_pic
block|,
literal|16
block|,
block|{
operator|-
operator|(
literal|1
operator|<<
literal|15
operator|)
block|,
operator|(
literal|1
operator|<<
literal|15
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (-32768 ~ 32767) */
block|{
name|_IMM16_LO16_pic
block|,
literal|16
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|16
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* ( 65535 ~ 0    ) */
block|{
name|_IMM16_pic
block|,
literal|16
block|,
block|{
literal|0
block|,
operator|(
literal|1
operator|<<
literal|16
operator|)
operator|-
literal|1
block|}
block|}
block|,
comment|/* (     0 ~ 65535) */
block|}
decl_stmt|;
end_decl_stmt

begin_struct
struct|struct
name|shift_bitmask
block|{
name|int
name|opd_type
decl_stmt|;
name|int
name|opd_num
decl_stmt|;
name|struct
name|datafield_range
modifier|*
name|df_range
decl_stmt|;
name|int
name|sh
index|[
literal|4
index|]
decl_stmt|;
name|long
name|fieldbits
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
name|struct
name|shift_bitmask
name|score_sh_bits_map
index|[]
init|=
block|{
block|{
name|Rd_I4
block|,
literal|2
block|,
operator|&
name|score_df_range
index|[
name|_IMM4
index|]
block|,
block|{
name|OP16_SH_REGD
block|,
name|OP16_SH_I45
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0xf
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_I5
block|,
literal|2
block|,
operator|&
name|score_df_range
index|[
name|_IMM5
index|]
block|,
block|{
name|OP16_SH_REGD
block|,
name|OP16_SH_I45
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0x1f
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_rvalueBP_I5
block|,
literal|2
block|,
operator|&
name|score_df_range
index|[
name|_IMM5
index|]
block|,
block|{
name|OP16_SH_REGD
block|,
name|OP16_SH_I45
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0x1f
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_lvalueBP_I5
block|,
literal|2
block|,
operator|&
name|score_df_range
index|[
name|_IMM5
index|]
block|,
block|{
name|OP16_SH_REGD
block|,
name|OP16_SH_I45
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0x1f
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_Rs_I5
block|,
literal|3
block|,
operator|&
name|score_df_range
index|[
name|_IMM5
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
name|OP_SH_I5
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0x1f
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|x_Rs_I5
block|,
literal|2
block|,
operator|&
name|score_df_range
index|[
name|_IMM5
index|]
block|,
block|{
name|OP_SH_REGS1
block|,
name|OP_SH_I5
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|x_I5_x
block|,
literal|1
block|,
operator|&
name|score_df_range
index|[
name|_IMM5
index|]
block|,
block|{
name|OP_SH_TRAPI5
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_I8
block|,
literal|2
block|,
operator|&
name|score_df_range
index|[
name|_IMM8
index|]
block|,
block|{
name|OP16_SH_REGD
block|,
name|OP16_SH_I8
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0xff
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_Rs_I14
block|,
literal|3
block|,
operator|&
name|score_df_range
index|[
name|_IMM14
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
name|OP_SH_I
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0x3fff
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|I15
block|,
literal|1
block|,
operator|&
name|score_df_range
index|[
name|_IMM15
index|]
block|,
block|{
name|OP_SH_I15
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x7fff
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_I16
block|,
literal|2
block|,
operator|&
name|score_df_range
index|[
name|_IMM16
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_I
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0xffff
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_rvalueRs_SI10
block|,
literal|3
block|,
operator|&
name|score_df_range
index|[
name|_SIMM10
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
name|OP_SH_I10
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0x3ff
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_lvalueRs_SI10
block|,
literal|3
block|,
operator|&
name|score_df_range
index|[
name|_SIMM10
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
name|OP_SH_I10
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0x3ff
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_rvalueRs_preSI12
block|,
literal|3
block|,
operator|&
name|score_df_range
index|[
name|_SIMM12
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
name|OP_SH_I12
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0xf
block|,
literal|0xfff
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_rvalueRs_postSI12
block|,
literal|3
block|,
operator|&
name|score_df_range
index|[
name|_SIMM12
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
name|OP_SH_I12
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0xf
block|,
literal|0xfff
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_lvalueRs_preSI12
block|,
literal|3
block|,
operator|&
name|score_df_range
index|[
name|_SIMM12
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
name|OP_SH_I12
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0xf
block|,
literal|0xfff
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_lvalueRs_postSI12
block|,
literal|3
block|,
operator|&
name|score_df_range
index|[
name|_SIMM12
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
name|OP_SH_I12
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0xf
block|,
literal|0xfff
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_Rs_SI14
block|,
literal|3
block|,
operator|&
name|score_df_range
index|[
name|_SIMM14
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
name|OP_SH_I
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0x3fff
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_rvalueRs_SI15
block|,
literal|3
block|,
operator|&
name|score_df_range
index|[
name|_SIMM15
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
name|OP_SH_RI15
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0x7fff
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_lvalueRs_SI15
block|,
literal|3
block|,
operator|&
name|score_df_range
index|[
name|_SIMM15
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
name|OP_SH_RI15
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0x7fff
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_SI16
block|,
literal|2
block|,
operator|&
name|score_df_range
index|[
name|_SIMM16
index|]
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_I
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0xffff
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|PC_DISP8div2
block|,
literal|1
block|,
operator|&
name|score_df_range
index|[
name|_DISP8div2
index|]
block|,
block|{
name|OP16_SH_DISP8
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0xff
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|PC_DISP11div2
block|,
literal|1
block|,
operator|&
name|score_df_range
index|[
name|_DISP11div2
index|]
block|,
block|{
name|OP16_SH_DISP11
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x7ff
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|PC_DISP19div2
block|,
literal|2
block|,
operator|&
name|score_df_range
index|[
name|_DISP19div2
index|]
block|,
block|{
name|OP_SH_DISP19_p1
block|,
name|OP_SH_DISP19_p2
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x3ff
block|,
literal|0x1ff
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|PC_DISP24div2
block|,
literal|1
block|,
operator|&
name|score_df_range
index|[
name|_DISP24div2
index|]
block|,
block|{
name|OP_SH_DISP24
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0xffffff
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_Rs_Rs
block|,
literal|3
block|,
name|NULL
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
name|OP_SH_REGS2
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0x1f
block|,
literal|0
block|}
block|}
block|,
block|{
name|Rd_Rs_x
block|,
literal|2
block|,
name|NULL
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_x_Rs
block|,
literal|2
block|,
name|NULL
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS2
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_x_x
block|,
literal|1
block|,
name|NULL
block|,
block|{
name|OP_SH_REGD
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|x_Rs_Rs
block|,
literal|2
block|,
name|NULL
block|,
block|{
name|OP_SH_REGS1
block|,
name|OP_SH_REGS2
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|x_Rs_x
block|,
literal|1
block|,
name|NULL
block|,
block|{
name|OP_SH_REGS1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_Rs
block|,
literal|2
block|,
name|NULL
block|,
block|{
name|OP16_SH_REGD
block|,
name|OP16_SH_REGS1
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0xf
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_HighRs
block|,
literal|2
block|,
name|NULL
block|,
block|{
name|OP16_SH_REGD
block|,
name|OP16_SH_REGS1
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0xf
block|,
literal|0x1f
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_rvalueRs
block|,
literal|2
block|,
name|NULL
block|,
block|{
name|OP16_SH_REGD
block|,
name|OP16_SH_REGS1
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0xf
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_lvalueRs
block|,
literal|2
block|,
name|NULL
block|,
block|{
name|OP16_SH_REGD
block|,
name|OP16_SH_REGS1
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0xf
block|,
literal|0
block|,
literal|0
block|}
block|}
block|,
block|{
name|Rd_lvalue32Rs
block|,
literal|2
block|,
name|NULL
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|Rd_rvalue32Rs
block|,
literal|2
block|,
name|NULL
block|,
block|{
name|OP_SH_REGD
block|,
name|OP_SH_REGS1
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0x1f
block|,
literal|0x1f
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|x_Rs
block|,
literal|1
block|,
name|NULL
block|,
block|{
name|OP16_SH_REGS1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0xf
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|NO_OPD
block|,
literal|0
block|,
name|NULL
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|,
block|{
name|NO16_OPD
block|,
literal|0
block|,
name|NULL
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,    }
block|, }
decl_stmt|;
end_decl_stmt

begin_struct
struct|struct
name|asm_opcode
block|{
comment|/* Instruction name.  */
specifier|const
name|char
modifier|*
name|template
decl_stmt|;
comment|/* Instruction Opcode.  */
name|unsigned
name|long
name|value
decl_stmt|;
comment|/* Instruction bit mask.  */
name|unsigned
name|long
name|bitmask
decl_stmt|;
comment|/* Relax instruction opcode.  0x8000 imply no relaxation.  */
name|unsigned
name|long
name|relax_value
decl_stmt|;
comment|/* Instruction type.  */
name|enum
name|score_insn_type
name|type
decl_stmt|;
comment|/* Function to call to parse args.  */
name|void
function_decl|(
modifier|*
name|parms
function_decl|)
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|insn_class
block|{
name|INSN_CLASS_16
block|,
name|INSN_CLASS_32
block|,
name|INSN_CLASS_PCE
block|,
name|INSN_CLASS_SYN
block|}
enum|;
end_enum

begin_endif
endif|#
directive|endif
end_endif

end_unit

