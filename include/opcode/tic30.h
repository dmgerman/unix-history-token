begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* tic30.h -- Header file for TI TMS320C30 opcode table    Copyright 1998 Free Software Foundation, Inc.    Contributed by Steven Haworth (steve@pm.cse.rmit.edu.au)  This file is part of GDB, GAS, and the GNU binutils.  GDB, GAS, and the GNU binutils are free software; you can redistribute them and/or modify them under the terms of the GNU General Public License as published by the Free Software Foundation; either version 1, or (at your option) any later version.  GDB, GAS, and the GNU binutils are distributed in the hope that they will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this file; see the file COPYING.  If not, write to the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_comment
comment|/* FIXME: The opcode table should be in opcodes/tic30-opc.c, not in a    header file.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_TMS320_H_
end_ifndef

begin_define
define|#
directive|define
name|_TMS320_H_
end_define

begin_struct
struct|struct
name|_register
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|unsigned
name|char
name|opcode
decl_stmt|;
name|unsigned
name|char
name|regtype
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|_register
name|reg
typedef|;
end_typedef

begin_define
define|#
directive|define
name|REG_Rn
value|0x01
end_define

begin_define
define|#
directive|define
name|REG_ARn
value|0x02
end_define

begin_define
define|#
directive|define
name|REG_DP
value|0x03
end_define

begin_define
define|#
directive|define
name|REG_OTHER
value|0x04
end_define

begin_decl_stmt
specifier|static
specifier|const
name|reg
name|tic30_regtab
index|[]
init|=
block|{
block|{
literal|"r0"
block|,
literal|0x00
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"r1"
block|,
literal|0x01
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"r2"
block|,
literal|0x02
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"r3"
block|,
literal|0x03
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"r4"
block|,
literal|0x04
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"r5"
block|,
literal|0x05
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"r6"
block|,
literal|0x06
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"r7"
block|,
literal|0x07
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"ar0"
block|,
literal|0x08
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"ar1"
block|,
literal|0x09
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"ar2"
block|,
literal|0x0A
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"ar3"
block|,
literal|0x0B
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"ar4"
block|,
literal|0x0C
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"ar5"
block|,
literal|0x0D
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"ar6"
block|,
literal|0x0E
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"ar7"
block|,
literal|0x0F
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"dp"
block|,
literal|0x10
block|,
name|REG_DP
block|}
block|,
block|{
literal|"ir0"
block|,
literal|0x11
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"ir1"
block|,
literal|0x12
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"bk"
block|,
literal|0x13
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"sp"
block|,
literal|0x14
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"st"
block|,
literal|0x15
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"ie"
block|,
literal|0x16
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"if"
block|,
literal|0x17
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"iof"
block|,
literal|0x18
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"rs"
block|,
literal|0x19
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"re"
block|,
literal|0x1A
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"rc"
block|,
literal|0x1B
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"R0"
block|,
literal|0x00
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"R1"
block|,
literal|0x01
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"R2"
block|,
literal|0x02
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"R3"
block|,
literal|0x03
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"R4"
block|,
literal|0x04
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"R5"
block|,
literal|0x05
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"R6"
block|,
literal|0x06
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"R7"
block|,
literal|0x07
block|,
name|REG_Rn
block|}
block|,
block|{
literal|"AR0"
block|,
literal|0x08
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"AR1"
block|,
literal|0x09
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"AR2"
block|,
literal|0x0A
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"AR3"
block|,
literal|0x0B
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"AR4"
block|,
literal|0x0C
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"AR5"
block|,
literal|0x0D
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"AR6"
block|,
literal|0x0E
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"AR7"
block|,
literal|0x0F
block|,
name|REG_ARn
block|}
block|,
block|{
literal|"DP"
block|,
literal|0x10
block|,
name|REG_DP
block|}
block|,
block|{
literal|"IR0"
block|,
literal|0x11
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"IR1"
block|,
literal|0x12
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"BK"
block|,
literal|0x13
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"SP"
block|,
literal|0x14
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"ST"
block|,
literal|0x15
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"IE"
block|,
literal|0x16
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"IF"
block|,
literal|0x17
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"IOF"
block|,
literal|0x18
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"RS"
block|,
literal|0x19
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"RE"
block|,
literal|0x1A
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|"RC"
block|,
literal|0x1B
block|,
name|REG_OTHER
block|}
block|,
block|{
literal|""
block|,
literal|0
block|,
literal|0
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|reg
modifier|*
specifier|const
name|tic30_regtab_end
init|=
name|tic30_regtab
operator|+
sizeof|sizeof
argument_list|(
name|tic30_regtab
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|tic30_regtab
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Indirect Addressing Modes Modification Fields */
end_comment

begin_comment
comment|/* Indirect Addressing with Displacement */
end_comment

begin_define
define|#
directive|define
name|PreDisp_Add
value|0x00
end_define

begin_define
define|#
directive|define
name|PreDisp_Sub
value|0x01
end_define

begin_define
define|#
directive|define
name|PreDisp_Add_Mod
value|0x02
end_define

begin_define
define|#
directive|define
name|PreDisp_Sub_Mod
value|0x03
end_define

begin_define
define|#
directive|define
name|PostDisp_Add_Mod
value|0x04
end_define

begin_define
define|#
directive|define
name|PostDisp_Sub_Mod
value|0x05
end_define

begin_define
define|#
directive|define
name|PostDisp_Add_Circ
value|0x06
end_define

begin_define
define|#
directive|define
name|PostDisp_Sub_Circ
value|0x07
end_define

begin_comment
comment|/* Indirect Addressing with Index Register IR0 */
end_comment

begin_define
define|#
directive|define
name|PreIR0_Add
value|0x08
end_define

begin_define
define|#
directive|define
name|PreIR0_Sub
value|0x09
end_define

begin_define
define|#
directive|define
name|PreIR0_Add_Mod
value|0x0A
end_define

begin_define
define|#
directive|define
name|PreIR0_Sub_Mod
value|0x0B
end_define

begin_define
define|#
directive|define
name|PostIR0_Add_Mod
value|0x0C
end_define

begin_define
define|#
directive|define
name|PostIR0_Sub_Mod
value|0x0D
end_define

begin_define
define|#
directive|define
name|PostIR0_Add_Circ
value|0x0E
end_define

begin_define
define|#
directive|define
name|PostIR0_Sub_Circ
value|0x0F
end_define

begin_comment
comment|/* Indirect Addressing with Index Register IR1 */
end_comment

begin_define
define|#
directive|define
name|PreIR1_Add
value|0x10
end_define

begin_define
define|#
directive|define
name|PreIR1_Sub
value|0x11
end_define

begin_define
define|#
directive|define
name|PreIR1_Add_Mod
value|0x12
end_define

begin_define
define|#
directive|define
name|PreIR1_Sub_Mod
value|0x13
end_define

begin_define
define|#
directive|define
name|PostIR1_Add_Mod
value|0x14
end_define

begin_define
define|#
directive|define
name|PostIR1_Sub_Mod
value|0x15
end_define

begin_define
define|#
directive|define
name|PostIR1_Add_Circ
value|0x16
end_define

begin_define
define|#
directive|define
name|PostIR1_Sub_Circ
value|0x17
end_define

begin_comment
comment|/* Indirect Addressing (Special Cases) */
end_comment

begin_define
define|#
directive|define
name|IndirectOnly
value|0x18
end_define

begin_define
define|#
directive|define
name|PostIR0_Add_BitRev
value|0x19
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|char
modifier|*
name|syntax
decl_stmt|;
name|unsigned
name|char
name|modfield
decl_stmt|;
name|unsigned
name|char
name|displacement
decl_stmt|;
block|}
name|ind_addr_type
typedef|;
end_typedef

begin_define
define|#
directive|define
name|IMPLIED_DISP
value|0x01
end_define

begin_define
define|#
directive|define
name|DISP_REQUIRED
value|0x02
end_define

begin_define
define|#
directive|define
name|NO_DISP
value|0x03
end_define

begin_decl_stmt
specifier|static
specifier|const
name|ind_addr_type
name|tic30_indaddr_tab
index|[]
init|=
block|{
block|{
literal|"*+ar"
block|,
name|PreDisp_Add
block|,
name|IMPLIED_DISP
block|}
block|,
block|{
literal|"*-ar"
block|,
name|PreDisp_Sub
block|,
name|IMPLIED_DISP
block|}
block|,
block|{
literal|"*++ar"
block|,
name|PreDisp_Add_Mod
block|,
name|IMPLIED_DISP
block|}
block|,
block|{
literal|"*--ar"
block|,
name|PreDisp_Sub_Mod
block|,
name|IMPLIED_DISP
block|}
block|,
block|{
literal|"*ar++"
block|,
name|PostDisp_Add_Mod
block|,
name|IMPLIED_DISP
block|}
block|,
block|{
literal|"*ar--"
block|,
name|PostDisp_Sub_Mod
block|,
name|IMPLIED_DISP
block|}
block|,
block|{
literal|"*ar++%"
block|,
name|PostDisp_Add_Circ
block|,
name|IMPLIED_DISP
block|}
block|,
block|{
literal|"*ar--%"
block|,
name|PostDisp_Sub_Circ
block|,
name|IMPLIED_DISP
block|}
block|,
block|{
literal|"*+ar()"
block|,
name|PreDisp_Add
block|,
name|DISP_REQUIRED
block|}
block|,
block|{
literal|"*-ar()"
block|,
name|PreDisp_Sub
block|,
name|DISP_REQUIRED
block|}
block|,
block|{
literal|"*++ar()"
block|,
name|PreDisp_Add_Mod
block|,
name|DISP_REQUIRED
block|}
block|,
block|{
literal|"*--ar()"
block|,
name|PreDisp_Sub_Mod
block|,
name|DISP_REQUIRED
block|}
block|,
block|{
literal|"*ar++()"
block|,
name|PostDisp_Add_Mod
block|,
name|DISP_REQUIRED
block|}
block|,
block|{
literal|"*ar--()"
block|,
name|PostDisp_Sub_Mod
block|,
name|DISP_REQUIRED
block|}
block|,
block|{
literal|"*ar++()%"
block|,
name|PostDisp_Add_Circ
block|,
name|DISP_REQUIRED
block|}
block|,
block|{
literal|"*ar--()%"
block|,
name|PostDisp_Sub_Circ
block|,
name|DISP_REQUIRED
block|}
block|,
block|{
literal|"*+ar(ir0)"
block|,
name|PreIR0_Add
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*-ar(ir0)"
block|,
name|PreIR0_Sub
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*++ar(ir0)"
block|,
name|PreIR0_Add_Mod
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*--ar(ir0)"
block|,
name|PreIR0_Sub_Mod
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*ar++(ir0)"
block|,
name|PostIR0_Add_Mod
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*ar--(ir0)"
block|,
name|PostIR0_Sub_Mod
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*ar++(ir0)%"
block|,
name|PostIR0_Add_Circ
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*ar--(ir0)%"
block|,
name|PostIR0_Sub_Circ
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*+ar(ir1)"
block|,
name|PreIR1_Add
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*-ar(ir1)"
block|,
name|PreIR1_Sub
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*++ar(ir1)"
block|,
name|PreIR1_Add_Mod
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*--ar(ir1)"
block|,
name|PreIR1_Sub_Mod
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*ar++(ir1)"
block|,
name|PostIR1_Add_Mod
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*ar--(ir1)"
block|,
name|PostIR1_Sub_Mod
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*ar++(ir1)%"
block|,
name|PostIR1_Add_Circ
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*ar--(ir1)%"
block|,
name|PostIR1_Sub_Circ
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*ar"
block|,
name|IndirectOnly
block|,
name|NO_DISP
block|}
block|,
block|{
literal|"*ar++(ir0)b"
block|,
name|PostIR0_Add_BitRev
block|,
name|NO_DISP
block|}
block|,
block|{
literal|""
block|,
literal|0
block|,
literal|0
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|ind_addr_type
modifier|*
specifier|const
name|tic30_indaddrtab_end
init|=
name|tic30_indaddr_tab
operator|+
sizeof|sizeof
argument_list|(
name|tic30_indaddr_tab
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|tic30_indaddr_tab
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Possible operand types */
end_comment

begin_comment
comment|/* Register types */
end_comment

begin_define
define|#
directive|define
name|Rn
value|0x0001
end_define

begin_define
define|#
directive|define
name|ARn
value|0x0002
end_define

begin_define
define|#
directive|define
name|DPReg
value|0x0004
end_define

begin_define
define|#
directive|define
name|OtherReg
value|0x0008
end_define

begin_comment
comment|/* Addressing mode types */
end_comment

begin_define
define|#
directive|define
name|Direct
value|0x0010
end_define

begin_define
define|#
directive|define
name|Indirect
value|0x0020
end_define

begin_define
define|#
directive|define
name|Imm16
value|0x0040
end_define

begin_define
define|#
directive|define
name|Disp
value|0x0080
end_define

begin_define
define|#
directive|define
name|Imm24
value|0x0100
end_define

begin_define
define|#
directive|define
name|Abs24
value|0x0200
end_define

begin_comment
comment|/* 3 operand addressing mode types */
end_comment

begin_define
define|#
directive|define
name|op3T1
value|0x0400
end_define

begin_define
define|#
directive|define
name|op3T2
value|0x0800
end_define

begin_comment
comment|/* Interrupt vector */
end_comment

begin_define
define|#
directive|define
name|IVector
value|0x1000
end_define

begin_comment
comment|/* Not required */
end_comment

begin_define
define|#
directive|define
name|NotReq
value|0x2000
end_define

begin_define
define|#
directive|define
name|GAddr1
value|Rn | Direct | Indirect | Imm16
end_define

begin_define
define|#
directive|define
name|GAddr2
value|GAddr1 | AllReg
end_define

begin_define
define|#
directive|define
name|TAddr1
value|op3T1 | Rn | Indirect
end_define

begin_define
define|#
directive|define
name|TAddr2
value|op3T2 | Rn | Indirect
end_define

begin_define
define|#
directive|define
name|Reg
value|Rn | ARn
end_define

begin_define
define|#
directive|define
name|AllReg
value|Reg | DPReg | OtherReg
end_define

begin_typedef
typedef|typedef
struct|struct
name|_template
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|unsigned
name|int
name|operands
decl_stmt|;
comment|/* how many operands */
name|unsigned
name|int
name|base_opcode
decl_stmt|;
comment|/* base_opcode is the fundamental opcode byte */
comment|/* the bits in opcode_modifier are used to generate the final opcode from      the base_opcode.  These bits also are used to detect alternate forms of      the same instruction */
name|unsigned
name|int
name|opcode_modifier
decl_stmt|;
comment|/* opcode_modifier bits: */
define|#
directive|define
name|AddressMode
value|0x00600000
define|#
directive|define
name|PCRel
value|0x02000000
define|#
directive|define
name|StackOp
value|0x001F0000
define|#
directive|define
name|Rotate
value|StackOp
comment|/* operand_types[i] describes the type of operand i.  This is made      by OR'ing together all of the possible type masks.  (e.g.      'operand_types[i] = Reg|Imm' specifies that operand i can be      either a register or an immediate operand */
name|unsigned
name|int
name|operand_types
index|[
literal|3
index|]
decl_stmt|;
comment|/* This defines the number type of an immediate argument to an instruction. */
name|int
name|imm_arg_type
decl_stmt|;
define|#
directive|define
name|Imm_None
value|0
define|#
directive|define
name|Imm_Float
value|1
define|#
directive|define
name|Imm_SInt
value|2
define|#
directive|define
name|Imm_UInt
value|3
block|}
name|template
typedef|;
end_typedef

begin_decl_stmt
specifier|static
specifier|const
name|template
name|tic30_optab
index|[]
init|=
block|{
block|{
literal|"absf"
block|,
literal|2
block|,
literal|0x00000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"absi"
block|,
literal|2
block|,
literal|0x00800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"addc"
block|,
literal|2
block|,
literal|0x01000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"addc3"
block|,
literal|3
block|,
literal|0x20000000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
name|AllReg
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"addf"
block|,
literal|2
block|,
literal|0x01800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"addf3"
block|,
literal|3
block|,
literal|0x20800000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
block|,
name|TAddr2
block|,
name|Rn
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"addi"
block|,
literal|2
block|,
literal|0x02000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"addi3"
block|,
literal|3
block|,
literal|0x21000000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
name|AllReg
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"and"
block|,
literal|2
block|,
literal|0x02800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"and3"
block|,
literal|3
block|,
literal|0x21800000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
name|AllReg
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"andn"
block|,
literal|2
block|,
literal|0x03000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"andn3"
block|,
literal|3
block|,
literal|0x22000000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
name|AllReg
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"ash"
block|,
literal|2
block|,
literal|0x03800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ash3"
block|,
literal|3
block|,
literal|0x22800000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
name|AllReg
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"b"
block|,
literal|1
block|,
literal|0x68000000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bu"
block|,
literal|1
block|,
literal|0x68000000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"blo"
block|,
literal|1
block|,
literal|0x68010000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bls"
block|,
literal|1
block|,
literal|0x68020000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bhi"
block|,
literal|1
block|,
literal|0x68030000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bhs"
block|,
literal|1
block|,
literal|0x68040000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"beq"
block|,
literal|1
block|,
literal|0x68050000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bne"
block|,
literal|1
block|,
literal|0x68060000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"blt"
block|,
literal|1
block|,
literal|0x68070000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"ble"
block|,
literal|1
block|,
literal|0x68080000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bgt"
block|,
literal|1
block|,
literal|0x68090000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bge"
block|,
literal|1
block|,
literal|0x680A0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bz"
block|,
literal|1
block|,
literal|0x68050000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnz"
block|,
literal|1
block|,
literal|0x68060000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bp"
block|,
literal|1
block|,
literal|0x68090000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bn"
block|,
literal|1
block|,
literal|0x68070000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnn"
block|,
literal|1
block|,
literal|0x680A0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnv"
block|,
literal|1
block|,
literal|0x680C0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bv"
block|,
literal|1
block|,
literal|0x680D0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnuf"
block|,
literal|1
block|,
literal|0x680E0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"buf"
block|,
literal|1
block|,
literal|0x680F0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnc"
block|,
literal|1
block|,
literal|0x68040000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bc"
block|,
literal|1
block|,
literal|0x68010000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnlv"
block|,
literal|1
block|,
literal|0x68100000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"blv"
block|,
literal|1
block|,
literal|0x68110000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnluf"
block|,
literal|1
block|,
literal|0x68120000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bluf"
block|,
literal|1
block|,
literal|0x68130000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bzuf"
block|,
literal|1
block|,
literal|0x68140000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bd"
block|,
literal|1
block|,
literal|0x68200000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bud"
block|,
literal|1
block|,
literal|0x68200000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"blod"
block|,
literal|1
block|,
literal|0x68210000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"blsd"
block|,
literal|1
block|,
literal|0x68220000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bhid"
block|,
literal|1
block|,
literal|0x68230000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bhsd"
block|,
literal|1
block|,
literal|0x68240000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"beqd"
block|,
literal|1
block|,
literal|0x68250000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bned"
block|,
literal|1
block|,
literal|0x68260000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bltd"
block|,
literal|1
block|,
literal|0x68270000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bled"
block|,
literal|1
block|,
literal|0x68280000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bgtd"
block|,
literal|1
block|,
literal|0x68290000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bged"
block|,
literal|1
block|,
literal|0x682A0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bzd"
block|,
literal|1
block|,
literal|0x68250000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnzd"
block|,
literal|1
block|,
literal|0x68260000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bpd"
block|,
literal|1
block|,
literal|0x68290000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnd"
block|,
literal|1
block|,
literal|0x68270000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnnd"
block|,
literal|1
block|,
literal|0x682A0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnvd"
block|,
literal|1
block|,
literal|0x682C0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bvd"
block|,
literal|1
block|,
literal|0x682D0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnufd"
block|,
literal|1
block|,
literal|0x682E0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bufd"
block|,
literal|1
block|,
literal|0x682F0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bncd"
block|,
literal|1
block|,
literal|0x68240000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bcd"
block|,
literal|1
block|,
literal|0x68210000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnlvd"
block|,
literal|1
block|,
literal|0x68300000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"blvd"
block|,
literal|1
block|,
literal|0x68310000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bnlufd"
block|,
literal|1
block|,
literal|0x68320000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"blufd"
block|,
literal|1
block|,
literal|0x68330000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"bzufd"
block|,
literal|1
block|,
literal|0x68340000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"br"
block|,
literal|1
block|,
literal|0x60000000
block|,
literal|0
block|,
block|{
name|Imm24
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"brd"
block|,
literal|1
block|,
literal|0x61000000
block|,
literal|0
block|,
block|{
name|Imm24
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"call"
block|,
literal|1
block|,
literal|0x62000000
block|,
literal|0
block|,
block|{
name|Imm24
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callu"
block|,
literal|1
block|,
literal|0x70000000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"calllo"
block|,
literal|1
block|,
literal|0x70010000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callls"
block|,
literal|1
block|,
literal|0x70020000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callhi"
block|,
literal|1
block|,
literal|0x70030000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callhs"
block|,
literal|1
block|,
literal|0x70040000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"calleq"
block|,
literal|1
block|,
literal|0x70050000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callne"
block|,
literal|1
block|,
literal|0x70060000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"calllt"
block|,
literal|1
block|,
literal|0x70070000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callle"
block|,
literal|1
block|,
literal|0x70080000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callgt"
block|,
literal|1
block|,
literal|0x70090000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callge"
block|,
literal|1
block|,
literal|0x700A0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callz"
block|,
literal|1
block|,
literal|0x70050000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callnz"
block|,
literal|1
block|,
literal|0x70060000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callp"
block|,
literal|1
block|,
literal|0x70090000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"calln"
block|,
literal|1
block|,
literal|0x70070000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callnn"
block|,
literal|1
block|,
literal|0x700A0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callnv"
block|,
literal|1
block|,
literal|0x700C0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callv"
block|,
literal|1
block|,
literal|0x700D0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callnuf"
block|,
literal|1
block|,
literal|0x700E0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"calluf"
block|,
literal|1
block|,
literal|0x700F0000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callnc"
block|,
literal|1
block|,
literal|0x70040000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callc"
block|,
literal|1
block|,
literal|0x70010000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callnlv"
block|,
literal|1
block|,
literal|0x70100000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"calllv"
block|,
literal|1
block|,
literal|0x70110000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callnluf"
block|,
literal|1
block|,
literal|0x70120000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callluf"
block|,
literal|1
block|,
literal|0x70130000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"callzuf"
block|,
literal|1
block|,
literal|0x70140000
block|,
name|PCRel
block|,
block|{
name|AllReg
operator||
name|Disp
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"cmpf"
block|,
literal|2
block|,
literal|0x04000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"cmpf3"
block|,
literal|2
block|,
literal|0x23000000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
block|,
name|TAddr2
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"cmpi"
block|,
literal|2
block|,
literal|0x04800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"cmpi3"
block|,
literal|2
block|,
literal|0x23800000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"db"
block|,
literal|2
block|,
literal|0x6C000000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbu"
block|,
literal|2
block|,
literal|0x6C000000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dblo"
block|,
literal|2
block|,
literal|0x6C010000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbls"
block|,
literal|2
block|,
literal|0x6C020000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbhi"
block|,
literal|2
block|,
literal|0x6C030000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbhs"
block|,
literal|2
block|,
literal|0x6C040000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbeq"
block|,
literal|2
block|,
literal|0x6C050000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbne"
block|,
literal|2
block|,
literal|0x6C060000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dblt"
block|,
literal|2
block|,
literal|0x6C070000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dble"
block|,
literal|2
block|,
literal|0x6C080000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbgt"
block|,
literal|2
block|,
literal|0x6C090000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbge"
block|,
literal|2
block|,
literal|0x6C0A0000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbz"
block|,
literal|2
block|,
literal|0x6C050000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnz"
block|,
literal|2
block|,
literal|0x6C060000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbp"
block|,
literal|2
block|,
literal|0x6C090000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbn"
block|,
literal|2
block|,
literal|0x6C070000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnn"
block|,
literal|2
block|,
literal|0x6C0A0000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnv"
block|,
literal|2
block|,
literal|0x6C0C0000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbv"
block|,
literal|2
block|,
literal|0x6C0D0000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnuf"
block|,
literal|2
block|,
literal|0x6C0E0000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbuf"
block|,
literal|2
block|,
literal|0x6C0F0000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnc"
block|,
literal|2
block|,
literal|0x6C040000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbc"
block|,
literal|2
block|,
literal|0x6C010000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnlv"
block|,
literal|2
block|,
literal|0x6C100000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dblv"
block|,
literal|2
block|,
literal|0x6C110000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnluf"
block|,
literal|2
block|,
literal|0x6C120000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbluf"
block|,
literal|2
block|,
literal|0x6C130000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbzuf"
block|,
literal|2
block|,
literal|0x6C140000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbd"
block|,
literal|2
block|,
literal|0x6C200000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbud"
block|,
literal|2
block|,
literal|0x6C200000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dblod"
block|,
literal|2
block|,
literal|0x6C210000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dblsd"
block|,
literal|2
block|,
literal|0x6C220000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbhid"
block|,
literal|2
block|,
literal|0x6C230000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbhsd"
block|,
literal|2
block|,
literal|0x6C240000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbeqd"
block|,
literal|2
block|,
literal|0x6C250000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbned"
block|,
literal|2
block|,
literal|0x6C260000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbltd"
block|,
literal|2
block|,
literal|0x6C270000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbled"
block|,
literal|2
block|,
literal|0x6C280000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbgtd"
block|,
literal|2
block|,
literal|0x6C290000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbged"
block|,
literal|2
block|,
literal|0x6C2A0000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbzd"
block|,
literal|2
block|,
literal|0x6C250000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnzd"
block|,
literal|2
block|,
literal|0x6C260000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbpd"
block|,
literal|2
block|,
literal|0x6C290000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnd"
block|,
literal|2
block|,
literal|0x6C270000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnnd"
block|,
literal|2
block|,
literal|0x6C2A0000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnvd"
block|,
literal|2
block|,
literal|0x6C2C0000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbvd"
block|,
literal|2
block|,
literal|0x6C2D0000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnufd"
block|,
literal|2
block|,
literal|0x6C2E0000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbufd"
block|,
literal|2
block|,
literal|0x6C2F0000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbncd"
block|,
literal|2
block|,
literal|0x6C240000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbcd"
block|,
literal|2
block|,
literal|0x6C210000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnlvd"
block|,
literal|2
block|,
literal|0x6C300000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dblvd"
block|,
literal|2
block|,
literal|0x6C310000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbnlufd"
block|,
literal|2
block|,
literal|0x6C320000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dblufd"
block|,
literal|2
block|,
literal|0x6C330000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"dbzufd"
block|,
literal|2
block|,
literal|0x6C340000
block|,
name|PCRel
block|,
block|{
name|ARn
block|,
name|AllReg
operator||
name|Disp
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"fix"
block|,
literal|2
block|,
literal|0x05000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"float"
block|,
literal|2
block|,
literal|0x05800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"iack"
block|,
literal|1
block|,
literal|0x1B000000
block|,
name|AddressMode
block|,
block|{
name|Direct
operator||
name|Indirect
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"idle"
block|,
literal|0
block|,
literal|0x06000000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"idle2"
block|,
literal|0
block|,
literal|0x06000001
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
comment|/* LC31 Only */
block|{
literal|"lde"
block|,
literal|2
block|,
literal|0x06800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldf"
block|,
literal|2
block|,
literal|0x07000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfu"
block|,
literal|2
block|,
literal|0x40000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldflo"
block|,
literal|2
block|,
literal|0x40800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfls"
block|,
literal|2
block|,
literal|0x41000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfhi"
block|,
literal|2
block|,
literal|0x41800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfhs"
block|,
literal|2
block|,
literal|0x42000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfeq"
block|,
literal|2
block|,
literal|0x42800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfne"
block|,
literal|2
block|,
literal|0x43000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldflt"
block|,
literal|2
block|,
literal|0x43800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfle"
block|,
literal|2
block|,
literal|0x44000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfgt"
block|,
literal|2
block|,
literal|0x44800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfge"
block|,
literal|2
block|,
literal|0x45000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfz"
block|,
literal|2
block|,
literal|0x42800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfnz"
block|,
literal|2
block|,
literal|0x43000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfp"
block|,
literal|2
block|,
literal|0x44800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfn"
block|,
literal|2
block|,
literal|0x43800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfnn"
block|,
literal|2
block|,
literal|0x45000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfnv"
block|,
literal|2
block|,
literal|0x46000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfv"
block|,
literal|2
block|,
literal|0x46800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfnuf"
block|,
literal|2
block|,
literal|0x47000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfuf"
block|,
literal|2
block|,
literal|0x47800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfnc"
block|,
literal|2
block|,
literal|0x42000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfc"
block|,
literal|2
block|,
literal|0x40800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfnlv"
block|,
literal|2
block|,
literal|0x48000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldflv"
block|,
literal|2
block|,
literal|0x48800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfnluf"
block|,
literal|2
block|,
literal|0x49000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfluf"
block|,
literal|2
block|,
literal|0x49800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfzuf"
block|,
literal|2
block|,
literal|0x4A000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldfi"
block|,
literal|2
block|,
literal|0x07800000
block|,
name|AddressMode
block|,
block|{
name|Direct
operator||
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"ldi"
block|,
literal|2
block|,
literal|0x08000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldiu"
block|,
literal|2
block|,
literal|0x50000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldilo"
block|,
literal|2
block|,
literal|0x50800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldils"
block|,
literal|2
block|,
literal|0x51000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldihi"
block|,
literal|2
block|,
literal|0x51800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldihs"
block|,
literal|2
block|,
literal|0x52000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldieq"
block|,
literal|2
block|,
literal|0x52800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldine"
block|,
literal|2
block|,
literal|0x53000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldilt"
block|,
literal|2
block|,
literal|0x53800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldile"
block|,
literal|2
block|,
literal|0x54000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldigt"
block|,
literal|2
block|,
literal|0x54800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldige"
block|,
literal|2
block|,
literal|0x55000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldiz"
block|,
literal|2
block|,
literal|0x52800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldinz"
block|,
literal|2
block|,
literal|0x53000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldip"
block|,
literal|2
block|,
literal|0x54800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldin"
block|,
literal|2
block|,
literal|0x53800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldinn"
block|,
literal|2
block|,
literal|0x55000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldinv"
block|,
literal|2
block|,
literal|0x56000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldiv"
block|,
literal|2
block|,
literal|0x56800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldinuf"
block|,
literal|2
block|,
literal|0x57000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldiuf"
block|,
literal|2
block|,
literal|0x57800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldinc"
block|,
literal|2
block|,
literal|0x52000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldic"
block|,
literal|2
block|,
literal|0x50800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldinlv"
block|,
literal|2
block|,
literal|0x58000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldilv"
block|,
literal|2
block|,
literal|0x58800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldinluf"
block|,
literal|2
block|,
literal|0x59000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldiluf"
block|,
literal|2
block|,
literal|0x59800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldizuf"
block|,
literal|2
block|,
literal|0x5A000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"ldii"
block|,
literal|2
block|,
literal|0x08800000
block|,
name|AddressMode
block|,
block|{
name|Direct
operator||
name|Indirect
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"ldm"
block|,
literal|2
block|,
literal|0x09000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"ldp"
block|,
literal|2
block|,
literal|0x08700000
block|,
literal|0
block|,
block|{
name|Abs24
operator||
name|Direct
block|,
name|DPReg
operator||
name|NotReq
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"lopower"
block|,
literal|0
block|,
literal|0x10800001
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
comment|/* LC31 Only */
block|{
literal|"lsh"
block|,
literal|2
block|,
literal|0x09800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"lsh3"
block|,
literal|3
block|,
literal|0x24000000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
name|AllReg
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"maxspeed"
block|,
literal|0
block|,
literal|0x10800000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
comment|/* LC31 Only */
block|{
literal|"mpyf"
block|,
literal|2
block|,
literal|0x0A000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"mpyf3"
block|,
literal|3
block|,
literal|0x24800000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
block|,
name|TAddr2
block|,
name|Rn
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"mpyi"
block|,
literal|2
block|,
literal|0x0A800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"mpyi3"
block|,
literal|3
block|,
literal|0x25000000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
name|AllReg
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"negb"
block|,
literal|2
block|,
literal|0x0B000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"negf"
block|,
literal|2
block|,
literal|0x0B800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"negi"
block|,
literal|2
block|,
literal|0x0C000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"nop"
block|,
literal|1
block|,
literal|0x0C800000
block|,
name|AddressMode
block|,
block|{
name|AllReg
operator||
name|Indirect
operator||
name|NotReq
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"norm"
block|,
literal|2
block|,
literal|0x0D000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
comment|/*Check another source*/
block|{
literal|"not"
block|,
literal|2
block|,
literal|0x0D800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"or"
block|,
literal|2
block|,
literal|0x10000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"or3"
block|,
literal|3
block|,
literal|0x25800000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
name|AllReg
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"pop"
block|,
literal|1
block|,
literal|0x0E200000
block|,
name|StackOp
block|,
block|{
name|AllReg
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"popf"
block|,
literal|1
block|,
literal|0x0EA00000
block|,
name|StackOp
block|,
block|{
name|Rn
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"push"
block|,
literal|1
block|,
literal|0x0F200000
block|,
name|StackOp
block|,
block|{
name|AllReg
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"pushf"
block|,
literal|1
block|,
literal|0x0FA00000
block|,
name|StackOp
block|,
block|{
name|Rn
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"reti"
block|,
literal|0
block|,
literal|0x78000000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retiu"
block|,
literal|0
block|,
literal|0x78000000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retilo"
block|,
literal|0
block|,
literal|0x78010000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retils"
block|,
literal|0
block|,
literal|0x78020000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retihi"
block|,
literal|0
block|,
literal|0x78030000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retihs"
block|,
literal|0
block|,
literal|0x78040000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retieq"
block|,
literal|0
block|,
literal|0x78050000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retine"
block|,
literal|0
block|,
literal|0x78060000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retilt"
block|,
literal|0
block|,
literal|0x78070000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retile"
block|,
literal|0
block|,
literal|0x78080000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retigt"
block|,
literal|0
block|,
literal|0x78090000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retige"
block|,
literal|0
block|,
literal|0x780A0000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retiz"
block|,
literal|0
block|,
literal|0x78050000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retinz"
block|,
literal|0
block|,
literal|0x78060000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retip"
block|,
literal|0
block|,
literal|0x78090000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retin"
block|,
literal|0
block|,
literal|0x78070000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retinn"
block|,
literal|0
block|,
literal|0x780A0000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retinv"
block|,
literal|0
block|,
literal|0x780C0000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retiv"
block|,
literal|0
block|,
literal|0x780D0000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retinuf"
block|,
literal|0
block|,
literal|0x780E0000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retiuf"
block|,
literal|0
block|,
literal|0x780F0000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retinc"
block|,
literal|0
block|,
literal|0x78040000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retic"
block|,
literal|0
block|,
literal|0x78010000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retinlv"
block|,
literal|0
block|,
literal|0x78100000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retilv"
block|,
literal|0
block|,
literal|0x78110000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retinluf"
block|,
literal|0
block|,
literal|0x78120000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retiluf"
block|,
literal|0
block|,
literal|0x78130000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retizuf"
block|,
literal|0
block|,
literal|0x78140000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"rets"
block|,
literal|0
block|,
literal|0x78800000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsu"
block|,
literal|0
block|,
literal|0x78800000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retslo"
block|,
literal|0
block|,
literal|0x78810000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsls"
block|,
literal|0
block|,
literal|0x78820000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retshi"
block|,
literal|0
block|,
literal|0x78830000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retshs"
block|,
literal|0
block|,
literal|0x78840000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retseq"
block|,
literal|0
block|,
literal|0x78850000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsne"
block|,
literal|0
block|,
literal|0x78860000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retslt"
block|,
literal|0
block|,
literal|0x78870000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsle"
block|,
literal|0
block|,
literal|0x78880000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsgt"
block|,
literal|0
block|,
literal|0x78890000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsge"
block|,
literal|0
block|,
literal|0x788A0000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsz"
block|,
literal|0
block|,
literal|0x78850000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsnz"
block|,
literal|0
block|,
literal|0x78860000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsp"
block|,
literal|0
block|,
literal|0x78890000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsn"
block|,
literal|0
block|,
literal|0x78870000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsnn"
block|,
literal|0
block|,
literal|0x788A0000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsnv"
block|,
literal|0
block|,
literal|0x788C0000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsv"
block|,
literal|0
block|,
literal|0x788D0000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsnuf"
block|,
literal|0
block|,
literal|0x788E0000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsuf"
block|,
literal|0
block|,
literal|0x788F0000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsnc"
block|,
literal|0
block|,
literal|0x78840000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsc"
block|,
literal|0
block|,
literal|0x78810000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsnlv"
block|,
literal|0
block|,
literal|0x78900000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retslv"
block|,
literal|0
block|,
literal|0x78910000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsnluf"
block|,
literal|0
block|,
literal|0x78920000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retsluf"
block|,
literal|0
block|,
literal|0x78930000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"retszuf"
block|,
literal|0
block|,
literal|0x78940000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"rnd"
block|,
literal|2
block|,
literal|0x11000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"rol"
block|,
literal|1
block|,
literal|0x11E00001
block|,
name|Rotate
block|,
block|{
name|AllReg
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"rolc"
block|,
literal|1
block|,
literal|0x12600001
block|,
name|Rotate
block|,
block|{
name|AllReg
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"ror"
block|,
literal|1
block|,
literal|0x12E0FFFF
block|,
name|Rotate
block|,
block|{
name|AllReg
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"rorc"
block|,
literal|1
block|,
literal|0x1360FFFF
block|,
name|Rotate
block|,
block|{
name|AllReg
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"rptb"
block|,
literal|1
block|,
literal|0x64000000
block|,
literal|0
block|,
block|{
name|Imm24
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"rpts"
block|,
literal|1
block|,
literal|0x139B0000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"sigi"
block|,
literal|0
block|,
literal|0x16000000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"stf"
block|,
literal|2
block|,
literal|0x14000000
block|,
name|AddressMode
block|,
block|{
name|Rn
block|,
name|Direct
operator||
name|Indirect
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"stfi"
block|,
literal|2
block|,
literal|0x14800000
block|,
name|AddressMode
block|,
block|{
name|Rn
block|,
name|Direct
operator||
name|Indirect
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"sti"
block|,
literal|2
block|,
literal|0x15000000
block|,
name|AddressMode
block|,
block|{
name|AllReg
block|,
name|Direct
operator||
name|Indirect
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"stii"
block|,
literal|2
block|,
literal|0x15800000
block|,
name|AddressMode
block|,
block|{
name|AllReg
block|,
name|Direct
operator||
name|Indirect
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"subb"
block|,
literal|2
block|,
literal|0x16800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"subb3"
block|,
literal|3
block|,
literal|0x26000000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
name|AllReg
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"subc"
block|,
literal|2
block|,
literal|0x17000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"subf"
block|,
literal|2
block|,
literal|0x17800000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"subf3"
block|,
literal|3
block|,
literal|0x26800000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
block|,
name|TAddr2
block|,
name|Rn
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"subi"
block|,
literal|2
block|,
literal|0x18000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"subi3"
block|,
literal|3
block|,
literal|0x27000000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
name|AllReg
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"subrb"
block|,
literal|2
block|,
literal|0x18800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"subrf"
block|,
literal|2
block|,
literal|0x19000000
block|,
name|AddressMode
block|,
block|{
name|GAddr1
block|,
name|Rn
block|,
literal|0
block|}
block|,
name|Imm_Float
block|}
block|,
block|{
literal|"subri"
block|,
literal|2
block|,
literal|0x19800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_SInt
block|}
block|,
block|{
literal|"swi"
block|,
literal|0
block|,
literal|0x66000000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trap"
block|,
literal|1
block|,
literal|0x74800020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapu"
block|,
literal|1
block|,
literal|0x74800020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"traplo"
block|,
literal|1
block|,
literal|0x74810020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapls"
block|,
literal|1
block|,
literal|0x74820020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"traphi"
block|,
literal|1
block|,
literal|0x74830020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"traphs"
block|,
literal|1
block|,
literal|0x74840020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapeq"
block|,
literal|1
block|,
literal|0x74850020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapne"
block|,
literal|1
block|,
literal|0x74860020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"traplt"
block|,
literal|1
block|,
literal|0x74870020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"traple"
block|,
literal|1
block|,
literal|0x74880020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapgt"
block|,
literal|1
block|,
literal|0x74890020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapge"
block|,
literal|1
block|,
literal|0x748A0020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapz"
block|,
literal|1
block|,
literal|0x74850020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapnz"
block|,
literal|1
block|,
literal|0x74860020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapp"
block|,
literal|1
block|,
literal|0x74890020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapn"
block|,
literal|1
block|,
literal|0x74870020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapnn"
block|,
literal|1
block|,
literal|0x748A0020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapnv"
block|,
literal|1
block|,
literal|0x748C0020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapv"
block|,
literal|1
block|,
literal|0x748D0020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapnuf"
block|,
literal|1
block|,
literal|0x748E0020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapuf"
block|,
literal|1
block|,
literal|0x748F0020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapnc"
block|,
literal|1
block|,
literal|0x74840020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapc"
block|,
literal|1
block|,
literal|0x74810020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapnlv"
block|,
literal|1
block|,
literal|0x74900020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"traplv"
block|,
literal|1
block|,
literal|0x74910020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapnluf"
block|,
literal|1
block|,
literal|0x74920020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapluf"
block|,
literal|1
block|,
literal|0x74930020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"trapzuf"
block|,
literal|1
block|,
literal|0x74940020
block|,
literal|0
block|,
block|{
name|IVector
block|,
literal|0
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"tstb"
block|,
literal|2
block|,
literal|0x1A000000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"tstb3"
block|,
literal|2
block|,
literal|0x27800000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|"xor"
block|,
literal|2
block|,
literal|0x1A800000
block|,
name|AddressMode
block|,
block|{
name|GAddr2
block|,
name|AllReg
block|,
literal|0
block|}
block|,
name|Imm_UInt
block|}
block|,
block|{
literal|"xor3"
block|,
literal|3
block|,
literal|0x28000000
block|,
name|AddressMode
block|,
block|{
name|TAddr1
operator||
name|AllReg
block|,
name|TAddr2
operator||
name|AllReg
block|,
name|AllReg
block|}
block|,
name|Imm_None
block|}
block|,
block|{
literal|""
block|,
literal|0
block|,
literal|0x00000000
block|,
literal|0
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
literal|0
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|template
modifier|*
specifier|const
name|tic30_optab_end
init|=
name|tic30_optab
operator|+
sizeof|sizeof
argument_list|(
name|tic30_optab
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|tic30_optab
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
struct|struct
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|unsigned
name|int
name|operands_1
decl_stmt|;
name|unsigned
name|int
name|operands_2
decl_stmt|;
name|unsigned
name|int
name|base_opcode
decl_stmt|;
name|unsigned
name|int
name|operand_types
index|[
literal|2
index|]
index|[
literal|3
index|]
decl_stmt|;
comment|/* Which operand fits into which part of the final opcode word. */
name|int
name|oporder
decl_stmt|;
block|}
name|partemplate
typedef|;
end_typedef

begin_comment
comment|/* oporder defines - not very descriptive. */
end_comment

begin_define
define|#
directive|define
name|OO_4op1
value|0
end_define

begin_define
define|#
directive|define
name|OO_4op2
value|1
end_define

begin_define
define|#
directive|define
name|OO_4op3
value|2
end_define

begin_define
define|#
directive|define
name|OO_5op1
value|3
end_define

begin_define
define|#
directive|define
name|OO_5op2
value|4
end_define

begin_define
define|#
directive|define
name|OO_PField
value|5
end_define

begin_decl_stmt
specifier|static
specifier|const
name|partemplate
name|tic30_paroptab
index|[]
init|=
block|{
block|{
literal|"q_absf_stf"
block|,
literal|2
block|,
literal|2
block|,
literal|0xC8000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_4op1
block|}
block|,
block|{
literal|"q_absi_sti"
block|,
literal|2
block|,
literal|2
block|,
literal|0xCA000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_4op1
block|}
block|,
block|{
literal|"q_addf3_stf"
block|,
literal|3
block|,
literal|2
block|,
literal|0xCC000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
name|Rn
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_5op1
block|}
block|,
block|{
literal|"q_addi3_sti"
block|,
literal|3
block|,
literal|2
block|,
literal|0xCE000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
name|Rn
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_5op1
block|}
block|,
block|{
literal|"q_and3_sti"
block|,
literal|3
block|,
literal|2
block|,
literal|0xD0000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
name|Rn
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_5op1
block|}
block|,
block|{
literal|"q_ash3_sti"
block|,
literal|3
block|,
literal|2
block|,
literal|0xD2000000
block|,
block|{
block|{
name|Rn
block|,
name|Indirect
block|,
name|Rn
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_5op2
block|}
block|,
block|{
literal|"q_fix_sti"
block|,
literal|2
block|,
literal|2
block|,
literal|0xD4000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_4op1
block|}
block|,
block|{
literal|"q_float_stf"
block|,
literal|2
block|,
literal|2
block|,
literal|0xD6000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_4op1
block|}
block|,
block|{
literal|"q_ldf_ldf"
block|,
literal|2
block|,
literal|2
block|,
literal|0xC4000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|,
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|}
block|,
name|OO_4op2
block|}
block|,
block|{
literal|"q_ldf_stf"
block|,
literal|2
block|,
literal|2
block|,
literal|0xD8000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_4op1
block|}
block|,
block|{
literal|"q_ldi_ldi"
block|,
literal|2
block|,
literal|2
block|,
literal|0xC6000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|,
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|}
block|,
name|OO_4op2
block|}
block|,
block|{
literal|"q_ldi_sti"
block|,
literal|2
block|,
literal|2
block|,
literal|0xDA000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_4op1
block|}
block|,
block|{
literal|"q_lsh3_sti"
block|,
literal|3
block|,
literal|2
block|,
literal|0xDC000000
block|,
block|{
block|{
name|Rn
block|,
name|Indirect
block|,
name|Rn
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_5op2
block|}
block|,
block|{
literal|"q_mpyf3_addf3"
block|,
literal|3
block|,
literal|3
block|,
literal|0x80000000
block|,
block|{
block|{
name|Rn
operator||
name|Indirect
block|,
name|Rn
operator||
name|Indirect
block|,
name|Rn
block|}
block|,
block|{
name|Rn
operator||
name|Indirect
block|,
name|Rn
operator||
name|Indirect
block|,
name|Rn
block|}
block|}
block|,
name|OO_PField
block|}
block|,
block|{
literal|"q_mpyf3_stf"
block|,
literal|3
block|,
literal|2
block|,
literal|0xDE000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
name|Rn
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_5op1
block|}
block|,
block|{
literal|"q_mpyf3_subf3"
block|,
literal|3
block|,
literal|3
block|,
literal|0x84000000
block|,
block|{
block|{
name|Rn
operator||
name|Indirect
block|,
name|Rn
operator||
name|Indirect
block|,
name|Rn
block|}
block|,
block|{
name|Rn
operator||
name|Indirect
block|,
name|Rn
operator||
name|Indirect
block|,
name|Rn
block|}
block|}
block|,
name|OO_PField
block|}
block|,
block|{
literal|"q_mpyi3_addi3"
block|,
literal|3
block|,
literal|3
block|,
literal|0x88000000
block|,
block|{
block|{
name|Rn
operator||
name|Indirect
block|,
name|Rn
operator||
name|Indirect
block|,
name|Rn
block|}
block|,
block|{
name|Rn
operator||
name|Indirect
block|,
name|Rn
operator||
name|Indirect
block|,
name|Rn
block|}
block|}
block|,
name|OO_PField
block|}
block|,
block|{
literal|"q_mpyi3_sti"
block|,
literal|3
block|,
literal|2
block|,
literal|0xE0000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
name|Rn
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_5op1
block|}
block|,
block|{
literal|"q_mpyi3_subi3"
block|,
literal|3
block|,
literal|3
block|,
literal|0x8C000000
block|,
block|{
block|{
name|Rn
operator||
name|Indirect
block|,
name|Rn
operator||
name|Indirect
block|,
name|Rn
block|}
block|,
block|{
name|Rn
operator||
name|Indirect
block|,
name|Rn
operator||
name|Indirect
block|,
name|Rn
block|}
block|}
block|,
name|OO_PField
block|}
block|,
block|{
literal|"q_negf_stf"
block|,
literal|2
block|,
literal|2
block|,
literal|0xE2000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_4op1
block|}
block|,
block|{
literal|"q_negi_sti"
block|,
literal|2
block|,
literal|2
block|,
literal|0xE4000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_4op1
block|}
block|,
block|{
literal|"q_not_sti"
block|,
literal|2
block|,
literal|2
block|,
literal|0xE6000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
literal|0
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_4op1
block|}
block|,
block|{
literal|"q_or3_sti"
block|,
literal|3
block|,
literal|2
block|,
literal|0xE8000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
name|Rn
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_5op1
block|}
block|,
block|{
literal|"q_stf_stf"
block|,
literal|2
block|,
literal|2
block|,
literal|0xC0000000
block|,
block|{
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_4op3
block|}
block|,
block|{
literal|"q_sti_sti"
block|,
literal|2
block|,
literal|2
block|,
literal|0xC2000000
block|,
block|{
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_4op3
block|}
block|,
block|{
literal|"q_subf3_stf"
block|,
literal|3
block|,
literal|2
block|,
literal|0xEA000000
block|,
block|{
block|{
name|Rn
block|,
name|Indirect
block|,
name|Rn
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_5op2
block|}
block|,
block|{
literal|"q_subi3_sti"
block|,
literal|3
block|,
literal|2
block|,
literal|0xEC000000
block|,
block|{
block|{
name|Rn
block|,
name|Indirect
block|,
name|Rn
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_5op2
block|}
block|,
block|{
literal|"q_xor3_sti"
block|,
literal|3
block|,
literal|2
block|,
literal|0xEE000000
block|,
block|{
block|{
name|Indirect
block|,
name|Rn
block|,
name|Rn
block|}
block|,
block|{
name|Rn
block|,
name|Indirect
block|,
literal|0
block|}
block|}
block|,
name|OO_5op1
block|}
block|,
block|{
literal|""
block|,
literal|0
block|,
literal|0
block|,
literal|0x00000000
block|,
block|{
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|}
block|,
literal|0
block|}
block|}
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|const
name|partemplate
modifier|*
specifier|const
name|tic30_paroptab_end
init|=
name|tic30_paroptab
operator|+
sizeof|sizeof
argument_list|(
name|tic30_paroptab
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|tic30_paroptab
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

