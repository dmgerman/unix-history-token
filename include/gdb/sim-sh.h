begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* This file defines the interface between the sh simulator and gdb.    Copyright (C) 2000, 2002, 2004 Free Software Foundation, Inc.  This file is part of GDB.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|SIM_SH_H
argument_list|)
end_if

begin_define
define|#
directive|define
name|SIM_SH_H
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
comment|// }
endif|#
directive|endif
comment|/* The simulator makes use of the following register information. */
enum|enum
block|{
name|SIM_SH_R0_REGNUM
init|=
literal|0
block|,
name|SIM_SH_R1_REGNUM
block|,
name|SIM_SH_R2_REGNUM
block|,
name|SIM_SH_R3_REGNUM
block|,
name|SIM_SH_R4_REGNUM
block|,
name|SIM_SH_R5_REGNUM
block|,
name|SIM_SH_R6_REGNUM
block|,
name|SIM_SH_R7_REGNUM
block|,
name|SIM_SH_R8_REGNUM
block|,
name|SIM_SH_R9_REGNUM
block|,
name|SIM_SH_R10_REGNUM
block|,
name|SIM_SH_R11_REGNUM
block|,
name|SIM_SH_R12_REGNUM
block|,
name|SIM_SH_R13_REGNUM
block|,
name|SIM_SH_R14_REGNUM
block|,
name|SIM_SH_R15_REGNUM
block|,
name|SIM_SH_PC_REGNUM
block|,
name|SIM_SH_PR_REGNUM
block|,
name|SIM_SH_GBR_REGNUM
block|,
name|SIM_SH_VBR_REGNUM
block|,
name|SIM_SH_MACH_REGNUM
block|,
name|SIM_SH_MACL_REGNUM
block|,
name|SIM_SH_SR_REGNUM
block|,
name|SIM_SH_FPUL_REGNUM
block|,
name|SIM_SH_FPSCR_REGNUM
block|,
name|SIM_SH_FR0_REGNUM
block|,
comment|/* FRn registers: sh3e / sh4 */
name|SIM_SH_FR1_REGNUM
block|,
name|SIM_SH_FR2_REGNUM
block|,
name|SIM_SH_FR3_REGNUM
block|,
name|SIM_SH_FR4_REGNUM
block|,
name|SIM_SH_FR5_REGNUM
block|,
name|SIM_SH_FR6_REGNUM
block|,
name|SIM_SH_FR7_REGNUM
block|,
name|SIM_SH_FR8_REGNUM
block|,
name|SIM_SH_FR9_REGNUM
block|,
name|SIM_SH_FR10_REGNUM
block|,
name|SIM_SH_FR11_REGNUM
block|,
name|SIM_SH_FR12_REGNUM
block|,
name|SIM_SH_FR13_REGNUM
block|,
name|SIM_SH_FR14_REGNUM
block|,
name|SIM_SH_FR15_REGNUM
block|,
name|SIM_SH_SSR_REGNUM
block|,
comment|/* sh3{,e,-dsp}, sh4 */
name|SIM_SH_SPC_REGNUM
block|,
comment|/* sh3{,e,-dsp}, sh4 */
name|SIM_SH_R0_BANK0_REGNUM
block|,
comment|/* SIM_SH_Rn_BANKm_REGNUM: sh3[e] / sh4 */
name|SIM_SH_R1_BANK0_REGNUM
block|,
name|SIM_SH_R2_BANK0_REGNUM
block|,
name|SIM_SH_R3_BANK0_REGNUM
block|,
name|SIM_SH_R4_BANK0_REGNUM
block|,
name|SIM_SH_R5_BANK0_REGNUM
block|,
name|SIM_SH_R6_BANK0_REGNUM
block|,
name|SIM_SH_R7_BANK0_REGNUM
block|,
name|SIM_SH_R0_BANK1_REGNUM
block|,
name|SIM_SH_R1_BANK1_REGNUM
block|,
name|SIM_SH_R2_BANK1_REGNUM
block|,
name|SIM_SH_R3_BANK1_REGNUM
block|,
name|SIM_SH_R4_BANK1_REGNUM
block|,
name|SIM_SH_R5_BANK1_REGNUM
block|,
name|SIM_SH_R6_BANK1_REGNUM
block|,
name|SIM_SH_R7_BANK1_REGNUM
block|,
name|SIM_SH_XF0_REGNUM
block|,
name|SIM_SH_XF1_REGNUM
block|,
name|SIM_SH_XF2_REGNUM
block|,
name|SIM_SH_XF3_REGNUM
block|,
name|SIM_SH_XF4_REGNUM
block|,
name|SIM_SH_XF5_REGNUM
block|,
name|SIM_SH_XF6_REGNUM
block|,
name|SIM_SH_XF7_REGNUM
block|,
name|SIM_SH_XF8_REGNUM
block|,
name|SIM_SH_XF9_REGNUM
block|,
name|SIM_SH_XF10_REGNUM
block|,
name|SIM_SH_XF11_REGNUM
block|,
name|SIM_SH_XF12_REGNUM
block|,
name|SIM_SH_XF13_REGNUM
block|,
name|SIM_SH_XF14_REGNUM
block|,
name|SIM_SH_XF15_REGNUM
block|,
name|SIM_SH_SGR_REGNUM
block|,
name|SIM_SH_DBR_REGNUM
block|,
name|SIM_SH4_NUM_REGS
block|,
comment|/* 77 */
comment|/* sh[3]-dsp */
name|SIM_SH_DSR_REGNUM
block|,
name|SIM_SH_A0G_REGNUM
block|,
name|SIM_SH_A0_REGNUM
block|,
name|SIM_SH_A1G_REGNUM
block|,
name|SIM_SH_A1_REGNUM
block|,
name|SIM_SH_M0_REGNUM
block|,
name|SIM_SH_M1_REGNUM
block|,
name|SIM_SH_X0_REGNUM
block|,
name|SIM_SH_X1_REGNUM
block|,
name|SIM_SH_Y0_REGNUM
block|,
name|SIM_SH_Y1_REGNUM
block|,
name|SIM_SH_MOD_REGNUM
block|,
name|SIM_SH_RS_REGNUM
block|,
name|SIM_SH_RE_REGNUM
block|,
name|SIM_SH_R0_BANK_REGNUM
block|,
name|SIM_SH_R1_BANK_REGNUM
block|,
name|SIM_SH_R2_BANK_REGNUM
block|,
name|SIM_SH_R3_BANK_REGNUM
block|,
name|SIM_SH_R4_BANK_REGNUM
block|,
name|SIM_SH_R5_BANK_REGNUM
block|,
name|SIM_SH_R6_BANK_REGNUM
block|,
name|SIM_SH_R7_BANK_REGNUM
block|,
comment|/* 109..127: room for expansion.  */
name|SIM_SH_TBR_REGNUM
block|,
name|SIM_SH_IBNR_REGNUM
block|,
name|SIM_SH_IBCR_REGNUM
block|,
name|SIM_SH_BANK_REGNUM
block|,
name|SIM_SH_BANK_MACL_REGNUM
block|,
name|SIM_SH_BANK_GBR_REGNUM
block|,
name|SIM_SH_BANK_PR_REGNUM
block|,
name|SIM_SH_BANK_IVN_REGNUM
block|,
name|SIM_SH_BANK_MACH_REGNUM
block|}
enum|;
enum|enum
block|{
name|SIM_SH64_R0_REGNUM
init|=
literal|0
block|,
name|SIM_SH64_SP_REGNUM
init|=
literal|15
block|,
name|SIM_SH64_PC_REGNUM
init|=
literal|64
block|,
name|SIM_SH64_SR_REGNUM
init|=
literal|65
block|,
name|SIM_SH64_SSR_REGNUM
init|=
literal|66
block|,
name|SIM_SH64_SPC_REGNUM
init|=
literal|67
block|,
name|SIM_SH64_TR0_REGNUM
init|=
literal|68
block|,
name|SIM_SH64_FPCSR_REGNUM
init|=
literal|76
block|,
name|SIM_SH64_FR0_REGNUM
init|=
literal|77
block|}
enum|;
enum|enum
block|{
name|SIM_SH64_NR_REGS
init|=
literal|141
block|,
comment|/* total number of architectural registers */
name|SIM_SH64_NR_R_REGS
init|=
literal|64
block|,
comment|/* number of general registers */
name|SIM_SH64_NR_TR_REGS
init|=
literal|8
block|,
comment|/* number of target registers */
name|SIM_SH64_NR_FP_REGS
init|=
literal|64
comment|/* number of floating point registers */
block|}
enum|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

