begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Target signal numbers for GDB and the GDB remote protocol.    Copyright 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,    1998, 1999, 2000, 2001, 2002, 2007 Free Software Foundation, Inc.     This file is part of GDB.     This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2 of the License, or    (at your option) any later version.     This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 59 Temple Place - Suite 330,    Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|GDB_SIGNALS_H
end_ifndef

begin_define
define|#
directive|define
name|GDB_SIGNALS_H
end_define

begin_comment
comment|/* The numbering of these signals is chosen to match traditional unix    signals (insofar as various unices use the same numbers, anyway).    It is also the numbering of the GDB remote protocol.  Other remote    protocols, if they use a different numbering, should make sure to    translate appropriately.     Since these numbers have actually made it out into other software    (stubs, etc.), you mustn't disturb the assigned numbering.  If you    need to add new signals here, add them to the end of the explicitly    numbered signals, at the comment marker.  Add them unconditionally,    not within any #if or #ifdef.     This is based strongly on Unix/POSIX signals for several reasons:    (1) This set of signals represents a widely-accepted attempt to    represent events of this sort in a portable fashion, (2) we want a    signal to make it from wait to child_wait to the user intact, (3) many    remote protocols use a similar encoding.  However, it is    recognized that this set of signals has limitations (such as not    distinguishing between various kinds of SIGSEGV, or not    distinguishing hitting a breakpoint from finishing a single step).    So in the future we may get around this either by adding additional    signals for breakpoint, single-step, etc., or by adding signal    codes; the latter seems more in the spirit of what BSD, System V,    etc. are doing to address these issues.  */
end_comment

begin_comment
comment|/* For an explanation of what each signal means, see    target_signal_to_string.  */
end_comment

begin_enum
enum|enum
name|target_signal
block|{
comment|/* Used some places (e.g. stop_signal) to record the concept that        there is no signal.  */
name|TARGET_SIGNAL_0
init|=
literal|0
block|,
name|TARGET_SIGNAL_FIRST
init|=
literal|0
block|,
name|TARGET_SIGNAL_HUP
init|=
literal|1
block|,
name|TARGET_SIGNAL_INT
init|=
literal|2
block|,
name|TARGET_SIGNAL_QUIT
init|=
literal|3
block|,
name|TARGET_SIGNAL_ILL
init|=
literal|4
block|,
name|TARGET_SIGNAL_TRAP
init|=
literal|5
block|,
name|TARGET_SIGNAL_ABRT
init|=
literal|6
block|,
name|TARGET_SIGNAL_EMT
init|=
literal|7
block|,
name|TARGET_SIGNAL_FPE
init|=
literal|8
block|,
name|TARGET_SIGNAL_KILL
init|=
literal|9
block|,
name|TARGET_SIGNAL_BUS
init|=
literal|10
block|,
name|TARGET_SIGNAL_SEGV
init|=
literal|11
block|,
name|TARGET_SIGNAL_SYS
init|=
literal|12
block|,
name|TARGET_SIGNAL_PIPE
init|=
literal|13
block|,
name|TARGET_SIGNAL_ALRM
init|=
literal|14
block|,
name|TARGET_SIGNAL_TERM
init|=
literal|15
block|,
name|TARGET_SIGNAL_URG
init|=
literal|16
block|,
name|TARGET_SIGNAL_STOP
init|=
literal|17
block|,
name|TARGET_SIGNAL_TSTP
init|=
literal|18
block|,
name|TARGET_SIGNAL_CONT
init|=
literal|19
block|,
name|TARGET_SIGNAL_CHLD
init|=
literal|20
block|,
name|TARGET_SIGNAL_TTIN
init|=
literal|21
block|,
name|TARGET_SIGNAL_TTOU
init|=
literal|22
block|,
name|TARGET_SIGNAL_IO
init|=
literal|23
block|,
name|TARGET_SIGNAL_XCPU
init|=
literal|24
block|,
name|TARGET_SIGNAL_XFSZ
init|=
literal|25
block|,
name|TARGET_SIGNAL_VTALRM
init|=
literal|26
block|,
name|TARGET_SIGNAL_PROF
init|=
literal|27
block|,
name|TARGET_SIGNAL_WINCH
init|=
literal|28
block|,
name|TARGET_SIGNAL_LOST
init|=
literal|29
block|,
name|TARGET_SIGNAL_USR1
init|=
literal|30
block|,
name|TARGET_SIGNAL_USR2
init|=
literal|31
block|,
name|TARGET_SIGNAL_PWR
init|=
literal|32
block|,
comment|/* Similar to SIGIO.  Perhaps they should have the same number.  */
name|TARGET_SIGNAL_POLL
init|=
literal|33
block|,
name|TARGET_SIGNAL_WIND
init|=
literal|34
block|,
name|TARGET_SIGNAL_PHONE
init|=
literal|35
block|,
name|TARGET_SIGNAL_WAITING
init|=
literal|36
block|,
name|TARGET_SIGNAL_LWP
init|=
literal|37
block|,
name|TARGET_SIGNAL_DANGER
init|=
literal|38
block|,
name|TARGET_SIGNAL_GRANT
init|=
literal|39
block|,
name|TARGET_SIGNAL_RETRACT
init|=
literal|40
block|,
name|TARGET_SIGNAL_MSG
init|=
literal|41
block|,
name|TARGET_SIGNAL_SOUND
init|=
literal|42
block|,
name|TARGET_SIGNAL_SAK
init|=
literal|43
block|,
name|TARGET_SIGNAL_PRIO
init|=
literal|44
block|,
name|TARGET_SIGNAL_REALTIME_33
init|=
literal|45
block|,
name|TARGET_SIGNAL_REALTIME_34
init|=
literal|46
block|,
name|TARGET_SIGNAL_REALTIME_35
init|=
literal|47
block|,
name|TARGET_SIGNAL_REALTIME_36
init|=
literal|48
block|,
name|TARGET_SIGNAL_REALTIME_37
init|=
literal|49
block|,
name|TARGET_SIGNAL_REALTIME_38
init|=
literal|50
block|,
name|TARGET_SIGNAL_REALTIME_39
init|=
literal|51
block|,
name|TARGET_SIGNAL_REALTIME_40
init|=
literal|52
block|,
name|TARGET_SIGNAL_REALTIME_41
init|=
literal|53
block|,
name|TARGET_SIGNAL_REALTIME_42
init|=
literal|54
block|,
name|TARGET_SIGNAL_REALTIME_43
init|=
literal|55
block|,
name|TARGET_SIGNAL_REALTIME_44
init|=
literal|56
block|,
name|TARGET_SIGNAL_REALTIME_45
init|=
literal|57
block|,
name|TARGET_SIGNAL_REALTIME_46
init|=
literal|58
block|,
name|TARGET_SIGNAL_REALTIME_47
init|=
literal|59
block|,
name|TARGET_SIGNAL_REALTIME_48
init|=
literal|60
block|,
name|TARGET_SIGNAL_REALTIME_49
init|=
literal|61
block|,
name|TARGET_SIGNAL_REALTIME_50
init|=
literal|62
block|,
name|TARGET_SIGNAL_REALTIME_51
init|=
literal|63
block|,
name|TARGET_SIGNAL_REALTIME_52
init|=
literal|64
block|,
name|TARGET_SIGNAL_REALTIME_53
init|=
literal|65
block|,
name|TARGET_SIGNAL_REALTIME_54
init|=
literal|66
block|,
name|TARGET_SIGNAL_REALTIME_55
init|=
literal|67
block|,
name|TARGET_SIGNAL_REALTIME_56
init|=
literal|68
block|,
name|TARGET_SIGNAL_REALTIME_57
init|=
literal|69
block|,
name|TARGET_SIGNAL_REALTIME_58
init|=
literal|70
block|,
name|TARGET_SIGNAL_REALTIME_59
init|=
literal|71
block|,
name|TARGET_SIGNAL_REALTIME_60
init|=
literal|72
block|,
name|TARGET_SIGNAL_REALTIME_61
init|=
literal|73
block|,
name|TARGET_SIGNAL_REALTIME_62
init|=
literal|74
block|,
name|TARGET_SIGNAL_REALTIME_63
init|=
literal|75
block|,
comment|/* Used internally by Solaris threads.  See signal(5) on Solaris.  */
name|TARGET_SIGNAL_CANCEL
init|=
literal|76
block|,
comment|/* Yes, this pains me, too.  But LynxOS didn't have SIG32, and now        GNU/Linux does, and we can't disturb the numbering, since it's        part of the remote protocol.  Note that in some GDB's        TARGET_SIGNAL_REALTIME_32 is number 76.  */
name|TARGET_SIGNAL_REALTIME_32
block|,
comment|/* Yet another pain, IRIX 6 has SIG64. */
name|TARGET_SIGNAL_REALTIME_64
block|,
comment|/* Yet another pain, GNU/Linux MIPS might go up to 128. */
name|TARGET_SIGNAL_REALTIME_65
block|,
name|TARGET_SIGNAL_REALTIME_66
block|,
name|TARGET_SIGNAL_REALTIME_67
block|,
name|TARGET_SIGNAL_REALTIME_68
block|,
name|TARGET_SIGNAL_REALTIME_69
block|,
name|TARGET_SIGNAL_REALTIME_70
block|,
name|TARGET_SIGNAL_REALTIME_71
block|,
name|TARGET_SIGNAL_REALTIME_72
block|,
name|TARGET_SIGNAL_REALTIME_73
block|,
name|TARGET_SIGNAL_REALTIME_74
block|,
name|TARGET_SIGNAL_REALTIME_75
block|,
name|TARGET_SIGNAL_REALTIME_76
block|,
name|TARGET_SIGNAL_REALTIME_77
block|,
name|TARGET_SIGNAL_REALTIME_78
block|,
name|TARGET_SIGNAL_REALTIME_79
block|,
name|TARGET_SIGNAL_REALTIME_80
block|,
name|TARGET_SIGNAL_REALTIME_81
block|,
name|TARGET_SIGNAL_REALTIME_82
block|,
name|TARGET_SIGNAL_REALTIME_83
block|,
name|TARGET_SIGNAL_REALTIME_84
block|,
name|TARGET_SIGNAL_REALTIME_85
block|,
name|TARGET_SIGNAL_REALTIME_86
block|,
name|TARGET_SIGNAL_REALTIME_87
block|,
name|TARGET_SIGNAL_REALTIME_88
block|,
name|TARGET_SIGNAL_REALTIME_89
block|,
name|TARGET_SIGNAL_REALTIME_90
block|,
name|TARGET_SIGNAL_REALTIME_91
block|,
name|TARGET_SIGNAL_REALTIME_92
block|,
name|TARGET_SIGNAL_REALTIME_93
block|,
name|TARGET_SIGNAL_REALTIME_94
block|,
name|TARGET_SIGNAL_REALTIME_95
block|,
name|TARGET_SIGNAL_REALTIME_96
block|,
name|TARGET_SIGNAL_REALTIME_97
block|,
name|TARGET_SIGNAL_REALTIME_98
block|,
name|TARGET_SIGNAL_REALTIME_99
block|,
name|TARGET_SIGNAL_REALTIME_100
block|,
name|TARGET_SIGNAL_REALTIME_101
block|,
name|TARGET_SIGNAL_REALTIME_102
block|,
name|TARGET_SIGNAL_REALTIME_103
block|,
name|TARGET_SIGNAL_REALTIME_104
block|,
name|TARGET_SIGNAL_REALTIME_105
block|,
name|TARGET_SIGNAL_REALTIME_106
block|,
name|TARGET_SIGNAL_REALTIME_107
block|,
name|TARGET_SIGNAL_REALTIME_108
block|,
name|TARGET_SIGNAL_REALTIME_109
block|,
name|TARGET_SIGNAL_REALTIME_110
block|,
name|TARGET_SIGNAL_REALTIME_111
block|,
name|TARGET_SIGNAL_REALTIME_112
block|,
name|TARGET_SIGNAL_REALTIME_113
block|,
name|TARGET_SIGNAL_REALTIME_114
block|,
name|TARGET_SIGNAL_REALTIME_115
block|,
name|TARGET_SIGNAL_REALTIME_116
block|,
name|TARGET_SIGNAL_REALTIME_117
block|,
name|TARGET_SIGNAL_REALTIME_118
block|,
name|TARGET_SIGNAL_REALTIME_119
block|,
name|TARGET_SIGNAL_REALTIME_120
block|,
name|TARGET_SIGNAL_REALTIME_121
block|,
name|TARGET_SIGNAL_REALTIME_122
block|,
name|TARGET_SIGNAL_REALTIME_123
block|,
name|TARGET_SIGNAL_REALTIME_124
block|,
name|TARGET_SIGNAL_REALTIME_125
block|,
name|TARGET_SIGNAL_REALTIME_126
block|,
name|TARGET_SIGNAL_REALTIME_127
block|,
name|TARGET_SIGNAL_INFO
block|,
comment|/* Some signal we don't know about.  */
name|TARGET_SIGNAL_UNKNOWN
block|,
comment|/* Use whatever signal we use when one is not specifically specified        (for passing to proceed and so on).  */
name|TARGET_SIGNAL_DEFAULT
block|,
comment|/* Mach exceptions.  In versions of GDB before 5.2, these were just before        TARGET_SIGNAL_INFO if you were compiling on a Mach host (and missing        otherwise).  */
name|TARGET_EXC_BAD_ACCESS
block|,
name|TARGET_EXC_BAD_INSTRUCTION
block|,
name|TARGET_EXC_ARITHMETIC
block|,
name|TARGET_EXC_EMULATION
block|,
name|TARGET_EXC_SOFTWARE
block|,
name|TARGET_EXC_BREAKPOINT
block|,
comment|/* If you are adding a new signal, add it just above this comment.  */
comment|/* Last and unused enum value, for sizing arrays, etc.  */
name|TARGET_SIGNAL_LAST
block|}
enum|;
end_enum

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* #ifndef GDB_SIGNALS_H */
end_comment

end_unit

