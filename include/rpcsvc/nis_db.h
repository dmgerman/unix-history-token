begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Sun RPC is a product of Sun Microsystems, Inc. and is provided for  * unrestricted use provided that this legend is included on all tape  * media and as a part of the software program in whole or part.  Users  * may copy or modify Sun RPC without charge, but are not authorized  * to license or distribute it to anyone else except as part of a product or  * program developed by the user.  *   * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE  * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR  * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.  *   * Sun RPC is provided with no support and without any obligation on the  * part of Sun Microsystems, Inc. to assist in its use, correction,  * modification or enhancement.  *   * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE  * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC  * OR ANY PART THEREOF.  *   * In no event will Sun Microsystems, Inc. be liable for any lost revenue  * or profits or other special, indirect and consequential damages, even if  * Sun has been advised of the possibility of such damages.  *   * Sun Microsystems, Inc.  * 2550 Garcia Avenue  * Mountain View, California  94043  *  * $FreeBSD$  */
end_comment

begin_comment
comment|/*  * Copyright (c) 1991, by Sun Microsystems Inc.  */
end_comment

begin_comment
comment|/*  * This header file defines the interface to the NIS database. All  * implementations of the database must export at least these routines.  * They must also follow the conventions set herein. See the implementors  * guide for specific semantics that are required.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_RPCSVC_NIS_DB_H
end_ifndef

begin_define
define|#
directive|define
name|_RPCSVC_NIS_DB_H
end_define

begin_comment
comment|/* From: #pragma ident	"@(#)nis_db.h	1.8	94/05/03 SMI" */
end_comment

begin_comment
comment|/*  * Note: although the version of<rpcsvc/nis_db.h> shipped with Solaris  * 2.5/2.5.x is actually older than this one (according to the ident  * string), it contains changes and a few added functions. Those changes  * have been hand merged into this file to bring it up to date.  */
end_comment

begin_include
include|#
directive|include
file|<rpc/rpc.h>
end_include

begin_include
include|#
directive|include
file|<rpcsvc/nis.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
enum|enum
name|db_status
block|{
name|DB_SUCCESS
init|=
literal|0
block|,
name|DB_NOTFOUND
init|=
literal|1
block|,
name|DB_NOTUNIQUE
init|=
literal|2
block|,
name|DB_BADTABLE
init|=
literal|3
block|,
name|DB_BADQUERY
init|=
literal|4
block|,
name|DB_BADOBJECT
init|=
literal|5
block|,
name|DB_MEMORY_LIMIT
init|=
literal|6
block|,
name|DB_STORAGE_LIMIT
init|=
literal|7
block|,
name|DB_INTERNAL_ERROR
init|=
literal|8
block|}
enum|;
typedef|typedef
name|enum
name|db_status
name|db_status
typedef|;
enum|enum
name|db_action
block|{
name|DB_LOOKUP
init|=
literal|0
block|,
name|DB_REMOVE
init|=
literal|1
block|,
name|DB_ADD
init|=
literal|2
block|,
name|DB_FIRST
init|=
literal|3
block|,
name|DB_NEXT
init|=
literal|4
block|,
name|DB_ALL
init|=
literal|5
block|,
name|DB_RESET_NEXT
init|=
literal|6
block|}
enum|;
typedef|typedef
name|enum
name|db_action
name|db_action
typedef|;
typedef|typedef
name|entry_obj
modifier|*
name|entry_object_p
typedef|;
typedef|typedef
struct|struct
block|{
name|u_int
name|db_next_desc_len
decl_stmt|;
name|char
modifier|*
name|db_next_desc_val
decl_stmt|;
block|}
name|db_next_desc
typedef|;
struct|struct
name|db_result
block|{
name|db_status
name|status
decl_stmt|;
name|db_next_desc
name|nextinfo
decl_stmt|;
struct|struct
block|{
name|u_int
name|objects_len
decl_stmt|;
name|entry_object_p
modifier|*
name|objects_val
decl_stmt|;
block|}
name|objects
struct|;
name|long
name|ticks
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|db_result
name|db_result
typedef|;
comment|/*  * Prototypes for the database functions.  */
specifier|extern
name|bool_t
name|db_initialize
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|ORIGINAL_DECLS
specifier|extern
name|bool_t
name|db_create_table
parameter_list|(
name|char
modifier|*
parameter_list|,
name|table_obj
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|db_destroy_table
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
else|#
directive|else
specifier|extern
name|db_status
name|db_create_table
parameter_list|(
name|char
modifier|*
parameter_list|,
name|table_obj
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|db_status
name|db_destroy_table
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
endif|#
directive|endif
specifier|extern
name|db_result
modifier|*
name|db_first_entry
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|nis_attr
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|db_result
modifier|*
name|db_next_entry
parameter_list|(
name|char
modifier|*
parameter_list|,
name|db_next_desc
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|db_result
modifier|*
name|db_reset_next_entry
parameter_list|(
name|char
modifier|*
parameter_list|,
name|db_next_desc
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|db_result
modifier|*
name|db_list_entries
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|nis_attr
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|db_result
modifier|*
name|db_add_entry
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|nis_attr
modifier|*
parameter_list|,
name|entry_obj
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|db_result
modifier|*
name|db_remove_entry
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|nis_attr
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|db_status
name|db_checkpoint
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|db_status
name|db_standby
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|ORIGINAL_DECLS
specifier|extern
name|db_status
name|db_table_exists
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|db_status
name|db_unload_table
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|db_free_result
parameter_list|(
name|db_result
modifier|*
parameter_list|)
function_decl|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _RPCSVC_NIS_DB_H */
end_comment

end_unit

