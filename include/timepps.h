begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * ----------------------------------------------------------------------------  * "THE BEER-WARE LICENSE" (Revision 42):  *<phk@FreeBSD.org> wrote this file.  As long as you retain this notice you  * can do whatever you want with this stuff. If we meet some day, and you think  * this stuff is worth it, you can buy me a beer in return.   Poul-Henning Kamp  * ----------------------------------------------------------------------------  *  * $Id$  *  * The is a FreeBSD protype version of the "draft-mogul-pps-api-02.txt"   * specification for Pulse Per Second timing interfaces.  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_TIME_PPS_H_
end_ifndef

begin_define
define|#
directive|define
name|_TIME_PPS_H_
end_define

begin_include
include|#
directive|include
file|<sys/timepps.h>
end_include

begin_function_decl
name|int
name|time_pps_create
parameter_list|(
name|int
name|filedes
parameter_list|,
name|pps_handle_t
modifier|*
name|handle
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|time_pps_destroy
parameter_list|(
name|pps_handle_t
name|handle
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|time_pps_setparams
parameter_list|(
name|pps_handle_t
name|handle
parameter_list|,
specifier|const
name|pps_params_t
modifier|*
name|ppsparams
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|time_pps_getparams
parameter_list|(
name|pps_handle_t
name|handle
parameter_list|,
name|pps_params_t
modifier|*
name|ppsparams
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|time_pps_getcap
parameter_list|(
name|pps_handle_t
name|handle
parameter_list|,
name|int
modifier|*
name|mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|time_pps_fetch
parameter_list|(
name|pps_handle_t
name|handle
parameter_list|,
name|pps_info_t
modifier|*
name|ppsinfobuf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|time_pps_wait
parameter_list|(
name|pps_handle_t
name|handle
parameter_list|,
specifier|const
name|struct
name|timespec
modifier|*
name|timeout
parameter_list|,
name|pps_info_t
modifier|*
name|ppsinfobuf
parameter_list|)
function_decl|;
end_function_decl

begin_function
name|__inline
name|int
name|time_pps_create
parameter_list|(
name|int
name|filedes
parameter_list|,
name|pps_handle_t
modifier|*
name|handle
parameter_list|)
block|{
name|int
name|error
decl_stmt|;
operator|*
name|handle
operator|=
operator|-
literal|1
expr_stmt|;
name|error
operator|=
name|ioctl
argument_list|(
name|filedes
argument_list|,
name|PPS_IOC_CREATE
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|error
operator|<
literal|0
condition|)
return|return
operator|(
operator|-
literal|1
operator|)
return|;
operator|*
name|handle
operator|=
name|filedes
expr_stmt|;
return|return
operator|(
literal|0
operator|)
return|;
block|}
end_function

begin_function
name|__inline
name|int
name|time_pps_destroy
parameter_list|(
name|pps_handle_t
name|handle
parameter_list|)
block|{
return|return
operator|(
name|ioctl
argument_list|(
name|handle
argument_list|,
name|PPS_IOC_DESTROY
argument_list|,
literal|0
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
name|__inline
name|int
name|time_pps_setparams
parameter_list|(
name|pps_handle_t
name|handle
parameter_list|,
specifier|const
name|pps_params_t
modifier|*
name|ppsparams
parameter_list|)
block|{
return|return
operator|(
name|ioctl
argument_list|(
name|handle
argument_list|,
name|PPS_IOC_SETPARAMS
argument_list|,
name|ppsparams
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
name|__inline
name|int
name|time_pps_getparams
parameter_list|(
name|pps_handle_t
name|handle
parameter_list|,
name|pps_params_t
modifier|*
name|ppsparams
parameter_list|)
block|{
return|return
operator|(
name|ioctl
argument_list|(
name|handle
argument_list|,
name|PPS_IOC_GETPARAMS
argument_list|,
name|ppsparams
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
name|__inline
name|int
name|time_pps_getcap
parameter_list|(
name|pps_handle_t
name|handle
parameter_list|,
name|int
modifier|*
name|mode
parameter_list|)
block|{
return|return
operator|(
name|ioctl
argument_list|(
name|handle
argument_list|,
name|PPS_IOC_GETCAP
argument_list|,
name|mode
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
name|__inline
name|int
name|time_pps_fetch
parameter_list|(
name|pps_handle_t
name|handle
parameter_list|,
name|pps_info_t
modifier|*
name|ppsinfobuf
parameter_list|)
block|{
return|return
operator|(
name|ioctl
argument_list|(
name|handle
argument_list|,
name|PPS_IOC_FETCH
argument_list|,
name|ppsinfobuf
argument_list|)
operator|)
return|;
block|}
end_function

begin_function
name|__inline
name|int
name|time_pps_wait
parameter_list|(
name|pps_handle_t
name|handle
parameter_list|,
specifier|const
name|struct
name|timespec
modifier|*
name|timeout
parameter_list|,
name|pps_info_t
modifier|*
name|ppsinfobuf
parameter_list|)
block|{
name|int
name|error
decl_stmt|;
name|struct
name|pps_wait_args
name|arg
decl_stmt|;
name|arg
operator|.
name|timeout
operator|=
operator|*
name|timeout
expr_stmt|;
name|error
operator|=
name|ioctl
argument_list|(
name|handle
argument_list|,
name|PPS_IOC_WAIT
argument_list|,
operator|&
name|arg
argument_list|)
expr_stmt|;
operator|*
name|ppsinfobuf
operator|=
name|arg
operator|.
name|pps_info_buf
expr_stmt|;
return|return
operator|(
name|error
operator|)
return|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_TIME_PPS_H_ */
end_comment

end_unit

