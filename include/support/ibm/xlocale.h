begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C++ -*-
end_comment

begin_comment
comment|//===--------------------- support/ibm/xlocale.h -------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is dual licensed under the MIT and the University of Illinois Open
end_comment

begin_comment
comment|// Source Licenses. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_LIBCPP_SUPPORT_IBM_XLOCALE_H
end_ifndef

begin_define
define|#
directive|define
name|_LIBCPP_SUPPORT_IBM_XLOCALE_H
end_define

begin_include
include|#
directive|include
file|<support/ibm/locale_mgmt_aix.h>
end_include

begin_if
if|#
directive|if
name|defined
argument_list|(
name|_AIX
argument_list|)
end_if

begin_include
include|#
directive|include
file|"cstdlib"
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
if|#
directive|if
operator|!
name|defined
argument_list|(
name|_AIX71
argument_list|)
comment|// AIX 7.1 and higher has these definitions.  Definitions and stubs
comment|// are provied here as a temporary workaround on AIX 6.1.
specifier|static
specifier|inline
name|int
name|isalnum_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xisalnum
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isalpha_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xisalpha
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isblank_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xisblank
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iscntrl_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiscntrl
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isdigit_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xisdigit
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isgraph_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xisgraph
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|islower_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xislower
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isprint_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xisprint
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|ispunct_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xispunct
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isspace_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xisspace
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isupper_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xisupper
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|isxdigit_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xisxdigit
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswalnum_l
parameter_list|(
name|wchar_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswalnum
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswalpha_l
parameter_list|(
name|wchar_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswalpha
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswblank_l
parameter_list|(
name|wchar_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswblank
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswcntrl_l
parameter_list|(
name|wchar_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswcntrl
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswdigit_l
parameter_list|(
name|wchar_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswdigit
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswgraph_l
parameter_list|(
name|wchar_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswgraph
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswlower_l
parameter_list|(
name|wchar_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswlower
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswprint_l
parameter_list|(
name|wchar_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswprint
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswpunct_l
parameter_list|(
name|wchar_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswpunct
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswspace_l
parameter_list|(
name|wchar_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswspace
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswupper_l
parameter_list|(
name|wchar_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswupper
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswxdigit_l
parameter_list|(
name|wchar_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswxdigit
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|iswctype_l
parameter_list|(
name|wint_t
name|wc
parameter_list|,
name|wctype_t
name|desc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xiswctype
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|,
name|desc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|toupper_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xtoupper
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|tolower_l
parameter_list|(
name|int
name|c
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xtolower
argument_list|(
name|locale
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|wint_t
name|towupper_l
parameter_list|(
name|wint_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xtowupper
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|wint_t
name|towlower_l
parameter_list|(
name|wint_t
name|wc
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xtowlower
argument_list|(
name|locale
argument_list|,
name|wc
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|strcoll_l
parameter_list|(
specifier|const
name|char
modifier|*
name|__s1
parameter_list|,
specifier|const
name|char
modifier|*
name|__s2
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xstrcoll
argument_list|(
name|locale
argument_list|,
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|wcscoll_l
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__s1
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__s2
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xwcscoll
argument_list|(
name|locale
argument_list|,
name|__s1
argument_list|,
name|__s2
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|size_t
name|strxfrm_l
parameter_list|(
name|char
modifier|*
name|__s1
parameter_list|,
specifier|const
name|char
modifier|*
name|__s2
parameter_list|,
name|size_t
name|__n
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xstrxfrm
argument_list|(
name|locale
argument_list|,
name|__s1
argument_list|,
name|__s2
argument_list|,
name|__n
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|size_t
name|wcsxfrm_l
parameter_list|(
name|wchar_t
modifier|*
name|__ws1
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__ws2
parameter_list|,
name|size_t
name|__n
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xwcsxfrm
argument_list|(
name|locale
argument_list|,
name|__ws1
argument_list|,
name|__ws2
argument_list|,
name|__n
argument_list|)
return|;
block|}
endif|#
directive|endif
comment|// !defined(_AIX71)
comment|// strftime_l() is defined by POSIX. However, AIX 7.1 does not have it
comment|// implemented yet.
specifier|static
specifier|inline
name|size_t
name|strftime_l
parameter_list|(
name|char
modifier|*
name|__s
parameter_list|,
name|size_t
name|__size
parameter_list|,
specifier|const
name|char
modifier|*
name|__fmt
parameter_list|,
specifier|const
name|struct
name|tm
modifier|*
name|__tm
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|__xstrftime
argument_list|(
name|locale
argument_list|,
name|__s
argument_list|,
name|__size
argument_list|,
name|__fmt
argument_list|,
name|__tm
argument_list|)
return|;
block|}
comment|// The following are not POSIX routines.  These are quick-and-dirty hacks
comment|// to make things pretend to work
specifier|static
specifier|inline
name|long
name|long
name|strtoll_l
parameter_list|(
specifier|const
name|char
modifier|*
name|__nptr
parameter_list|,
name|char
modifier|*
modifier|*
name|__endptr
parameter_list|,
name|int
name|__base
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|strtoll
argument_list|(
name|__nptr
argument_list|,
name|__endptr
argument_list|,
name|__base
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|long
name|strtol_l
parameter_list|(
specifier|const
name|char
modifier|*
name|__nptr
parameter_list|,
name|char
modifier|*
modifier|*
name|__endptr
parameter_list|,
name|int
name|__base
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|strtol
argument_list|(
name|__nptr
argument_list|,
name|__endptr
argument_list|,
name|__base
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|long
name|double
name|strtold_l
parameter_list|(
specifier|const
name|char
modifier|*
name|__nptr
parameter_list|,
name|char
modifier|*
modifier|*
name|__endptr
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|strtold
argument_list|(
name|__nptr
argument_list|,
name|__endptr
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|unsigned
name|long
name|long
name|strtoull_l
parameter_list|(
specifier|const
name|char
modifier|*
name|__nptr
parameter_list|,
name|char
modifier|*
modifier|*
name|__endptr
parameter_list|,
name|int
name|__base
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|strtoull
argument_list|(
name|__nptr
argument_list|,
name|__endptr
argument_list|,
name|__base
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|unsigned
name|long
name|strtoul_l
parameter_list|(
specifier|const
name|char
modifier|*
name|__nptr
parameter_list|,
name|char
modifier|*
modifier|*
name|__endptr
parameter_list|,
name|int
name|__base
parameter_list|,
name|locale_t
name|locale
parameter_list|)
block|{
return|return
name|strtoul
argument_list|(
name|__nptr
argument_list|,
name|__endptr
argument_list|,
name|__base
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|int
name|vasprintf
parameter_list|(
name|char
modifier|*
modifier|*
name|strp
parameter_list|,
specifier|const
name|char
modifier|*
name|fmt
parameter_list|,
name|va_list
name|ap
parameter_list|)
block|{
specifier|const
name|size_t
name|buff_size
init|=
literal|256
decl_stmt|;
name|int
name|str_size
decl_stmt|;
if|if
condition|(
operator|(
operator|*
name|strp
operator|=
operator|(
name|char
operator|*
operator|)
name|malloc
argument_list|(
name|buff_size
argument_list|)
operator|)
operator|==
name|NULL
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
if|if
condition|(
operator|(
name|str_size
operator|=
name|vsnprintf
argument_list|(
operator|*
name|strp
argument_list|,
name|buff_size
argument_list|,
name|fmt
argument_list|,
name|ap
argument_list|)
operator|)
operator|>=
name|buff_size
condition|)
block|{
if|if
condition|(
operator|(
operator|*
name|strp
operator|=
operator|(
name|char
operator|*
operator|)
name|realloc
argument_list|(
operator|*
name|strp
argument_list|,
name|str_size
operator|+
literal|1
argument_list|)
operator|)
operator|==
name|NULL
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
name|str_size
operator|=
name|vsnprintf
argument_list|(
operator|*
name|strp
argument_list|,
name|str_size
operator|+
literal|1
argument_list|,
name|fmt
argument_list|,
name|ap
argument_list|)
expr_stmt|;
block|}
return|return
name|str_size
return|;
block|}
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// defined(_AIX)
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// _LIBCPP_SUPPORT_IBM_XLOCALE_H
end_comment

end_unit

