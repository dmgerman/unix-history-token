begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- DbiStreamBuilder.h - PDB Dbi Stream Creation -------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_DEBUGINFO_PDB_RAW_PDBDBISTREAMBUILDER_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_DEBUGINFO_PDB_RAW_PDBDBISTREAMBUILDER_H
end_define

begin_include
include|#
directive|include
file|"llvm/ADT/Optional.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/StringSet.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Error.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Native/PDBFile.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/Native/RawConstants.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/PDB/PDBTypes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/BinaryByteStream.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/BinaryStreamReader.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Support/Endian.h"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|namespace
name|msf
block|{
name|class
name|MSFBuilder
decl_stmt|;
block|}
name|namespace
name|object
block|{
struct_decl|struct
name|coff_section
struct_decl|;
block|}
name|namespace
name|pdb
block|{
name|class
name|DbiStream
decl_stmt|;
struct_decl|struct
name|DbiStreamHeader
struct_decl|;
name|class
name|DbiModuleDescriptorBuilder
decl_stmt|;
name|class
name|PDBFile
decl_stmt|;
name|class
name|DbiStreamBuilder
block|{
name|public
label|:
name|DbiStreamBuilder
argument_list|(
name|msf
operator|::
name|MSFBuilder
operator|&
name|Msf
argument_list|)
expr_stmt|;
operator|~
name|DbiStreamBuilder
argument_list|()
expr_stmt|;
name|DbiStreamBuilder
argument_list|(
specifier|const
name|DbiStreamBuilder
operator|&
argument_list|)
operator|=
name|delete
expr_stmt|;
name|DbiStreamBuilder
modifier|&
name|operator
init|=
operator|(
specifier|const
name|DbiStreamBuilder
operator|&
operator|)
operator|=
name|delete
decl_stmt|;
name|void
name|setVersionHeader
parameter_list|(
name|PdbRaw_DbiVer
name|V
parameter_list|)
function_decl|;
name|void
name|setAge
parameter_list|(
name|uint32_t
name|A
parameter_list|)
function_decl|;
name|void
name|setBuildNumber
parameter_list|(
name|uint16_t
name|B
parameter_list|)
function_decl|;
name|void
name|setPdbDllVersion
parameter_list|(
name|uint16_t
name|V
parameter_list|)
function_decl|;
name|void
name|setPdbDllRbld
parameter_list|(
name|uint16_t
name|R
parameter_list|)
function_decl|;
name|void
name|setFlags
parameter_list|(
name|uint16_t
name|F
parameter_list|)
function_decl|;
name|void
name|setMachineType
parameter_list|(
name|PDB_Machine
name|M
parameter_list|)
function_decl|;
name|void
name|setSectionContribs
argument_list|(
name|ArrayRef
operator|<
name|SectionContrib
operator|>
name|SecMap
argument_list|)
decl_stmt|;
name|void
name|setSectionMap
argument_list|(
name|ArrayRef
operator|<
name|SecMapEntry
operator|>
name|SecMap
argument_list|)
decl_stmt|;
comment|// Add given bytes as a new stream.
name|Error
name|addDbgStream
argument_list|(
name|pdb
operator|::
name|DbgHeaderType
name|Type
argument_list|,
name|ArrayRef
operator|<
name|uint8_t
operator|>
name|Data
argument_list|)
decl_stmt|;
name|uint32_t
name|calculateSerializedLength
argument_list|()
specifier|const
expr_stmt|;
name|Expected
operator|<
name|DbiModuleDescriptorBuilder
operator|&
operator|>
name|addModuleInfo
argument_list|(
argument|StringRef ModuleName
argument_list|)
expr_stmt|;
name|Error
name|addModuleSourceFile
parameter_list|(
name|StringRef
name|Module
parameter_list|,
name|StringRef
name|File
parameter_list|)
function_decl|;
name|Expected
operator|<
name|uint32_t
operator|>
name|getSourceFileNameIndex
argument_list|(
argument|StringRef FileName
argument_list|)
expr_stmt|;
name|Error
name|finalizeMsfLayout
parameter_list|()
function_decl|;
name|Error
name|commit
argument_list|(
specifier|const
name|msf
operator|::
name|MSFLayout
operator|&
name|Layout
argument_list|,
name|WritableBinaryStreamRef
name|MsfBuffer
argument_list|)
decl_stmt|;
comment|// A helper function to create Section Contributions from COFF input
comment|// section headers.
specifier|static
name|std
operator|::
name|vector
operator|<
name|SectionContrib
operator|>
name|createSectionContribs
argument_list|(
name|ArrayRef
operator|<
name|llvm
operator|::
name|object
operator|::
name|coff_section
operator|>
name|SecHdrs
argument_list|)
expr_stmt|;
comment|// A helper function to create a Section Map from a COFF section header.
specifier|static
name|std
operator|::
name|vector
operator|<
name|SecMapEntry
operator|>
name|createSectionMap
argument_list|(
name|ArrayRef
operator|<
name|llvm
operator|::
name|object
operator|::
name|coff_section
operator|>
name|SecHdrs
argument_list|)
expr_stmt|;
name|private
label|:
struct|struct
name|DebugStream
block|{
name|ArrayRef
operator|<
name|uint8_t
operator|>
name|Data
expr_stmt|;
name|uint16_t
name|StreamNumber
init|=
literal|0
decl_stmt|;
block|}
struct|;
name|Error
name|finalize
parameter_list|()
function_decl|;
name|uint32_t
name|calculateModiSubstreamSize
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|calculateNamesOffset
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|calculateSectionContribsStreamSize
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|calculateSectionMapStreamSize
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|calculateFileInfoSubstreamSize
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|calculateNamesBufferSize
argument_list|()
specifier|const
expr_stmt|;
name|uint32_t
name|calculateDbgStreamsSize
argument_list|()
specifier|const
expr_stmt|;
name|Error
name|generateModiSubstream
parameter_list|()
function_decl|;
name|Error
name|generateFileInfoSubstream
parameter_list|()
function_decl|;
name|msf
operator|::
name|MSFBuilder
operator|&
name|Msf
expr_stmt|;
name|BumpPtrAllocator
modifier|&
name|Allocator
decl_stmt|;
name|Optional
operator|<
name|PdbRaw_DbiVer
operator|>
name|VerHeader
expr_stmt|;
name|uint32_t
name|Age
decl_stmt|;
name|uint16_t
name|BuildNumber
decl_stmt|;
name|uint16_t
name|PdbDllVersion
decl_stmt|;
name|uint16_t
name|PdbDllRbld
decl_stmt|;
name|uint16_t
name|Flags
decl_stmt|;
name|PDB_Machine
name|MachineType
decl_stmt|;
specifier|const
name|DbiStreamHeader
modifier|*
name|Header
decl_stmt|;
name|StringMap
operator|<
name|std
operator|::
name|unique_ptr
operator|<
name|DbiModuleDescriptorBuilder
operator|>>
name|ModiMap
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|DbiModuleDescriptorBuilder
operator|*
operator|>
name|ModiList
expr_stmt|;
name|StringMap
operator|<
name|uint32_t
operator|>
name|SourceFileNames
expr_stmt|;
name|WritableBinaryStreamRef
name|NamesBuffer
decl_stmt|;
name|MutableBinaryByteStream
name|FileInfoBuffer
decl_stmt|;
name|ArrayRef
operator|<
name|SectionContrib
operator|>
name|SectionContribs
expr_stmt|;
name|ArrayRef
operator|<
name|SecMapEntry
operator|>
name|SectionMap
expr_stmt|;
name|llvm
operator|::
name|SmallVector
operator|<
name|DebugStream
operator|,
operator|(
name|int
operator|)
name|DbgHeaderType
operator|::
name|Max
operator|>
name|DbgStreams
expr_stmt|;
block|}
empty_stmt|;
block|}
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

