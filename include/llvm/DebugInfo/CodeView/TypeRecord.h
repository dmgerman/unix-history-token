begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- TypeRecord.h ---------------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_DEBUGINFO_CODEVIEW_TYPERECORD_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_DEBUGINFO_CODEVIEW_TYPERECORD_H
end_define

begin_include
include|#
directive|include
file|"llvm/ADT/ArrayRef.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/StringRef.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/CodeView/CodeView.h"
end_include

begin_include
include|#
directive|include
file|"llvm/DebugInfo/CodeView/TypeIndex.h"
end_include

begin_include
include|#
directive|include
file|<cinttypes>
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|namespace
name|codeview
block|{
name|class
name|TypeRecord
block|{
name|protected
label|:
name|explicit
name|TypeRecord
argument_list|(
argument|TypeRecordKind Kind
argument_list|)
block|:
name|Kind
argument_list|(
argument|Kind
argument_list|)
block|{}
name|public
label|:
name|TypeRecordKind
name|getKind
argument_list|()
specifier|const
block|{
return|return
name|Kind
return|;
block|}
name|private
label|:
name|TypeRecordKind
name|Kind
decl_stmt|;
block|}
empty_stmt|;
name|class
name|ModifierRecord
range|:
name|public
name|TypeRecord
block|{
name|public
operator|:
name|ModifierRecord
argument_list|(
argument|TypeIndex ModifiedType
argument_list|,
argument|ModifierOptions Options
argument_list|)
operator|:
name|TypeRecord
argument_list|(
name|TypeRecordKind
operator|::
name|Modifier
argument_list|)
block|,
name|ModifiedType
argument_list|(
name|ModifiedType
argument_list|)
block|,
name|Options
argument_list|(
argument|Options
argument_list|)
block|{}
name|TypeIndex
name|getModifiedType
argument_list|()
specifier|const
block|{
return|return
name|ModifiedType
return|;
block|}
name|ModifierOptions
name|getOptions
argument_list|()
specifier|const
block|{
return|return
name|Options
return|;
block|}
name|private
operator|:
name|TypeIndex
name|ModifiedType
block|;
name|ModifierOptions
name|Options
block|; }
decl_stmt|;
name|class
name|ProcedureRecord
range|:
name|public
name|TypeRecord
block|{
name|public
operator|:
name|ProcedureRecord
argument_list|(
argument|TypeIndex ReturnType
argument_list|,
argument|CallingConvention CallConv
argument_list|,
argument|FunctionOptions Options
argument_list|,
argument|uint16_t ParameterCount
argument_list|,
argument|TypeIndex ArgumentList
argument_list|)
operator|:
name|TypeRecord
argument_list|(
name|TypeRecordKind
operator|::
name|Procedure
argument_list|)
block|,
name|ReturnType
argument_list|(
name|ReturnType
argument_list|)
block|,
name|CallConv
argument_list|(
name|CallConv
argument_list|)
block|,
name|Options
argument_list|(
name|Options
argument_list|)
block|,
name|ParameterCount
argument_list|(
name|ParameterCount
argument_list|)
block|,
name|ArgumentList
argument_list|(
argument|ArgumentList
argument_list|)
block|{}
name|TypeIndex
name|getReturnType
argument_list|()
specifier|const
block|{
return|return
name|ReturnType
return|;
block|}
name|CallingConvention
name|getCallConv
argument_list|()
specifier|const
block|{
return|return
name|CallConv
return|;
block|}
name|FunctionOptions
name|getOptions
argument_list|()
specifier|const
block|{
return|return
name|Options
return|;
block|}
name|uint16_t
name|getParameterCount
argument_list|()
specifier|const
block|{
return|return
name|ParameterCount
return|;
block|}
name|TypeIndex
name|getArgumentList
argument_list|()
specifier|const
block|{
return|return
name|ArgumentList
return|;
block|}
name|private
operator|:
name|TypeIndex
name|ReturnType
block|;
name|CallingConvention
name|CallConv
block|;
name|FunctionOptions
name|Options
block|;
name|uint16_t
name|ParameterCount
block|;
name|TypeIndex
name|ArgumentList
block|; }
decl_stmt|;
name|class
name|MemberFunctionRecord
range|:
name|public
name|TypeRecord
block|{
name|public
operator|:
name|MemberFunctionRecord
argument_list|(
argument|TypeIndex ReturnType
argument_list|,
argument|TypeIndex ClassType
argument_list|,
argument|TypeIndex ThisType
argument_list|,
argument|CallingConvention CallConv
argument_list|,
argument|FunctionOptions Options
argument_list|,
argument|uint16_t ParameterCount
argument_list|,
argument|TypeIndex ArgumentList
argument_list|,
argument|int32_t ThisPointerAdjustment
argument_list|)
operator|:
name|TypeRecord
argument_list|(
name|TypeRecordKind
operator|::
name|MemberFunction
argument_list|)
block|,
name|ReturnType
argument_list|(
name|ReturnType
argument_list|)
block|,
name|ClassType
argument_list|(
name|ClassType
argument_list|)
block|,
name|ThisType
argument_list|(
name|ThisType
argument_list|)
block|,
name|CallConv
argument_list|(
name|CallConv
argument_list|)
block|,
name|Options
argument_list|(
name|Options
argument_list|)
block|,
name|ParameterCount
argument_list|(
name|ParameterCount
argument_list|)
block|,
name|ArgumentList
argument_list|(
name|ArgumentList
argument_list|)
block|,
name|ThisPointerAdjustment
argument_list|(
argument|ThisPointerAdjustment
argument_list|)
block|{}
name|TypeIndex
name|getReturnType
argument_list|()
specifier|const
block|{
return|return
name|ReturnType
return|;
block|}
name|TypeIndex
name|getClassType
argument_list|()
specifier|const
block|{
return|return
name|ClassType
return|;
block|}
name|TypeIndex
name|getThisType
argument_list|()
specifier|const
block|{
return|return
name|ThisType
return|;
block|}
name|CallingConvention
name|getCallConv
argument_list|()
specifier|const
block|{
return|return
name|CallConv
return|;
block|}
name|FunctionOptions
name|getOptions
argument_list|()
specifier|const
block|{
return|return
name|Options
return|;
block|}
name|uint16_t
name|getParameterCount
argument_list|()
specifier|const
block|{
return|return
name|ParameterCount
return|;
block|}
name|TypeIndex
name|getArgumentList
argument_list|()
specifier|const
block|{
return|return
name|ArgumentList
return|;
block|}
name|int32_t
name|getThisPointerAdjustment
argument_list|()
specifier|const
block|{
return|return
name|ThisPointerAdjustment
return|;
block|}
name|private
operator|:
name|TypeIndex
name|ReturnType
block|;
name|TypeIndex
name|ClassType
block|;
name|TypeIndex
name|ThisType
block|;
name|CallingConvention
name|CallConv
block|;
name|FunctionOptions
name|Options
block|;
name|uint16_t
name|ParameterCount
block|;
name|TypeIndex
name|ArgumentList
block|;
name|int32_t
name|ThisPointerAdjustment
block|; }
decl_stmt|;
name|class
name|ArgumentListRecord
range|:
name|public
name|TypeRecord
block|{
name|public
operator|:
name|explicit
name|ArgumentListRecord
argument_list|(
name|llvm
operator|::
name|ArrayRef
operator|<
name|TypeIndex
operator|>
name|ArgumentTypes
argument_list|)
operator|:
name|TypeRecord
argument_list|(
name|TypeRecordKind
operator|::
name|ArgumentList
argument_list|)
block|,
name|ArgumentTypes
argument_list|(
argument|ArgumentTypes
argument_list|)
block|{   }
name|llvm
operator|::
name|ArrayRef
operator|<
name|TypeIndex
operator|>
name|getArgumentTypes
argument_list|()
specifier|const
block|{
return|return
name|ArgumentTypes
return|;
block|}
name|private
operator|:
name|llvm
operator|::
name|ArrayRef
operator|<
name|TypeIndex
operator|>
name|ArgumentTypes
block|; }
decl_stmt|;
name|class
name|PointerRecordBase
range|:
name|public
name|TypeRecord
block|{
name|public
operator|:
name|PointerRecordBase
argument_list|(
argument|TypeIndex ReferentType
argument_list|,
argument|PointerKind Kind
argument_list|,
argument|PointerMode Mode
argument_list|,
argument|PointerOptions Options
argument_list|,
argument|uint8_t Size
argument_list|)
operator|:
name|TypeRecord
argument_list|(
name|TypeRecordKind
operator|::
name|Pointer
argument_list|)
block|,
name|ReferentType
argument_list|(
name|ReferentType
argument_list|)
block|,
name|PtrKind
argument_list|(
name|Kind
argument_list|)
block|,
name|Mode
argument_list|(
name|Mode
argument_list|)
block|,
name|Options
argument_list|(
name|Options
argument_list|)
block|,
name|Size
argument_list|(
argument|Size
argument_list|)
block|{}
name|TypeIndex
name|getReferentType
argument_list|()
specifier|const
block|{
return|return
name|ReferentType
return|;
block|}
name|PointerKind
name|getPointerKind
argument_list|()
specifier|const
block|{
return|return
name|PtrKind
return|;
block|}
name|PointerMode
name|getMode
argument_list|()
specifier|const
block|{
return|return
name|Mode
return|;
block|}
name|PointerOptions
name|getOptions
argument_list|()
specifier|const
block|{
return|return
name|Options
return|;
block|}
name|uint8_t
name|getSize
argument_list|()
specifier|const
block|{
return|return
name|Size
return|;
block|}
name|private
operator|:
name|TypeIndex
name|ReferentType
block|;
name|PointerKind
name|PtrKind
block|;
name|PointerMode
name|Mode
block|;
name|PointerOptions
name|Options
block|;
name|uint8_t
name|Size
block|; }
decl_stmt|;
name|class
name|PointerRecord
range|:
name|public
name|PointerRecordBase
block|{
name|public
operator|:
name|PointerRecord
argument_list|(
argument|TypeIndex ReferentType
argument_list|,
argument|PointerKind Kind
argument_list|,
argument|PointerMode Mode
argument_list|,
argument|PointerOptions Options
argument_list|,
argument|uint8_t Size
argument_list|)
operator|:
name|PointerRecordBase
argument_list|(
argument|ReferentType
argument_list|,
argument|Kind
argument_list|,
argument|Mode
argument_list|,
argument|Options
argument_list|,
argument|Size
argument_list|)
block|{}
block|}
decl_stmt|;
name|class
name|PointerToMemberRecord
range|:
name|public
name|PointerRecordBase
block|{
name|public
operator|:
name|PointerToMemberRecord
argument_list|(
argument|TypeIndex ReferentType
argument_list|,
argument|PointerKind Kind
argument_list|,
argument|PointerMode Mode
argument_list|,
argument|PointerOptions Options
argument_list|,
argument|uint8_t Size
argument_list|,
argument|TypeIndex ContainingType
argument_list|,
argument|PointerToMemberRepresentation Representation
argument_list|)
operator|:
name|PointerRecordBase
argument_list|(
name|ReferentType
argument_list|,
name|Kind
argument_list|,
name|Mode
argument_list|,
name|Options
argument_list|,
name|Size
argument_list|)
block|,
name|ContainingType
argument_list|(
name|ContainingType
argument_list|)
block|,
name|Representation
argument_list|(
argument|Representation
argument_list|)
block|{}
name|TypeIndex
name|getContainingType
argument_list|()
specifier|const
block|{
return|return
name|ContainingType
return|;
block|}
name|PointerToMemberRepresentation
name|getRepresentation
argument_list|()
specifier|const
block|{
return|return
name|Representation
return|;
block|}
name|private
operator|:
name|TypeIndex
name|ContainingType
block|;
name|PointerToMemberRepresentation
name|Representation
block|; }
decl_stmt|;
name|class
name|ArrayRecord
range|:
name|public
name|TypeRecord
block|{
name|public
operator|:
name|ArrayRecord
argument_list|(
argument|TypeIndex ElementType
argument_list|,
argument|TypeIndex IndexType
argument_list|,
argument|uint64_t Size
argument_list|,
argument|llvm::StringRef Name
argument_list|)
operator|:
name|TypeRecord
argument_list|(
name|TypeRecordKind
operator|::
name|Array
argument_list|)
block|,
name|ElementType
argument_list|(
name|ElementType
argument_list|)
block|,
name|IndexType
argument_list|(
name|IndexType
argument_list|)
block|,
name|Size
argument_list|(
name|Size
argument_list|)
block|,
name|Name
argument_list|(
argument|Name
argument_list|)
block|{}
name|TypeIndex
name|getElementType
argument_list|()
specifier|const
block|{
return|return
name|ElementType
return|;
block|}
name|TypeIndex
name|getIndexType
argument_list|()
specifier|const
block|{
return|return
name|IndexType
return|;
block|}
name|uint64_t
name|getSize
argument_list|()
specifier|const
block|{
return|return
name|Size
return|;
block|}
name|llvm
operator|::
name|StringRef
name|getName
argument_list|()
specifier|const
block|{
return|return
name|Name
return|;
block|}
name|private
operator|:
name|TypeIndex
name|ElementType
block|;
name|TypeIndex
name|IndexType
block|;
name|uint64_t
name|Size
block|;
name|llvm
operator|::
name|StringRef
name|Name
block|; }
decl_stmt|;
name|class
name|TagRecord
range|:
name|public
name|TypeRecord
block|{
name|protected
operator|:
name|TagRecord
argument_list|(
argument|TypeRecordKind Kind
argument_list|,
argument|uint16_t MemberCount
argument_list|,
argument|ClassOptions Options
argument_list|,
argument|TypeIndex FieldList
argument_list|,
argument|StringRef Name
argument_list|,
argument|StringRef UniqueName
argument_list|)
operator|:
name|TypeRecord
argument_list|(
name|Kind
argument_list|)
block|,
name|MemberCount
argument_list|(
name|MemberCount
argument_list|)
block|,
name|Options
argument_list|(
name|Options
argument_list|)
block|,
name|FieldList
argument_list|(
name|FieldList
argument_list|)
block|,
name|Name
argument_list|(
name|Name
argument_list|)
block|,
name|UniqueName
argument_list|(
argument|UniqueName
argument_list|)
block|{}
name|public
operator|:
name|uint16_t
name|getMemberCount
argument_list|()
specifier|const
block|{
return|return
name|MemberCount
return|;
block|}
name|ClassOptions
name|getOptions
argument_list|()
specifier|const
block|{
return|return
name|Options
return|;
block|}
name|TypeIndex
name|getFieldList
argument_list|()
specifier|const
block|{
return|return
name|FieldList
return|;
block|}
name|StringRef
name|getName
argument_list|()
specifier|const
block|{
return|return
name|Name
return|;
block|}
name|StringRef
name|getUniqueName
argument_list|()
specifier|const
block|{
return|return
name|UniqueName
return|;
block|}
name|private
operator|:
name|uint16_t
name|MemberCount
block|;
name|ClassOptions
name|Options
block|;
name|TypeIndex
name|FieldList
block|;
name|StringRef
name|Name
block|;
name|StringRef
name|UniqueName
block|; }
decl_stmt|;
name|class
name|AggregateRecord
range|:
name|public
name|TagRecord
block|{
name|public
operator|:
name|AggregateRecord
argument_list|(
argument|TypeRecordKind Kind
argument_list|,
argument|uint16_t MemberCount
argument_list|,
argument|ClassOptions Options
argument_list|,
argument|HfaKind Hfa
argument_list|,
argument|WindowsRTClassKind WinRTKind
argument_list|,
argument|TypeIndex FieldList
argument_list|,
argument|TypeIndex DerivationList
argument_list|,
argument|TypeIndex VTableShape
argument_list|,
argument|uint64_t Size
argument_list|,
argument|StringRef Name
argument_list|,
argument|StringRef UniqueName
argument_list|)
operator|:
name|TagRecord
argument_list|(
name|Kind
argument_list|,
name|MemberCount
argument_list|,
name|Options
argument_list|,
name|FieldList
argument_list|,
name|Name
argument_list|,
name|UniqueName
argument_list|)
block|,
name|Hfa
argument_list|(
name|Hfa
argument_list|)
block|,
name|WinRTKind
argument_list|(
name|WinRTKind
argument_list|)
block|,
name|DerivationList
argument_list|(
name|DerivationList
argument_list|)
block|,
name|VTableShape
argument_list|(
name|VTableShape
argument_list|)
block|,
name|Size
argument_list|(
argument|Size
argument_list|)
block|{}
name|HfaKind
name|getHfa
argument_list|()
specifier|const
block|{
return|return
name|Hfa
return|;
block|}
name|WindowsRTClassKind
name|getWinRTKind
argument_list|()
specifier|const
block|{
return|return
name|WinRTKind
return|;
block|}
name|TypeIndex
name|getDerivationList
argument_list|()
specifier|const
block|{
return|return
name|DerivationList
return|;
block|}
name|TypeIndex
name|getVTableShape
argument_list|()
specifier|const
block|{
return|return
name|VTableShape
return|;
block|}
name|uint64_t
name|getSize
argument_list|()
specifier|const
block|{
return|return
name|Size
return|;
block|}
name|private
operator|:
name|HfaKind
name|Hfa
block|;
name|WindowsRTClassKind
name|WinRTKind
block|;
name|TypeIndex
name|DerivationList
block|;
name|TypeIndex
name|VTableShape
block|;
name|uint64_t
name|Size
block|; }
decl_stmt|;
name|class
name|EnumRecord
range|:
name|public
name|TagRecord
block|{
name|public
operator|:
name|EnumRecord
argument_list|(
argument|uint16_t MemberCount
argument_list|,
argument|ClassOptions Options
argument_list|,
argument|TypeIndex FieldList
argument_list|,
argument|StringRef Name
argument_list|,
argument|StringRef UniqueName
argument_list|,
argument|TypeIndex UnderlyingType
argument_list|)
operator|:
name|TagRecord
argument_list|(
name|TypeRecordKind
operator|::
name|Enum
argument_list|,
name|MemberCount
argument_list|,
name|Options
argument_list|,
name|FieldList
argument_list|,
name|Name
argument_list|,
name|UniqueName
argument_list|)
block|,
name|UnderlyingType
argument_list|(
argument|UnderlyingType
argument_list|)
block|{}
name|TypeIndex
name|getUnderlyingType
argument_list|()
specifier|const
block|{
return|return
name|UnderlyingType
return|;
block|}
name|private
operator|:
name|TypeIndex
name|UnderlyingType
block|; }
decl_stmt|;
name|class
name|BitFieldRecord
range|:
name|TypeRecord
block|{
name|public
operator|:
name|BitFieldRecord
argument_list|(
argument|TypeIndex Type
argument_list|,
argument|uint8_t BitSize
argument_list|,
argument|uint8_t BitOffset
argument_list|)
operator|:
name|TypeRecord
argument_list|(
name|TypeRecordKind
operator|::
name|BitField
argument_list|)
block|,
name|Type
argument_list|(
name|Type
argument_list|)
block|,
name|BitSize
argument_list|(
name|BitSize
argument_list|)
block|,
name|BitOffset
argument_list|(
argument|BitOffset
argument_list|)
block|{}
name|TypeIndex
name|getType
argument_list|()
specifier|const
block|{
return|return
name|Type
return|;
block|}
name|uint8_t
name|getBitOffset
argument_list|()
specifier|const
block|{
return|return
name|BitOffset
return|;
block|}
name|uint8_t
name|getBitSize
argument_list|()
specifier|const
block|{
return|return
name|BitSize
return|;
block|}
name|private
operator|:
name|TypeIndex
name|Type
block|;
name|uint8_t
name|BitSize
block|;
name|uint8_t
name|BitOffset
block|; }
decl_stmt|;
name|class
name|VirtualTableShapeRecord
range|:
name|TypeRecord
block|{
name|public
operator|:
name|explicit
name|VirtualTableShapeRecord
argument_list|(
name|ArrayRef
operator|<
name|VirtualTableSlotKind
operator|>
name|Slots
argument_list|)
operator|:
name|TypeRecord
argument_list|(
name|TypeRecordKind
operator|::
name|VirtualTableShape
argument_list|)
block|,
name|Slots
argument_list|(
argument|Slots
argument_list|)
block|{}
name|ArrayRef
operator|<
name|VirtualTableSlotKind
operator|>
name|getSlots
argument_list|()
specifier|const
block|{
return|return
name|Slots
return|;
block|}
name|private
operator|:
name|ArrayRef
operator|<
name|VirtualTableSlotKind
operator|>
name|Slots
block|; }
decl_stmt|;
block|}
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

