begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- llvm/LinkAllPasses.h ------------ Reference All Passes ---*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                      The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This header file pulls in all transformation and analysis passes for tools
end_comment

begin_comment
comment|// like opt and bugpoint that need this functionality.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_LINKALLPASSES_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_LINKALLPASSES_H
end_define

begin_include
include|#
directive|include
file|"llvm/Analysis/AliasSetTracker.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/DomPrinter.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/FindUsedTypes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/IntervalPartition.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/Passes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/PostDominators.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/RegionPass.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/RegionPrinter.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/ScalarEvolution.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Analysis/Lint.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Assembly/PrintModulePass.h"
end_include

begin_include
include|#
directive|include
file|"llvm/CodeGen/Passes.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Function.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/Instrumentation.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/IPO.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/Scalar.h"
end_include

begin_include
include|#
directive|include
file|"llvm/Transforms/Utils/UnifyFunctionExitNodes.h"
end_include

begin_include
include|#
directive|include
file|<cstdlib>
end_include

begin_macro
name|namespace
end_macro

begin_block
block|{
struct|struct
name|ForcePassLinking
block|{
name|ForcePassLinking
argument_list|()
block|{
comment|// We must reference the passes in such a way that compilers will not
comment|// delete it all as dead code, even with whole program optimization,
comment|// yet is effectively a NO-OP. As the compiler isn't smart enough
comment|// to know that getenv() never returns -1, this will do the job.
if|if
condition|(
name|std
operator|::
name|getenv
argument_list|(
literal|"bar"
argument_list|)
operator|!=
operator|(
name|char
operator|*
operator|)
operator|-
literal|1
condition|)
return|return;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createAAEvalPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createAggressiveDCEPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createAliasAnalysisCounterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createAliasDebugger
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createArgumentPromotionPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createStructRetPromotionPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createBasicAliasAnalysisPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLibCallAliasAnalysisPass
argument_list|(
literal|0
argument_list|)
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createScalarEvolutionAliasAnalysisPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createTypeBasedAliasAnalysisPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createBlockPlacementPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createBreakCriticalEdgesPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createCFGSimplificationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createConstantMergePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createConstantPropagationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDeadArgEliminationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDeadCodeEliminationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDeadInstEliminationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDeadStoreEliminationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDeadTypeEliminationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDomOnlyPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDomPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDomOnlyViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDomViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createEdgeProfilerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createOptimalEdgeProfilerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPathProfilerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createFunctionInliningPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createAlwaysInlinerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createGlobalDCEPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createGlobalOptimizerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createGlobalsModRefPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createIPConstantPropagationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createIPSCCPPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createIndVarSimplifyPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createInstructionCombiningPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createInternalizePass
argument_list|(
name|false
argument_list|)
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLCSSAPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLICMPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLazyValueInfoPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLiveValuesPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopDependenceAnalysisPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopExtractorPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopSimplifyPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopStrengthReducePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopUnrollPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopUnswitchPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopIdiomPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopRotatePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLowerInvokePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLowerSetJmpPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLowerSwitchPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createNoAAPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createNoProfileInfoPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createProfileEstimatorPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createProfileVerifierPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPathProfileVerifierPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createProfileLoaderPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPathProfileLoaderPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPromoteMemoryToRegisterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDemoteRegisterToMemoryPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPruneEHPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPostDomOnlyPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPostDomPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPostDomOnlyViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPostDomViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createReassociatePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createRegionInfoPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createRegionOnlyPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createRegionOnlyViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createRegionPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createRegionViewerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSCCPPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createScalarReplAggregatesPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSimplifyLibCallsPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSimplifyHalfPowrLibCallsPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSingleLoopExtractorPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createStripSymbolsPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createStripNonDebugSymbolsPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createStripDeadDebugInfoPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createStripDeadPrototypesPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createTailCallEliminationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createTailDuplicationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createJumpThreadingPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createUnifyFunctionExitNodesPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createInstCountPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createCodeGenPreparePass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createEarlyCSEPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createGVNPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createMemCpyOptPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLoopDeletionPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPostDomTree
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPostDomFrontier
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createInstructionNamerPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createFunctionAttrsPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createMergeFunctionsPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPrintModulePass
argument_list|(
literal|0
argument_list|)
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPrintFunctionPass
argument_list|(
literal|""
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createDbgInfoPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createModuleDebugInfoPrinterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createPartialInliningPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createGEPSplitterPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLintPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createSinkingPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createLowerAtomicPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createCorrelatedValuePropagationPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createMemDepPrinter
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|llvm
operator|::
name|createInstructionSimplifierPass
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|new
name|llvm
operator|::
name|IntervalPartition
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|new
name|llvm
operator|::
name|FindUsedTypes
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|new
name|llvm
operator|::
name|ScalarEvolution
argument_list|()
expr_stmt|;
operator|(
operator|(
name|llvm
operator|::
name|Function
operator|*
operator|)
literal|0
operator|)
operator|->
name|viewCFGOnly
argument_list|()
expr_stmt|;
name|llvm
operator|::
name|RGPassManager
name|RGM
argument_list|(
literal|0
argument_list|)
expr_stmt|;
operator|(
operator|(
name|llvm
operator|::
name|RegionPass
operator|*
operator|)
literal|0
operator|)
operator|->
name|runOnRegion
argument_list|(
operator|(
name|llvm
operator|::
name|Region
operator|*
operator|)
literal|0
argument_list|,
name|RGM
argument_list|)
expr_stmt|;
name|llvm
operator|::
name|AliasSetTracker
name|X
argument_list|(
operator|*
operator|(
name|llvm
operator|::
name|AliasAnalysis
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|X
operator|.
name|add
argument_list|(
operator|(
name|llvm
operator|::
name|Value
operator|*
operator|)
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// for -print-alias-sets
block|}
block|}
name|ForcePassLinking
struct|;
comment|// Force link by creating a global definition.
block|}
end_block

begin_endif
endif|#
directive|endif
end_endif

end_unit

