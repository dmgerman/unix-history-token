begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===- OrcRemoteTargetRPCAPI.h - Orc Remote-target RPC API ------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file defines the Orc remote-target RPC API. It should not be used
end_comment

begin_comment
comment|// directly, but is used by the RemoteTargetClient and RemoteTargetServer
end_comment

begin_comment
comment|// classes.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_EXECUTIONENGINE_ORC_ORCREMOTETARGETRPCAPI_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_EXECUTIONENGINE_ORC_ORCREMOTETARGETRPCAPI_H
end_define

begin_include
include|#
directive|include
file|"llvm/ExecutionEngine/JITSymbol.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ExecutionEngine/Orc/RPCUtils.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ExecutionEngine/Orc/RawByteChannel.h"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|namespace
name|orc
block|{
name|namespace
name|remote
block|{
name|class
name|DirectBufferWriter
block|{
name|public
label|:
name|DirectBufferWriter
argument_list|()
operator|=
expr|default
expr_stmt|;
name|DirectBufferWriter
argument_list|(
argument|const char *Src
argument_list|,
argument|JITTargetAddress Dst
argument_list|,
argument|uint64_t Size
argument_list|)
block|:
name|Src
argument_list|(
name|Src
argument_list|)
operator|,
name|Dst
argument_list|(
name|Dst
argument_list|)
operator|,
name|Size
argument_list|(
argument|Size
argument_list|)
block|{}
specifier|const
name|char
operator|*
name|getSrc
argument_list|()
specifier|const
block|{
return|return
name|Src
return|;
block|}
name|JITTargetAddress
name|getDst
argument_list|()
specifier|const
block|{
return|return
name|Dst
return|;
block|}
name|uint64_t
name|getSize
argument_list|()
specifier|const
block|{
return|return
name|Size
return|;
block|}
name|private
label|:
specifier|const
name|char
modifier|*
name|Src
decl_stmt|;
name|JITTargetAddress
name|Dst
decl_stmt|;
name|uint64_t
name|Size
decl_stmt|;
block|}
empty_stmt|;
block|}
comment|// end namespace remote
name|namespace
name|rpc
block|{
name|template
operator|<
operator|>
name|class
name|RPCTypeName
operator|<
name|remote
operator|::
name|DirectBufferWriter
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"DirectBufferWriter"
return|;
block|}
expr|}
block|;
name|template
operator|<
name|typename
name|ChannelT
operator|>
name|class
name|SerializationTraits
operator|<
name|ChannelT
block|,
name|remote
operator|::
name|DirectBufferWriter
block|,
name|remote
operator|::
name|DirectBufferWriter
block|,
name|typename
name|std
operator|::
name|enable_if
operator|<
name|std
operator|::
name|is_base_of
operator|<
name|RawByteChannel
block|,
name|ChannelT
operator|>
operator|::
name|value
operator|>
operator|::
name|type
operator|>
block|{
name|public
operator|:
specifier|static
name|Error
name|serialize
argument_list|(
argument|ChannelT&C
argument_list|,
argument|const remote::DirectBufferWriter&DBW
argument_list|)
block|{
if|if
condition|(
name|auto
name|EC
init|=
name|serializeSeq
argument_list|(
name|C
argument_list|,
name|DBW
operator|.
name|getDst
argument_list|()
argument_list|)
condition|)
return|return
name|EC
return|;
if|if
condition|(
name|auto
name|EC
init|=
name|serializeSeq
argument_list|(
name|C
argument_list|,
name|DBW
operator|.
name|getSize
argument_list|()
argument_list|)
condition|)
return|return
name|EC
return|;
return|return
name|C
operator|.
name|appendBytes
argument_list|(
name|DBW
operator|.
name|getSrc
argument_list|()
argument_list|,
name|DBW
operator|.
name|getSize
argument_list|()
argument_list|)
return|;
block|}
specifier|static
name|Error
name|deserialize
argument_list|(
name|ChannelT
operator|&
name|C
argument_list|,
name|remote
operator|::
name|DirectBufferWriter
operator|&
name|DBW
argument_list|)
block|{
name|JITTargetAddress
name|Dst
decl_stmt|;
if|if
condition|(
name|auto
name|EC
init|=
name|deserializeSeq
argument_list|(
name|C
argument_list|,
name|Dst
argument_list|)
condition|)
return|return
name|EC
return|;
name|uint64_t
name|Size
decl_stmt|;
if|if
condition|(
name|auto
name|EC
init|=
name|deserializeSeq
argument_list|(
name|C
argument_list|,
name|Size
argument_list|)
condition|)
return|return
name|EC
return|;
name|char
modifier|*
name|Addr
init|=
name|reinterpret_cast
operator|<
name|char
operator|*
operator|>
operator|(
name|static_cast
operator|<
name|uintptr_t
operator|>
operator|(
name|Dst
operator|)
operator|)
decl_stmt|;
name|DBW
operator|=
name|remote
operator|::
name|DirectBufferWriter
argument_list|(
name|nullptr
argument_list|,
name|Dst
argument_list|,
name|Size
argument_list|)
expr_stmt|;
return|return
name|C
operator|.
name|readBytes
argument_list|(
name|Addr
argument_list|,
name|Size
argument_list|)
return|;
block|}
block|}
empty_stmt|;
block|}
comment|// end namespace rpc
name|namespace
name|remote
block|{
name|class
name|OrcRemoteTargetRPCAPI
range|:
name|public
name|rpc
operator|::
name|SingleThreadedRPCEndpoint
operator|<
name|rpc
operator|::
name|RawByteChannel
operator|>
block|{
name|protected
operator|:
name|class
name|ResourceIdMgr
block|{
name|public
operator|:
name|using
name|ResourceId
operator|=
name|uint64_t
block|;
specifier|static
specifier|const
name|ResourceId
name|InvalidId
operator|=
operator|~
literal|0U
block|;
name|ResourceId
name|getNext
argument_list|()
block|{
if|if
condition|(
operator|!
name|FreeIds
operator|.
name|empty
argument_list|()
condition|)
block|{
name|ResourceId
name|I
init|=
name|FreeIds
operator|.
name|back
argument_list|()
decl_stmt|;
name|FreeIds
operator|.
name|pop_back
argument_list|()
expr_stmt|;
return|return
name|I
return|;
block|}
return|return
name|NextId
operator|++
return|;
block|}
name|void
name|release
argument_list|(
argument|ResourceId I
argument_list|)
block|{
name|FreeIds
operator|.
name|push_back
argument_list|(
name|I
argument_list|)
block|; }
name|private
operator|:
name|ResourceId
name|NextId
operator|=
literal|0
block|;
name|std
operator|::
name|vector
operator|<
name|ResourceId
operator|>
name|FreeIds
block|;   }
block|;
name|public
operator|:
comment|// FIXME: Remove constructors once MSVC supports synthesizing move-ops.
name|OrcRemoteTargetRPCAPI
argument_list|(
name|rpc
operator|::
name|RawByteChannel
operator|&
name|C
argument_list|)
operator|:
name|rpc
operator|::
name|SingleThreadedRPCEndpoint
operator|<
name|rpc
operator|::
name|RawByteChannel
operator|>
operator|(
name|C
expr|,
name|true
operator|)
block|{}
name|class
name|CallIntVoid
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|CallIntVoid
block|,
name|int32_t
argument_list|(
argument|JITTargetAddress Addr
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"CallIntVoid"
return|;
block|}
expr|}
block|;
name|class
name|CallMain
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|CallMain
block|,
name|int32_t
argument_list|(
argument|JITTargetAddress Addr
argument_list|,
argument|std::vector<std::string> Args
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"CallMain"
return|;
block|}
expr|}
block|;
name|class
name|CallVoidVoid
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|CallVoidVoid
block|,
name|void
argument_list|(
argument|JITTargetAddress FnAddr
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"CallVoidVoid"
return|;
block|}
expr|}
block|;
name|class
name|CreateRemoteAllocator
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|CreateRemoteAllocator
block|,
name|void
argument_list|(
argument|ResourceIdMgr::ResourceId AllocatorID
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"CreateRemoteAllocator"
return|;
block|}
expr|}
block|;
name|class
name|CreateIndirectStubsOwner
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|CreateIndirectStubsOwner
block|,
name|void
argument_list|(
argument|ResourceIdMgr::ResourceId StubOwnerID
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"CreateIndirectStubsOwner"
return|;
block|}
expr|}
block|;
name|class
name|DeregisterEHFrames
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|DeregisterEHFrames
block|,
name|void
argument_list|(
argument|JITTargetAddress Addr
argument_list|,
argument|uint32_t Size
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"DeregisterEHFrames"
return|;
block|}
expr|}
block|;
name|class
name|DestroyRemoteAllocator
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|DestroyRemoteAllocator
block|,
name|void
argument_list|(
argument|ResourceIdMgr::ResourceId AllocatorID
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"DestroyRemoteAllocator"
return|;
block|}
expr|}
block|;
name|class
name|DestroyIndirectStubsOwner
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|DestroyIndirectStubsOwner
block|,
name|void
argument_list|(
argument|ResourceIdMgr::ResourceId StubsOwnerID
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"DestroyIndirectStubsOwner"
return|;
block|}
expr|}
block|;
comment|/// EmitIndirectStubs result is (StubsBase, PtrsBase, NumStubsEmitted).
name|class
name|EmitIndirectStubs
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|EmitIndirectStubs
block|,
name|std
operator|::
name|tuple
operator|<
name|JITTargetAddress
block|,
name|JITTargetAddress
block|,
name|uint32_t
operator|>
operator|(
name|ResourceIdMgr
operator|::
name|ResourceId
name|StubsOwnerID
expr|,
name|uint32_t
name|NumStubsRequired
operator|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"EmitIndirectStubs"
return|;
block|}
expr|}
block|;
name|class
name|EmitResolverBlock
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|EmitResolverBlock
block|,
name|void
argument_list|()
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"EmitResolverBlock"
return|;
block|}
expr|}
block|;
comment|/// EmitTrampolineBlock result is (BlockAddr, NumTrampolines).
name|class
name|EmitTrampolineBlock
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|EmitTrampolineBlock
block|,
name|std
operator|::
name|tuple
operator|<
name|JITTargetAddress
block|,
name|uint32_t
operator|>
operator|(
operator|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"EmitTrampolineBlock"
return|;
block|}
expr|}
block|;
name|class
name|GetSymbolAddress
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|GetSymbolAddress
block|,
name|JITTargetAddress
argument_list|(
argument|std::string SymbolName
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"GetSymbolAddress"
return|;
block|}
expr|}
block|;
comment|/// GetRemoteInfo result is (Triple, PointerSize, PageSize, TrampolineSize,
comment|///                          IndirectStubsSize).
name|class
name|GetRemoteInfo
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|GetRemoteInfo
block|,
name|std
operator|::
name|tuple
operator|<
name|std
operator|::
name|string
block|,
name|uint32_t
block|,
name|uint32_t
block|,
name|uint32_t
block|,
name|uint32_t
operator|>
operator|(
operator|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"GetRemoteInfo"
return|;
block|}
expr|}
block|;
name|class
name|ReadMem
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|ReadMem
block|,
name|std
operator|::
name|vector
operator|<
name|uint8_t
operator|>
operator|(
name|JITTargetAddress
name|Src
expr|,
name|uint64_t
name|Size
operator|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"ReadMem"
return|;
block|}
expr|}
block|;
name|class
name|RegisterEHFrames
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|RegisterEHFrames
block|,
name|void
argument_list|(
argument|JITTargetAddress Addr
argument_list|,
argument|uint32_t Size
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"RegisterEHFrames"
return|;
block|}
expr|}
block|;
name|class
name|ReserveMem
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|ReserveMem
block|,
name|JITTargetAddress
argument_list|(
argument|ResourceIdMgr::ResourceId AllocID
argument_list|,
argument|uint64_t Size
argument_list|,
argument|uint32_t Align
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"ReserveMem"
return|;
block|}
expr|}
block|;
name|class
name|RequestCompile
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|RequestCompile
block|,
name|JITTargetAddress
argument_list|(
argument|JITTargetAddress TrampolineAddr
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"RequestCompile"
return|;
block|}
expr|}
block|;
name|class
name|SetProtections
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|SetProtections
block|,
name|void
argument_list|(
argument|ResourceIdMgr::ResourceId AllocID
argument_list|,
argument|JITTargetAddress Dst
argument_list|,
argument|uint32_t ProtFlags
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"SetProtections"
return|;
block|}
expr|}
block|;
name|class
name|TerminateSession
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|TerminateSession
block|,
name|void
argument_list|()
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"TerminateSession"
return|;
block|}
expr|}
block|;
name|class
name|WriteMem
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|WriteMem
block|,
name|void
argument_list|(
argument|remote::DirectBufferWriter DB
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"WriteMem"
return|;
block|}
expr|}
block|;
name|class
name|WritePtr
operator|:
name|public
name|rpc
operator|::
name|Function
operator|<
name|WritePtr
block|,
name|void
argument_list|(
argument|JITTargetAddress Dst
argument_list|,
argument|JITTargetAddress Val
argument_list|)
operator|>
block|{
name|public
operator|:
specifier|static
specifier|const
name|char
operator|*
name|getName
argument_list|()
block|{
return|return
literal|"WritePtr"
return|;
block|}
expr|}
block|; }
block|;  }
comment|// end namespace remote
block|}
comment|// end namespace orc
block|}
end_decl_stmt

begin_comment
comment|// end namespace llvm
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// LLVM_EXECUTIONENGINE_ORC_ORCREMOTETARGETRPCAPI_H
end_comment

end_unit

