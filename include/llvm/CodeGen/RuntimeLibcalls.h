begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- CodeGen/RuntimeLibcall.h - Runtime Library Calls --------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file defines the enum representing the list of runtime library calls
end_comment

begin_comment
comment|// the backend may emit during code generation, and also some helper functions.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_CODEGEN_RUNTIMELIBCALLS_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_CODEGEN_RUNTIMELIBCALLS_H
end_define

begin_include
include|#
directive|include
file|"llvm/CodeGen/ValueTypes.h"
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|namespace
name|RTLIB
block|{
comment|/// RTLIB::Libcall enum - This enum defines all of the runtime library calls
comment|/// the backend can emit.  The various long double types cannot be merged,
comment|/// because 80-bit library functions use "xf" and 128-bit use "tf".
comment|///
comment|/// When adding PPCF128 functions here, note that their names generally need
comment|/// to be overridden for Darwin with the xxx$LDBL128 form.  See
comment|/// PPCISelLowering.cpp.
comment|///
enum|enum
name|Libcall
block|{
comment|// Integer
name|SHL_I16
block|,
name|SHL_I32
block|,
name|SHL_I64
block|,
name|SHL_I128
block|,
name|SRL_I16
block|,
name|SRL_I32
block|,
name|SRL_I64
block|,
name|SRL_I128
block|,
name|SRA_I16
block|,
name|SRA_I32
block|,
name|SRA_I64
block|,
name|SRA_I128
block|,
name|MUL_I8
block|,
name|MUL_I16
block|,
name|MUL_I32
block|,
name|MUL_I64
block|,
name|MUL_I128
block|,
name|SDIV_I8
block|,
name|SDIV_I16
block|,
name|SDIV_I32
block|,
name|SDIV_I64
block|,
name|SDIV_I128
block|,
name|UDIV_I8
block|,
name|UDIV_I16
block|,
name|UDIV_I32
block|,
name|UDIV_I64
block|,
name|UDIV_I128
block|,
name|SREM_I8
block|,
name|SREM_I16
block|,
name|SREM_I32
block|,
name|SREM_I64
block|,
name|SREM_I128
block|,
name|UREM_I8
block|,
name|UREM_I16
block|,
name|UREM_I32
block|,
name|UREM_I64
block|,
name|UREM_I128
block|,
name|NEG_I32
block|,
name|NEG_I64
block|,
comment|// FLOATING POINT
name|ADD_F32
block|,
name|ADD_F64
block|,
name|ADD_F80
block|,
name|ADD_PPCF128
block|,
name|SUB_F32
block|,
name|SUB_F64
block|,
name|SUB_F80
block|,
name|SUB_PPCF128
block|,
name|MUL_F32
block|,
name|MUL_F64
block|,
name|MUL_F80
block|,
name|MUL_PPCF128
block|,
name|DIV_F32
block|,
name|DIV_F64
block|,
name|DIV_F80
block|,
name|DIV_PPCF128
block|,
name|REM_F32
block|,
name|REM_F64
block|,
name|REM_F80
block|,
name|REM_PPCF128
block|,
name|POWI_F32
block|,
name|POWI_F64
block|,
name|POWI_F80
block|,
name|POWI_PPCF128
block|,
name|SQRT_F32
block|,
name|SQRT_F64
block|,
name|SQRT_F80
block|,
name|SQRT_PPCF128
block|,
name|LOG_F32
block|,
name|LOG_F64
block|,
name|LOG_F80
block|,
name|LOG_PPCF128
block|,
name|LOG2_F32
block|,
name|LOG2_F64
block|,
name|LOG2_F80
block|,
name|LOG2_PPCF128
block|,
name|LOG10_F32
block|,
name|LOG10_F64
block|,
name|LOG10_F80
block|,
name|LOG10_PPCF128
block|,
name|EXP_F32
block|,
name|EXP_F64
block|,
name|EXP_F80
block|,
name|EXP_PPCF128
block|,
name|EXP2_F32
block|,
name|EXP2_F64
block|,
name|EXP2_F80
block|,
name|EXP2_PPCF128
block|,
name|SIN_F32
block|,
name|SIN_F64
block|,
name|SIN_F80
block|,
name|SIN_PPCF128
block|,
name|COS_F32
block|,
name|COS_F64
block|,
name|COS_F80
block|,
name|COS_PPCF128
block|,
name|POW_F32
block|,
name|POW_F64
block|,
name|POW_F80
block|,
name|POW_PPCF128
block|,
name|CEIL_F32
block|,
name|CEIL_F64
block|,
name|CEIL_F80
block|,
name|CEIL_PPCF128
block|,
name|TRUNC_F32
block|,
name|TRUNC_F64
block|,
name|TRUNC_F80
block|,
name|TRUNC_PPCF128
block|,
name|RINT_F32
block|,
name|RINT_F64
block|,
name|RINT_F80
block|,
name|RINT_PPCF128
block|,
name|NEARBYINT_F32
block|,
name|NEARBYINT_F64
block|,
name|NEARBYINT_F80
block|,
name|NEARBYINT_PPCF128
block|,
name|FLOOR_F32
block|,
name|FLOOR_F64
block|,
name|FLOOR_F80
block|,
name|FLOOR_PPCF128
block|,
name|COPYSIGN_F32
block|,
name|COPYSIGN_F64
block|,
name|COPYSIGN_F80
block|,
name|COPYSIGN_PPCF128
block|,
comment|// CONVERSION
name|FPEXT_F32_F64
block|,
name|FPEXT_F16_F32
block|,
name|FPROUND_F32_F16
block|,
name|FPROUND_F64_F32
block|,
name|FPROUND_F80_F32
block|,
name|FPROUND_PPCF128_F32
block|,
name|FPROUND_F80_F64
block|,
name|FPROUND_PPCF128_F64
block|,
name|FPTOSINT_F32_I8
block|,
name|FPTOSINT_F32_I16
block|,
name|FPTOSINT_F32_I32
block|,
name|FPTOSINT_F32_I64
block|,
name|FPTOSINT_F32_I128
block|,
name|FPTOSINT_F64_I32
block|,
name|FPTOSINT_F64_I64
block|,
name|FPTOSINT_F64_I128
block|,
name|FPTOSINT_F80_I32
block|,
name|FPTOSINT_F80_I64
block|,
name|FPTOSINT_F80_I128
block|,
name|FPTOSINT_PPCF128_I32
block|,
name|FPTOSINT_PPCF128_I64
block|,
name|FPTOSINT_PPCF128_I128
block|,
name|FPTOUINT_F32_I8
block|,
name|FPTOUINT_F32_I16
block|,
name|FPTOUINT_F32_I32
block|,
name|FPTOUINT_F32_I64
block|,
name|FPTOUINT_F32_I128
block|,
name|FPTOUINT_F64_I32
block|,
name|FPTOUINT_F64_I64
block|,
name|FPTOUINT_F64_I128
block|,
name|FPTOUINT_F80_I32
block|,
name|FPTOUINT_F80_I64
block|,
name|FPTOUINT_F80_I128
block|,
name|FPTOUINT_PPCF128_I32
block|,
name|FPTOUINT_PPCF128_I64
block|,
name|FPTOUINT_PPCF128_I128
block|,
name|SINTTOFP_I32_F32
block|,
name|SINTTOFP_I32_F64
block|,
name|SINTTOFP_I32_F80
block|,
name|SINTTOFP_I32_PPCF128
block|,
name|SINTTOFP_I64_F32
block|,
name|SINTTOFP_I64_F64
block|,
name|SINTTOFP_I64_F80
block|,
name|SINTTOFP_I64_PPCF128
block|,
name|SINTTOFP_I128_F32
block|,
name|SINTTOFP_I128_F64
block|,
name|SINTTOFP_I128_F80
block|,
name|SINTTOFP_I128_PPCF128
block|,
name|UINTTOFP_I32_F32
block|,
name|UINTTOFP_I32_F64
block|,
name|UINTTOFP_I32_F80
block|,
name|UINTTOFP_I32_PPCF128
block|,
name|UINTTOFP_I64_F32
block|,
name|UINTTOFP_I64_F64
block|,
name|UINTTOFP_I64_F80
block|,
name|UINTTOFP_I64_PPCF128
block|,
name|UINTTOFP_I128_F32
block|,
name|UINTTOFP_I128_F64
block|,
name|UINTTOFP_I128_F80
block|,
name|UINTTOFP_I128_PPCF128
block|,
comment|// COMPARISON
name|OEQ_F32
block|,
name|OEQ_F64
block|,
name|UNE_F32
block|,
name|UNE_F64
block|,
name|OGE_F32
block|,
name|OGE_F64
block|,
name|OLT_F32
block|,
name|OLT_F64
block|,
name|OLE_F32
block|,
name|OLE_F64
block|,
name|OGT_F32
block|,
name|OGT_F64
block|,
name|UO_F32
block|,
name|UO_F64
block|,
name|O_F32
block|,
name|O_F64
block|,
comment|// MEMORY
name|MEMCPY
block|,
name|MEMSET
block|,
name|MEMMOVE
block|,
comment|// EXCEPTION HANDLING
name|UNWIND_RESUME
block|,
name|UNKNOWN_LIBCALL
block|}
enum|;
comment|/// getFPEXT - Return the FPEXT_*_* value for the given types, or
comment|/// UNKNOWN_LIBCALL if there is none.
name|Libcall
name|getFPEXT
parameter_list|(
name|EVT
name|OpVT
parameter_list|,
name|EVT
name|RetVT
parameter_list|)
function_decl|;
comment|/// getFPROUND - Return the FPROUND_*_* value for the given types, or
comment|/// UNKNOWN_LIBCALL if there is none.
name|Libcall
name|getFPROUND
parameter_list|(
name|EVT
name|OpVT
parameter_list|,
name|EVT
name|RetVT
parameter_list|)
function_decl|;
comment|/// getFPTOSINT - Return the FPTOSINT_*_* value for the given types, or
comment|/// UNKNOWN_LIBCALL if there is none.
name|Libcall
name|getFPTOSINT
parameter_list|(
name|EVT
name|OpVT
parameter_list|,
name|EVT
name|RetVT
parameter_list|)
function_decl|;
comment|/// getFPTOUINT - Return the FPTOUINT_*_* value for the given types, or
comment|/// UNKNOWN_LIBCALL if there is none.
name|Libcall
name|getFPTOUINT
parameter_list|(
name|EVT
name|OpVT
parameter_list|,
name|EVT
name|RetVT
parameter_list|)
function_decl|;
comment|/// getSINTTOFP - Return the SINTTOFP_*_* value for the given types, or
comment|/// UNKNOWN_LIBCALL if there is none.
name|Libcall
name|getSINTTOFP
parameter_list|(
name|EVT
name|OpVT
parameter_list|,
name|EVT
name|RetVT
parameter_list|)
function_decl|;
comment|/// getUINTTOFP - Return the UINTTOFP_*_* value for the given types, or
comment|/// UNKNOWN_LIBCALL if there is none.
name|Libcall
name|getUINTTOFP
parameter_list|(
name|EVT
name|OpVT
parameter_list|,
name|EVT
name|RetVT
parameter_list|)
function_decl|;
block|}
block|}
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

