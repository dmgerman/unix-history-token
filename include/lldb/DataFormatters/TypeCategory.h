begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- TypeCategory.h ------------------------------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|lldb_TypeCategory_h_
end_ifndef

begin_define
define|#
directive|define
name|lldb_TypeCategory_h_
end_define

begin_comment
comment|// C Includes
end_comment

begin_comment
comment|// C++ Includes
end_comment

begin_include
include|#
directive|include
file|<initializer_list>
end_include

begin_include
include|#
directive|include
file|<memory>
end_include

begin_include
include|#
directive|include
file|<mutex>
end_include

begin_include
include|#
directive|include
file|<string>
end_include

begin_include
include|#
directive|include
file|<vector>
end_include

begin_comment
comment|// Other libraries and framework includes
end_comment

begin_comment
comment|// Project includes
end_comment

begin_include
include|#
directive|include
file|"lldb/lldb-public.h"
end_include

begin_include
include|#
directive|include
file|"lldb/lldb-enumerations.h"
end_include

begin_include
include|#
directive|include
file|"lldb/DataFormatters/FormatClasses.h"
end_include

begin_include
include|#
directive|include
file|"lldb/DataFormatters/FormattersContainer.h"
end_include

begin_decl_stmt
name|namespace
name|lldb_private
block|{
name|template
operator|<
name|typename
name|FormatterImpl
operator|>
name|class
name|FormatterContainerPair
block|{
name|public
operator|:
typedef|typedef
name|FormattersContainer
operator|<
name|ConstString
operator|,
name|FormatterImpl
operator|>
name|ExactMatchContainer
expr_stmt|;
typedef|typedef
name|FormattersContainer
operator|<
name|lldb
operator|::
name|RegularExpressionSP
operator|,
name|FormatterImpl
operator|>
name|RegexMatchContainer
expr_stmt|;
typedef|typedef
name|typename
name|ExactMatchContainer
operator|::
name|MapType
name|ExactMatchMap
expr_stmt|;
typedef|typedef
name|typename
name|RegexMatchContainer
operator|::
name|MapType
name|RegexMatchMap
expr_stmt|;
typedef|typedef
name|typename
name|ExactMatchContainer
operator|::
name|MapValueType
name|MapValueType
expr_stmt|;
typedef|typedef
name|typename
name|ExactMatchContainer
operator|::
name|SharedPointer
name|ExactMatchContainerSP
expr_stmt|;
typedef|typedef
name|typename
name|RegexMatchContainer
operator|::
name|SharedPointer
name|RegexMatchContainerSP
expr_stmt|;
typedef|typedef
name|typename
name|ExactMatchContainer
operator|::
name|ForEachCallback
name|ExactMatchForEachCallback
expr_stmt|;
typedef|typedef
name|typename
name|RegexMatchContainer
operator|::
name|ForEachCallback
name|RegexMatchForEachCallback
expr_stmt|;
name|FormatterContainerPair
argument_list|(
specifier|const
name|char
operator|*
name|exact_name
argument_list|,
specifier|const
name|char
operator|*
name|regex_name
argument_list|,
name|IFormatChangeListener
operator|*
name|clist
argument_list|)
operator|:
name|m_exact_sp
argument_list|(
argument|new ExactMatchContainer(std::string(exact_name),clist)
argument_list|)
operator|,
name|m_regex_sp
argument_list|(
argument|new RegexMatchContainer(std::string(regex_name),clist)
argument_list|)
block|{         }
operator|~
name|FormatterContainerPair
argument_list|()
operator|=
expr|default
expr_stmt|;
name|ExactMatchContainerSP
name|GetExactMatch
argument_list|()
specifier|const
block|{
return|return
name|m_exact_sp
return|;
block|}
name|RegexMatchContainerSP
name|GetRegexMatch
argument_list|()
specifier|const
block|{
return|return
name|m_regex_sp
return|;
block|}
name|uint32_t
name|GetCount
parameter_list|()
block|{
return|return
name|GetExactMatch
argument_list|()
operator|->
name|GetCount
argument_list|()
operator|+
name|GetRegexMatch
argument_list|()
operator|->
name|GetCount
argument_list|()
return|;
block|}
name|private
label|:
name|ExactMatchContainerSP
name|m_exact_sp
decl_stmt|;
name|RegexMatchContainerSP
name|m_regex_sp
decl_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_decl_stmt
name|class
name|TypeCategoryImpl
block|{
name|private
label|:
typedef|typedef
name|FormatterContainerPair
operator|<
name|TypeFormatImpl
operator|>
name|FormatContainer
expr_stmt|;
typedef|typedef
name|FormatterContainerPair
operator|<
name|TypeSummaryImpl
operator|>
name|SummaryContainer
expr_stmt|;
typedef|typedef
name|FormatterContainerPair
operator|<
name|TypeFilterImpl
operator|>
name|FilterContainer
expr_stmt|;
typedef|typedef
name|FormatterContainerPair
operator|<
name|TypeValidatorImpl
operator|>
name|ValidatorContainer
expr_stmt|;
ifndef|#
directive|ifndef
name|LLDB_DISABLE_PYTHON
typedef|typedef
name|FormatterContainerPair
operator|<
name|SyntheticChildren
operator|>
name|SynthContainer
expr_stmt|;
endif|#
directive|endif
comment|// LLDB_DISABLE_PYTHON
name|public
label|:
typedef|typedef
name|uint16_t
name|FormatCategoryItems
typedef|;
specifier|static
specifier|const
name|uint16_t
name|ALL_ITEM_TYPES
init|=
name|UINT16_MAX
decl_stmt|;
typedef|typedef
name|FormatContainer
operator|::
name|ExactMatchContainerSP
name|FormatContainerSP
expr_stmt|;
typedef|typedef
name|FormatContainer
operator|::
name|RegexMatchContainerSP
name|RegexFormatContainerSP
expr_stmt|;
typedef|typedef
name|SummaryContainer
operator|::
name|ExactMatchContainerSP
name|SummaryContainerSP
expr_stmt|;
typedef|typedef
name|SummaryContainer
operator|::
name|RegexMatchContainerSP
name|RegexSummaryContainerSP
expr_stmt|;
typedef|typedef
name|FilterContainer
operator|::
name|ExactMatchContainerSP
name|FilterContainerSP
expr_stmt|;
typedef|typedef
name|FilterContainer
operator|::
name|RegexMatchContainerSP
name|RegexFilterContainerSP
expr_stmt|;
ifndef|#
directive|ifndef
name|LLDB_DISABLE_PYTHON
typedef|typedef
name|SynthContainer
operator|::
name|ExactMatchContainerSP
name|SynthContainerSP
expr_stmt|;
typedef|typedef
name|SynthContainer
operator|::
name|RegexMatchContainerSP
name|RegexSynthContainerSP
expr_stmt|;
endif|#
directive|endif
comment|// LLDB_DISABLE_PYTHON
typedef|typedef
name|ValidatorContainer
operator|::
name|ExactMatchContainerSP
name|ValidatorContainerSP
expr_stmt|;
typedef|typedef
name|ValidatorContainer
operator|::
name|RegexMatchContainerSP
name|RegexValidatorContainerSP
expr_stmt|;
name|template
operator|<
name|typename
name|T
operator|>
name|class
name|ForEachCallbacks
block|{
name|public
operator|:
name|ForEachCallbacks
argument_list|()
operator|=
expr|default
block|;
operator|~
name|ForEachCallbacks
argument_list|()
operator|=
expr|default
block|;
name|template
operator|<
name|typename
name|U
operator|=
name|TypeFormatImpl
operator|>
name|typename
name|std
operator|::
name|enable_if
operator|<
name|std
operator|::
name|is_same
operator|<
name|U
block|,
name|T
operator|>
operator|::
name|value
block|,
name|ForEachCallbacks
operator|&
operator|>
operator|::
name|type
name|SetExact
argument_list|(
argument|FormatContainer::ExactMatchForEachCallback callback
argument_list|)
block|{
name|m_format_exact
operator|=
name|callback
block|;
return|return
operator|*
name|this
return|;
block|}
name|template
operator|<
name|typename
name|U
operator|=
name|TypeFormatImpl
operator|>
name|typename
name|std
operator|::
name|enable_if
operator|<
name|std
operator|::
name|is_same
operator|<
name|U
block|,
name|T
operator|>
operator|::
name|value
block|,
name|ForEachCallbacks
operator|&
operator|>
operator|::
name|type
name|SetWithRegex
argument_list|(
argument|FormatContainer::RegexMatchForEachCallback callback
argument_list|)
block|{
name|m_format_regex
operator|=
name|callback
block|;
return|return
operator|*
name|this
return|;
block|}
name|template
operator|<
name|typename
name|U
operator|=
name|TypeSummaryImpl
operator|>
name|typename
name|std
operator|::
name|enable_if
operator|<
name|std
operator|::
name|is_same
operator|<
name|U
block|,
name|T
operator|>
operator|::
name|value
block|,
name|ForEachCallbacks
operator|&
operator|>
operator|::
name|type
name|SetExact
argument_list|(
argument|SummaryContainer::ExactMatchForEachCallback callback
argument_list|)
block|{
name|m_summary_exact
operator|=
name|callback
block|;
return|return
operator|*
name|this
return|;
block|}
name|template
operator|<
name|typename
name|U
operator|=
name|TypeSummaryImpl
operator|>
name|typename
name|std
operator|::
name|enable_if
operator|<
name|std
operator|::
name|is_same
operator|<
name|U
block|,
name|T
operator|>
operator|::
name|value
block|,
name|ForEachCallbacks
operator|&
operator|>
operator|::
name|type
name|SetWithRegex
argument_list|(
argument|SummaryContainer::RegexMatchForEachCallback callback
argument_list|)
block|{
name|m_summary_regex
operator|=
name|callback
block|;
return|return
operator|*
name|this
return|;
block|}
name|template
operator|<
name|typename
name|U
operator|=
name|TypeFilterImpl
operator|>
name|typename
name|std
operator|::
name|enable_if
operator|<
name|std
operator|::
name|is_same
operator|<
name|U
block|,
name|T
operator|>
operator|::
name|value
block|,
name|ForEachCallbacks
operator|&
operator|>
operator|::
name|type
name|SetExact
argument_list|(
argument|FilterContainer::ExactMatchForEachCallback callback
argument_list|)
block|{
name|m_filter_exact
operator|=
name|callback
block|;
return|return
operator|*
name|this
return|;
block|}
name|template
operator|<
name|typename
name|U
operator|=
name|TypeFilterImpl
operator|>
name|typename
name|std
operator|::
name|enable_if
operator|<
name|std
operator|::
name|is_same
operator|<
name|U
block|,
name|T
operator|>
operator|::
name|value
block|,
name|ForEachCallbacks
operator|&
operator|>
operator|::
name|type
name|SetWithRegex
argument_list|(
argument|FilterContainer::RegexMatchForEachCallback callback
argument_list|)
block|{
name|m_filter_regex
operator|=
name|callback
block|;
return|return
operator|*
name|this
return|;
block|}
ifndef|#
directive|ifndef
name|LLDB_DISABLE_PYTHON
name|template
operator|<
name|typename
name|U
operator|=
name|SyntheticChildren
operator|>
name|typename
name|std
operator|::
name|enable_if
operator|<
name|std
operator|::
name|is_same
operator|<
name|U
block|,
name|T
operator|>
operator|::
name|value
block|,
name|ForEachCallbacks
operator|&
operator|>
operator|::
name|type
name|SetExact
argument_list|(
argument|SynthContainer::ExactMatchForEachCallback callback
argument_list|)
block|{
name|m_synth_exact
operator|=
name|callback
block|;
return|return
operator|*
name|this
return|;
block|}
name|template
operator|<
name|typename
name|U
operator|=
name|SyntheticChildren
operator|>
name|typename
name|std
operator|::
name|enable_if
operator|<
name|std
operator|::
name|is_same
operator|<
name|U
block|,
name|T
operator|>
operator|::
name|value
block|,
name|ForEachCallbacks
operator|&
operator|>
operator|::
name|type
name|SetWithRegex
argument_list|(
argument|SynthContainer::RegexMatchForEachCallback callback
argument_list|)
block|{
name|m_synth_regex
operator|=
name|callback
block|;
return|return
operator|*
name|this
return|;
block|}
endif|#
directive|endif
comment|// LLDB_DISABLE_PYTHON
name|template
operator|<
name|typename
name|U
operator|=
name|TypeValidatorImpl
operator|>
name|typename
name|std
operator|::
name|enable_if
operator|<
name|std
operator|::
name|is_same
operator|<
name|U
block|,
name|T
operator|>
operator|::
name|value
block|,
name|ForEachCallbacks
operator|&
operator|>
operator|::
name|type
name|SetExact
argument_list|(
argument|ValidatorContainer::ExactMatchForEachCallback callback
argument_list|)
block|{
name|m_validator_exact
operator|=
name|callback
block|;
return|return
operator|*
name|this
return|;
block|}
name|template
operator|<
name|typename
name|U
operator|=
name|TypeValidatorImpl
operator|>
name|typename
name|std
operator|::
name|enable_if
operator|<
name|std
operator|::
name|is_same
operator|<
name|U
block|,
name|T
operator|>
operator|::
name|value
block|,
name|ForEachCallbacks
operator|&
operator|>
operator|::
name|type
name|SetWithRegex
argument_list|(
argument|ValidatorContainer::RegexMatchForEachCallback callback
argument_list|)
block|{
name|m_validator_regex
operator|=
name|callback
block|;
return|return
operator|*
name|this
return|;
block|}
name|FormatContainer
operator|::
name|ExactMatchForEachCallback
name|GetFormatExactCallback
argument_list|()
specifier|const
block|{
return|return
name|m_format_exact
return|;
block|}
name|FormatContainer
operator|::
name|RegexMatchForEachCallback
name|GetFormatRegexCallback
argument_list|()
specifier|const
block|{
return|return
name|m_format_regex
return|;
block|}
name|SummaryContainer
operator|::
name|ExactMatchForEachCallback
name|GetSummaryExactCallback
argument_list|()
specifier|const
block|{
return|return
name|m_summary_exact
return|;
block|}
name|SummaryContainer
operator|::
name|RegexMatchForEachCallback
name|GetSummaryRegexCallback
argument_list|()
specifier|const
block|{
return|return
name|m_summary_regex
return|;
block|}
name|FilterContainer
operator|::
name|ExactMatchForEachCallback
name|GetFilterExactCallback
argument_list|()
specifier|const
block|{
return|return
name|m_filter_exact
return|;
block|}
name|FilterContainer
operator|::
name|RegexMatchForEachCallback
name|GetFilterRegexCallback
argument_list|()
specifier|const
block|{
return|return
name|m_filter_regex
return|;
block|}
ifndef|#
directive|ifndef
name|LLDB_DISABLE_PYTHON
name|SynthContainer
operator|::
name|ExactMatchForEachCallback
name|GetSynthExactCallback
argument_list|()
specifier|const
block|{
return|return
name|m_synth_exact
return|;
block|}
name|SynthContainer
operator|::
name|RegexMatchForEachCallback
name|GetSynthRegexCallback
argument_list|()
specifier|const
block|{
return|return
name|m_synth_regex
return|;
block|}
endif|#
directive|endif
comment|// LLDB_DISABLE_PYTHON
name|ValidatorContainer
operator|::
name|ExactMatchForEachCallback
name|GetValidatorExactCallback
argument_list|()
specifier|const
block|{
return|return
name|m_validator_exact
return|;
block|}
name|ValidatorContainer
operator|::
name|RegexMatchForEachCallback
name|GetValidatorRegexCallback
argument_list|()
specifier|const
block|{
return|return
name|m_validator_regex
return|;
block|}
name|private
operator|:
name|FormatContainer
operator|::
name|ExactMatchForEachCallback
name|m_format_exact
block|;
name|FormatContainer
operator|::
name|RegexMatchForEachCallback
name|m_format_regex
block|;
name|SummaryContainer
operator|::
name|ExactMatchForEachCallback
name|m_summary_exact
block|;
name|SummaryContainer
operator|::
name|RegexMatchForEachCallback
name|m_summary_regex
block|;
name|FilterContainer
operator|::
name|ExactMatchForEachCallback
name|m_filter_exact
block|;
name|FilterContainer
operator|::
name|RegexMatchForEachCallback
name|m_filter_regex
block|;
ifndef|#
directive|ifndef
name|LLDB_DISABLE_PYTHON
name|SynthContainer
operator|::
name|ExactMatchForEachCallback
name|m_synth_exact
block|;
name|SynthContainer
operator|::
name|RegexMatchForEachCallback
name|m_synth_regex
block|;
endif|#
directive|endif
comment|// LLDB_DISABLE_PYTHON
name|ValidatorContainer
operator|::
name|ExactMatchForEachCallback
name|m_validator_exact
block|;
name|ValidatorContainer
operator|::
name|RegexMatchForEachCallback
name|m_validator_regex
block|;         }
expr_stmt|;
name|TypeCategoryImpl
argument_list|(
argument|IFormatChangeListener* clist
argument_list|,
argument|ConstString name
argument_list|,
argument|std::initializer_list<lldb::LanguageType> langs = {}
argument_list|)
empty_stmt|;
name|template
operator|<
name|typename
name|T
operator|>
name|void
name|ForEach
argument_list|(
argument|const ForEachCallbacks<T>&foreach
argument_list|)
block|{
name|GetTypeFormatsContainer
argument_list|()
operator|->
name|ForEach
argument_list|(
name|foreach
operator|.
name|GetFormatExactCallback
argument_list|()
argument_list|)
block|;
name|GetRegexTypeFormatsContainer
argument_list|()
operator|->
name|ForEach
argument_list|(
name|foreach
operator|.
name|GetFormatRegexCallback
argument_list|()
argument_list|)
block|;
name|GetTypeSummariesContainer
argument_list|()
operator|->
name|ForEach
argument_list|(
name|foreach
operator|.
name|GetSummaryExactCallback
argument_list|()
argument_list|)
block|;
name|GetRegexTypeSummariesContainer
argument_list|()
operator|->
name|ForEach
argument_list|(
name|foreach
operator|.
name|GetSummaryRegexCallback
argument_list|()
argument_list|)
block|;
name|GetTypeFiltersContainer
argument_list|()
operator|->
name|ForEach
argument_list|(
name|foreach
operator|.
name|GetFilterExactCallback
argument_list|()
argument_list|)
block|;
name|GetRegexTypeFiltersContainer
argument_list|()
operator|->
name|ForEach
argument_list|(
name|foreach
operator|.
name|GetFilterRegexCallback
argument_list|()
argument_list|)
block|;
ifndef|#
directive|ifndef
name|LLDB_DISABLE_PYTHON
name|GetTypeSyntheticsContainer
argument_list|()
operator|->
name|ForEach
argument_list|(
name|foreach
operator|.
name|GetSynthExactCallback
argument_list|()
argument_list|)
block|;
name|GetRegexTypeSyntheticsContainer
argument_list|()
operator|->
name|ForEach
argument_list|(
name|foreach
operator|.
name|GetSynthRegexCallback
argument_list|()
argument_list|)
block|;
endif|#
directive|endif
comment|// LLDB_DISABLE_PYTHON
name|GetTypeValidatorsContainer
argument_list|()
operator|->
name|ForEach
argument_list|(
name|foreach
operator|.
name|GetValidatorExactCallback
argument_list|()
argument_list|)
block|;
name|GetRegexTypeValidatorsContainer
argument_list|()
operator|->
name|ForEach
argument_list|(
name|foreach
operator|.
name|GetValidatorRegexCallback
argument_list|()
argument_list|)
block|;         }
name|FormatContainerSP
name|GetTypeFormatsContainer
argument_list|()
block|{
return|return
name|m_format_cont
operator|.
name|GetExactMatch
argument_list|()
return|;
block|}
name|RegexFormatContainerSP
name|GetRegexTypeFormatsContainer
parameter_list|()
block|{
return|return
name|m_format_cont
operator|.
name|GetRegexMatch
argument_list|()
return|;
block|}
name|FormatContainer
modifier|&
name|GetFormatContainer
parameter_list|()
block|{
return|return
name|m_format_cont
return|;
block|}
name|SummaryContainerSP
name|GetTypeSummariesContainer
parameter_list|()
block|{
return|return
name|m_summary_cont
operator|.
name|GetExactMatch
argument_list|()
return|;
block|}
name|RegexSummaryContainerSP
name|GetRegexTypeSummariesContainer
parameter_list|()
block|{
return|return
name|m_summary_cont
operator|.
name|GetRegexMatch
argument_list|()
return|;
block|}
name|SummaryContainer
modifier|&
name|GetSummaryContainer
parameter_list|()
block|{
return|return
name|m_summary_cont
return|;
block|}
name|FilterContainerSP
name|GetTypeFiltersContainer
parameter_list|()
block|{
return|return
name|m_filter_cont
operator|.
name|GetExactMatch
argument_list|()
return|;
block|}
name|RegexFilterContainerSP
name|GetRegexTypeFiltersContainer
parameter_list|()
block|{
return|return
name|m_filter_cont
operator|.
name|GetRegexMatch
argument_list|()
return|;
block|}
name|FilterContainer
modifier|&
name|GetFilterContainer
parameter_list|()
block|{
return|return
name|m_filter_cont
return|;
block|}
name|FormatContainer
operator|::
name|MapValueType
name|GetFormatForType
argument_list|(
argument|lldb::TypeNameSpecifierImplSP type_sp
argument_list|)
expr_stmt|;
name|SummaryContainer
operator|::
name|MapValueType
name|GetSummaryForType
argument_list|(
argument|lldb::TypeNameSpecifierImplSP type_sp
argument_list|)
expr_stmt|;
name|FilterContainer
operator|::
name|MapValueType
name|GetFilterForType
argument_list|(
argument|lldb::TypeNameSpecifierImplSP type_sp
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|LLDB_DISABLE_PYTHON
name|SynthContainer
operator|::
name|MapValueType
name|GetSyntheticForType
argument_list|(
argument|lldb::TypeNameSpecifierImplSP type_sp
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|ValidatorContainer
operator|::
name|MapValueType
name|GetValidatorForType
argument_list|(
argument|lldb::TypeNameSpecifierImplSP type_sp
argument_list|)
expr_stmt|;
name|lldb
operator|::
name|TypeNameSpecifierImplSP
name|GetTypeNameSpecifierForFormatAtIndex
argument_list|(
argument|size_t index
argument_list|)
expr_stmt|;
name|lldb
operator|::
name|TypeNameSpecifierImplSP
name|GetTypeNameSpecifierForSummaryAtIndex
argument_list|(
argument|size_t index
argument_list|)
expr_stmt|;
name|FormatContainer
operator|::
name|MapValueType
name|GetFormatAtIndex
argument_list|(
argument|size_t index
argument_list|)
expr_stmt|;
name|SummaryContainer
operator|::
name|MapValueType
name|GetSummaryAtIndex
argument_list|(
argument|size_t index
argument_list|)
expr_stmt|;
name|FilterContainer
operator|::
name|MapValueType
name|GetFilterAtIndex
argument_list|(
argument|size_t index
argument_list|)
expr_stmt|;
name|lldb
operator|::
name|TypeNameSpecifierImplSP
name|GetTypeNameSpecifierForFilterAtIndex
argument_list|(
argument|size_t index
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|LLDB_DISABLE_PYTHON
name|SynthContainerSP
name|GetTypeSyntheticsContainer
parameter_list|()
block|{
return|return
name|m_synth_cont
operator|.
name|GetExactMatch
argument_list|()
return|;
block|}
name|RegexSynthContainerSP
name|GetRegexTypeSyntheticsContainer
parameter_list|()
block|{
return|return
name|m_synth_cont
operator|.
name|GetRegexMatch
argument_list|()
return|;
block|}
name|SynthContainer
modifier|&
name|GetSyntheticsContainer
parameter_list|()
block|{
return|return
name|m_synth_cont
return|;
block|}
name|SynthContainer
operator|::
name|MapValueType
name|GetSyntheticAtIndex
argument_list|(
argument|size_t index
argument_list|)
expr_stmt|;
name|lldb
operator|::
name|TypeNameSpecifierImplSP
name|GetTypeNameSpecifierForSyntheticAtIndex
argument_list|(
argument|size_t index
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// LLDB_DISABLE_PYTHON
name|ValidatorContainerSP
name|GetTypeValidatorsContainer
parameter_list|()
block|{
return|return
name|m_validator_cont
operator|.
name|GetExactMatch
argument_list|()
return|;
block|}
name|RegexValidatorContainerSP
name|GetRegexTypeValidatorsContainer
parameter_list|()
block|{
return|return
name|m_validator_cont
operator|.
name|GetRegexMatch
argument_list|()
return|;
block|}
name|ValidatorContainer
operator|::
name|MapValueType
name|GetValidatorAtIndex
argument_list|(
argument|size_t index
argument_list|)
expr_stmt|;
name|lldb
operator|::
name|TypeNameSpecifierImplSP
name|GetTypeNameSpecifierForValidatorAtIndex
argument_list|(
argument|size_t index
argument_list|)
expr_stmt|;
name|bool
name|IsEnabled
argument_list|()
specifier|const
block|{
return|return
name|m_enabled
return|;
block|}
name|uint32_t
name|GetEnabledPosition
parameter_list|()
block|{
if|if
condition|(
name|m_enabled
operator|==
name|false
condition|)
return|return
name|UINT32_MAX
return|;
else|else
return|return
name|m_enabled_position
return|;
block|}
name|bool
name|Get
argument_list|(
name|ValueObject
operator|&
name|valobj
argument_list|,
specifier|const
name|FormattersMatchVector
operator|&
name|candidates
argument_list|,
name|lldb
operator|::
name|TypeFormatImplSP
operator|&
name|entry
argument_list|,
name|uint32_t
operator|*
name|reason
operator|=
name|nullptr
argument_list|)
decl_stmt|;
name|bool
name|Get
argument_list|(
name|ValueObject
operator|&
name|valobj
argument_list|,
specifier|const
name|FormattersMatchVector
operator|&
name|candidates
argument_list|,
name|lldb
operator|::
name|TypeSummaryImplSP
operator|&
name|entry
argument_list|,
name|uint32_t
operator|*
name|reason
operator|=
name|nullptr
argument_list|)
decl_stmt|;
name|bool
name|Get
argument_list|(
name|ValueObject
operator|&
name|valobj
argument_list|,
specifier|const
name|FormattersMatchVector
operator|&
name|candidates
argument_list|,
name|lldb
operator|::
name|SyntheticChildrenSP
operator|&
name|entry
argument_list|,
name|uint32_t
operator|*
name|reason
operator|=
name|nullptr
argument_list|)
decl_stmt|;
name|bool
name|Get
argument_list|(
name|ValueObject
operator|&
name|valobj
argument_list|,
specifier|const
name|FormattersMatchVector
operator|&
name|candidates
argument_list|,
name|lldb
operator|::
name|TypeValidatorImplSP
operator|&
name|entry
argument_list|,
name|uint32_t
operator|*
name|reason
operator|=
name|nullptr
argument_list|)
decl_stmt|;
name|void
name|Clear
parameter_list|(
name|FormatCategoryItems
name|items
init|=
name|ALL_ITEM_TYPES
parameter_list|)
function_decl|;
name|bool
name|Delete
parameter_list|(
name|ConstString
name|name
parameter_list|,
name|FormatCategoryItems
name|items
init|=
name|ALL_ITEM_TYPES
parameter_list|)
function_decl|;
name|uint32_t
name|GetCount
parameter_list|(
name|FormatCategoryItems
name|items
init|=
name|ALL_ITEM_TYPES
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
name|GetName
parameter_list|()
block|{
return|return
name|m_name
operator|.
name|GetCString
argument_list|()
return|;
block|}
name|size_t
name|GetNumLanguages
parameter_list|()
function_decl|;
name|lldb
operator|::
name|LanguageType
name|GetLanguageAtIndex
argument_list|(
argument|size_t idx
argument_list|)
expr_stmt|;
name|void
name|AddLanguage
argument_list|(
name|lldb
operator|::
name|LanguageType
name|lang
argument_list|)
decl_stmt|;
name|bool
name|HasLanguage
argument_list|(
name|lldb
operator|::
name|LanguageType
name|lang
argument_list|)
decl_stmt|;
name|std
operator|::
name|string
name|GetDescription
argument_list|()
expr_stmt|;
name|bool
name|AnyMatches
parameter_list|(
name|ConstString
name|type_name
parameter_list|,
name|FormatCategoryItems
name|items
init|=
name|ALL_ITEM_TYPES
parameter_list|,
name|bool
name|only_enabled
init|=
name|true
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|matching_category
init|=
name|nullptr
parameter_list|,
name|FormatCategoryItems
modifier|*
name|matching_type
init|=
name|nullptr
parameter_list|)
function_decl|;
typedef|typedef
name|std
operator|::
name|shared_ptr
operator|<
name|TypeCategoryImpl
operator|>
name|SharedPointer
expr_stmt|;
name|private
label|:
name|FormatContainer
name|m_format_cont
decl_stmt|;
name|SummaryContainer
name|m_summary_cont
decl_stmt|;
name|FilterContainer
name|m_filter_cont
decl_stmt|;
ifndef|#
directive|ifndef
name|LLDB_DISABLE_PYTHON
name|SynthContainer
name|m_synth_cont
decl_stmt|;
endif|#
directive|endif
comment|// LLDB_DISABLE_PYTHON
name|ValidatorContainer
name|m_validator_cont
decl_stmt|;
name|bool
name|m_enabled
decl_stmt|;
name|IFormatChangeListener
modifier|*
name|m_change_listener
decl_stmt|;
name|std
operator|::
name|recursive_mutex
name|m_mutex
expr_stmt|;
name|ConstString
name|m_name
decl_stmt|;
name|std
operator|::
name|vector
operator|<
name|lldb
operator|::
name|LanguageType
operator|>
name|m_languages
expr_stmt|;
name|uint32_t
name|m_enabled_position
decl_stmt|;
name|void
name|Enable
parameter_list|(
name|bool
name|value
parameter_list|,
name|uint32_t
name|position
parameter_list|)
function_decl|;
name|void
name|Disable
parameter_list|()
block|{
name|Enable
argument_list|(
name|false
argument_list|,
name|UINT32_MAX
argument_list|)
expr_stmt|;
block|}
name|bool
name|IsApplicable
parameter_list|(
name|ValueObject
modifier|&
name|valobj
parameter_list|)
function_decl|;
name|uint32_t
name|GetLastEnabledPosition
parameter_list|()
block|{
return|return
name|m_enabled_position
return|;
block|}
name|void
name|SetEnabledPosition
parameter_list|(
name|uint32_t
name|p
parameter_list|)
block|{
name|m_enabled_position
operator|=
name|p
expr_stmt|;
block|}
name|friend
name|class
name|FormatManager
decl_stmt|;
name|friend
name|class
name|LanguageCategory
decl_stmt|;
name|friend
name|class
name|TypeCategoryMap
decl_stmt|;
name|friend
name|class
name|FormattersContainer
operator|<
name|ConstString
operator|,
name|TypeFormatImpl
operator|>
expr_stmt|;
name|friend
name|class
name|FormattersContainer
operator|<
name|lldb
operator|::
name|RegularExpressionSP
operator|,
name|TypeFormatImpl
operator|>
expr_stmt|;
name|friend
name|class
name|FormattersContainer
operator|<
name|ConstString
operator|,
name|TypeSummaryImpl
operator|>
expr_stmt|;
name|friend
name|class
name|FormattersContainer
operator|<
name|lldb
operator|::
name|RegularExpressionSP
operator|,
name|TypeSummaryImpl
operator|>
expr_stmt|;
name|friend
name|class
name|FormattersContainer
operator|<
name|ConstString
operator|,
name|TypeFilterImpl
operator|>
expr_stmt|;
name|friend
name|class
name|FormattersContainer
operator|<
name|lldb
operator|::
name|RegularExpressionSP
operator|,
name|TypeFilterImpl
operator|>
expr_stmt|;
ifndef|#
directive|ifndef
name|LLDB_DISABLE_PYTHON
name|friend
name|class
name|FormattersContainer
operator|<
name|ConstString
operator|,
name|ScriptedSyntheticChildren
operator|>
expr_stmt|;
name|friend
name|class
name|FormattersContainer
operator|<
name|lldb
operator|::
name|RegularExpressionSP
operator|,
name|ScriptedSyntheticChildren
operator|>
expr_stmt|;
endif|#
directive|endif
comment|// LLDB_DISABLE_PYTHON
name|friend
name|class
name|FormattersContainer
operator|<
name|ConstString
operator|,
name|TypeValidatorImpl
operator|>
expr_stmt|;
name|friend
name|class
name|FormattersContainer
operator|<
name|lldb
operator|::
name|RegularExpressionSP
operator|,
name|TypeValidatorImpl
operator|>
expr_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_comment
unit|}
comment|// namespace lldb_private
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|// lldb_TypeCategory_h_
end_comment

end_unit

