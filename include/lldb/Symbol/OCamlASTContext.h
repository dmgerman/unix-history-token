begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- OCamlASTContext.h ------------------------------------------*- C++
end_comment

begin_comment
comment|//-*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|liblldb_OCamlASTContext_h_
end_ifndef

begin_define
define|#
directive|define
name|liblldb_OCamlASTContext_h_
end_define

begin_comment
comment|// C Includes
end_comment

begin_comment
comment|// C++ Includes
end_comment

begin_include
include|#
directive|include
file|<map>
end_include

begin_include
include|#
directive|include
file|<memory>
end_include

begin_include
include|#
directive|include
file|<set>
end_include

begin_include
include|#
directive|include
file|<string>
end_include

begin_include
include|#
directive|include
file|<vector>
end_include

begin_comment
comment|// Other libraries and framework includes
end_comment

begin_comment
comment|// Project includes
end_comment

begin_include
include|#
directive|include
file|"lldb/Symbol/CompilerType.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Symbol/TypeSystem.h"
end_include

begin_include
include|#
directive|include
file|"lldb/Utility/ConstString.h"
end_include

begin_decl_stmt
name|namespace
name|lldb_private
block|{
name|class
name|OCamlASTContext
range|:
name|public
name|TypeSystem
block|{
name|public
operator|:
name|class
name|OCamlType
block|;
typedef|typedef
name|std
operator|::
name|map
operator|<
name|ConstString
operator|,
name|std
operator|::
name|unique_ptr
operator|<
name|OCamlType
operator|>>
name|OCamlTypeMap
expr_stmt|;
name|OCamlASTContext
argument_list|()
decl_stmt|;
operator|~
name|OCamlASTContext
argument_list|()
name|override
expr_stmt|;
name|ConstString
name|GetPluginName
argument_list|()
name|override
expr_stmt|;
name|uint32_t
name|GetPluginVersion
argument_list|()
name|override
expr_stmt|;
specifier|static
name|ConstString
name|GetPluginNameStatic
parameter_list|()
function_decl|;
specifier|static
name|lldb
operator|::
name|TypeSystemSP
name|CreateInstance
argument_list|(
argument|lldb::LanguageType language
argument_list|,
argument|Module *module
argument_list|,
argument|Target *target
argument_list|)
expr_stmt|;
specifier|static
name|void
name|EnumerateSupportedLanguages
argument_list|(
name|std
operator|::
name|set
operator|<
name|lldb
operator|::
name|LanguageType
operator|>
operator|&
name|languages_for_types
argument_list|,
name|std
operator|::
name|set
operator|<
name|lldb
operator|::
name|LanguageType
operator|>
operator|&
name|languages_for_expressions
argument_list|)
decl_stmt|;
specifier|static
name|void
name|Initialize
parameter_list|()
function_decl|;
specifier|static
name|void
name|Terminate
parameter_list|()
function_decl|;
name|DWARFASTParser
operator|*
name|GetDWARFParser
argument_list|()
name|override
expr_stmt|;
name|void
name|SetAddressByteSize
parameter_list|(
name|int
name|byte_size
parameter_list|)
block|{
name|m_pointer_byte_size
operator|=
name|byte_size
expr_stmt|;
block|}
specifier|static
name|bool
name|classof
parameter_list|(
specifier|const
name|TypeSystem
modifier|*
name|ts
parameter_list|)
block|{
return|return
name|ts
operator|->
name|getKind
argument_list|()
operator|==
name|TypeSystem
operator|::
name|eKindOCaml
return|;
block|}
name|ConstString
name|DeclGetName
parameter_list|(
name|void
modifier|*
name|opaque_decl
parameter_list|)
function|override
block|{
return|return
name|ConstString
argument_list|()
return|;
block|}
name|bool
name|DeclContextIsStructUnionOrClass
parameter_list|(
name|void
modifier|*
name|opaque_decl_ctx
parameter_list|)
function|override
block|{
return|return
name|false
return|;
block|}
name|ConstString
name|DeclContextGetName
parameter_list|(
name|void
modifier|*
name|opaque_decl_ctx
parameter_list|)
function|override
block|{
return|return
name|ConstString
argument_list|()
return|;
block|}
name|ConstString
name|DeclContextGetScopeQualifiedName
parameter_list|(
name|void
modifier|*
name|opaque_decl_ctx
parameter_list|)
function|override
block|{
return|return
name|ConstString
argument_list|()
return|;
block|}
name|bool
name|DeclContextIsClassMethod
argument_list|(
name|void
operator|*
name|opaque_decl_ctx
argument_list|,
name|lldb
operator|::
name|LanguageType
operator|*
name|language_ptr
argument_list|,
name|bool
operator|*
name|is_instance_method_ptr
argument_list|,
name|ConstString
operator|*
name|language_object_name_ptr
argument_list|)
name|override
block|{
return|return
name|false
return|;
block|}
name|bool
name|SupportsLanguage
argument_list|(
name|lldb
operator|::
name|LanguageType
name|language
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|GetPointerByteSize
argument_list|()
name|override
expr_stmt|;
name|bool
name|IsArrayType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|CompilerType
operator|*
name|element_type
argument_list|,
name|uint64_t
operator|*
name|size
argument_list|,
name|bool
operator|*
name|is_incomplete
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsAggregateType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsCharType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsCompleteType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsDefined
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsFloatingPointType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|uint32_t
operator|&
name|count
argument_list|,
name|bool
operator|&
name|is_complex
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsFunctionType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|bool
operator|*
name|is_variadic_ptr
operator|=
name|nullptr
argument_list|)
name|override
decl_stmt|;
name|size_t
name|GetNumberOfFunctionArguments
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|CompilerType
name|GetFunctionArgumentAtIndex
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
specifier|const
name|size_t
name|index
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsFunctionPointerType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsBlockPointerType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|CompilerType
operator|*
name|function_pointer_type_ptr
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsIntegerType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|bool
operator|&
name|is_signed
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsPossibleDynamicType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|CompilerType
operator|*
name|target_type
argument_list|,
name|bool
name|check_cplusplus
argument_list|,
name|bool
name|check_objc
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsPointerType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|CompilerType
operator|*
name|pointee_type
operator|=
name|nullptr
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsScalarType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsVoidType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|bool
name|GetCompleteType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|ConstString
name|GetTypeName
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|GetTypeInfo
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|CompilerType
operator|*
name|pointee_or_element_compiler_type
operator|=
name|nullptr
argument_list|)
name|override
decl_stmt|;
name|lldb
operator|::
name|LanguageType
name|GetMinimumLanguage
argument_list|(
argument|lldb::opaque_compiler_type_t type
argument_list|)
name|override
expr_stmt|;
name|lldb
operator|::
name|TypeClass
name|GetTypeClass
argument_list|(
argument|lldb::opaque_compiler_type_t type
argument_list|)
name|override
expr_stmt|;
name|CompilerType
name|GetArrayElementType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|uint64_t
operator|*
name|stride
operator|=
name|nullptr
argument_list|)
name|override
decl_stmt|;
name|CompilerType
name|GetCanonicalType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|int
name|GetFunctionArgumentCount
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|CompilerType
name|GetFunctionArgumentTypeAtIndex
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|size_t
name|idx
argument_list|)
name|override
decl_stmt|;
name|CompilerType
name|GetFunctionReturnType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|size_t
name|GetNumMemberFunctions
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|TypeMemberFunctionImpl
name|GetMemberFunctionAtIndex
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|size_t
name|idx
argument_list|)
name|override
decl_stmt|;
name|CompilerType
name|GetPointeeType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|CompilerType
name|GetPointerType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|uint64_t
name|GetBitSize
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|ExecutionContextScope
operator|*
name|exe_scope
argument_list|)
name|override
decl_stmt|;
name|lldb
operator|::
name|Encoding
name|GetEncoding
argument_list|(
argument|lldb::opaque_compiler_type_t type
argument_list|,
argument|uint64_t&count
argument_list|)
name|override
expr_stmt|;
name|lldb
operator|::
name|Format
name|GetFormat
argument_list|(
argument|lldb::opaque_compiler_type_t type
argument_list|)
name|override
expr_stmt|;
name|uint32_t
name|GetNumChildren
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|bool
name|omit_empty_base_classes
argument_list|)
name|override
decl_stmt|;
name|lldb
operator|::
name|BasicType
name|GetBasicTypeEnumeration
argument_list|(
argument|lldb::opaque_compiler_type_t type
argument_list|)
name|override
expr_stmt|;
name|CompilerType
name|GetBuiltinTypeForEncodingAndBitSize
argument_list|(
name|lldb
operator|::
name|Encoding
name|encoding
argument_list|,
name|size_t
name|bit_size
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|GetNumFields
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|CompilerType
name|GetFieldAtIndex
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|size_t
name|idx
argument_list|,
name|std
operator|::
name|string
operator|&
name|name
argument_list|,
name|uint64_t
operator|*
name|bit_offset_ptr
argument_list|,
name|uint32_t
operator|*
name|bitfield_bit_size_ptr
argument_list|,
name|bool
operator|*
name|is_bitfield_ptr
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|GetNumDirectBaseClasses
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
block|{
return|return
literal|0
return|;
block|}
name|uint32_t
name|GetNumVirtualBaseClasses
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
block|{
return|return
literal|0
return|;
block|}
name|CompilerType
name|GetDirectBaseClassAtIndex
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|size_t
name|idx
argument_list|,
name|uint32_t
operator|*
name|bit_offset_ptr
argument_list|)
name|override
block|{
return|return
name|CompilerType
argument_list|()
return|;
block|}
name|CompilerType
name|GetVirtualBaseClassAtIndex
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|size_t
name|idx
argument_list|,
name|uint32_t
operator|*
name|bit_offset_ptr
argument_list|)
name|override
block|{
return|return
name|CompilerType
argument_list|()
return|;
block|}
name|CompilerType
name|GetChildCompilerTypeAtIndex
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|ExecutionContext
operator|*
name|exe_ctx
argument_list|,
name|size_t
name|idx
argument_list|,
name|bool
name|transparent_pointers
argument_list|,
name|bool
name|omit_empty_base_classes
argument_list|,
name|bool
name|ignore_array_bounds
argument_list|,
name|std
operator|::
name|string
operator|&
name|child_name
argument_list|,
name|uint32_t
operator|&
name|child_byte_size
argument_list|,
name|int32_t
operator|&
name|child_byte_offset
argument_list|,
name|uint32_t
operator|&
name|child_bitfield_bit_size
argument_list|,
name|uint32_t
operator|&
name|child_bitfield_bit_offset
argument_list|,
name|bool
operator|&
name|child_is_base_class
argument_list|,
name|bool
operator|&
name|child_is_deref_of_parent
argument_list|,
name|ValueObject
operator|*
name|valobj
argument_list|,
name|uint64_t
operator|&
name|language_flags
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|GetIndexOfChildWithName
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
specifier|const
name|char
operator|*
name|name
argument_list|,
name|bool
name|omit_empty_base_classes
argument_list|)
name|override
decl_stmt|;
name|size_t
name|GetIndexOfChildMemberWithName
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
specifier|const
name|char
operator|*
name|name
argument_list|,
name|bool
name|omit_empty_base_classes
argument_list|,
name|std
operator|::
name|vector
operator|<
name|uint32_t
operator|>
operator|&
name|child_indexes
argument_list|)
name|override
decl_stmt|;
name|size_t
name|GetNumTemplateArguments
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
block|{
return|return
literal|0
return|;
block|}
name|CompilerType
name|GetTemplateArgument
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|size_t
name|idx
argument_list|,
name|lldb
operator|::
name|TemplateArgumentKind
operator|&
name|kind
argument_list|)
name|override
block|{
return|return
name|CompilerType
argument_list|()
return|;
block|}
name|void
name|DumpValue
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|ExecutionContext
operator|*
name|exe_ctx
argument_list|,
name|Stream
operator|*
name|s
argument_list|,
name|lldb
operator|::
name|Format
name|format
argument_list|,
specifier|const
name|DataExtractor
operator|&
name|data
argument_list|,
name|lldb
operator|::
name|offset_t
name|data_offset
argument_list|,
name|size_t
name|data_byte_size
argument_list|,
name|uint32_t
name|bitfield_bit_size
argument_list|,
name|uint32_t
name|bitfield_bit_offset
argument_list|,
name|bool
name|show_types
argument_list|,
name|bool
name|show_summary
argument_list|,
name|bool
name|verbose
argument_list|,
name|uint32_t
name|depth
argument_list|)
name|override
decl_stmt|;
name|bool
name|DumpTypeValue
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|Stream
operator|*
name|s
argument_list|,
name|lldb
operator|::
name|Format
name|format
argument_list|,
specifier|const
name|DataExtractor
operator|&
name|data
argument_list|,
name|lldb
operator|::
name|offset_t
name|data_offset
argument_list|,
name|size_t
name|data_byte_size
argument_list|,
name|uint32_t
name|bitfield_bit_size
argument_list|,
name|uint32_t
name|bitfield_bit_offset
argument_list|,
name|ExecutionContextScope
operator|*
name|exe_scope
argument_list|)
name|override
decl_stmt|;
name|void
name|DumpTypeDescription
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|void
name|DumpTypeDescription
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|Stream
operator|*
name|s
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsRuntimeGeneratedType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|void
name|DumpSummary
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|ExecutionContext
operator|*
name|exe_ctx
argument_list|,
name|Stream
operator|*
name|s
argument_list|,
specifier|const
name|DataExtractor
operator|&
name|data
argument_list|,
name|lldb
operator|::
name|offset_t
name|data_offset
argument_list|,
name|size_t
name|data_byte_size
argument_list|)
name|override
decl_stmt|;
name|size_t
name|ConvertStringToFloatValue
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
specifier|const
name|char
operator|*
name|s
argument_list|,
name|uint8_t
operator|*
name|dst
argument_list|,
name|size_t
name|dst_size
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsPointerOrReferenceType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|CompilerType
operator|*
name|pointee_type
operator|=
name|nullptr
argument_list|)
name|override
decl_stmt|;
name|unsigned
name|GetTypeQualifiers
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsCStringType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|uint32_t
operator|&
name|length
argument_list|)
name|override
decl_stmt|;
name|size_t
name|GetTypeBitAlign
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|CompilerType
name|GetBasicTypeFromAST
argument_list|(
name|lldb
operator|::
name|BasicType
name|basic_type
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsBeingDefined
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsConst
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|uint32_t
name|IsHomogeneousAggregate
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|CompilerType
operator|*
name|base_type_ptr
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsPolymorphicClass
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsTypedefType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|CompilerType
name|GetTypedefedType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsVectorType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|CompilerType
operator|*
name|element_type
argument_list|,
name|uint64_t
operator|*
name|size
argument_list|)
name|override
decl_stmt|;
name|CompilerType
name|GetFullyUnqualifiedType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|CompilerType
name|GetNonReferenceType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|)
name|override
decl_stmt|;
name|bool
name|IsReferenceType
argument_list|(
name|lldb
operator|::
name|opaque_compiler_type_t
name|type
argument_list|,
name|CompilerType
operator|*
name|pointee_type
operator|=
name|nullptr
argument_list|,
name|bool
operator|*
name|is_rvalue
operator|=
name|nullptr
argument_list|)
name|override
decl_stmt|;
name|CompilerType
name|CreateBaseType
parameter_list|(
specifier|const
name|ConstString
modifier|&
name|name
parameter_list|,
name|uint64_t
parameter_list|)
function_decl|;
name|private
label|:
name|int
name|m_pointer_byte_size
decl_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|DWARFASTParser
operator|>
name|m_dwarf_ast_parser_ap
expr_stmt|;
name|OCamlTypeMap
name|m_base_type_map
decl_stmt|;
name|OCamlASTContext
argument_list|(
specifier|const
name|OCamlASTContext
operator|&
argument_list|)
operator|=
name|delete
expr_stmt|;
specifier|const
name|OCamlASTContext
modifier|&
name|operator
init|=
operator|(
specifier|const
name|OCamlASTContext
operator|&
operator|)
operator|=
name|delete
decl_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_decl_stmt
name|class
name|OCamlASTContextForExpr
range|:
name|public
name|OCamlASTContext
block|{
name|public
operator|:
name|OCamlASTContextForExpr
argument_list|(
argument|lldb::TargetSP target
argument_list|)
operator|:
name|m_target_wp
argument_list|(
argument|target
argument_list|)
block|{}
name|private
operator|:
name|lldb
operator|::
name|TargetWP
name|m_target_wp
block|; }
decl_stmt|;
end_decl_stmt

begin_endif
unit|}
endif|#
directive|endif
end_endif

begin_comment
comment|// liblldb_OCamlASTContext_h_
end_comment

end_unit

