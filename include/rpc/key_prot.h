begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Please do not edit this file.  * It was generated using rpcgen.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_KEY_PROT_H_RPCGEN
end_ifndef

begin_define
define|#
directive|define
name|_KEY_PROT_H_RPCGEN
end_define

begin_include
include|#
directive|include
file|<rpc/rpc.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/*  * Sun RPC is a product of Sun Microsystems, Inc. and is provided for  * unrestricted use provided that this legend is included on all tape  * media and as a part of the software program in whole or part.  Users  * may copy or modify Sun RPC without charge, but are not authorized  * to license or distribute it to anyone else except as part of a product or  * program developed by the user.  *  * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE  * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR  * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.  *  * Sun RPC is provided with no support and without any obligation on the  * part of Sun Microsystems, Inc. to assist in its use, correction,  * modification or enhancement.  *  * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE  * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC  * OR ANY PART THEREOF.  *  * In no event will Sun Microsystems, Inc. be liable for any lost revenue  * or profits or other special, indirect and consequential damages, even if  * Sun has been advised of the possibility of such damages.  *  * Sun Microsystems, Inc.  * 2550 Garcia Avenue  * Mountain View, California  94043  */
pragma|#
directive|pragma
name|ident
literal|"@(#)key_prot.x	1.7	94/04/29 SMI"
comment|/* Copyright (c)  1990, 1991 Sun Microsystems, Inc. */
comment|/*   * Compiled from key_prot.x using rpcgen.  * DO NOT EDIT THIS FILE!  * This is NOT source code!  */
define|#
directive|define
name|PROOT
value|3
define|#
directive|define
name|HEXMODULUS
value|"d4a0ba0250b6fd2ec626e7efd637df76c716e22d0944b88b"
define|#
directive|define
name|HEXKEYBYTES
value|48
define|#
directive|define
name|KEYSIZE
value|192
define|#
directive|define
name|KEYBYTES
value|24
define|#
directive|define
name|KEYCHECKSUMSIZE
value|16
enum|enum
name|keystatus
block|{
name|KEY_SUCCESS
init|=
literal|0
block|,
name|KEY_NOSECRET
init|=
literal|1
block|,
name|KEY_UNKNOWN
init|=
literal|2
block|,
name|KEY_SYSTEMERR
init|=
literal|3
block|}
enum|;
typedef|typedef
name|enum
name|keystatus
name|keystatus
typedef|;
typedef|typedef
name|char
name|keybuf
index|[
name|HEXKEYBYTES
index|]
typedef|;
typedef|typedef
name|char
modifier|*
name|netnamestr
typedef|;
struct|struct
name|cryptkeyarg
block|{
name|netnamestr
name|remotename
decl_stmt|;
name|des_block
name|deskey
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|cryptkeyarg
name|cryptkeyarg
typedef|;
struct|struct
name|cryptkeyarg2
block|{
name|netnamestr
name|remotename
decl_stmt|;
name|netobj
name|remotekey
decl_stmt|;
name|des_block
name|deskey
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|cryptkeyarg2
name|cryptkeyarg2
typedef|;
struct|struct
name|cryptkeyres
block|{
name|keystatus
name|status
decl_stmt|;
union|union
block|{
name|des_block
name|deskey
decl_stmt|;
block|}
name|cryptkeyres_u
union|;
block|}
struct|;
typedef|typedef
name|struct
name|cryptkeyres
name|cryptkeyres
typedef|;
define|#
directive|define
name|MAXGIDS
value|16
struct|struct
name|unixcred
block|{
name|u_int
name|uid
decl_stmt|;
name|u_int
name|gid
decl_stmt|;
struct|struct
block|{
name|u_int
name|gids_len
decl_stmt|;
name|u_int
modifier|*
name|gids_val
decl_stmt|;
block|}
name|gids
struct|;
block|}
struct|;
typedef|typedef
name|struct
name|unixcred
name|unixcred
typedef|;
struct|struct
name|getcredres
block|{
name|keystatus
name|status
decl_stmt|;
union|union
block|{
name|unixcred
name|cred
decl_stmt|;
block|}
name|getcredres_u
union|;
block|}
struct|;
typedef|typedef
name|struct
name|getcredres
name|getcredres
typedef|;
struct|struct
name|key_netstarg
block|{
name|keybuf
name|st_priv_key
decl_stmt|;
name|keybuf
name|st_pub_key
decl_stmt|;
name|netnamestr
name|st_netname
decl_stmt|;
block|}
struct|;
typedef|typedef
name|struct
name|key_netstarg
name|key_netstarg
typedef|;
struct|struct
name|key_netstres
block|{
name|keystatus
name|status
decl_stmt|;
union|union
block|{
name|key_netstarg
name|knet
decl_stmt|;
block|}
name|key_netstres_u
union|;
block|}
struct|;
typedef|typedef
name|struct
name|key_netstres
name|key_netstres
typedef|;
ifndef|#
directive|ifndef
name|opaque
define|#
directive|define
name|opaque
value|char
endif|#
directive|endif
define|#
directive|define
name|KEY_PROG
value|((unsigned long)(100029))
define|#
directive|define
name|KEY_VERS
value|((unsigned long)(1))
if|#
directive|if
name|defined
argument_list|(
name|__STDC__
argument_list|)
operator|||
name|defined
argument_list|(
name|__cplusplus
argument_list|)
define|#
directive|define
name|KEY_SET
value|((unsigned long)(1))
specifier|extern
name|keystatus
modifier|*
name|key_set_1
parameter_list|(
name|char
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|keystatus
modifier|*
name|key_set_1_svc
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|KEY_ENCRYPT
value|((unsigned long)(2))
specifier|extern
name|cryptkeyres
modifier|*
name|key_encrypt_1
parameter_list|(
name|cryptkeyarg
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_encrypt_1_svc
parameter_list|(
name|cryptkeyarg
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|KEY_DECRYPT
value|((unsigned long)(3))
specifier|extern
name|cryptkeyres
modifier|*
name|key_decrypt_1
parameter_list|(
name|cryptkeyarg
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_decrypt_1_svc
parameter_list|(
name|cryptkeyarg
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|KEY_GEN
value|((unsigned long)(4))
specifier|extern
name|des_block
modifier|*
name|key_gen_1
parameter_list|(
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|des_block
modifier|*
name|key_gen_1_svc
parameter_list|(
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|KEY_GETCRED
value|((unsigned long)(5))
specifier|extern
name|getcredres
modifier|*
name|key_getcred_1
parameter_list|(
name|netnamestr
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|getcredres
modifier|*
name|key_getcred_1_svc
parameter_list|(
name|netnamestr
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|key_prog_1_freeresult
parameter_list|(
name|SVCXPRT
modifier|*
parameter_list|,
name|xdrproc_t
parameter_list|,
name|caddr_t
parameter_list|)
function_decl|;
else|#
directive|else
comment|/* K&R C */
define|#
directive|define
name|KEY_SET
value|((unsigned long)(1))
specifier|extern
name|keystatus
modifier|*
name|key_set_1
parameter_list|()
function_decl|;
specifier|extern
name|keystatus
modifier|*
name|key_set_1_svc
parameter_list|()
function_decl|;
define|#
directive|define
name|KEY_ENCRYPT
value|((unsigned long)(2))
specifier|extern
name|cryptkeyres
modifier|*
name|key_encrypt_1
parameter_list|()
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_encrypt_1_svc
parameter_list|()
function_decl|;
define|#
directive|define
name|KEY_DECRYPT
value|((unsigned long)(3))
specifier|extern
name|cryptkeyres
modifier|*
name|key_decrypt_1
parameter_list|()
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_decrypt_1_svc
parameter_list|()
function_decl|;
define|#
directive|define
name|KEY_GEN
value|((unsigned long)(4))
specifier|extern
name|des_block
modifier|*
name|key_gen_1
parameter_list|()
function_decl|;
specifier|extern
name|des_block
modifier|*
name|key_gen_1_svc
parameter_list|()
function_decl|;
define|#
directive|define
name|KEY_GETCRED
value|((unsigned long)(5))
specifier|extern
name|getcredres
modifier|*
name|key_getcred_1
parameter_list|()
function_decl|;
specifier|extern
name|getcredres
modifier|*
name|key_getcred_1_svc
parameter_list|()
function_decl|;
specifier|extern
name|int
name|key_prog_1_freeresult
parameter_list|()
function_decl|;
endif|#
directive|endif
comment|/* K&R C */
define|#
directive|define
name|KEY_VERS2
value|((unsigned long)(2))
if|#
directive|if
name|defined
argument_list|(
name|__STDC__
argument_list|)
operator|||
name|defined
argument_list|(
name|__cplusplus
argument_list|)
specifier|extern
name|keystatus
modifier|*
name|key_set_2
parameter_list|(
name|char
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|keystatus
modifier|*
name|key_set_2_svc
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_encrypt_2
parameter_list|(
name|cryptkeyarg
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_encrypt_2_svc
parameter_list|(
name|cryptkeyarg
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_decrypt_2
parameter_list|(
name|cryptkeyarg
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_decrypt_2_svc
parameter_list|(
name|cryptkeyarg
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|des_block
modifier|*
name|key_gen_2
parameter_list|(
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|des_block
modifier|*
name|key_gen_2_svc
parameter_list|(
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|getcredres
modifier|*
name|key_getcred_2
parameter_list|(
name|netnamestr
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|getcredres
modifier|*
name|key_getcred_2_svc
parameter_list|(
name|netnamestr
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|KEY_ENCRYPT_PK
value|((unsigned long)(6))
specifier|extern
name|cryptkeyres
modifier|*
name|key_encrypt_pk_2
parameter_list|(
name|cryptkeyarg2
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_encrypt_pk_2_svc
parameter_list|(
name|cryptkeyarg2
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|KEY_DECRYPT_PK
value|((unsigned long)(7))
specifier|extern
name|cryptkeyres
modifier|*
name|key_decrypt_pk_2
parameter_list|(
name|cryptkeyarg2
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_decrypt_pk_2_svc
parameter_list|(
name|cryptkeyarg2
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|KEY_NET_PUT
value|((unsigned long)(8))
specifier|extern
name|keystatus
modifier|*
name|key_net_put_2
parameter_list|(
name|key_netstarg
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|keystatus
modifier|*
name|key_net_put_2_svc
parameter_list|(
name|key_netstarg
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|KEY_NET_GET
value|((unsigned long)(9))
specifier|extern
name|key_netstres
modifier|*
name|key_net_get_2
parameter_list|(
name|void
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|key_netstres
modifier|*
name|key_net_get_2_svc
parameter_list|(
name|void
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
define|#
directive|define
name|KEY_GET_CONV
value|((unsigned long)(10))
specifier|extern
name|cryptkeyres
modifier|*
name|key_get_conv_2
parameter_list|(
name|char
modifier|*
parameter_list|,
name|CLIENT
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_get_conv_2_svc
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|svc_req
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|int
name|key_prog_2_freeresult
parameter_list|(
name|SVCXPRT
modifier|*
parameter_list|,
name|xdrproc_t
parameter_list|,
name|caddr_t
parameter_list|)
function_decl|;
else|#
directive|else
comment|/* K&R C */
specifier|extern
name|keystatus
modifier|*
name|key_set_2
parameter_list|()
function_decl|;
specifier|extern
name|keystatus
modifier|*
name|key_set_2_svc
parameter_list|()
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_encrypt_2
parameter_list|()
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_encrypt_2_svc
parameter_list|()
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_decrypt_2
parameter_list|()
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_decrypt_2_svc
parameter_list|()
function_decl|;
specifier|extern
name|des_block
modifier|*
name|key_gen_2
parameter_list|()
function_decl|;
specifier|extern
name|des_block
modifier|*
name|key_gen_2_svc
parameter_list|()
function_decl|;
specifier|extern
name|getcredres
modifier|*
name|key_getcred_2
parameter_list|()
function_decl|;
specifier|extern
name|getcredres
modifier|*
name|key_getcred_2_svc
parameter_list|()
function_decl|;
define|#
directive|define
name|KEY_ENCRYPT_PK
value|((unsigned long)(6))
specifier|extern
name|cryptkeyres
modifier|*
name|key_encrypt_pk_2
parameter_list|()
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_encrypt_pk_2_svc
parameter_list|()
function_decl|;
define|#
directive|define
name|KEY_DECRYPT_PK
value|((unsigned long)(7))
specifier|extern
name|cryptkeyres
modifier|*
name|key_decrypt_pk_2
parameter_list|()
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_decrypt_pk_2_svc
parameter_list|()
function_decl|;
define|#
directive|define
name|KEY_NET_PUT
value|((unsigned long)(8))
specifier|extern
name|keystatus
modifier|*
name|key_net_put_2
parameter_list|()
function_decl|;
specifier|extern
name|keystatus
modifier|*
name|key_net_put_2_svc
parameter_list|()
function_decl|;
define|#
directive|define
name|KEY_NET_GET
value|((unsigned long)(9))
specifier|extern
name|key_netstres
modifier|*
name|key_net_get_2
parameter_list|()
function_decl|;
specifier|extern
name|key_netstres
modifier|*
name|key_net_get_2_svc
parameter_list|()
function_decl|;
define|#
directive|define
name|KEY_GET_CONV
value|((unsigned long)(10))
specifier|extern
name|cryptkeyres
modifier|*
name|key_get_conv_2
parameter_list|()
function_decl|;
specifier|extern
name|cryptkeyres
modifier|*
name|key_get_conv_2_svc
parameter_list|()
function_decl|;
specifier|extern
name|int
name|key_prog_2_freeresult
parameter_list|()
function_decl|;
endif|#
directive|endif
comment|/* K&R C */
comment|/* the xdr functions */
if|#
directive|if
name|defined
argument_list|(
name|__STDC__
argument_list|)
operator|||
name|defined
argument_list|(
name|__cplusplus
argument_list|)
specifier|extern
name|bool_t
name|xdr_keystatus
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|keystatus
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_keybuf
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|keybuf
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_netnamestr
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|netnamestr
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_cryptkeyarg
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|cryptkeyarg
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_cryptkeyarg2
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|cryptkeyarg2
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_cryptkeyres
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|cryptkeyres
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_unixcred
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|unixcred
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_getcredres
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|getcredres
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_key_netstarg
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|key_netstarg
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|bool_t
name|xdr_key_netstres
parameter_list|(
name|XDR
modifier|*
parameter_list|,
name|key_netstres
modifier|*
parameter_list|)
function_decl|;
else|#
directive|else
comment|/* K&R C */
specifier|extern
name|bool_t
name|xdr_keystatus
parameter_list|()
function_decl|;
specifier|extern
name|bool_t
name|xdr_keybuf
parameter_list|()
function_decl|;
specifier|extern
name|bool_t
name|xdr_netnamestr
parameter_list|()
function_decl|;
specifier|extern
name|bool_t
name|xdr_cryptkeyarg
parameter_list|()
function_decl|;
specifier|extern
name|bool_t
name|xdr_cryptkeyarg2
parameter_list|()
function_decl|;
specifier|extern
name|bool_t
name|xdr_cryptkeyres
parameter_list|()
function_decl|;
specifier|extern
name|bool_t
name|xdr_unixcred
parameter_list|()
function_decl|;
specifier|extern
name|bool_t
name|xdr_getcredres
parameter_list|()
function_decl|;
specifier|extern
name|bool_t
name|xdr_key_netstarg
parameter_list|()
function_decl|;
specifier|extern
name|bool_t
name|xdr_key_netstres
parameter_list|()
function_decl|;
endif|#
directive|endif
comment|/* K&R C */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_KEY_PROT_H_RPCGEN */
end_comment

end_unit

