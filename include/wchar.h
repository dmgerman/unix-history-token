begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c)1999 Citrus Project,  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_comment
comment|/*-  * Copyright (c) 1999, 2000 The NetBSD Foundation, Inc.  * All rights reserved.  *  * This code is derived from software contributed to The NetBSD Foundation  * by Julian Coleman.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS  * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED  * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  * POSSIBILITY OF SUCH DAMAGE.  *  *	$NetBSD: wchar.h,v 1.8 2000/12/22 05:31:42 itojun Exp $  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_WCHAR_H_
end_ifndef

begin_define
define|#
directive|define
name|_WCHAR_H_
end_define

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_include
include|#
directive|include
file|<sys/_null.h>
end_include

begin_include
include|#
directive|include
file|<sys/_types.h>
end_include

begin_include
include|#
directive|include
file|<machine/_limits.h>
end_include

begin_include
include|#
directive|include
file|<_ctype.h>
end_include

begin_ifndef
ifndef|#
directive|ifndef
name|_MBSTATE_T_DECLARED
end_ifndef

begin_typedef
typedef|typedef
name|__mbstate_t
name|mbstate_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|_MBSTATE_T_DECLARED
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|_SIZE_T_DECLARED
end_ifndef

begin_typedef
typedef|typedef
name|__size_t
name|size_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|_SIZE_T_DECLARED
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|__cplusplus
end_ifndef

begin_ifndef
ifndef|#
directive|ifndef
name|_WCHAR_T_DECLARED
end_ifndef

begin_typedef
typedef|typedef
name|__wchar_t
name|wchar_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|_WCHAR_T_DECLARED
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|_WINT_T_DECLARED
end_ifndef

begin_typedef
typedef|typedef
name|__wint_t
name|wint_t
typedef|;
end_typedef

begin_define
define|#
directive|define
name|_WINT_T_DECLARED
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|WCHAR_MIN
end_ifndef

begin_define
define|#
directive|define
name|WCHAR_MIN
value|__INT_MIN
end_define

begin_define
define|#
directive|define
name|WCHAR_MAX
value|__INT_MAX
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|WEOF
end_ifndef

begin_define
define|#
directive|define
name|WEOF
value|((wint_t)-1)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_struct_decl
struct_decl|struct
name|__sFILE
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|tm
struct_decl|;
end_struct_decl

begin_function_decl
name|__BEGIN_DECLS
name|wint_t
name|btowc
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wint_t
name|fgetwc
parameter_list|(
name|struct
name|__sFILE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wchar_t
modifier|*
name|fgetws
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|int
parameter_list|,
name|struct
name|__sFILE
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wint_t
name|fputwc
parameter_list|(
name|wchar_t
parameter_list|,
name|struct
name|__sFILE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fputws
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|struct
name|__sFILE
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fwide
parameter_list|(
name|struct
name|__sFILE
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fwprintf
parameter_list|(
name|struct
name|__sFILE
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fwscanf
parameter_list|(
name|struct
name|__sFILE
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wint_t
name|getwc
parameter_list|(
name|struct
name|__sFILE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wint_t
name|getwchar
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|mbrlen
parameter_list|(
specifier|const
name|char
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|mbrtowc
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|char
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|mbsinit
parameter_list|(
specifier|const
name|mbstate_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|mbsrtowcs
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wint_t
name|putwc
parameter_list|(
name|wchar_t
parameter_list|,
name|struct
name|__sFILE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wint_t
name|putwchar
parameter_list|(
name|wchar_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|swprintf
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|size_t
name|n
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|swscanf
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wint_t
name|ungetwc
parameter_list|(
name|wint_t
parameter_list|,
name|struct
name|__sFILE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vfwprintf
parameter_list|(
name|struct
name|__sFILE
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|__va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vswprintf
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|size_t
name|n
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|__va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vwprintf
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|__va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|wcrtomb
parameter_list|(
name|char
modifier|*
name|__restrict
parameter_list|,
name|wchar_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wchar_t
modifier|*
name|wcscat
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|wchar_t
modifier|*
name|wcschr
argument_list|(
specifier|const
name|wchar_t
operator|*
argument_list|,
name|wchar_t
argument_list|)
name|__pure
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|wcscmp
argument_list|(
specifier|const
name|wchar_t
operator|*
argument_list|,
specifier|const
name|wchar_t
operator|*
argument_list|)
name|__pure
decl_stmt|;
end_decl_stmt

begin_function_decl
name|int
name|wcscoll
parameter_list|(
specifier|const
name|wchar_t
modifier|*
parameter_list|,
specifier|const
name|wchar_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wchar_t
modifier|*
name|wcscpy
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|size_t
name|wcscspn
argument_list|(
specifier|const
name|wchar_t
operator|*
argument_list|,
specifier|const
name|wchar_t
operator|*
argument_list|)
name|__pure
decl_stmt|;
end_decl_stmt

begin_function_decl
name|size_t
name|wcsftime
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|struct
name|tm
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|size_t
name|wcslen
argument_list|(
specifier|const
name|wchar_t
operator|*
argument_list|)
name|__pure
decl_stmt|;
end_decl_stmt

begin_function_decl
name|wchar_t
modifier|*
name|wcsncat
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|int
name|wcsncmp
argument_list|(
specifier|const
name|wchar_t
operator|*
argument_list|,
specifier|const
name|wchar_t
operator|*
argument_list|,
name|size_t
argument_list|)
name|__pure
decl_stmt|;
end_decl_stmt

begin_function_decl
name|wchar_t
modifier|*
name|wcsncpy
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|wchar_t
modifier|*
name|wcspbrk
argument_list|(
specifier|const
name|wchar_t
operator|*
argument_list|,
specifier|const
name|wchar_t
operator|*
argument_list|)
name|__pure
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|wchar_t
modifier|*
name|wcsrchr
argument_list|(
specifier|const
name|wchar_t
operator|*
argument_list|,
name|wchar_t
argument_list|)
name|__pure
decl_stmt|;
end_decl_stmt

begin_function_decl
name|size_t
name|wcsrtombs
parameter_list|(
name|char
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|size_t
name|wcsspn
argument_list|(
specifier|const
name|wchar_t
operator|*
argument_list|,
specifier|const
name|wchar_t
operator|*
argument_list|)
name|__pure
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|wchar_t
modifier|*
name|wcsstr
argument_list|(
specifier|const
name|wchar_t
operator|*
name|__restrict
argument_list|,
specifier|const
name|wchar_t
operator|*
name|__restrict
argument_list|)
name|__pure
decl_stmt|;
end_decl_stmt

begin_function_decl
name|size_t
name|wcsxfrm
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wctob
parameter_list|(
name|wint_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|double
name|wcstod
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|wchar_t
modifier|*
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wchar_t
modifier|*
name|wcstok
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|wchar_t
modifier|*
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|wcstol
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|wchar_t
modifier|*
modifier|*
name|__restrict
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|unsigned
name|long
name|wcstoul
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|wchar_t
modifier|*
modifier|*
name|__restrict
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|wchar_t
modifier|*
name|wmemchr
argument_list|(
specifier|const
name|wchar_t
operator|*
argument_list|,
name|wchar_t
argument_list|,
name|size_t
argument_list|)
name|__pure
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|wmemcmp
argument_list|(
specifier|const
name|wchar_t
operator|*
argument_list|,
specifier|const
name|wchar_t
operator|*
argument_list|,
name|size_t
argument_list|)
name|__pure
decl_stmt|;
end_decl_stmt

begin_function_decl
name|wchar_t
modifier|*
name|wmemcpy
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wchar_t
modifier|*
name|wmemmove
parameter_list|(
name|wchar_t
modifier|*
parameter_list|,
specifier|const
name|wchar_t
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wchar_t
modifier|*
name|wmemset
parameter_list|(
name|wchar_t
modifier|*
parameter_list|,
name|wchar_t
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wprintf
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wscanf
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_ifndef
ifndef|#
directive|ifndef
name|_STDSTREAM_DECLARED
end_ifndef

begin_decl_stmt
specifier|extern
name|struct
name|__sFILE
modifier|*
name|__stdinp
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|__sFILE
modifier|*
name|__stdoutp
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|__sFILE
modifier|*
name|__stderrp
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|_STDSTREAM_DECLARED
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|getwc
parameter_list|(
name|fp
parameter_list|)
value|fgetwc(fp)
end_define

begin_define
define|#
directive|define
name|getwchar
parameter_list|()
value|fgetwc(__stdinp)
end_define

begin_define
define|#
directive|define
name|putwc
parameter_list|(
name|wc
parameter_list|,
name|fp
parameter_list|)
value|fputwc(wc, fp)
end_define

begin_define
define|#
directive|define
name|putwchar
parameter_list|(
name|wc
parameter_list|)
value|fputwc(wc, __stdoutp)
end_define

begin_if
if|#
directive|if
name|__ISO_C_VISIBLE
operator|>=
literal|1999
end_if

begin_function_decl
name|int
name|vfwscanf
parameter_list|(
name|struct
name|__sFILE
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|__va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vswscanf
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|__va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|vwscanf
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|__va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|float
name|wcstof
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|wchar_t
modifier|*
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|double
name|wcstold
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|wchar_t
modifier|*
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|__LONG_LONG_SUPPORTED
end_ifdef

begin_comment
comment|/* LONGLONG */
end_comment

begin_function_decl
name|long
name|long
name|wcstoll
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|wchar_t
modifier|*
modifier|*
name|__restrict
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* LONGLONG */
end_comment

begin_function_decl
name|unsigned
name|long
name|long
name|wcstoull
parameter_list|(
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|wchar_t
modifier|*
modifier|*
name|__restrict
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __ISO_C_VISIBLE>= 1999 */
end_comment

begin_if
if|#
directive|if
name|__XSI_VISIBLE
end_if

begin_function_decl
name|int
name|wcswidth
parameter_list|(
specifier|const
name|wchar_t
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wcwidth
parameter_list|(
name|wchar_t
parameter_list|)
function_decl|;
end_function_decl

begin_define
define|#
directive|define
name|wcwidth
parameter_list|(
name|_c
parameter_list|)
value|__wcwidth(_c)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
name|__POSIX_VISIBLE
operator|>=
literal|200809
operator|||
name|__BSD_VISIBLE
end_if

begin_function_decl
name|size_t
name|mbsnrtowcs
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
name|size_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wchar_t
modifier|*
name|wcpcpy
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|wchar_t
modifier|*
name|wcpncpy
parameter_list|(
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|wchar_t
modifier|*
name|wcsdup
argument_list|(
specifier|const
name|wchar_t
operator|*
argument_list|)
name|__malloc_like
decl_stmt|;
end_decl_stmt

begin_function_decl
name|int
name|wcscasecmp
parameter_list|(
specifier|const
name|wchar_t
modifier|*
parameter_list|,
specifier|const
name|wchar_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|wcsncasecmp
parameter_list|(
specifier|const
name|wchar_t
modifier|*
parameter_list|,
specifier|const
name|wchar_t
modifier|*
parameter_list|,
name|size_t
name|n
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|size_t
name|wcsnlen
argument_list|(
specifier|const
name|wchar_t
operator|*
argument_list|,
name|size_t
argument_list|)
name|__pure
decl_stmt|;
end_decl_stmt

begin_function_decl
name|size_t
name|wcsnrtombs
parameter_list|(
name|char
modifier|*
name|__restrict
parameter_list|,
specifier|const
name|wchar_t
modifier|*
modifier|*
name|__restrict
parameter_list|,
name|size_t
parameter_list|,
name|size_t
parameter_list|,
name|mbstate_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_if
if|#
directive|if
name|__BSD_VISIBLE
end_if

begin_function_decl
name|wchar_t
modifier|*
name|fgetwln
parameter_list|(
name|struct
name|__sFILE
modifier|*
name|__restrict
parameter_list|,
name|size_t
modifier|*
name|__restrict
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|wcslcat
parameter_list|(
name|wchar_t
modifier|*
parameter_list|,
specifier|const
name|wchar_t
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|wcslcpy
parameter_list|(
name|wchar_t
modifier|*
parameter_list|,
specifier|const
name|wchar_t
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_WCHAR_H_ */
end_comment

end_unit

