begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|//===-- FileRemapper.h - File Remapping Helper ------------------*- C++ -*-===//
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//                     The LLVM Compiler Infrastructure
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file is distributed under the University of Illinois Open Source
end_comment

begin_comment
comment|// License. See LICENSE.TXT for details.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|//===----------------------------------------------------------------------===//
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|LLVM_CLANG_ARCMIGRATE_FILEREMAPPER_H
end_ifndef

begin_define
define|#
directive|define
name|LLVM_CLANG_ARCMIGRATE_FILEREMAPPER_H
end_define

begin_include
include|#
directive|include
file|"clang/Basic/LLVM.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/DenseMap.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/PointerUnion.h"
end_include

begin_include
include|#
directive|include
file|"llvm/ADT/StringRef.h"
end_include

begin_include
include|#
directive|include
file|<memory>
end_include

begin_decl_stmt
name|namespace
name|llvm
block|{
name|class
name|MemoryBuffer
decl_stmt|;
block|}
end_decl_stmt

begin_decl_stmt
name|namespace
name|clang
block|{
name|class
name|FileManager
decl_stmt|;
name|class
name|FileEntry
decl_stmt|;
name|class
name|DiagnosticsEngine
decl_stmt|;
name|class
name|PreprocessorOptions
decl_stmt|;
name|namespace
name|arcmt
block|{
name|class
name|FileRemapper
block|{
comment|// FIXME: Reuse the same FileManager for multiple ASTContexts.
name|std
operator|::
name|unique_ptr
operator|<
name|FileManager
operator|>
name|FileMgr
expr_stmt|;
typedef|typedef
name|llvm
operator|::
name|PointerUnion
operator|<
specifier|const
name|FileEntry
operator|*
operator|,
name|llvm
operator|::
name|MemoryBuffer
operator|*
operator|>
name|Target
expr_stmt|;
typedef|typedef
name|llvm
operator|::
name|DenseMap
operator|<
specifier|const
name|FileEntry
operator|*
operator|,
name|Target
operator|>
name|MappingsTy
expr_stmt|;
name|MappingsTy
name|FromToMappings
decl_stmt|;
name|llvm
operator|::
name|DenseMap
operator|<
specifier|const
name|FileEntry
operator|*
operator|,
specifier|const
name|FileEntry
operator|*
operator|>
name|ToFromMappings
expr_stmt|;
name|public
label|:
name|FileRemapper
argument_list|()
expr_stmt|;
operator|~
name|FileRemapper
argument_list|()
expr_stmt|;
name|bool
name|initFromDisk
parameter_list|(
name|StringRef
name|outputDir
parameter_list|,
name|DiagnosticsEngine
modifier|&
name|Diag
parameter_list|,
name|bool
name|ignoreIfFilesChanged
parameter_list|)
function_decl|;
name|bool
name|initFromFile
parameter_list|(
name|StringRef
name|filePath
parameter_list|,
name|DiagnosticsEngine
modifier|&
name|Diag
parameter_list|,
name|bool
name|ignoreIfFilesChanged
parameter_list|)
function_decl|;
name|bool
name|flushToDisk
parameter_list|(
name|StringRef
name|outputDir
parameter_list|,
name|DiagnosticsEngine
modifier|&
name|Diag
parameter_list|)
function_decl|;
name|bool
name|flushToFile
parameter_list|(
name|StringRef
name|outputPath
parameter_list|,
name|DiagnosticsEngine
modifier|&
name|Diag
parameter_list|)
function_decl|;
name|bool
name|overwriteOriginal
parameter_list|(
name|DiagnosticsEngine
modifier|&
name|Diag
parameter_list|,
name|StringRef
name|outputDir
init|=
name|StringRef
argument_list|()
parameter_list|)
function_decl|;
name|void
name|remap
argument_list|(
name|StringRef
name|filePath
argument_list|,
name|llvm
operator|::
name|MemoryBuffer
operator|*
name|memBuf
argument_list|)
decl_stmt|;
name|void
name|applyMappings
argument_list|(
name|PreprocessorOptions
operator|&
name|PPOpts
argument_list|)
decl|const
decl_stmt|;
name|void
name|clear
parameter_list|(
name|StringRef
name|outputDir
init|=
name|StringRef
argument_list|()
parameter_list|)
function_decl|;
name|private
label|:
name|void
name|remap
argument_list|(
specifier|const
name|FileEntry
operator|*
name|file
argument_list|,
name|llvm
operator|::
name|MemoryBuffer
operator|*
name|memBuf
argument_list|)
decl_stmt|;
name|void
name|remap
parameter_list|(
specifier|const
name|FileEntry
modifier|*
name|file
parameter_list|,
specifier|const
name|FileEntry
modifier|*
name|newfile
parameter_list|)
function_decl|;
specifier|const
name|FileEntry
modifier|*
name|getOriginalFile
parameter_list|(
name|StringRef
name|filePath
parameter_list|)
function_decl|;
name|void
name|resetTarget
parameter_list|(
name|Target
modifier|&
name|targ
parameter_list|)
function_decl|;
name|bool
name|report
parameter_list|(
specifier|const
name|Twine
modifier|&
name|err
parameter_list|,
name|DiagnosticsEngine
modifier|&
name|Diag
parameter_list|)
function_decl|;
name|std
operator|::
name|string
name|getRemapInfoFile
argument_list|(
argument|StringRef outputDir
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
block|}
comment|// end namespace arcmt
block|}
end_decl_stmt

begin_comment
comment|// end namespace clang
end_comment

begin_endif
endif|#
directive|endif
end_endif

end_unit

