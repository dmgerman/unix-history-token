begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Copyright (C) 1989, 1992 Aladdin Enterprises.  All rights reserved.    Distributed by Free Software Foundation, Inc.  This file is part of Ghostscript.  Ghostscript is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.  No author or distributor accepts responsibility to anyone for the consequences of using it or for whether it serves any particular purpose or works at all, unless he says so in writing.  Refer to the Ghostscript General Public License for full details.  Everyone is granted permission to copy, modify and redistribute Ghostscript, but only under the conditions described in the Ghostscript General Public License.  A copy of this license is supposed to have been given to you along with Ghostscript so you can know your rights and responsibilities.  It should be in a file named COPYING.  Among other things, the copyright notice and this notice must be preserved on all copies.  */
end_comment

begin_comment
comment|/* errors.h */
end_comment

begin_comment
comment|/* Define error codes for GhostScript */
end_comment

begin_comment
comment|/* A procedure that may return an error always returns */
end_comment

begin_comment
comment|/* a non-negative value (zero, unless otherwise noted) for success, */
end_comment

begin_comment
comment|/* or negative for failure. */
end_comment

begin_comment
comment|/* We use ints rather than an enum to avoid a lot of casting. */
end_comment

begin_comment
comment|/* The following peculiar structure allows us to include this file */
end_comment

begin_comment
comment|/* wherever error code definitions are needed, and use the same file */
end_comment

begin_comment
comment|/* to generate the table of error names by setting INCLUDE_ERROR_NAMES. */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|INCLUDE_ERROR_NAMES
end_ifdef

begin_comment
comment|/* Define the error name table */
end_comment

begin_decl_stmt
specifier|const
name|char
name|_ds
modifier|*
name|gs_error_names
index|[]
init|=
block|{
define|#
directive|define
name|_e_
parameter_list|(
name|code
parameter_list|,
name|name
parameter_list|)
value|name,
else|#
directive|else
comment|/* !INCLUDE_ERROR_NAMES */
specifier|extern
specifier|const
name|char
name|_ds
operator|*
name|gs_error_names
index|[]
block|;
define|#
directive|define
name|_e_
parameter_list|(
name|code
parameter_list|,
name|name
parameter_list|)
endif|#
directive|endif
comment|/* (!)INCLUDE_ERROR_NAMES */
comment|/* ------ PostScript Level 1 errors ------ */
define|#
directive|define
name|e_unknownerror
value|(-1)
comment|/* unknown error */
name|_e_
argument_list|(
argument|e_unknown
argument_list|,
literal|"unknownerror"
argument_list|)
define|#
directive|define
name|e_dictfull
value|(-2)
name|_e_
argument_list|(
argument|e_dictfull
argument_list|,
literal|"dictfull"
argument_list|)
define|#
directive|define
name|e_dictstackoverflow
value|(-3)
name|_e_
argument_list|(
argument|e_dictstackoverflow
argument_list|,
literal|"dictstackoverflow"
argument_list|)
define|#
directive|define
name|e_dictstackunderflow
value|(-4)
name|_e_
argument_list|(
argument|e_dictstackunderflow
argument_list|,
literal|"dictstackunderflow"
argument_list|)
define|#
directive|define
name|e_execstackoverflow
value|(-5)
name|_e_
argument_list|(
argument|e_execstackoverflow
argument_list|,
literal|"execstackoverflow"
argument_list|)
define|#
directive|define
name|e_interrupt
value|(-6)
name|_e_
argument_list|(
argument|e_interrupt
argument_list|,
literal|"interrupt"
argument_list|)
define|#
directive|define
name|e_invalidaccess
value|(-7)
name|_e_
argument_list|(
argument|e_invalidaccess
argument_list|,
literal|"invalidaccess"
argument_list|)
define|#
directive|define
name|e_invalidexit
value|(-8)
name|_e_
argument_list|(
argument|e_invalidexit
argument_list|,
literal|"invalidexit"
argument_list|)
define|#
directive|define
name|e_invalidfileaccess
value|(-9)
name|_e_
argument_list|(
argument|e_invalidfileaccess
argument_list|,
literal|"invalidfileaccess"
argument_list|)
define|#
directive|define
name|e_invalidfont
value|(-10)
name|_e_
argument_list|(
argument|e_invalidfont
argument_list|,
literal|"invalidfont"
argument_list|)
define|#
directive|define
name|e_invalidrestore
value|(-11)
name|_e_
argument_list|(
argument|e_invalidrestore
argument_list|,
literal|"invalidrestore"
argument_list|)
define|#
directive|define
name|e_ioerror
value|(-12)
name|_e_
argument_list|(
argument|e_ioerror
argument_list|,
literal|"ioerror"
argument_list|)
define|#
directive|define
name|e_limitcheck
value|(-13)
name|_e_
argument_list|(
argument|e_limitcheck
argument_list|,
literal|"limitcheck"
argument_list|)
define|#
directive|define
name|e_nocurrentpoint
value|(-14)
name|_e_
argument_list|(
argument|e_nocurrentpoint
argument_list|,
literal|"nocurrentpoint"
argument_list|)
define|#
directive|define
name|e_rangecheck
value|(-15)
name|_e_
argument_list|(
argument|e_rangecheck
argument_list|,
literal|"rangecheck"
argument_list|)
define|#
directive|define
name|e_stackoverflow
value|(-16)
name|_e_
argument_list|(
argument|e_stackoverflow
argument_list|,
literal|"stackoverflow"
argument_list|)
define|#
directive|define
name|e_stackunderflow
value|(-17)
name|_e_
argument_list|(
argument|e_stackunderflow
argument_list|,
literal|"stackunderflow"
argument_list|)
define|#
directive|define
name|e_syntaxerror
value|(-18)
name|_e_
argument_list|(
argument|e_syntaxerror
argument_list|,
literal|"syntaxerror"
argument_list|)
define|#
directive|define
name|e_timeout
value|(-19)
name|_e_
argument_list|(
argument|e_timeout
argument_list|,
literal|"timeout"
argument_list|)
define|#
directive|define
name|e_typecheck
value|(-20)
name|_e_
argument_list|(
argument|e_typecheck
argument_list|,
literal|"typecheck"
argument_list|)
define|#
directive|define
name|e_undefined
value|(-21)
name|_e_
argument_list|(
argument|e_undefined
argument_list|,
literal|"undefined"
argument_list|)
define|#
directive|define
name|e_undefinedfilename
value|(-22)
name|_e_
argument_list|(
argument|e_undefinedfilename
argument_list|,
literal|"undefinedfilename"
argument_list|)
define|#
directive|define
name|e_undefinedresult
value|(-23)
name|_e_
argument_list|(
argument|e_undefinedresult
argument_list|,
literal|"undefinedresult"
argument_list|)
define|#
directive|define
name|e_unmatchedmark
value|(-24)
name|_e_
argument_list|(
argument|e_unmatchedmark
argument_list|,
literal|"unmatchedmark"
argument_list|)
define|#
directive|define
name|e_VMerror
value|(-25)
name|_e_
argument_list|(
argument|e_VMerror
argument_list|,
literal|"VMerror"
argument_list|)
comment|/* ------ Additional Level 2 and DPS errors ------ */
define|#
directive|define
name|e_invalidcontext
value|(-26)
name|_e_
argument_list|(
argument|e_invalidcontext
argument_list|,
literal|"invalidcontext"
argument_list|)
define|#
directive|define
name|e_undefinedresource
value|(-27)
comment|/* not used yet */
name|_e_
argument_list|(
name|e_undefinedresource
argument_list|,
literal|"undefinedresource"
argument_list|)
ifdef|#
directive|ifdef
name|INCLUDE_ERROR_NAMES
comment|/* End of error name table */
literal|0
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* INCLUDE_ERROR_NAMES */
end_comment

end_unit

