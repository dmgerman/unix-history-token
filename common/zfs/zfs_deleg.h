begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License (the "License").  * You may not use this file except in compliance with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright (c) 2007, 2010, Oracle and/or its affiliates. All rights reserved.  * Copyright 2010 Nexenta Systems, Inc. All rights reserved.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_ZFS_DELEG_H
end_ifndef

begin_define
define|#
directive|define
name|_ZFS_DELEG_H
end_define

begin_include
include|#
directive|include
file|<sys/fs/zfs.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
define|#
directive|define
name|ZFS_DELEG_SET_NAME_CHR
value|'@'
comment|/* set name lead char */
define|#
directive|define
name|ZFS_DELEG_FIELD_SEP_CHR
value|'$'
comment|/* field separator */
comment|/*  * Max name length for a delegation attribute  */
define|#
directive|define
name|ZFS_MAX_DELEG_NAME
value|128
define|#
directive|define
name|ZFS_DELEG_LOCAL
value|'l'
define|#
directive|define
name|ZFS_DELEG_DESCENDENT
value|'d'
define|#
directive|define
name|ZFS_DELEG_NA
value|'-'
typedef|typedef
enum|enum
block|{
name|ZFS_DELEG_NOTE_CREATE
block|,
name|ZFS_DELEG_NOTE_DESTROY
block|,
name|ZFS_DELEG_NOTE_SNAPSHOT
block|,
name|ZFS_DELEG_NOTE_ROLLBACK
block|,
name|ZFS_DELEG_NOTE_CLONE
block|,
name|ZFS_DELEG_NOTE_PROMOTE
block|,
name|ZFS_DELEG_NOTE_RENAME
block|,
name|ZFS_DELEG_NOTE_SEND
block|,
name|ZFS_DELEG_NOTE_RECEIVE
block|,
name|ZFS_DELEG_NOTE_ALLOW
block|,
name|ZFS_DELEG_NOTE_USERPROP
block|,
name|ZFS_DELEG_NOTE_MOUNT
block|,
name|ZFS_DELEG_NOTE_SHARE
block|,
name|ZFS_DELEG_NOTE_USERQUOTA
block|,
name|ZFS_DELEG_NOTE_GROUPQUOTA
block|,
name|ZFS_DELEG_NOTE_USERUSED
block|,
name|ZFS_DELEG_NOTE_GROUPUSED
block|,
name|ZFS_DELEG_NOTE_HOLD
block|,
name|ZFS_DELEG_NOTE_RELEASE
block|,
name|ZFS_DELEG_NOTE_DIFF
block|,
name|ZFS_DELEG_NOTE_NONE
block|}
name|zfs_deleg_note_t
typedef|;
typedef|typedef
struct|struct
name|zfs_deleg_perm_tab
block|{
name|char
modifier|*
name|z_perm
decl_stmt|;
name|zfs_deleg_note_t
name|z_note
decl_stmt|;
block|}
name|zfs_deleg_perm_tab_t
typedef|;
specifier|extern
name|zfs_deleg_perm_tab_t
name|zfs_deleg_perm_tab
index|[]
decl_stmt|;
name|int
name|zfs_deleg_verify_nvlist
parameter_list|(
name|nvlist_t
modifier|*
name|nvlist
parameter_list|)
function_decl|;
name|void
name|zfs_deleg_whokey
parameter_list|(
name|char
modifier|*
name|attr
parameter_list|,
name|zfs_deleg_who_type_t
name|type
parameter_list|,
name|char
name|checkflag
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
name|zfs_deleg_canonicalize_perm
parameter_list|(
specifier|const
name|char
modifier|*
name|perm
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _ZFS_DELEG_H */
end_comment

end_unit

