begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1998 Kenneth D. Merry.  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	$Id: camcontrol.h,v 1.1 1998/09/15 06:43:02 gibbs Exp $  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_CAMCONTROL_H
end_ifndef

begin_define
define|#
directive|define
name|_CAMCONTROL_H
end_define

begin_comment
comment|/*  * get_hook: Structure for evaluating args in a callback.  */
end_comment

begin_struct
struct|struct
name|get_hook
block|{
name|int
name|argc
decl_stmt|;
name|char
modifier|*
modifier|*
name|argv
decl_stmt|;
name|int
name|got
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|void
name|mode_sense
parameter_list|(
name|struct
name|cam_device
modifier|*
name|device
parameter_list|,
name|int
name|mode_page
parameter_list|,
name|int
name|page_control
parameter_list|,
name|int
name|dbd
parameter_list|,
name|int
name|retry_count
parameter_list|,
name|int
name|timeout
parameter_list|,
name|u_int8_t
modifier|*
name|data
parameter_list|,
name|int
name|datalen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mode_select
parameter_list|(
name|struct
name|cam_device
modifier|*
name|device
parameter_list|,
name|int
name|save_pages
parameter_list|,
name|int
name|retry_count
parameter_list|,
name|int
name|timeout
parameter_list|,
name|u_int8_t
modifier|*
name|data
parameter_list|,
name|int
name|datalen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mode_edit
parameter_list|(
name|struct
name|cam_device
modifier|*
name|device
parameter_list|,
name|int
name|page
parameter_list|,
name|int
name|page_control
parameter_list|,
name|int
name|dbd
parameter_list|,
name|int
name|edit
parameter_list|,
name|int
name|retry_count
parameter_list|,
name|int
name|timeout
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|cget
parameter_list|(
name|void
modifier|*
name|hook
parameter_list|,
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|iget
parameter_list|(
name|void
modifier|*
name|hook
parameter_list|,
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|arg_put
parameter_list|(
name|void
modifier|*
name|hook
parameter_list|,
name|int
name|letter
parameter_list|,
name|void
modifier|*
name|arg
parameter_list|,
name|int
name|count
parameter_list|,
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|usage
parameter_list|(
name|int
name|verbose
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _CAMCONTROL_H */
end_comment

end_unit

