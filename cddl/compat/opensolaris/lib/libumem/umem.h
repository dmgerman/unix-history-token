begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * CDDL HEADER START  *  * The contents of this file are subject to the terms of the  * Common Development and Distribution License, Version 1.0 only  * (the "License").  You may not use this file except in compliance  * with the License.  *  * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE  * or http://www.opensolaris.org/os/licensing.  * See the License for the specific language governing permissions  * and limitations under the License.  *  * When distributing Covered Code, include this CDDL HEADER in each  * file and include the License file at usr/src/OPENSOLARIS.LICENSE.  * If applicable, add the following below this CDDL HEADER, with the  * fields enclosed by brackets "[]" replaced with your own identifying  * information: Portions Copyright [yyyy] [name of copyright owner]  *  * CDDL HEADER END  */
end_comment

begin_comment
comment|/*  * Copyright 2004 Sun Microsystems, Inc.  All rights reserved.  * Use is subject to license terms.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_UMEM_H
end_ifndef

begin_define
define|#
directive|define
name|_UMEM_H
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<stdlib.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
define|#
directive|define
name|UMEM_DEFAULT
value|0x0000
comment|/* normal -- may fail */
define|#
directive|define
name|UMEM_NOFAIL
value|0x0100
comment|/* Never fails -- may call exit(2) */
define|#
directive|define
name|UMEM_FLAGS
value|0xffff
comment|/* all settable umem flags */
specifier|extern
name|void
modifier|*
name|umem_alloc
parameter_list|(
name|size_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|void
modifier|*
name|umem_alloc_align
parameter_list|(
name|size_t
parameter_list|,
name|size_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|void
modifier|*
name|umem_zalloc
parameter_list|(
name|size_t
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|void
name|umem_free
parameter_list|(
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
specifier|extern
name|void
name|umem_free_align
parameter_list|(
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
comment|/*  * Flags for umem_cache_create()  */
define|#
directive|define
name|UMC_NOTOUCH
value|0x00010000
define|#
directive|define
name|UMC_NODEBUG
value|0x00020000
define|#
directive|define
name|UMC_NOMAGAZINE
value|0x00040000
define|#
directive|define
name|UMC_NOHASH
value|0x00080000
struct_decl|struct
name|umem_cache
struct_decl|;
comment|/* cache structure is opaque to umem clients */
typedef|typedef
name|struct
name|umem_cache
name|umem_cache_t
typedef|;
typedef|typedef
name|int
name|umem_constructor_t
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
typedef|typedef
name|void
name|umem_destructor_t
parameter_list|(
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
typedef|typedef
name|void
name|umem_reclaim_t
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
typedef|typedef
name|int
name|umem_nofail_callback_t
parameter_list|(
name|void
parameter_list|)
function_decl|;
define|#
directive|define
name|UMEM_CALLBACK_RETRY
value|0
define|#
directive|define
name|UMEM_CALLBACK_EXIT
parameter_list|(
name|status
parameter_list|)
value|(0x100 | ((status)& 0xFF))
specifier|extern
name|void
name|umem_nofail_callback
parameter_list|(
name|umem_nofail_callback_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|umem_cache_t
modifier|*
name|umem_cache_create
parameter_list|(
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|size_t
parameter_list|,
name|umem_constructor_t
modifier|*
parameter_list|,
name|umem_destructor_t
modifier|*
parameter_list|,
name|umem_reclaim_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|void
name|umem_cache_destroy
parameter_list|(
name|umem_cache_t
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
modifier|*
name|umem_cache_alloc
parameter_list|(
name|umem_cache_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
specifier|extern
name|void
name|umem_cache_free
parameter_list|(
name|umem_cache_t
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
specifier|extern
name|void
name|umem_reap
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _UMEM_H */
end_comment

end_unit

