begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * $XConsortium: Xi18nint.h,v 1.22 92/10/22 14:26:26 rws Exp $  */
end_comment

begin_comment
comment|/*  * Copyright 1990, 1991 by OMRON Corporation  * Copyright 1991 by the Massachusetts Institute of Technology  *  * Permission to use, copy, modify, distribute, and sell this software and its  * documentation for any purpose is hereby granted without fee, provided that  * the above copyright notice appear in all copies and that both that  * copyright notice and this permission notice appear in supporting  * documentation, and that the names of OMRON and MIT not be used in  * advertising or publicity pertaining to distribution of the software without  * specific, written prior permission.  OMRON and MIT make no representations  * about the suitability of this software for any purpose.  It is provided  * "as is" without express or implied warranty.  *  * OMRON AND MIT DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,  * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO  * EVENT SHALL OMRON OR MIT BE LIABLE FOR ANY SPECIAL, INDIRECT OR  * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,  * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER  * TORTUOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR  * PERFORMANCE OF THIS SOFTWARE.   *  *	Author:	Seiji Kuwari	OMRON Corporation  *				kuwa@omron.co.jp  *				kuwa%omron.co.jp@uunet.uu.net  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_XI18NINT_H_
end_ifndef

begin_define
define|#
directive|define
name|_XI18NINT_H_
end_define

begin_include
include|#
directive|include
file|"Xlocaleint.h"
end_include

begin_comment
comment|/* we should create a data part, but it would affect too much existing code */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|XFontSetMethods
name|methods
decl_stmt|;
comment|/* methods of this font set */
name|XFontSetCoreRec
name|core
decl_stmt|;
comment|/* core data of this font set */
name|Display
modifier|*
name|display
decl_stmt|;
comment|/* display */
name|XLocale
name|xlc
decl_stmt|;
name|int
modifier|*
name|ctid
decl_stmt|;
name|XCharStruct
name|min_bounds
decl_stmt|;
comment|/* min bounds of all fonts */
name|XCharStruct
name|max_bounds
decl_stmt|;
comment|/* max bounds of all fonts */
name|int
name|ascent
decl_stmt|;
comment|/* font set ascent */
name|int
name|descent
decl_stmt|;
comment|/* font set descent */
block|}
name|XsiFontSetRec
operator|,
typedef|*
name|XsiFontSet
typedef|;
end_typedef

begin_ifdef
ifdef|#
directive|ifdef
name|XML
end_ifdef

begin_define
define|#
directive|define
name|XNQueryLanguage
value|"queryLanguage"
end_define

begin_define
define|#
directive|define
name|XNUsingLanguage
value|"usingLanguage"
end_define

begin_define
define|#
directive|define
name|XNCurrentLanguage
value|"currentLanguage"
end_define

begin_define
define|#
directive|define
name|XNChangeLocaleCB
value|"changeLocaleCB"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_typedef
typedef|typedef
struct|struct
name|_ICValues
block|{
name|char
modifier|*
name|res_name
decl_stmt|;
name|char
modifier|*
name|res_class
decl_stmt|;
ifdef|#
directive|ifdef
name|XML
name|char
modifier|*
name|using_language
decl_stmt|;
name|char
modifier|*
name|current_language
decl_stmt|;
name|int
function_decl|(
modifier|*
name|ch_locale_cb
function_decl|)
parameter_list|()
function_decl|;
endif|#
directive|endif
block|}
name|ICValues
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_XIMQueue
block|{
name|short
name|type
decl_stmt|;
comment|/* 0: XEvent, 1: String		 */
name|short
name|string_is_mb
decl_stmt|;
comment|/* 0: CT, 1: MB			 */
name|int
name|length
decl_stmt|;
comment|/* length of String or XEvent    */
name|KeySym
name|keysym
decl_stmt|;
comment|/* keysym			 */
name|unsigned
name|int
name|state
decl_stmt|;
comment|/* state 			 */
name|int
name|buf_max
decl_stmt|;
comment|/* max of buffer		 */
name|char
modifier|*
name|ptr
decl_stmt|;
comment|/* a pointer of String or XEvent */
name|struct
name|_XIMQueue
modifier|*
name|next
decl_stmt|;
block|}
name|XIMQueue
typedef|;
end_typedef

begin_ifndef
ifndef|#
directive|ifndef
name|NO_LOCAL_IM
end_ifndef

begin_define
define|#
directive|define
name|BITSIZ
value|(sizeof(int) * 8)
end_define

begin_define
define|#
directive|define
name|CHANGE_MAX
value|256/BITSIZ
end_define

begin_typedef
typedef|typedef
struct|struct
block|{
name|KeySym
name|keysym
decl_stmt|;
name|unsigned
name|int
name|state
decl_stmt|;
name|unsigned
name|char
modifier|*
name|str
decl_stmt|;
block|}
name|XipLocalKeySymTbl
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|_XipLocalNestedKeySym
block|{
name|KeySym
name|keysym
decl_stmt|;
name|struct
name|_XipLocalNestedKeySym
modifier|*
name|next
decl_stmt|;
block|}
name|XipLocalNestedKeySym
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|XipLocalKeySymTbl
modifier|*
name|fromkey
decl_stmt|;
name|Bool
name|com
decl_stmt|;
union|union
block|{
name|XipLocalKeySymTbl
modifier|*
name|tokey
decl_stmt|;
name|int
function_decl|(
modifier|*
name|func
function_decl|)
parameter_list|()
function_decl|;
block|}
name|to
union|;
block|}
name|XipLocalCvtTbl
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
block|{
name|int
name|cnt
decl_stmt|;
name|XipLocalKeySymTbl
modifier|*
name|buf
decl_stmt|;
name|int
name|buf_cnt
decl_stmt|;
name|int
name|nmax
decl_stmt|;
name|int
name|check_flg
index|[
name|CHANGE_MAX
index|]
decl_stmt|;
name|Bool
name|off
decl_stmt|;
name|KeySym
name|bs
decl_stmt|;
name|XipLocalCvtTbl
modifier|*
name|tbl
decl_stmt|,
name|off_tbl
decl_stmt|;
name|XipLocalNestedKeySym
modifier|*
name|no_filter
decl_stmt|;
block|}
name|XipLocalCvt
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !NO_LOCAL_IM */
end_comment

begin_comment
comment|/* we should create a data part, but it would affect too much existing code */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|XICMethods
name|methods
decl_stmt|;
comment|/* method list of this IC */
name|XICCoreRec
name|core
decl_stmt|;
comment|/* core data of this IC */
name|struct
name|_XIMQueue
modifier|*
name|in
decl_stmt|,
modifier|*
name|out
decl_stmt|,
modifier|*
name|prev
decl_stmt|,
name|overflow
decl_stmt|;
name|Bool
function_decl|(
modifier|*
name|prototype_filter
function_decl|)
parameter_list|()
function_decl|;
name|XLocale
name|mb
decl_stmt|;
name|XLocale
name|wc
decl_stmt|;
name|XID
name|icid
decl_stmt|;
name|ICValues
name|values
decl_stmt|;
name|char
modifier|*
name|ct_buf
decl_stmt|;
name|wchar_t
modifier|*
name|wc_buf
decl_stmt|;
name|int
name|max_of_ct
decl_stmt|;
name|int
name|max_of_wc
decl_stmt|;
ifdef|#
directive|ifdef
name|XML
name|XLocale
modifier|*
name|mb_temp
decl_stmt|;
name|XLocale
modifier|*
name|wc_temp
decl_stmt|;
name|int
name|xlc_num
decl_stmt|;
endif|#
directive|endif
block|}
name|XipICRec
operator|,
typedef|*
name|XipIC
typedef|;
end_typedef

begin_ifndef
ifndef|#
directive|ifndef
name|NO_LOCAL_IM
end_ifndef

begin_typedef
typedef|typedef
struct|struct
block|{
name|XICMethods
name|methods
decl_stmt|;
comment|/* method list of this IC */
name|XICCoreRec
name|core
decl_stmt|;
comment|/* core data of this IC */
name|struct
name|_XIMQueue
modifier|*
name|in
decl_stmt|,
modifier|*
name|out
decl_stmt|,
modifier|*
name|prev
decl_stmt|,
name|overflow
decl_stmt|;
name|Bool
function_decl|(
modifier|*
name|prototype_filter
function_decl|)
parameter_list|()
function_decl|;
name|XLocale
name|mb
decl_stmt|;
name|XLocale
name|wc
decl_stmt|;
name|XipLocalCvt
modifier|*
name|xcvt
decl_stmt|;
name|ICValues
name|values
decl_stmt|;
ifdef|#
directive|ifdef
name|XML
name|XLocale
modifier|*
name|mb_temp
decl_stmt|;
name|XLocale
modifier|*
name|wc_temp
decl_stmt|;
name|XipLocalCvt
modifier|*
modifier|*
name|xcvt_temp
decl_stmt|;
name|int
name|xlc_num
decl_stmt|;
endif|#
directive|endif
block|}
name|XipLocalICRec
operator|,
typedef|*
name|XipLocalIC
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !NO_LOCAL_IM */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|XML
end_ifdef

begin_define
define|#
directive|define
name|ICUsingLanguage
value|28
end_define

begin_define
define|#
directive|define
name|ICCurrentLanguage
value|29
end_define

begin_define
define|#
directive|define
name|ICChangeLocaleCB
value|30
end_define

begin_define
define|#
directive|define
name|ICAllMask
value|0x73ffffff
end_define

begin_else
else|#
directive|else
end_else

begin_comment
comment|/* XML */
end_comment

begin_define
define|#
directive|define
name|ICAllMask
value|0x03ffffff
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* XML */
end_comment

begin_define
define|#
directive|define
name|StatusOffset
value|11
end_define

begin_comment
comment|/*********************************************************************  *  * IM XIM structure;  *  *********************************************************************/
end_comment

begin_typedef
typedef|typedef
struct|struct
name|_IMValues
block|{
name|XIMStyles
name|input_styles
decl_stmt|;
name|char
modifier|*
name|supported_language
decl_stmt|;
block|}
name|IMValues
typedef|;
end_typedef

begin_define
define|#
directive|define
name|SEND_BUF_SZ
value|128
end_define

begin_define
define|#
directive|define
name|RECV_BUF_SZ
value|128
end_define

begin_comment
comment|/* we should create a data part, but it would affect too much existing code */
end_comment

begin_typedef
typedef|typedef
struct|struct
block|{
name|XIMMethods
name|methods
decl_stmt|;
comment|/* method list of this IM */
name|XIMCoreRec
name|core
decl_stmt|;
comment|/* core data of this IM */
name|XLocale
name|xlc
decl_stmt|;
name|int
name|fd
decl_stmt|;
comment|/* file discripter of socket */
name|XipIC
name|default_ic
decl_stmt|;
comment|/* default input context */
name|char
modifier|*
name|client_data
decl_stmt|;
name|unsigned
name|long
name|default_mask
decl_stmt|;
name|XIMrmResourceList
name|resources
decl_stmt|;
name|int
name|num_resources
decl_stmt|;
name|long
name|major_version
decl_stmt|;
comment|/* major version of protocol */
name|long
name|minor_version
decl_stmt|;
comment|/* minor version of protocol */
name|IMValues
name|values
decl_stmt|;
name|char
name|send_buf
index|[
name|SEND_BUF_SZ
index|]
decl_stmt|;
name|char
name|recv_buf
index|[
name|RECV_BUF_SZ
index|]
decl_stmt|;
name|int
name|sp
decl_stmt|;
name|int
name|rp
decl_stmt|;
name|int
name|rc
decl_stmt|;
block|}
name|XipIMRec
operator|,
typedef|*
name|XipIM
typedef|;
end_typedef

begin_ifndef
ifndef|#
directive|ifndef
name|NO_LOCAL_IM
end_ifndef

begin_typedef
typedef|typedef
struct|struct
block|{
name|XIMMethods
name|methods
decl_stmt|;
comment|/* method list of this IM */
name|XIMCoreRec
name|core
decl_stmt|;
comment|/* core data of this IM */
name|XLocale
name|xlc
decl_stmt|;
name|XipLocalCvt
modifier|*
name|xcvt
decl_stmt|;
name|XIMrmResourceList
name|resources
decl_stmt|;
name|int
name|num_resources
decl_stmt|;
name|IMValues
name|values
decl_stmt|;
block|}
name|XipLocalIMRec
operator|,
typedef|*
name|XipLocalIM
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !NO_LOCAL_IM */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|XML
end_ifdef

begin_define
define|#
directive|define
name|IMQueryLanguage
value|1
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|_XFUNCPROTOBEGIN
specifier|extern
name|XFontSet
name|_XsiCreateFontSet
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XLCd
parameter_list|,
name|Display
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
parameter_list|,
name|int
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|XIM
name|_XipOpenIM
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XLCd
parameter_list|,
name|Display
modifier|*
parameter_list|,
name|XrmDatabase
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|XFontStruct
modifier|*
name|_XsiQueryFontSetFromId
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XFontSet
parameter_list|,
name|int
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|XML
end_ifdef

begin_function_decl
specifier|extern
name|void
name|_XsiQueryFontSetWithName
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XFontSet
parameter_list|,
name|char
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
specifier|extern
name|int
name|_XsimbTextEscapement
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XFontSet
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|_Xsimb8TextEscapement
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XFontSet
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|_XsimbTextExtents
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XFontSet
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|XRectangle
modifier|*
parameter_list|,
name|XRectangle
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|_Xsimb8TextExtents
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XFontSet
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|XRectangle
modifier|*
parameter_list|,
name|XRectangle
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|Status
name|_XsimbTextPerCharExtents
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XFontSet
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|XRectangle
modifier|*
parameter_list|,
name|XRectangle
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|,
name|XRectangle
modifier|*
parameter_list|,
name|XRectangle
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|_XsimbDrawString
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|Display
modifier|*
parameter_list|,
name|Drawable
parameter_list|,
name|XFontSet
parameter_list|,
name|GC
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|_Xsimb8DrawString
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|Display
modifier|*
parameter_list|,
name|Drawable
parameter_list|,
name|XFontSet
parameter_list|,
name|GC
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|_XsimbDrawImageString
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|Display
modifier|*
parameter_list|,
name|Drawable
parameter_list|,
name|XFontSet
parameter_list|,
name|GC
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|_Xsimb8DrawImageString
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|Display
modifier|*
parameter_list|,
name|Drawable
parameter_list|,
name|XFontSet
parameter_list|,
name|GC
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|_XsiwcTextEscapement
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XFontSet
parameter_list|,
name|wchar_t
modifier|*
parameter_list|,
name|int
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|_XsiwcTextExtents
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XFontSet
parameter_list|,
name|wchar_t
modifier|*
parameter_list|,
name|int
parameter_list|,
name|XRectangle
modifier|*
parameter_list|,
name|XRectangle
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|Status
name|_XsiwcTextPerCharExtents
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XFontSet
parameter_list|,
name|wchar_t
modifier|*
parameter_list|,
name|int
parameter_list|,
name|XRectangle
modifier|*
parameter_list|,
name|XRectangle
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|,
name|XRectangle
modifier|*
parameter_list|,
name|XRectangle
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|_XsiwcDrawString
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|Display
modifier|*
parameter_list|,
name|Drawable
parameter_list|,
name|XFontSet
parameter_list|,
name|GC
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|wchar_t
modifier|*
parameter_list|,
name|int
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|_XsiwcDrawImageString
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|Display
modifier|*
parameter_list|,
name|Drawable
parameter_list|,
name|XFontSet
parameter_list|,
name|GC
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|,
name|wchar_t
modifier|*
parameter_list|,
name|int
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|_XipGetIMValues
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIM
parameter_list|,
name|XIMArg
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|XIC
name|_XipCreateIC
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIM
parameter_list|,
name|XIMArg
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|_XipDestroyIC
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|_XipSetICFocus
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|_XipUnsetICFocus
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|_XipSetICValues
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
parameter_list|,
name|XIMArg
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|_XipGetICValues
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
parameter_list|,
name|XIMArg
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|_XipmbResetIC
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|wchar_t
modifier|*
name|_XipwcResetIC
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|_XipmbLookupString
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
parameter_list|,
name|XKeyEvent
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|KeySym
modifier|*
parameter_list|,
name|Status
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|_XipwcLookupString
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
parameter_list|,
name|XKeyEvent
modifier|*
parameter_list|,
name|wchar_t
modifier|*
parameter_list|,
name|int
parameter_list|,
name|KeySym
modifier|*
parameter_list|,
name|Status
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|unsigned
name|long
name|_XipReadRdb
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|Display
modifier|*
parameter_list|,
name|XipIC
parameter_list|,
name|unsigned
name|long
parameter_list|,
name|XrmDatabase
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_ifndef
ifndef|#
directive|ifndef
name|NO_LOCAL_IM
end_ifndef

begin_function_decl
specifier|extern
name|XIM
name|_XipLocalOpenIM
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XLCd
parameter_list|,
name|Display
modifier|*
parameter_list|,
name|XrmDatabase
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|_XipLocalGetIMValues
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIM
parameter_list|,
name|XIMArg
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|XIC
name|_XipLocalCreateIC
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIM
parameter_list|,
name|XIMArg
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|_XipLocalDestroyIC
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|_XipLocalSetICFocus
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|_XipLocalUnsetICFocus
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|_XipLocalSetICValues
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
parameter_list|,
name|XIMArg
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|_XipLocalGetICValues
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
parameter_list|,
name|XIMArg
modifier|*
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|_XipLocalmbResetIC
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|wchar_t
modifier|*
name|_XipLocalwcResetIC
parameter_list|(
if|#
directive|if
name|NeedFunctionPrototypes
name|XIC
endif|#
directive|endif
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !NO_LOCAL_IM */
end_comment

begin_macro
name|_XFUNCPROTOEND
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _XI18NINT_H_ */
end_comment

end_unit

