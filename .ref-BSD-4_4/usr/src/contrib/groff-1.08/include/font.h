begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C++ -*-
end_comment

begin_comment
comment|/* Copyright (C) 1989, 1990, 1991, 1992 Free Software Foundation, Inc.      Written by James Clark (jjc@jclark.com)  This file is part of groff.  groff is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  groff is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with groff; see the file COPYING.  If not, write to the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */
end_comment

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|FONT_COMMAND_HANDLER
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_typedef

begin_struct_decl
struct_decl|struct
name|font_kern_list
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|font_char_metric
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|font_widths_cache
struct_decl|;
end_struct_decl

begin_decl_stmt
name|class
name|font
block|{
name|public
label|:
enum|enum
block|{
name|LIG_ff
init|=
literal|1
block|,
name|LIG_fi
init|=
literal|2
block|,
name|LIG_fl
init|=
literal|4
block|,
name|LIG_ffi
init|=
literal|8
block|,
name|LIG_ffl
init|=
literal|16
block|}
enum|;
name|virtual
operator|~
name|font
argument_list|()
expr_stmt|;
name|int
name|contains
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|int
name|is_special
parameter_list|()
function_decl|;
name|int
name|get_width
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|point_size
parameter_list|)
function_decl|;
name|int
name|get_height
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|point_size
parameter_list|)
function_decl|;
name|int
name|get_depth
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|point_size
parameter_list|)
function_decl|;
name|int
name|get_space_width
parameter_list|(
name|int
name|point_size
parameter_list|)
function_decl|;
name|int
name|get_character_type
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|int
name|get_kern
parameter_list|(
name|int
name|index1
parameter_list|,
name|int
name|index2
parameter_list|,
name|int
name|point_size
parameter_list|)
function_decl|;
name|int
name|get_skew
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|point_size
parameter_list|,
name|int
name|slant
parameter_list|)
function_decl|;
name|int
name|has_ligature
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|int
name|get_italic_correction
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|point_size
parameter_list|)
function_decl|;
name|int
name|get_left_italic_correction
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|point_size
parameter_list|)
function_decl|;
name|int
name|get_subscript_correction
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|point_size
parameter_list|)
function_decl|;
name|int
name|get_code
parameter_list|(
name|int
name|i
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
name|get_name
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|get_internal_name
parameter_list|()
function_decl|;
specifier|static
name|font
modifier|*
name|load_font
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|int
modifier|*
name|not_found
init|=
literal|0
parameter_list|)
function_decl|;
specifier|static
name|void
name|command_line_font_dir
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|)
function_decl|;
specifier|static
name|FILE
modifier|*
name|open_file
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|char
modifier|*
modifier|*
name|pathp
parameter_list|)
function_decl|;
specifier|static
name|int
name|load_desc
parameter_list|()
function_decl|;
specifier|static
name|int
name|name_to_index
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|int
name|number_to_index
parameter_list|(
name|int
parameter_list|)
function_decl|;
specifier|static
name|FONT_COMMAND_HANDLER
name|set_unknown_desc_command_handler
parameter_list|(
name|FONT_COMMAND_HANDLER
parameter_list|)
function_decl|;
specifier|static
name|int
name|res
decl_stmt|;
specifier|static
name|int
name|hor
decl_stmt|;
specifier|static
name|int
name|vert
decl_stmt|;
specifier|static
name|int
name|unitwidth
decl_stmt|;
specifier|static
name|int
name|paperwidth
decl_stmt|;
specifier|static
name|int
name|paperlength
decl_stmt|;
specifier|static
name|int
name|biggestfont
decl_stmt|;
specifier|static
name|int
name|spare2
decl_stmt|;
specifier|static
name|int
name|sizescale
decl_stmt|;
specifier|static
name|int
name|tcommand
decl_stmt|;
specifier|static
specifier|const
name|char
modifier|*
modifier|*
name|font_name_table
decl_stmt|;
specifier|static
specifier|const
name|char
modifier|*
modifier|*
name|style_table
decl_stmt|;
specifier|static
specifier|const
name|char
modifier|*
name|family
decl_stmt|;
specifier|static
name|int
modifier|*
name|sizes
decl_stmt|;
name|private
label|:
name|unsigned
name|ligatures
decl_stmt|;
name|font_kern_list
modifier|*
modifier|*
name|kern_hash_table
decl_stmt|;
name|int
name|space_width
decl_stmt|;
name|short
modifier|*
name|ch_index
decl_stmt|;
name|int
name|nindices
decl_stmt|;
name|font_char_metric
modifier|*
name|ch
decl_stmt|;
name|int
name|ch_used
decl_stmt|;
name|int
name|ch_size
decl_stmt|;
name|int
name|special
decl_stmt|;
name|char
modifier|*
name|name
decl_stmt|;
name|char
modifier|*
name|internalname
decl_stmt|;
name|double
name|slant
decl_stmt|;
name|font_widths_cache
modifier|*
name|widths_cache
decl_stmt|;
specifier|static
name|FONT_COMMAND_HANDLER
name|unknown_desc_command_handler
decl_stmt|;
enum|enum
block|{
name|KERN_HASH_TABLE_SIZE
init|=
literal|503
block|}
enum|;
name|void
name|add_entry
parameter_list|(
name|int
name|index
parameter_list|,
specifier|const
name|font_char_metric
modifier|&
parameter_list|)
function_decl|;
name|void
name|copy_entry
parameter_list|(
name|int
name|new_index
parameter_list|,
name|int
name|old_index
parameter_list|)
function_decl|;
name|void
name|add_kern
parameter_list|(
name|int
name|index1
parameter_list|,
name|int
name|index2
parameter_list|,
name|int
name|amount
parameter_list|)
function_decl|;
specifier|static
name|int
name|hash_kern
parameter_list|(
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|)
function_decl|;
name|void
name|alloc_ch_index
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|extend_ch
parameter_list|()
function_decl|;
name|void
name|compact
parameter_list|()
function_decl|;
specifier|static
name|int
name|scale
parameter_list|(
name|int
name|w
parameter_list|,
name|int
name|pointsize
parameter_list|)
function_decl|;
name|virtual
name|void
name|handle_unknown_font_command
parameter_list|(
specifier|const
name|char
modifier|*
name|command
parameter_list|,
specifier|const
name|char
modifier|*
name|arg
parameter_list|,
specifier|const
name|char
modifier|*
name|file
parameter_list|,
name|int
name|lineno
parameter_list|)
function_decl|;
name|protected
label|:
name|font
argument_list|(
specifier|const
name|char
operator|*
argument_list|)
expr_stmt|;
name|int
name|load
parameter_list|(
name|int
modifier|*
name|not_found
init|=
literal|0
parameter_list|)
function_decl|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

end_unit

