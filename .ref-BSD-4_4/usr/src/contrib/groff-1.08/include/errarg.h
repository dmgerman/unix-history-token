begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|// -*- C++ -*-
end_comment

begin_comment
comment|/* Copyright (C) 1989, 1990, 1991, 1992 Free Software Foundation, Inc.      Written by James Clark (jjc@jclark.com)  This file is part of groff.  groff is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.  groff is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with groff; see the file COPYING.  If not, write to the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */
end_comment

begin_decl_stmt
name|class
name|errarg
block|{
enum|enum
block|{
name|EMPTY
block|,
name|STRING
block|,
name|CHAR
block|,
name|INTEGER
block|,
name|DOUBLE
block|}
name|type
enum|;
union|union
block|{
specifier|const
name|char
modifier|*
name|s
decl_stmt|;
name|int
name|n
decl_stmt|;
name|char
name|c
decl_stmt|;
name|double
name|d
decl_stmt|;
block|}
union|;
name|public
label|:
name|errarg
argument_list|()
expr_stmt|;
name|errarg
argument_list|(
specifier|const
name|char
operator|*
argument_list|)
expr_stmt|;
name|errarg
argument_list|(
name|char
argument_list|)
expr_stmt|;
name|errarg
argument_list|(
argument|unsigned char
argument_list|)
empty_stmt|;
name|errarg
argument_list|(
name|int
argument_list|)
expr_stmt|;
name|errarg
argument_list|(
name|double
argument_list|)
expr_stmt|;
name|int
name|empty
argument_list|()
specifier|const
expr_stmt|;
name|void
name|print
argument_list|()
specifier|const
expr_stmt|;
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_decl_stmt
specifier|extern
name|errarg
name|empty_errarg
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|void
name|errprint
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|errarg
modifier|&
name|arg1
init|=
name|empty_errarg
parameter_list|,
specifier|const
name|errarg
modifier|&
name|arg2
init|=
name|empty_errarg
parameter_list|,
specifier|const
name|errarg
modifier|&
name|arg3
init|=
name|empty_errarg
parameter_list|)
function_decl|;
end_function_decl

end_unit

