begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1992, 1993  *	The Regents of the University of California.  All rights reserved.  * All rights reserved.  *  * This code is derived from software donated to Berkeley by  * Jan-Simon Pendry.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 4. Neither the name of the University nor the names of its contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	@(#)portald.h	8.1 (Berkeley) 6/5/93  *  * $FreeBSD$  */
end_comment

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_include
include|#
directive|include
file|<sys/ucred.h>
end_include

begin_include
include|#
directive|include
file|<fs/portalfs/portal.h>
end_include

begin_comment
comment|/*  * Meta-chars in an RE.  Paths in the config file containing  * any of these characters will be matched using regexec, other  * paths will be prefix-matched.  */
end_comment

begin_define
define|#
directive|define
name|RE_CHARS
value|".|()[]*+?\\^$"
end_define

begin_typedef
typedef|typedef
name|struct
name|qelem
name|qelem
typedef|;
end_typedef

begin_struct
struct|struct
name|qelem
block|{
name|qelem
modifier|*
name|q_forw
decl_stmt|;
name|qelem
modifier|*
name|q_back
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
typedef|typedef
name|struct
name|provider
name|provider
typedef|;
end_typedef

begin_struct
struct|struct
name|provider
block|{
specifier|const
name|char
modifier|*
name|pr_match
decl_stmt|;
name|int
function_decl|(
modifier|*
name|pr_func
function_decl|)
parameter_list|(
name|struct
name|portal_cred
modifier|*
parameter_list|,
name|char
modifier|*
name|key
parameter_list|,
name|char
modifier|*
modifier|*
name|v
parameter_list|,
name|int
name|so
parameter_list|,
name|int
modifier|*
name|fdp
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|provider
name|providers
index|[]
decl_stmt|;
end_decl_stmt

begin_comment
comment|/*  * Portal providers  */
end_comment

begin_function_decl
specifier|extern
name|int
name|portal_exec
parameter_list|(
name|struct
name|portal_cred
modifier|*
parameter_list|,
name|char
modifier|*
name|key
parameter_list|,
name|char
modifier|*
modifier|*
name|v
parameter_list|,
name|int
name|so
parameter_list|,
name|int
modifier|*
name|fdp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|portal_file
parameter_list|(
name|struct
name|portal_cred
modifier|*
parameter_list|,
name|char
modifier|*
name|key
parameter_list|,
name|char
modifier|*
modifier|*
name|v
parameter_list|,
name|int
name|so
parameter_list|,
name|int
modifier|*
name|fdp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|portal_pipe
parameter_list|(
name|struct
name|portal_cred
modifier|*
parameter_list|,
name|char
modifier|*
name|key
parameter_list|,
name|char
modifier|*
modifier|*
name|v
parameter_list|,
name|int
name|so
parameter_list|,
name|int
modifier|*
name|fdp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|portal_tcp
parameter_list|(
name|struct
name|portal_cred
modifier|*
parameter_list|,
name|char
modifier|*
name|key
parameter_list|,
name|char
modifier|*
modifier|*
name|v
parameter_list|,
name|int
name|so
parameter_list|,
name|int
modifier|*
name|fdp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|portal_tcplisten
parameter_list|(
name|struct
name|portal_cred
modifier|*
parameter_list|,
name|char
modifier|*
name|key
parameter_list|,
name|char
modifier|*
modifier|*
name|v
parameter_list|,
name|int
name|so
parameter_list|,
name|int
modifier|*
name|fdp
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Global functions  */
end_comment

begin_function_decl
specifier|extern
name|void
name|activate
parameter_list|(
name|qelem
modifier|*
name|q
parameter_list|,
name|int
name|so
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
modifier|*
name|conf_match
parameter_list|(
name|qelem
modifier|*
name|q
parameter_list|,
name|char
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|conf_read
parameter_list|(
name|qelem
modifier|*
name|q
parameter_list|,
name|char
modifier|*
name|conf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|set_user_credentials
parameter_list|(
name|struct
name|portal_cred
modifier|*
name|user
parameter_list|,
name|struct
name|portal_cred
modifier|*
name|save_area
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|restore_credentials
parameter_list|(
name|struct
name|portal_cred
modifier|*
name|save_area
parameter_list|)
function_decl|;
end_function_decl

end_unit

