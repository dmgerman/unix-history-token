begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1995 John Hay.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. All advertising materials mentioning features or use of this software  *    must display the following acknowledgement:  *	This product includes software developed by John Hay.  * 4. Neither the name of the author nor the names of any co-contributors  *    may be used to endorse or promote products derived from this software  *    without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY John Hay AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL John Hay OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $Id: sap.h,v 1.5 1997/02/22 16:00:59 peter Exp $  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_SAP_H_
end_ifndef

begin_define
define|#
directive|define
name|_SAP_H_
end_define

begin_define
define|#
directive|define
name|SAP_REQ
value|1
end_define

begin_define
define|#
directive|define
name|SAP_RESP
value|2
end_define

begin_define
define|#
directive|define
name|SAP_REQ_NEAR
value|3
end_define

begin_define
define|#
directive|define
name|SAP_RESP_NEAR
value|4
end_define

begin_define
define|#
directive|define
name|SAPCMD_MAX
value|5
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|SAPCMDS
end_ifdef

begin_decl_stmt
name|char
modifier|*
name|sapcmds
index|[
name|SAPCMD_MAX
index|]
init|=
block|{
literal|"#0"
block|,
literal|"REQUEST"
block|,
literal|"RESPONSE"
block|,
literal|"REQ NEAREST"
block|,
literal|"RESP NEAREST"
block|}
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_define
define|#
directive|define
name|MAXSAPENTRIES
value|7
end_define

begin_define
define|#
directive|define
name|SAP_WILDCARD
value|0xFFFF
end_define

begin_define
define|#
directive|define
name|SERVNAMELEN
value|48
end_define

begin_typedef
typedef|typedef
struct|struct
name|sap_info
block|{
name|u_short
name|ServType
decl_stmt|;
name|char
name|ServName
index|[
name|SERVNAMELEN
index|]
decl_stmt|;
name|struct
name|ipx_addr
name|ipx
decl_stmt|;
name|u_short
name|hops
decl_stmt|;
block|}
name|sap_info
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|sap_packet
block|{
name|u_short
name|sap_cmd
decl_stmt|;
name|sap_info
name|sap
index|[
literal|0
index|]
decl_stmt|;
comment|/* Variable length. */
block|}
name|sap_packet
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
name|sap_entry
block|{
name|struct
name|sap_entry
modifier|*
name|forw
decl_stmt|;
name|struct
name|sap_entry
modifier|*
name|back
decl_stmt|;
name|struct
name|sap_entry
modifier|*
name|clone
decl_stmt|;
name|struct
name|interface
modifier|*
name|ifp
decl_stmt|;
name|struct
name|sap_info
name|sap
decl_stmt|;
name|struct
name|sockaddr
name|source
decl_stmt|;
name|int
name|hash
decl_stmt|;
name|int
name|state
decl_stmt|;
name|int
name|timer
decl_stmt|;
block|}
name|sap_entry
typedef|;
end_typedef

begin_define
define|#
directive|define
name|SAPHASHSIZ
value|256
end_define

begin_comment
comment|/* Should be a power of 2 */
end_comment

begin_define
define|#
directive|define
name|SAPHASHMASK
value|(SAPHASHSIZ-1)
end_define

begin_typedef
typedef|typedef
struct|struct
name|sap_hash
block|{
name|struct
name|sap_entry
modifier|*
name|forw
decl_stmt|;
name|struct
name|sap_entry
modifier|*
name|back
decl_stmt|;
block|}
name|sap_hash
typedef|;
end_typedef

begin_decl_stmt
specifier|extern
name|sap_hash
name|sap_head
index|[
name|SAPHASHSIZ
index|]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|sap_packet
modifier|*
name|sap_msg
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|sapinit
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sap_input
parameter_list|(
name|struct
name|sockaddr
modifier|*
name|from
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sapsndmsg
parameter_list|(
name|struct
name|sockaddr
modifier|*
name|dst
parameter_list|,
name|int
name|flags
parameter_list|,
name|struct
name|interface
modifier|*
name|ifp
parameter_list|,
name|int
name|changesonly
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sap_supply_toall
parameter_list|(
name|int
name|changesonly
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sap_supply
parameter_list|(
name|struct
name|sockaddr
modifier|*
name|dst
parameter_list|,
name|int
name|flags
parameter_list|,
name|struct
name|interface
modifier|*
name|ifp
parameter_list|,
name|int
name|ServType
parameter_list|,
name|int
name|changesonly
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|sap_entry
modifier|*
name|sap_lookup
parameter_list|(
name|u_short
name|ServType
parameter_list|,
name|char
modifier|*
name|ServName
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|sap_entry
modifier|*
name|sap_nearestserver
parameter_list|(
name|ushort
name|ServType
parameter_list|,
name|struct
name|interface
modifier|*
name|ifp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sap_add
parameter_list|(
name|struct
name|sap_info
modifier|*
name|si
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|from
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sap_change
parameter_list|(
name|struct
name|sap_entry
modifier|*
name|sap
parameter_list|,
name|struct
name|sap_info
modifier|*
name|si
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|from
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sap_add_clone
parameter_list|(
name|struct
name|sap_entry
modifier|*
name|sap
parameter_list|,
name|struct
name|sap_info
modifier|*
name|clone
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|from
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|sap_delete
parameter_list|(
name|struct
name|sap_entry
modifier|*
name|sap
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*_SAP_H_*/
end_comment

end_unit

