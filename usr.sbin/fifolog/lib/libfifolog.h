begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2005-2008 Poul-Henning Kamp  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_include
include|#
directive|include
file|<sys/stdint.h>
end_include

begin_comment
comment|/* CREATORS */
end_comment

begin_function_decl
specifier|const
name|char
modifier|*
name|fifolog_create
parameter_list|(
specifier|const
name|char
modifier|*
name|fn
parameter_list|,
name|off_t
name|size
parameter_list|,
name|unsigned
name|recsize
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* WRITERS */
end_comment

begin_struct_decl
struct_decl|struct
name|fifolog_writer
struct_decl|;
end_struct_decl

begin_function_decl
name|struct
name|fifolog_writer
modifier|*
name|fifolog_write_new
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|fifolog_write_open
parameter_list|(
name|struct
name|fifolog_writer
modifier|*
name|f
parameter_list|,
specifier|const
name|char
modifier|*
name|fn
parameter_list|,
name|unsigned
name|writerate
parameter_list|,
name|unsigned
name|syncrate
parameter_list|,
name|int
name|compression
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fifolog_write_bytes
parameter_list|(
name|struct
name|fifolog_writer
modifier|*
name|f
parameter_list|,
name|uint32_t
name|id
parameter_list|,
name|time_t
name|now
parameter_list|,
specifier|const
name|void
modifier|*
name|ptr
parameter_list|,
name|unsigned
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fifolog_write_bytes_poll
parameter_list|(
name|struct
name|fifolog_writer
modifier|*
name|f
parameter_list|,
name|uint32_t
name|id
parameter_list|,
name|time_t
name|now
parameter_list|,
specifier|const
name|void
modifier|*
name|ptr
parameter_list|,
name|unsigned
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fifolog_write_poll
parameter_list|(
name|struct
name|fifolog_writer
modifier|*
name|f
parameter_list|,
name|time_t
name|now
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fifolog_write_close
parameter_list|(
name|struct
name|fifolog_writer
modifier|*
name|f
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fifolog_write_destroy
parameter_list|(
name|struct
name|fifolog_writer
modifier|*
name|f
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|fifolog_write_flush
parameter_list|(
name|struct
name|fifolog_writer
modifier|*
name|f
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
specifier|const
name|char
modifier|*
name|fifolog_write_statnames
index|[]
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* READERS */
end_comment

begin_typedef
typedef|typedef
name|void
name|fifolog_reader_render_t
parameter_list|(
name|void
modifier|*
name|priv
parameter_list|,
name|time_t
name|when
parameter_list|,
name|unsigned
name|flag
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
name|p
parameter_list|,
name|unsigned
name|l
parameter_list|)
function_decl|;
end_typedef

begin_struct_decl
struct_decl|struct
name|fifolog_reader
struct_decl|;
end_struct_decl

begin_function_decl
name|struct
name|fifolog_reader
modifier|*
name|fifolog_reader_open
parameter_list|(
specifier|const
name|char
modifier|*
name|fname
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|off_t
name|fifolog_reader_seek
parameter_list|(
specifier|const
name|struct
name|fifolog_reader
modifier|*
name|fl
parameter_list|,
name|time_t
name|t0
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fifolog_reader_process
parameter_list|(
name|struct
name|fifolog_reader
modifier|*
name|fl
parameter_list|,
name|off_t
name|from
parameter_list|,
name|fifolog_reader_render_t
modifier|*
name|func
parameter_list|,
name|void
modifier|*
name|priv
parameter_list|,
name|time_t
name|end
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* UTILS */
end_comment

begin_function_decl
name|time_t
name|get_date
parameter_list|(
name|char
modifier|*
name|p
parameter_list|)
function_decl|;
end_function_decl

begin_if
if|#
directive|if
operator|(
name|__FreeBSD__
operator|<
literal|7
operator|)
end_if

begin_function_decl
name|int
name|expand_number
parameter_list|(
name|char
modifier|*
name|_buf
parameter_list|,
name|int64_t
modifier|*
name|_num
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

