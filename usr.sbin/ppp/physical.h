begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Written by Eivind Eklund<eivind@yes.no>  *    for Yes Interactive  *  * Copyright (C) 1998, Yes Interactive.  All rights reserved.  *  * Redistribution and use in any form is permitted.  Redistribution in  * source form should include the above copyright and this set of  * conditions, because large sections american law seems to have been  * created by a bunch of jerks on drugs that are now illegal, forcing  * me to include this copyright-stuff instead of placing this in the  * public domain.  The name of of 'Yes Interactive' or 'Eivind Eklund'  * may not be used to endorse or promote products derived from this  * software without specific prior written permission.  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED  * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.  *  *  $Id: physical.h,v 1.13 1999/06/05 21:35:52 brian Exp $  *  */
end_comment

begin_struct_decl
struct_decl|struct
name|datalink
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|bundle
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|iovec
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|physical
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|bundle
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|ccp
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|cmdargs
struct_decl|;
end_struct_decl

begin_comment
comment|/* Device types */
end_comment

begin_define
define|#
directive|define
name|I4B_DEVICE
value|1
end_define

begin_define
define|#
directive|define
name|TTY_DEVICE
value|2
end_define

begin_define
define|#
directive|define
name|TCP_DEVICE
value|3
end_define

begin_define
define|#
directive|define
name|UDP_DEVICE
value|4
end_define

begin_define
define|#
directive|define
name|EXEC_DEVICE
value|5
end_define

begin_comment
comment|/* Returns from awaitcarrier() */
end_comment

begin_define
define|#
directive|define
name|CARRIER_PENDING
value|1
end_define

begin_define
define|#
directive|define
name|CARRIER_OK
value|2
end_define

begin_define
define|#
directive|define
name|CARRIER_LOST
value|3
end_define

begin_struct
struct|struct
name|device
block|{
name|int
name|type
decl_stmt|;
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|int
function_decl|(
modifier|*
name|awaitcarrier
function_decl|)
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|raw
function_decl|)
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|offline
function_decl|)
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|cooked
function_decl|)
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|stoptimer
function_decl|)
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|destroy
function_decl|)
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
name|ssize_t
function_decl|(
modifier|*
name|read
function_decl|)
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
name|ssize_t
function_decl|(
modifier|*
name|write
function_decl|)
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|device2iov
function_decl|)
parameter_list|(
name|struct
name|device
modifier|*
parameter_list|,
name|struct
name|iovec
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
parameter_list|,
name|pid_t
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|speed
function_decl|)
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|openinfo
function_decl|)
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|physical
block|{
name|struct
name|link
name|link
decl_stmt|;
name|struct
name|descriptor
name|desc
decl_stmt|;
name|int
name|type
decl_stmt|;
comment|/* What sort of PHYS_* link are we ? */
name|struct
name|async
name|async
decl_stmt|;
comment|/* Our async state */
name|struct
name|hdlc
name|hdlc
decl_stmt|;
comment|/* Our hdlc state */
name|int
name|fd
decl_stmt|;
comment|/* File descriptor for this device */
name|struct
name|mbuf
modifier|*
name|out
decl_stmt|;
comment|/* mbuf that suffered a short write */
name|int
name|connect_count
decl_stmt|;
name|struct
name|datalink
modifier|*
name|dl
decl_stmt|;
comment|/* my owner */
struct|struct
block|{
name|u_char
name|buf
index|[
name|MAX_MRU
index|]
decl_stmt|;
comment|/* Our input data buffer */
name|size_t
name|sz
decl_stmt|;
block|}
name|input
struct|;
struct|struct
block|{
name|char
name|full
index|[
name|DEVICE_LEN
index|]
decl_stmt|;
comment|/* Our current device name */
name|char
modifier|*
name|base
decl_stmt|;
block|}
name|name
struct|;
name|unsigned
name|Utmp
range|:
literal|1
decl_stmt|;
comment|/* Are we in utmp ? (move to ttydevice ?) */
name|pid_t
name|session_owner
decl_stmt|;
comment|/* HUP this when closing the link */
name|struct
name|device
modifier|*
name|handler
decl_stmt|;
comment|/* device specific handler */
struct|struct
block|{
name|unsigned
name|rts_cts
range|:
literal|1
decl_stmt|;
comment|/* Is rts/cts enabled ? */
name|unsigned
name|parity
decl_stmt|;
comment|/* What parity is enabled? (tty flags) */
name|unsigned
name|speed
decl_stmt|;
comment|/* tty speed */
name|char
name|devlist
index|[
name|LINE_LEN
index|]
decl_stmt|;
comment|/* NUL separated list of devices */
name|int
name|ndev
decl_stmt|;
comment|/* number of devices in list */
struct|struct
block|{
name|unsigned
name|required
range|:
literal|1
decl_stmt|;
comment|/* Is cd *REQUIRED* on this device */
name|int
name|delay
decl_stmt|;
comment|/* Wait this many seconds after login script */
block|}
name|cd
struct|;
block|}
name|cfg
struct|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|field2phys
parameter_list|(
name|fp
parameter_list|,
name|name
parameter_list|)
define|\
value|((struct physical *)((char *)fp - (int)(&((struct physical *)0)->name)))
end_define

begin_define
define|#
directive|define
name|link2physical
parameter_list|(
name|l
parameter_list|)
define|\
value|((l)->type == PHYSICAL_LINK ? field2phys(l, link) : NULL)
end_define

begin_define
define|#
directive|define
name|descriptor2physical
parameter_list|(
name|d
parameter_list|)
define|\
value|((d)->type == PHYSICAL_DESCRIPTOR ? field2phys(d, desc) : NULL)
end_define

begin_define
define|#
directive|define
name|PHYSICAL_NOFORCE
value|1
end_define

begin_define
define|#
directive|define
name|PHYSICAL_FORCE_ASYNC
value|2
end_define

begin_define
define|#
directive|define
name|PHYSICAL_FORCE_SYNC
value|3
end_define

begin_function_decl
specifier|extern
name|struct
name|physical
modifier|*
name|physical_Create
parameter_list|(
name|struct
name|datalink
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_Open
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
name|struct
name|bundle
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_Raw
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_GetSpeed
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_SetSpeed
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_SetParity
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_SetRtsCts
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|physical_SetSync
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_ShowStatus
parameter_list|(
name|struct
name|cmdargs
specifier|const
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|physical_Offline
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|physical_Close
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|physical_Destroy
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|physical
modifier|*
name|iov2physical
parameter_list|(
name|struct
name|datalink
modifier|*
parameter_list|,
name|struct
name|iovec
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical2iov
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
name|struct
name|iovec
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
parameter_list|,
name|pid_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|physical_ChangedPid
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
name|pid_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_IsSync
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|physical_GetDevice
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|physical_SetDeviceList
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
name|int
parameter_list|,
specifier|const
name|char
modifier|*
specifier|const
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|physical_SetDevice
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|ssize_t
name|physical_Read
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|ssize_t
name|physical_Write
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_doUpdateSet
parameter_list|(
name|struct
name|descriptor
modifier|*
parameter_list|,
name|fd_set
modifier|*
parameter_list|,
name|fd_set
modifier|*
parameter_list|,
name|fd_set
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_IsSet
parameter_list|(
name|struct
name|descriptor
modifier|*
parameter_list|,
specifier|const
name|fd_set
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|physical_Login
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_RemoveFromSet
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
name|fd_set
modifier|*
parameter_list|,
name|fd_set
modifier|*
parameter_list|,
name|fd_set
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_SetMode
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|physical_DeleteQueue
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|physical_SetupStack
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|physical_StopDeviceTimer
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_MaxDeviceSize
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|physical_AwaitCarrier
parameter_list|(
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

end_unit

