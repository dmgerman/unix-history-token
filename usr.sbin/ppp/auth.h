begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  *	    Written by Toshiharu OHNO (tony-o@iij.ad.jp)  *  *   Copyright (C) 1993, Internet Initiative Japan, Inc. All rights reserverd.  *  * Redistribution and use in source and binary forms are permitted  * provided that the above copyright notice and this paragraph are  * duplicated in all such forms and that any documentation,  * advertising materials, and other materials related to such  * distribution and use acknowledge that the software was developed  * by the Internet Initiative Japan.  The name of the  * IIJ may not be used to endorse or promote products derived  * from this software without specific prior written permission.  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED  * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.  *  * $FreeBSD$  *  *	TODO:  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_AUTH_H_
end_ifndef

begin_define
define|#
directive|define
name|_AUTH_H_
end_define

begin_typedef
typedef|typedef
enum|enum
block|{
name|VALID
block|,
name|INVALID
block|,
name|NOT_FOUND
block|}
name|LOCAL_AUTH_VALID
typedef|;
end_typedef

begin_function_decl
name|LOCAL_AUTH_VALID
name|LocalAuthValidate
parameter_list|(
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_struct
struct|struct
name|authinfo
block|{
name|void
function_decl|(
modifier|*
name|ChallengeFunc
function_decl|)
parameter_list|()
function_decl|;
name|struct
name|pppTimer
name|authtimer
decl_stmt|;
name|int
name|retry
decl_stmt|;
name|int
name|id
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|authinfo
name|AuthPapInfo
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|authinfo
name|AuthChapInfo
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|SendPapChallenge
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|SendChapChallenge
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|StopAuthTimer
name|__P
argument_list|(
operator|(
expr|struct
name|authinfo
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|StartAuthChallenge
name|__P
argument_list|(
operator|(
expr|struct
name|authinfo
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|LOCAL_AUTH_VALID
name|LocalAuthInit
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|AuthValidate
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|,
name|char
operator|*
operator|,
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

