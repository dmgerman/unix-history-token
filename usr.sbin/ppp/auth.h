begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1996 - 2001 Brian Somers<brian@Awfulhak.org>  *          based on work by Toshiharu OHNO<tony-o@iij.ad.jp>  *                           Internet Initiative Japan, Inc (IIJ)  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_struct_decl
struct_decl|struct
name|physical
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|bundle
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|authinfo
struct_decl|;
end_struct_decl

begin_typedef
typedef|typedef
name|void
function_decl|(
modifier|*
name|auth_func
function_decl|)
parameter_list|(
name|struct
name|authinfo
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_struct
struct|struct
name|authinfo
block|{
struct|struct
block|{
name|auth_func
name|req
decl_stmt|;
name|auth_func
name|success
decl_stmt|;
name|auth_func
name|failure
decl_stmt|;
block|}
name|fn
struct|;
struct|struct
block|{
name|struct
name|fsmheader
name|hdr
decl_stmt|;
name|char
name|name
index|[
name|AUTHLEN
index|]
decl_stmt|;
block|}
name|in
struct|;
name|struct
name|pppTimer
name|authtimer
decl_stmt|;
name|int
name|retry
decl_stmt|;
name|int
name|id
decl_stmt|;
name|struct
name|physical
modifier|*
name|physical
decl_stmt|;
struct|struct
block|{
name|struct
name|fsm_retry
name|fsm
decl_stmt|;
comment|/* How often/frequently to resend requests */
block|}
name|cfg
struct|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|auth_Failure
parameter_list|(
name|a
parameter_list|)
value|(*(a)->fn.failure)(a)
end_define

begin_define
define|#
directive|define
name|auth_Success
parameter_list|(
name|a
parameter_list|)
value|(*(a)->fn.success)(a)
end_define

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|Auth2Nam
parameter_list|(
name|u_short
parameter_list|,
name|u_char
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|auth_Init
parameter_list|(
name|struct
name|authinfo
modifier|*
parameter_list|,
name|struct
name|physical
modifier|*
parameter_list|,
name|auth_func
parameter_list|,
name|auth_func
parameter_list|,
name|auth_func
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|auth_StopTimer
parameter_list|(
name|struct
name|authinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|auth_StartReq
parameter_list|(
name|struct
name|authinfo
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|auth_Validate
parameter_list|(
name|struct
name|bundle
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
name|auth_GetSecret
parameter_list|(
name|struct
name|bundle
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|physical
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|auth_SetPhoneList
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|auth_Select
parameter_list|(
name|struct
name|bundle
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|mbuf
modifier|*
name|auth_ReadHeader
parameter_list|(
name|struct
name|authinfo
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|mbuf
modifier|*
name|auth_ReadName
parameter_list|(
name|struct
name|authinfo
modifier|*
parameter_list|,
name|struct
name|mbuf
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

end_unit

