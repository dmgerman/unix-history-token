begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1996 - 2001 Brian Somers<brian@Awfulhak.org>  *          based on work by Toshiharu OHNO<tony-o@iij.ad.jp>  *                           Internet Initiative Japan, Inc (IIJ)  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_struct_decl
struct_decl|struct
name|cmdtab
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|bundle
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|datalink
struct_decl|;
end_struct_decl

begin_struct_decl
struct_decl|struct
name|prompt
struct_decl|;
end_struct_decl

begin_struct
struct|struct
name|cmdargs
block|{
name|struct
name|cmdtab
specifier|const
modifier|*
name|cmdtab
decl_stmt|;
comment|/* The entire command table */
name|struct
name|cmdtab
specifier|const
modifier|*
name|cmd
decl_stmt|;
comment|/* This command entry */
name|int
name|argc
decl_stmt|;
comment|/* Number of arguments (excluding cmd */
name|int
name|argn
decl_stmt|;
comment|/* Argument to start processing from */
name|char
specifier|const
modifier|*
specifier|const
modifier|*
name|argv
decl_stmt|;
comment|/* Arguments */
name|struct
name|bundle
modifier|*
name|bundle
decl_stmt|;
comment|/* Our bundle */
name|struct
name|datalink
modifier|*
name|cx
decl_stmt|;
comment|/* Our context */
name|struct
name|prompt
modifier|*
name|prompt
decl_stmt|;
comment|/* Who executed us */
block|}
struct|;
end_struct

begin_struct
struct|struct
name|cmdtab
block|{
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
specifier|const
name|char
modifier|*
name|alias
decl_stmt|;
name|int
function_decl|(
modifier|*
name|func
function_decl|)
parameter_list|(
name|struct
name|cmdargs
specifier|const
modifier|*
parameter_list|)
function_decl|;
name|u_char
name|lauth
decl_stmt|;
specifier|const
name|char
modifier|*
name|helpmes
decl_stmt|;
specifier|const
name|char
modifier|*
name|syntax
decl_stmt|;
specifier|const
name|void
modifier|*
name|args
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|NEG_ACCEPTED
value|(1)
end_define

begin_define
define|#
directive|define
name|NEG_ENABLED
value|(2)
end_define

begin_define
define|#
directive|define
name|IsAccepted
parameter_list|(
name|x
parameter_list|)
value|((x)& NEG_ACCEPTED)
end_define

begin_define
define|#
directive|define
name|IsEnabled
parameter_list|(
name|x
parameter_list|)
value|((x)& NEG_ENABLED)
end_define

begin_decl_stmt
specifier|extern
specifier|const
name|char
name|Version
index|[]
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|void
name|command_Expand
parameter_list|(
name|char
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
specifier|const
modifier|*
specifier|const
modifier|*
parameter_list|,
name|struct
name|bundle
modifier|*
parameter_list|,
name|int
parameter_list|,
name|pid_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|command_Expand_Interpret
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
name|vector
index|[
name|MAXARGS
index|]
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|command_Interpret
parameter_list|(
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
modifier|*
name|vector
index|[
name|MAXARGS
index|]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|command_Run
parameter_list|(
name|struct
name|bundle
modifier|*
parameter_list|,
name|int
parameter_list|,
name|char
specifier|const
modifier|*
specifier|const
modifier|*
parameter_list|,
name|struct
name|prompt
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|datalink
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|command_Decode
parameter_list|(
name|struct
name|bundle
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
parameter_list|,
name|struct
name|prompt
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|struct
name|link
modifier|*
name|command_ChooseLink
parameter_list|(
name|struct
name|cmdargs
specifier|const
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|command_ShowNegval
parameter_list|(
name|unsigned
parameter_list|)
function_decl|;
end_function_decl

end_unit

