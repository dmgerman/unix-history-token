begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1999 Takanori Watanabe  * Copyright (c) 1999, 2000 Yasuo Yokoyama  * Copyright (c) 1999, 2000 Mitsuru IWASAKI<iwasaki@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	$Id: aml_name.h,v 1.17 2000/08/16 18:14:54 iwasaki Exp $  *	$FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_AML_NAME_H_
end_ifndef

begin_define
define|#
directive|define
name|_AML_NAME_H_
end_define

begin_include
include|#
directive|include
file|<machine/stdarg.h>
end_include

begin_include
include|#
directive|include
file|<dev/acpi/aml/aml_obj.h>
end_include

begin_struct
struct|struct
name|aml_name
block|{
name|char
name|name
index|[
literal|4
index|]
decl_stmt|;
name|union
name|aml_object
modifier|*
name|property
decl_stmt|;
name|struct
name|aml_name
modifier|*
name|parent
decl_stmt|;
name|struct
name|aml_name
modifier|*
name|brother
decl_stmt|;
name|struct
name|aml_name
modifier|*
name|child
decl_stmt|;
name|struct
name|aml_name
modifier|*
name|chain
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|AML_NAME_GROUP_ROOT
value|0
end_define

begin_define
define|#
directive|define
name|AML_NAME_GROUP_OS_DEFINED
value|1
end_define

begin_define
define|#
directive|define
name|AML_NAME_GROUP_IN_METHOD
value|2
end_define

begin_struct
struct|struct
name|aml_name_group
block|{
name|int
name|id
decl_stmt|;
comment|/* DSDT address or DBHANDLE */
name|struct
name|aml_name
modifier|*
name|head
decl_stmt|;
name|struct
name|aml_name_group
modifier|*
name|next
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|aml_local_stack
block|{
name|struct
name|aml_name
name|localvalue
index|[
literal|8
index|]
decl_stmt|;
name|struct
name|aml_name
name|argumentvalue
index|[
literal|7
index|]
decl_stmt|;
name|struct
name|aml_name
modifier|*
name|temporary
decl_stmt|;
name|struct
name|aml_local_stack
modifier|*
name|next
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* forward declarement */
end_comment

begin_struct_decl
struct_decl|struct
name|aml_envrion
struct_decl|;
end_struct_decl

begin_function_decl
name|struct
name|aml_name
modifier|*
name|aml_get_rootname
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|aml_name_group
modifier|*
name|aml_new_name_group
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|aml_delete_name_group
parameter_list|(
name|struct
name|aml_name_group
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|aml_name
modifier|*
name|aml_find_from_namespace
parameter_list|(
name|struct
name|aml_name
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|aml_apply_foreach_found_objects
parameter_list|(
name|struct
name|aml_name
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|int
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|struct
name|aml_name
modifier|*
parameter_list|,
name|va_list
parameter_list|)
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|aml_name
modifier|*
name|aml_search_name
parameter_list|(
name|struct
name|aml_environ
modifier|*
parameter_list|,
name|u_int8_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|aml_name
modifier|*
name|aml_create_name
parameter_list|(
name|struct
name|aml_environ
modifier|*
parameter_list|,
name|u_int8_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|aml_local_stack
modifier|*
name|aml_local_stack_create
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|aml_local_stack_push
parameter_list|(
name|struct
name|aml_local_stack
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|aml_local_stack
modifier|*
name|aml_local_stack_pop
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|aml_local_stack_delete
parameter_list|(
name|struct
name|aml_local_stack
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|aml_name
modifier|*
name|aml_local_stack_getLocalX
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|aml_name
modifier|*
name|aml_local_stack_getArgX
parameter_list|(
name|struct
name|aml_local_stack
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|aml_name
modifier|*
name|aml_create_local_object
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|struct
name|aml_name_group
modifier|*
name|name_group_list
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_AML_NAME_H_ */
end_comment

end_unit

