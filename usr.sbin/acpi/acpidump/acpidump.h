begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1999 Doug Rabson  * Copyright (c) 2000 Mitsuru IWASAKI<iwasaki@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	$Id: acpidump.h,v 1.3 2000/08/09 14:47:52 iwasaki Exp $  *	$FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_ACPIDUMP_H_
end_ifndef

begin_define
define|#
directive|define
name|_ACPIDUMP_H_
end_define

begin_comment
comment|/* Generic Address structure */
end_comment

begin_struct
struct|struct
name|ACPIgas
block|{
name|u_int8_t
name|address_space_id
decl_stmt|;
define|#
directive|define
name|ACPI_GAS_MEMORY
value|0
define|#
directive|define
name|ACPI_GAS_IO
value|1
define|#
directive|define
name|ACPI_GAS_PCI
value|2
define|#
directive|define
name|ACPI_GAS_EMBEDDED
value|3
define|#
directive|define
name|ACPI_GAS_SMBUS
value|4
define|#
directive|define
name|ACPI_GAS_FIXED
value|0x7f
name|u_int8_t
name|register_bit_width
decl_stmt|;
name|u_int8_t
name|register_bit_offset
decl_stmt|;
name|u_int8_t
name|res
decl_stmt|;
name|u_int64_t
name|address
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* Root System Description Pointer */
end_comment

begin_struct
struct|struct
name|ACPIrsdp
block|{
name|u_char
name|signature
index|[
literal|8
index|]
decl_stmt|;
name|u_char
name|sum
decl_stmt|;
name|u_char
name|oem
index|[
literal|6
index|]
decl_stmt|;
name|u_char
name|revision
decl_stmt|;
name|u_int32_t
name|rsdt_addr
decl_stmt|;
name|u_int32_t
name|length
decl_stmt|;
name|u_int64_t
name|xsdt_addr
decl_stmt|;
name|u_char
name|xsum
decl_stmt|;
name|u_char
name|_reserved_
index|[
literal|3
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* System Description Table */
end_comment

begin_struct
struct|struct
name|ACPIsdt
block|{
name|u_char
name|signature
index|[
literal|4
index|]
decl_stmt|;
name|u_int32_t
name|len
decl_stmt|;
name|u_char
name|rev
decl_stmt|;
name|u_char
name|check
decl_stmt|;
name|u_char
name|oemid
index|[
literal|6
index|]
decl_stmt|;
name|u_char
name|oemtblid
index|[
literal|8
index|]
decl_stmt|;
name|u_int32_t
name|oemrev
decl_stmt|;
name|u_char
name|creator
index|[
literal|4
index|]
decl_stmt|;
name|u_int32_t
name|crerev
decl_stmt|;
define|#
directive|define
name|SIZEOF_SDT_HDR
value|36
comment|/* struct size except body */
name|u_int32_t
name|body
index|[
literal|1
index|]
decl_stmt|;
comment|/* This member should be casted */
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* Fixed ACPI Description Table (body) */
end_comment

begin_struct
struct|struct
name|FACPbody
block|{
name|u_int32_t
name|facs_ptr
decl_stmt|;
name|u_int32_t
name|dsdt_ptr
decl_stmt|;
name|u_int8_t
name|int_model
decl_stmt|;
define|#
directive|define
name|ACPI_FACP_INTMODEL_PIC
value|0
comment|/* Standard PC-AT PIC */
define|#
directive|define
name|ACPI_FACP_INTMODEL_APIC
value|1
comment|/* Multiple APIC */
name|u_char
name|reserved1
decl_stmt|;
name|u_int16_t
name|sci_int
decl_stmt|;
name|u_int32_t
name|smi_cmd
decl_stmt|;
name|u_int8_t
name|acpi_enable
decl_stmt|;
name|u_int8_t
name|acpi_disable
decl_stmt|;
name|u_int8_t
name|s4biosreq
decl_stmt|;
name|u_int8_t
name|reserved2
decl_stmt|;
name|u_int32_t
name|pm1a_evt_blk
decl_stmt|;
name|u_int32_t
name|pm1b_evt_blk
decl_stmt|;
name|u_int32_t
name|pm1a_cnt_blk
decl_stmt|;
name|u_int32_t
name|pm1b_cnt_blk
decl_stmt|;
name|u_int32_t
name|pm2_cnt_blk
decl_stmt|;
name|u_int32_t
name|pm_tmr_blk
decl_stmt|;
name|u_int32_t
name|gpe0_blk
decl_stmt|;
name|u_int32_t
name|gpe1_blk
decl_stmt|;
name|u_int8_t
name|pm1_evt_len
decl_stmt|;
name|u_int8_t
name|pm1_cnt_len
decl_stmt|;
name|u_int8_t
name|pm2_cnt_len
decl_stmt|;
name|u_int8_t
name|pm_tmr_len
decl_stmt|;
name|u_int8_t
name|gpe0_len
decl_stmt|;
name|u_int8_t
name|gpe1_len
decl_stmt|;
name|u_int8_t
name|gpe1_base
decl_stmt|;
name|u_int8_t
name|reserved3
decl_stmt|;
name|u_int16_t
name|p_lvl2_lat
decl_stmt|;
name|u_int16_t
name|p_lvl3_lat
decl_stmt|;
name|u_int16_t
name|flush_size
decl_stmt|;
name|u_int16_t
name|flush_stride
decl_stmt|;
name|u_int8_t
name|duty_off
decl_stmt|;
name|u_int8_t
name|duty_width
decl_stmt|;
name|u_int8_t
name|day_alrm
decl_stmt|;
name|u_int8_t
name|mon_alrm
decl_stmt|;
name|u_int8_t
name|century
decl_stmt|;
name|u_int16_t
name|iapc_boot_arch
decl_stmt|;
name|u_char
name|reserved4
index|[
literal|1
index|]
decl_stmt|;
name|u_int32_t
name|flags
decl_stmt|;
define|#
directive|define
name|ACPI_FACP_FLAG_WBINVD
value|1
comment|/* WBINVD is correctly supported */
define|#
directive|define
name|ACPI_FACP_FLAG_WBINVD_FLUSH
value|2
comment|/* WBINVD flushes caches */
define|#
directive|define
name|ACPI_FACP_FLAG_PROC_C1
value|4
comment|/* C1 power state supported */
define|#
directive|define
name|ACPI_FACP_FLAG_P_LVL2_UP
value|8
comment|/* C2 power state works on SMP */
define|#
directive|define
name|ACPI_FACP_FLAG_PWR_BUTTON
value|16
comment|/* Power button uses control method */
define|#
directive|define
name|ACPI_FACP_FLAG_SLP_BUTTON
value|32
comment|/* Sleep button uses control method */
define|#
directive|define
name|ACPI_FACP_FLAG_FIX_RTC
value|64
comment|/* RTC wakeup not supported */
define|#
directive|define
name|ACPI_FACP_FLAG_RTC_S4
value|128
comment|/* RTC can wakeup from S4 state */
define|#
directive|define
name|ACPI_FACP_FLAG_TMR_VAL_EXT
value|256
comment|/* TMR_VAL is 32bit */
define|#
directive|define
name|ACPI_FACP_FLAG_DCK_CAP
value|512
comment|/* Can support docking */
name|struct
name|ACPIgas
name|reset_reg
decl_stmt|;
name|u_int8_t
name|reset_value
decl_stmt|;
name|u_int8_t
name|reserved5
index|[
literal|3
index|]
decl_stmt|;
name|u_int64_t
name|x_firmware_ctrl
decl_stmt|;
name|u_int64_t
name|x_dsdt
decl_stmt|;
name|struct
name|ACPIgas
name|x_pm1a_evt_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_pm1b_evt_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_pm1a_cnt_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_pm1b_cnt_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_pm2_cnt_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_pm_tmr_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_gpe0_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_gpe1_blk
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* Firmware ACPI Control Structure */
end_comment

begin_struct
struct|struct
name|FACS
block|{
name|u_char
name|signature
index|[
literal|4
index|]
decl_stmt|;
name|u_int32_t
name|len
decl_stmt|;
name|u_char
name|hard_sig
index|[
literal|4
index|]
decl_stmt|;
comment|/* 	 * NOTE This should be filled with physical address below 1MB!! 	 * sigh.... 	 */
name|u_int32_t
name|firm_wake_vec
decl_stmt|;
name|u_int32_t
name|g_lock
decl_stmt|;
comment|/* bit field */
comment|/* 5.2.6.1 Global Lock */
define|#
directive|define
name|ACPI_GLOBAL_LOCK_PENDING
value|1
define|#
directive|define
name|ACPI_GLOBAL_LOCK_OWNED
value|2
name|u_int32_t
name|flags
decl_stmt|;
comment|/* bit field */
define|#
directive|define
name|ACPI_FACS_FLAG_S4BIOS_F
value|1
comment|/* Supports S4BIOS_SEQ */
name|char
name|reserved
index|[
literal|40
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_function_decl
name|void
modifier|*
name|acpi_map_physical
parameter_list|(
name|vm_offset_t
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ACPIrsdp
modifier|*
name|acpi_find_rsd_ptr
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|acpi_checksum
parameter_list|(
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ACPIsdt
modifier|*
name|acpi_map_sdt
parameter_list|(
name|vm_offset_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|acpi_print_rsd_ptr
parameter_list|(
name|struct
name|ACPIrsdp
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|acpi_print_sdt
parameter_list|(
name|struct
name|ACPIsdt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|acpi_print_rsdt
parameter_list|(
name|struct
name|ACPIsdt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|acpi_print_facp
parameter_list|(
name|struct
name|FACPbody
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|acpi_print_dsdt
parameter_list|(
name|struct
name|ACPIsdt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|asl_dump_termobj
parameter_list|(
name|u_int8_t
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|asl_dump_objectlist
parameter_list|(
name|u_int8_t
modifier|*
modifier|*
parameter_list|,
name|u_int8_t
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|aml_dump
parameter_list|(
name|struct
name|ACPIsdt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|acpi_handle_rsdt
parameter_list|(
name|struct
name|ACPIsdt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|acpi_load_dsdt
parameter_list|(
name|char
modifier|*
parameter_list|,
name|u_int8_t
modifier|*
modifier|*
parameter_list|,
name|u_int8_t
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|acpi_dump_dsdt
parameter_list|(
name|u_int8_t
modifier|*
parameter_list|,
name|u_int8_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|aml_dumpfile
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|ACPIsdt
name|dsdt_header
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|rflag
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_ACPIDUMP_H_ */
end_comment

end_unit

