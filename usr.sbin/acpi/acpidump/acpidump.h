begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 1999 Doug Rabson  * Copyright (c) 2000 Mitsuru IWASAKI<iwasaki@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	$FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_ACPIDUMP_H_
end_ifndef

begin_define
define|#
directive|define
name|_ACPIDUMP_H_
end_define

begin_comment
comment|/* Generic Address structure */
end_comment

begin_struct
struct|struct
name|ACPIgas
block|{
name|u_int8_t
name|address_space_id
decl_stmt|;
define|#
directive|define
name|ACPI_GAS_MEMORY
value|0
define|#
directive|define
name|ACPI_GAS_IO
value|1
define|#
directive|define
name|ACPI_GAS_PCI
value|2
define|#
directive|define
name|ACPI_GAS_EMBEDDED
value|3
define|#
directive|define
name|ACPI_GAS_SMBUS
value|4
define|#
directive|define
name|ACPI_GAS_FIXED
value|0x7f
name|u_int8_t
name|bit_width
decl_stmt|;
name|u_int8_t
name|bit_offset
decl_stmt|;
name|u_int8_t
name|_reserved
decl_stmt|;
name|u_int64_t
name|address
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* Root System Description Pointer */
end_comment

begin_struct
struct|struct
name|ACPIrsdp
block|{
name|u_char
name|signature
index|[
literal|8
index|]
decl_stmt|;
name|u_char
name|sum
decl_stmt|;
name|u_char
name|oem
index|[
literal|6
index|]
decl_stmt|;
name|u_char
name|revision
decl_stmt|;
name|u_int32_t
name|rsdt_addr
decl_stmt|;
name|u_int32_t
name|length
decl_stmt|;
name|u_int64_t
name|xsdt_addr
decl_stmt|;
name|u_char
name|xsum
decl_stmt|;
name|u_char
name|_reserved_
index|[
literal|3
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* System Description Table */
end_comment

begin_struct
struct|struct
name|ACPIsdt
block|{
name|u_char
name|signature
index|[
literal|4
index|]
decl_stmt|;
name|u_int32_t
name|len
decl_stmt|;
name|u_char
name|rev
decl_stmt|;
name|u_char
name|check
decl_stmt|;
name|u_char
name|oemid
index|[
literal|6
index|]
decl_stmt|;
name|u_char
name|oemtblid
index|[
literal|8
index|]
decl_stmt|;
name|u_int32_t
name|oemrev
decl_stmt|;
name|u_char
name|creator
index|[
literal|4
index|]
decl_stmt|;
name|u_int32_t
name|crerev
decl_stmt|;
define|#
directive|define
name|SIZEOF_SDT_HDR
value|36
comment|/* struct size except body */
name|u_int32_t
name|body
index|[
literal|1
index|]
decl_stmt|;
comment|/* This member should be casted */
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* Fixed ACPI Description Table (body) */
end_comment

begin_struct
struct|struct
name|FADTbody
block|{
name|u_int32_t
name|facs_ptr
decl_stmt|;
name|u_int32_t
name|dsdt_ptr
decl_stmt|;
name|u_int8_t
name|int_model
decl_stmt|;
define|#
directive|define
name|ACPI_FADT_INTMODEL_PIC
value|0
comment|/* Standard PC-AT PIC */
define|#
directive|define
name|ACPI_FADT_INTMODEL_APIC
value|1
comment|/* Multiple APIC */
name|u_int8_t
name|pm_profile
decl_stmt|;
name|u_int16_t
name|sci_int
decl_stmt|;
name|u_int32_t
name|smi_cmd
decl_stmt|;
name|u_int8_t
name|acpi_enable
decl_stmt|;
name|u_int8_t
name|acpi_disable
decl_stmt|;
name|u_int8_t
name|s4biosreq
decl_stmt|;
name|u_int8_t
name|pstate_cnt
decl_stmt|;
name|u_int32_t
name|pm1a_evt_blk
decl_stmt|;
name|u_int32_t
name|pm1b_evt_blk
decl_stmt|;
name|u_int32_t
name|pm1a_cnt_blk
decl_stmt|;
name|u_int32_t
name|pm1b_cnt_blk
decl_stmt|;
name|u_int32_t
name|pm2_cnt_blk
decl_stmt|;
name|u_int32_t
name|pm_tmr_blk
decl_stmt|;
name|u_int32_t
name|gpe0_blk
decl_stmt|;
name|u_int32_t
name|gpe1_blk
decl_stmt|;
name|u_int8_t
name|pm1_evt_len
decl_stmt|;
name|u_int8_t
name|pm1_cnt_len
decl_stmt|;
name|u_int8_t
name|pm2_cnt_len
decl_stmt|;
name|u_int8_t
name|pm_tmr_len
decl_stmt|;
name|u_int8_t
name|gpe0_len
decl_stmt|;
name|u_int8_t
name|gpe1_len
decl_stmt|;
name|u_int8_t
name|gpe1_base
decl_stmt|;
name|u_int8_t
name|cst_cnt
decl_stmt|;
name|u_int16_t
name|p_lvl2_lat
decl_stmt|;
name|u_int16_t
name|p_lvl3_lat
decl_stmt|;
name|u_int16_t
name|flush_size
decl_stmt|;
name|u_int16_t
name|flush_stride
decl_stmt|;
name|u_int8_t
name|duty_off
decl_stmt|;
name|u_int8_t
name|duty_width
decl_stmt|;
name|u_int8_t
name|day_alrm
decl_stmt|;
name|u_int8_t
name|mon_alrm
decl_stmt|;
name|u_int8_t
name|century
decl_stmt|;
name|u_int16_t
name|iapc_boot_arch
decl_stmt|;
define|#
directive|define
name|FADT_FLAG_LEGACY_DEV
value|1
comment|/* System has legacy devices */
define|#
directive|define
name|FADT_FLAG_8042
value|2
comment|/* 8042 keyboard controller */
name|u_char
name|reserved4
index|[
literal|1
index|]
decl_stmt|;
name|u_int32_t
name|flags
decl_stmt|;
define|#
directive|define
name|FADT_FLAG_WBINVD
value|1
comment|/* WBINVD is correctly supported */
define|#
directive|define
name|FADT_FLAG_WBINVD_FLUSH
value|2
comment|/* WBINVD flushes caches */
define|#
directive|define
name|FADT_FLAG_PROC_C1
value|4
comment|/* C1 power state supported */
define|#
directive|define
name|FADT_FLAG_P_LVL2_UP
value|8
comment|/* C2 power state works on SMP */
define|#
directive|define
name|FADT_FLAG_PWR_BUTTON
value|16
comment|/* Power button uses control method */
define|#
directive|define
name|FADT_FLAG_SLP_BUTTON
value|32
comment|/* Sleep button uses control method */
define|#
directive|define
name|FADT_FLAG_FIX_RTC
value|64
comment|/* RTC wakeup not supported */
define|#
directive|define
name|FADT_FLAG_RTC_S4
value|128
comment|/* RTC can wakeup from S4 state */
define|#
directive|define
name|FADT_FLAG_TMR_VAL_EXT
value|256
comment|/* TMR_VAL is 32bit */
define|#
directive|define
name|FADT_FLAG_DCK_CAP
value|512
comment|/* Can support docking */
define|#
directive|define
name|FADT_FLAG_RESET_REG
value|1024
comment|/* Supports RESET_REG */
define|#
directive|define
name|FADT_FLAG_SEALED_CASE
value|2048
comment|/* Case cannot be opened */
define|#
directive|define
name|FADT_FLAG_HEADLESS
value|4096
comment|/* No monitor */
define|#
directive|define
name|FADT_FLAG_CPU_SW_SLP
value|8192
comment|/* Supports CPU software sleep */
name|struct
name|ACPIgas
name|reset_reg
decl_stmt|;
name|u_int8_t
name|reset_value
decl_stmt|;
name|u_int8_t
name|reserved5
index|[
literal|3
index|]
decl_stmt|;
name|u_int64_t
name|x_facs_ptr
decl_stmt|;
name|u_int64_t
name|x_dsdt_ptr
decl_stmt|;
name|struct
name|ACPIgas
name|x_pm1a_evt_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_pm1b_evt_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_pm1a_cnt_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_pm1b_cnt_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_pm2_cnt_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_pm_tmr_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_gpe0_blk
decl_stmt|;
name|struct
name|ACPIgas
name|x_gpe1_blk
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* Firmware ACPI Control Structure */
end_comment

begin_struct
struct|struct
name|FACSbody
block|{
name|u_char
name|signature
index|[
literal|4
index|]
decl_stmt|;
name|u_int32_t
name|len
decl_stmt|;
name|u_int32_t
name|hw_sig
decl_stmt|;
comment|/* 	 * NOTE This should be filled with physical address below 1MB!! 	 * sigh.... 	 */
name|u_int32_t
name|firm_wake_vec
decl_stmt|;
name|u_int32_t
name|global_lock
decl_stmt|;
define|#
directive|define
name|FACS_FLAG_LOCK_PENDING
value|1
comment|/* 5.2.6.1 Global Lock */
define|#
directive|define
name|FACS_FLAG_LOCK_OWNED
value|2
name|u_int32_t
name|flags
decl_stmt|;
define|#
directive|define
name|FACS_FLAG_S4BIOS_F
value|1
comment|/* Supports S4BIOS_SEQ */
name|u_int64_t
name|x_firm_wake_vec
decl_stmt|;
name|u_int8_t
name|version
decl_stmt|;
name|char
name|reserved
index|[
literal|31
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|MADT_local_apic
block|{
name|u_char
name|cpu_id
decl_stmt|;
name|u_char
name|apic_id
decl_stmt|;
name|u_int32_t
name|flags
decl_stmt|;
define|#
directive|define
name|ACPI_MADT_APIC_LOCAL_FLAG_ENABLED
value|1
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|MADT_io_apic
block|{
name|u_char
name|apic_id
decl_stmt|;
name|u_char
name|reserved
decl_stmt|;
name|u_int32_t
name|apic_addr
decl_stmt|;
name|u_int32_t
name|int_base
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|MADT_int_override
block|{
name|u_char
name|bus
decl_stmt|;
name|u_char
name|source
decl_stmt|;
name|u_int32_t
name|intr
decl_stmt|;
name|u_int16_t
name|mps_flags
decl_stmt|;
define|#
directive|define
name|MPS_INT_FLAG_POLARITY_MASK
value|0x3
define|#
directive|define
name|MPS_INT_FLAG_POLARITY_CONFORM
value|0x0
define|#
directive|define
name|MPS_INT_FLAG_POLARITY_HIGH
value|0x1
define|#
directive|define
name|MPS_INT_FLAG_POLARITY_LOW
value|0x3
define|#
directive|define
name|MPS_INT_FLAG_TRIGGER_MASK
value|0xc
define|#
directive|define
name|MPS_INT_FLAG_TRIGGER_CONFORM
value|0x0
define|#
directive|define
name|MPS_INT_FLAG_TRIGGER_EDGE
value|0x4
define|#
directive|define
name|MPS_INT_FLAG_TRIGGER_LEVEL
value|0xc
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|MADT_nmi
block|{
name|u_int16_t
name|mps_flags
decl_stmt|;
name|u_int32_t
name|intr
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|MADT_local_nmi
block|{
name|u_char
name|cpu_id
decl_stmt|;
name|u_int16_t
name|mps_flags
decl_stmt|;
name|u_char
name|lintpin
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|MADT_local_apic_override
block|{
name|u_char
name|reserved
index|[
literal|2
index|]
decl_stmt|;
name|u_int64_t
name|apic_addr
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|MADT_io_sapic
block|{
name|u_char
name|apic_id
decl_stmt|;
name|u_char
name|reserved
decl_stmt|;
name|u_int32_t
name|int_base
decl_stmt|;
name|u_int64_t
name|apic_addr
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|MADT_local_sapic
block|{
name|u_char
name|cpu_id
decl_stmt|;
name|u_char
name|apic_id
decl_stmt|;
name|u_char
name|apic_eid
decl_stmt|;
name|u_char
name|reserved
index|[
literal|3
index|]
decl_stmt|;
name|u_int32_t
name|flags
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|MADT_int_src
block|{
name|u_int16_t
name|mps_flags
decl_stmt|;
name|u_char
name|type
decl_stmt|;
define|#
directive|define
name|ACPI_MADT_APIC_INT_SOURCE_PMI
value|1
define|#
directive|define
name|ACPI_MADT_APIC_INT_SOURCE_INIT
value|2
define|#
directive|define
name|ACPI_MADT_APIC_INT_SOURCE_CPEI
value|3
comment|/* Corrected Platform Error */
name|u_char
name|cpu_id
decl_stmt|;
name|u_char
name|cpu_eid
decl_stmt|;
name|u_char
name|sapic_vector
decl_stmt|;
name|u_int32_t
name|intr
decl_stmt|;
name|u_char
name|reserved
index|[
literal|4
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|MADT_APIC
block|{
name|u_char
name|type
decl_stmt|;
define|#
directive|define
name|ACPI_MADT_APIC_TYPE_LOCAL_APIC
value|0
define|#
directive|define
name|ACPI_MADT_APIC_TYPE_IO_APIC
value|1
define|#
directive|define
name|ACPI_MADT_APIC_TYPE_INT_OVERRIDE
value|2
define|#
directive|define
name|ACPI_MADT_APIC_TYPE_NMI
value|3
define|#
directive|define
name|ACPI_MADT_APIC_TYPE_LOCAL_NMI
value|4
define|#
directive|define
name|ACPI_MADT_APIC_TYPE_LOCAL_OVERRIDE
value|5
define|#
directive|define
name|ACPI_MADT_APIC_TYPE_IO_SAPIC
value|6
define|#
directive|define
name|ACPI_MADT_APIC_TYPE_LOCAL_SAPIC
value|7
define|#
directive|define
name|ACPI_MADT_APIC_TYPE_INT_SRC
value|8
name|u_char
name|len
decl_stmt|;
union|union
block|{
name|struct
name|MADT_local_apic
name|local_apic
decl_stmt|;
name|struct
name|MADT_io_apic
name|io_apic
decl_stmt|;
name|struct
name|MADT_int_override
name|int_override
decl_stmt|;
name|struct
name|MADT_nmi
name|nmi
decl_stmt|;
name|struct
name|MADT_local_nmi
name|local_nmi
decl_stmt|;
name|struct
name|MADT_local_apic_override
name|local_apic_override
decl_stmt|;
name|struct
name|MADT_io_sapic
name|io_sapic
decl_stmt|;
name|struct
name|MADT_local_sapic
name|local_sapic
decl_stmt|;
name|struct
name|MADT_int_src
name|int_src
decl_stmt|;
block|}
name|body
union|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|MADTbody
block|{
name|u_int32_t
name|lapic_addr
decl_stmt|;
name|u_int32_t
name|flags
decl_stmt|;
define|#
directive|define
name|ACPI_APIC_FLAG_PCAT_COMPAT
value|1
comment|/* System has dual-8259 setup. */
name|u_char
name|body
index|[
literal|1
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|HPETbody
block|{
name|u_int32_t
name|block_hwrev
range|:
literal|8
decl_stmt|,
name|block_comparitors
range|:
literal|5
decl_stmt|,
name|block_counter_size
range|:
literal|1
decl_stmt|,
range|:
literal|1
decl_stmt|,
name|block_legacy_capable
range|:
literal|1
decl_stmt|,
name|block_pcivendor
range|:
literal|16
decl_stmt|;
name|struct
name|ACPIgas
name|genaddr
decl_stmt|;
name|u_int8_t
name|hpet_number
decl_stmt|;
name|u_int16_t
name|clock_tick
name|__packed
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* Embedded Controller Description Table */
end_comment

begin_struct
struct|struct
name|ECDTbody
block|{
name|struct
name|ACPIgas
name|ec_control
decl_stmt|;
comment|/* Control register */
name|struct
name|ACPIgas
name|ec_data
decl_stmt|;
comment|/* Data register */
name|uint32_t
name|uid
decl_stmt|;
comment|/* Same value as _UID in namespace */
name|uint8_t
name|gpe_bit
decl_stmt|;
comment|/* GPE bit for the EC */
name|u_char
name|ec_id
index|[
literal|1
index|]
decl_stmt|;
comment|/* Variable length name string */
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* Memory Mapped PCI config space base allocation structure */
end_comment

begin_struct
struct|struct
name|MCFGbody
block|{
name|uint8_t
name|rsvd
index|[
literal|8
index|]
decl_stmt|;
struct|struct
block|{
name|uint64_t
name|baseaddr
decl_stmt|;
comment|/* Base Address */
name|uint16_t
name|seg_grp
decl_stmt|;
comment|/* Segment group number */
name|uint8_t
name|start
decl_stmt|;
comment|/* Starting bus number */
name|uint8_t
name|end
decl_stmt|;
comment|/* Ending bus number */
name|uint8_t
name|rsvd
index|[
literal|4
index|]
decl_stmt|;
comment|/* Reserved */
block|}
name|s
index|[
literal|1
index|]
name|__packed
struct|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/* System Resource Affinity Table */
end_comment

begin_struct
struct|struct
name|SRAT_cpu
block|{
name|uint8_t
name|proximity_domain_lo
decl_stmt|;
name|uint8_t
name|apic_id
decl_stmt|;
name|uint32_t
name|flags
decl_stmt|;
define|#
directive|define
name|ACPI_SRAT_CPU_ENABLED
value|0x00000001
name|uint8_t
name|sapic_eid
decl_stmt|;
name|uint8_t
name|proximity_domain_hi
index|[
literal|3
index|]
decl_stmt|;
name|uint32_t
name|reserved
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|SRAT_memory
block|{
name|uint32_t
name|proximity_domain
decl_stmt|;
name|uint16_t
name|reserved
decl_stmt|;
name|uint64_t
name|base_address
decl_stmt|;
name|uint64_t
name|length
decl_stmt|;
name|uint32_t
name|reserved1
decl_stmt|;
name|uint32_t
name|flags
decl_stmt|;
define|#
directive|define
name|ACPI_SRAT_MEM_ENABLED
value|0x00000001
define|#
directive|define
name|ACPI_SRAT_MEM_HOT_PLUGGABLE
value|0x00000002
define|#
directive|define
name|ACPI_SRAT_MEM_NON_VOLATILE
value|0x00000002
name|uint64_t
name|reserved2
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|SRAT_x2apic
block|{
name|uint16_t
name|reserved
decl_stmt|;
name|uint32_t
name|proximity_domain
decl_stmt|;
name|uint32_t
name|apic_id
decl_stmt|;
name|uint32_t
name|flags
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|SRATentry
block|{
name|uint8_t
name|type
decl_stmt|;
define|#
directive|define
name|ACPI_SRAT_TYPE_CPU_AFFINITY
value|0
define|#
directive|define
name|ACPI_SRAT_TYPE_MEMORY_AFFINITY
value|1
define|#
directive|define
name|ACPI_SRAT_TYPE_X2APIC_CPU_AFFINITY
value|2
name|uint8_t
name|len
decl_stmt|;
union|union
block|{
name|struct
name|SRAT_cpu
name|cpu
decl_stmt|;
name|struct
name|SRAT_memory
name|mem
decl_stmt|;
name|struct
name|SRAT_x2apic
name|x2apic
decl_stmt|;
block|}
name|body
union|;
block|}
name|__packed
struct|;
end_struct

begin_struct
struct|struct
name|SRATbody
block|{
name|uint32_t
name|table_revision
decl_stmt|;
name|uint64_t
name|reserved
decl_stmt|;
name|struct
name|SRATentry
name|body
index|[
literal|0
index|]
decl_stmt|;
block|}
name|__packed
struct|;
end_struct

begin_comment
comment|/*  * Addresses to scan on ia32 for the RSD PTR.  According to section 5.2.2  * of the ACPI spec, we only consider two regions for the base address:  * 1. EBDA (1 KB area addressed to by 16 bit pointer at 0x40E)  * 2. High memory (0xE0000 - 0xFFFFF)  */
end_comment

begin_define
define|#
directive|define
name|RSDP_EBDA_PTR
value|0x40E
end_define

begin_define
define|#
directive|define
name|RSDP_EBDA_SIZE
value|0x400
end_define

begin_define
define|#
directive|define
name|RSDP_HI_START
value|0xE0000
end_define

begin_define
define|#
directive|define
name|RSDP_HI_SIZE
value|0x20000
end_define

begin_comment
comment|/* Find and map the RSD PTR structure and return it for parsing */
end_comment

begin_function_decl
name|struct
name|ACPIsdt
modifier|*
name|sdt_load_devmem
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  * Load the DSDT from a previous save file.  Note that other tables are  * not saved (i.e. FADT)  */
end_comment

begin_function_decl
name|struct
name|ACPIsdt
modifier|*
name|dsdt_load_file
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Save the DSDT to a file */
end_comment

begin_function_decl
name|void
name|dsdt_save_file
parameter_list|(
name|char
modifier|*
parameter_list|,
name|struct
name|ACPIsdt
modifier|*
parameter_list|,
name|struct
name|ACPIsdt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Print out as many fixed tables as possible, given the RSD PTR */
end_comment

begin_function_decl
name|void
name|sdt_print_all
parameter_list|(
name|struct
name|ACPIsdt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Disassemble the AML in the DSDT */
end_comment

begin_function_decl
name|void
name|aml_disassemble
parameter_list|(
name|struct
name|ACPIsdt
modifier|*
parameter_list|,
name|struct
name|ACPIsdt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Routines for accessing tables in physical memory */
end_comment

begin_function_decl
name|struct
name|ACPIrsdp
modifier|*
name|acpi_find_rsd_ptr
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|acpi_map_physical
parameter_list|(
name|vm_offset_t
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ACPIsdt
modifier|*
name|sdt_from_rsdt
parameter_list|(
name|struct
name|ACPIsdt
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|ACPIsdt
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ACPIsdt
modifier|*
name|dsdt_from_fadt
parameter_list|(
name|struct
name|FADTbody
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|acpi_checksum
parameter_list|(
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* Command line flags */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|dflag
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|tflag
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|vflag
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_ACPIDUMP_H_ */
end_comment

end_unit

