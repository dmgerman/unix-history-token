begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* db_proc.h - prototypes for functions in db_*.c  *  * $Id: db_func.h,v 8.7 1995/12/22 10:20:30 vixie Exp $  */
end_comment

begin_comment
comment|/* ++from db_update.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|db_update
name|__P
argument_list|(
operator|(
name|char
name|name
index|[]
operator|,
expr|struct
name|databuf
operator|*
name|odp
operator|,
expr|struct
name|databuf
operator|*
name|newdp
operator|,
name|int
name|flags
operator|,
expr|struct
name|hashbuf
operator|*
name|htp
operator|)
argument_list|)
decl_stmt|,
name|findMyZone
name|__P
argument_list|(
operator|(
expr|struct
name|namebuf
operator|*
name|np
operator|,
name|int
name|class
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* --from db_update.c-- */
end_comment

begin_comment
comment|/* ++from db_reload.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|db_reload
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* --from db_reload.c-- */
end_comment

begin_comment
comment|/* ++from db_save.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|struct
name|namebuf
modifier|*
name|savename
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|DMALLOC
end_ifdef

begin_decl_stmt
specifier|extern
name|struct
name|databuf
modifier|*
name|savedata_tagged
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|,
name|int
operator|,
name|int
operator|,
name|int
operator|,
name|u_int32_t
operator|,
name|u_char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|savedata
parameter_list|(
name|class
parameter_list|,
name|type
parameter_list|,
name|ttl
parameter_list|,
name|data
parameter_list|,
name|size
parameter_list|)
define|\
value|savedata_tagged(__FILE__, __LINE__, class, type, ttl, data, size)
end_define

begin_else
else|#
directive|else
end_else

begin_decl_stmt
specifier|extern
name|struct
name|databuf
modifier|*
name|savedata
name|__P
argument_list|(
operator|(
name|int
operator|,
name|int
operator|,
name|u_int32_t
operator|,
name|u_char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|extern
name|struct
name|hashbuf
modifier|*
name|savehash
name|__P
argument_list|(
operator|(
expr|struct
name|hashbuf
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* --from db_save.c-- */
end_comment

begin_comment
comment|/* ++from db_dump.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|int
name|db_dump
name|__P
argument_list|(
operator|(
expr|struct
name|hashbuf
operator|*
operator|,
name|FILE
operator|*
operator|,
name|int
operator|,
name|char
operator|*
operator|)
argument_list|)
decl_stmt|,
name|zt_dump
name|__P
argument_list|(
operator|(
name|FILE
operator|*
operator|)
argument_list|)
decl_stmt|,
name|atob
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|,
name|int
operator|,
name|char
operator|*
operator|,
name|int
operator|,
name|int
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|doachkpt
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|,
name|doadump
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|ALLOW_UPDATES
end_ifdef

begin_decl_stmt
specifier|extern
name|void
name|zonedump
name|__P
argument_list|(
operator|(
expr|struct
name|zoneinfo
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|extern
name|u_int
name|db_getclev
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* --from db_dump.c-- */
end_comment

begin_comment
comment|/* ++from db_load.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|void
name|endline
name|__P
argument_list|(
operator|(
name|FILE
operator|*
operator|)
argument_list|)
decl_stmt|,
name|get_netlist
name|__P
argument_list|(
operator|(
name|FILE
operator|*
operator|,
expr|struct
name|netinfo
operator|*
operator|*
operator|,
name|int
operator|,
name|char
operator|*
operator|)
argument_list|)
decl_stmt|,
name|free_netlist
name|__P
argument_list|(
operator|(
expr|struct
name|netinfo
operator|*
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|getword
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|,
name|int
operator|,
name|FILE
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|,
name|getnum
name|__P
argument_list|(
operator|(
name|FILE
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|,
name|db_load
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|,
expr|struct
name|zoneinfo
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|,
name|position_on_netlist
name|__P
argument_list|(
operator|(
expr|struct
name|in_addr
operator|,
expr|struct
name|netinfo
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|netinfo
modifier|*
name|addr_on_netlist
name|__P
argument_list|(
operator|(
expr|struct
name|in_addr
operator|,
expr|struct
name|netinfo
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* --from db_load.c-- */
end_comment

begin_comment
comment|/* ++from db_glue.c++ */
end_comment

begin_decl_stmt
specifier|extern
specifier|const
name|char
modifier|*
name|sin_ntoa
name|__P
argument_list|(
operator|(
specifier|const
expr|struct
name|sockaddr_in
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|panic
name|__P
argument_list|(
operator|(
name|int
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|,
name|buildservicelist
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|,
name|buildprotolist
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|,
name|gettime
name|__P
argument_list|(
operator|(
expr|struct
name|timeval
operator|*
operator|)
argument_list|)
decl_stmt|,
name|getname
name|__P
argument_list|(
operator|(
expr|struct
name|namebuf
operator|*
operator|,
name|char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|servicenumber
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|,
name|protocolnumber
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|,
name|my_close
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|,
name|my_fclose
name|__P
argument_list|(
operator|(
name|FILE
operator|*
operator|)
argument_list|)
decl_stmt|,
ifdef|#
directive|ifdef
name|GEN_AXFR
name|get_class
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|)
argument_list|)
decl_stmt|,
endif|#
directive|endif
name|writemsg
name|__P
argument_list|(
operator|(
name|int
operator|,
name|u_char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|,
name|dhash
name|__P
argument_list|(
operator|(
specifier|const
name|u_char
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|,
name|nhash
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|,
name|samedomain
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|protocolname
name|__P
argument_list|(
operator|(
name|int
operator|)
argument_list|)
decl_stmt|,
modifier|*
name|servicename
name|__P
argument_list|(
operator|(
name|u_int16_t
operator|,
name|char
operator|*
operator|)
argument_list|)
decl_stmt|,
modifier|*
name|savestr
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifndef
ifndef|#
directive|ifndef
name|BSD
end_ifndef

begin_decl_stmt
specifier|extern
name|int
name|getdtablesize
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|extern
name|struct
name|databuf
modifier|*
name|rm_datum
name|__P
argument_list|(
operator|(
expr|struct
name|databuf
operator|*
operator|,
expr|struct
name|namebuf
operator|*
operator|,
expr|struct
name|databuf
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|namebuf
modifier|*
name|rm_name
name|__P
argument_list|(
operator|(
expr|struct
name|namebuf
operator|*
operator|,
expr|struct
name|namebuf
operator|*
operator|*
operator|,
expr|struct
name|namebuf
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_ifdef
ifdef|#
directive|ifdef
name|INVQ
end_ifdef

begin_decl_stmt
specifier|extern
name|void
name|addinv
name|__P
argument_list|(
operator|(
expr|struct
name|namebuf
operator|*
operator|,
expr|struct
name|databuf
operator|*
operator|)
argument_list|)
decl_stmt|,
name|rminv
name|__P
argument_list|(
operator|(
expr|struct
name|databuf
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|invbuf
modifier|*
name|saveinv
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|LOC_RR
end_ifdef

begin_decl_stmt
specifier|extern
name|u_int32_t
name|loc_aton
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|ascii
operator|,
name|u_char
operator|*
name|binary
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|loc_ntoa
name|__P
argument_list|(
operator|(
specifier|const
name|u_char
operator|*
name|binary
operator|,
name|char
operator|*
name|ascii
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|ctimel
name|__P
argument_list|(
operator|(
name|long
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|in_addr
name|data_inaddr
name|__P
argument_list|(
operator|(
specifier|const
name|u_char
operator|*
name|data
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|setsignal
name|__P
argument_list|(
operator|(
name|int
operator|,
name|int
operator|,
name|SIG_FN
argument_list|(
operator|*
argument_list|)
argument_list|()
operator|)
argument_list|)
decl_stmt|,
name|resignal
name|__P
argument_list|(
operator|(
name|int
operator|,
name|int
operator|,
name|SIG_FN
argument_list|(
operator|*
argument_list|)
argument_list|()
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* --from db_glue.c-- */
end_comment

begin_comment
comment|/* ++from db_lookup.c++ */
end_comment

begin_decl_stmt
specifier|extern
name|struct
name|namebuf
modifier|*
name|nlookup
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|,
expr|struct
name|hashbuf
operator|*
operator|*
operator|,
specifier|const
name|char
operator|*
operator|*
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|match
name|__P
argument_list|(
operator|(
expr|struct
name|databuf
operator|*
operator|,
name|int
operator|,
name|int
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* --from db_lookup.c-- */
end_comment

begin_comment
comment|/* ++from db_secure.c++ */
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|SECURE_ZONES
end_ifdef

begin_decl_stmt
specifier|extern
name|int
name|build_secure_netlist
name|__P
argument_list|(
operator|(
expr|struct
name|zoneinfo
operator|*
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* --from db_secure.c-- */
end_comment

end_unit

