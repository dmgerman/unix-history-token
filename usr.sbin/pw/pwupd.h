begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (C) 1996  *	David L. Nugent.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY DAVID L. NUGENT AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL DAVID L. NUGENT OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  *	$Id: pwupd.h,v 1.4 1997/02/22 16:12:31 peter Exp $  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_PWUPD_H_
end_ifndef

begin_define
define|#
directive|define
name|_PWUPD_H_
end_define

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_include
include|#
directive|include
file|<pwd.h>
end_include

begin_include
include|#
directive|include
file|<grp.h>
end_include

begin_include
include|#
directive|include
file|<sys/cdefs.h>
end_include

begin_enum
enum|enum
name|updtype
block|{
name|UPD_DELETE
init|=
operator|-
literal|1
block|,
name|UPD_CREATE
init|=
literal|0
block|,
name|UPD_REPLACE
init|=
literal|1
block|}
enum|;
end_enum

begin_decl_stmt
name|__BEGIN_DECLS
name|int
name|fileupdate
name|__P
argument_list|(
operator|(
name|char
specifier|const
operator|*
name|fname
operator|,
name|mode_t
name|fm
operator|,
name|char
specifier|const
operator|*
name|nline
operator|,
name|char
specifier|const
operator|*
name|pfx
operator|,
name|int
name|pfxlen
operator|,
name|int
name|updmode
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|__END_DECLS
name|enum
name|pwdfmttype
block|{
name|PWF_STANDARD
operator|,
comment|/* MASTER format but with '*' as password */
name|PWF_PASSWD
operator|,
comment|/* V7 format */
name|PWF_GROUP
operator|=
name|PWF_PASSWD
operator|,
name|PWF_MASTER
comment|/* MASTER format with password */
block|}
end_decl_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_struct
struct|struct
name|pwf
block|{
name|int
name|_altdir
decl_stmt|;
name|void
function_decl|(
modifier|*
name|_setpwent
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|_endpwent
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|struct
name|passwd
modifier|*
function_decl|(
modifier|*
name|_getpwent
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|struct
name|passwd
modifier|*
function_decl|(
modifier|*
name|_getpwuid
function_decl|)
parameter_list|(
name|uid_t
name|uid
parameter_list|)
function_decl|;
name|struct
name|passwd
modifier|*
function_decl|(
modifier|*
name|_getpwnam
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
name|nam
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|_pwdb
function_decl|)
parameter_list|(
name|char
modifier|*
name|arg
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|_setgrent
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
function_decl|(
modifier|*
name|_endgrent
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|struct
name|group
modifier|*
function_decl|(
modifier|*
name|_getgrent
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|struct
name|group
modifier|*
function_decl|(
modifier|*
name|_getgrgid
function_decl|)
parameter_list|(
name|gid_t
name|gid
parameter_list|)
function_decl|;
name|struct
name|group
modifier|*
function_decl|(
modifier|*
name|_getgrnam
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
name|nam
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|_grdb
function_decl|)
parameter_list|(
name|char
modifier|*
name|arg
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|pwf
name|PWF
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|pwf
name|VPWF
decl_stmt|;
end_decl_stmt

begin_define
define|#
directive|define
name|SETPWENT
parameter_list|()
value|PWF._setpwent()
end_define

begin_define
define|#
directive|define
name|ENDPWENT
parameter_list|()
value|PWF._endpwent()
end_define

begin_define
define|#
directive|define
name|GETPWENT
parameter_list|()
value|PWF._getpwent()
end_define

begin_define
define|#
directive|define
name|GETPWUID
parameter_list|(
name|uid
parameter_list|)
value|PWF._getpwuid(uid)
end_define

begin_define
define|#
directive|define
name|GETPWNAM
parameter_list|(
name|nam
parameter_list|)
value|PWF._getpwnam(nam)
end_define

begin_define
define|#
directive|define
name|PWDB
parameter_list|(
name|args
parameter_list|)
value|PWF._pwdb(args)
end_define

begin_define
define|#
directive|define
name|SETGRENT
parameter_list|()
value|PWF._setgrent()
end_define

begin_define
define|#
directive|define
name|ENDGRENT
parameter_list|()
value|PWF._endgrent()
end_define

begin_define
define|#
directive|define
name|GETGRENT
parameter_list|()
value|PWF._getgrent()
end_define

begin_define
define|#
directive|define
name|GETGRGID
parameter_list|(
name|gid
parameter_list|)
value|PWF._getgrgid(gid)
end_define

begin_define
define|#
directive|define
name|GETGRNAM
parameter_list|(
name|nam
parameter_list|)
value|PWF._getgrnam(nam)
end_define

begin_define
define|#
directive|define
name|GRDB
parameter_list|(
name|args
parameter_list|)
value|PWF._grdb(args)
end_define

begin_define
define|#
directive|define
name|PWALTDIR
parameter_list|()
value|PWF._altdir
end_define

begin_ifndef
ifndef|#
directive|ifndef
name|_PATH_PWD
end_ifndef

begin_define
define|#
directive|define
name|_PATH_PWD
value|"/etc"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|_GROUP
end_ifndef

begin_define
define|#
directive|define
name|_GROUP
value|"group"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|_PASSWD
end_ifndef

begin_define
define|#
directive|define
name|_PASSWD
value|"passwd"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|_MASTERPASSWD
end_ifndef

begin_define
define|#
directive|define
name|_MASTERPASSWD
value|"master.passwd"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|_GROUP
end_ifndef

begin_define
define|#
directive|define
name|_GROUP
value|"group"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
name|__BEGIN_DECLS
name|int
name|addpwent
name|__P
argument_list|(
operator|(
expr|struct
name|passwd
operator|*
name|pwd
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|delpwent
name|__P
argument_list|(
operator|(
expr|struct
name|passwd
operator|*
name|pwd
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|chgpwent
name|__P
argument_list|(
operator|(
name|char
specifier|const
operator|*
name|login
operator|,
expr|struct
name|passwd
operator|*
name|pwd
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|fmtpwent
name|__P
argument_list|(
operator|(
name|char
operator|*
name|buf
operator|,
expr|struct
name|passwd
operator|*
name|pwd
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|fmtpwentry
name|__P
argument_list|(
operator|(
name|char
operator|*
name|buf
operator|,
expr|struct
name|passwd
operator|*
name|pwd
operator|,
name|int
name|type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|setpwdir
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|dir
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|getpwpath
name|__P
argument_list|(
operator|(
name|char
specifier|const
operator|*
name|file
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|pwdb
name|__P
argument_list|(
operator|(
name|char
operator|*
name|arg
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|addgrent
name|__P
argument_list|(
operator|(
expr|struct
name|group
operator|*
name|grp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|delgrent
name|__P
argument_list|(
operator|(
expr|struct
name|group
operator|*
name|grp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|chggrent
name|__P
argument_list|(
operator|(
name|char
specifier|const
operator|*
name|name
operator|,
expr|struct
name|group
operator|*
name|grp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|fmtgrent
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|*
name|buf
operator|,
name|int
operator|*
name|buflen
operator|,
expr|struct
name|group
operator|*
name|grp
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|fmtgrentry
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|*
name|buf
operator|,
name|int
operator|*
name|buflen
operator|,
expr|struct
name|group
operator|*
name|grp
operator|,
name|int
name|type
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|editgroups
name|__P
argument_list|(
operator|(
name|char
operator|*
name|name
operator|,
name|char
operator|*
operator|*
name|groups
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|setgrdir
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|dir
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|char
modifier|*
name|getgrpath
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|file
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|grdb
name|__P
argument_list|(
operator|(
name|char
operator|*
name|arg
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|vsetpwent
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|vendpwent
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|passwd
modifier|*
name|vgetpwent
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|passwd
modifier|*
name|vgetpwuid
name|__P
argument_list|(
operator|(
name|uid_t
name|uid
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|passwd
modifier|*
name|vgetpwnam
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|nam
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|passwd
modifier|*
name|vgetpwent
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|vpwdb
name|__P
argument_list|(
operator|(
name|char
operator|*
name|arg
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|vsetgrent
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|vendgrent
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|group
modifier|*
name|vgetgrent
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|group
modifier|*
name|vgetgrgid
name|__P
argument_list|(
operator|(
name|gid_t
name|gid
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|group
modifier|*
name|vgetgrnam
name|__P
argument_list|(
operator|(
specifier|const
name|char
operator|*
name|nam
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|struct
name|group
modifier|*
name|vgetgrent
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|vgrdb
name|__P
argument_list|(
operator|(
name|char
operator|*
name|arg
operator|,
operator|...
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|vsetgrent
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|vendgrent
name|__P
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|copymkdir
name|__P
argument_list|(
operator|(
name|char
specifier|const
operator|*
name|dir
operator|,
name|char
specifier|const
operator|*
name|skel
operator|,
name|mode_t
name|mode
operator|,
name|uid_t
name|uid
operator|,
name|gid_t
name|gid
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|rm_r
name|__P
argument_list|(
operator|(
name|char
specifier|const
operator|*
name|dir
operator|,
name|uid_t
name|uid
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|extendline
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|*
name|buf
operator|,
name|int
operator|*
name|buflen
operator|,
name|int
name|needed
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|int
name|extendarray
name|__P
argument_list|(
operator|(
name|char
operator|*
operator|*
operator|*
name|buf
operator|,
name|int
operator|*
name|buflen
operator|,
name|int
name|needed
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_macro
name|__END_DECLS
end_macro

begin_define
define|#
directive|define
name|PWBUFSZ
value|1024
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !_PWUPD_H */
end_comment

end_unit

