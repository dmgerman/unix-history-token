begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 1995 Andrew McRae.  All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  * 3. The name of the author may not be used to endorse or promote products  *    derived from this software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $Id: readcis.h,v 1.3 1996/04/18 04:25:16 nate Exp $  */
end_comment

begin_define
define|#
directive|define
name|CIS_MAXSTR
value|20
end_define

begin_struct
struct|struct
name|tuple
block|{
name|struct
name|tuple
modifier|*
name|next
decl_stmt|;
name|unsigned
name|char
name|code
decl_stmt|;
name|int
name|length
decl_stmt|;
name|unsigned
name|char
modifier|*
name|data
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|tuple_list
block|{
name|struct
name|tuple_list
modifier|*
name|next
decl_stmt|;
name|struct
name|tuple
modifier|*
name|tuples
decl_stmt|;
name|off_t
name|offs
decl_stmt|;
name|int
name|flags
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|tuple_info
block|{
name|char
modifier|*
name|name
decl_stmt|;
name|unsigned
name|char
name|code
decl_stmt|;
name|unsigned
name|char
name|length
decl_stmt|;
comment|/* 255 means variable length */
block|}
struct|;
end_struct

begin_comment
comment|/*  *	Memory device descriptor.  */
end_comment

begin_struct
struct|struct
name|dev_mem
block|{
name|unsigned
name|char
name|valid
decl_stmt|;
name|unsigned
name|char
name|type
decl_stmt|;
name|unsigned
name|char
name|speed
decl_stmt|;
name|unsigned
name|char
name|wps
decl_stmt|;
name|unsigned
name|char
name|addr
decl_stmt|;
name|unsigned
name|char
name|units
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  *	One I/O structure describing a possible I/O map  *	of the card.  */
end_comment

begin_struct
struct|struct
name|cis_ioblk
block|{
name|struct
name|cis_ioblk
modifier|*
name|next
decl_stmt|;
name|unsigned
name|int
name|addr
decl_stmt|;
name|unsigned
name|int
name|size
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  *	A structure storing a memory map for the card.  */
end_comment

begin_struct
struct|struct
name|cis_memblk
block|{
name|struct
name|cis_memblk
modifier|*
name|next
decl_stmt|;
name|unsigned
name|int
name|address
decl_stmt|;
name|unsigned
name|int
name|length
decl_stmt|;
name|unsigned
name|int
name|host_address
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  *	One configuration entry for the card.  */
end_comment

begin_struct
struct|struct
name|cis_config
block|{
name|struct
name|cis_config
modifier|*
name|next
decl_stmt|;
name|unsigned
name|int
name|pwr
range|:
literal|1
decl_stmt|;
comment|/* Which values are defined. */
name|unsigned
name|int
name|timing
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|iospace
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|irq
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|memspace
range|:
literal|1
decl_stmt|;
name|unsigned
name|int
name|misc_valid
range|:
literal|1
decl_stmt|;
name|unsigned
name|char
name|id
decl_stmt|;
name|unsigned
name|char
name|io_blks
decl_stmt|;
name|unsigned
name|char
name|io_addr
decl_stmt|;
name|unsigned
name|char
name|io_bus
decl_stmt|;
name|struct
name|cis_ioblk
modifier|*
name|io
decl_stmt|;
name|unsigned
name|char
name|irqlevel
decl_stmt|;
name|unsigned
name|char
name|irq_flags
decl_stmt|;
name|unsigned
name|irq_mask
decl_stmt|;
name|unsigned
name|char
name|memwins
decl_stmt|;
name|struct
name|cis_memblk
modifier|*
name|mem
decl_stmt|;
name|unsigned
name|char
name|misc
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/*  *	Structure holding all data retrieved from the  *	CIS block on the card.  *	The default configuration contains interface defaults  *	not listed in each separate configuration.  */
end_comment

begin_struct
struct|struct
name|cis
block|{
name|struct
name|tuple_list
modifier|*
name|tlist
decl_stmt|;
name|char
name|manuf
index|[
name|CIS_MAXSTR
index|]
decl_stmt|;
name|char
name|vers
index|[
name|CIS_MAXSTR
index|]
decl_stmt|;
name|char
name|add_info1
index|[
name|CIS_MAXSTR
index|]
decl_stmt|;
name|char
name|add_info2
index|[
name|CIS_MAXSTR
index|]
decl_stmt|;
name|unsigned
name|char
name|maj_v
decl_stmt|,
name|min_v
decl_stmt|;
name|unsigned
name|char
name|last_config
decl_stmt|;
name|unsigned
name|char
name|ccrs
decl_stmt|;
name|unsigned
name|long
name|reg_addr
decl_stmt|;
name|struct
name|dev_mem
name|attr_mem
decl_stmt|;
name|struct
name|dev_mem
name|common_mem
decl_stmt|;
name|struct
name|cis_config
modifier|*
name|def_config
decl_stmt|;
name|struct
name|cis_config
modifier|*
name|conf
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|void
modifier|*
name|xmalloc
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|cis
modifier|*
name|readcis
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dumpcis
parameter_list|(
name|struct
name|cis
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|freecis
parameter_list|(
name|struct
name|cis
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|tuple_list
modifier|*
name|read_tuples
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|tuple
modifier|*
name|find_tuple
parameter_list|(
name|struct
name|cis
modifier|*
parameter_list|,
name|unsigned
name|char
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|tuple
modifier|*
name|find_tuple_in_list
parameter_list|(
name|struct
name|tuple_list
modifier|*
parameter_list|,
name|unsigned
name|char
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|tuple_info
modifier|*
name|get_tuple_info
parameter_list|(
name|unsigned
name|char
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|tuple_name
parameter_list|(
name|unsigned
name|char
parameter_list|)
function_decl|;
end_function_decl

end_unit

