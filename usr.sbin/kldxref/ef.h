begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* $FreeBSD$ */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_EF_H_
end_ifndef

begin_define
define|#
directive|define
name|_EF_H_
end_define

begin_define
define|#
directive|define
name|EFT_KLD
value|1
end_define

begin_define
define|#
directive|define
name|EFT_KERNEL
value|2
end_define

begin_define
define|#
directive|define
name|EF_RELOC_REL
value|1
end_define

begin_define
define|#
directive|define
name|EF_RELOC_RELA
value|2
end_define

begin_define
define|#
directive|define
name|EF_GET_TYPE
parameter_list|(
name|ef
parameter_list|)
define|\
value|(ef)->ef_ops->get_type((ef)->ef_ef)
end_define

begin_define
define|#
directive|define
name|EF_CLOSE
parameter_list|(
name|ef
parameter_list|)
define|\
value|(ef)->ef_ops->close((ef)->ef_ef)
end_define

begin_define
define|#
directive|define
name|EF_READ
parameter_list|(
name|ef
parameter_list|,
name|offset
parameter_list|,
name|len
parameter_list|,
name|dest
parameter_list|)
define|\
value|(ef)->ef_ops->read((ef)->ef_ef, offset, len, dest)
end_define

begin_define
define|#
directive|define
name|EF_READ_ENTRY
parameter_list|(
name|ef
parameter_list|,
name|offset
parameter_list|,
name|len
parameter_list|,
name|ptr
parameter_list|)
define|\
value|(ef)->ef_ops->read_entry((ef)->ef_ef, offset, len, ptr)
end_define

begin_define
define|#
directive|define
name|EF_SEG_READ
parameter_list|(
name|ef
parameter_list|,
name|offset
parameter_list|,
name|len
parameter_list|,
name|dest
parameter_list|)
define|\
value|(ef)->ef_ops->seg_read((ef)->ef_ef, offset, len, dest)
end_define

begin_define
define|#
directive|define
name|EF_SEG_READ_REL
parameter_list|(
name|ef
parameter_list|,
name|offset
parameter_list|,
name|len
parameter_list|,
name|dest
parameter_list|)
define|\
value|(ef)->ef_ops->seg_read_rel((ef)->ef_ef, offset, len, dest)
end_define

begin_define
define|#
directive|define
name|EF_SEG_READ_ENTRY
parameter_list|(
name|ef
parameter_list|,
name|offset
parameter_list|,
name|len
parameter_list|,
name|ptr
parameter_list|)
define|\
value|(ef)->ef_ops->seg_read_entry((ef)->kf_ef, offset, len, ptr)
end_define

begin_define
define|#
directive|define
name|EF_SEG_READ_ENTRY_REL
parameter_list|(
name|ef
parameter_list|,
name|offset
parameter_list|,
name|len
parameter_list|,
name|ptr
parameter_list|)
define|\
value|(ef)->ef_ops->seg_read_entry_rel((ef)->ef_ef, offset, len, ptr)
end_define

begin_define
define|#
directive|define
name|EF_SYMADDR
parameter_list|(
name|ef
parameter_list|,
name|symidx
parameter_list|)
define|\
value|(ef)->ef_ops->symaddr((ef)->ef_ef, symidx)
end_define

begin_define
define|#
directive|define
name|EF_LOOKUP_SET
parameter_list|(
name|ef
parameter_list|,
name|name
parameter_list|,
name|startp
parameter_list|,
name|stopp
parameter_list|,
name|countp
parameter_list|)
define|\
value|(ef)->ef_ops->lookup_set((ef)->ef_ef, name, startp, stopp, countp)
end_define

begin_define
define|#
directive|define
name|EF_LOOKUP_SYMBOL
parameter_list|(
name|ef
parameter_list|,
name|name
parameter_list|,
name|sym
parameter_list|)
define|\
value|(ef)->ef_ops->lookup_symbol((ef)->ef_ef, name, sym)
end_define

begin_comment
comment|/* XXX, should have a different name. */
end_comment

begin_typedef
typedef|typedef
name|struct
name|ef_file
modifier|*
name|elf_file_t
typedef|;
end_typedef

begin_struct
struct|struct
name|elf_file_ops
block|{
name|int
function_decl|(
modifier|*
name|get_type
function_decl|)
parameter_list|(
name|elf_file_t
name|ef
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|close
function_decl|)
parameter_list|(
name|elf_file_t
name|ef
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|read
function_decl|)
parameter_list|(
name|elf_file_t
name|ef
parameter_list|,
name|Elf_Off
name|offset
parameter_list|,
name|size_t
name|len
parameter_list|,
name|void
modifier|*
name|dest
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|read_entry
function_decl|)
parameter_list|(
name|elf_file_t
name|ef
parameter_list|,
name|Elf_Off
name|offset
parameter_list|,
name|size_t
name|len
parameter_list|,
name|void
modifier|*
modifier|*
name|ptr
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|seg_read
function_decl|)
parameter_list|(
name|elf_file_t
name|ef
parameter_list|,
name|Elf_Off
name|offset
parameter_list|,
name|size_t
name|len
parameter_list|,
name|void
modifier|*
name|dest
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|seg_read_rel
function_decl|)
parameter_list|(
name|elf_file_t
name|ef
parameter_list|,
name|Elf_Off
name|offset
parameter_list|,
name|size_t
name|len
parameter_list|,
name|void
modifier|*
name|dest
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|seg_read_entry
function_decl|)
parameter_list|(
name|elf_file_t
name|ef
parameter_list|,
name|Elf_Off
name|offset
parameter_list|,
name|size_t
name|len
parameter_list|,
name|void
modifier|*
modifier|*
name|ptr
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|seg_read_entry_rel
function_decl|)
parameter_list|(
name|elf_file_t
name|ef
parameter_list|,
name|Elf_Off
name|offset
parameter_list|,
name|size_t
name|len
parameter_list|,
name|void
modifier|*
modifier|*
name|ptr
parameter_list|)
function_decl|;
name|Elf_Addr
function_decl|(
modifier|*
name|symaddr
function_decl|)
parameter_list|(
name|elf_file_t
name|ef
parameter_list|,
name|Elf_Word
name|symidx
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|lookup_set
function_decl|)
parameter_list|(
name|elf_file_t
name|ef
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|long
modifier|*
name|startp
parameter_list|,
name|long
modifier|*
name|stopp
parameter_list|,
name|long
modifier|*
name|countp
parameter_list|)
function_decl|;
name|int
function_decl|(
modifier|*
name|lookup_symbol
function_decl|)
parameter_list|(
name|elf_file_t
name|ef
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|Elf_Sym
modifier|*
modifier|*
name|sym
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|elf_file
block|{
name|elf_file_t
name|ef_ef
decl_stmt|;
name|struct
name|elf_file_ops
modifier|*
name|ef_ops
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|__BEGIN_DECLS
name|int
name|ef_open
parameter_list|(
specifier|const
name|char
modifier|*
name|filename
parameter_list|,
name|struct
name|elf_file
modifier|*
name|ef
parameter_list|,
name|int
name|verbose
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ef_obj_open
parameter_list|(
specifier|const
name|char
modifier|*
name|filename
parameter_list|,
name|struct
name|elf_file
modifier|*
name|ef
parameter_list|,
name|int
name|verbose
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ef_reloc
parameter_list|(
name|struct
name|elf_file
modifier|*
name|ef
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|int
name|type
parameter_list|,
name|Elf_Off
name|offset
parameter_list|,
name|size_t
name|len
parameter_list|,
name|void
modifier|*
name|dest
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _EF_H_*/
end_comment

end_unit

