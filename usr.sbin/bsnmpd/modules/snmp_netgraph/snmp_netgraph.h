begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2001-2003  *	Fraunhofer Institute for Open Communication Systems (FhG Fokus).  *	All rights reserved.  *  * Author: Harti Brandt<harti@freebsd.org>  *  * Redistribution of this software and documentation and use in source and  * binary forms, with or without modification, are permitted provided that  * the following conditions are met:  *  * 1. Redistributions of source code or documentation must retain the above  *    copyright notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE AND DOCUMENTATION IS PROVIDED BY FRAUNHOFER FOKUS  * AND ITS CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND  * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL  * FRAUNHOFER FOKUS OR ITS CONTRIBUTORS  BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,  * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF  * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $FreeBSD$  *  * Netgraph interface for SNMPd. Exported stuff.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|SNMP_NETGRAPH_H_
end_ifndef

begin_define
define|#
directive|define
name|SNMP_NETGRAPH_H_
end_define

begin_include
include|#
directive|include
file|<netgraph/ng_message.h>
end_include

begin_decl_stmt
specifier|extern
name|ng_ID_t
name|snmp_node
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|u_char
modifier|*
name|snmp_nodename
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
name|void
name|ng_cookie_f
parameter_list|(
specifier|const
name|struct
name|ng_mesg
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|ng_ID_t
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
name|void
name|ng_hook_f
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|u_char
modifier|*
parameter_list|,
name|size_t
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_function_decl
name|void
modifier|*
name|ng_register_cookie
parameter_list|(
specifier|const
name|struct
name|lmodule
modifier|*
parameter_list|,
name|u_int32_t
name|cookie
parameter_list|,
name|ng_ID_t
parameter_list|,
name|ng_cookie_f
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ng_unregister_cookie
parameter_list|(
name|void
modifier|*
name|reg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
modifier|*
name|ng_register_hook
parameter_list|(
specifier|const
name|struct
name|lmodule
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|ng_hook_f
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ng_unregister_hook
parameter_list|(
name|void
modifier|*
name|reg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ng_unregister_module
parameter_list|(
specifier|const
name|struct
name|lmodule
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_output
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|u_int
name|cookie
parameter_list|,
name|u_int
name|opcode
parameter_list|,
specifier|const
name|void
modifier|*
name|arg
parameter_list|,
name|size_t
name|arglen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_output_node
parameter_list|(
specifier|const
name|char
modifier|*
name|node
parameter_list|,
name|u_int
name|cookie
parameter_list|,
name|u_int
name|opcode
parameter_list|,
specifier|const
name|void
modifier|*
name|arg
parameter_list|,
name|size_t
name|arglen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_output_id
parameter_list|(
name|ng_ID_t
name|node
parameter_list|,
name|u_int
name|cookie
parameter_list|,
name|u_int
name|opcode
parameter_list|,
specifier|const
name|void
modifier|*
name|arg
parameter_list|,
name|size_t
name|arglen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ng_mesg
modifier|*
name|ng_dialog
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|,
name|u_int
name|cookie
parameter_list|,
name|u_int
name|opcode
parameter_list|,
specifier|const
name|void
modifier|*
name|arg
parameter_list|,
name|size_t
name|arglen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ng_mesg
modifier|*
name|ng_dialog_node
parameter_list|(
specifier|const
name|char
modifier|*
name|node
parameter_list|,
name|u_int
name|cookie
parameter_list|,
name|u_int
name|opcode
parameter_list|,
specifier|const
name|void
modifier|*
name|arg
parameter_list|,
name|size_t
name|arglen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ng_mesg
modifier|*
name|ng_dialog_id
parameter_list|(
name|ng_ID_t
name|id
parameter_list|,
name|u_int
name|cookie
parameter_list|,
name|u_int
name|opcode
parameter_list|,
specifier|const
name|void
modifier|*
name|arg
parameter_list|,
name|size_t
name|arglen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_send_data
parameter_list|(
specifier|const
name|char
modifier|*
name|hook
parameter_list|,
specifier|const
name|void
modifier|*
name|sndbuf
parameter_list|,
name|size_t
name|sndlen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ng_ID_t
name|ng_mkpeer_id
parameter_list|(
name|ng_ID_t
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
name|type
parameter_list|,
specifier|const
name|char
modifier|*
name|hook
parameter_list|,
specifier|const
name|char
modifier|*
name|peerhook
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_connect_node
parameter_list|(
specifier|const
name|char
modifier|*
name|node
parameter_list|,
specifier|const
name|char
modifier|*
name|ourhook
parameter_list|,
specifier|const
name|char
modifier|*
name|peerhook
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_connect_id
parameter_list|(
name|ng_ID_t
name|id
parameter_list|,
specifier|const
name|char
modifier|*
name|ourhook
parameter_list|,
specifier|const
name|char
modifier|*
name|peerhook
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_connect2_id
parameter_list|(
name|ng_ID_t
name|id
parameter_list|,
name|ng_ID_t
name|peer
parameter_list|,
specifier|const
name|char
modifier|*
name|ourhook
parameter_list|,
specifier|const
name|char
modifier|*
name|peerhook
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_connect2_tee_id
parameter_list|(
name|ng_ID_t
name|id
parameter_list|,
name|ng_ID_t
name|peer
parameter_list|,
specifier|const
name|char
modifier|*
name|ourhook
parameter_list|,
specifier|const
name|char
modifier|*
name|peerhook
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_rmhook
parameter_list|(
specifier|const
name|char
modifier|*
name|ourhook
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_rmhook_id
parameter_list|(
name|ng_ID_t
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_rmhook_tee_id
parameter_list|(
name|ng_ID_t
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_shutdown_id
parameter_list|(
name|ng_ID_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ng_ID_t
name|ng_next_node_id
parameter_list|(
name|ng_ID_t
name|node
parameter_list|,
specifier|const
name|char
modifier|*
name|type
parameter_list|,
specifier|const
name|char
modifier|*
name|hook
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ng_ID_t
name|ng_node_id
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ng_ID_t
name|ng_node_id_node
parameter_list|(
specifier|const
name|char
modifier|*
name|node
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ng_ID_t
name|ng_node_name
parameter_list|(
name|ng_ID_t
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ng_ID_t
name|ng_node_type
parameter_list|(
name|ng_ID_t
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ng_peer_hook_id
parameter_list|(
name|ng_ID_t
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

end_unit

