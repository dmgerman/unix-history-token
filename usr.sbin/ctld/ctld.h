begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2012 The FreeBSD Foundation  * All rights reserved.  *  * This software was developed by Edward Tomasz Napierala under sponsorship  * from the FreeBSD Foundation.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|CTLD_H
end_ifndef

begin_define
define|#
directive|define
name|CTLD_H
end_define

begin_include
include|#
directive|include
file|<sys/queue.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|ICL_KERNEL_PROXY
end_ifdef

begin_include
include|#
directive|include
file|<sys/types.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|<sys/socket.h>
end_include

begin_include
include|#
directive|include
file|<stdbool.h>
end_include

begin_include
include|#
directive|include
file|<libutil.h>
end_include

begin_include
include|#
directive|include
file|<openssl/md5.h>
end_include

begin_define
define|#
directive|define
name|DEFAULT_CONFIG_PATH
value|"/etc/ctl.conf"
end_define

begin_define
define|#
directive|define
name|DEFAULT_PIDFILE
value|"/var/run/ctld.pid"
end_define

begin_define
define|#
directive|define
name|DEFAULT_BLOCKSIZE
value|512
end_define

begin_define
define|#
directive|define
name|MAX_NAME_LEN
value|223
end_define

begin_define
define|#
directive|define
name|MAX_DATA_SEGMENT_LENGTH
value|(128 * 1024)
end_define

begin_define
define|#
directive|define
name|MAX_BURST_LENGTH
value|16776192
end_define

begin_struct
struct|struct
name|auth
block|{
name|TAILQ_ENTRY
argument_list|(
argument|auth
argument_list|)
name|a_next
expr_stmt|;
name|struct
name|auth_group
modifier|*
name|a_auth_group
decl_stmt|;
name|char
modifier|*
name|a_user
decl_stmt|;
name|char
modifier|*
name|a_secret
decl_stmt|;
name|char
modifier|*
name|a_mutual_user
decl_stmt|;
name|char
modifier|*
name|a_mutual_secret
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|auth_name
block|{
name|TAILQ_ENTRY
argument_list|(
argument|auth_name
argument_list|)
name|an_next
expr_stmt|;
name|struct
name|auth_group
modifier|*
name|an_auth_group
decl_stmt|;
name|char
modifier|*
name|an_initator_name
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|auth_portal
block|{
name|TAILQ_ENTRY
argument_list|(
argument|auth_portal
argument_list|)
name|ap_next
expr_stmt|;
name|struct
name|auth_group
modifier|*
name|ap_auth_group
decl_stmt|;
name|char
modifier|*
name|ap_initator_portal
decl_stmt|;
name|struct
name|sockaddr_storage
name|ap_sa
decl_stmt|;
name|int
name|ap_mask
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|AG_TYPE_UNKNOWN
value|0
end_define

begin_define
define|#
directive|define
name|AG_TYPE_DENY
value|1
end_define

begin_define
define|#
directive|define
name|AG_TYPE_NO_AUTHENTICATION
value|2
end_define

begin_define
define|#
directive|define
name|AG_TYPE_CHAP
value|3
end_define

begin_define
define|#
directive|define
name|AG_TYPE_CHAP_MUTUAL
value|4
end_define

begin_struct
struct|struct
name|auth_group
block|{
name|TAILQ_ENTRY
argument_list|(
argument|auth_group
argument_list|)
name|ag_next
expr_stmt|;
name|struct
name|conf
modifier|*
name|ag_conf
decl_stmt|;
name|char
modifier|*
name|ag_name
decl_stmt|;
name|struct
name|target
modifier|*
name|ag_target
decl_stmt|;
name|int
name|ag_type
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|auth
argument_list|)
name|ag_auths
expr_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|auth_name
argument_list|)
name|ag_names
expr_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|auth_portal
argument_list|)
name|ag_portals
expr_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|portal
block|{
name|TAILQ_ENTRY
argument_list|(
argument|portal
argument_list|)
name|p_next
expr_stmt|;
name|struct
name|portal_group
modifier|*
name|p_portal_group
decl_stmt|;
name|bool
name|p_iser
decl_stmt|;
name|char
modifier|*
name|p_listen
decl_stmt|;
name|struct
name|addrinfo
modifier|*
name|p_ai
decl_stmt|;
ifdef|#
directive|ifdef
name|ICL_KERNEL_PROXY
name|int
name|p_id
decl_stmt|;
endif|#
directive|endif
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|target
argument_list|)
name|p_targets
expr_stmt|;
name|int
name|p_socket
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|PG_FILTER_UNKNOWN
value|0
end_define

begin_define
define|#
directive|define
name|PG_FILTER_NONE
value|1
end_define

begin_define
define|#
directive|define
name|PG_FILTER_PORTAL
value|2
end_define

begin_define
define|#
directive|define
name|PG_FILTER_PORTAL_NAME
value|3
end_define

begin_define
define|#
directive|define
name|PG_FILTER_PORTAL_NAME_AUTH
value|4
end_define

begin_struct
struct|struct
name|portal_group
block|{
name|TAILQ_ENTRY
argument_list|(
argument|portal_group
argument_list|)
name|pg_next
expr_stmt|;
name|struct
name|conf
modifier|*
name|pg_conf
decl_stmt|;
name|char
modifier|*
name|pg_name
decl_stmt|;
name|struct
name|auth_group
modifier|*
name|pg_discovery_auth_group
decl_stmt|;
name|int
name|pg_discovery_filter
decl_stmt|;
name|bool
name|pg_unassigned
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|portal
argument_list|)
name|pg_portals
expr_stmt|;
name|uint16_t
name|pg_tag
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|lun_option
block|{
name|TAILQ_ENTRY
argument_list|(
argument|lun_option
argument_list|)
name|lo_next
expr_stmt|;
name|struct
name|lun
modifier|*
name|lo_lun
decl_stmt|;
name|char
modifier|*
name|lo_name
decl_stmt|;
name|char
modifier|*
name|lo_value
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|lun
block|{
name|TAILQ_ENTRY
argument_list|(
argument|lun
argument_list|)
name|l_next
expr_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|lun_option
argument_list|)
name|l_options
expr_stmt|;
name|struct
name|target
modifier|*
name|l_target
decl_stmt|;
name|int
name|l_lun
decl_stmt|;
name|char
modifier|*
name|l_backend
decl_stmt|;
name|int
name|l_blocksize
decl_stmt|;
name|char
modifier|*
name|l_device_id
decl_stmt|;
name|char
modifier|*
name|l_path
decl_stmt|;
name|char
modifier|*
name|l_serial
decl_stmt|;
name|int64_t
name|l_size
decl_stmt|;
name|int
name|l_ctl_lun
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|target
block|{
name|TAILQ_ENTRY
argument_list|(
argument|target
argument_list|)
name|t_next
expr_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|lun
argument_list|)
name|t_luns
expr_stmt|;
name|struct
name|conf
modifier|*
name|t_conf
decl_stmt|;
name|struct
name|auth_group
modifier|*
name|t_auth_group
decl_stmt|;
name|struct
name|portal_group
modifier|*
name|t_portal_group
decl_stmt|;
name|char
modifier|*
name|t_name
decl_stmt|;
name|char
modifier|*
name|t_alias
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|isns
block|{
name|TAILQ_ENTRY
argument_list|(
argument|isns
argument_list|)
name|i_next
expr_stmt|;
name|struct
name|conf
modifier|*
name|i_conf
decl_stmt|;
name|char
modifier|*
name|i_addr
decl_stmt|;
name|struct
name|addrinfo
modifier|*
name|i_ai
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|conf
block|{
name|char
modifier|*
name|conf_pidfile_path
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|target
argument_list|)
name|conf_targets
expr_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|auth_group
argument_list|)
name|conf_auth_groups
expr_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|portal_group
argument_list|)
name|conf_portal_groups
expr_stmt|;
name|TAILQ_HEAD
argument_list|(
argument_list|,
argument|isns
argument_list|)
name|conf_isns
expr_stmt|;
name|int
name|conf_isns_period
decl_stmt|;
name|int
name|conf_isns_timeout
decl_stmt|;
name|int
name|conf_debug
decl_stmt|;
name|int
name|conf_timeout
decl_stmt|;
name|int
name|conf_maxproc
decl_stmt|;
name|uint16_t
name|conf_last_portal_group_tag
decl_stmt|;
ifdef|#
directive|ifdef
name|ICL_KERNEL_PROXY
name|int
name|conf_portal_id
decl_stmt|;
endif|#
directive|endif
name|struct
name|pidfh
modifier|*
name|conf_pidfh
decl_stmt|;
name|bool
name|conf_default_pg_defined
decl_stmt|;
name|bool
name|conf_default_ag_defined
decl_stmt|;
name|bool
name|conf_kernel_port_on
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|CONN_SESSION_TYPE_NONE
value|0
end_define

begin_define
define|#
directive|define
name|CONN_SESSION_TYPE_DISCOVERY
value|1
end_define

begin_define
define|#
directive|define
name|CONN_SESSION_TYPE_NORMAL
value|2
end_define

begin_define
define|#
directive|define
name|CONN_DIGEST_NONE
value|0
end_define

begin_define
define|#
directive|define
name|CONN_DIGEST_CRC32C
value|1
end_define

begin_struct
struct|struct
name|connection
block|{
name|struct
name|portal
modifier|*
name|conn_portal
decl_stmt|;
name|struct
name|target
modifier|*
name|conn_target
decl_stmt|;
name|int
name|conn_socket
decl_stmt|;
name|int
name|conn_session_type
decl_stmt|;
name|char
modifier|*
name|conn_initiator_name
decl_stmt|;
name|char
modifier|*
name|conn_initiator_addr
decl_stmt|;
name|char
modifier|*
name|conn_initiator_alias
decl_stmt|;
name|uint8_t
name|conn_initiator_isid
index|[
literal|6
index|]
decl_stmt|;
name|struct
name|sockaddr_storage
name|conn_initiator_sa
decl_stmt|;
name|uint32_t
name|conn_cmdsn
decl_stmt|;
name|uint32_t
name|conn_statsn
decl_stmt|;
name|size_t
name|conn_max_data_segment_length
decl_stmt|;
name|size_t
name|conn_max_burst_length
decl_stmt|;
name|int
name|conn_immediate_data
decl_stmt|;
name|int
name|conn_header_digest
decl_stmt|;
name|int
name|conn_data_digest
decl_stmt|;
specifier|const
name|char
modifier|*
name|conn_user
decl_stmt|;
name|struct
name|chap
modifier|*
name|conn_chap
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|pdu
block|{
name|struct
name|connection
modifier|*
name|pdu_connection
decl_stmt|;
name|struct
name|iscsi_bhs
modifier|*
name|pdu_bhs
decl_stmt|;
name|char
modifier|*
name|pdu_data
decl_stmt|;
name|size_t
name|pdu_data_len
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|KEYS_MAX
value|1024
end_define

begin_struct
struct|struct
name|keys
block|{
name|char
modifier|*
name|keys_names
index|[
name|KEYS_MAX
index|]
decl_stmt|;
name|char
modifier|*
name|keys_values
index|[
name|KEYS_MAX
index|]
decl_stmt|;
name|char
modifier|*
name|keys_data
decl_stmt|;
name|size_t
name|keys_data_len
decl_stmt|;
block|}
struct|;
end_struct

begin_define
define|#
directive|define
name|CHAP_CHALLENGE_LEN
value|1024
end_define

begin_struct
struct|struct
name|chap
block|{
name|unsigned
name|char
name|chap_id
decl_stmt|;
name|char
name|chap_challenge
index|[
name|CHAP_CHALLENGE_LEN
index|]
decl_stmt|;
name|char
name|chap_response
index|[
name|MD5_DIGEST_LENGTH
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|rchap
block|{
name|char
modifier|*
name|rchap_secret
decl_stmt|;
name|unsigned
name|char
name|rchap_id
decl_stmt|;
name|void
modifier|*
name|rchap_challenge
decl_stmt|;
name|size_t
name|rchap_challenge_len
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|struct
name|chap
modifier|*
name|chap_new
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|chap_get_id
parameter_list|(
specifier|const
name|struct
name|chap
modifier|*
name|chap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|chap_get_challenge
parameter_list|(
specifier|const
name|struct
name|chap
modifier|*
name|chap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|chap_receive
parameter_list|(
name|struct
name|chap
modifier|*
name|chap
parameter_list|,
specifier|const
name|char
modifier|*
name|response
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|chap_authenticate
parameter_list|(
name|struct
name|chap
modifier|*
name|chap
parameter_list|,
specifier|const
name|char
modifier|*
name|secret
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|chap_delete
parameter_list|(
name|struct
name|chap
modifier|*
name|chap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|rchap
modifier|*
name|rchap_new
parameter_list|(
specifier|const
name|char
modifier|*
name|secret
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|rchap_receive
parameter_list|(
name|struct
name|rchap
modifier|*
name|rchap
parameter_list|,
specifier|const
name|char
modifier|*
name|id
parameter_list|,
specifier|const
name|char
modifier|*
name|challenge
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|rchap_get_response
parameter_list|(
name|struct
name|rchap
modifier|*
name|rchap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rchap_delete
parameter_list|(
name|struct
name|rchap
modifier|*
name|rchap
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|conf
modifier|*
name|conf_new
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|conf
modifier|*
name|conf_new_from_file
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|conf
modifier|*
name|conf_new_from_kernel
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|conf_delete
parameter_list|(
name|struct
name|conf
modifier|*
name|conf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|conf_verify
parameter_list|(
name|struct
name|conf
modifier|*
name|conf
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|auth_group
modifier|*
name|auth_group_new
parameter_list|(
name|struct
name|conf
modifier|*
name|conf
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|auth_group_delete
parameter_list|(
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|auth_group
modifier|*
name|auth_group_find
parameter_list|(
specifier|const
name|struct
name|conf
modifier|*
name|conf
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_group_set_type
parameter_list|(
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|,
specifier|const
name|char
modifier|*
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|struct
name|auth
modifier|*
name|auth_new_chap
parameter_list|(
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|,
specifier|const
name|char
modifier|*
name|user
parameter_list|,
specifier|const
name|char
modifier|*
name|secret
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|struct
name|auth
modifier|*
name|auth_new_chap_mutual
parameter_list|(
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|,
specifier|const
name|char
modifier|*
name|user
parameter_list|,
specifier|const
name|char
modifier|*
name|secret
parameter_list|,
specifier|const
name|char
modifier|*
name|user2
parameter_list|,
specifier|const
name|char
modifier|*
name|secret2
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|struct
name|auth
modifier|*
name|auth_find
parameter_list|(
specifier|const
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|,
specifier|const
name|char
modifier|*
name|user
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|struct
name|auth_name
modifier|*
name|auth_name_new
parameter_list|(
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|,
specifier|const
name|char
modifier|*
name|initiator_name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|auth_name_defined
parameter_list|(
specifier|const
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|struct
name|auth_name
modifier|*
name|auth_name_find
parameter_list|(
specifier|const
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|,
specifier|const
name|char
modifier|*
name|initiator_name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_name_check
parameter_list|(
specifier|const
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|,
specifier|const
name|char
modifier|*
name|initiator_name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|struct
name|auth_portal
modifier|*
name|auth_portal_new
parameter_list|(
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|,
specifier|const
name|char
modifier|*
name|initiator_portal
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|auth_portal_defined
parameter_list|(
specifier|const
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|struct
name|auth_portal
modifier|*
name|auth_portal_find
parameter_list|(
specifier|const
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|,
specifier|const
name|struct
name|sockaddr_storage
modifier|*
name|sa
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|auth_portal_check
parameter_list|(
specifier|const
name|struct
name|auth_group
modifier|*
name|ag
parameter_list|,
specifier|const
name|struct
name|sockaddr_storage
modifier|*
name|sa
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|portal_group
modifier|*
name|portal_group_new
parameter_list|(
name|struct
name|conf
modifier|*
name|conf
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|portal_group_delete
parameter_list|(
name|struct
name|portal_group
modifier|*
name|pg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|portal_group
modifier|*
name|portal_group_find
parameter_list|(
specifier|const
name|struct
name|conf
modifier|*
name|conf
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|portal_group_add_listen
parameter_list|(
name|struct
name|portal_group
modifier|*
name|pg
parameter_list|,
specifier|const
name|char
modifier|*
name|listen
parameter_list|,
name|bool
name|iser
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|portal_group_set_filter
parameter_list|(
name|struct
name|portal_group
modifier|*
name|pg
parameter_list|,
specifier|const
name|char
modifier|*
name|filter
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|isns_new
parameter_list|(
name|struct
name|conf
modifier|*
name|conf
parameter_list|,
specifier|const
name|char
modifier|*
name|addr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|isns_delete
parameter_list|(
name|struct
name|isns
modifier|*
name|is
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|isns_register
parameter_list|(
name|struct
name|isns
modifier|*
name|isns
parameter_list|,
name|struct
name|isns
modifier|*
name|oldisns
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|isns_check
parameter_list|(
name|struct
name|isns
modifier|*
name|isns
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|isns_deregister
parameter_list|(
name|struct
name|isns
modifier|*
name|isns
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|target
modifier|*
name|target_new
parameter_list|(
name|struct
name|conf
modifier|*
name|conf
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|target_delete
parameter_list|(
name|struct
name|target
modifier|*
name|target
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|target
modifier|*
name|target_find
parameter_list|(
name|struct
name|conf
modifier|*
name|conf
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|lun
modifier|*
name|lun_new
parameter_list|(
name|struct
name|target
modifier|*
name|target
parameter_list|,
name|int
name|lun_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|lun_delete
parameter_list|(
name|struct
name|lun
modifier|*
name|lun
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|lun
modifier|*
name|lun_find
parameter_list|(
specifier|const
name|struct
name|target
modifier|*
name|target
parameter_list|,
name|int
name|lun_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|lun_set_backend
parameter_list|(
name|struct
name|lun
modifier|*
name|lun
parameter_list|,
specifier|const
name|char
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|lun_set_blocksize
parameter_list|(
name|struct
name|lun
modifier|*
name|lun
parameter_list|,
name|size_t
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|lun_set_device_id
parameter_list|(
name|struct
name|lun
modifier|*
name|lun
parameter_list|,
specifier|const
name|char
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|lun_set_path
parameter_list|(
name|struct
name|lun
modifier|*
name|lun
parameter_list|,
specifier|const
name|char
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|lun_set_serial
parameter_list|(
name|struct
name|lun
modifier|*
name|lun
parameter_list|,
specifier|const
name|char
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|lun_set_size
parameter_list|(
name|struct
name|lun
modifier|*
name|lun
parameter_list|,
name|size_t
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|lun_set_ctl_lun
parameter_list|(
name|struct
name|lun
modifier|*
name|lun
parameter_list|,
name|uint32_t
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|lun_option
modifier|*
name|lun_option_new
parameter_list|(
name|struct
name|lun
modifier|*
name|lun
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|lun_option_delete
parameter_list|(
name|struct
name|lun_option
modifier|*
name|clo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|lun_option
modifier|*
name|lun_option_find
parameter_list|(
specifier|const
name|struct
name|lun
modifier|*
name|lun
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|lun_option_set
parameter_list|(
name|struct
name|lun_option
modifier|*
name|clo
parameter_list|,
specifier|const
name|char
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kernel_init
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|kernel_lun_add
parameter_list|(
name|struct
name|lun
modifier|*
name|lun
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|kernel_lun_resize
parameter_list|(
name|struct
name|lun
modifier|*
name|lun
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|kernel_lun_remove
parameter_list|(
name|struct
name|lun
modifier|*
name|lun
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kernel_handoff
parameter_list|(
name|struct
name|connection
modifier|*
name|conn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|kernel_port_add
parameter_list|(
name|struct
name|target
modifier|*
name|targ
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|kernel_port_remove
parameter_list|(
name|struct
name|target
modifier|*
name|targ
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kernel_capsicate
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|ICL_KERNEL_PROXY
end_ifdef

begin_function_decl
name|void
name|kernel_listen
parameter_list|(
name|struct
name|addrinfo
modifier|*
name|ai
parameter_list|,
name|bool
name|iser
parameter_list|,
name|int
name|portal_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kernel_accept
parameter_list|(
name|int
modifier|*
name|connection_id
parameter_list|,
name|int
modifier|*
name|portal_id
parameter_list|,
name|struct
name|sockaddr
modifier|*
name|client_sa
parameter_list|,
name|socklen_t
modifier|*
name|client_salen
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kernel_send
parameter_list|(
name|struct
name|pdu
modifier|*
name|pdu
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|kernel_receive
parameter_list|(
name|struct
name|pdu
modifier|*
name|pdu
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|struct
name|keys
modifier|*
name|keys_new
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|keys_delete
parameter_list|(
name|struct
name|keys
modifier|*
name|keys
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|keys_load
parameter_list|(
name|struct
name|keys
modifier|*
name|keys
parameter_list|,
specifier|const
name|struct
name|pdu
modifier|*
name|pdu
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|keys_save
parameter_list|(
name|struct
name|keys
modifier|*
name|keys
parameter_list|,
name|struct
name|pdu
modifier|*
name|pdu
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|char
modifier|*
name|keys_find
parameter_list|(
name|struct
name|keys
modifier|*
name|keys
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|keys_find_int
parameter_list|(
name|struct
name|keys
modifier|*
name|keys
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|keys_add
parameter_list|(
name|struct
name|keys
modifier|*
name|keys
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
specifier|const
name|char
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|keys_add_int
parameter_list|(
name|struct
name|keys
modifier|*
name|keys
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|pdu
modifier|*
name|pdu_new
parameter_list|(
name|struct
name|connection
modifier|*
name|conn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|pdu
modifier|*
name|pdu_new_response
parameter_list|(
name|struct
name|pdu
modifier|*
name|request
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|pdu_delete
parameter_list|(
name|struct
name|pdu
modifier|*
name|pdu
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|pdu_receive
parameter_list|(
name|struct
name|pdu
modifier|*
name|request
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|pdu_send
parameter_list|(
name|struct
name|pdu
modifier|*
name|response
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|login
parameter_list|(
name|struct
name|connection
modifier|*
name|conn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|discovery
parameter_list|(
name|struct
name|connection
modifier|*
name|conn
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|log_init
parameter_list|(
name|int
name|level
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|log_set_peer_name
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|log_set_peer_addr
parameter_list|(
specifier|const
name|char
modifier|*
name|addr
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|void
name|log_err
argument_list|(
name|int
argument_list|,
specifier|const
name|char
operator|*
argument_list|,
operator|...
argument_list|)
name|__dead2
name|__printflike
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|void
name|log_errx
argument_list|(
name|int
argument_list|,
specifier|const
name|char
operator|*
argument_list|,
operator|...
argument_list|)
name|__dead2
name|__printflike
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|log_warn
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|1
operator|,
function_decl|2
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|void
name|log_warnx
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|1
operator|,
function_decl|2
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|void
name|log_debugx
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|__printflike
parameter_list|(
function_decl|1
operator|,
function_decl|2
end_function_decl

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_function_decl
name|char
modifier|*
name|checked_strdup
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|valid_iscsi_name
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|set_timeout
parameter_list|(
name|int
name|timeout
parameter_list|,
name|int
name|fatal
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|bool
name|timed_out
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* !CTLD_H */
end_comment

end_unit

