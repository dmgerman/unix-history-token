begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*-  * Copyright (c) 2014 Alexander Motin<mav@FreeBSD.org>  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  *  * $FreeBSD$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_ISNS_H
end_ifndef

begin_define
define|#
directive|define
name|_ISNS_H
end_define

begin_define
define|#
directive|define
name|ISNS_VERSION
value|0x0001
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_DEVATTRREG
value|0x0001
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_DEVATTRQRY
value|0x0002
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_DEVGETNEXT
value|0x0003
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_DEVDEREG
value|0x0004
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_SCNREG
value|0x0005
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_SCNDEREG
value|0x0006
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_SCNEVENT
value|0x0007
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_SCN
value|0x0008
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_DDREG
value|0x0009
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_DDDEREG
value|0x000a
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_DDSREG
value|0x000b
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_DDSDEREG
value|0x000c
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_ESI
value|0x000d
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_HEARTBEAT
value|0x000e
end_define

begin_define
define|#
directive|define
name|ISNS_FUNC_RESPONSE
value|0x8000
end_define

begin_define
define|#
directive|define
name|ISNS_FLAG_CLIENT
value|0x8000
end_define

begin_define
define|#
directive|define
name|ISNS_FLAG_SERVER
value|0x4000
end_define

begin_define
define|#
directive|define
name|ISNS_FLAG_AUTH
value|0x2000
end_define

begin_define
define|#
directive|define
name|ISNS_FLAG_REPLACE
value|0x1000
end_define

begin_define
define|#
directive|define
name|ISNS_FLAG_LAST
value|0x0800
end_define

begin_define
define|#
directive|define
name|ISNS_FLAG_FIRST
value|0x0400
end_define

begin_struct
struct|struct
name|isns_hdr
block|{
name|uint8_t
name|ih_version
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|ih_function
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|ih_length
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|ih_flags
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|ih_transaction
index|[
literal|2
index|]
decl_stmt|;
name|uint8_t
name|ih_sequence
index|[
literal|2
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|isns_tlv
block|{
name|uint8_t
name|it_tag
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|it_length
index|[
literal|4
index|]
decl_stmt|;
name|uint8_t
name|it_value
index|[]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|isns_req
block|{
name|u_int
name|ir_buflen
decl_stmt|;
name|u_int
name|ir_usedlen
decl_stmt|;
name|uint8_t
modifier|*
name|ir_buf
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|struct
name|isns_req
modifier|*
name|isns_req_alloc
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|isns_req
modifier|*
name|isns_req_create
parameter_list|(
name|uint16_t
name|func
parameter_list|,
name|uint16_t
name|flags
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|isns_req_free
parameter_list|(
name|struct
name|isns_req
modifier|*
name|req
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|isns_req_add
parameter_list|(
name|struct
name|isns_req
modifier|*
name|req
parameter_list|,
name|uint32_t
name|tag
parameter_list|,
name|uint32_t
name|len
parameter_list|,
specifier|const
name|void
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|isns_req_add_delim
parameter_list|(
name|struct
name|isns_req
modifier|*
name|req
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|isns_req_add_str
parameter_list|(
name|struct
name|isns_req
modifier|*
name|req
parameter_list|,
name|uint32_t
name|tag
parameter_list|,
specifier|const
name|char
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|isns_req_add_32
parameter_list|(
name|struct
name|isns_req
modifier|*
name|req
parameter_list|,
name|uint32_t
name|tag
parameter_list|,
name|uint32_t
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|isns_req_add_addr
parameter_list|(
name|struct
name|isns_req
modifier|*
name|req
parameter_list|,
name|uint32_t
name|tag
parameter_list|,
name|struct
name|addrinfo
modifier|*
name|ai
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|isns_req_add_port
parameter_list|(
name|struct
name|isns_req
modifier|*
name|req
parameter_list|,
name|uint32_t
name|tag
parameter_list|,
name|struct
name|addrinfo
modifier|*
name|ai
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|isns_req_send
parameter_list|(
name|int
name|s
parameter_list|,
name|struct
name|isns_req
modifier|*
name|req
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|isns_req_receive
parameter_list|(
name|int
name|s
parameter_list|,
name|struct
name|isns_req
modifier|*
name|req
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|uint32_t
name|isns_req_get_status
parameter_list|(
name|struct
name|isns_req
modifier|*
name|req
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _ISNS_H */
end_comment

end_unit

