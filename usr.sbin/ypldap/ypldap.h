begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$OpenBSD: ypldap.h,v 1.16 2015/01/16 06:40:22 deraadt Exp $ */
end_comment

begin_comment
comment|/*	$FreeBSD$ */
end_comment

begin_comment
comment|/*  * Copyright (c) 2008 Pierre-Yves Ritschard<pyr@openbsd.org>  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  */
end_comment

begin_include
include|#
directive|include
file|<imsg.h>
end_include

begin_define
define|#
directive|define
name|YPLDAP_USER
value|"_ypldap"
end_define

begin_define
define|#
directive|define
name|YPLDAP_CONF_FILE
value|"/etc/ypldap.conf"
end_define

begin_define
define|#
directive|define
name|DEFAULT_INTERVAL
value|600
end_define

begin_define
define|#
directive|define
name|LINE_WIDTH
value|1024
end_define

begin_define
define|#
directive|define
name|FILTER_WIDTH
value|128
end_define

begin_define
define|#
directive|define
name|ATTR_WIDTH
value|32
end_define

begin_define
define|#
directive|define
name|MAX_SERVERS_DNS
value|8
end_define

begin_enum
enum|enum
name|imsg_type
block|{
name|IMSG_NONE
block|,
name|IMSG_CONF_START
block|,
name|IMSG_CONF_IDM
block|,
name|IMSG_CONF_END
block|,
name|IMSG_START_UPDATE
block|,
name|IMSG_END_UPDATE
block|,
name|IMSG_TRASH_UPDATE
block|,
name|IMSG_PW_ENTRY
block|,
name|IMSG_GRP_ENTRY
block|,
name|IMSG_HOST_DNS
block|}
enum|;
end_enum

begin_struct
struct|struct
name|ypldap_addr
block|{
name|struct
name|ypldap_addr
modifier|*
name|next
decl_stmt|;
name|struct
name|sockaddr_storage
name|ss
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
block|{
name|PROC_MAIN
block|,
name|PROC_CLIENT
block|}
name|ypldap_process
enum|;
end_enum

begin_struct
struct|struct
name|userent
block|{
name|RB_ENTRY
argument_list|(
argument|userent
argument_list|)
name|ue_name_node
expr_stmt|;
name|RB_ENTRY
argument_list|(
argument|userent
argument_list|)
name|ue_uid_node
expr_stmt|;
name|uid_t
name|ue_uid
decl_stmt|;
name|char
modifier|*
name|ue_line
decl_stmt|;
name|char
modifier|*
name|ue_netid_line
decl_stmt|;
name|gid_t
name|ue_gid
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|groupent
block|{
name|RB_ENTRY
argument_list|(
argument|groupent
argument_list|)
name|ge_name_node
expr_stmt|;
name|RB_ENTRY
argument_list|(
argument|groupent
argument_list|)
name|ge_gid_node
expr_stmt|;
name|gid_t
name|ge_gid
decl_stmt|;
name|char
modifier|*
name|ge_line
decl_stmt|;
block|}
struct|;
end_struct

begin_enum
enum|enum
name|client_state
block|{
name|STATE_NONE
block|,
name|STATE_DNS_INPROGRESS
block|,
name|STATE_DNS_TEMPFAIL
block|,
name|STATE_DNS_DONE
block|,
name|STATE_LDAP_FAIL
block|,
name|STATE_LDAP_DONE
block|}
enum|;
end_enum

begin_comment
comment|/*  * beck, djm, dlg: pay attention to the struct name  */
end_comment

begin_struct
struct|struct
name|idm
block|{
name|TAILQ_ENTRY
argument_list|(
argument|idm
argument_list|)
name|idm_entry
expr_stmt|;
name|u_int32_t
name|idm_id
decl_stmt|;
name|char
name|idm_name
index|[
name|MAXHOSTNAMELEN
index|]
decl_stmt|;
define|#
directive|define
name|F_SSL
value|0x00100000
define|#
directive|define
name|F_CONFIGURING
value|0x00200000
define|#
directive|define
name|F_NEEDAUTH
value|0x00400000
define|#
directive|define
name|F_FIXED_ATTR
parameter_list|(
name|n
parameter_list|)
value|(1<<n)
define|#
directive|define
name|F_LIST
parameter_list|(
name|n
parameter_list|)
value|(1<<n)
name|enum
name|client_state
name|idm_state
decl_stmt|;
name|u_int32_t
name|idm_flags
decl_stmt|;
comment|/* lower 20 reserved */
name|u_int32_t
name|idm_list
decl_stmt|;
name|struct
name|ypldap_addr
modifier|*
name|idm_addr
decl_stmt|;
name|in_port_t
name|idm_port
decl_stmt|;
name|char
name|idm_binddn
index|[
name|LINE_WIDTH
index|]
decl_stmt|;
name|char
name|idm_bindcred
index|[
name|LINE_WIDTH
index|]
decl_stmt|;
name|char
name|idm_basedn
index|[
name|LINE_WIDTH
index|]
decl_stmt|;
name|char
name|idm_groupdn
index|[
name|LINE_WIDTH
index|]
decl_stmt|;
define|#
directive|define
name|FILTER_USER
value|1
define|#
directive|define
name|FILTER_GROUP
value|0
name|char
name|idm_filters
index|[
literal|2
index|]
index|[
name|FILTER_WIDTH
index|]
decl_stmt|;
define|#
directive|define
name|ATTR_NAME
value|0
define|#
directive|define
name|ATTR_PASSWD
value|1
define|#
directive|define
name|ATTR_UID
value|2
define|#
directive|define
name|ATTR_GID
value|3
define|#
directive|define
name|ATTR_CLASS
value|4
define|#
directive|define
name|ATTR_CHANGE
value|5
define|#
directive|define
name|ATTR_EXPIRE
value|6
define|#
directive|define
name|ATTR_GECOS
value|7
define|#
directive|define
name|ATTR_DIR
value|8
define|#
directive|define
name|ATTR_SHELL
value|9
define|#
directive|define
name|ATTR_GR_NAME
value|10
define|#
directive|define
name|ATTR_GR_PASSWD
value|11
define|#
directive|define
name|ATTR_GR_GID
value|12
define|#
directive|define
name|ATTR_GR_MEMBERS
value|13
define|#
directive|define
name|ATTR_MAX
value|10
define|#
directive|define
name|ATTR_GR_MIN
value|10
define|#
directive|define
name|ATTR_GR_MAX
value|14
name|char
name|idm_attrs
index|[
literal|14
index|]
index|[
name|ATTR_WIDTH
index|]
decl_stmt|;
name|struct
name|env
modifier|*
name|idm_env
decl_stmt|;
name|struct
name|event
name|idm_ev
decl_stmt|;
ifdef|#
directive|ifdef
name|SSL
name|struct
name|ssl
modifier|*
name|idm_ssl
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct

begin_struct
struct|struct
name|idm_req
block|{
union|union
block|{
name|uid_t
name|ik_uid
decl_stmt|;
name|uid_t
name|ik_gid
decl_stmt|;
block|}
name|ir_key
union|;
name|char
name|ir_line
index|[
name|LINE_WIDTH
index|]
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|imsgev
block|{
name|struct
name|imsgbuf
name|ibuf
decl_stmt|;
name|void
function_decl|(
modifier|*
name|handler
function_decl|)
parameter_list|(
name|int
parameter_list|,
name|short
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|struct
name|event
name|ev
decl_stmt|;
name|void
modifier|*
name|data
decl_stmt|;
name|short
name|events
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|env
block|{
define|#
directive|define
name|YPLDAP_OPT_VERBOSE
value|0x01
define|#
directive|define
name|YPLDAP_OPT_NOACTION
value|0x02
name|u_int8_t
name|sc_opts
decl_stmt|;
define|#
directive|define
name|YPMAP_PASSWD_BYNAME
value|0x00000001
define|#
directive|define
name|YPMAP_PASSWD_BYUID
value|0x00000002
define|#
directive|define
name|YPMAP_MASTER_PASSWD_BYNAME
value|0x00000004
define|#
directive|define
name|YPMAP_MASTER_PASSWD_BYUID
value|0x00000008
define|#
directive|define
name|YPMAP_GROUP_BYNAME
value|0x00000010
define|#
directive|define
name|YPMAP_GROUP_BYGID
value|0x00000020
define|#
directive|define
name|YPMAP_NETID_BYNAME
value|0x00000040
name|u_int32_t
name|sc_flags
decl_stmt|;
name|u_int32_t
name|sc_maxid
decl_stmt|;
name|char
name|sc_domainname
index|[
name|MAXHOSTNAMELEN
index|]
decl_stmt|;
name|struct
name|timeval
name|sc_conf_tv
decl_stmt|;
name|struct
name|event
name|sc_conf_ev
decl_stmt|;
name|TAILQ_HEAD
argument_list|(
argument|idm_list
argument_list|,
argument|idm
argument_list|)
name|sc_idms
expr_stmt|;
name|struct
name|imsgev
modifier|*
name|sc_iev
decl_stmt|;
name|struct
name|imsgev
modifier|*
name|sc_iev_dns
decl_stmt|;
name|RB_HEAD
argument_list|(
name|user_name_tree
argument_list|,
name|userent
argument_list|)
operator|*
name|sc_user_names
expr_stmt|;
name|RB_HEAD
argument_list|(
argument|user_uid_tree
argument_list|,
argument|userent
argument_list|)
name|sc_user_uids
expr_stmt|;
name|RB_HEAD
argument_list|(
name|group_name_tree
argument_list|,
name|groupent
argument_list|)
operator|*
name|sc_group_names
expr_stmt|;
name|RB_HEAD
argument_list|(
argument|group_gid_tree
argument_list|,
argument|groupent
argument_list|)
name|sc_group_gids
expr_stmt|;
name|struct
name|user_name_tree
modifier|*
name|sc_user_names_t
decl_stmt|;
name|struct
name|group_name_tree
modifier|*
name|sc_group_names_t
decl_stmt|;
name|size_t
name|sc_user_line_len
decl_stmt|;
name|size_t
name|sc_group_line_len
decl_stmt|;
name|char
modifier|*
name|sc_user_lines
decl_stmt|;
name|char
modifier|*
name|sc_group_lines
decl_stmt|;
name|struct
name|yp_data
modifier|*
name|sc_yp
decl_stmt|;
name|int
name|update_trashed
decl_stmt|;
block|}
struct|;
end_struct

begin_comment
comment|/* log.c */
end_comment

begin_function_decl
name|void
name|log_init
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|log_warn
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|log_warnx
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|log_info
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|log_debug
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|logit
parameter_list|(
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|vlog
parameter_list|(
name|int
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|va_list
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|__dead
name|void
name|fatal
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|__dead
name|void
name|fatalx
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* parse.y */
end_comment

begin_function_decl
name|int
name|parse_config
parameter_list|(
name|struct
name|env
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|cmdline_symset
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* ldapclient.c */
end_comment

begin_function_decl
name|pid_t
name|ldapclient
parameter_list|(
name|int
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* ypldap.c */
end_comment

begin_function_decl
name|void
name|purge_config
parameter_list|(
name|struct
name|env
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|imsg_event_add
parameter_list|(
name|struct
name|imsgev
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|imsg_compose_event
parameter_list|(
name|struct
name|imsgev
modifier|*
parameter_list|,
name|u_int16_t
parameter_list|,
name|u_int32_t
parameter_list|,
name|pid_t
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|u_int16_t
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* entries.c */
end_comment

begin_function_decl
name|void
name|flatten_entries
parameter_list|(
name|struct
name|env
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|userent_name_cmp
parameter_list|(
name|struct
name|userent
modifier|*
parameter_list|,
name|struct
name|userent
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|userent_uid_cmp
parameter_list|(
name|struct
name|userent
modifier|*
parameter_list|,
name|struct
name|userent
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|groupent_name_cmp
parameter_list|(
name|struct
name|groupent
modifier|*
parameter_list|,
name|struct
name|groupent
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|groupent_gid_cmp
parameter_list|(
name|struct
name|groupent
modifier|*
parameter_list|,
name|struct
name|groupent
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_expr_stmt
name|RB_PROTOTYPE
argument_list|(
name|user_name_tree
argument_list|,
name|userent
argument_list|,
name|ue_name_node
argument_list|,
name|userent_name_cmp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RB_PROTOTYPE
argument_list|(
name|user_uid_tree
argument_list|,
name|userent
argument_list|,
name|ue_uid_node
argument_list|,
name|userent_uid_cmp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RB_PROTOTYPE
argument_list|(
name|group_name_tree
argument_list|,
name|groupent
argument_list|,
name|ge_name_node
argument_list|,
name|groupent_name_cmp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|RB_PROTOTYPE
argument_list|(
name|group_gid_tree
argument_list|,
name|groupent
argument_list|,
name|ge_gid_node
argument_list|,
name|groupent_gid_cmp
argument_list|)
expr_stmt|;
end_expr_stmt

begin_comment
comment|/* yp.c */
end_comment

begin_function_decl
name|void
name|yp_init
parameter_list|(
name|struct
name|env
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|yp_enable_events
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* ypldap_dns.c */
end_comment

begin_function_decl
name|pid_t
name|ypldap_dns
parameter_list|(
name|int
index|[
literal|2
index|]
parameter_list|,
name|struct
name|passwd
modifier|*
parameter_list|)
function_decl|;
end_function_decl

end_unit

