begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$OpenBSD: ber.h,v 1.2 2008/12/29 15:48:13 aschrijver Exp $ */
end_comment

begin_comment
comment|/*	$FreeBSD$ */
end_comment

begin_comment
comment|/*  * Copyright (c) 2007 Reyk Floeter<reyk@vantronix.net>  * Copyright (c) 2006, 2007 Claudio Jeker<claudio@openbsd.org>  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  */
end_comment

begin_struct
struct|struct
name|ber_element
block|{
name|struct
name|ber_element
modifier|*
name|be_next
decl_stmt|;
name|unsigned
name|long
name|be_type
decl_stmt|;
name|unsigned
name|long
name|be_encoding
decl_stmt|;
name|size_t
name|be_len
decl_stmt|;
name|int
name|be_free
decl_stmt|;
name|u_int8_t
name|be_class
decl_stmt|;
union|union
block|{
name|struct
name|ber_element
modifier|*
name|bv_sub
decl_stmt|;
name|void
modifier|*
name|bv_val
decl_stmt|;
name|long
name|long
name|bv_numeric
decl_stmt|;
block|}
name|be_union
union|;
define|#
directive|define
name|be_sub
value|be_union.bv_sub
define|#
directive|define
name|be_val
value|be_union.bv_val
define|#
directive|define
name|be_numeric
value|be_union.bv_numeric
block|}
struct|;
end_struct

begin_struct
struct|struct
name|ber
block|{
name|int
name|fd
decl_stmt|;
name|u_char
modifier|*
name|br_wbuf
decl_stmt|;
name|u_char
modifier|*
name|br_wptr
decl_stmt|;
name|u_char
modifier|*
name|br_wend
decl_stmt|;
name|u_char
modifier|*
name|br_rbuf
decl_stmt|;
name|u_char
modifier|*
name|br_rptr
decl_stmt|;
name|u_char
modifier|*
name|br_rend
decl_stmt|;
name|unsigned
name|long
function_decl|(
modifier|*
name|br_application
function_decl|)
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_comment
comment|/* well-known ber_element types */
end_comment

begin_define
define|#
directive|define
name|BER_TYPE_DEFAULT
value|((unsigned long)-1)
end_define

begin_define
define|#
directive|define
name|BER_TYPE_EOC
value|0
end_define

begin_define
define|#
directive|define
name|BER_TYPE_BOOLEAN
value|1
end_define

begin_define
define|#
directive|define
name|BER_TYPE_INTEGER
value|2
end_define

begin_define
define|#
directive|define
name|BER_TYPE_BITSTRING
value|3
end_define

begin_define
define|#
directive|define
name|BER_TYPE_OCTETSTRING
value|4
end_define

begin_define
define|#
directive|define
name|BER_TYPE_NULL
value|5
end_define

begin_define
define|#
directive|define
name|BER_TYPE_OBJECT
value|6
end_define

begin_define
define|#
directive|define
name|BER_TYPE_ENUMERATED
value|10
end_define

begin_define
define|#
directive|define
name|BER_TYPE_SEQUENCE
value|16
end_define

begin_define
define|#
directive|define
name|BER_TYPE_SET
value|17
end_define

begin_comment
comment|/* ber classes */
end_comment

begin_define
define|#
directive|define
name|BER_CLASS_UNIVERSAL
value|0x0
end_define

begin_define
define|#
directive|define
name|BER_CLASS_UNIV
value|BER_CLASS_UNIVERSAL
end_define

begin_define
define|#
directive|define
name|BER_CLASS_APPLICATION
value|0x1
end_define

begin_define
define|#
directive|define
name|BER_CLASS_APP
value|BER_CLASS_APPLICATION
end_define

begin_define
define|#
directive|define
name|BER_CLASS_CONTEXT
value|0x2
end_define

begin_define
define|#
directive|define
name|BER_CLASS_PRIVATE
value|0x3
end_define

begin_define
define|#
directive|define
name|BER_CLASS_MASK
value|0x3
end_define

begin_comment
comment|/* common definitions */
end_comment

begin_define
define|#
directive|define
name|BER_MIN_OID_LEN
value|2
end_define

begin_comment
comment|/* OBJECT */
end_comment

begin_define
define|#
directive|define
name|BER_MAX_OID_LEN
value|32
end_define

begin_comment
comment|/* OBJECT */
end_comment

begin_struct
struct|struct
name|ber_oid
block|{
name|u_int32_t
name|bo_id
index|[
name|BER_MAX_OID_LEN
operator|+
literal|1
index|]
decl_stmt|;
name|size_t
name|bo_n
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|__BEGIN_DECLS
name|struct
name|ber_element
modifier|*
name|ber_get_element
parameter_list|(
name|unsigned
name|long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ber_set_header
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|int
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ber_link_elements
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_unlink_elements
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ber_replace_elements
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_sequence
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_set
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_integer
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|long
name|long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ber_get_integer
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|long
name|long
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_enumerated
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|long
name|long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ber_get_enumerated
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|long
name|long
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_boolean
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ber_get_boolean
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_string
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_nstring
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ber_get_string
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ber_get_nstring
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|void
modifier|*
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_bitstring
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ber_get_bitstring
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|void
modifier|*
modifier|*
parameter_list|,
name|size_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_null
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ber_get_null
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_eoc
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ber_get_eoc
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_oid
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|struct
name|ber_oid
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_noid
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|struct
name|ber_oid
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_add_oidstring
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ber_get_oid
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|struct
name|ber_oid
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|ber_oid2ber
parameter_list|(
name|struct
name|ber_oid
modifier|*
parameter_list|,
name|u_int8_t
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ber_string2oid
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
name|struct
name|ber_oid
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_printf_elements
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ber_scanf_elements
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ssize_t
name|ber_get_writebuf
parameter_list|(
name|struct
name|ber
modifier|*
parameter_list|,
name|void
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ber_write_elements
parameter_list|(
name|struct
name|ber
modifier|*
parameter_list|,
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ber_set_readbuf
parameter_list|(
name|struct
name|ber
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|,
name|size_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|ber_element
modifier|*
name|ber_read_elements
parameter_list|(
name|struct
name|ber
modifier|*
parameter_list|,
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ber_free_elements
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|size_t
name|ber_calc_len
parameter_list|(
name|struct
name|ber_element
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
name|void
name|ber_set_application
argument_list|(
expr|struct
name|ber
operator|*
argument_list|,
name|unsigned
name|long
argument_list|(
operator|*
argument_list|)
argument_list|(
expr|struct
name|ber_element
operator|*
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|ber_free
parameter_list|(
name|struct
name|ber
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|__END_DECLS
end_macro

end_unit

